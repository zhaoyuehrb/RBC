%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCGCGCCGCGGGGUGAGCGGCGCCGGGCCUGAGGUCGCCCAGACGCCGUCGGGGCGGAGCCGGGUCGCGAGGCUGCAUCCCGGCCGGCGGUUCCGGAGCCUCGCGGCUGGGGAGGCGCGGCCCGGGACGCUCGAGCUUAGGGAGAUCUGCCUUCUGGAGACUGCGCCGUCCUCCCGGGAGAGCCAGAAAGAGGAC\
) } def
/len { sequence length } bind def

/coor [
[89.06221008 107.46957397]
[74.06267548 107.35117340]
[59.06314087 107.23277283]
[44.06361008 107.11437225]
[31.82870483 119.61087036]
[14.67892742 119.40139771]
[3.21364331 107.10353851]
[-11.78588963 107.22193909]
[-26.78542137 107.34033966]
[-41.78495407 107.45874023]
[-56.78448868 107.57714081]
[-71.78028107 107.93231201]
[-86.76860046 108.52416229]
[-101.75691986 109.11602020]
[-116.74523926 109.70787048]
[-131.73355103 110.29972839]
[-146.72187805 110.89158630]
[-161.71018982 111.48343658]
[-176.69337463 112.19358063]
[-191.67048645 113.02197266]
[-206.64759827 113.85036469]
[-217.16206360 125.34313202]
[-232.36277771 125.96987915]
[-243.25457764 115.87511444]
[-258.23168945 116.70350647]
[-273.20880127 117.53189087]
[-278.95654297 120.83106995]
[-284.65118408 120.73872375]
[-288.67034912 118.14243317]
[-303.66613770 118.49760437]
[-318.66192627 118.85278320]
[-333.65771484 119.20795441]
[-348.65350342 119.56312561]
[-363.64929199 119.91829681]
[-372.51419067 132.51670837]
[-386.92910767 137.42214966]
[-401.29852295 132.95182800]
[-410.17404175 121.02022552]
[-425.16983032 121.37539673]
[-440.16564941 121.73056793]
[-455.16143799 122.08573914]
[-470.15722656 122.44091034]
[-485.15301514 122.79608154]
[-498.76611328 130.85797119]
[-511.67303467 123.42420197]
[-526.66882324 123.77937317]
[-541.66461182 124.13454437]
[-557.35614014 130.55422974]
[-567.86877441 117.25308228]
[-557.99761963 103.46914673]
[-542.01977539 109.13875580]
[-527.02398682 108.78358459]
[-512.02819824 108.42841339]
[-499.48770142 100.39192200]
[-485.50817871 107.80029297]
[-470.51239014 107.44511414]
[-455.51660156 107.08994293]
[-440.52081299 106.73477173]
[-425.52502441 106.37960052]
[-410.52920532 106.02442932]
[-402.22854614 93.68600464]
[-388.08685303 88.54040527]
[-373.45587158 92.75790405]
[-364.00448608 104.92250061]
[-349.00869751 104.56732941]
[-334.01287842 104.21215820]
[-319.01708984 103.85698700]
[-304.02130127 103.50181580]
[-289.02551270 103.14664459]
[-274.03720093 102.55478668]
[-259.06008911 101.72639465]
[-244.08297729 100.89800262]
[-234.37089539 89.66362762]
[-219.19378662 88.61016846]
[-207.47598267 98.87326050]
[-192.49887085 98.04486847]
[-177.52177429 97.21647644]
[-171.01036072 93.70467377]
[-162.30204773 96.49511719]
[-147.31373596 95.90326691]
[-132.32540894 95.31140900]
[-117.33709717 94.71955872]
[-102.34877777 94.12770081]
[-87.36045837 93.53584290]
[-72.37213898 92.94399261]
[-68.52484131 90.09925079]
[-62.84737778 89.64771271]
[-56.90288925 92.57760620]
[-41.90335464 92.45920563]
[-26.90382195 92.34080505]
[-11.90429020 92.22240448]
[3.09524298 92.10400391]
[10.76504421 81.74299622]
[23.18838692 77.63286591]
[35.89672089 81.48813629]
[44.18201065 92.11483765]
[59.18154144 92.23323822]
[74.18107605 92.35163879]
[89.18061066 92.47003937]
[98.68531799 87.10838318]
[108.76914215 90.76492310]
[123.52262115 88.05661774]
[138.25425720 85.23194122]
[152.96315002 82.29107666]
[167.67202759 79.35020447]
[179.68740845 69.05743408]
[193.68463135 74.14928436]
[208.39352417 71.20841980]
[223.10240173 68.26754761]
[228.32505798 64.18770599]
[233.97538757 63.47274399]
[238.32168579 65.47373962]
[253.11607361 62.99867249]
[267.91046143 60.52360535]
[282.70486450 58.04854202]
[297.49926758 55.57347488]
[312.27365112 52.98170853]
[327.02713013 50.27340317]
[341.78060913 47.56510162]
[356.53408813 44.85679626]
[371.28756714 42.14849091]
[386.04104614 39.44018555]
[400.79452515 36.73188019]
[415.52871704 22.98387909]
[433.44976807 30.22984505]
[448.11041260 27.05714607]
[462.77102661 23.88444519]
[477.43164062 20.71174431]
[492.09228516 17.53904343]
[506.75289917 14.36634159]
[518.60430908 3.88517618]
[532.68017578 8.75543213]
[547.34082031 5.58273172]
[554.97387695 -4.82227230]
[567.25726318 -7.15891218]
[577.49847412 -0.70968211]
[592.20733643 -3.65055132]
[604.22271729 -13.94332218]
[618.21997070 -8.85146809]
[632.92883301 -11.79233646]
[647.63775635 -14.73320580]
[661.98400879 -23.76758766]
[674.63677979 -12.48291397]
[667.29577637 2.79928493]
[650.57861328 -0.02432148]
[635.86975098 2.91654778]
[621.16082764 5.85741711]
[610.19750977 15.93983746]
[595.14825439 11.05833340]
[580.43933105 13.99920273]
[567.90631104 26.27697563]
[550.51348877 20.24335861]
[535.85284424 23.41605949]
[525.05010986 33.67029190]
[509.92559814 29.02696800]
[495.26498413 32.19966888]
[480.60433960 35.37237167]
[465.94372559 38.54507065]
[451.28311157 41.71777344]
[436.62246704 44.89047241]
[431.87689209 53.95343781]
[422.73168945 59.00975037]
[412.09472656 58.17541885]
[403.50280762 51.48535919]
[388.74932861 54.19366455]
[373.99584961 56.90196609]
[359.24240112 59.61027145]
[344.48892212 62.31857681]
[329.73544312 65.02687836]
[314.98196411 67.73518372]
[308.96475220 72.03919220]
[299.97433472 70.36786652]
[285.17993164 72.84293365]
[270.38552856 75.31800079]
[255.59114075 77.79306030]
[240.79675293 80.26812744]
[226.04327393 82.97643280]
[211.33439636 85.91730499]
[196.62550354 88.85816956]
[185.66220093 98.94058990]
[170.61289978 94.05908966]
[155.90400696 96.99995422]
[141.19512939 99.94082642]
[135.24662781 104.33928680]
[126.23092651 102.81009674]
[111.47744751 105.51840210]
[125.16065216 111.66412354]
[135.31523132 122.70425415]
[140.29812622 136.85243225]
[139.30307007 151.81938171]
[132.49105835 165.18339539]
[120.96432495 174.78205872]
[106.58796692 179.06228638]
[91.68815613 177.33148193]
[78.67577362 169.86972046]
[69.65629578 157.88435364]
[66.08913422 143.31468201]
[68.55146790 128.51817322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[7 92]
[8 91]
[9 90]
[10 89]
[11 88]
[12 85]
[13 84]
[14 83]
[15 82]
[16 81]
[17 80]
[18 79]
[19 77]
[20 76]
[21 75]
[24 72]
[25 71]
[26 70]
[29 69]
[30 68]
[31 67]
[32 66]
[33 65]
[34 64]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[45 53]
[46 52]
[47 51]
[101 186]
[102 185]
[103 183]
[104 182]
[105 181]
[107 179]
[108 178]
[109 177]
[112 176]
[113 175]
[114 174]
[115 173]
[116 172]
[117 170]
[118 169]
[119 168]
[120 167]
[121 166]
[122 165]
[123 164]
[125 160]
[126 159]
[127 158]
[128 157]
[129 156]
[130 155]
[132 153]
[133 152]
[136 150]
[137 149]
[139 147]
[140 146]
[141 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
