%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CMIP)
} def

/sequence { (\
GGGGGCCCCGCCGCCCCAGCAGCCCAGGACAGCCCCCUCUCCCCGCCCCCAGCCCCCUCCCCCGGCGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.007638099 ubox
1 37 0.994322844 ubox
1 38 0.010905268 ubox
1 39 0.008641856 ubox
1 44 0.004020911 ubox
1 50 0.085147335 ubox
1 57 0.005137884 ubox
2 17 0.016878010 ubox
2 35 0.007331643 ubox
2 36 0.996057936 ubox
2 37 0.012133818 ubox
2 43 0.003793629 ubox
2 49 0.085212554 ubox
2 56 0.005146802 ubox
3 16 0.016945111 ubox
3 34 0.006981471 ubox
3 35 0.996089142 ubox
3 36 0.010676782 ubox
3 42 0.003495116 ubox
3 48 0.085213355 ubox
3 55 0.005146963 ubox
4 12 0.003631635 ubox
4 15 0.016983124 ubox
4 33 0.006606357 ubox
4 34 0.996109876 ubox
4 35 0.008967619 ubox
4 41 0.003220353 ubox
4 47 0.085213240 ubox
4 54 0.005147014 ubox
5 11 0.003762122 ubox
5 14 0.017014131 ubox
5 33 0.996128605 ubox
5 34 0.006832422 ubox
5 46 0.085211622 ubox
5 53 0.005146658 ubox
5 71 0.003164489 ubox
6 10 0.003736934 ubox
6 13 0.017014020 ubox
6 28 0.024372745 ubox
6 32 0.995251707 ubox
6 45 0.085039084 ubox
6 52 0.005134460 ubox
6 70 0.003164680 ubox
7 27 0.035691607 ubox
7 28 0.670160724 ubox
8 27 0.670199901 ubox
8 28 0.726775969 ubox
9 27 0.726770351 ubox
10 20 0.019850820 ubox
10 23 0.951270410 ubox
10 66 0.003163921 ubox
11 19 0.019840663 ubox
11 22 0.951487401 ubox
11 28 0.103195911 ubox
11 65 0.003163947 ubox
12 27 0.103183610 ubox
12 64 0.003163276 ubox
13 20 0.953016025 ubox
13 23 0.282126742 ubox
14 19 0.950766726 ubox
14 22 0.282114462 ubox
14 28 0.005577934 ubox
15 27 0.005566651 ubox
22 33 0.003203359 ubox
22 46 0.004011702 ubox
22 71 0.004984706 ubox
23 32 0.003211129 ubox
23 45 0.004016421 ubox
23 70 0.004975579 ubox
24 69 0.004909007 ubox
26 38 0.029642347 ubox
26 40 0.003385366 ubox
27 34 0.013246057 ubox
27 35 0.014245399 ubox
27 36 0.018280397 ubox
27 37 0.031583329 ubox
27 38 0.003301201 ubox
27 39 0.003523873 ubox
27 40 0.008205504 ubox
27 42 0.071742948 ubox
27 43 0.008917154 ubox
27 44 0.016269701 ubox
28 33 0.013235855 ubox
28 34 0.014267066 ubox
28 35 0.018429468 ubox
28 36 0.031466760 ubox
28 37 0.004119748 ubox
28 39 0.008947395 ubox
28 41 0.072000488 ubox
28 42 0.008322883 ubox
28 43 0.016252145 ubox
29 38 0.008835264 ubox
29 40 0.070970864 ubox
31 38 0.068191431 ubox
31 40 0.015846545 ubox
32 37 0.068621555 ubox
32 39 0.016432537 ubox
38 70 0.004237865 ubox
39 69 0.005216947 ubox
39 70 0.015885697 ubox
40 69 0.015229566 ubox
40 70 0.013306883 ubox
41 69 0.017121540 ubox
41 70 0.300241035 ubox
42 69 0.303162573 ubox
42 70 0.355063910 ubox
43 65 0.003222260 ubox
43 69 0.356806888 ubox
43 70 0.718375482 ubox
44 64 0.003241010 ubox
44 67 0.468747377 ubox
44 69 0.725308351 ubox
45 53 0.006819220 ubox
45 63 0.003162372 ubox
45 66 0.469299106 ubox
45 68 0.726192257 ubox
45 71 0.477853028 ubox
46 52 0.006839350 ubox
46 65 0.468753386 ubox
46 67 0.725870233 ubox
46 70 0.477270835 ubox
47 64 0.467402221 ubox
47 65 0.368489130 ubox
47 69 0.475129647 ubox
47 70 0.051886511 ubox
48 64 0.368265780 ubox
48 65 0.360955495 ubox
48 69 0.063535996 ubox
48 70 0.051425710 ubox
49 64 0.360097615 ubox
49 65 0.128028482 ubox
49 69 0.052272295 ubox
49 70 0.078355167 ubox
50 64 0.130573944 ubox
50 69 0.079362377 ubox
51 58 0.216139717 ubox
52 57 0.220000304 ubox
52 66 0.651939632 ubox
52 68 0.242064006 ubox
52 71 0.103988431 ubox
53 65 0.649143547 ubox
53 67 0.242114348 ubox
53 70 0.104191857 ubox
54 64 0.645195890 ubox
54 65 0.205178028 ubox
54 69 0.104072866 ubox
54 70 0.004683383 ubox
55 64 0.214045167 ubox
55 65 0.133005059 ubox
55 69 0.005544049 ubox
56 64 0.132671667 ubox
56 65 0.119174222 ubox
57 64 0.120274615 ubox
57 65 0.011436445 ubox
58 64 0.010700479 ubox
58 65 0.011396183 ubox
59 64 0.013273230 ubox
59 65 0.024495666 ubox
60 64 0.024412433 ubox
62 70 0.006498346 ubox
63 69 0.006562711 ubox
64 68 0.006156006 ubox
64 72 0.009976367 ubox
65 71 0.010052586 ubox
66 70 0.009980616 ubox
1 37 0.9500000 lbox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
43 70 0.9500000 lbox
44 69 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
showpage
end
%%EOF
