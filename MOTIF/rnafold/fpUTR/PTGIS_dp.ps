%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTGIS)
} def

/sequence { (\
GGAGUGGGCCAGGCCGCCAGCCCCGCCAGCCCCGCCAGCCCCGCCAGCCCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.004042230 ubox
1 23 0.012760711 ubox
1 24 0.025189010 ubox
1 27 0.015733306 ubox
1 31 0.032664083 ubox
1 32 0.209672632 ubox
1 33 0.356609380 ubox
1 36 0.058963315 ubox
1 40 0.096155320 ubox
1 41 0.206622773 ubox
1 42 0.246713433 ubox
1 45 0.290736686 ubox
1 49 0.421913922 ubox
1 50 0.221003404 ubox
1 51 0.455206350 ubox
2 21 0.004055784 ubox
2 22 0.012839985 ubox
2 23 0.025169333 ubox
2 26 0.015483295 ubox
2 30 0.032719213 ubox
2 31 0.210803139 ubox
2 32 0.356576033 ubox
2 35 0.058181206 ubox
2 39 0.096496910 ubox
2 40 0.207449455 ubox
2 41 0.246814543 ubox
2 44 0.286620002 ubox
2 48 0.423541697 ubox
2 49 0.221700709 ubox
2 50 0.454591860 ubox
4 17 0.004693746 ubox
4 21 0.027826409 ubox
4 26 0.021239190 ubox
4 30 0.409632794 ubox
4 35 0.109691579 ubox
4 39 0.315963365 ubox
4 44 0.531493440 ubox
4 48 0.458675670 ubox
4 53 0.272098177 ubox
5 16 0.004731837 ubox
5 19 0.004243915 ubox
5 20 0.026473175 ubox
5 25 0.021531764 ubox
5 28 0.053817535 ubox
5 29 0.390000932 ubox
5 34 0.110390568 ubox
5 37 0.051910530 ubox
5 38 0.301042023 ubox
5 43 0.535510398 ubox
5 46 0.059891571 ubox
5 47 0.446424167 ubox
5 52 0.271900380 ubox
6 15 0.004768570 ubox
6 18 0.004087409 ubox
6 23 0.019591606 ubox
6 24 0.020398573 ubox
6 27 0.048569668 ubox
6 31 0.004393810 ubox
6 32 0.089583367 ubox
6 33 0.103055250 ubox
6 36 0.046217414 ubox
6 40 0.007067746 ubox
6 41 0.516260853 ubox
6 42 0.501292466 ubox
6 45 0.046284042 ubox
6 50 0.117776211 ubox
6 51 0.252331782 ubox
7 14 0.004731357 ubox
7 17 0.003389051 ubox
7 18 0.027955583 ubox
7 22 0.021119650 ubox
7 23 0.018920795 ubox
7 26 0.040204782 ubox
7 27 0.412681670 ubox
7 30 0.003190980 ubox
7 31 0.099231729 ubox
7 32 0.093915540 ubox
7 35 0.037760364 ubox
7 36 0.315541274 ubox
7 39 0.005930961 ubox
7 40 0.556601218 ubox
7 41 0.458386214 ubox
7 44 0.035699365 ubox
7 45 0.319614849 ubox
7 49 0.155871905 ubox
7 50 0.230680142 ubox
8 14 0.003597310 ubox
8 17 0.028169312 ubox
8 21 0.022456141 ubox
8 22 0.016083714 ubox
8 26 0.416019368 ubox
8 30 0.107735886 ubox
8 31 0.083564365 ubox
8 35 0.318374259 ubox
8 39 0.592854703 ubox
8 40 0.410532715 ubox
8 41 0.003587746 ubox
8 44 0.321912850 ubox
8 48 0.186121733 ubox
8 49 0.206520458 ubox
9 13 0.003643552 ubox
9 16 0.028174853 ubox
9 20 0.023677065 ubox
9 25 0.416671844 ubox
9 29 0.115386535 ubox
9 34 0.319165105 ubox
9 38 0.625859742 ubox
9 43 0.322175852 ubox
9 47 0.211832963 ubox
12 18 0.025469754 ubox
12 22 0.419458746 ubox
12 23 0.018350966 ubox
12 24 0.007320753 ubox
12 27 0.133823363 ubox
12 31 0.319201286 ubox
12 32 0.030886076 ubox
12 33 0.044460186 ubox
12 36 0.721471568 ubox
12 40 0.317833519 ubox
12 41 0.017308705 ubox
12 42 0.016584760 ubox
12 45 0.272609520 ubox
12 49 0.005401065 ubox
13 17 0.025094426 ubox
13 21 0.419999226 ubox
13 22 0.015644158 ubox
13 23 0.007035989 ubox
13 26 0.134010605 ubox
13 30 0.319595733 ubox
13 31 0.029946509 ubox
13 32 0.044392905 ubox
13 35 0.722521383 ubox
13 39 0.318197338 ubox
13 40 0.015711800 ubox
13 41 0.016522207 ubox
13 44 0.273000559 ubox
13 48 0.007416060 ubox
14 20 0.419507838 ubox
14 25 0.126903722 ubox
14 29 0.319276437 ubox
14 34 0.720883851 ubox
14 38 0.317878981 ubox
14 43 0.270089042 ubox
14 47 0.007405851 ubox
15 25 0.065084815 ubox
15 34 0.083087210 ubox
15 43 0.038822490 ubox
16 24 0.076475632 ubox
16 26 0.306610750 ubox
16 30 0.721811904 ubox
16 33 0.086675426 ubox
16 35 0.298476605 ubox
16 39 0.260132695 ubox
16 42 0.053756432 ubox
16 44 0.005679324 ubox
16 48 0.013834394 ubox
17 25 0.306671736 ubox
17 29 0.721978277 ubox
17 34 0.298330191 ubox
17 38 0.260156223 ubox
17 43 0.005708158 ubox
17 47 0.013838012 ubox
20 26 0.719414694 ubox
20 30 0.308637568 ubox
20 35 0.259260317 ubox
20 39 0.075170758 ubox
20 44 0.014914680 ubox
21 25 0.714518447 ubox
21 29 0.308779817 ubox
21 34 0.258767469 ubox
21 38 0.075160660 ubox
21 43 0.014917431 ubox
24 34 0.030035034 ubox
24 54 0.008042605 ubox
25 33 0.038628936 ubox
25 35 0.073696242 ubox
25 39 0.040631511 ubox
25 44 0.006514652 ubox
25 48 0.007090000 ubox
25 53 0.010511554 ubox
26 34 0.073753697 ubox
26 38 0.040698911 ubox
26 43 0.006517351 ubox
26 47 0.007102112 ubox
26 52 0.010497816 ubox
29 35 0.047177153 ubox
29 39 0.016219456 ubox
29 44 0.007910373 ubox
29 48 0.011684628 ubox
29 53 0.033917122 ubox
30 34 0.046881924 ubox
30 38 0.016237448 ubox
30 43 0.007899030 ubox
30 47 0.011687767 ubox
30 52 0.033917115 ubox
33 43 0.007962220 ubox
33 52 0.014708319 ubox
33 54 0.152316409 ubox
34 42 0.010072632 ubox
34 44 0.069003571 ubox
34 48 0.252531128 ubox
34 51 0.016436091 ubox
34 53 0.209524900 ubox
35 43 0.069070900 ubox
35 47 0.252932339 ubox
35 52 0.209268226 ubox
38 44 0.256832108 ubox
38 48 0.210337855 ubox
38 53 0.043243711 ubox
39 43 0.255104612 ubox
39 47 0.210446103 ubox
39 52 0.043194743 ubox
42 52 0.022082449 ubox
42 54 0.340549963 ubox
43 51 0.024058482 ubox
43 53 0.397741907 ubox
44 52 0.397441236 ubox
47 53 0.244077621 ubox
48 52 0.242602193 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
4 48 0.9500000 lbox
5 47 0.9500000 lbox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
showpage
end
%%EOF
