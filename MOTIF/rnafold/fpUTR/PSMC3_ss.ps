%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCCAGGGGUUGGUCUUUGGAAUCGGAGAGGCAGAUUCGCUGCUCCGCAGCACGGCCGGAGCUGGUCGGGUCAAGAGUCGGGAUUUGUGGGGAGAGGUUUUCCACUGGUCAAGAGAAGGCUUUAAGAAAGACGGUAUUAAUCUCCCGUUGCGGCUCCCGCCUGGUCCCAUCUUCUGCCCGCUCCUCCAGGAA\
) } def
/len { sequence length } bind def

/coor [
[-252.89523315 441.37033081]
[-257.99829102 427.26504517]
[-253.95590210 412.82025146]
[-266.56875610 420.93908691]
[-279.18164062 429.05795288]
[-291.79449463 437.17678833]
[-291.66165161 456.07968140]
[-305.73034668 471.19531250]
[-328.07907104 472.67837524]
[-338.72830200 483.24218750]
[-349.37753296 493.80596924]
[-360.02676392 504.36978149]
[-370.67599487 514.93359375]
[-375.02441406 530.14544678]
[-389.50912476 533.61560059]
[-400.15838623 544.17938232]
[-410.80761719 554.74316406]
[-421.45684814 565.30700684]
[-432.10607910 575.87078857]
[-442.75531006 586.43457031]
[-440.25665283 601.74914551]
[-447.26693726 615.59240723]
[-461.09054565 622.64129639]
[-476.41204834 620.18542480]
[-487.33999634 609.16912842]
[-489.67236328 593.82830811]
[-482.51232910 580.06195068]
[-468.61306763 573.16339111]
[-453.31912231 575.78533936]
[-442.66986084 565.22155762]
[-432.02062988 554.65777588]
[-421.37139893 544.09393311]
[-410.72216797 533.53015137]
[-400.07293701 522.96636963]
[-396.48623657 508.51004028]
[-381.23980713 504.28433228]
[-370.59057617 493.72052002]
[-359.94131470 483.15673828]
[-349.29208374 472.59295654]
[-338.64285278 462.02914429]
[-344.74389648 448.32595825]
[-359.72006226 449.17132568]
[-374.69622803 450.01669312]
[-389.67239380 450.86206055]
[-404.64852905 451.70742798]
[-420.12173462 458.63681030]
[-431.06375122 445.68655396]
[-421.64862061 431.58718872]
[-405.49389648 436.73126221]
[-390.51776123 435.88589478]
[-375.54159546 435.04052734]
[-360.56542969 434.19515991]
[-345.58926392 433.34979248]
[-332.08575439 419.29779053]
[-314.31658936 416.59573364]
[-299.91333008 424.56393433]
[-287.30047607 416.44509888]
[-274.68762207 408.32623291]
[-262.07476807 400.20739746]
[-250.01091003 391.29315186]
[-238.54617310 381.62051392]
[-227.08145142 371.94787598]
[-215.61671448 362.27523804]
[-214.27943420 350.24441528]
[-204.79545593 342.09265137]
[-191.89888000 342.60888672]
[-180.27981567 333.12222290]
[-177.08264160 326.44772339]
[-168.39628601 323.57812500]
[-156.62588501 314.27984619]
[-144.85548401 304.98156738]
[-133.08508301 295.68331909]
[-129.78080750 289.06121826]
[-121.04934692 286.33190918]
[-109.13068390 277.22445679]
[-103.71567535 263.34906006]
[-88.05256653 261.11798096]
[-76.13390350 252.01054382]
[-64.21523285 242.90310669]
[-62.50205994 228.15182495]
[-50.54457855 218.74580383]
[-35.08368301 220.64274597]
[-23.16501808 211.53530884]
[-11.24635220 202.42787170]
[0.67231321 193.32043457]
[12.59097862 184.21299744]
[24.50964355 175.10556030]
[30.36742973 158.56912231]
[48.63977814 156.33847046]
[60.41017532 147.04019165]
[72.18057251 137.74192810]
[83.95097351 128.44366455]
[95.72136688 119.14540100]
[83.06639099 107.17391968]
[85.36306000 91.03657532]
[98.86758423 84.10398865]
[104.96863556 70.40081024]
[111.06968689 56.69762802]
[117.17073822 42.99444580]
[123.27178192 29.29126358]
[129.37283325 15.58808231]
[135.47389221 1.88490021]
[141.57493591 -11.81828117]
[147.67597961 -25.52146339]
[143.78984070 -37.82942200]
[149.16378784 -49.12181473]
[160.42071533 -53.57270432]
[166.74172974 -67.17581940]
[162.60711670 -82.67693329]
[172.26391602 -95.48808289]
[188.30429077 -95.78165436]
[198.42341614 -83.33244324]
[194.85877991 -67.69041443]
[180.34484863 -60.85480499]
[174.02383423 -47.25168991]
[176.52189636 -29.88714218]
[161.37916565 -19.42041397]
[155.27812195 -5.71723223]
[149.17706299 7.98594999]
[143.07601929 21.68913078]
[136.97496033 35.39231491]
[130.87391663 49.09549713]
[124.77286530 62.79867554]
[118.67182159 76.50186157]
[112.57077026 90.20503998]
[117.74681854 98.96482849]
[116.77162170 110.17672729]
[131.63119507 108.12902069]
[139.40309143 93.11308289]
[154.44230652 85.75693512]
[170.74023438 88.77925110]
[181.91560364 100.79541779]
[196.74024963 98.50859070]
[211.56491089 96.22176361]
[226.38957214 93.93493652]
[241.21421814 91.64810944]
[246.70120239 77.30277252]
[258.63583374 67.63529968]
[273.80776978 65.24618530]
[288.13583374 70.77809906]
[297.76586914 82.74298096]
[300.10739136 97.92233276]
[294.53060913 112.23298645]
[282.53558350 121.82545471]
[267.34896851 124.11940765]
[253.05587769 118.49777985]
[243.50105286 106.47276306]
[228.67639160 108.75959015]
[213.85173035 111.04641724]
[199.02708435 113.33324432]
[184.20242310 115.62007141]
[179.21717834 128.01306152]
[168.67257690 136.38894653]
[155.25897217 138.47399902]
[142.46693420 133.61730957]
[133.67889404 122.98859406]
[118.81932831 125.03630066]
[105.01963043 130.91580200]
[93.24923706 140.21406555]
[81.47883606 149.51232910]
[69.70844269 158.81059265]
[57.93804550 168.10885620]
[55.65925980 180.81300354]
[45.65303421 188.31451416]
[33.61708069 187.02423096]
[21.69841576 196.13166809]
[9.77975082 205.23910522]
[-2.13891435 214.34654236]
[-14.05757999 223.45397949]
[-25.97624397 232.56141663]
[-28.20761299 247.97760010]
[-40.42457199 257.04406738]
[-55.10779953 254.82177734]
[-67.02646637 263.92922974]
[-78.94512939 273.03665161]
[-85.21263885 287.56347656]
[-100.02324677 289.14312744]
[-111.94190979 298.25054932]
[-123.78682709 307.45370483]
[-135.55722046 316.75198364]
[-147.32762146 326.05023193]
[-159.09802246 335.34851074]
[-170.79313660 344.74127197]
[-182.41220093 354.22796631]
[-188.53318787 371.58850098]
[-205.94407654 373.73999023]
[-217.40881348 383.41259766]
[-228.87355042 393.08523560]
[-240.33828735 402.75787354]
[-225.34303284 403.13558960]
[-213.35827637 412.15585327]
[-208.84539795 426.46090698]
[-213.48432922 440.72555542]
[-225.54821777 449.63973999]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 59]
[4 58]
[5 57]
[6 56]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[60 189]
[61 188]
[62 187]
[63 186]
[66 184]
[67 183]
[69 182]
[70 181]
[71 180]
[72 179]
[74 178]
[75 177]
[77 175]
[78 174]
[79 173]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[87 165]
[89 162]
[90 161]
[91 160]
[92 159]
[93 158]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
[102 119]
[103 118]
[104 117]
[107 115]
[108 114]
[127 157]
[128 156]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
