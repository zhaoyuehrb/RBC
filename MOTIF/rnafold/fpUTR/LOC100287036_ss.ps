%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCCCUCUGCUCCACAGGAGAUGCAGCGAGCACCAAAGAGCCUUCCUCCAGGAUUAAGCCUGAUGCAGAAGUGGUUACACUGACUACGGCAAGCUGAGCCCUGCCGGCUGUUGUGCGCUCCGUGGAAAGGGAGAAGCACGGUCUCCAGCGGCUGCGUCAGGAGUGGUGCCUUGUGCACACCUCACAGGGAGAGAAGUCUCCAACGGACUGAGCGGAGGAAAAAAGAAAAAAGGAGAAAAGGAAAAAGAGCUGC\
AUACCUGGCAGGCCUACUGUGUGCAAAGCCCUUGAGUGACACACCCU\
) } def
/len { sequence length } bind def

/coor [
[660.05145264 578.78997803]
[642.33984375 571.21307373]
[628.89984131 557.36682129]
[621.82995605 539.37750244]
[622.24792480 520.02105713]
[630.11395264 502.29476929]
[619.37078857 491.82653809]
[608.62756348 481.35827637]
[597.88439941 470.89001465]
[587.14123535 460.42178345]
[576.39807129 449.95352173]
[565.65490723 439.48529053]
[554.91174316 429.01702881]
[544.16857910 418.54876709]
[526.82006836 430.18206787]
[506.67355347 432.62109375]
[488.16738892 425.86907959]
[475.13729858 411.89660645]
[470.02252197 394.10598755]
[473.41970825 376.51367188]
[460.66885376 368.61328125]
[447.91799927 360.71292114]
[428.56866455 361.47534180]
[419.41488647 343.47927856]
[406.50299072 335.84497070]
[393.59106445 328.21069336]
[380.67913818 320.57641602]
[373.35864258 319.88043213]
[367.67349243 312.79544067]
[354.84143066 305.02770996]
[342.00933838 297.25997925]
[329.17727661 289.49221802]
[316.30511475 281.79110718]
[303.39318848 274.15682983]
[290.48126221 266.52255249]
[277.56933594 258.88824463]
[264.65740967 251.25398254]
[259.20739746 257.40518188]
[251.81158447 261.99612427]
[242.94374084 264.41818237]
[233.26441956 264.21325684]
[223.57192993 261.12976074]
[214.73669434 255.16252136]
[202.06843567 263.19467163]
[189.40019226 271.22680664]
[186.19119263 286.70187378]
[172.93389893 295.30535889]
[157.49362183 291.93295288]
[149.03079224 278.58541870]
[152.56626892 263.18167114]
[166.00251770 254.86042786]
[181.36804199 258.55856323]
[194.03628540 250.52641296]
[206.70454407 242.49426270]
[207.40338135 235.02690125]
[193.77062988 241.28373718]
[181.53573608 232.60574341]
[182.93374634 217.67103577]
[196.56663513 211.41450500]
[208.80107117 220.09214783]
[209.49992371 212.62478638]
[198.54199219 202.38154602]
[187.58407593 192.13830566]
[176.62614441 181.89506531]
[165.66822815 171.65182495]
[154.71029663 161.40859985]
[143.75238037 151.16535950]
[132.79444885 140.92211914]
[121.83653259 130.67887878]
[110.87860870 120.43564606]
[91.20977020 134.45475769]
[59.93159103 126.36772156]
[44.94146729 125.82350922]
[29.95134354 125.27929688]
[14.96121979 124.73507690]
[0.73225534 132.88790894]
[-13.30479431 124.40891266]
[-12.70981598 108.02056122]
[1.90512788 100.58178711]
[15.50543594 109.74494934]
[30.49555969 110.28916931]
[45.48568344 110.83338165]
[60.47580719 111.37760162]
[62.36055756 104.11827850]
[47.84191895 100.34877777]
[37.15314102 89.82499695]
[51.61141968 85.83013916]
[66.13005829 89.59963989]
[68.01480865 82.34032440]
[54.65324402 75.52353668]
[41.29167938 68.70675659]
[27.93011284 61.88996887]
[14.56854725 55.07318115]
[-3.81802607 56.43442917]
[-12.74902534 41.30370712]
[-26.18054962 34.62582016]
[-43.05524826 32.98846436]
[-46.15325928 16.31997108]
[-30.99379349 8.72873211]
[-19.50266457 21.19429588]
[-6.07114029 27.87218094]
[5.45980930 24.32038307]
[16.68882751 29.73359680]
[21.38533211 41.71161652]
[34.74689865 48.52840042]
[48.10846329 55.34518814]
[61.47002792 62.16197205]
[74.83159637 68.97875977]
[85.57476807 58.51050949]
[79.10657501 44.97675323]
[72.63838196 31.44300079]
[66.17018890 17.90924835]
[59.42276382 4.51252270]
[52.39900589 -8.74141407]
[45.37524796 -21.99534988]
[38.35149384 -35.24928665]
[31.32773399 -48.50322342]
[24.30397797 -61.75716019]
[8.46995354 -71.20188141]
[9.84786987 -88.71767426]
[2.68707132 -101.89807129]
[-4.47372675 -115.07847595]
[-11.63452530 -128.25888062]
[-27.03633690 -130.14668274]
[-38.36405945 -140.75149536]
[-41.26195145 -155.99557495]
[-34.61571884 -170.01724243]
[-20.98096657 -177.42489624]
[-5.60053873 -175.37011719]
[5.61147594 -164.64303589]
[8.34382915 -149.36842346]
[1.54587615 -135.41967773]
[8.70667458 -122.23927307]
[15.86747265 -109.05886841]
[23.02827072 -95.87847137]
[34.50789261 -92.16413116]
[40.59187698 -81.28392792]
[37.55791473 -68.78091431]
[44.58167267 -55.52698135]
[51.60543060 -42.27304459]
[58.62918472 -29.01910782]
[65.65294647 -15.76517105]
[72.67670441 -2.51123476]
[75.26049805 -1.55059361]
[77.62928772 0.46617898]
[79.38801575 3.46559405]
[80.17419434 7.23573637]
[79.70394135 11.44105530]
[86.17213440 24.97480965]
[92.64032745 38.50856400]
[99.10852051 52.04231644]
[124.07935333 68.44341278]
[130.45649719 92.26846313]
[121.12184906 109.47772217]
[132.07977295 119.72095490]
[143.03768921 129.96420288]
[153.99562073 140.20742798]
[164.95353699 150.45066833]
[175.91146851 160.69390869]
[186.86938477 170.93714905]
[197.82731628 181.18038940]
[208.78523254 191.42362976]
[219.74314880 201.66685486]
[249.94905090 196.09257507]
[271.57302856 213.51953125]
[272.29168701 238.34205627]
[285.20361328 245.97633362]
[298.11553955 253.61061096]
[311.02746582 261.24490356]
[323.93939209 268.87918091]
[332.87045288 270.53872681]
[336.94500732 276.66015625]
[349.77709961 284.42788696]
[362.60916138 292.19564819]
[375.44125366 299.96337891]
[388.31341553 307.66448975]
[401.22534180 315.29876709]
[414.13726807 322.93307495]
[427.04919434 330.56735229]
[437.34936523 327.27114868]
[447.55990601 330.10238647]
[454.40283203 337.90325928]
[455.81838989 347.96206665]
[468.56921387 355.86242676]
[481.32006836 363.76281738]
[491.79879761 354.19619751]
[505.55584717 348.88201904]
[520.86279297 348.91833496]
[535.63751221 354.70181274]
[547.72747803 365.82125854]
[559.77990723 356.89163208]
[571.83239746 347.96200562]
[583.88482666 339.03234863]
[595.93725586 330.10272217]
[601.96740723 314.85250854]
[618.22705078 312.71765137]
[627.98956299 325.89431763]
[621.21221924 340.82748413]
[604.86688232 342.15518188]
[592.81445312 351.08480835]
[580.76202393 360.01443481]
[568.70953369 368.94409180]
[556.65710449 377.87371826]
[556.15203857 385.35668945]
[571.01013184 383.29846191]
[585.32934570 378.83078003]
[597.10662842 388.12036133]
[596.09710693 403.08636475]
[583.17895508 410.71014404]
[569.58862305 404.35882568]
[555.14190674 400.32263184]
[554.63677979 407.80560303]
[565.38000488 418.27386475]
[576.12316895 428.74209595]
[586.86633301 439.21035767]
[597.60949707 449.67861938]
[608.35266113 460.14685059]
[619.09582520 470.61511230]
[629.83898926 481.08334351]
[640.58221436 491.55160522]
[650.04046631 486.00582886]
[660.48114014 482.69030762]
[671.38659668 481.76486206]
[682.21716309 483.27093506]
[692.43804932 487.12976074]
[701.54522705 493.14648438]
[709.09082031 501.01992798]
[714.70489502 510.35784912]
[718.11346436 520.69622803]
[719.15222168 531.52246094]
[717.77398682 542.30090332]
[714.05133057 552.49902344]
[708.17230225 561.61407471]
[718.24389648 572.72998047]
[728.31549072 583.84588623]
[741.59332275 576.71960449]
[756.18206787 572.98059082]
[771.23266602 572.84197998]
[785.87011719 576.30755615]
[799.24468994 583.17156982]
[810.58081055 593.03125000]
[819.22241211 605.31011963]
[824.67077637 619.29193115]
[826.61315918 634.16241455]
[824.94104004 649.05657959]
[819.75585938 663.10913086]
[811.36309814 675.50469971]
[821.43469238 686.62060547]
[831.50628662 697.73651123]
[846.50604248 702.76812744]
[849.31781006 717.39489746]
[859.38940430 728.51080322]
[869.46099854 739.62670898]
[879.64727783 750.63757324]
[889.94720459 761.54223633]
[900.24713135 772.44696045]
[910.54699707 783.35162354]
[920.84692383 794.25628662]
[931.14685059 805.16094971]
[950.12939453 805.01037598]
[962.93591309 818.58514404]
[961.72314453 836.88653564]
[972.24694824 847.57525635]
[988.18933105 851.41882324]
[992.57177734 867.22155762]
[980.88604736 878.72698975]
[965.15338135 874.09930420]
[961.55822754 858.09906006]
[951.03442383 847.41033936]
[939.93572998 849.79199219]
[928.94506836 846.50756836]
[920.80499268 838.25659180]
[917.60412598 826.99255371]
[920.24212646 815.46087646]
[909.94226074 804.55621338]
[899.64233398 793.65148926]
[889.34240723 782.74682617]
[879.04254150 771.84216309]
[868.74261475 760.93750000]
[864.12524414 759.90606689]
[860.08966064 755.99304199]
[858.34509277 749.69830322]
[848.27349854 738.58239746]
[838.20190430 727.46649170]
[823.92254639 723.22991943]
[820.39038086 707.80804443]
[810.31878662 696.69219971]
[800.24719238 685.57629395]
[787.08636475 692.70935059]
[772.59204102 696.48748779]
[757.60565186 696.68682861]
[742.99822998 693.29150391]
[729.61999512 686.49462891]
[718.25042725 676.68737793]
[709.55334473 664.43658447]
[704.03784180 650.45184326]
[702.02850342 635.54455566]
[703.64648438 620.58050537]
[708.80206299 606.43017578]
[717.19958496 593.91748047]
[707.12799072 582.80157471]
[697.05639648 571.68566895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 220]
[7 219]
[8 218]
[9 217]
[10 216]
[11 215]
[12 214]
[13 213]
[14 212]
[20 185]
[21 184]
[22 183]
[24 179]
[25 178]
[26 177]
[27 176]
[29 175]
[30 174]
[31 173]
[32 172]
[33 170]
[34 169]
[35 168]
[36 167]
[37 166]
[43 54]
[44 53]
[45 52]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[69 155]
[70 154]
[72 83]
[73 82]
[74 81]
[75 80]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[95 101]
[96 100]
[109 151]
[110 150]
[111 149]
[112 148]
[113 143]
[114 142]
[115 141]
[116 140]
[117 139]
[118 138]
[120 135]
[121 134]
[122 133]
[123 132]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
[233 302]
[234 301]
[235 300]
[247 288]
[248 287]
[249 286]
[251 284]
[252 283]
[253 282]
[254 279]
[255 278]
[256 277]
[257 276]
[258 275]
[259 274]
[262 269]
[263 268]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
