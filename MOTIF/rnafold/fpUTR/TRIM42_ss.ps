%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUGAUAUAUGUAAAUGCCAGCCUAUGAGCUUCCUGGUAGGGACACCAGCUGUGAAGUCCUCAUAACAGCCAACUUCUUGCAACUUUCAAGCUGACGGCCUCAGGAAUGGGAGGAAGGACUCCUCCACUGGAGAACUGAUAGCAGUAUUCUGGUAGAGGAGGCAUCAAGAGUCCUGGGAGGCCGGUGGUAAUCAUGUAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[96.11316681 445.83554077]
[81.59732056 440.01965332]
[74.26152039 426.20953369]
[77.56951141 410.92584229]
[89.95935059 401.38507080]
[90.41458130 386.39199829]
[81.28395081 371.40695190]
[91.09661102 355.82684326]
[91.32425690 340.82855225]
[91.55189514 325.83029175]
[91.77954102 310.83203125]
[92.00718689 295.83374023]
[92.23482513 280.83547974]
[82.70194244 274.56060791]
[77.32752228 264.35687256]
[77.54979706 252.70649719]
[83.42922974 242.50743103]
[93.60475159 236.35240173]
[94.28746796 221.36793518]
[94.97018433 206.38348389]
[95.65290833 191.39903259]
[96.33562469 176.41458130]
[93.49884796 169.58746338]
[97.14411926 161.20840454]
[98.05416107 146.23603821]
[86.93750763 136.16528320]
[72.12756348 138.54553223]
[57.31761932 140.92576599]
[42.50767517 143.30599976]
[27.69772911 145.68623352]
[12.88778496 148.06648254]
[-1.88433111 150.67120361]
[-16.61521721 153.49980164]
[-31.34610176 156.32841492]
[-46.07698822 159.15702820]
[-58.17051697 169.35786438]
[-72.12850189 164.15940857]
[-86.85939026 166.98800659]
[-101.59027100 169.81661987]
[-116.32115936 172.64521790]
[-128.41468811 182.84605408]
[-142.37268066 177.64761353]
[-157.10356140 180.47621155]
[-169.14381409 191.61013794]
[-184.72387695 186.49218750]
[-187.81632996 170.38725281]
[-175.23991394 159.86273193]
[-159.93217468 165.74533081]
[-145.20127869 162.91671753]
[-134.16140747 152.91821289]
[-119.14976501 157.91433716]
[-104.41888428 155.08573914]
[-89.68799591 152.25712585]
[-74.95710754 149.42851257]
[-63.91722870 139.43000793]
[-48.90559387 144.42613220]
[-34.17470932 141.59753418]
[-19.44382286 138.76892090]
[-4.71293831 135.94032288]
[-1.33787203 132.55723572]
[4.19929171 131.26039124]
[10.50754738 133.25653076]
[25.31749153 130.87629700]
[40.12743759 128.49606323]
[54.93738174 126.11582184]
[69.74732971 123.73558044]
[84.55727386 121.35533905]
[76.62321472 104.40547180]
[82.15755463 88.50878143]
[73.23063660 76.45431519]
[64.30372620 64.39984894]
[55.37680817 52.34537888]
[41.20133209 57.56386948]
[26.12975502 58.57590485]
[11.38385773 55.29944229]
[-1.84097409 48.00009537]
[-12.47266388 37.26958466]
[-19.64934731 23.97778511]
[-22.78924370 9.20220566]
[-21.63781357 -5.85936403]
[-16.28840065 -19.98595047]
[-7.17465639 -32.03237534]
[4.96460772 -41.02208710]
[19.14531708 -46.22633362]
[34.21790314 -47.22322845]
[48.96050262 -43.93195343]
[62.17799377 -36.61932373]
[72.79889679 -25.87813759]
[79.96222687 -12.57913589]
[83.08728027 2.19958973]
[81.92071533 17.25999451]
[76.55711365 31.38120079]
[67.43127441 43.41846466]
[76.35819244 55.47293091]
[85.28510284 67.52739716]
[94.21202087 79.58186340]
[113.85427094 81.72474670]
[124.64339447 100.06766510]
[115.80529785 121.08840942]
[129.60841370 115.21697235]
[143.41154480 109.34552765]
[157.21466064 103.47408295]
[171.01777649 97.60263824]
[184.82090759 91.73120117]
[198.53332520 85.65095520]
[212.15190125 79.36330414]
[225.77046204 73.07566071]
[239.38903809 66.78800964]
[238.65713501 53.59122086]
[242.44520569 40.96196365]
[250.28137207 30.39784050]
[261.21511841 23.14384651]
[273.93246460 20.04566574]
[286.91397095 21.45112610]
[298.61618042 27.17128372]
[307.65515137 36.50549698]
[321.45828247 30.63405228]
[323.54129028 17.00683784]
[332.01910400 6.27401447]
[344.59289551 1.17331362]
[357.93740845 2.93822241]
[368.58026123 11.00159168]
[382.47091675 5.34030390]
[396.36154175 -0.32098413]
[410.25219727 -5.98227215]
[424.14282227 -11.64356041]
[438.03344727 -17.30484772]
[447.89279175 -29.67836761]
[462.59899902 -27.31681442]
[476.48962402 -32.97810364]
[490.38027954 -38.63938904]
[504.27090454 -44.30067825]
[518.16156006 -49.96196747]
[532.05218506 -55.62325287]
[545.94281006 -61.28454208]
[555.80218506 -73.65805817]
[570.50836182 -71.29650879]
[584.39898682 -76.95779419]
[598.28967285 -82.61908722]
[612.18029785 -88.28037262]
[621.80444336 -101.55844116]
[638.08551025 -99.59378815]
[644.27484131 -84.40747833]
[634.00543213 -71.62188721]
[617.84155273 -74.38973236]
[603.95092773 -68.72844696]
[590.06030273 -63.06715775]
[576.16967773 -57.40587234]
[567.30389404 -45.43728638]
[551.60412598 -47.39390564]
[537.71350098 -41.73261642]
[523.82281494 -36.07132721]
[509.93218994 -30.41003990]
[496.04156494 -24.74875259]
[482.15093994 -19.08746529]
[468.26028442 -13.42617702]
[459.39450073 -1.45759094]
[443.69473267 -3.41421008]
[429.80410767 2.24707770]
[415.91348267 7.90836573]
[402.02282715 13.56965351]
[388.13220215 19.23094177]
[374.24154663 24.89222908]
[370.83212280 40.94857025]
[358.40029907 51.91959381]
[341.71343994 53.33401108]
[327.32971191 44.43717194]
[313.52661133 50.30861664]
[313.22930908 67.19892120]
[305.55529785 82.31026459]
[292.00466919 92.58175659]
[275.27337646 95.90916443]
[258.71673584 91.57588959]
[245.67668152 80.40657806]
[232.05812073 86.69422913]
[218.43954468 92.98187256]
[204.82096863 99.26952362]
[202.35838318 103.36488342]
[197.29550171 105.95507812]
[190.69233704 105.53431702]
[176.88922119 111.40576172]
[163.08610535 117.27720642]
[149.28297424 123.14865112]
[135.47985840 129.02009583]
[121.67673492 134.89154053]
[113.02653503 147.14608765]
[112.11648560 162.11845398]
[111.32007599 177.09729004]
[110.63735962 192.08175659]
[109.95464325 207.06620789]
[109.27191925 222.05065918]
[108.58920288 237.03511047]
[121.88604736 250.52642822]
[121.11555481 269.13372803]
[107.23310089 281.06311035]
[107.00545502 296.06140137]
[106.77781677 311.05966187]
[106.55017090 326.05792236]
[106.32252502 341.05621338]
[106.09488678 356.05447388]
[114.50020599 365.84051514]
[114.00003815 378.32986450]
[105.40767670 386.84722900]
[104.95243835 401.84030151]
[116.74062347 412.11517334]
[119.11525726 427.57141113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[24 187]
[25 186]
[26 67]
[27 66]
[28 65]
[29 64]
[30 63]
[31 62]
[32 59]
[33 58]
[34 57]
[35 56]
[37 54]
[38 53]
[39 52]
[40 51]
[42 49]
[43 48]
[69 96]
[70 95]
[71 94]
[72 93]
[99 185]
[100 184]
[101 183]
[102 182]
[103 181]
[104 180]
[105 177]
[106 176]
[107 175]
[108 174]
[116 168]
[117 167]
[122 163]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[129 156]
[130 155]
[131 154]
[132 153]
[133 152]
[134 151]
[135 150]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
