%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCAGCUCGCGGCCCCGCGCGCCGGAUCGGCGUGCGUGCGGCUGGAGCCUUAAGCGUUUCCCCCGCCCGGCUUCAUCCCUGCUGGCGGCCCAGCGUCGUUCUCCUCCUGCGCGAGGCGGCCAAGGCCUGCUGGCCCGGAGCCGCGCCUCCACCCGCGCGAGGUAUCGUCCUUGGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[81.94499969 125.82405853]
[70.67097473 135.71832275]
[59.39695740 145.61259460]
[48.12293625 155.50685120]
[36.84891510 165.40112305]
[25.57489586 175.29537964]
[14.30087662 185.18965149]
[9.89936924 193.22517395]
[2.74425316 195.15573120]
[-8.69979382 204.85282898]
[-20.14384079 214.54992676]
[-31.58788681 224.24703979]
[-32.92073441 228.44387817]
[-35.29234695 231.66149902]
[-38.26198959 233.69212341]
[-41.36683655 234.49446106]
[-44.17884827 234.18624878]
[-56.26802826 243.06608582]
[-68.35720825 251.94593811]
[-80.44638824 260.82577515]
[-92.53557587 269.70562744]
[-104.62475586 278.58547974]
[-116.71393585 287.46533203]
[-128.80311584 296.34518433]
[-140.89230347 305.22503662]
[-150.07839966 319.47463989]
[-166.31411743 314.59222412]
[-166.11698914 297.63943481]
[-149.77214050 293.13583374]
[-137.68296814 284.25601196]
[-125.59378052 275.37615967]
[-113.50460052 266.49630737]
[-101.41542053 257.61645508]
[-89.32624054 248.73660278]
[-77.23706055 239.85675049]
[-65.14788055 230.97691345]
[-53.05869675 222.09706116]
[-41.28498840 212.80299377]
[-29.84094238 203.10588074]
[-18.39689636 193.40878296]
[-6.95284939 183.71168518]
[4.40661192 173.91563416]
[15.68063164 164.02136230]
[26.95465279 154.12710571]
[38.22867203 144.23283386]
[49.50269318 134.33856201]
[60.77671051 124.44430542]
[72.05073547 114.55004120]
[69.83543396 109.10845947]
[68.66884613 103.35021210]
[68.59152985 97.47548676]
[69.60617065 91.68853760]
[71.67749786 86.19053650]
[74.73349762 81.17264557]
[78.66792297 76.80931854]
[71.43249512 63.66973877]
[64.19706726 50.53015900]
[56.96163559 37.39057922]
[49.72620392 24.25099754]
[35.94496536 23.55182457]
[24.40412331 16.18688774]
[18.06632996 4.17393160]
[18.49547386 -9.29319382]
[25.47216415 -20.69344711]
[18.46587563 -33.95662689]
[11.45958614 -47.21980667]
[4.45329666 -60.48298264]
[-2.55299211 -73.74616241]
[-9.34698486 -79.89307404]
[-9.56351852 -87.30089569]
[-16.33855629 -100.68367767]
[-23.11359406 -114.06645966]
[-38.47007370 -115.54364777]
[-50.57598877 -125.10661316]
[-55.56838608 -139.70385742]
[-51.85420609 -154.67744446]
[-40.61863708 -165.24937439]
[-25.44690132 -168.04615784]
[-11.18024921 -162.17536926]
[-2.37111545 -149.51034546]
[-1.83046317 -134.09246826]
[-9.73081207 -120.84149933]
[-2.95577431 -107.45871735]
[3.81926370 -94.07593536]
[10.71018696 -80.75244904]
[17.71647644 -67.48927307]
[24.72276497 -54.22609329]
[31.72905350 -40.96291733]
[38.73534393 -27.69973755]
[55.03974152 -25.90002441]
[67.18696594 -14.63096333]
[70.26391602 1.81922805]
[62.86578369 17.01556969]
[70.10121155 30.15514946]
[77.33664703 43.29472733]
[84.57207489 56.43431091]
[91.80750275 69.57389069]
[109.65835571 70.00698090]
[124.40760040 80.07177734]
[131.31880188 96.53615570]
[146.19187927 98.48329926]
[161.06497192 100.43043518]
[175.93804932 102.37757111]
[190.81114197 104.32470703]
[205.68421936 106.27184296]
[209.09625244 100.49518585]
[214.34019470 95.91076660]
[220.99229431 93.09959412]
[228.44566345 92.49032593]
[235.96525574 94.30224609]
[250.95114136 93.65156555]
[265.93701172 93.00089264]
[280.92291260 92.35021210]
[295.90878296 91.69953156]
[304.37319946 88.19286346]
[311.15994263 91.16989899]
[326.15484619 90.77941132]
[339.74893188 82.68548584]
[352.67330933 90.08883667]
[367.66821289 89.69835663]
[372.16287231 86.93955231]
[376.80102539 86.26670837]
[380.75787354 87.38121796]
[383.44918823 89.69835663]
[398.44412231 90.08883667]
[413.43902588 90.47932434]
[428.43395996 90.86981201]
[434.45568848 88.03635406]
[440.14440918 88.60414124]
[443.94000244 91.54307556]
[458.91235352 92.45375061]
[467.69543457 89.84597778]
[474.13592529 93.51239014]
[489.09020996 94.68278503]
[504.04446411 95.85317993]
[517.12438965 86.56367493]
[532.50201416 91.13635254]
[538.38085938 106.06346130]
[530.25128174 119.89418793]
[514.34948730 122.01879120]
[502.87408447 110.80744934]
[487.91979980 109.63705444]
[472.96554565 108.46665955]
[458.00167847 107.42607880]
[443.02932739 106.51540375]
[428.04345703 105.86473083]
[413.04855347 105.47424316]
[398.05361938 105.08375549]
[383.05871582 104.69326782]
[368.05871582 104.69326782]
[353.06378174 105.08375549]
[340.54226685 113.14975739]
[326.54534912 105.77433014]
[311.55041504 106.16481018]
[296.55944824 106.68541718]
[281.57357788 107.33609009]
[266.58770752 107.98677063]
[251.60182190 108.63745117]
[236.61593628 109.28813171]
[229.26675415 122.36442566]
[236.50218201 135.50399780]
[243.73760986 148.64358521]
[250.97303772 161.78315735]
[266.22070312 165.94059753]
[273.99002075 179.70333862]
[269.67163086 194.90618896]
[255.82751465 202.52958679]
[240.67115784 198.05067444]
[233.19456482 184.12673950]
[237.83346558 169.01858521]
[230.59803772 155.87901306]
[223.36260986 142.73942566]
[216.12716675 129.59985352]
[203.73709106 121.14492798]
[188.86399841 119.19779205]
[173.99092102 117.25065613]
[159.11782837 115.30352020]
[144.24475098 113.35638428]
[129.37165833 111.40924072]
[117.70865631 126.06278229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[3 46]
[4 45]
[5 44]
[6 43]
[7 42]
[9 41]
[10 40]
[11 39]
[12 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[64 89]
[65 88]
[66 87]
[67 86]
[68 85]
[70 84]
[71 83]
[72 82]
[100 179]
[101 178]
[102 177]
[103 176]
[104 175]
[105 174]
[110 159]
[111 158]
[112 157]
[113 156]
[114 155]
[116 154]
[117 153]
[119 151]
[120 150]
[124 149]
[125 148]
[126 147]
[127 146]
[130 145]
[131 144]
[133 143]
[134 142]
[135 141]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
