%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RFX6)
} def

/sequence { (\
GGCUGGGGCUCCGCUGGGGAACCGGCCGAGCGGCGCGCGCGGAGGUGUCCGGCGGCCAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.989834496 ubox
1 57 0.018945918 ubox
2 26 0.990674495 ubox
2 31 0.005035146 ubox
2 34 0.005785124 ubox
2 56 0.018952370 ubox
3 25 0.990685024 ubox
3 30 0.005031964 ubox
3 33 0.005790811 ubox
3 55 0.018929937 ubox
3 59 0.038358670 ubox
3 60 0.011331224 ubox
3 62 0.018844210 ubox
3 63 0.004373539 ubox
4 24 0.989929212 ubox
4 29 0.004913630 ubox
4 32 0.005720533 ubox
4 35 0.004004219 ubox
4 54 0.016033353 ubox
4 58 0.038294265 ubox
4 59 0.010495895 ubox
4 61 0.018427457 ubox
4 62 0.004166500 ubox
5 23 0.990598472 ubox
5 34 0.005694116 ubox
5 53 0.012281741 ubox
5 57 0.035938015 ubox
6 22 0.990571064 ubox
6 23 0.010765834 ubox
6 27 0.004165048 ubox
6 50 0.003932310 ubox
6 56 0.034720606 ubox
6 57 0.004161494 ubox
7 22 0.014370106 ubox
7 23 0.004398209 ubox
7 49 0.003908139 ubox
7 56 0.004555552 ubox
7 57 0.005726044 ubox
8 22 0.004649406 ubox
8 31 0.131628332 ubox
8 36 0.012932633 ubox
8 56 0.005744826 ubox
9 18 0.014016352 ubox
9 19 0.988716633 ubox
9 30 0.131768782 ubox
9 35 0.013046243 ubox
9 55 0.004584719 ubox
9 62 0.006892080 ubox
10 17 0.014257547 ubox
10 18 0.966538427 ubox
10 19 0.042073033 ubox
10 20 0.038346280 ubox
10 29 0.131749683 ubox
10 61 0.006937738 ubox
11 16 0.014818403 ubox
11 17 0.966867279 ubox
11 18 0.210351386 ubox
11 19 0.039689342 ubox
11 28 0.131544278 ubox
11 33 0.013158679 ubox
11 55 0.029475599 ubox
11 60 0.006947489 ubox
12 16 0.959860128 ubox
12 17 0.211081059 ubox
12 18 0.039689971 ubox
12 28 0.004143038 ubox
12 32 0.013169993 ubox
12 54 0.029749167 ubox
12 59 0.006935344 ubox
13 26 0.131792499 ubox
13 27 0.004141624 ubox
13 31 0.013861778 ubox
13 53 0.029864054 ubox
14 25 0.131953519 ubox
14 30 0.013863140 ubox
14 52 0.029865000 ubox
15 24 0.131856931 ubox
15 29 0.013784920 ubox
15 51 0.029806037 ubox
16 23 0.131954797 ubox
16 50 0.029684954 ubox
17 22 0.131871303 ubox
17 27 0.013705926 ubox
17 49 0.029551465 ubox
18 26 0.013693519 ubox
18 48 0.027297130 ubox
18 49 0.004101093 ubox
19 48 0.004005605 ubox
21 46 0.029477098 ubox
22 45 0.029855887 ubox
23 44 0.029852295 ubox
26 42 0.029850135 ubox
26 63 0.004730041 ubox
27 41 0.029928911 ubox
27 62 0.014281125 ubox
28 40 0.029782337 ubox
28 53 0.003187258 ubox
30 38 0.029813501 ubox
30 56 0.010541036 ubox
31 37 0.029870589 ubox
31 51 0.003976741 ubox
31 54 0.008943585 ubox
31 55 0.009921042 ubox
32 36 0.027948501 ubox
32 49 0.005379224 ubox
32 50 0.007084113 ubox
32 53 0.011009423 ubox
32 57 0.997907416 ubox
33 48 0.005629623 ubox
33 49 0.007076406 ubox
33 53 0.008481446 ubox
33 56 0.999003629 ubox
34 47 0.006585178 ubox
34 51 0.012581025 ubox
34 52 0.007482764 ubox
34 54 0.009075338 ubox
34 55 0.998256654 ubox
35 46 0.006582554 ubox
35 48 0.006489085 ubox
35 50 0.013202800 ubox
35 53 0.012510927 ubox
35 56 0.008216622 ubox
36 45 0.006584632 ubox
36 47 0.006591725 ubox
36 51 0.004147218 ubox
36 52 0.012474439 ubox
36 54 0.995290694 ubox
36 55 0.007273651 ubox
37 46 0.006599331 ubox
37 48 0.015161787 ubox
37 50 0.003912666 ubox
37 53 0.999155940 ubox
38 45 0.006601721 ubox
38 47 0.015561652 ubox
38 52 0.998428839 ubox
38 54 0.013048392 ubox
39 46 0.015612907 ubox
39 48 0.004226971 ubox
39 53 0.013221727 ubox
40 45 0.015616803 ubox
40 47 0.004299723 ubox
40 51 0.995492941 ubox
40 52 0.009385259 ubox
41 46 0.003815001 ubox
41 49 0.004688309 ubox
41 50 0.999333845 ubox
42 48 0.004011203 ubox
42 49 0.999251324 ubox
43 48 0.973368832 ubox
56 63 0.006766536 ubox
57 62 0.008986278 ubox
1 27 0.9500000 lbox
2 26 0.9500000 lbox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
12 16 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
