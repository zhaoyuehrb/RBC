%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGAGGGGCGGAGCGAGGCGGGUCCGGGGCCUGGCGGCGCGCGGAGGGGCGGGCCCUGGCCGGGUGGUCCCGGGCGGAUCCCGGGAAGGCGGAAGGCUUCGGCAGAGCUGCGCCGCCGAGGCUGAGCGGUCCCUUCUCGCUGCGGCCGCCCAGGUGCCCGCGCCCGUGGCGCU\
) } def
/len { sequence length } bind def

/coor [
[208.93174744 482.52944946]
[210.45568848 477.46936035]
[207.00610352 462.87139893]
[203.55651855 448.27343750]
[186.98440552 442.24545288]
[177.24201965 427.35876465]
[178.37121582 409.44625854]
[190.10926819 395.66201782]
[186.14083862 381.19650269]
[182.17240906 366.73095703]
[178.20397949 352.26544189]
[174.23556519 337.79989624]
[170.26713562 323.33438110]
[165.78492737 309.01968384]
[160.79466248 294.87411499]
[155.80438232 280.72854614]
[150.81411743 266.58297729]
[145.82383728 252.43740845]
[140.83355713 238.29183960]
[135.84329224 224.14627075]
[124.31255341 214.71804810]
[127.01801300 199.12988281]
[122.02774048 184.98431396]
[117.03746796 170.83874512]
[105.50672150 161.41052246]
[108.21218872 145.82234192]
[103.22190857 131.67677307]
[98.23163605 117.53120422]
[83.49079132 106.15761566]
[87.18305969 87.90882874]
[81.69107819 73.95038605]
[76.19909668 59.99194336]
[70.70711517 46.03349686]
[65.21513367 32.07505417]
[59.59879303 18.16618347]
[53.85854340 4.30799055]
[48.11828995 -9.55020237]
[42.37804031 -23.40839577]
[36.63778687 -37.26659012]
[30.89753532 -51.12478256]
[25.15728378 -64.98297119]
[19.41703224 -78.84117126]
[13.53434658 -65.04283142]
[0.22730516 -58.12021637]
[-14.44811535 -61.22376633]
[-23.81319618 -72.94107056]
[-23.60592842 -87.93964386]
[-13.92063999 -99.39368439]
[0.83493727 -102.09053040]
[13.94586754 -94.80253601]
[9.97744179 -109.26807404]
[6.00901699 -123.73360443]
[-9.33922577 -132.09481812]
[-13.81926727 -148.63955688]
[-5.13527966 -163.02485657]
[-9.36126804 -177.41725159]
[-13.58725643 -191.80964661]
[-27.17706680 -199.42245483]
[-31.25779533 -214.07859802]
[-23.91640091 -226.98748779]
[-28.14238930 -241.37988281]
[-32.36837769 -255.77227783]
[-36.59436417 -270.16467285]
[-53.54317474 -278.57281494]
[-58.90470505 -296.38464355]
[-49.73281479 -312.20031738]
[-54.46981049 -326.43270874]
[-68.32267761 -333.55560303]
[-72.92391968 -348.05676270]
[-66.04795074 -361.21945190]
[-70.78494263 -375.45184326]
[-75.52193451 -389.68423462]
[-80.25893402 -403.91662598]
[-84.99592590 -418.14901733]
[-89.73291779 -432.38140869]
[-94.46990967 -446.61380005]
[-108.11466217 -455.05181885]
[-109.88177490 -470.99725342]
[-98.41566467 -482.21810913]
[-82.51215363 -480.10675049]
[-74.37105560 -466.28277588]
[-80.23752594 -451.35079956]
[-75.50052643 -437.11840820]
[-70.76353455 -422.88601685]
[-66.02654266 -408.65362549]
[-61.28954697 -394.42123413]
[-56.55255508 -380.18884277]
[-51.81555939 -365.95645142]
[-38.42295456 -359.53979492]
[-33.41622162 -345.17358398]
[-40.23741913 -331.16970825]
[-35.50042725 -316.93731689]
[-24.39847946 -314.14895630]
[-15.94384480 -306.25521851]
[-12.32672405 -295.14215088]
[-14.56066608 -283.54843140]
[-22.20197105 -274.39065552]
[-17.97598267 -259.99826050]
[-13.74999428 -245.60586548]
[-9.52400589 -231.21347046]
[3.63104343 -224.32287598]
[8.12182140 -209.78713989]
[0.80513811 -196.03564453]
[5.03112650 -181.64324951]
[9.25711441 -167.25085449]
[21.33497810 -162.70785522]
[28.69243431 -151.87059021]
[28.45100403 -138.57919312]
[20.47454834 -127.70202637]
[24.44297409 -113.23649597]
[28.41139984 -98.77096558]
[33.27522659 -84.58142090]
[39.01547623 -70.72322845]
[44.75572968 -56.86503220]
[50.49597931 -43.00683975]
[56.23623276 -29.14864731]
[61.97648239 -15.29045391]
[67.71673584 -1.43226111]
[73.45698547 12.42593193]
[78.93943024 17.41851425]
[79.17357635 26.58307266]
[84.66555786 40.54151535]
[90.15753937 54.49995804]
[95.64952087 68.45840454]
[101.14150238 82.41684723]
[110.51297760 85.85971832]
[116.50920868 93.84238434]
[117.20509338 103.80197906]
[112.37721252 112.54093170]
[117.36748505 126.68650818]
[122.35775757 140.83207703]
[134.24543762 151.27207947]
[131.18302917 165.84846497]
[136.17330933 179.99403381]
[141.16358948 194.13960266]
[153.05125427 204.57960510]
[149.98886108 219.15599060]
[154.97914124 233.30157471]
[159.96940613 247.44714355]
[164.95968628 261.59271240]
[169.94995117 275.73828125]
[174.94023132 289.88385010]
[179.93049622 304.02941895]
[183.38865662 306.77529907]
[185.55563354 310.14657593]
[186.39402771 313.65390015]
[186.03138733 316.84704590]
[184.73266602 319.36593628]
[188.70109558 333.83148193]
[192.66950989 348.29699707]
[196.63793945 362.76254272]
[200.60636902 377.22805786]
[204.57479858 391.69360352]
[216.78607178 394.53564453]
[226.56547546 402.26528931]
[232.08668518 413.36050415]
[232.35215759 425.67837524]
[227.37286377 436.86901855]
[218.15446472 444.82385254]
[221.60404968 459.42181396]
[225.05364990 474.01977539]
[228.89280701 488.52014160]
[233.11878967 502.91253662]
[237.34478760 517.30493164]
[241.57077026 531.69732666]
[245.79676819 546.08972168]
[256.06057739 559.58380127]
[245.93516541 573.18206787]
[230.06535339 567.21667480]
[231.40437317 550.31573486]
[227.17837524 535.92333984]
[222.95239258 521.53094482]
[218.72640991 507.13851929]
[214.50041199 492.74612427]
[211.56462097 490.73870850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[13 148]
[14 143]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[22 135]
[23 134]
[24 133]
[26 131]
[27 130]
[28 129]
[30 125]
[31 124]
[32 123]
[33 122]
[34 121]
[35 119]
[36 118]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
[42 112]
[50 111]
[51 110]
[52 109]
[55 105]
[56 104]
[57 103]
[60 100]
[61 99]
[62 98]
[63 97]
[66 92]
[67 91]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
