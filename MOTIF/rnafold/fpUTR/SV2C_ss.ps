%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGAGGCAGCCCGGGGAAGCGAGCCGGAGCGGCGCCCGCACUGAGGCGGCUGCAGUGCUGACACCACUCAGGGCAAGGGUGUCCGACGGCUGGAGCGUUCUGUUUUGAACCCAAAGUGGAUGAUGCUGUCAGAGCUGAACCACUGAAAGGAGGCUGUGAAAAUUUCCCAUCUUCUCAUUGGCCAUCAGUUGAGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[32.38983917 275.90335083]
[26.67210960 262.03585815]
[27.29810143 247.05191040]
[17.95885277 258.78982544]
[8.61960411 270.52774048]
[10.21321869 286.02282715]
[0.57468218 297.79370117]
[-14.20734882 299.21746826]
[-23.54659843 310.95538330]
[-26.08416557 326.57174683]
[-40.06302261 331.71380615]
[-49.40227127 343.45172119]
[-58.64950562 355.26226807]
[-67.80416107 367.14468384]
[-76.95881653 379.02713013]
[-86.11346436 390.90957642]
[-80.82620239 405.40261841]
[-84.23609161 420.44842529]
[-95.25505066 431.24591064]
[-110.36697388 434.34967041]
[-124.74970245 428.76928711]
[-133.81375122 416.28543091]
[-134.66682434 400.88168335]
[-127.03670502 387.47329712]
[-113.35813904 380.33883667]
[-97.99590302 381.75491333]
[-88.84124756 369.87246704]
[-79.68659973 357.99005127]
[-70.53194427 346.10760498]
[-68.93872070 338.88446045]
[-61.14017868 334.11248779]
[-51.80093002 322.37457275]
[-49.93136597 307.59777832]
[-35.28450394 301.61611938]
[-25.94525528 289.87823486]
[-27.87936783 275.15426636]
[-18.57525253 263.11730957]
[-3.11830163 261.18847656]
[6.22094679 249.45057678]
[15.56019497 237.71266174]
[16.86848450 227.47866821]
[26.58092117 221.11389160]
[33.77433395 207.95124817]
[40.96774292 194.78862000]
[48.16115570 181.62599182]
[55.35456467 168.46336365]
[62.44489288 155.24491882]
[69.43170166 141.97146606]
[76.41851807 128.69801331]
[55.14614868 97.72377014]
[70.84766388 56.12228775]
[59.95495605 45.80973434]
[49.06224060 35.49717712]
[33.72139740 31.62818336]
[29.79852295 17.25945663]
[18.90580940 6.94690037]
[8.01309872 -3.36565685]
[-2.87961316 -13.67821407]
[-20.58937073 -9.82076931]
[-36.92884827 -17.29504013]
[-45.44096756 -32.93997955]
[-42.88664246 -50.40773392]
[-54.09634781 -60.37480545]
[-65.30605316 -70.34188080]
[-76.51575470 -80.30895233]
[-87.72546387 -90.27602386]
[-98.93516541 -100.24309540]
[-107.43513489 -103.61054230]
[-110.24061584 -110.45461273]
[-121.29317474 -120.59566498]
[-136.77375793 -118.38538361]
[-150.02595520 -126.68679810]
[-154.79246521 -141.58023071]
[-148.82269287 -156.03346252]
[-134.93539429 -163.22212219]
[-119.68770599 -159.75192261]
[-110.27913666 -147.26141357]
[-111.15212250 -131.64822388]
[-100.09956360 -121.50716400]
[-88.96809387 -111.45279694]
[-77.75838470 -101.48572540]
[-66.54868317 -91.51865387]
[-55.33897781 -81.55158234]
[-44.12927628 -71.58451080]
[-32.91957092 -61.61743927]
[-21.56837654 -65.94715118]
[-9.38162708 -65.03125000]
[1.32063591 -58.98249054]
[8.47480202 -48.89663696]
[10.67151165 -36.65441513]
[7.43294382 -24.57092476]
[18.32565498 -14.25836849]
[29.21836662 -3.94581175]
[40.11108017 6.36674547]
[54.67280197 9.49811459]
[59.37479782 24.60446358]
[70.26750946 34.91701889]
[81.16022491 45.22957611]
[95.35945892 40.39411163]
[97.69439697 25.57695770]
[100.02933502 10.75980377]
[102.36427307 -4.05735064]
[92.86327362 -16.68694115]
[95.15821838 -32.32371902]
[107.88755035 -41.69065857]
[123.49919128 -39.23052216]
[132.73101807 -26.40286636]
[130.10597229 -10.81810856]
[117.18142700 -1.72241235]
[114.84648895 13.09474182]
[112.51155090 27.91189575]
[110.17661285 42.72904968]
[116.52035522 46.72991943]
[124.52230072 34.04257202]
[137.20951843 42.04473114]
[129.20783997 54.73165894]
[135.55157471 58.73252869]
[147.91677856 50.24126816]
[160.28199768 41.75000381]
[172.64721680 33.25873947]
[185.01242065 24.76747894]
[183.19831848 10.89322376]
[187.52008057 -2.34538126]
[197.07958984 -12.38105869]
[209.96899414 -17.29356956]
[223.65112305 -16.17698860]
[235.45906067 -9.30619144]
[247.95547485 -17.60315895]
[260.45187378 -25.90012550]
[265.02447510 -41.27774429]
[279.95150757 -47.15671921]
[293.78231812 -39.02720642]
[295.90701294 -23.12547302]
[284.69577026 -11.64996529]
[268.74884033 -13.40371323]
[256.25244141 -5.10674572]
[243.75602722 3.19022179]
[245.16058350 19.28430557]
[238.21928406 33.97623062]
[224.74011230 43.21772003]
[208.34652710 44.40972900]
[193.50367737 37.13269043]
[181.13847351 45.62395477]
[168.77325439 54.11521530]
[156.40805054 62.60647964]
[144.04283142 71.09774017]
[145.19148254 81.59548950]
[144.07986450 91.39683533]
[141.02766418 100.05118561]
[136.43809509 107.20613861]
[150.26240540 113.02751923]
[164.08671570 118.84889221]
[177.91102600 124.67027283]
[191.73533630 130.49165344]
[205.55964661 136.31303406]
[214.69139099 136.76062012]
[219.55339050 142.33493042]
[233.28503418 148.37165833]
[249.03216553 146.84246826]
[257.56936646 159.04759216]
[271.30102539 165.08432007]
[285.03265381 171.12104797]
[301.96582031 171.96041870]
[305.84683228 188.46417236]
[291.06240845 196.76220703]
[278.99594116 184.85269165]
[265.26428223 178.81596375]
[251.53265381 172.77923584]
[236.76770020 174.74021912]
[227.24829102 162.10330200]
[213.51666260 156.06657410]
[199.73826599 150.13734436]
[185.91395569 144.31596375]
[172.08964539 138.49458313]
[158.26533508 132.67320251]
[144.44102478 126.85182953]
[130.61671448 121.03044891]
[125.60439301 126.90869904]
[119.48455048 131.62301636]
[112.52191162 134.96948242]
[105.01763916 136.80334473]
[97.29632568 137.04528809]
[89.69196320 135.68482971]
[82.70515442 148.95828247]
[75.71834564 162.23173523]
[74.48836517 171.29133606]
[68.51719666 175.65676880]
[61.32378387 188.81941223]
[54.13037491 201.98204041]
[46.93696213 215.14466858]
[39.74355316 228.30729675]
[53.31310272 221.91455078]
[68.31269073 221.80357361]
[81.97534943 227.99484253]
[91.78071594 239.34626770]
[95.92000580 253.76382446]
[93.62964630 268.58795166]
[85.33213043 281.08398438]
[72.55810547 288.94683838]
[57.66399765 290.72601318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 40]
[4 39]
[5 38]
[8 35]
[9 34]
[11 32]
[12 31]
[13 29]
[14 28]
[15 27]
[16 26]
[42 191]
[43 190]
[44 189]
[45 188]
[46 187]
[47 185]
[48 184]
[49 183]
[51 98]
[52 97]
[53 96]
[55 94]
[56 93]
[57 92]
[58 91]
[62 85]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[69 79]
[70 78]
[99 112]
[100 111]
[101 110]
[102 109]
[117 146]
[118 145]
[119 144]
[120 143]
[121 142]
[127 137]
[128 136]
[129 135]
[150 177]
[151 176]
[152 175]
[153 174]
[154 173]
[155 172]
[157 171]
[158 170]
[160 168]
[161 167]
[162 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
