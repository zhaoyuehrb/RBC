%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS9)
} def

/sequence { (\
GUGCGGCGGUGUGCUUUUUCUCUAGGGUUUGGGUUGGAUGGUGGCCCGGGCCUUCCGAGUUUCCAUGAGCGCAGACGGGGAAGCGGAGCCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.078094247 ubox
1 12 0.009072118 ubox
1 14 0.031042952 ubox
1 84 0.018524955 ubox
1 89 0.009705576 ubox
1 93 0.336215991 ubox
2 6 0.073102959 ubox
2 8 0.006326715 ubox
2 9 0.003805139 ubox
2 11 0.020899423 ubox
2 13 0.031157615 ubox
2 83 0.018452880 ubox
2 85 0.032734559 ubox
2 88 0.009346118 ubox
2 91 0.027701755 ubox
2 92 0.340145470 ubox
3 7 0.013675868 ubox
3 10 0.049825019 ubox
3 12 0.046520329 ubox
3 14 0.012474143 ubox
3 84 0.043339309 ubox
3 89 0.013890630 ubox
3 90 0.015879475 ubox
4 9 0.053871249 ubox
4 11 0.047432068 ubox
4 13 0.012557758 ubox
4 77 0.017297234 ubox
4 83 0.043345766 ubox
4 88 0.014156866 ubox
5 10 0.042091713 ubox
5 12 0.011638091 ubox
5 15 0.014891455 ubox
5 76 0.017582295 ubox
5 90 0.947926022 ubox
6 12 0.005095141 ubox
6 14 0.016018499 ubox
6 84 0.008112902 ubox
6 89 0.949082887 ubox
7 11 0.005479720 ubox
7 13 0.016032810 ubox
7 77 0.049706088 ubox
7 83 0.008162252 ubox
7 85 0.006934095 ubox
7 88 0.948840219 ubox
8 12 0.009958967 ubox
8 15 0.008369327 ubox
8 20 0.006928326 ubox
8 21 0.005429393 ubox
8 22 0.004145333 ubox
8 23 0.005417167 ubox
8 76 0.050098808 ubox
8 84 0.006388746 ubox
8 90 0.273348521 ubox
9 14 0.008902309 ubox
9 19 0.006490063 ubox
9 20 0.006091796 ubox
9 22 0.005677313 ubox
9 76 0.005293786 ubox
9 84 0.008918205 ubox
9 89 0.273599876 ubox
9 93 0.045728783 ubox
10 73 0.075820230 ubox
10 75 0.004094447 ubox
10 83 0.008236759 ubox
10 85 0.094790319 ubox
10 88 0.271332417 ubox
10 91 0.100404075 ubox
10 92 0.041026761 ubox
11 72 0.080617764 ubox
11 84 0.095876741 ubox
11 89 0.012491718 ubox
11 90 0.117547915 ubox
11 93 0.011755818 ubox
12 71 0.080599085 ubox
12 83 0.090596611 ubox
12 85 0.955419187 ubox
12 88 0.012318857 ubox
12 91 0.013565925 ubox
12 92 0.010964494 ubox
13 70 0.080647419 ubox
13 84 0.979275620 ubox
13 89 0.138953420 ubox
13 90 0.011163682 ubox
14 25 0.006225580 ubox
14 69 0.080648381 ubox
14 80 0.003194517 ubox
14 83 0.978625841 ubox
14 86 0.051366363 ubox
14 88 0.139577574 ubox
15 24 0.006470881 ubox
15 68 0.080487163 ubox
15 81 0.007789019 ubox
15 82 0.913718199 ubox
15 83 0.017508536 ubox
15 85 0.051381720 ubox
15 86 0.004668397 ubox
15 87 0.139428279 ubox
16 67 0.079156186 ubox
16 80 0.008304730 ubox
16 81 0.708175913 ubox
16 82 0.104711290 ubox
16 83 0.020633171 ubox
16 85 0.008028019 ubox
16 86 0.135039514 ubox
16 87 0.004279287 ubox
17 67 0.003660981 ubox
17 79 0.008505070 ubox
17 80 0.639536025 ubox
17 81 0.136430860 ubox
17 82 0.122462615 ubox
17 83 0.112561293 ubox
17 85 0.088490116 ubox
17 86 0.004707367 ubox
18 59 0.004508020 ubox
18 78 0.009140666 ubox
18 79 0.594101927 ubox
18 80 0.161409430 ubox
18 81 0.245233683 ubox
18 82 0.341310777 ubox
18 83 0.007183761 ubox
18 85 0.003654818 ubox
19 26 0.012103972 ubox
19 58 0.006822275 ubox
19 75 0.003373262 ubox
19 77 0.009956958 ubox
19 78 0.581395846 ubox
19 79 0.182404440 ubox
19 80 0.292108098 ubox
19 81 0.629898473 ubox
19 82 0.007958964 ubox
20 25 0.017398288 ubox
20 26 0.026677209 ubox
20 57 0.007032733 ubox
20 59 0.083563150 ubox
20 74 0.003531329 ubox
20 77 0.580227123 ubox
20 78 0.206166540 ubox
20 79 0.355981499 ubox
20 80 0.675542095 ubox
20 83 0.006763314 ubox
20 88 0.005175809 ubox
21 25 0.027603131 ubox
21 26 0.020392501 ubox
21 27 0.003475861 ubox
21 58 0.087594971 ubox
21 73 0.003220804 ubox
21 75 0.135409434 ubox
21 77 0.199032350 ubox
21 78 0.351907825 ubox
21 79 0.678554775 ubox
21 80 0.038532532 ubox
21 81 0.056403560 ubox
21 82 0.005074651 ubox
21 87 0.005247737 ubox
22 26 0.046386603 ubox
22 57 0.087820019 ubox
22 59 0.009727310 ubox
22 74 0.135880249 ubox
22 77 0.355525400 ubox
22 78 0.683263230 ubox
22 79 0.076483605 ubox
22 80 0.061784900 ubox
22 86 0.005221519 ubox
23 58 0.009833633 ubox
23 73 0.128570495 ubox
23 77 0.673955734 ubox
23 78 0.072918664 ubox
23 79 0.060501312 ubox
23 85 0.004943381 ubox
24 53 0.007492299 ubox
24 54 0.135850095 ubox
25 52 0.006650778 ubox
25 53 0.162831256 ubox
25 54 0.005723580 ubox
25 56 0.004031529 ubox
26 51 0.005049058 ubox
26 52 0.166382603 ubox
27 51 0.166483310 ubox
27 70 0.037914041 ubox
27 72 0.003465248 ubox
27 76 0.983449198 ubox
28 50 0.166443184 ubox
28 68 0.008258730 ubox
28 69 0.037761696 ubox
28 71 0.003420435 ubox
28 74 0.003268364 ubox
28 75 0.984352990 ubox
29 49 0.165767147 ubox
29 67 0.007971618 ubox
29 68 0.035253739 ubox
29 74 0.983641790 ubox
30 48 0.165987809 ubox
30 65 0.026499802 ubox
30 67 0.028292539 ubox
30 73 0.984063357 ubox
31 47 0.166562241 ubox
31 61 0.006451502 ubox
31 64 0.031646743 ubox
31 66 0.015349331 ubox
31 72 0.984987704 ubox
32 46 0.166568179 ubox
32 60 0.007521847 ubox
32 63 0.031624392 ubox
32 64 0.021261715 ubox
33 45 0.166566742 ubox
33 62 0.030548554 ubox
33 63 0.021271725 ubox
33 70 0.984892966 ubox
34 44 0.166267709 ubox
34 58 0.037605814 ubox
34 68 0.026395908 ubox
34 69 0.980395493 ubox
35 43 0.160933279 ubox
35 57 0.038174650 ubox
35 65 0.036663986 ubox
35 67 0.030044710 ubox
35 68 0.926128371 ubox
36 42 0.145014034 ubox
36 56 0.038669252 ubox
36 64 0.040428927 ubox
36 66 0.018209699 ubox
37 55 0.038670169 ubox
37 63 0.040431494 ubox
38 54 0.037623903 ubox
38 62 0.040121639 ubox
38 66 0.955976193 ubox
39 57 0.035103034 ubox
39 65 0.980680618 ubox
40 52 0.038126429 ubox
40 56 0.036083265 ubox
40 63 0.004685333 ubox
40 64 0.984364404 ubox
41 51 0.038207275 ubox
41 55 0.036064087 ubox
41 62 0.004407907 ubox
41 63 0.984034101 ubox
42 50 0.038022675 ubox
43 52 0.036666187 ubox
43 61 0.885477853 ubox
43 62 0.016119533 ubox
44 51 0.036721339 ubox
44 60 0.982288571 ubox
44 61 0.014108789 ubox
45 50 0.036626216 ubox
45 59 0.983347372 ubox
47 57 0.983046922 ubox
48 55 0.005420702 ubox
48 56 0.984299642 ubox
49 54 0.005755144 ubox
49 55 0.983335703 ubox
49 56 0.022185884 ubox
50 54 0.636973020 ubox
50 55 0.027398032 ubox
53 88 0.009131725 ubox
54 68 0.007911356 ubox
54 75 0.020523001 ubox
54 79 0.007105881 ubox
54 81 0.003351661 ubox
54 87 0.035227085 ubox
55 67 0.008726559 ubox
55 74 0.024721874 ubox
55 78 0.015196469 ubox
55 79 0.004677693 ubox
55 80 0.004906337 ubox
55 86 0.039554765 ubox
56 67 0.009766395 ubox
56 71 0.021586050 ubox
56 77 0.015305445 ubox
56 78 0.004688812 ubox
56 79 0.004949445 ubox
56 85 0.039559719 ubox
57 63 0.015354732 ubox
57 66 0.008498964 ubox
57 70 0.021182602 ubox
57 76 0.015047173 ubox
57 84 0.037351047 ubox
58 62 0.013390025 ubox
59 66 0.005028651 ubox
59 70 0.116508755 ubox
59 72 0.028545292 ubox
59 76 0.017642739 ubox
59 84 0.015660884 ubox
60 65 0.004979350 ubox
60 68 0.015395760 ubox
60 69 0.115764771 ubox
60 71 0.028025613 ubox
60 75 0.017695658 ubox
60 81 0.032551588 ubox
60 82 0.015911774 ubox
60 83 0.017631949 ubox
61 67 0.015843325 ubox
61 68 0.111819963 ubox
61 69 0.031158325 ubox
61 74 0.017461175 ubox
61 80 0.032936728 ubox
61 81 0.017052189 ubox
61 82 0.019115337 ubox
62 67 0.100163038 ubox
62 68 0.037299980 ubox
62 73 0.014137574 ubox
62 75 0.005278331 ubox
62 79 0.034001206 ubox
62 80 0.017685013 ubox
62 81 0.020135840 ubox
63 67 0.039575926 ubox
63 74 0.005602402 ubox
63 78 0.035494538 ubox
63 79 0.019457765 ubox
63 80 0.020531490 ubox
64 77 0.035441012 ubox
64 78 0.019454864 ubox
64 79 0.020502692 ubox
66 73 0.027648523 ubox
66 77 0.022698472 ubox
67 72 0.029486587 ubox
67 76 0.026149231 ubox
70 77 0.011339252 ubox
71 76 0.013318169 ubox
76 85 0.051311274 ubox
77 84 0.051773854 ubox
77 90 0.004801841 ubox
78 89 0.004850300 ubox
78 90 0.016279391 ubox
79 89 0.016271344 ubox
79 90 0.016271991 ubox
80 89 0.016291124 ubox
83 89 0.008085260 ubox
84 88 0.008082628 ubox
5 90 0.9500000 lbox
6 89 0.9500000 lbox
7 88 0.9500000 lbox
12 85 0.9500000 lbox
13 84 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
16 81 0.9500000 lbox
17 80 0.9500000 lbox
18 79 0.9500000 lbox
19 78 0.9500000 lbox
20 77 0.9500000 lbox
27 76 0.9500000 lbox
28 75 0.9500000 lbox
29 74 0.9500000 lbox
30 73 0.9500000 lbox
31 72 0.9500000 lbox
33 70 0.9500000 lbox
34 69 0.9500000 lbox
35 68 0.9500000 lbox
38 66 0.9500000 lbox
39 65 0.9500000 lbox
40 64 0.9500000 lbox
41 63 0.9500000 lbox
43 61 0.9500000 lbox
44 60 0.9500000 lbox
45 59 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
showpage
end
%%EOF
