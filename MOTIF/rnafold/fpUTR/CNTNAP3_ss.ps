%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAGCUGCGGCGCGAGUCCGCGGGGCCGACCUCGGAGACGCAGCUGGGGCCGGGCGCGGCUUGGCGGGAGGGUCUGCAGCGCCGAGGGAGGCUGCUGGUGCGUGAGGAAGAGAGCUAGAGACUGGACAGGGGAGGCAGAGCAGCGUCAGAGCCGCGCAGGGGACGGGAGUGAGAGCAGGAGCGACGCAGAGCGGCCGUCGCCGUGCCCGGGUCUCAGGGCGCCUGGCUGAAGUGAGC\
) } def
/len { sequence length } bind def

/coor [
[18.77443504 235.02476501]
[14.41992664 249.37879944]
[0.06596566 245.02404785]
[4.42032957 230.67048645]
[8.77460003 216.31639099]
[1.59754717 214.13925171]
[-8.72777176 225.01986694]
[-19.05309105 235.90048218]
[-22.94006348 251.23678589]
[-37.31337738 255.14280701]
[-47.63869476 266.02343750]
[-57.96401596 276.90405273]
[-68.28933716 287.78466797]
[-78.54322052 298.73260498]
[-88.72522736 309.74746704]
[-98.90724182 320.76229858]
[-98.46430206 336.33282471]
[-108.94721985 347.35839844]
[-123.79407501 347.68472290]
[-133.97608948 358.69955444]
[-144.15809631 369.71438599]
[-154.34010315 380.72921753]
[-158.02600098 396.11508179]
[-172.34695435 400.20892334]
[-182.52896118 411.22375488]
[-181.65812683 427.00405884]
[-192.26278687 438.72225952]
[-208.05139160 439.42620850]
[-219.65684509 428.69824219]
[-220.19381714 412.90307617]
[-209.34376526 401.41171265]
[-193.54380798 401.04174805]
[-183.36178589 390.02691650]
[-180.40419006 375.42889404]
[-165.35494995 370.54721069]
[-155.17292786 359.53237915]
[-144.99092102 348.51754761]
[-134.80891418 337.50271606]
[-135.64846802 322.67602539]
[-125.47937012 311.36035156]
[-109.92208099 310.58029175]
[-99.74006653 299.56546021]
[-89.55805206 288.55059814]
[-87.33007812 281.51928711]
[-79.16995239 277.45935059]
[-68.84462738 266.57873535]
[-58.51931381 255.69810486]
[-48.19399261 244.81748962]
[-45.04555511 230.25944519]
[-29.93370628 225.57516479]
[-19.60838699 214.69454956]
[-9.28306866 203.81393433]
[34.73566055 198.04115295]
[42.23566055 185.05076599]
[49.73566055 172.06039429]
[57.23566055 159.07000732]
[64.73566437 146.07962036]
[72.23566437 133.08924866]
[79.73566437 120.09886169]
[74.66554260 113.14431000]
[71.89907074 104.99455261]
[71.68780518 96.39064789]
[57.82961273 90.65039825]
[43.97142029 84.91014099]
[30.11322594 79.16989136]
[16.25503349 73.42964172]
[2.39684081 67.68939209]
[-11.46135235 61.94913864]
[-22.47892761 72.46260071]
[-36.82237625 77.57976532]
[-52.00661087 76.41404724]
[-65.40087128 69.16741180]
[-74.68451691 57.09538651]
[-78.24910736 42.28952408]
[-75.47705078 27.31502533]
[-66.84862518 14.76631641]
[-53.85874939 6.81753445]
[-38.75801086 4.84585524]
[-24.16269493 9.19288349]
[-12.60153103 19.10547066]
[-6.07756042 32.86619949]
[-5.72110081 48.09094620]
[8.13709259 53.83119583]
[21.99528503 59.57144928]
[35.85347748 65.31169891]
[49.71166992 71.05194855]
[63.56986237 76.79220581]
[77.42805481 82.53245544]
[90.13467407 70.57049561]
[108.79344177 67.63667297]
[108.59709167 52.63795853]
[100.67981720 38.94024658]
[108.24986267 26.11278915]
[108.05352020 11.11407375]
[107.85717010 -3.88464141]
[107.66082764 -18.88335609]
[107.46448517 -33.88207245]
[107.26814270 -48.88078690]
[98.59736633 -58.41225815]
[98.73173523 -70.89629364]
[107.05470276 -79.65738678]
[107.05470276 -94.65738678]
[107.05470276 -109.65738678]
[94.52773285 -112.59808350]
[82.89819336 -118.08884430]
[72.67842865 -125.88455200]
[64.31800842 -135.63865662]
[58.18395996 -146.91848755]
[54.54463196 -159.22453308]
[53.55797195 -172.01252747]
[55.26467133 -184.71746826]
[59.58648682 -196.77870178]
[66.32984161 -207.66452026]
[75.19447327 -216.89573669]
[85.78681946 -224.06665039]
[97.63746643 -228.86300659]
[110.22199249 -231.07563782]
[111.00703430 -246.05508423]
[111.79206848 -261.03451538]
[112.57711029 -276.01397705]
[107.36801147 -292.14782715]
[121.42933655 -301.61965942]
[134.42356873 -290.72991943]
[127.55655670 -275.22894287]
[126.77151489 -260.24948120]
[125.98647308 -245.27005005]
[125.20143890 -230.29060364]
[141.57945251 -224.94390869]
[155.81134033 -215.21095276]
[166.75053406 -201.86698914]
[173.51327515 -185.97851562]
[175.54994202 -168.81805420]
[172.68978882 -151.76223755]
[165.15518188 -136.18141174]
[153.54432678 -123.32942963]
[138.78382874 -114.24288177]
[122.05470276 -109.65738678]
[122.05470276 -94.65738678]
[122.05470276 -79.65738678]
[131.63218689 -64.94237518]
[122.26685333 -49.07712936]
[122.46320343 -34.07841492]
[122.65954590 -19.07970047]
[122.85588837 -4.08098555]
[123.05223083 10.91772938]
[123.24857330 25.91644478]
[131.15180969 38.54134750]
[123.59580994 52.44161606]
[123.79215240 67.44033051]
[134.04603577 78.38829041]
[148.99980164 79.56517792]
[163.95355225 80.74206543]
[178.31825256 74.11136627]
[190.39923096 82.82338715]
[205.35298157 84.00026703]
[220.30674744 85.17715454]
[234.67143250 78.54645538]
[246.75241089 87.25847626]
[261.70617676 88.43536377]
[276.65994263 89.61225128]
[291.02462769 82.98155212]
[303.10559082 91.69356537]
[318.05935669 92.87045288]
[333.02050781 93.94944763]
[347.98840332 94.93048859]
[362.95626831 95.91153717]
[377.92416382 96.89258575]
[392.89202881 97.87363434]
[404.71386719 87.73054504]
[419.87945557 88.93869019]
[429.47647095 100.27150726]
[444.44436646 101.25254822]
[452.43719482 90.03654480]
[464.82785034 84.27562714]
[478.33938599 85.37557220]
[489.45620728 92.94300079]
[495.33877563 104.91577911]
[510.29254150 106.09266663]
[519.54370117 93.74681854]
[534.00885010 88.38378906]
[549.07226562 91.71490479]
[559.92730713 102.67721558]
[563.11010742 117.77268982]
[557.60504150 132.18441772]
[545.16876221 141.31367493]
[529.76971436 142.24732971]
[516.32159424 134.68748474]
[509.11566162 121.04642487]
[494.16189575 119.86954498]
[483.89706421 132.69161987]
[467.84967041 136.90408325]
[452.30197144 130.65274048]
[443.46331787 116.22043610]
[428.49542236 115.23938751]
[417.50128174 125.22257996]
[402.30773926 124.44088745]
[391.91098022 112.84151459]
[376.94311523 111.86046600]
[361.97521973 110.87942505]
[347.00735474 109.89837646]
[332.03945923 108.91732788]
[325.17300415 111.61080933]
[316.88247681 107.82421875]
[301.92871094 106.64733124]
[288.63360596 113.36220551]
[275.48306274 104.56600952]
[260.52929688 103.38912201]
[245.57553101 102.21223450]
[232.28042603 108.92711639]
[219.12986755 100.13092041]
[204.17610168 98.95403290]
[189.22233582 97.77714539]
[175.92724609 104.49201965]
[162.77667236 95.69582367]
[147.82290649 94.51893616]
[132.86915588 93.34204865]
[131.85090637 106.64955902]
[125.82363892 118.10578156]
[116.05727386 125.97736359]
[104.35517120 129.21759033]
[92.72604370 127.59886169]
[85.22604370 140.58924866]
[77.72604370 153.57962036]
[70.22604370 166.57000732]
[62.72604370 179.56039429]
[55.22604370 192.55076599]
[47.72604370 205.54115295]
[45.08909988 220.30755615]
[47.62934113 235.09089661]
[50.16958237 249.87423706]
[63.21905136 258.78976440]
[66.06002808 274.33660889]
[57.00701523 287.29110718]
[41.43100357 289.96755981]
[28.57296181 280.77807617]
[26.06134224 265.17465210]
[35.38624191 252.41447449]
[32.84600067 237.63113403]
[30.30575752 222.84779358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 52]
[7 51]
[8 50]
[10 48]
[11 47]
[12 46]
[13 45]
[14 43]
[15 42]
[16 41]
[19 38]
[20 37]
[21 36]
[22 35]
[24 33]
[25 32]
[53 227]
[54 226]
[55 225]
[56 224]
[57 223]
[58 222]
[59 221]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[90 149]
[91 148]
[93 146]
[94 145]
[95 144]
[96 143]
[97 142]
[98 141]
[101 139]
[102 138]
[103 137]
[117 127]
[118 126]
[119 125]
[120 124]
[150 216]
[151 215]
[152 214]
[154 212]
[155 211]
[156 210]
[158 208]
[159 207]
[160 206]
[162 204]
[163 203]
[164 201]
[165 200]
[166 199]
[167 198]
[168 197]
[171 194]
[172 193]
[177 189]
[178 188]
[228 239]
[229 238]
[230 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
