%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCGGAUUUGCCACCUGGGAGCGGAACCUGAUAGUAGCGCCCUCCUCGAGCGCUCCAUAGUCACUGUGUCCUUCCUCUUGCUCUCUUCCUGACGUUAGCAGAGGACUGGGACUCGCGAGAGAGGACUCACGGACCUCCAGGACCUAUUAACUUGACAGACCCGCCCCUCUAUUCGAGCCAGCCCAACUCGGAGAACUCAGAGUCAUCCUCGAGAGUAAAGAAAGCUCUUAGAGUUUUUUUUUUUUGACAAAU\
CUAUCUUAA\
) } def
/len { sequence length } bind def

/coor [
[86.87453461 356.36532593]
[95.37255859 342.33978271]
[95.19474030 327.34085083]
[95.01692200 312.34188843]
[84.21448517 302.15155029]
[83.82048035 286.94302368]
[94.58228302 275.68154907]
[94.40446472 260.68258667]
[94.22664642 245.68363953]
[94.04882050 230.68469238]
[93.87100220 215.68574524]
[93.69317627 200.68681335]
[93.51535797 185.68786621]
[85.62772369 173.05320740]
[93.20088196 159.16227722]
[93.02305603 144.16333008]
[73.35278320 135.90269470]
[59.74964905 119.46759033]
[55.31087494 98.60002899]
[61.04709244 78.05121613]
[49.39923477 68.59989929]
[37.75137711 59.14858246]
[29.14664078 56.18578720]
[26.02232933 49.51552582]
[14.48733234 39.92679214]
[2.95233679 30.33805466]
[-8.58265972 20.74931717]
[-21.74324036 23.52042770]
[-33.92327118 18.29206657]
[-40.77552032 7.17360830]
[-39.99496078 -5.66868067]
[-51.41547394 -15.39348793]
[-62.83598328 -25.11829567]
[-80.26152039 -23.40859413]
[-93.26509857 -34.62236786]
[-94.10173035 -51.43426895]
[-105.63672638 -61.02300644]
[-117.17172241 -70.61174011]
[-130.27581787 -63.02832413]
[-145.15583801 -60.39073944]
[-160.01251221 -62.99832916]
[-173.05606079 -70.51735687]
[-182.72186279 -82.02361298]
[-187.85807800 -96.11594391]
[-187.86294556 -111.08688354]
[-182.75518799 -125.12953186]
[-194.29017639 -134.71826172]
[-205.82518005 -144.30700684]
[-217.36016846 -153.89573669]
[-232.91856384 -156.76750183]
[-237.75976562 -170.85339355]
[-249.29476929 -180.44212341]
[-260.82977295 -190.03085327]
[-257.45019531 -175.41653442]
[-262.42822266 -161.26664734]
[-274.21371460 -151.98750305]
[-289.13659668 -150.46861267]
[-302.54992676 -157.18298340]
[-310.27676392 -170.03974915]
[-309.91094971 -185.03527832]
[-301.56640625 -197.49998474]
[-287.84164429 -203.55230713]
[-273.01092529 -201.30775452]
[-283.45919800 -212.07037354]
[-293.90744019 -222.83297729]
[-309.47915649 -223.23246765]
[-319.92187500 -234.29611206]
[-319.44506836 -249.13890076]
[-329.89334106 -259.90151978]
[-345.05743408 -264.41381836]
[-348.37103271 -278.93515015]
[-358.81930542 -289.69775391]
[-369.26757812 -300.46035767]
[-379.71585083 -311.22296143]
[-390.16409302 -321.98556519]
[-396.35888672 -324.13809204]
[-400.01065063 -328.43817139]
[-400.72872925 -333.12939453]
[-410.91891479 -344.13668823]
[-421.10906982 -355.14398193]
[-431.29925537 -366.15127563]
[-441.48941040 -377.15853882]
[-451.67956543 -388.16583252]
[-461.86975098 -399.17312622]
[-472.25402832 -409.99749756]
[-482.82916260 -420.63546753]
[-493.40426636 -431.27346802]
[-503.97940063 -441.91146851]
[-521.87036133 -446.33380127]
[-525.66320801 -463.48242188]
[-536.36364746 -473.99429321]
[-547.06414795 -484.50616455]
[-557.76464844 -495.01806641]
[-572.31640625 -490.27420044]
[-587.40405273 -492.84768677]
[-599.56042480 -502.14718628]
[-605.99218750 -516.03570557]
[-605.22131348 -531.32177734]
[-597.42492676 -544.49279785]
[-584.39465332 -552.52215576]
[-569.12469482 -553.56469727]
[-555.12396240 -547.38092041]
[-545.60980225 -535.39184570]
[-542.76843262 -520.35235596]
[-547.25274658 -505.71853638]
[-536.55230713 -495.20666504]
[-525.85180664 -484.69479370]
[-515.15130615 -474.18292236]
[-503.07720947 -473.98303223]
[-494.07800293 -465.34197998]
[-493.34140015 -452.48657227]
[-482.76629639 -441.84857178]
[-472.19116211 -431.21060181]
[-461.61605835 -420.57260132]
[-458.14266968 -420.18612671]
[-454.67926025 -418.11810303]
[-452.00524902 -414.38912964]
[-450.86245728 -409.36331177]
[-440.67230225 -398.35601807]
[-430.48211670 -387.34872437]
[-420.29196167 -376.34143066]
[-410.10177612 -365.33413696]
[-399.91162109 -354.32684326]
[-389.72143555 -343.31954956]
[-379.40148926 -332.43383789]
[-368.95324707 -321.67123413]
[-358.50497437 -310.90863037]
[-348.05670166 -300.14602661]
[-337.60842896 -289.38342285]
[-323.19168091 -285.64093018]
[-319.13070679 -270.34976196]
[-308.68246460 -259.58715820]
[-293.83206177 -259.62393188]
[-283.08270264 -248.85795593]
[-283.14483643 -233.28125000]
[-272.69656372 -222.51863098]
[-262.24832153 -211.75602722]
[-251.24102783 -201.56585693]
[-239.70602417 -191.97711182]
[-228.17103577 -182.38838196]
[-213.43769836 -180.20246887]
[-207.77143860 -165.43074036]
[-196.23643494 -155.84199524]
[-184.70144653 -146.25326538]
[-173.16644287 -136.66453552]
[-160.29350281 -144.25219727]
[-145.57371521 -146.98291016]
[-130.78013611 -144.50813293]
[-117.70144653 -137.10749817]
[-107.92566681 -125.65741730]
[-102.64734650 -111.52732849]
[-102.52162933 -96.41587067]
[-107.58298492 -82.14673615]
[-96.04798889 -72.55800629]
[-84.51299286 -62.96926498]
[-71.99349976 -65.93503571]
[-59.86680603 -61.08562469]
[-52.63206863 -49.97943497]
[-53.11117935 -36.53880692]
[-41.69066620 -26.81400108]
[-30.27015114 -17.08919334]
[-13.56291866 -19.14061737]
[-0.29011148 -8.24684334]
[1.00607705 9.21432209]
[12.54107285 18.80305862]
[24.07606888 28.39179420]
[35.61106491 37.98052979]
[47.20269775 47.50072479]
[58.85055542 56.95204163]
[70.49841309 66.40335846]
[84.19827271 58.17436981]
[99.91696930 55.28902817]
[115.64627075 58.11596680]
[129.37660217 66.29402161]
[139.35377502 78.77835083]
[153.56367493 73.97430420]
[167.77355957 69.17025757]
[181.98345947 64.36621094]
[196.19335938 59.56216049]
[210.40324402 54.75811386]
[214.04817200 39.76751328]
[225.23475647 29.14377403]
[240.39340210 26.27688980]
[254.68704224 32.08167267]
[263.55462646 44.70584106]
[264.16653442 60.12106323]
[256.32751465 73.40840149]
[242.53897095 80.32791138]
[227.20077515 78.67160797]
[215.20729065 68.96800995]
[200.99740601 73.77205658]
[186.78750610 78.57610321]
[172.57760620 83.38014984]
[158.36772156 88.18419647]
[144.15782166 92.98824310]
[146.23045349 95.96724701]
[148.09439087 99.20401764]
[149.72360229 102.68338013]
[164.32456970 106.12018585]
[178.92553711 109.55698395]
[193.52650452 112.99378967]
[211.04994202 107.28646851]
[223.33729553 119.83562469]
[237.97798157 123.09909058]
[252.61866760 126.36256409]
[266.87585449 119.00643921]
[281.45678711 125.69791412]
[285.17623901 141.30384827]
[275.18096924 153.85270691]
[259.13845825 153.71809387]
[249.35519409 141.00325012]
[234.71450806 137.73977661]
[220.07382202 134.47630310]
[209.72027588 140.69148254]
[197.51284790 138.11621094]
[190.08970642 127.59476471]
[175.48873901 124.15795898]
[160.88775635 120.72115326]
[146.28678894 117.28434753]
[138.96717834 130.37721252]
[149.54229736 141.01521301]
[160.11741638 151.65319824]
[170.69253540 162.29118347]
[181.26765442 172.92918396]
[191.84277344 183.56716919]
[202.41789246 194.20515442]
[212.99301147 204.84315491]
[223.56813049 215.48114014]
[234.14324951 226.11912537]
[244.71836853 236.75712585]
[260.17315674 243.72750854]
[257.75347900 260.50790405]
[240.95903015 262.82806396]
[234.08038330 247.33224487]
[223.50526428 236.69425964]
[212.93014526 226.05625916]
[202.35502625 215.41827393]
[191.77989197 204.78027344]
[181.20477295 194.14228821]
[170.62965393 183.50430298]
[160.05453491 172.86630249]
[149.47941589 162.22831726]
[138.90429688 151.59033203]
[128.32917786 140.95233154]
[123.22052765 142.60816956]
[118.08687592 143.65498352]
[112.99842072 144.10681152]
[108.02200317 143.98551941]
[108.19982147 158.98445129]
[116.10018158 172.69194031]
[108.51430511 185.51004028]
[108.69212341 200.50898743]
[108.86994171 215.50793457]
[109.04776764 230.50688171]
[109.22558594 245.50582886]
[109.40341187 260.50476074]
[109.58123016 275.50372314]
[120.60700226 286.50689697]
[120.57366943 301.72048950]
[110.01586151 312.16409302]
[110.19368744 327.16302490]
[110.37150574 342.16195679]
[119.19966888 355.98208618]
[111.40603638 370.41091919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 262]
[3 261]
[4 260]
[7 257]
[8 256]
[9 255]
[10 254]
[11 253]
[12 252]
[13 251]
[15 249]
[16 248]
[20 170]
[21 169]
[22 168]
[24 167]
[25 166]
[26 165]
[27 164]
[31 161]
[32 160]
[33 159]
[36 155]
[37 154]
[38 153]
[46 145]
[47 144]
[48 143]
[49 142]
[51 140]
[52 139]
[53 138]
[63 137]
[64 136]
[65 135]
[68 132]
[69 131]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[85 114]
[86 113]
[87 112]
[88 111]
[90 108]
[91 107]
[92 106]
[93 105]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[198 219]
[199 218]
[200 217]
[201 216]
[203 213]
[204 212]
[205 211]
[220 244]
[221 243]
[222 242]
[223 241]
[224 240]
[225 239]
[226 238]
[227 237]
[228 236]
[229 235]
[230 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
