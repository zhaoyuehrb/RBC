%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCUGGCAGCCAUGCCACUUGGAAAAGGCCAAUUCAGACGCUCCCUCGUUUCACCAGCCUUGGCCAGCCCUUGCCUCUGGAAAGGGGGCAGCUGUUUGUCUCUGCCAGGCGUCCCAUUGGCCAGGGAGUGAGGCUGGAGGGCCCGGCAGCAGGCAUUUGCGAGUGCUGGCCAGCCGGCACCCCGCCCCGCUUCUCCUCCCCACCUUCCCGUCGCCCACUC\
) } def
/len { sequence length } bind def

/coor [
[149.27246094 244.85084534]
[134.27326965 244.69645691]
[119.95406342 240.22872925]
[107.52833557 231.82626343]
[98.04907990 220.20114136]
[92.31958771 206.33848572]
[90.82559204 191.40919495]
[85.28025818 205.34652710]
[79.73492432 219.28385925]
[74.18959045 233.22119141]
[68.64425659 247.15852356]
[71.54671478 263.29879761]
[58.84714890 273.67437744]
[43.60978699 267.61181641]
[41.50952148 251.34770203]
[54.70692444 241.61318970]
[60.25225830 227.67585754]
[65.79759216 213.73852539]
[71.34292603 199.80119324]
[76.88825989 185.86386108]
[75.09745026 181.66386414]
[75.16059875 176.59597778]
[77.44623566 171.51156616]
[81.92871094 167.39837646]
[84.23365784 152.57652283]
[86.53861237 137.75466919]
[88.84355927 122.93282318]
[79.60287476 115.30809784]
[74.86344910 104.30516052]
[75.67118835 92.35215759]
[63.31724167 83.84451294]
[50.96329880 75.33686066]
[38.60935593 66.82921600]
[26.25541306 58.32156754]
[13.90146923 49.81391907]
[1.54752553 41.30627060]
[-11.32334328 45.25634003]
[-23.93601990 41.13538361]
[-31.75878716 30.65962410]
[-32.11712265 17.78484917]
[-44.35053635 9.10477924]
[-56.58395004 0.42470974]
[-68.81735992 -8.25535965]
[-81.05077362 -16.93542862]
[-93.28418732 -25.61549950]
[-86.38723755 -12.29513359]
[-83.88559723 2.49478745]
[-86.01805878 17.34243393]
[-92.58106232 30.83046341]
[-102.94812012 41.67132187]
[-116.12958527 48.83015060]
[-130.86718750 51.62357712]
[-145.75407410 49.78493881]
[-159.36915588 43.48975754]
[-170.41276550 33.33895874]
[-177.83068848 20.30152893]
[-180.91479492 5.62201214]
[-179.37071228 -9.29830170]
[-173.34580994 -23.03513527]
[-163.41522217 -34.27717972]
[-150.52693176 -41.95128250]
[-135.91122437 -45.32488251]
[-120.96331787 -44.07593918]
[-107.10803223 -38.32240677]
[-116.78561401 -49.78296661]
[-126.46319580 -61.24352646]
[-136.14077759 -72.70408630]
[-146.52191162 -83.53146362]
[-157.56526184 -93.68254089]
[-168.60861206 -103.83361053]
[-179.65197754 -113.98468781]
[-184.72817993 -115.11754608]
[-188.49085999 -117.81066132]
[-190.56622314 -121.30487823]
[-190.93487549 -124.80257416]
[-201.54147339 -135.40917969]
[-212.14807129 -146.01577759]
[-222.75468445 -156.62237549]
[-233.36128235 -167.22898865]
[-243.96788025 -177.83558655]
[-254.57447815 -188.44218445]
[-270.55297852 -189.88005066]
[-279.27062988 -203.34788513]
[-274.03997803 -218.51429749]
[-258.87356567 -223.74491882]
[-245.40574646 -215.02726746]
[-243.96788025 -199.04878235]
[-233.36128235 -188.44218445]
[-222.75468445 -177.83558655]
[-212.14807129 -167.22898865]
[-201.54147339 -156.62237549]
[-190.93487549 -146.01577759]
[-180.32827759 -135.40917969]
[-169.50090027 -125.02803802]
[-158.45755005 -114.87696838]
[-147.41418457 -104.72589111]
[-136.37083435 -94.57481384]
[-138.80587769 -109.37584686]
[-132.94444275 -123.18321991]
[-120.60536194 -131.71241760]
[-105.61754608 -132.31678772]
[-92.63179016 -124.80876923]
[-85.67767334 -111.51815796]
[-86.91309357 -96.56912231]
[-95.95468903 -84.60043335]
[-109.99679565 -79.32604980]
[-124.68021393 -82.38166809]
[-115.00263214 -70.92110443]
[-105.32505035 -59.46054840]
[-95.64747620 -47.99998474]
[-84.60411835 -37.84891129]
[-72.37070465 -29.16884232]
[-60.13729095 -20.48877335]
[-47.90388107 -11.80870342]
[-35.67046738 -3.12863374]
[-23.43705368 5.55143547]
[-6.98763132 2.03033662]
[7.19554186 11.68966675]
[10.05517387 28.95232773]
[22.40911674 37.45997620]
[34.76306152 45.96762466]
[47.11700439 54.47527313]
[59.47094727 62.98292160]
[71.82489014 71.49057007]
[84.17883301 79.99821472]
[106.54294586 75.35105896]
[123.65816498 90.47782135]
[138.60508728 89.21706390]
[153.55201721 87.95630646]
[168.49893188 86.69554901]
[183.44586182 85.43479156]
[198.32051086 74.57263947]
[213.89736938 82.66395569]
[228.82513428 81.19370270]
[243.75291443 79.72344208]
[258.68066406 78.25318909]
[273.60845947 76.78292847]
[286.58377075 67.73023224]
[300.00814819 74.18278503]
[314.93591309 72.71252441]
[329.65679932 61.64283371]
[345.34558105 69.51489258]
[360.25128174 67.83542633]
[375.15695190 66.15596008]
[390.83032227 53.46914673]
[408.19525146 61.98714828]
[423.04797363 59.89029312]
[437.90069580 57.79343796]
[452.75341797 55.69658279]
[467.60610962 53.59972763]
[481.84832764 41.92063904]
[497.85437012 49.12582397]
[512.67620850 46.82086945]
[525.12353516 37.05488205]
[538.88861084 42.74457550]
[553.71044922 40.43962479]
[568.53228760 38.13467407]
[583.35412598 35.82971954]
[598.17602539 33.52476883]
[612.99786377 31.21982002]
[625.42498779 20.51943398]
[640.81396484 26.18614388]
[643.33392334 42.39052200]
[630.39251709 52.46289444]
[615.30279541 46.04166794]
[600.48095703 48.34661865]
[585.65911865 50.65156937]
[570.83721924 52.95652008]
[556.01538086 55.26147079]
[541.19354248 57.56642151]
[529.80639648 67.16754150]
[514.98114014 61.64271927]
[500.15933228 63.94766998]
[492.77587891 73.52202606]
[480.45330811 75.56819916]
[469.70297241 68.45244598]
[454.85025024 70.54930115]
[439.99755859 72.64615631]
[425.14483643 74.74301147]
[410.29211426 76.83986664]
[404.91439819 85.51499176]
[395.45269775 89.89463806]
[384.92474365 88.31625366]
[376.83642578 81.06164551]
[361.93072510 82.74111176]
[347.02505493 84.42057800]
[339.24542236 93.67589569]
[326.84768677 95.20194244]
[316.40618896 87.64029694]
[301.47842407 89.11055756]
[289.57080078 98.05809021]
[275.07870483 91.71070099]
[260.15093994 93.18095398]
[245.22315979 94.65121460]
[230.29539490 96.12146759]
[215.36763000 97.59172821]
[207.45896912 106.73703003]
[195.04104614 108.08905029]
[184.70661926 100.38171387]
[169.75968933 101.64247131]
[154.81277466 102.90322876]
[139.86584473 104.16398621]
[124.91892242 105.42474365]
[122.88780212 111.24851990]
[119.51793671 116.41434479]
[115.00643158 120.62007904]
[109.61718750 123.61970520]
[103.66541290 125.23777771]
[101.36045837 140.05963135]
[99.05551147 154.88146973]
[96.75055695 169.70332336]
[105.61981964 157.60636902]
[117.59728241 148.57640076]
[131.66793823 143.37864685]
[146.63938904 142.45356750]
[161.24288940 145.87957764]
[174.24092102 153.36633301]
[184.53193665 164.27938843]
[191.24388123 177.69392395]
[193.80795288 192.47315979]
[192.00685120 207.36463928]
[185.99320984 221.10639954]
[176.27665710 232.53393555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[24 211]
[25 210]
[26 209]
[27 208]
[30 125]
[31 124]
[32 123]
[33 122]
[34 121]
[35 120]
[36 119]
[40 116]
[41 115]
[42 114]
[43 113]
[44 112]
[45 111]
[64 110]
[65 109]
[66 108]
[67 107]
[68 97]
[69 96]
[70 95]
[71 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[127 203]
[128 202]
[129 201]
[130 200]
[131 199]
[133 196]
[134 195]
[135 194]
[136 193]
[137 192]
[139 190]
[140 189]
[142 186]
[143 185]
[144 184]
[146 180]
[147 179]
[148 178]
[149 177]
[150 176]
[152 173]
[153 172]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
