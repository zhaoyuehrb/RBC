%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGCCAGCCAGGAGCUGUGGGAGGAAACGCCCUCAGUAAAGAUGACCGCGGUCACUGUUAUCUAAACGCAAGUGAAGCCGAGUCACAGGACCCGGAUGUUGUCAGUUCGACGGUAAACGACCCUGCCAGCUUCCAAGAGGGCGGCUUCACUGUGCGAAUAGGUGAGAAGCCAAGAAGGAGGCGCGCUGGAGUUACUUCCGCCCGGUUCUCCUUCCCGCAGUCUGCAGCCGGAGUAAG\
) } def
/len { sequence length } bind def

/coor [
[80.93099213 450.27239990]
[71.27250671 438.45391846]
[67.70669556 423.61318970]
[70.94155884 408.69680786]
[80.33482361 396.66644287]
[94.02143097 389.91073608]
[93.82508850 374.91204834]
[85.92185211 362.28713989]
[93.47785187 348.38687134]
[93.28150940 333.38815308]
[80.74177551 322.16802979]
[80.19561768 305.01199341]
[92.47026062 292.53482056]
[92.07760620 277.53994751]
[91.68495941 262.54507446]
[88.37448120 255.95388794]
[91.38659668 247.35166931]
[91.19025421 232.35295105]
[90.99390411 217.35423279]
[90.79756165 202.35552979]
[90.60121918 187.35681152]
[90.40487671 172.35809326]
[76.47273254 166.79972839]
[66.00587463 177.54426575]
[55.53901672 188.28878784]
[45.07216263 199.03332520]
[45.52961731 214.83099365]
[34.62184143 226.26759338]
[18.82022095 226.55799866]
[7.49957848 215.52992249]
[7.37624979 199.72612000]
[18.52340508 188.52270508]
[34.32763290 188.56646729]
[44.79449081 177.82192993]
[55.26134491 167.07740784]
[65.72820282 156.33287048]
[61.93577194 149.86236572]
[48.99475861 157.44723511]
[33.99507904 157.54544067]
[41.40989685 144.50621033]
[54.35091400 136.92135620]
[50.55848312 130.45085144]
[36.06959534 134.33312988]
[28.60796165 139.56715393]
[21.36562157 138.17007446]
[6.82715845 141.86238098]
[-7.71130514 145.55467224]
[-22.24976921 149.24697876]
[-33.61254883 161.07150269]
[-49.46729279 156.88113403]
[-53.50399780 140.98657227]
[-41.57004929 129.73876953]
[-25.94206810 134.70851135]
[-11.40360451 131.01622009]
[3.13485885 127.32391357]
[17.67332268 123.63161469]
[32.18730927 119.84424591]
[46.67619705 115.96195984]
[58.65983963 80.00562286]
[86.61411285 66.38582611]
[84.07386780 51.60248566]
[81.53362274 36.81914520]
[78.99338531 22.03580475]
[76.45314026 7.25246429]
[73.91289520 -7.53087664]
[71.37265778 -22.31421661]
[58.75007248 -31.44154930]
[56.38450241 -46.47014618]
[65.16380310 -58.44760132]
[62.62356186 -73.23094177]
[60.08332062 -88.01428223]
[57.54307938 -102.79762268]
[54.90613556 -117.56401825]
[52.17259979 -132.31285095]
[49.43906784 -147.06166077]
[46.70553589 -161.81048584]
[43.97200394 -176.55931091]
[41.23846817 -191.30813599]
[38.50493622 -206.05696106]
[35.77140427 -220.80578613]
[33.03787231 -235.55461121]
[30.30433846 -250.30343628]
[23.98596954 -236.69908142]
[11.76218414 -228.00546265]
[-3.16225982 -226.50181580]
[-16.87455940 -232.58233643]
[-25.77970505 -244.65289307]
[-27.54299927 -259.54888916]
[-21.70215034 -273.36499023]
[-9.78847885 -282.47897339]
[5.07455921 -284.50137329]
[18.99026108 -278.90197754]
[28.31065750 -267.14794922]
[27.52561760 -282.12741089]
[26.74057961 -297.10684204]
[25.56369209 -312.06060791]
[23.99576569 -326.97842407]
[22.42783928 -341.89627075]
[13.29041290 -354.81207275]
[19.65496635 -368.27838135]
[18.08703804 -383.19619751]
[16.51911163 -398.11404419]
[14.95118427 -413.03186035]
[5.81375933 -425.94766235]
[12.17831135 -439.41400146]
[10.61038494 -454.33181763]
[9.04245758 -469.24963379]
[-2.12271214 -483.90414429]
[5.65881348 -499.64288330]
[3.89575267 -514.53887939]
[2.13269162 -529.43493652]
[-11.47118473 -536.89910889]
[-18.05914497 -550.94824219]
[-15.09798145 -566.18017578]
[-3.72632313 -576.73785400]
[11.68319511 -578.56170654]
[25.20529938 -570.95037842]
[31.64046478 -556.83062744]
[28.51423836 -541.63171387]
[17.02871895 -531.19799805]
[18.79177856 -516.30194092]
[20.55484009 -501.40594482]
[29.84987640 -493.68383789]
[31.45065689 -481.30212402]
[23.96028709 -470.81756592]
[25.52821350 -455.89974976]
[27.09613991 -440.98190308]
[36.12141800 -429.13314819]
[29.86901283 -414.59979248]
[31.43693924 -399.68197632]
[33.00486755 -384.76412964]
[34.57279205 -369.84631348]
[43.59807205 -357.99752808]
[37.34566879 -343.46417236]
[38.91359329 -328.54635620]
[40.48152161 -313.62854004]
[42.55150986 -311.76589966]
[44.01587296 -308.97909546]
[44.52186966 -305.49203491]
[43.80327606 -301.65106201]
[41.72002029 -297.89187622]
[42.50506210 -282.91244507]
[43.29010010 -267.93298340]
[45.05316162 -253.03697205]
[47.78669357 -238.28814697]
[50.52022552 -223.53932190]
[53.25376129 -208.79049683]
[55.98729324 -194.04167175]
[58.72082520 -179.29284668]
[61.45435715 -164.54402161]
[64.18788910 -149.79519653]
[66.92142487 -135.04637146]
[69.65496063 -120.29755402]
[73.95577240 -114.30536652]
[72.32641602 -105.33786774]
[74.86666107 -90.55452728]
[77.40690613 -75.77118683]
[79.94714355 -60.98784256]
[92.22103882 -52.62799072]
[95.00779724 -37.67176437]
[86.15599823 -24.85445976]
[88.69624329 -10.07111931]
[91.23648071 4.71222162]
[93.77672577 19.49556351]
[96.31697083 34.27890396]
[98.85720825 49.06224442]
[101.39745331 63.84558487]
[112.56365204 63.77071762]
[123.83294678 67.24212646]
[134.05909729 74.28781128]
[142.09803772 84.56255341]
[146.92924500 97.35488892]
[147.77214050 111.63331604]
[144.18499756 126.12905884]
[136.13504028 139.44871521]
[124.03096008 150.20681763]
[137.73414612 156.30787659]
[151.43731689 162.40892029]
[165.14050293 168.50997925]
[178.84368896 174.61102295]
[192.54687500 180.71206665]
[206.25004578 186.81312561]
[219.95323181 192.91416931]
[233.73510742 198.83532715]
[247.59329224 204.57557678]
[263.30392456 202.70834351]
[272.10147095 214.72718811]
[285.95965576 220.46743774]
[295.06564331 220.85737610]
[299.96087646 226.37460327]
[313.74273682 232.29576111]
[327.52462769 238.21691895]
[341.30648804 244.13807678]
[357.51950073 241.67427063]
[367.54696655 254.65046692]
[361.07351685 269.71786499]
[344.75845337 271.37640381]
[335.38531494 257.91995239]
[321.60345459 251.99877930]
[307.82159424 246.07762146]
[294.03973389 240.15646362]
[280.21939087 234.32563782]
[266.36120605 228.58538818]
[251.64179993 230.86320496]
[241.85304260 218.43377686]
[227.99484253 212.69352722]
[223.33447266 213.65270996]
[218.02070618 211.70823669]
[213.85218811 206.61735535]
[200.14900208 200.51629639]
[186.44581604 194.41525269]
[172.74264526 188.31420898]
[159.03945923 182.21315002]
[145.33627319 176.11210632]
[131.63308716 170.01104736]
[117.92990875 163.91000366]
[105.40358734 172.16175842]
[105.59993744 187.16046143]
[105.79627991 202.15917969]
[105.99262238 217.15789795]
[106.18896484 232.15661621]
[106.38530731 247.15531921]
[106.67981720 262.15243530]
[107.07247162 277.14730835]
[107.46512604 292.14215088]
[118.22947693 300.21844482]
[122.32324219 312.83358765]
[118.46696472 325.31997681]
[108.28022766 333.19180298]
[108.47657013 348.19052124]
[116.39384460 361.88824463]
[108.82379913 374.71569824]
[109.02014923 389.71441650]
[122.87891388 396.10949707]
[132.58387756 407.88986206]
[136.20809937 422.71646118]
[133.03199768 437.64544678]
[123.68618011 449.71270752]
[110.02627563 456.52224731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 233]
[7 232]
[9 230]
[10 229]
[13 225]
[14 224]
[15 223]
[17 222]
[18 221]
[19 220]
[20 219]
[21 218]
[22 217]
[23 36]
[24 35]
[25 34]
[26 33]
[42 58]
[43 57]
[45 56]
[46 55]
[47 54]
[48 53]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[65 162]
[66 161]
[69 158]
[70 157]
[71 156]
[72 155]
[73 153]
[74 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[93 143]
[94 142]
[95 141]
[96 136]
[97 135]
[98 134]
[100 132]
[101 131]
[102 130]
[103 129]
[105 127]
[106 126]
[107 125]
[109 122]
[110 121]
[111 120]
[176 216]
[177 215]
[178 214]
[179 213]
[180 212]
[181 211]
[182 210]
[183 209]
[184 206]
[185 205]
[187 203]
[188 202]
[190 201]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
