%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGAGAGGGCAGCAGCGCGCGGUGUCUCCGGCUGCUCAGUCCGACCGCGGCAAGCAAGCGGGCAGGCGCACCGCCCCCUCCCCCGCCCGGCCUCCCCAACUCUGCGGCCGCGAGUAAAGUUUGCAAAGAGGCGCGGGAGGCGGCAGCCGCAGCGAGGAGGCGGCGGGGAAGAAGCGCAGUCUCCGGGUUGGGGGCGGGGGCGGGGGGGGCGCCAAGGAGCCGGGUGGGGGGCGGCGGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[-168.11456299 744.81079102]
[-181.97172546 739.06811523]
[-187.81877136 725.25482178]
[-194.30235291 738.78118896]
[-200.78594971 752.30761719]
[-207.26953125 765.83398438]
[-213.75312805 779.36035156]
[-205.19883728 792.03991699]
[-204.14666748 807.19873047]
[-210.77928162 820.75878906]
[-223.22544861 829.12231445]
[-238.08673096 830.12634277]
[-244.57032776 843.65270996]
[-245.45295715 852.72064209]
[-251.22404480 857.30963135]
[-257.87985229 870.75213623]
[-259.48947144 887.62945557]
[-276.15283203 890.75488281]
[-283.76898193 875.60791016]
[-271.32232666 864.09631348]
[-264.66653442 850.65380859]
[-258.09671021 837.16912842]
[-251.61311340 823.64276123]
[-260.13864136 811.42877197]
[-261.41433716 796.48791504]
[-254.99784851 782.82427979]
[-242.52175903 774.14996338]
[-227.27951050 772.87677002]
[-220.79591370 759.35040283]
[-214.31233215 745.82403564]
[-207.82873535 732.29760742]
[-201.34515381 718.77124023]
[-195.38441467 705.00646973]
[-189.95529175 691.02343750]
[-184.52615356 677.04040527]
[-179.09703064 663.05743408]
[-173.66789246 649.07440186]
[-168.23876953 635.09136963]
[-162.80963135 621.10839844]
[-171.01580811 608.70690918]
[-170.33792114 593.67346191]
[-160.82658386 581.78277588]
[-145.96565247 577.72583008]
[-140.53651428 563.74279785]
[-135.10739136 549.75982666]
[-137.71356201 535.09497070]
[-125.50598907 525.03094482]
[-120.07685852 511.04791260]
[-114.64772797 497.06491089]
[-115.15541840 489.70916748]
[-109.05895233 482.93872070]
[-103.45169830 469.02618408]
[-97.84443665 455.11364746]
[-92.23718262 441.20111084]
[-97.18228912 436.59219360]
[-100.96475983 430.98959351]
[-103.39096832 424.68011475]
[-118.39096832 424.68011475]
[-129.38766479 436.03125000]
[-145.19107056 436.19833374]
[-156.42530823 425.08224487]
[-156.42530823 409.27798462]
[-145.19107056 398.16189575]
[-129.38766479 398.32897949]
[-118.39096832 409.68011475]
[-103.39096832 409.68011475]
[-90.03950500 391.13815308]
[-67.16673279 387.25332642]
[-60.16980743 373.98522949]
[-53.17287827 360.71710205]
[-46.17594910 347.44897461]
[-39.17901611 334.18084717]
[-38.83977890 326.81542969]
[-32.00707626 320.78881836]
[-24.84127808 307.61114502]
[-24.40800667 300.25064087]
[-17.49889946 294.31176758]
[-10.16540241 281.22668457]
[-2.83190536 268.14157104]
[4.50159121 255.05647278]
[11.83508778 241.97137451]
[11.30789185 227.08610535]
[24.80434990 218.83042908]
[32.13784790 205.74533081]
[39.47134399 192.66023254]
[46.80484009 179.57513428]
[54.13833618 166.49003601]
[61.47183228 153.40493774]
[68.80532837 140.31983948]
[76.13882446 127.23473358]
[83.47232056 114.14963531]
[67.13579559 92.33457184]
[82.00190735 57.95478439]
[80.28165436 43.05375290]
[78.56140137 28.15271950]
[76.84114838 13.25168896]
[75.12090302 -1.64934278]
[73.40065002 -16.55037498]
[71.68039703 -31.45140457]
[56.82743835 -39.56673431]
[49.81579208 -54.78850555]
[53.23280716 -71.02554321]
[65.53559875 -81.90975189]
[63.62519455 -96.78759766]
[61.71479416 -111.66545105]
[59.80438995 -126.54329681]
[48.27850342 -133.48556519]
[42.92668915 -145.61834717]
[45.49463654 -158.42977905]
[54.82712173 -167.29476929]
[53.10686874 -182.19580078]
[41.79276276 -196.73764038]
[49.41729736 -212.55465698]
[47.50689316 -227.43251038]
[34.24836349 -235.72380066]
[29.47046852 -250.61358643]
[35.42918777 -265.07138062]
[49.31099319 -272.27062988]
[64.56132507 -268.81210327]
[73.97943878 -256.32879639]
[73.11839294 -240.71493530]
[62.38474274 -229.34291077]
[64.29514313 -214.46507263]
[73.66484070 -206.83718872]
[75.38983917 -194.47442627]
[68.00790405 -183.91604614]
[69.72814941 -169.01501465]
[83.34432220 -159.12619019]
[85.62935638 -142.11262512]
[74.68223572 -128.45370483]
[76.59264374 -113.57585144]
[78.50304413 -98.69800568]
[80.41344452 -83.82015228]
[92.65925598 -78.53424835]
[100.76376343 -67.80509949]
[102.52835846 -54.36618042]
[97.38699341 -41.70802689]
[86.58142853 -33.17165756]
[88.30168152 -18.27062607]
[90.02193451 -3.36959410]
[91.74217987 11.53143692]
[93.46243286 26.43246841]
[95.18268585 41.33349991]
[96.90293884 56.23453140]
[111.39182281 60.11681747]
[120.33212280 48.07226944]
[124.91753387 31.75018883]
[141.87110901 31.63799667]
[146.67213440 47.89796066]
[132.37666321 57.01256943]
[123.43637085 69.05711365]
[127.75125885 75.19158173]
[140.69593811 93.59499359]
[155.05351257 89.25218201]
[169.41108704 84.90937042]
[183.76866150 80.56655884]
[191.27076721 66.91532898]
[205.89326477 62.71562958]
[218.86138916 69.95187378]
[233.21896362 65.60906219]
[247.57653809 61.26625443]
[261.93411255 56.92344284]
[276.29168701 52.58063126]
[290.64926147 48.23781586]
[301.61828613 36.83645630]
[316.04058838 40.55757141]
[330.39816284 36.21475983]
[344.75573730 31.87194824]
[348.88269043 17.00683022]
[360.40640259 6.74975920]
[375.64971924 4.37372971]
[389.74850464 10.63692284]
[398.20391846 23.54077721]
[398.31787109 38.96772003]
[390.05398560 51.99507141]
[376.04925537 58.46584702]
[360.77252197 56.31524658]
[349.09854126 46.22952271]
[334.74096680 50.57233429]
[320.38339233 54.91514587]
[310.44131470 66.00588226]
[294.99206543 62.59539413]
[280.63449097 66.93820190]
[266.27691650 71.28101349]
[251.91935730 75.62382507]
[237.56176758 79.96664429]
[223.20419312 84.30945587]
[216.42074585 97.52006531]
[201.92198181 102.12882233]
[188.11146545 94.92413330]
[173.75389099 99.26694489]
[159.39631653 103.60975647]
[145.03874207 107.95256805]
[119.56838989 127.49350739]
[96.55741882 121.48313141]
[89.22392273 134.56823730]
[81.89042664 147.65333557]
[74.55693054 160.73843384]
[67.22343445 173.82353210]
[59.88993835 186.90863037]
[52.55644226 199.99372864]
[45.22294617 213.07882690]
[37.88945007 226.16392517]
[37.89210510 241.98513794]
[24.92018700 249.30487061]
[17.58669090 262.38998413]
[10.25319386 275.47506714]
[2.91969728 288.56018066]
[-4.41379929 301.64526367]
[-11.66359425 314.77694702]
[-18.82939148 327.95462036]
[-25.91089821 341.17779541]
[-32.90782928 354.44592285]
[-39.90475845 367.71401978]
[-46.90168762 380.98214722]
[-53.89861679 394.25027466]
[-46.43671417 404.78631592]
[-43.97441483 417.39401245]
[-46.89414215 429.83703613]
[-54.62845993 439.93054199]
[-65.76942444 445.92480469]
[-78.32464600 446.80834961]
[-83.93190002 460.72088623]
[-89.53915405 474.63342285]
[-95.14641571 488.54595947]
[-100.66471863 502.49401855]
[-106.09384918 516.47705078]
[-111.52297974 530.46002197]
[-109.30513000 546.12506104]
[-121.12438202 555.18896484]
[-126.55351257 569.17193604]
[-131.98263550 583.15496826]
[-123.75300598 596.17724609]
[-124.75754547 611.37078857]
[-134.40191650 622.92285156]
[-148.82662964 626.53753662]
[-154.25575256 640.52050781]
[-159.68489075 654.50354004]
[-165.11401367 668.48657227]
[-170.54315186 682.46954346]
[-175.97227478 696.45257568]
[-181.40141296 710.43554688]
[-167.32653809 705.24920654]
[-153.65760803 711.42663574]
[-148.24967957 725.41784668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[12 23]
[13 22]
[15 21]
[16 20]
[33 242]
[34 241]
[35 240]
[36 239]
[37 238]
[38 237]
[39 236]
[43 232]
[44 231]
[45 230]
[47 228]
[48 227]
[49 226]
[51 225]
[52 224]
[53 223]
[54 222]
[57 66]
[58 65]
[68 216]
[69 215]
[70 214]
[71 213]
[72 212]
[74 211]
[75 210]
[77 209]
[78 208]
[79 207]
[80 206]
[81 205]
[83 203]
[84 202]
[85 201]
[86 200]
[87 199]
[88 198]
[89 197]
[90 196]
[91 195]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[103 133]
[104 132]
[105 131]
[106 130]
[110 127]
[111 126]
[113 123]
[114 122]
[145 151]
[146 150]
[153 193]
[154 192]
[155 191]
[156 190]
[159 187]
[160 186]
[161 185]
[162 184]
[163 183]
[164 182]
[166 180]
[167 179]
[168 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
