%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CMYA5)
} def

/sequence { (\
AGUCGGAGGGAGAACACCAGGCGCGGCGCGGGCGGCUCCGGCUCCGGCCCCGGCCCAGGCCCGGGAGAGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.047407488 ubox
2 22 0.008794834 ubox
2 27 0.009500736 ubox
2 42 0.054924890 ubox
2 48 0.986953446 ubox
2 54 0.011861286 ubox
2 71 0.029883454 ubox
3 11 0.003854491 ubox
3 13 0.003403357 ubox
3 21 0.008825501 ubox
3 26 0.009506297 ubox
3 41 0.055013267 ubox
3 47 0.990592937 ubox
3 53 0.011945556 ubox
3 66 0.003365581 ubox
3 68 0.004404438 ubox
3 70 0.029565936 ubox
4 10 0.004138516 ubox
4 12 0.004085759 ubox
4 20 0.008849174 ubox
4 25 0.009503015 ubox
4 40 0.055517871 ubox
4 46 0.997274499 ubox
4 52 0.012029851 ubox
4 65 0.003549310 ubox
4 67 0.004725045 ubox
4 69 0.027392556 ubox
5 18 0.004627941 ubox
5 24 0.009483029 ubox
5 39 0.055569370 ubox
5 45 0.997576549 ubox
5 49 0.012328746 ubox
5 51 0.012010571 ubox
6 17 0.004623901 ubox
6 38 0.055553837 ubox
6 44 0.997572038 ubox
6 48 0.016509447 ubox
6 50 0.011966880 ubox
7 37 0.052997961 ubox
7 43 0.995350220 ubox
8 18 0.087724980 ubox
8 36 0.040901569 ubox
8 39 0.005808232 ubox
8 42 0.983782666 ubox
8 43 0.010696888 ubox
8 49 0.003803065 ubox
8 62 0.009850334 ubox
9 17 0.091279846 ubox
9 18 0.253786191 ubox
9 38 0.005368014 ubox
9 39 0.851201777 ubox
9 42 0.024288912 ubox
9 43 0.005657803 ubox
9 45 0.030324016 ubox
9 48 0.003271325 ubox
9 61 0.009853917 ubox
10 17 0.253173284 ubox
10 38 0.855619060 ubox
10 42 0.009088484 ubox
10 44 0.030649608 ubox
10 60 0.009849359 ubox
11 37 0.855198404 ubox
11 43 0.031088095 ubox
12 36 0.853365049 ubox
12 38 0.028873256 ubox
12 42 0.031740766 ubox
13 37 0.027514547 ubox
17 26 0.006150204 ubox
17 31 0.622611991 ubox
17 32 0.514884909 ubox
17 35 0.240230987 ubox
17 41 0.402053228 ubox
17 59 0.009550321 ubox
17 64 0.006574655 ubox
18 25 0.006581386 ubox
18 30 0.621205446 ubox
18 31 0.515211170 ubox
18 34 0.239398642 ubox
18 40 0.400901376 ubox
18 58 0.009555557 ubox
18 63 0.006581746 ubox
19 37 0.041706786 ubox
19 43 0.004550147 ubox
20 36 0.054758398 ubox
20 37 0.011117496 ubox
20 38 0.050753063 ubox
20 39 0.502019796 ubox
20 42 0.006494896 ubox
20 43 0.046248496 ubox
20 49 0.009151001 ubox
20 55 0.010533875 ubox
20 56 0.004431606 ubox
20 61 0.007171190 ubox
21 27 0.478760575 ubox
21 29 0.647677953 ubox
21 33 0.228439017 ubox
21 36 0.015121281 ubox
21 37 0.049699380 ubox
21 38 0.502170916 ubox
21 42 0.070113377 ubox
21 48 0.010646282 ubox
21 54 0.010636875 ubox
21 55 0.004245311 ubox
21 60 0.007197659 ubox
21 71 0.003961635 ubox
22 26 0.475324571 ubox
22 28 0.648866121 ubox
22 30 0.159052617 ubox
22 32 0.229135471 ubox
22 34 0.060756409 ubox
22 35 0.013821159 ubox
22 40 0.007184012 ubox
22 41 0.072388052 ubox
22 47 0.010639240 ubox
22 53 0.010671567 ubox
22 59 0.007199719 ubox
22 70 0.003963666 ubox
22 72 0.004033053 ubox
23 27 0.607021556 ubox
23 29 0.161968359 ubox
23 33 0.062132663 ubox
23 36 0.507236271 ubox
23 39 0.006886512 ubox
23 42 0.007260781 ubox
23 62 0.003195922 ubox
23 71 0.006968300 ubox
24 28 0.160800354 ubox
24 30 0.228439962 ubox
24 32 0.062124520 ubox
24 34 0.011866104 ubox
24 35 0.507561871 ubox
24 40 0.079506960 ubox
24 41 0.005300738 ubox
24 46 0.010854598 ubox
24 52 0.010971229 ubox
24 70 0.006971029 ubox
25 29 0.213760515 ubox
25 33 0.009988114 ubox
25 37 0.006587713 ubox
25 39 0.080108715 ubox
25 45 0.010926855 ubox
25 51 0.011065086 ubox
25 55 0.005580453 ubox
25 56 0.004739828 ubox
25 61 0.003643138 ubox
26 33 0.507788760 ubox
26 36 0.006930355 ubox
26 38 0.080079675 ubox
26 42 0.004111854 ubox
26 44 0.010914775 ubox
26 50 0.011045556 ubox
26 54 0.005699717 ubox
26 55 0.004618441 ubox
26 60 0.003690728 ubox
27 32 0.507877082 ubox
27 34 0.004526171 ubox
27 35 0.006903883 ubox
27 41 0.004364110 ubox
27 53 0.005707646 ubox
27 59 0.003727315 ubox
28 33 0.004610430 ubox
28 36 0.080140273 ubox
28 42 0.010935948 ubox
28 48 0.012194985 ubox
28 54 0.004291033 ubox
29 35 0.080167653 ubox
29 40 0.007266815 ubox
29 41 0.010208843 ubox
29 47 0.012176336 ubox
29 53 0.004267642 ubox
29 63 0.011410347 ubox
30 39 0.008975842 ubox
30 50 0.005650754 ubox
30 56 0.003882305 ubox
30 62 0.011533711 ubox
31 38 0.008974513 ubox
31 39 0.009458444 ubox
31 45 0.012149528 ubox
31 49 0.005777680 ubox
31 51 0.004039808 ubox
31 55 0.003884528 ubox
31 61 0.011534305 ubox
32 37 0.006285974 ubox
32 38 0.009394071 ubox
32 44 0.012147036 ubox
32 48 0.005897189 ubox
32 50 0.004042856 ubox
32 54 0.003883010 ubox
32 60 0.011534313 ubox
33 47 0.005854209 ubox
33 59 0.011525195 ubox
34 43 0.014035993 ubox
34 49 0.004075115 ubox
34 51 0.003848612 ubox
34 55 0.011468788 ubox
35 42 0.015736990 ubox
35 48 0.004094323 ubox
35 50 0.003853469 ubox
35 54 0.011502303 ubox
36 41 0.015950803 ubox
36 47 0.003903567 ubox
36 53 0.011522950 ubox
37 46 0.003536266 ubox
37 52 0.011194217 ubox
38 47 0.003395521 ubox
39 46 0.003656724 ubox
39 72 0.006346790 ubox
40 45 0.003706713 ubox
40 49 0.013940312 ubox
40 71 0.012864078 ubox
41 48 0.014609008 ubox
41 71 0.007916075 ubox
42 47 0.014622004 ubox
42 69 0.013862912 ubox
42 70 0.007487133 ubox
43 65 0.004428699 ubox
43 68 0.014589709 ubox
43 69 0.006407359 ubox
43 70 0.003480169 ubox
44 64 0.007472762 ubox
44 67 0.014804900 ubox
44 69 0.007231539 ubox
44 70 0.046896463 ubox
45 63 0.007525541 ubox
45 69 0.047427814 ubox
45 72 0.004406605 ubox
46 61 0.004870721 ubox
46 62 0.006518592 ubox
46 71 0.004442190 ubox
47 60 0.006221620 ubox
47 61 0.005236046 ubox
47 71 0.081630628 ubox
48 59 0.007306396 ubox
48 65 0.095001132 ubox
48 70 0.081723684 ubox
49 58 0.007301577 ubox
49 64 0.124299553 ubox
49 65 0.987376768 ubox
49 69 0.060016550 ubox
49 70 0.014824890 ubox
50 63 0.124364264 ubox
50 64 0.991351489 ubox
50 65 0.020068403 ubox
50 69 0.014912607 ubox
50 70 0.011656480 ubox
51 63 0.991202940 ubox
51 64 0.019444577 ubox
51 69 0.011755709 ubox
52 61 0.578184924 ubox
52 62 0.814921951 ubox
53 60 0.807938942 ubox
53 61 0.587955104 ubox
54 59 0.984909609 ubox
54 65 0.025528277 ubox
55 64 0.025597984 ubox
56 63 0.025577448 ubox
59 71 0.013044666 ubox
60 70 0.012783742 ubox
61 69 0.012485996 ubox
61 70 0.003565603 ubox
62 69 0.004796017 ubox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
6 44 0.9500000 lbox
7 43 0.9500000 lbox
8 42 0.9500000 lbox
9 39 0.9500000 lbox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
23 27 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
