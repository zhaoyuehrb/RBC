%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUUGGAUUGACAUAGAGAGCUGCAGGAGGGUGACAUGAUCUCAAUAAAAGGAAUGCUCUGGCUGCUGGGUAGAGAAGAAAGCGAGGGUGAGGGAUUAAUGGUGGAGCCAGAGGGAGCCCAGUGAGUGCCGGGAGCCCAGGGUGGCAGAGCUGUGGUGCAGGGUUGCAGGGUCCUGGAGCUAGGC\
) } def
/len { sequence length } bind def

/coor [
[84.74852753 420.94381714]
[79.26126099 434.98495483]
[70.57260132 447.30447388]
[59.18770599 457.18615723]
[45.76847458 464.05548096]
[31.09507942 467.51309204]
[16.02062035 467.35794067]
[1.42150009 463.59906006]
[-11.85350418 456.45498657]
[-23.03260231 446.34109497]
[-31.46585655 433.84533691]
[-36.66296768 419.69424438]
[-38.32178116 404.71054077]
[-36.34585953 389.76531982]
[-30.85007858 375.72750854]
[-22.15395546 363.41326904]
[-10.76307011 353.53848267]
[2.66032457 346.67730713]
[17.33581161 343.22860718]
[32.41017532 343.39288330]
[36.15028381 328.86663818]
[39.89039612 314.34042358]
[43.63050842 299.81417847]
[39.31100845 285.55966187]
[50.24488068 274.12457275]
[53.98498917 259.59835815]
[57.72510147 245.07211304]
[61.46520996 230.54586792]
[65.20532227 216.01963806]
[54.96207809 200.86576843]
[59.09859467 182.72138977]
[75.44850159 173.18309021]
[78.69851685 158.53941345]
[81.94852448 143.89573669]
[85.19853973 129.25204468]
[88.44854736 114.60836792]
[84.16878510 104.86128998]
[86.17498779 95.63441467]
[75.00536346 85.62245178]
[63.83573151 75.61048889]
[52.66610718 65.59852600]
[41.49647903 55.58655930]
[30.32685089 45.57459641]
[19.15722466 35.56262970]
[13.27060127 38.58745575]
[6.88725662 40.27595520]
[0.30573848 40.55599213]
[-6.16759777 39.42114258]
[-12.23284912 36.93069839]
[-17.61046028 33.20658493]
[-22.05410385 28.42743301]
[-25.36196899 22.81999207]
[-27.38591385 16.64840126]
[-28.03809166 10.20173168]
[-27.29474640 3.78045249]
[-25.19701767 -2.31756926]
[-21.84870529 -7.81089115]
[-31.18697357 -19.54957771]
[-40.52524185 -31.28826523]
[-49.86350632 -43.02695084]
[-59.20177460 -54.76563644]
[-73.84813690 -60.74850082]
[-75.71646881 -75.52545929]
[-85.05473328 -87.26414490]
[-94.39299774 -99.00283813]
[-111.67219543 -105.33970642]
[-113.61038971 -122.77239227]
[-123.14453888 -134.35255432]
[-138.45294189 -132.44039917]
[-152.35508728 -139.12873840]
[-160.41485596 -152.28335571]
[-160.06039429 -167.70663452]
[-151.40481567 -180.47709656]
[-137.21008301 -186.51971436]
[-122.00568390 -183.90631104]
[-110.64328766 -173.47080994]
[-106.74859619 -158.54315186]
[-111.56438446 -143.88670349]
[-102.03023529 -132.30654907]
[-90.01183319 -130.82289124]
[-81.97497559 -121.23503876]
[-82.65431213 -108.34110260]
[-73.31604767 -96.60241699]
[-63.97777939 -84.86373138]
[-49.99935150 -79.72049713]
[-47.46308899 -64.10390472]
[-38.12482071 -52.36521912]
[-28.78655434 -40.62653351]
[-19.44828606 -28.88784599]
[-10.11001873 -17.14915848]
[13.88240910 -17.56425476]
[30.65099716 -0.05443393]
[29.16918755 24.39300346]
[40.33881378 34.40496826]
[51.50844193 44.41693115]
[62.67807007 54.42889786]
[73.84769440 64.44085693]
[85.01732635 74.45282745]
[96.18695068 84.46479034]
[111.01581573 86.72415161]
[124.66030121 80.49292755]
[138.30477905 74.26170349]
[151.94926453 68.03047943]
[165.59373474 61.79925156]
[168.78170776 46.72798538]
[180.10052490 36.54281235]
[195.06932068 34.99388885]
[207.92599487 42.46675491]
[221.57048035 36.23553085]
[235.21495056 30.00430489]
[248.85943604 23.77308083]
[254.77989197 5.79401398]
[271.66336060 -2.03399205]
[288.61959839 4.82525158]
[302.04705811 -1.86082387]
[315.47451782 -8.54689884]
[320.58435059 -23.26176453]
[334.29693604 -29.85111618]
[348.29382324 -24.88897705]
[361.72128296 -31.57505226]
[375.14871216 -38.26112747]
[384.05331421 -51.33854294]
[398.89511108 -50.08542633]
[412.32257080 -56.77150345]
[420.92489624 -70.73330688]
[437.30737305 -69.99396515]
[444.61709595 -55.31404877]
[435.33447266 -41.79499817]
[419.00863647 -43.34405518]
[405.58120728 -36.65797806]
[397.63702393 -24.05879784]
[381.83480835 -24.83367920]
[368.40734863 -18.14760399]
[354.97988892 -11.46152782]
[350.50476074 2.69858313]
[336.98266602 9.67049313]
[322.16058350 4.88054991]
[308.73312378 11.56662560]
[295.30569458 18.25270081]
[294.10498047 29.62286568]
[287.48843384 39.09399414]
[277.01010132 44.23911667]
[265.23037720 43.67178726]
[255.09066772 37.41756058]
[241.44618225 43.64878464]
[227.80169678 49.88000870]
[214.15722656 56.11123657]
[211.38549805 70.72135162]
[200.41242981 81.01968384]
[185.30273438 82.90400696]
[171.82496643 75.44373322]
[158.18048096 81.67495728]
[144.53599548 87.90618134]
[130.89152527 94.13740540]
[117.24703979 100.36862946]
[132.10960388 98.34272766]
[145.54244995 105.01795197]
[152.90356445 118.08753967]
[151.64913940 133.03498840]
[142.21267700 144.69488525]
[127.85515594 149.03788757]
[113.53814697 144.56317139]
[104.20919800 132.81707764]
[103.09223175 117.85838318]
[99.84221649 132.50205994]
[96.59220886 147.14575195]
[93.34219360 161.78942871]
[90.09218597 176.43310547]
[98.32273102 185.04629517]
[101.33319092 196.44897461]
[98.48541260 207.76966858]
[90.60163116 216.21519470]
[79.73155975 219.75973511]
[75.99144745 234.28598022]
[72.25133514 248.81221008]
[68.51123047 263.33843994]
[64.77111816 277.86468506]
[68.82309723 293.15823364]
[58.15674591 303.55429077]
[54.41663361 318.08053589]
[50.67652130 332.60675049]
[46.93641281 347.13299561]
[60.21574402 354.26901245]
[71.40097046 364.37615967]
[79.84180450 376.86679077]
[85.04749298 391.01470947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 182]
[21 181]
[22 180]
[23 179]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[38 99]
[39 98]
[40 97]
[41 96]
[42 95]
[43 94]
[44 93]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[63 84]
[64 83]
[65 82]
[67 79]
[68 78]
[100 155]
[101 154]
[102 153]
[103 152]
[104 151]
[108 147]
[109 146]
[110 145]
[111 144]
[114 139]
[115 138]
[116 137]
[119 134]
[120 133]
[121 132]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
