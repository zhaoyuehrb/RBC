%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RSBN1)
} def

/sequence { (\
GCUUUACAAUAGAAGCUCGGUUGGAGAGGCCUGCGGAGAAAAGCUGGGAACGGCCGCUUCCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.976068021 ubox
1 30 0.156845353 ubox
1 44 0.005825763 ubox
1 64 0.014395738 ubox
2 12 0.015454862 ubox
2 15 0.979930928 ubox
2 26 0.006420784 ubox
2 28 0.091506870 ubox
2 29 0.155961163 ubox
2 43 0.005901169 ubox
2 63 0.014540298 ubox
3 11 0.015413310 ubox
3 12 0.006217304 ubox
3 13 0.051348188 ubox
3 14 0.977969628 ubox
3 25 0.006379617 ubox
3 27 0.094234476 ubox
3 28 0.154247542 ubox
3 42 0.005904087 ubox
3 62 0.013651337 ubox
4 11 0.012663884 ubox
4 12 0.071830892 ubox
4 13 0.975168225 ubox
4 14 0.010381291 ubox
4 24 0.005952589 ubox
4 25 0.004855035 ubox
4 26 0.094647025 ubox
4 27 0.152355860 ubox
4 41 0.005686532 ubox
5 11 0.084380193 ubox
5 12 0.945301686 ubox
5 13 0.013726034 ubox
5 24 0.004980310 ubox
5 25 0.053601809 ubox
5 26 0.145853975 ubox
5 40 0.004548597 ubox
6 10 0.086813150 ubox
7 23 0.180793499 ubox
8 22 0.180817122 ubox
9 21 0.180047504 ubox
10 20 0.166008023 ubox
10 33 0.007266449 ubox
11 17 0.021111966 ubox
11 32 0.008307716 ubox
12 16 0.021764631 ubox
12 18 0.170656021 ubox
12 31 0.008384210 ubox
12 60 0.048796317 ubox
13 17 0.148604318 ubox
13 59 0.048921765 ubox
14 58 0.048939711 ubox
15 30 0.005388010 ubox
15 34 0.008818124 ubox
15 57 0.048879056 ubox
15 64 0.022681121 ubox
16 26 0.024512127 ubox
16 28 0.018489645 ubox
16 29 0.004284031 ubox
16 33 0.009466478 ubox
16 38 0.074995581 ubox
16 56 0.044531162 ubox
16 63 0.023145116 ubox
17 24 0.007755597 ubox
17 25 0.038858131 ubox
17 27 0.028653158 ubox
17 29 0.003376730 ubox
17 36 0.012453296 ubox
17 37 0.125559160 ubox
17 39 0.018473818 ubox
17 47 0.003638490 ubox
17 62 0.006183054 ubox
17 63 0.173145712 ubox
18 23 0.009383081 ubox
18 24 0.040071056 ubox
18 26 0.029527202 ubox
18 28 0.006115296 ubox
18 33 0.033780655 ubox
18 35 0.015000797 ubox
18 36 0.129527646 ubox
18 38 0.019362946 ubox
18 46 0.004158134 ubox
18 56 0.044039994 ubox
18 62 0.228289835 ubox
19 31 0.222919334 ubox
19 32 0.010478377 ubox
19 34 0.013336087 ubox
19 45 0.004151722 ubox
19 55 0.064123655 ubox
19 58 0.003237737 ubox
19 61 0.229079635 ubox
20 30 0.223329597 ubox
20 31 0.008652639 ubox
20 34 0.130874569 ubox
20 44 0.004156300 ubox
20 54 0.064281350 ubox
20 57 0.003733811 ubox
20 60 0.217781246 ubox
20 64 0.893877915 ubox
21 28 0.019582399 ubox
21 29 0.222095243 ubox
21 33 0.126984519 ubox
21 36 0.018675867 ubox
21 43 0.004105950 ubox
21 53 0.064243579 ubox
21 63 0.902159470 ubox
22 26 0.003501850 ubox
22 27 0.026893750 ubox
22 28 0.212311526 ubox
22 33 0.008072399 ubox
22 35 0.022194479 ubox
22 42 0.003566373 ubox
22 52 0.064031679 ubox
22 56 0.048752557 ubox
22 62 0.906931489 ubox
23 31 0.132822296 ubox
23 32 0.011989908 ubox
23 34 0.024336176 ubox
23 51 0.064095814 ubox
23 55 0.053438704 ubox
23 58 0.034193772 ubox
23 59 0.015334376 ubox
23 60 0.097778187 ubox
23 61 0.912656338 ubox
24 30 0.132649820 ubox
24 31 0.013282262 ubox
24 54 0.053426841 ubox
24 57 0.034334568 ubox
24 58 0.010303183 ubox
24 59 0.228784126 ubox
24 60 0.911609979 ubox
25 32 0.025986100 ubox
25 58 0.510927389 ubox
25 59 0.786278904 ubox
26 31 0.026080666 ubox
26 57 0.683498616 ubox
26 58 0.578480843 ubox
26 59 0.009946322 ubox
26 60 0.006886652 ubox
27 58 0.016817968 ubox
27 59 0.010200910 ubox
28 45 0.008992258 ubox
28 55 0.939787522 ubox
28 57 0.011723932 ubox
28 58 0.023660783 ubox
29 44 0.009082101 ubox
29 54 0.941101405 ubox
29 57 0.026430806 ubox
29 64 0.090929064 ubox
30 36 0.007936069 ubox
30 43 0.008669737 ubox
30 47 0.067783708 ubox
30 48 0.077450246 ubox
30 53 0.938836163 ubox
30 56 0.026460348 ubox
30 63 0.091387383 ubox
31 35 0.008054330 ubox
31 38 0.026957135 ubox
31 43 0.004348423 ubox
31 46 0.075571241 ubox
31 47 0.094382719 ubox
31 48 0.045761119 ubox
31 52 0.933083367 ubox
31 53 0.028451943 ubox
31 62 0.088735714 ubox
31 63 0.074085492 ubox
32 37 0.027974454 ubox
32 42 0.007708745 ubox
32 46 0.125461939 ubox
32 47 0.085021389 ubox
32 52 0.039976736 ubox
32 62 0.076954168 ubox
33 44 0.443760778 ubox
33 45 0.016489761 ubox
33 51 0.166434690 ubox
33 54 0.003613542 ubox
33 57 0.029859761 ubox
33 61 0.101046687 ubox
33 64 0.083615714 ubox
34 43 0.444870277 ubox
34 46 0.745455924 ubox
34 52 0.021297913 ubox
34 53 0.003392462 ubox
34 56 0.029941373 ubox
34 62 0.258021891 ubox
34 63 0.060519029 ubox
35 45 0.745662105 ubox
35 51 0.047767122 ubox
35 55 0.029976244 ubox
35 60 0.113151027 ubox
35 61 0.270928576 ubox
36 44 0.744504224 ubox
36 54 0.020759111 ubox
36 59 0.113500633 ubox
36 60 0.270890183 ubox
37 45 0.310441557 ubox
37 58 0.135165616 ubox
37 59 0.257260164 ubox
38 44 0.312232105 ubox
38 57 0.153768825 ubox
38 58 0.212476222 ubox
38 59 0.015348550 ubox
38 60 0.009859473 ubox
39 58 0.026451306 ubox
39 59 0.010286337 ubox
40 58 0.011083120 ubox
40 59 0.004165278 ubox
41 58 0.008277444 ubox
41 59 0.034117083 ubox
42 58 0.078213975 ubox
43 54 0.284157559 ubox
43 57 0.084802952 ubox
43 64 0.133571336 ubox
44 53 0.285253626 ubox
44 56 0.082911947 ubox
44 63 0.134726878 ubox
45 52 0.285613308 ubox
45 56 0.018405416 ubox
45 62 0.134629070 ubox
46 51 0.383495442 ubox
46 55 0.084617419 ubox
46 61 0.134639591 ubox
47 54 0.084595927 ubox
47 55 0.011122146 ubox
47 60 0.134528304 ubox
47 61 0.006432398 ubox
48 54 0.011292411 ubox
48 59 0.133785032 ubox
48 60 0.008351559 ubox
49 58 0.132130492 ubox
49 59 0.009825495 ubox
50 58 0.009438288 ubox
51 62 0.003855971 ubox
52 58 0.006546467 ubox
52 61 0.003892636 ubox
53 57 0.008095776 ubox
53 60 0.003853750 ubox
53 64 0.018092217 ubox
54 63 0.018522356 ubox
55 62 0.018937314 ubox
56 61 0.018058037 ubox
56 64 0.015707208 ubox
57 63 0.016550889 ubox
58 62 0.014920145 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
20 64 0.9500000 lbox
21 63 0.9500000 lbox
22 62 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
28 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
showpage
end
%%EOF
