%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCAGAUUUGCUUUUACAUUUUCUUGCCUGAGUCUGAGGUGAACAGUGAACAUAUUUACAUUUGAUUUAACAGUGAACCUUAAUUCUUUCUGGCUUCACAGUGAAACAAGUUUAUGCAAUCGAUCAAAUAUUUUCAUCCCUGAGGUUAACAAUUACCAUCAAA\
) } def
/len { sequence length } bind def

/coor [
[84.46723175 155.33441162]
[78.89195251 141.40904236]
[88.16448975 129.61775208]
[80.74082947 128.55038452]
[70.18482971 139.20735168]
[59.62883759 149.86431885]
[49.07284164 160.52128601]
[38.51684952 171.17825317]
[27.96085358 181.83523560]
[17.40485954 192.49220276]
[7.05367422 203.34820557]
[-3.08894944 214.39932251]
[3.35602140 228.16635132]
[4.03699446 243.35202026]
[-1.14987409 257.64065552]
[-11.41362381 268.85330200]
[-25.18910789 275.28015137]
[-40.37566757 275.94116211]
[-54.65745544 270.73550415]
[-65.85661316 260.45700073]
[-72.26534271 246.67308044]
[-72.90635681 231.48567200]
[-67.68191528 217.21073914]
[-57.38870239 206.02511597]
[-43.59635544 199.63452148]
[-28.40811157 199.01348877]
[-14.14006615 204.25669861]
[-3.99744296 193.20558167]
[-3.30869937 188.43789673]
[0.41149193 184.06634521]
[6.74789047 181.93620300]
[17.30388451 171.27923584]
[27.85987854 160.62226868]
[38.41587448 149.96530151]
[48.97186661 139.30833435]
[59.52786255 128.65136719]
[70.08385468 117.99439240]
[74.53544617 87.22394562]
[97.81359863 78.03982544]
[101.48860168 63.49697876]
[105.16359711 48.95413208]
[108.83859253 34.41128540]
[112.51358795 19.86843872]
[116.18858337 5.32559109]
[105.44176483 -4.00531006]
[100.97959137 -18.42784691]
[105.00645447 -33.87381363]
[91.60910034 -40.61997604]
[78.21173859 -47.36613846]
[64.81437683 -54.11230087]
[51.41701126 -60.85846329]
[35.08441544 -59.38256454]
[25.86243629 -72.94306183]
[33.23785782 -87.59008026]
[49.62347794 -88.25602722]
[58.16317749 -74.25582123]
[71.56053925 -67.50965881]
[84.95790100 -60.76350021]
[98.35526276 -54.01733780]
[111.75261688 -47.27117538]
[126.06195068 -51.77040863]
[133.18794250 -64.96966553]
[140.31391907 -78.16891479]
[147.43991089 -91.36817169]
[154.56590271 -104.56742859]
[161.69187927 -117.76667786]
[168.81787109 -130.96592712]
[175.94386292 -144.16519165]
[166.30043030 -157.24356079]
[163.32560730 -173.15913391]
[167.56343079 -188.72570801]
[178.11920166 -200.84931946]
[192.84770203 -207.14320374]
[208.78909302 -206.39755249]
[215.66249084 -219.73008728]
[222.53588867 -233.06262207]
[229.40928650 -246.39515686]
[236.28268433 -259.72769165]
[243.15608215 -273.06021118]
[244.31748962 -282.16732788]
[250.28936768 -286.57931519]
[257.41537476 -299.77856445]
[253.11766052 -314.75079346]
[260.53247070 -328.03518677]
[274.83267212 -332.04013062]
[281.95864868 -345.23937988]
[289.08465576 -358.43862915]
[285.35836792 -368.71817017]
[287.87811279 -379.13156128]
[295.56924438 -386.27062988]
[305.70675659 -387.93743896]
[313.33007812 -400.85583496]
[320.95343018 -413.77423096]
[316.76626587 -429.01376343]
[324.65399170 -442.70898438]
[339.93695068 -446.73477173]
[353.54803467 -438.70269775]
[357.41201782 -423.37802124]
[349.23648071 -409.85263062]
[333.87179565 -406.15090942]
[326.24847412 -393.23251343]
[318.62515259 -380.31411743]
[319.90243530 -361.04660034]
[302.28390503 -351.31265259]
[295.15789795 -338.11337280]
[288.03192139 -324.91412354]
[292.52899170 -310.76095581]
[285.49023438 -297.27352905]
[270.61462402 -292.65255737]
[263.48861694 -279.45330811]
[256.48861694 -266.18682861]
[249.61521912 -252.85429382]
[242.74182129 -239.52175903]
[235.86842346 -226.18922424]
[228.99502563 -212.85668945]
[222.12162781 -199.52415466]
[231.02017212 -188.84996033]
[235.18338013 -175.54591370]
[233.94917297 -161.61688232]
[227.47148132 -149.17520142]
[216.70190430 -140.12031555]
[203.25007629 -135.84884644]
[189.14311218 -137.03919983]
[182.01712036 -123.83994293]
[174.89114380 -110.64069366]
[167.76515198 -97.44143677]
[160.63916016 -84.24218750]
[153.51318359 -71.04293060]
[146.38719177 -57.84367752]
[139.26119995 -44.64442062]
[154.02833557 -31.27175903]
[156.77651978 -12.35763454]
[147.26351929 3.27933955]
[130.73143005 9.00058746]
[127.05643463 23.54343414]
[123.38143921 38.08628082]
[119.70644379 52.62912750]
[116.03144836 67.17197418]
[112.35645294 81.71482086]
[124.51540375 90.34132385]
[129.85195923 106.86077881]
[123.63471985 125.69384003]
[130.76071167 138.89309692]
[137.88670349 152.09234619]
[145.13801575 165.22317505]
[152.51400757 178.28436279]
[159.88999939 191.34555054]
[175.32070923 192.98051453]
[186.82083130 203.39813232]
[189.96833801 218.59263611]
[183.55294800 232.72142029]
[170.04151917 240.35166931]
[154.62945557 238.54940796]
[143.24302673 228.00764465]
[140.26052856 212.77989197]
[146.82881165 198.72154236]
[139.45281982 185.66035461]
[132.07682800 172.59916687]
[126.02203369 168.30169678]
[124.68744659 159.21833801]
[117.56145477 146.01908875]
[110.43547058 132.81982422]
[103.01181030 131.75247192]
[108.58683014 145.67794800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 37]
[5 36]
[6 35]
[7 34]
[8 33]
[9 32]
[10 31]
[11 28]
[12 27]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[44 134]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
[81 110]
[82 109]
[85 106]
[86 105]
[87 104]
[91 102]
[92 101]
[93 100]
[142 162]
[143 161]
[144 160]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
