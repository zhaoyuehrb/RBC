%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNFRSF25)
} def

/sequence { (\
CGGGCCCUGCGGGCGCGGGGCUGAAGGCGGAACCACGACGGGCAGAGAGCACGGAGCCGGGAAGCCCCUGGGCGCCCGUCGGAGGGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.013060140 ubox
1 29 0.006787645 ubox
2 22 0.010770449 ubox
2 28 0.006896789 ubox
2 88 0.144158676 ubox
3 21 0.007691431 ubox
3 22 0.029164875 ubox
3 87 0.154316255 ubox
3 88 0.901299173 ubox
4 21 0.031439245 ubox
4 87 0.986978237 ubox
5 20 0.032349322 ubox
5 85 0.150086634 ubox
5 86 0.988108292 ubox
6 19 0.032351641 ubox
6 82 0.012630354 ubox
6 84 0.151035641 ubox
6 85 0.987879223 ubox
7 18 0.032352143 ubox
7 81 0.017046802 ubox
7 82 0.162370202 ubox
7 84 0.985919316 ubox
7 85 0.003292180 ubox
8 17 0.032328459 ubox
8 81 0.193558658 ubox
8 83 0.967723241 ubox
8 84 0.003905647 ubox
9 16 0.032602339 ubox
9 79 0.944615414 ubox
9 80 0.276948970 ubox
10 15 0.032556565 ubox
10 78 0.989473702 ubox
10 81 0.137570473 ubox
11 77 0.997586198 ubox
11 80 0.060606043 ubox
12 76 0.999387464 ubox
12 77 0.005494831 ubox
12 79 0.009553356 ubox
13 75 0.999439828 ubox
13 76 0.003958133 ubox
14 74 0.999432134 ubox
15 36 0.003486802 ubox
15 73 0.999395307 ubox
16 70 0.030389257 ubox
16 72 0.998212946 ubox
17 34 0.067546845 ubox
17 36 0.004399620 ubox
17 67 0.004035956 ubox
17 68 0.995586820 ubox
17 69 0.033376825 ubox
18 33 0.067618765 ubox
18 34 0.007063600 ubox
18 66 0.003348031 ubox
18 67 0.996610799 ubox
18 68 0.031061862 ubox
18 69 0.003325785 ubox
19 33 0.007074979 ubox
19 58 0.005055323 ubox
19 66 0.996791969 ubox
19 67 0.025410193 ubox
19 68 0.003207090 ubox
20 57 0.005073754 ubox
20 65 0.996955738 ubox
20 66 0.018036170 ubox
20 73 0.003465011 ubox
21 30 0.067990890 ubox
21 56 0.005084220 ubox
21 64 0.997093567 ubox
21 72 0.003463696 ubox
22 29 0.067878887 ubox
22 55 0.005038261 ubox
22 63 0.990651962 ubox
22 71 0.003358213 ubox
23 28 0.067116418 ubox
26 34 0.016057856 ubox
26 58 0.878239120 ubox
26 66 0.003578119 ubox
26 88 0.020777333 ubox
27 33 0.016033174 ubox
27 50 0.006195429 ubox
27 57 0.878448876 ubox
27 65 0.003670144 ubox
27 87 0.023082462 ubox
28 37 0.084523200 ubox
28 40 0.010422783 ubox
28 49 0.006259991 ubox
28 53 0.012237551 ubox
28 56 0.874243102 ubox
28 59 0.469527379 ubox
28 64 0.003673250 ubox
28 86 0.023103234 ubox
29 36 0.283915026 ubox
29 39 0.028082280 ubox
29 52 0.029743030 ubox
29 58 0.470196146 ubox
29 88 0.009640511 ubox
30 57 0.470091585 ubox
30 87 0.010794167 ubox
33 41 0.285678946 ubox
33 42 0.057821471 ubox
33 54 0.440750310 ubox
33 60 0.017854334 ubox
33 61 0.006927445 ubox
33 82 0.003211864 ubox
33 85 0.030775242 ubox
33 86 0.003967771 ubox
34 40 0.286023064 ubox
34 41 0.061177570 ubox
34 53 0.420081246 ubox
34 59 0.017827971 ubox
34 60 0.006971714 ubox
34 84 0.030788506 ubox
34 85 0.003942248 ubox
36 53 0.101395359 ubox
36 59 0.005904263 ubox
36 81 0.032517333 ubox
37 52 0.110450658 ubox
37 58 0.005604704 ubox
37 80 0.032702625 ubox
38 79 0.032773076 ubox
39 53 0.837179278 ubox
39 59 0.018700180 ubox
39 78 0.032798463 ubox
40 52 0.874836600 ubox
40 58 0.017825354 ubox
40 67 0.003272178 ubox
40 77 0.032799859 ubox
41 57 0.016694191 ubox
41 58 0.022350583 ubox
41 66 0.003285784 ubox
41 76 0.032796562 ubox
42 50 0.947818241 ubox
42 57 0.023289448 ubox
42 65 0.003291890 ubox
42 75 0.032786343 ubox
43 49 0.960129002 ubox
43 56 0.024145075 ubox
43 64 0.003293092 ubox
43 74 0.032747834 ubox
49 57 0.007709207 ubox
49 73 0.014474467 ubox
50 56 0.009034002 ubox
50 70 0.004611057 ubox
50 72 0.014407575 ubox
51 69 0.004610518 ubox
52 59 0.007586105 ubox
52 70 0.007623417 ubox
53 58 0.007574368 ubox
53 67 0.004736839 ubox
53 68 0.005634028 ubox
53 69 0.006725741 ubox
54 66 0.004751126 ubox
54 67 0.005669523 ubox
54 68 0.006539948 ubox
56 65 0.007832314 ubox
56 73 0.025587626 ubox
57 64 0.007821460 ubox
57 71 0.069881579 ubox
57 72 0.024398756 ubox
58 70 0.070551938 ubox
58 71 0.023083365 ubox
59 67 0.007768171 ubox
59 68 0.026813456 ubox
59 69 0.067985476 ubox
60 66 0.007798614 ubox
60 67 0.027094046 ubox
60 68 0.068062851 ubox
60 69 0.014248042 ubox
61 65 0.007687129 ubox
61 66 0.027213521 ubox
61 67 0.067883315 ubox
61 68 0.014247675 ubox
3 88 0.9500000 lbox
4 87 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
9 79 0.9500000 lbox
10 78 0.9500000 lbox
11 77 0.9500000 lbox
12 76 0.9500000 lbox
13 75 0.9500000 lbox
14 74 0.9500000 lbox
15 73 0.9500000 lbox
16 72 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
20 65 0.9500000 lbox
21 64 0.9500000 lbox
22 63 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
39 53 0.9500000 lbox
40 52 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
showpage
end
%%EOF
