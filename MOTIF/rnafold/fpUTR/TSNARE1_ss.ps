%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCGGGACCGGCGGCCAUUGGCUGGUGCGGGAGGGGGCGCGCACGCCGGCGGCGGGAGGGGCCGUCACGUGAUGUUUGGGUGCCCGCCCCGCCCGCCUCGCCCGCCGUGAGCGCCCGGAGCGGUCCGCGAGCCACCGAGGCCCAGCUCAGUGUGGAGGCUGCUGGCCCUGCCAUCUGUAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[149.59124756 537.39263916]
[153.70455933 522.86737061]
[161.58518982 509.99108887]
[172.64833069 499.71929932]
[186.07305908 492.81427002]
[183.05357361 478.12133789]
[180.03410339 463.42837524]
[175.59823608 457.49636841]
[177.08990479 448.46185303]
[174.31901550 433.72000122]
[171.54812622 418.97814941]
[168.77723694 404.23629761]
[166.00634766 389.49447632]
[163.23545837 374.75262451]
[160.46456909 360.01077271]
[157.69367981 345.26892090]
[154.92277527 330.52706909]
[151.53205872 315.91531372]
[147.52755737 301.45971680]
[143.52304077 287.00415039]
[139.51853943 272.54855347]
[135.39210510 258.12731934]
[131.14401245 243.74142456]
[126.89593506 229.35552979]
[122.64785004 214.96965027]
[118.39977264 200.58375549]
[113.47933960 195.04705811]
[114.20362854 185.91893005]
[110.19912720 171.46334839]
[97.30395508 167.95916748]
[87.75147247 158.46066284]
[84.11624146 145.37684631]
[87.45246124 132.10188293]
[96.99121857 122.13473511]
[93.23143005 107.61357880]
[87.31609344 93.82920837]
[79.38162994 81.09954834]
[71.44717407 68.36988068]
[63.51271057 55.64022064]
[55.57825089 42.91055679]
[47.64379120 30.18089294]
[33.77778244 22.56220818]
[33.61172867 7.66852903]
[25.67726898 -5.06113482]
[17.74280930 -17.79079819]
[9.70112896 -30.45300102]
[1.55280292 -43.04684067]
[-12.43990517 -50.43024826]
[-12.85748100 -65.31900024]
[-21.00580597 -77.91284180]
[-29.15413284 -90.50667572]
[-37.51399994 -102.96109772]
[-46.08302307 -115.27255249]
[-54.65204620 -127.58399963]
[-63.22106934 -139.89544678]
[-71.79009247 -152.20690918]
[-80.35911560 -164.51835632]
[-94.59320831 -171.42495728]
[-95.51340485 -186.29110718]
[-104.08242798 -198.60256958]
[-112.65145111 -210.91401672]
[-121.22047424 -223.22546387]
[-129.78948975 -235.53692627]
[-145.18785095 -235.98054504]
[-157.23162842 -245.29725647]
[-161.43034363 -259.74838257]
[-156.37504578 -273.73342896]
[-164.94407654 -286.04489136]
[-173.51310730 -298.35632324]
[-187.74719238 -305.26293945]
[-188.66738892 -320.12908936]
[-197.23640442 -332.44055176]
[-205.80543518 -344.75198364]
[-219.81643677 -354.29809570]
[-214.52203369 -370.40417480]
[-197.57975769 -369.77526855]
[-193.49397278 -353.32101440]
[-184.92495728 -341.00958252]
[-176.35592651 -328.69812012]
[-162.73475647 -322.67211914]
[-161.20164490 -306.92535400]
[-152.63262939 -294.61392212]
[-144.06359863 -282.30245972]
[-129.19334412 -282.18597412]
[-117.10002136 -273.22967529]
[-112.54612732 -258.69985962]
[-117.47804260 -244.10594177]
[-108.90901947 -231.79449463]
[-100.33999634 -219.48304749]
[-91.77097321 -207.17158508]
[-83.20195007 -194.86013794]
[-69.58077240 -188.83413696]
[-68.04766083 -173.08738708]
[-59.47864151 -160.77592468]
[-50.90961838 -148.46447754]
[-42.34059525 -136.15303040]
[-33.77157211 -123.84157562]
[-25.20254707 -111.53012085]
[-20.72252464 -109.81877136]
[-17.27963448 -105.26276398]
[-16.56029320 -98.65500641]
[-8.41196728 -86.06116486]
[-0.26364174 -73.46732330]
[13.14624310 -66.98471069]
[14.14664173 -51.19516754]
[22.29496765 -38.60132599]
[28.58197594 -34.68479156]
[30.47247314 -25.72525787]
[38.40693283 -12.99559498]
[46.34139252 -0.26593107]
[59.63987732 6.44224167]
[60.37345505 22.24643135]
[68.30791473 34.97609711]
[76.24237823 47.70576096]
[84.17683411 60.43542480]
[92.11129761 73.16508484]
[100.04575348 85.89475250]
[114.46701050 90.02119446]
[127.93407440 83.41528320]
[133.13154602 68.73114014]
[146.88317871 62.22364807]
[160.85023499 67.26913452]
[174.31729126 60.66322327]
[180.84593201 46.00865173]
[196.40946960 42.11559296]
[209.06889343 51.97046661]
[209.11297607 68.01345825]
[196.50790405 77.93775940]
[180.92320251 74.13029480]
[167.45614624 80.73620605]
[162.89666748 94.86938477]
[149.33325195 101.76056671]
[134.53999329 96.88234711]
[121.07292175 103.48825836]
[114.28089905 104.61686707]
[107.75258636 103.85379028]
[111.51237488 118.37494659]
[127.32620239 124.34706879]
[136.38131714 138.42407227]
[135.28065491 154.95930481]
[124.65470886 167.45883179]
[128.65921021 181.91442871]
[132.78565979 196.33567810]
[137.03373718 210.72155762]
[141.28182983 225.10745239]
[145.52990723 239.49334717]
[149.77798462 253.87922668]
[155.22109985 261.24264526]
[153.97412109 268.54406738]
[157.97863770 282.99963379]
[161.98313904 297.45523071]
[165.98764038 311.91079712]
[175.63357544 300.42358398]
[190.63215637 300.62976074]
[199.95870972 312.37774658]
[196.75778198 327.03222656]
[183.38218689 333.82147217]
[169.66462708 327.75616455]
[172.43551636 342.49801636]
[175.20642090 357.23986816]
[177.97731018 371.98171997]
[180.74819946 386.72357178]
[183.51908875 401.46542358]
[186.28997803 416.20727539]
[189.06086731 430.94912720]
[191.83175659 445.69097900]
[194.72705078 460.40890503]
[197.74652100 475.10183716]
[200.76600647 489.79479980]
[215.82579041 490.84613037]
[230.04309082 495.92260742]
[242.36289978 504.64758301]
[251.87097168 516.37359619]
[257.86175537 530.23046875]
[259.89074707 545.18994141]
[257.80728149 560.14190674]
[251.76606750 573.97686768]
[242.21533203 585.66815186]
[229.86384583 594.34820557]
[215.62814331 599.37292480]
[200.56462097 600.36938477]
[185.79109192 597.26367188]
[172.40385437 590.28625488]
[161.39631653 579.95489502]
[153.58532715 567.03625488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 169]
[6 168]
[7 167]
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[15 160]
[16 159]
[17 158]
[18 152]
[19 151]
[20 150]
[21 149]
[22 147]
[23 146]
[24 145]
[25 144]
[26 143]
[28 142]
[29 141]
[34 137]
[35 136]
[36 117]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
[43 110]
[44 109]
[45 108]
[46 106]
[47 105]
[49 103]
[50 102]
[51 101]
[52 98]
[53 97]
[54 96]
[55 95]
[56 94]
[57 93]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[67 83]
[68 82]
[69 81]
[71 79]
[72 78]
[73 77]
[118 134]
[119 133]
[122 130]
[123 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
