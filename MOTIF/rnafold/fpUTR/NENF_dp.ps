%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NENF)
} def

/sequence { (\
GGGCGUGCUAGGGCCCCGCCGCCCUGGCCCGGCCUUGCCUUGCGCUGCGCGCUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.031331067 ubox
1 34 0.531279086 ubox
1 35 0.159081212 ubox
1 36 0.012200174 ubox
1 39 0.008467925 ubox
1 40 0.027713206 ubox
1 53 0.005359174 ubox
1 54 0.820821477 ubox
1 57 0.014559595 ubox
2 29 0.031338969 ubox
2 30 0.017809810 ubox
2 33 0.532108903 ubox
2 34 0.183389002 ubox
2 35 0.003594243 ubox
2 38 0.006102132 ubox
2 39 0.031924029 ubox
2 46 0.009573481 ubox
2 52 0.006542549 ubox
2 53 0.823410325 ubox
2 54 0.023369665 ubox
2 56 0.014270588 ubox
2 57 0.004804615 ubox
3 28 0.028138611 ubox
3 29 0.017836678 ubox
3 33 0.183617306 ubox
3 34 0.003420788 ubox
3 38 0.031949363 ubox
3 45 0.010083481 ubox
3 48 0.004022125 ubox
3 50 0.008823529 ubox
3 52 0.824721992 ubox
3 56 0.004802304 ubox
4 27 0.025087996 ubox
4 31 0.541970660 ubox
4 32 0.152052001 ubox
4 37 0.031676958 ubox
4 44 0.010095949 ubox
4 47 0.004033206 ubox
4 49 0.008868741 ubox
4 51 0.824718920 ubox
5 30 0.551911108 ubox
5 33 0.014754678 ubox
5 36 0.024038786 ubox
5 43 0.010106545 ubox
5 45 0.010452572 ubox
5 48 0.008940668 ubox
5 50 0.823538260 ubox
6 31 0.009919246 ubox
6 32 0.014865857 ubox
6 42 0.009966306 ubox
6 44 0.012015463 ubox
6 47 0.008638340 ubox
6 49 0.822377394 ubox
7 28 0.578123685 ubox
7 30 0.003447663 ubox
7 33 0.017121393 ubox
7 38 0.024609585 ubox
7 41 0.003188752 ubox
7 43 0.018837212 ubox
7 45 0.034429553 ubox
7 48 0.813229160 ubox
8 27 0.580280847 ubox
8 32 0.017116574 ubox
8 37 0.024865010 ubox
8 42 0.019212149 ubox
8 44 0.035842710 ubox
8 47 0.810940750 ubox
9 26 0.655996115 ubox
9 31 0.015173486 ubox
9 37 0.516952511 ubox
9 42 0.269953494 ubox
9 47 0.028479180 ubox
10 25 0.671971979 ubox
10 35 0.015449633 ubox
10 36 0.618877656 ubox
10 40 0.009243329 ubox
10 41 0.274585847 ubox
10 46 0.143886242 ubox
11 24 0.673942026 ubox
11 30 0.045163041 ubox
11 34 0.013722329 ubox
11 35 0.662409442 ubox
11 36 0.012324249 ubox
11 39 0.009908139 ubox
11 40 0.277628672 ubox
11 41 0.008865325 ubox
11 45 0.140673589 ubox
11 46 0.004767739 ubox
12 20 0.005627418 ubox
12 23 0.673968624 ubox
12 29 0.045340944 ubox
12 33 0.009750906 ubox
12 34 0.675839107 ubox
12 38 0.007125553 ubox
12 39 0.278923706 ubox
12 45 0.003720468 ubox
12 46 0.003298595 ubox
13 19 0.005828965 ubox
13 22 0.673965882 ubox
13 28 0.045339799 ubox
13 33 0.676016177 ubox
13 38 0.278904245 ubox
13 43 0.093530204 ubox
13 45 0.003353482 ubox
14 18 0.005933641 ubox
14 21 0.672819007 ubox
14 27 0.045241440 ubox
14 32 0.675824974 ubox
14 37 0.278546827 ubox
14 42 0.093331451 ubox
14 44 0.003295913 ubox
15 26 0.045032846 ubox
15 31 0.674591009 ubox
15 32 0.052761115 ubox
16 26 0.003315063 ubox
16 27 0.018608673 ubox
16 31 0.056007786 ubox
16 32 0.031636541 ubox
17 26 0.018743090 ubox
17 31 0.031713865 ubox
17 37 0.007688866 ubox
18 25 0.015028241 ubox
18 28 0.680073070 ubox
18 30 0.015882561 ubox
18 33 0.272958690 ubox
18 36 0.004484789 ubox
18 38 0.067205902 ubox
19 27 0.681029081 ubox
19 32 0.273296143 ubox
19 37 0.067218345 ubox
20 26 0.680754821 ubox
20 31 0.273191873 ubox
21 25 0.420024274 ubox
21 28 0.072438983 ubox
21 30 0.261778127 ubox
21 33 0.066695858 ubox
21 38 0.007999341 ubox
22 27 0.079078480 ubox
22 32 0.066428773 ubox
22 37 0.007991076 ubox
23 31 0.066055701 ubox
23 32 0.009023598 ubox
24 31 0.011006191 ubox
24 32 0.003513734 ubox
25 31 0.003590671 ubox
26 30 0.006153499 ubox
26 34 0.053304672 ubox
26 39 0.029607291 ubox
26 43 0.007716903 ubox
26 46 0.072256452 ubox
27 33 0.053929070 ubox
27 38 0.029969883 ubox
27 43 0.317274609 ubox
27 45 0.095746799 ubox
28 32 0.053542880 ubox
28 37 0.029948477 ubox
28 42 0.317433749 ubox
28 44 0.095744007 ubox
30 42 0.065956684 ubox
30 44 0.004946452 ubox
30 47 0.063396422 ubox
30 49 0.003203575 ubox
31 39 0.362203867 ubox
31 40 0.007247942 ubox
31 41 0.014634225 ubox
31 43 0.004180588 ubox
31 46 0.066945982 ubox
31 48 0.004104416 ubox
32 38 0.362736386 ubox
32 39 0.008040196 ubox
32 40 0.009151397 ubox
32 43 0.015528561 ubox
32 45 0.067350387 ubox
32 48 0.040452382 ubox
32 50 0.003466668 ubox
33 37 0.360113567 ubox
33 42 0.015662753 ubox
33 44 0.066945071 ubox
33 47 0.040511703 ubox
33 49 0.003498736 ubox
36 42 0.005348653 ubox
36 44 0.142415771 ubox
36 49 0.012230426 ubox
36 51 0.010666076 ubox
36 55 0.065933476 ubox
37 41 0.007552593 ubox
37 43 0.268741598 ubox
37 45 0.318283166 ubox
37 46 0.006442595 ubox
37 48 0.018450152 ubox
37 50 0.014501975 ubox
37 52 0.049980955 ubox
37 54 0.073565906 ubox
38 42 0.267537274 ubox
38 44 0.320166555 ubox
38 47 0.018568725 ubox
38 49 0.014421078 ubox
38 51 0.049684098 ubox
41 49 0.031352800 ubox
41 51 0.056008202 ubox
41 55 0.035154487 ubox
42 46 0.007300483 ubox
42 48 0.086075366 ubox
42 50 0.095308986 ubox
42 52 0.555120380 ubox
42 54 0.034777535 ubox
43 47 0.085553190 ubox
43 49 0.095585537 ubox
43 51 0.556151245 ubox
44 48 0.089566399 ubox
44 50 0.556148807 ubox
44 52 0.037424007 ubox
45 49 0.552111352 ubox
45 51 0.037420552 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
showpage
end
%%EOF
