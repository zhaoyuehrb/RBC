%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGGCUCCGCCCCCCAGGACGCCGAGCCUCGGCCGGGCGGUAAAAUCGGCGCUUACCCUUUAAGCGGCGGGACUUCUGGUCACGUCGUCCGCGGUCGCCGGAAGGGGAAGUUUCGCCUCAGAAGGCUGCCUCGCUGGUCCGAAUUCGGUGGCGCCACGUCCGCCCGUCUCCGCCUUCUGCAUCGCGGCUUCGGCGGCUUCCACCUAGACACCUAACAGUCGCGGAGCCGGCCGCGUCGUGAGGGGGUCGGCAC\
GGGGAGUCGGGCGGUCUUGUGCAUCUUGGCUACCUGUGGGUCGAAG\
) } def
/len { sequence length } bind def

/coor [
[105.34526062 450.70532227]
[92.49568176 458.87896729]
[77.43154144 461.11312866]
[62.76278687 457.02075195]
[51.03087234 447.31085205]
[44.26842499 433.66574097]
[43.64707565 418.44949341]
[49.27447891 404.29846191]
[60.17565536 393.66433716]
[74.46190643 388.38958740]
[75.39752960 373.41879272]
[68.46916199 360.23370361]
[77.05218506 346.94302368]
[77.98781586 331.97222900]
[78.92344666 317.00143433]
[71.99507904 303.81631470]
[80.57810211 290.52563477]
[81.51372528 275.55484009]
[82.44935608 260.58404541]
[83.38498688 245.61326599]
[73.36847687 234.64945984]
[74.10407257 219.45361328]
[85.67184448 209.02171326]
[86.60747528 194.05091858]
[87.54309845 179.08013916]
[88.47872925 164.10934448]
[89.41436005 149.13854980]
[90.34999084 134.16775513]
[77.07209778 127.10848236]
[67.90731812 115.18612671]
[64.49975586 100.53948212]
[49.79179382 97.59399414]
[35.08383179 94.64851379]
[20.37586975 91.70303345]
[5.66790771 88.75755310]
[-9.38292503 93.63433075]
[-20.34306717 83.54847717]
[-35.05102921 80.60298920]
[-49.75899124 77.65750885]
[-64.46694946 74.71202850]
[-79.17491150 71.76654816]
[-93.88287354 68.82106018]
[-108.59083557 65.87557983]
[-117.47180176 79.30585480]
[-130.80030823 88.26982117]
[-146.51240540 91.41516876]
[-162.18872070 88.28781128]
[-175.42703247 79.39726257]
[-184.21032715 66.13383484]
[-187.21414185 50.55131149]
[-201.95195007 47.75898743]
[-216.68975830 44.96666336]
[-231.42756653 42.17433929]
[-246.20713806 39.61231232]
[-261.02490234 37.28120804]
[-273.71585083 46.31323624]
[-288.70996094 43.73807907]
[-297.24240112 31.58353424]
[-312.06015015 29.25242996]
[-326.87792969 26.92132568]
[-341.69567871 24.59022331]
[-356.51342773 22.25911903]
[-371.33120728 19.92801476]
[-384.02215576 28.96004105]
[-399.01626587 26.38488579]
[-407.54870605 14.23034000]
[-422.36645508 11.89923668]
[-437.18420410 9.56813240]
[-452.00198364 7.23702860]
[-466.83166504 4.98302794]
[-481.67285156 2.80619073]
[-496.52517700 0.70657665]
[-511.38824463 -1.31575787]
[-526.25128174 -3.33809233]
[-541.11431885 -5.36042690]
[-550.80059814 3.95625591]
[-563.89050293 5.97927666]
[-575.58905029 0.19355007]
[-581.74011230 -11.09631252]
[-596.58129883 -13.27314949]
[-611.61499023 -6.72182035]
[-624.64288330 -16.68203163]
[-622.26300049 -32.90757370]
[-606.92358398 -38.70699692]
[-594.40447998 -28.11435509]
[-579.56323242 -25.93751907]
[-566.48638916 -36.54764557]
[-549.44921875 -34.35020828]
[-539.09197998 -20.22347450]
[-524.22894287 -18.20113945]
[-509.36590576 -16.17880440]
[-494.50286865 -14.15647030]
[-487.48614502 -16.35737801]
[-479.49603271 -12.03501511]
[-464.65481567 -9.85817814]
[-457.61560059 -11.98597527]
[-449.67086792 -7.58072948]
[-434.85311890 -5.24962568]
[-420.03533936 -2.91852164]
[-405.21759033 -0.58741778]
[-393.36538696 -9.53508377]
[-378.30487061 -7.38209772]
[-369.00009155 5.11025667]
[-354.18234253 7.44136095]
[-339.36456299 9.77246475]
[-324.54681396 12.10356808]
[-309.72906494 14.43467236]
[-294.91131592 16.76577568]
[-283.05908203 7.81810999]
[-267.99856567 9.97109604]
[-258.69378662 22.46345139]
[-243.87603760 24.79455566]
[-240.85540771 23.06656075]
[-236.85960388 22.68801880]
[-232.51942444 24.09639740]
[-228.63523865 27.43653297]
[-213.89743042 30.22885704]
[-199.15962219 33.02118301]
[-184.42181396 35.81350708]
[-177.20033264 23.80983925]
[-166.29708862 14.96713257]
[-153.00474548 10.35993862]
[-138.90818787 10.55909824]
[-125.69553375 15.56109047]
[-114.95595551 24.78602409]
[-107.98858643 37.14478683]
[-105.64535522 51.16761780]
[-90.93739319 54.11310196]
[-76.22943115 57.05858231]
[-61.52146912 60.00406647]
[-46.81350708 62.94954681]
[-32.10554504 65.89502716]
[-17.39758492 68.84051514]
[-3.39876485 63.75304794]
[8.61338997 74.04959106]
[23.32135201 76.99507141]
[38.02931213 79.94055176]
[52.73727417 82.88603210]
[67.44523621 85.83152008]
[75.96071625 73.87202454]
[88.58666992 66.38014984]
[86.87397766 51.47824860]
[85.16128540 36.57634354]
[74.96443176 23.73281670]
[81.23966980 8.58179474]
[97.53157043 6.70935106]
[107.08042145 20.04169655]
[100.06318665 34.86365509]
[101.77587891 49.76555634]
[103.48857117 64.66745758]
[115.07475281 67.85485077]
[124.93409729 74.72453308]
[131.93719482 84.48955536]
[146.50990295 80.93479156]
[161.08259583 77.38002777]
[175.65530396 73.82526398]
[178.86688232 60.23840332]
[187.56925964 49.40579605]
[200.02558899 43.39871597]
[213.78851318 43.33430099]
[226.18095398 49.16825104]
[234.81690979 59.71447372]
[249.42579651 56.31149292]
[264.03469849 52.90851593]
[278.64358521 49.50553894]
[293.25247192 46.10256195]
[307.86135864 42.69958115]
[322.47024536 39.29660416]
[334.15527344 28.63026619]
[348.30603027 33.27845001]
[362.91491699 29.87547302]
[377.52380371 26.47249413]
[392.13272095 23.06951714]
[406.66763306 19.36335564]
[421.12234497 15.35561562]
[435.57702637 11.34787464]
[443.39456177 -2.12519455]
[458.11077881 -5.98370075]
[470.90710449 1.55217242]
[485.36181641 -2.45556784]
[490.88043213 -16.83788300]
[503.66024780 -25.11613083]
[518.68634033 -24.29156113]
[530.20776367 -14.88965893]
[544.66241455 -18.89739990]
[559.11712646 -22.90513992]
[573.57183838 -26.91287994]
[588.02648926 -30.92061996]
[602.48120117 -34.92835999]
[616.93585205 -38.93610001]
[623.93255615 -49.73347473]
[636.01739502 -52.79220963]
[646.60546875 -47.00629425]
[661.10107422 -50.86345291]
[675.59661865 -54.72061157]
[690.09222412 -58.57777023]
[704.56756592 -62.51027298]
[719.02227783 -66.51801300]
[733.47692871 -70.52575684]
[747.93164062 -74.53349304]
[762.38635254 -78.54123688]
[776.84100342 -82.54897308]
[778.94604492 -91.90711975]
[784.25964355 -99.82346344]
[792.02850342 -105.25040436]
[801.17785645 -107.48803711]
[810.46008301 -106.27416229]
[818.62506104 -101.81431580]
[824.58831787 -94.74838257]
[839.19720459 -98.15135956]
[853.80609131 -101.55433655]
[859.71673584 -115.90160370]
[872.94927979 -124.00590515]
[888.41552734 -122.75098419]
[900.16839600 -112.61936951]
[903.68865967 -97.50688934]
[897.62274170 -83.22458649]
[884.30310059 -75.26430511]
[868.85137939 -76.68693542]
[857.20910645 -86.94544220]
[842.60021973 -83.54246521]
[827.99133301 -80.13948822]
[818.60247803 -61.93891144]
[798.52014160 -56.61378860]
[780.84875488 -68.09428406]
[766.39404297 -64.08654785]
[751.93939209 -60.07880783]
[737.48468018 -56.07106781]
[723.03002930 -52.06332779]
[708.57531738 -48.05558395]
[702.99682617 -43.26409149]
[693.94940186 -44.08217621]
[679.45379639 -40.22501373]
[664.95819092 -36.36785507]
[650.46258545 -32.51069641]
[638.68658447 -19.47146606]
[620.94360352 -24.48141289]
[606.48895264 -20.47367287]
[592.03424072 -16.46593094]
[577.57952881 -12.45819092]
[563.12487793 -8.45045090]
[548.67016602 -4.44271088]
[534.21551514 -0.43497056]
[529.18048096 13.55740070]
[516.72430420 22.00177574]
[501.50625610 21.48627090]
[489.36953735 11.99912071]
[474.91485596 16.00686073]
[467.82601929 29.05614471]
[453.22399902 33.32647705]
[439.58477783 25.80256271]
[425.13006592 29.81030464]
[410.67538452 33.81804276]
[409.18133545 36.13505936]
[406.70178223 38.01478577]
[403.39364624 39.08704376]
[399.54193115 39.04328156]
[395.53567505 37.67840958]
[380.92678833 41.08138657]
[366.31790161 44.48436356]
[351.70901489 47.88734436]
[341.06890869 58.31027603]
[325.87322998 53.90549850]
[311.26434326 57.30847549]
[296.65545654 60.71145248]
[282.04656982 64.11443329]
[267.43765259 67.51741028]
[252.82878113 70.92038727]
[238.21987915 74.32336426]
[233.89128113 89.91509247]
[222.21318054 101.25150299]
[206.31712341 105.16027069]
[190.53308105 100.47883606]
[179.21006775 88.39797211]
[164.63735962 91.95273590]
[150.06466675 95.50749207]
[135.49195862 99.06225586]
[131.87896729 115.62978363]
[120.99430084 128.63211060]
[105.32077789 135.10339355]
[104.38514709 150.07417297]
[103.44952393 165.04496765]
[102.51389313 180.01576233]
[101.57826233 194.98655701]
[100.64263916 209.95735168]
[110.82154083 221.74833679]
[109.65941620 236.91752625]
[98.35577393 246.54888916]
[97.42015076 261.51968384]
[96.48451996 276.49047852]
[95.54888916 291.46127319]
[102.41033936 305.71719360]
[93.89423370 317.93707275]
[92.95861053 332.90783691]
[92.02297974 347.87863159]
[98.88442230 362.13455200]
[90.36832428 374.35443115]
[89.43269348 389.32522583]
[102.95103455 396.33767700]
[112.44335175 408.24630737]
[116.26506042 422.98788452]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 298]
[11 297]
[13 295]
[14 294]
[15 293]
[17 291]
[18 290]
[19 289]
[20 288]
[23 285]
[24 284]
[25 283]
[26 282]
[27 281]
[28 280]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[42 128]
[43 127]
[50 119]
[51 118]
[52 117]
[53 116]
[54 112]
[55 111]
[58 108]
[59 107]
[60 106]
[61 105]
[62 104]
[63 103]
[66 100]
[67 99]
[68 98]
[69 97]
[70 95]
[71 94]
[72 92]
[73 91]
[74 90]
[75 89]
[79 86]
[80 85]
[141 150]
[142 149]
[143 148]
[153 277]
[154 276]
[155 275]
[156 274]
[162 269]
[163 268]
[164 267]
[165 266]
[166 265]
[167 264]
[168 263]
[170 261]
[171 260]
[172 259]
[173 258]
[174 253]
[175 252]
[176 251]
[179 248]
[180 247]
[184 243]
[185 242]
[186 241]
[187 240]
[188 239]
[189 238]
[190 237]
[193 235]
[194 234]
[195 233]
[196 232]
[197 230]
[198 229]
[199 228]
[200 227]
[201 226]
[202 225]
[209 222]
[210 221]
[211 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
