%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HGFAC)
} def

/sequence { (\
GCCUUGACCCCACCUGCCUUGGCCGCUCUGCUCCCGCCUCCCACUGCCCCUCAGGCCAGCUCAGGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.041133442 ubox
1 23 0.337780962 ubox
1 26 0.011884137 ubox
1 31 0.015698380 ubox
1 56 0.007996433 ubox
1 68 0.455165838 ubox
2 16 0.041197725 ubox
2 22 0.338866418 ubox
2 25 0.011844766 ubox
2 30 0.015703349 ubox
2 55 0.008009527 ubox
2 65 0.037450244 ubox
2 67 0.454981831 ubox
3 21 0.338735362 ubox
3 22 0.004701601 ubox
3 54 0.007985154 ubox
3 64 0.037541014 ubox
3 65 0.442872036 ubox
3 67 0.060883698 ubox
4 21 0.005270021 ubox
4 53 0.005808536 ubox
4 63 0.027098743 ubox
4 64 0.442541098 ubox
4 65 0.004624189 ubox
4 66 0.071021299 ubox
4 67 0.010285624 ubox
5 12 0.197601127 ubox
5 16 0.007805040 ubox
5 25 0.007884581 ubox
5 53 0.005582962 ubox
5 63 0.443291058 ubox
5 65 0.014113865 ubox
5 66 0.016660598 ubox
6 11 0.221631679 ubox
6 15 0.015201863 ubox
6 20 0.023056059 ubox
6 24 0.024736670 ubox
6 28 0.017593722 ubox
6 52 0.007798221 ubox
6 62 0.444369086 ubox
7 19 0.023572164 ubox
7 27 0.017252600 ubox
7 51 0.007589961 ubox
7 61 0.437425113 ubox
8 22 0.021102316 ubox
8 55 0.006966891 ubox
8 65 0.012830773 ubox
9 21 0.021071492 ubox
9 22 0.013243804 ubox
9 54 0.006947983 ubox
9 64 0.012660266 ubox
9 65 0.018835644 ubox
10 21 0.012998892 ubox
10 22 0.068233773 ubox
10 64 0.018388642 ubox
10 65 0.029512953 ubox
11 21 0.068885495 ubox
11 46 0.003493987 ubox
11 64 0.029060197 ubox
12 20 0.064592835 ubox
12 45 0.003395741 ubox
13 22 0.118411467 ubox
13 55 0.275131807 ubox
13 65 0.805195028 ubox
14 21 0.118962863 ubox
14 22 0.006791260 ubox
14 54 0.275598772 ubox
14 59 0.107924529 ubox
14 64 0.808966030 ubox
14 65 0.008511204 ubox
14 67 0.024297664 ubox
15 21 0.006725250 ubox
15 43 0.013300287 ubox
15 53 0.275457077 ubox
15 58 0.107876021 ubox
15 63 0.808614721 ubox
15 64 0.007731872 ubox
15 66 0.024497869 ubox
16 20 0.004431164 ubox
16 23 0.034987557 ubox
16 24 0.003889648 ubox
16 26 0.014791733 ubox
16 37 0.029927225 ubox
16 42 0.014804385 ubox
16 47 0.026736044 ubox
16 52 0.273433917 ubox
16 56 0.091906345 ubox
16 57 0.078151457 ubox
16 60 0.307646662 ubox
16 62 0.805745217 ubox
16 68 0.040684991 ubox
17 22 0.035125330 ubox
17 25 0.014804277 ubox
17 36 0.030022427 ubox
17 46 0.029789527 ubox
17 55 0.118223495 ubox
17 59 0.299397456 ubox
17 65 0.033237839 ubox
17 67 0.040780509 ubox
18 54 0.118201073 ubox
18 55 0.023780886 ubox
18 59 0.165886908 ubox
18 64 0.033355416 ubox
18 65 0.041402782 ubox
19 53 0.114655906 ubox
19 54 0.023842623 ubox
19 58 0.125968726 ubox
19 59 0.737087637 ubox
19 63 0.031540164 ubox
19 64 0.041321204 ubox
20 36 0.019411547 ubox
20 43 0.033160328 ubox
20 53 0.028975029 ubox
20 58 0.850794385 ubox
20 63 0.041155827 ubox
21 28 0.003878056 ubox
21 32 0.029821631 ubox
21 33 0.005053380 ubox
21 34 0.011094593 ubox
21 35 0.032814463 ubox
21 38 0.038999717 ubox
21 41 0.012735222 ubox
21 42 0.033807844 ubox
21 45 0.003930199 ubox
21 48 0.273381718 ubox
21 49 0.044361205 ubox
21 50 0.063868982 ubox
21 51 0.077144330 ubox
21 52 0.032539383 ubox
21 57 0.871405473 ubox
21 61 0.027818392 ubox
21 62 0.040818891 ubox
21 69 0.076606565 ubox
22 31 0.031699190 ubox
22 33 0.011087677 ubox
22 34 0.032805300 ubox
22 37 0.039104293 ubox
22 40 0.013335001 ubox
22 41 0.033504416 ubox
22 44 0.004003215 ubox
22 47 0.274033660 ubox
22 48 0.042898173 ubox
22 49 0.063694075 ubox
22 50 0.081073431 ubox
22 51 0.021709528 ubox
22 56 0.871433209 ubox
22 60 0.048564152 ubox
22 61 0.009842149 ubox
22 68 0.077543337 ubox
23 30 0.031582181 ubox
23 36 0.038099366 ubox
23 46 0.272976623 ubox
23 55 0.871390185 ubox
23 59 0.048705111 ubox
23 67 0.077542350 ubox
24 30 0.010120576 ubox
24 36 0.022364621 ubox
24 46 0.027964014 ubox
24 54 0.869158112 ubox
24 64 0.003252121 ubox
25 29 0.007641495 ubox
25 31 0.131518427 ubox
25 35 0.024063328 ubox
25 37 0.082266584 ubox
25 45 0.030386244 ubox
25 47 0.217714704 ubox
25 56 0.047709610 ubox
25 60 0.010993749 ubox
25 68 0.351368596 ubox
26 30 0.130729753 ubox
26 36 0.082294734 ubox
26 46 0.217826101 ubox
26 54 0.006139382 ubox
26 55 0.047571668 ubox
26 59 0.010969834 ubox
26 64 0.077267413 ubox
26 65 0.003342263 ubox
26 67 0.352075573 ubox
27 53 0.011706904 ubox
27 54 0.006632440 ubox
27 55 0.014350394 ubox
27 58 0.010077811 ubox
27 63 0.076371351 ubox
27 65 0.019718741 ubox
27 66 0.351523259 ubox
28 54 0.071682728 ubox
28 59 0.003993139 ubox
28 64 0.043788733 ubox
28 65 0.349328168 ubox
29 36 0.011120863 ubox
29 43 0.166325930 ubox
29 46 0.005055408 ubox
29 53 0.116138548 ubox
29 58 0.004522579 ubox
29 63 0.057037856 ubox
29 64 0.342394127 ubox
30 35 0.018508178 ubox
30 37 0.295732382 ubox
30 42 0.160133802 ubox
30 45 0.003363836 ubox
30 47 0.795959208 ubox
30 52 0.116278949 ubox
30 56 0.006031137 ubox
30 57 0.004848660 ubox
30 60 0.349862598 ubox
30 62 0.050401346 ubox
30 68 0.101416299 ubox
31 36 0.296756871 ubox
31 46 0.796825407 ubox
31 55 0.006045968 ubox
31 59 0.350507297 ubox
31 67 0.101749097 ubox
32 53 0.004420020 ubox
32 54 0.005641942 ubox
32 58 0.346335463 ubox
32 66 0.101732085 ubox
33 55 0.006450278 ubox
33 65 0.101135756 ubox
34 54 0.006407640 ubox
34 55 0.020144478 ubox
34 64 0.100565450 ubox
34 65 0.008018020 ubox
35 46 0.034637784 ubox
35 54 0.020186731 ubox
35 64 0.011275265 ubox
36 45 0.037818928 ubox
36 47 0.183736918 ubox
36 56 0.360504779 ubox
36 60 0.083546905 ubox
36 68 0.035086199 ubox
37 46 0.183950210 ubox
37 55 0.360699349 ubox
37 59 0.080456100 ubox
37 65 0.010555520 ubox
37 67 0.025157589 ubox
38 54 0.360420469 ubox
38 59 0.023936058 ubox
38 64 0.013147807 ubox
38 65 0.004459359 ubox
38 67 0.045024180 ubox
39 53 0.339822177 ubox
39 58 0.028324732 ubox
39 63 0.016035620 ubox
39 64 0.004340503 ubox
39 66 0.051804587 ubox
40 55 0.015685428 ubox
40 65 0.051900633 ubox
41 54 0.015331830 ubox
41 55 0.039873649 ubox
41 64 0.051814453 ubox
42 54 0.039252559 ubox
42 64 0.003195675 ubox
44 54 0.059623001 ubox
44 55 0.004646733 ubox
44 59 0.087613307 ubox
45 53 0.074860375 ubox
45 54 0.004645473 ubox
45 58 0.092178263 ubox
46 52 0.079021976 ubox
46 56 0.080018891 ubox
46 57 0.075504864 ubox
46 60 0.007797957 ubox
46 68 0.006703440 ubox
47 55 0.096035318 ubox
47 59 0.007797417 ubox
47 67 0.006720718 ubox
48 54 0.095802066 ubox
48 55 0.053843076 ubox
49 54 0.053971491 ubox
49 55 0.008879240 ubox
49 65 0.006940109 ubox
50 54 0.008995422 ubox
50 64 0.006980692 ubox
51 63 0.006881141 ubox
53 61 0.006943929 ubox
54 60 0.007072960 ubox
59 68 0.015051849 ubox
60 67 0.015127756 ubox
61 66 0.014000811 ubox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
15 63 0.9500000 lbox
16 62 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
21 57 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
showpage
end
%%EOF
