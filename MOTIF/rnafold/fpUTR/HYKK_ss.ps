%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGCUGCGGCCCCUGCUCUACCUCCUAGCGCCGGUGCGCGGCCGAGGCCGCACUACCUGUCUGCGGGAAAGCGGGAUCCACCCCAGGACGUCGGGUCGCUGCCGACAUA\
) } def
/len { sequence length } bind def

/coor [
[73.29209137 154.59194946]
[65.08786774 167.14944458]
[56.88364792 179.70693970]
[48.67942810 192.26443481]
[40.47520447 204.82192993]
[39.40463257 220.60687256]
[25.96606636 227.02981567]
[17.76184464 239.58732605]
[17.39920807 255.98245239]
[2.89116645 263.62762451]
[-10.83765030 254.65815735]
[-9.66421223 238.30104065]
[5.20434761 231.38310242]
[13.40857029 218.82559204]
[13.89231968 203.93885803]
[27.91770744 196.61770630]
[36.12192917 184.06021118]
[44.32615280 171.50271606]
[52.53037262 158.94522095]
[60.73459625 146.38772583]
[49.72513962 134.14720154]
[42.40488815 119.40092468]
[39.31101227 103.23100281]
[40.67053604 86.82398224]
[46.38369751 71.38383484]
[56.03126907 58.04355240]
[68.90529633 47.78207016]
[62.87986374 34.04547119]
[56.85443115 20.30887222]
[50.82899857 6.57227230]
[44.42850876 -0.14227900]
[44.83259964 -7.62683582]
[39.18795776 -21.52424622]
[33.16252518 -35.26084518]
[26.76087952 -48.82620239]
[13.87400818 -58.00439072]
[15.43959141 -72.81649017]
[9.03794479 -86.38184357]
[2.63629866 -99.94720459]
[-3.76534796 -113.51255798]
[-19.11581612 -123.56631470]
[-17.14815140 -140.94494629]
[-23.92115211 -154.32875061]
[-30.69415283 -167.71257019]
[-37.46715164 -181.09638977]
[-44.24015427 -194.48019409]
[-58.25743866 -202.99182129]
[-57.62434006 -219.37873840]
[-42.99213028 -226.78350830]
[-29.41317558 -217.58871460]
[-30.85633850 -201.25320435]
[-24.08333969 -187.86938477]
[-17.31033897 -174.48556519]
[-10.53733826 -161.10176086]
[-3.76433778 -147.71794128]
[7.70151329 -143.59936523]
[13.42041302 -132.38792419]
[9.80000973 -119.91420746]
[16.20165634 -106.34884644]
[22.60330200 -92.78349304]
[29.00494957 -79.21813202]
[41.43393326 -71.01023102]
[40.32623672 -55.22785187]
[46.72788239 -41.66249466]
[50.96825027 -39.20157623]
[53.63262177 -33.98379135]
[53.08536911 -27.16888809]
[58.73001099 -13.27147675]
[64.56559753 0.54684073]
[70.59103394 14.28344059]
[76.61646271 28.02004051]
[82.64189148 41.75664139]
[101.49666595 39.24349594]
[120.20482635 42.68195724]
[136.93374634 51.73520279]
[150.04470825 65.51638794]
[158.25337219 82.67552948]
[173.04879761 80.20661163]
[187.84420776 77.73768616]
[196.82258606 64.73136902]
[212.38294983 61.96540070]
[225.29362488 71.08078003]
[227.89491272 86.66952515]
[218.64353943 99.48309326]
[203.02818298 101.91943359]
[190.31312561 92.53311157]
[175.51771545 95.00202942]
[160.72229004 97.47094727]
[160.49357605 105.84116364]
[159.11656189 114.10049438]
[156.61738586 122.09217072]
[153.04348755 129.66448975]
[148.46269226 136.67370605]
[142.96195984 142.98677063]
[152.17515564 154.82388306]
[161.38833618 166.66099548]
[170.60153198 178.49809265]
[179.81472778 190.33520508]
[195.44735718 190.72880554]
[207.13536072 201.11749268]
[209.36001587 216.59602356]
[201.07090759 229.85591125]
[186.18191528 234.63626099]
[171.72314453 228.67991638]
[164.52159119 214.79930115]
[167.97761536 199.54840088]
[158.76441956 187.71128845]
[149.55123901 175.87417603]
[140.33804321 164.03707886]
[131.12484741 152.19996643]
[120.21806335 157.31336975]
[108.51699066 160.17518616]
[96.48132324 160.67298889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[7 14]
[8 13]
[27 72]
[28 71]
[29 70]
[30 69]
[32 68]
[33 67]
[34 64]
[35 63]
[37 61]
[38 60]
[39 59]
[40 58]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[77 88]
[78 87]
[79 86]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
