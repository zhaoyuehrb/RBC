%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAGE12I)
} def

/sequence { (\
UGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005263452 ubox
1 12 0.584289624 ubox
1 16 0.044652400 ubox
1 35 0.004112765 ubox
1 42 0.009457169 ubox
2 8 0.009907171 ubox
2 11 0.833845855 ubox
2 14 0.004064743 ubox
2 15 0.069469545 ubox
2 20 0.341166083 ubox
2 21 0.306976560 ubox
2 22 0.131534826 ubox
2 23 0.013144530 ubox
2 24 0.006235926 ubox
2 25 0.006649689 ubox
2 26 0.003872199 ubox
2 27 0.009817880 ubox
2 28 0.022040220 ubox
2 34 0.006463408 ubox
2 41 0.010761357 ubox
2 44 0.006762155 ubox
3 7 0.010064738 ubox
3 10 0.834223907 ubox
3 14 0.069396312 ubox
3 19 0.385249806 ubox
3 20 0.270757071 ubox
3 21 0.142095651 ubox
3 22 0.013515365 ubox
3 23 0.006471036 ubox
3 24 0.007586904 ubox
3 25 0.004298537 ubox
3 26 0.008864151 ubox
3 27 0.022295820 ubox
3 33 0.006677815 ubox
3 40 0.008196674 ubox
3 43 0.006436595 ubox
3 54 0.008710407 ubox
4 9 0.820752235 ubox
4 12 0.010714794 ubox
4 18 0.303926716 ubox
4 32 0.006619938 ubox
4 42 0.006163617 ubox
4 52 0.019589520 ubox
4 53 0.008833422 ubox
5 17 0.187708173 ubox
5 18 0.432380319 ubox
5 38 0.007032447 ubox
5 51 0.022511790 ubox
5 52 0.005598498 ubox
6 16 0.184778570 ubox
6 17 0.499529259 ubox
6 37 0.006422515 ubox
6 50 0.022819708 ubox
7 16 0.499788985 ubox
7 17 0.056866164 ubox
7 37 0.011234535 ubox
8 16 0.059354401 ubox
8 36 0.011491212 ubox
8 48 0.015853673 ubox
8 50 0.008898493 ubox
9 15 0.099473009 ubox
9 47 0.018677853 ubox
9 49 0.017123056 ubox
10 17 0.067550461 ubox
10 46 0.018395025 ubox
10 48 0.017534260 ubox
11 16 0.067799386 ubox
11 35 0.003347642 ubox
11 46 0.015890636 ubox
11 48 0.004566998 ubox
11 50 0.014363213 ubox
12 19 0.080817052 ubox
12 33 0.051417362 ubox
12 39 0.052856888 ubox
12 43 0.007280521 ubox
12 45 0.015259473 ubox
12 47 0.006206965 ubox
12 49 0.018573753 ubox
12 54 0.024110352 ubox
13 18 0.075052187 ubox
13 32 0.049814090 ubox
13 36 0.013700599 ubox
13 38 0.068118444 ubox
13 42 0.007515805 ubox
13 46 0.003545699 ubox
13 48 0.029448811 ubox
13 51 0.097511274 ubox
13 53 0.026838550 ubox
14 35 0.014200721 ubox
14 37 0.070692802 ubox
14 50 0.087392290 ubox
15 35 0.074413921 ubox
15 46 0.158580465 ubox
15 48 0.035614682 ubox
15 50 0.440248033 ubox
16 22 0.034144571 ubox
16 23 0.014850490 ubox
16 24 0.020633028 ubox
16 25 0.029547454 ubox
16 26 0.024595707 ubox
16 27 0.160646879 ubox
16 28 0.435268296 ubox
16 29 0.014147404 ubox
16 30 0.009122539 ubox
16 31 0.024468792 ubox
16 34 0.073079574 ubox
16 40 0.005551003 ubox
16 41 0.116346977 ubox
16 44 0.009168310 ubox
16 45 0.161109061 ubox
16 47 0.029292092 ubox
16 49 0.444913518 ubox
17 21 0.035757609 ubox
17 22 0.014395060 ubox
17 23 0.024878790 ubox
17 24 0.035345556 ubox
17 25 0.030622810 ubox
17 26 0.161045739 ubox
17 27 0.439815812 ubox
17 28 0.015515061 ubox
17 29 0.007141060 ubox
17 30 0.026585766 ubox
17 33 0.072715957 ubox
17 39 0.008363458 ubox
17 40 0.116952119 ubox
17 41 0.076168742 ubox
17 43 0.005276272 ubox
17 44 0.161398455 ubox
18 22 0.021859541 ubox
18 23 0.032497977 ubox
18 24 0.030552799 ubox
18 25 0.152518136 ubox
18 26 0.420634973 ubox
18 29 0.025235115 ubox
18 39 0.116665289 ubox
18 40 0.075223800 ubox
18 43 0.158119468 ubox
18 47 0.448711274 ubox
18 49 0.017101658 ubox
19 37 0.175495068 ubox
19 46 0.448720174 ubox
19 48 0.017600627 ubox
20 36 0.176128447 ubox
20 38 0.138782947 ubox
20 51 0.006947069 ubox
21 35 0.176172764 ubox
21 37 0.145285866 ubox
21 50 0.007380810 ubox
22 36 0.144718094 ubox
22 37 0.007260120 ubox
22 38 0.028018234 ubox
22 52 0.006819361 ubox
22 53 0.016179375 ubox
23 35 0.142461670 ubox
23 36 0.011025054 ubox
23 37 0.027663428 ubox
23 38 0.056003685 ubox
23 51 0.006469445 ubox
23 52 0.017337392 ubox
23 53 0.022944874 ubox
24 35 0.013080940 ubox
24 36 0.027763826 ubox
24 37 0.050968229 ubox
24 38 0.099559421 ubox
24 50 0.005595422 ubox
24 51 0.015480317 ubox
24 52 0.024317839 ubox
24 53 0.160291429 ubox
25 35 0.027557097 ubox
25 36 0.049913934 ubox
25 37 0.100481359 ubox
25 38 0.027971544 ubox
25 50 0.013672053 ubox
25 51 0.021498271 ubox
25 52 0.184142530 ubox
25 53 0.016725628 ubox
26 35 0.048687888 ubox
26 36 0.101621267 ubox
26 37 0.010092253 ubox
26 38 0.177391308 ubox
26 50 0.017229349 ubox
26 51 0.189289179 ubox
26 52 0.016520714 ubox
27 35 0.101833399 ubox
27 37 0.130316841 ubox
27 50 0.189652348 ubox
28 37 0.791248353 ubox
29 36 0.810377025 ubox
29 38 0.148793684 ubox
29 51 0.311265043 ubox
30 35 0.810951297 ubox
30 37 0.158967772 ubox
30 50 0.325674557 ubox
31 36 0.151422171 ubox
31 46 0.007108235 ubox
31 48 0.340606557 ubox
31 50 0.200022711 ubox
32 45 0.006799955 ubox
32 47 0.355611751 ubox
32 49 0.272595021 ubox
33 46 0.354354096 ubox
33 48 0.275311276 ubox
34 42 0.046835485 ubox
34 46 0.019653759 ubox
34 48 0.005782861 ubox
35 41 0.048613381 ubox
35 44 0.345890986 ubox
35 45 0.010485807 ubox
35 47 0.011956696 ubox
36 40 0.042308390 ubox
36 43 0.343184429 ubox
36 45 0.283829831 ubox
37 44 0.287329777 ubox
38 43 0.254692781 ubox
38 47 0.024745236 ubox
38 49 0.022275196 ubox
38 54 0.083180335 ubox
39 46 0.024967682 ubox
39 48 0.022619188 ubox
39 51 0.015864585 ubox
39 52 0.605459915 ubox
39 53 0.076205925 ubox
40 50 0.008743967 ubox
40 51 0.698797920 ubox
40 52 0.056999898 ubox
41 48 0.025563598 ubox
41 50 0.710028812 ubox
42 47 0.021703272 ubox
42 49 0.696434658 ubox
42 54 0.004528025 ubox
43 48 0.644613527 ubox
43 51 0.100042984 ubox
43 53 0.003583791 ubox
44 50 0.106848561 ubox
46 54 0.017206641 ubox
47 53 0.019517895 ubox
48 54 0.005925172 ubox
49 53 0.006113016 ubox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
18 47 0.9500000 lbox
19 46 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
showpage
end
%%EOF
