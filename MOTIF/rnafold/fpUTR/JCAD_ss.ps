%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCUCAAACUUAGAGCUGCUAUCGGAGGAGGAUUUUAGAUUUAGGAAAUUCUCAGCAGAGCAUCCGAGGGGCUUUUGAAAAAUUCAAUUCUUUAGACGCUCAUGAAGAAAUCAGGGAUUUCCUCAGACAGGGUCUCCCUCUGUUGCCCAGGCUGGAGUGCAUUGGUGCAAUCACAGUUCACUGCAACCUUGACUUCCCGGGCUCAAGCGAUCCUCCUGCCUUGGCCUCUUGAGGAGCUGGGACUACAGUGCUG\
GGUCCUGCCACCACCAUGGUUCCAGUGGUUGAGCUUUGCUGAAGCCCAGGCAUC\
) } def
/len { sequence length } bind def

/coor [
[346.85876465 565.22265625]
[348.44509888 561.30584717]
[345.87365723 546.52789307]
[343.30221558 531.74993896]
[340.73074341 516.97198486]
[338.15930176 502.19403076]
[335.58786011 487.41610718]
[333.01641846 472.63815308]
[330.44497681 457.86019897]
[315.17242432 433.71459961]
[323.88922119 412.49615479]
[314.82830811 400.54208374]
[305.76739502 388.58801270]
[296.70648193 376.63394165]
[287.58511353 364.72592163]
[278.40353394 352.86428833]
[269.22192383 341.00265503]
[264.73025513 339.52377319]
[261.09896851 335.23715210]
[259.97738647 328.80630493]
[251.03807068 316.76101685]
[242.09877014 304.71572876]
[233.15946960 292.67044067]
[221.27374268 290.60427856]
[213.72312927 280.68756104]
[214.96995544 267.88397217]
[206.15318298 255.74870300]
[197.27502441 243.65827942]
[188.33572388 231.61299133]
[179.39640808 219.56771851]
[170.45710754 207.52243042]
[161.51780701 195.47715759]
[152.57850647 183.43186951]
[143.63919067 171.38658142]
[134.69989014 159.34130859]
[125.76058960 147.29602051]
[114.23149109 151.94213867]
[101.94431305 153.82138062]
[89.55355835 152.83363342]
[77.71926880 149.03152466]
[67.07184601 142.61756897]
[58.17845154 133.93345642]
[51.51282883 123.44174957]
[47.43004608 111.70133209]
[46.14758682 99.33760834]
[31.32056046 97.06619263]
[16.49353600 94.79477692]
[1.66651082 92.52336121]
[-13.16051388 90.25194550]
[-27.98753929 87.98052979]
[-42.81456375 85.70910645]
[-57.64159012 83.43769073]
[-72.46861267 81.16627502]
[-87.35783386 79.34661865]
[-102.29548645 77.98040009]
[-114.37462616 87.81565094]
[-129.50405884 86.21732330]
[-138.80603027 74.64109802]
[-153.74368286 73.27488708]
[-168.68806458 71.98437500]
[-183.63879395 70.76960754]
[-198.58952332 69.55484009]
[-213.54025269 68.34006500]
[-227.92170715 74.93435669]
[-239.98057556 66.19175720]
[-254.93130493 64.97698975]
[-269.31274414 71.57127380]
[-281.37161255 62.82867050]
[-296.32235718 61.61390305]
[-311.27307129 60.39913559]
[-326.22381592 59.18436813]
[-341.17453003 57.96959686]
[-356.12527466 56.75482941]
[-360.75088501 58.94297028]
[-365.30435181 59.15159225]
[-369.05435181 57.73130417]
[-371.50970459 55.26910400]
[-386.41659546 53.60042953]
[-401.32348633 51.93175125]
[-416.23040771 50.26307297]
[-431.13729858 48.59439850]
[-447.55072021 52.84117889]
[-456.17523193 38.24480438]
[-444.53680420 25.91666603]
[-429.46862793 33.68750000]
[-414.56170654 35.35617828]
[-399.65481567 37.02485657]
[-384.74792480 38.69353104]
[-369.84103394 40.36220932]
[-354.91049194 41.80410004]
[-339.95977783 43.01886749]
[-325.00903320 44.23363495]
[-310.05831909 45.44840622]
[-295.10757446 46.66317368]
[-280.15682983 47.87794113]
[-266.84478760 41.19676971]
[-253.71653748 50.02625656]
[-238.76580811 51.24102402]
[-225.45373535 44.55985260]
[-212.32548523 53.38933945]
[-197.37475586 54.60410690]
[-182.42402649 55.81887436]
[-167.47329712 57.03364563]
[-160.58805847 54.45695114]
[-152.37747192 58.33723068]
[-137.43981934 59.70344925]
[-126.19219208 50.00671768]
[-111.02382660 51.17946243]
[-100.92926788 63.04275131]
[-85.99161530 64.40896606]
[-95.00926208 52.42222595]
[-93.00305176 37.55699539]
[-81.13043213 28.38960838]
[-66.24119568 30.20909119]
[-56.92551422 41.96571350]
[-58.55797958 56.87661743]
[-70.19719696 66.33924866]
[-55.37017059 68.61067200]
[-40.54314804 70.88208771]
[-25.71612167 73.15350342]
[-10.88909721 75.42491913]
[3.93792748 77.69633484]
[18.76495171 79.96775055]
[33.59197617 82.23916626]
[48.41900253 84.51058197]
[54.44496536 68.79399872]
[65.25053406 55.34785461]
[79.99849701 45.61936569]
[74.64663696 31.60660172]
[69.29477692 17.59383583]
[63.94292068 3.58106995]
[58.59106445 -10.43169594]
[53.23920441 -24.44446182]
[47.88734436 -38.45722580]
[33.88832092 -46.29347992]
[31.42898560 -62.14691162]
[42.39593124 -73.85612488]
[58.37625504 -72.43881226]
[67.11122131 -58.98221588]
[61.90011215 -43.80908585]
[67.25196838 -29.79631996]
[72.60382843 -15.78355503]
[77.95568848 -1.77078903]
[83.30754852 12.24197674]
[88.65940857 26.25474358]
[94.01126099 40.26750946]
[109.00644684 40.64749908]
[115.06117249 26.92378616]
[121.11589813 13.20007229]
[127.17062378 -0.52364081]
[132.59341431 -14.50910854]
[137.37300110 -28.72724915]
[142.15258789 -42.94539261]
[139.21586609 -58.49165344]
[150.60527039 -68.09011841]
[155.38485718 -82.30826569]
[152.44813538 -97.85452271]
[163.83753967 -107.45299530]
[168.61712646 -121.67113495]
[173.39671326 -135.88928223]
[178.17630005 -150.10742188]
[175.23957825 -165.65367126]
[186.62898254 -175.25215149]
[191.40856934 -189.47029114]
[196.18815613 -203.68843079]
[200.96774292 -217.90657043]
[191.24351501 -229.88334656]
[189.56082153 -245.21865845]
[196.45658875 -259.01910400]
[209.73042297 -266.88095093]
[225.14668274 -266.29559326]
[237.78608704 -257.44973755]
[243.61546326 -243.16610718]
[240.77465820 -228.00256348]
[230.17019653 -216.79769897]
[215.18588257 -213.12698364]
[210.40629578 -198.90884399]
[205.62670898 -184.69070435]
[200.84712219 -170.47256470]
[204.12571716 -155.94328308]
[192.39443970 -145.32783508]
[187.61485291 -131.10969543]
[182.83526611 -116.89154816]
[178.05567932 -102.67340851]
[181.33427429 -88.14412689]
[169.60299683 -77.52867889]
[164.82341003 -63.31053543]
[168.10200500 -48.78125000]
[156.37072754 -38.16580582]
[151.59114075 -23.94766235]
[146.81155396 -9.72952175]
[159.12426758 -18.29674721]
[174.11131287 -18.91978264]
[187.09262085 -11.40406799]
[194.01438904 1.90341127]
[192.71513367 16.84703636]
[183.60058594 28.76025772]
[169.51698303 33.92285156]
[154.86233521 30.72265816]
[144.21293640 20.15902328]
[140.89433289 5.53108406]
[134.83961487 19.25479698]
[128.78488159 32.97851181]
[122.73016357 46.70222473]
[136.20761108 55.51379776]
[146.61373901 67.58776093]
[153.20384216 81.92216492]
[155.54484558 97.35956573]
[153.54283142 112.68038940]
[147.44346619 126.69926453]
[137.80586243 138.35671997]
[146.74517822 150.40199280]
[155.68447876 162.44728088]
[164.62377930 174.49256897]
[173.56307983 186.53784180]
[182.50239563 198.58312988]
[191.44169617 210.62841797]
[200.38099670 222.67369080]
[209.32031250 234.71897888]
[216.90618896 239.71145630]
[218.28843689 246.93193054]
[227.10520935 259.06716919]
[244.11012268 266.19427490]
[245.20474243 283.73114014]
[254.14405823 295.77642822]
[263.08334351 307.82171631]
[272.02267456 319.86697388]
[281.08358765 331.82104492]
[290.26516724 343.68270874]
[299.44674683 355.54434204]
[307.13226318 360.38204956]
[308.66055298 367.57302856]
[317.72146606 379.52709961]
[326.78237915 391.48117065]
[335.84329224 403.43524170]
[351.07574463 399.44534302]
[367.91329956 406.93093872]
[377.82327271 425.59170532]
[390.63269043 433.39675903]
[403.44210815 441.20181274]
[416.25152588 449.00686646]
[429.06094360 456.81188965]
[441.87036133 464.61694336]
[454.67977905 472.42199707]
[467.48919678 480.22705078]
[480.29861450 488.03210449]
[493.10803223 495.83715820]
[508.28411865 492.32659912]
[521.16351318 500.42449951]
[524.41674805 514.91424561]
[537.22619629 522.71929932]
[550.03558350 530.52435303]
[565.84643555 531.09771729]
[572.68902588 544.32751465]
[585.49841309 552.13256836]
[598.30786133 559.93762207]
[613.60498047 555.96618652]
[627.18743896 564.04656982]
[630.99694824 579.38488770]
[622.77337646 592.88110352]
[607.39569092 596.52825928]
[593.98712158 588.16247559]
[590.50280762 572.74707031]
[577.69335938 564.94201660]
[564.88397217 557.13696289]
[549.98937988 557.12182617]
[542.23052979 543.33374023]
[529.42114258 535.52868652]
[516.61169434 527.72363281]
[502.24316406 531.47601318]
[489.14141846 523.74304199]
[485.30297852 508.64657593]
[472.49356079 500.84152222]
[459.68414307 493.03646851]
[446.87472534 485.23141479]
[434.06530762 477.42636108]
[421.25588989 469.62130737]
[408.44647217 461.81628418]
[395.63705444 454.01123047]
[382.82763672 446.20617676]
[370.01821899 438.40112305]
[363.81939697 442.62301636]
[351.42172241 451.06686401]
[345.22290039 455.28875732]
[347.79434204 470.06671143]
[350.36581421 484.84463501]
[352.93725586 499.62258911]
[355.50869751 514.40051270]
[358.08013916 529.17846680]
[360.65161133 543.95642090]
[363.22305298 558.73437500]
[366.09347534 573.45715332]
[369.26168823 588.11877441]
[372.42990112 602.78033447]
[375.59814453 617.44195557]
[389.84875488 623.58197021]
[397.73977661 636.94274902]
[396.23693848 652.38690186]
[385.91812134 663.97576904]
[370.75112915 667.25317383]
[356.56793213 660.95898438]
[348.82232666 647.51330566]
[350.49261475 632.08642578]
[360.93655396 620.61016846]
[357.76831055 605.94854736]
[354.60009766 591.28698730]
[351.43188477 576.62536621]
[349.20794678 575.00067139]
[347.47647095 572.41979980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 291]
[3 290]
[4 289]
[5 288]
[6 287]
[7 286]
[8 285]
[9 284]
[11 235]
[12 234]
[13 233]
[14 232]
[15 230]
[16 229]
[17 228]
[20 227]
[21 226]
[22 225]
[23 224]
[26 222]
[27 221]
[28 219]
[29 218]
[30 217]
[31 216]
[32 215]
[33 214]
[34 213]
[35 212]
[36 211]
[45 125]
[46 124]
[47 123]
[48 122]
[49 121]
[50 120]
[51 119]
[52 118]
[53 117]
[54 110]
[55 109]
[58 106]
[59 105]
[60 103]
[61 102]
[62 101]
[63 100]
[65 98]
[66 97]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[73 90]
[77 89]
[78 88]
[79 87]
[80 86]
[81 85]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[147 204]
[148 203]
[149 202]
[150 201]
[151 191]
[152 190]
[153 189]
[155 187]
[156 186]
[158 184]
[159 183]
[160 182]
[161 181]
[163 179]
[164 178]
[165 177]
[166 176]
[238 281]
[239 280]
[240 279]
[241 278]
[242 277]
[243 276]
[244 275]
[245 274]
[246 273]
[247 272]
[250 269]
[251 268]
[252 267]
[254 265]
[255 264]
[256 263]
[292 307]
[293 306]
[294 305]
[295 304]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
