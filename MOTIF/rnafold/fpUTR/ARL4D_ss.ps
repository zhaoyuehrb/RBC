%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCUGCAGAGGCAGCGGUUGGAGGCGCGGUGGGUGUCUGCGGGGGUCUCGCGGGGCGGCUGCGGUGUUUCACCGGGAAAGGCUCGAGGAGAGCGCGGCUCACGAGAGAUAACCCAGCUGUGCUCCCUGGAACCUUCAAUUUCAAGGCCUCCCUGCCUCUACUAGGCGCCUUAGCUCACU\
) } def
/len { sequence length } bind def

/coor [
[144.51353455 428.90435791]
[141.93714905 414.12725830]
[139.36076355 399.35018921]
[136.65693665 384.59588623]
[133.82588196 369.86547852]
[130.99481201 355.13507080]
[128.16374207 340.40463257]
[115.97911072 327.79058838]
[122.12074280 310.44351196]
[119.03584290 295.76416016]
[115.95094299 281.08480835]
[112.86604309 266.40545654]
[109.78115082 251.72610474]
[106.69625092 237.04675293]
[103.61135101 222.36738586]
[100.52645111 207.68803406]
[90.15840912 218.52795410]
[75.20419312 217.35690308]
[66.64992523 205.03520203]
[70.77999878 190.61499023]
[84.56025696 184.69007874]
[97.86641693 191.61242676]
[96.05836487 176.72178650]
[94.25032043 161.83116150]
[92.44226837 146.94052124]
[90.63421631 132.04989624]
[88.82616425 117.15925598]
[77.68476868 107.11588287]
[62.68700790 106.85697174]
[47.68923950 106.59806824]
[32.69147491 106.33915710]
[17.69371033 106.08024597]
[7.87687540 114.47249603]
[-4.62544060 113.93322754]
[-13.11976433 105.29805756]
[-28.11082649 104.78031921]
[-36.82144547 107.61728668]
[-43.35554123 104.12203979]
[-58.33543396 103.34561920]
[-73.31532288 102.56919861]
[-88.29521942 101.79277802]
[-103.27510834 101.01635742]
[-118.25500488 100.23994446]
[-133.23489380 99.46352386]
[-148.21478271 98.68710327]
[-164.34565735 103.90547943]
[-173.82556152 89.84960175]
[-162.94329834 76.84912109]
[-147.43836975 83.70720673]
[-132.45848083 84.48362732]
[-117.47858429 85.26004791]
[-102.49868774 86.03646851]
[-87.51879883 86.81288910]
[-72.53890228 87.58930969]
[-57.55901337 88.36573029]
[-42.57912064 89.14215088]
[-27.59308434 89.78925323]
[-12.60202312 90.30699921]
[2.40711594 81.23474884]
[17.95261955 91.08248138]
[32.95038605 91.34139252]
[47.94815063 91.60030365]
[62.94591522 91.85920715]
[77.94367981 92.11811829]
[84.21769714 78.49326324]
[74.27085876 67.26560211]
[64.32402039 56.03794098]
[54.37717819 44.81027985]
[39.34814072 36.96398544]
[42.72734833 20.35021591]
[59.62730408 18.99821472]
[65.60484314 34.86344147]
[75.55168152 46.09110260]
[85.49851990 57.31876373]
[95.44535828 68.54642487]
[110.43642426 68.02867889]
[119.58495331 56.14152908]
[128.73347473 44.25437546]
[137.88201904 32.36722183]
[146.71972656 20.24720573]
[155.24069214 7.90244770]
[163.76167297 -4.44231033]
[172.28263855 -16.78706741]
[173.75436401 -32.53967667]
[187.35194397 -38.61872864]
[195.87290955 -50.96348572]
[197.34463501 -66.71609497]
[210.94221497 -72.79514313]
[219.46319580 -85.13990021]
[227.98416138 -97.48465729]
[230.29296875 -106.34991455]
[236.76028442 -109.96722412]
[245.49305725 -122.16306305]
[254.22584534 -134.35890198]
[262.95861816 -146.55474854]
[271.69140625 -158.75059509]
[280.42416382 -170.94642639]
[289.15695190 -183.14227295]
[297.88973999 -195.33811951]
[306.62252808 -207.53395081]
[315.35528564 -219.72979736]
[307.01574707 -232.41113281]
[303.82418823 -247.24954224]
[306.21228027 -262.23825073]
[313.85702515 -275.35015869]
[325.72454834 -284.81201172]
[340.20986938 -289.34411621]
[355.35397339 -288.33358765]
[369.10870361 -281.91708374]
[379.61389160 -270.96237183]
[385.44876099 -256.95101929]
[385.82421875 -241.77789307]
[380.68948364 -227.49507141]
[370.73898315 -216.03417969]
[357.31845093 -208.94522095]
[342.24288940 -207.18688965]
[327.55114746 -210.99702454]
[318.81835938 -198.80117798]
[310.08557129 -186.60533142]
[301.35281372 -174.40950012]
[292.62002563 -162.21365356]
[283.88723755 -150.01780701]
[275.15444946 -137.82197571]
[266.42169189 -125.62612915]
[257.68890381 -113.43029022]
[248.95611572 -101.23444366]
[240.32891846 -88.96369171]
[231.80795288 -76.61892700]
[223.28697205 -64.27416992]
[222.42474365 -49.40454483]
[208.21766663 -42.44251251]
[199.69670105 -30.09775543]
[198.83445740 -15.22812843]
[184.62739563 -8.26609707]
[176.10643005 4.07866096]
[167.58544922 16.42341805]
[159.06448364 28.76817703]
[159.35002136 32.30708313]
[157.91926575 36.15942764]
[154.64416504 39.50951767]
[149.76916504 41.51575470]
[140.62063599 53.40290451]
[131.47210693 65.29006195]
[122.32357788 77.17720795]
[126.92604065 92.72080231]
[123.00574493 106.32734680]
[113.80214691 114.23465729]
[103.71679688 115.35120392]
[105.52484894 130.24183655]
[107.33290100 145.13247681]
[109.14095306 160.02310181]
[110.94899750 174.91374207]
[112.75704956 189.80436707]
[115.20580292 204.60314941]
[118.29070282 219.28250122]
[121.37560272 233.96185303]
[124.46050262 248.64120483]
[127.54540253 263.32055664]
[130.63029480 277.99990845]
[133.71519470 292.67926025]
[136.80009460 307.35861206]
[147.16638184 315.06185913]
[149.42266846 327.37072754]
[142.89416504 337.57357788]
[145.72521973 352.30398560]
[148.55628967 367.03442383]
[151.38735962 381.76483154]
[156.09149170 389.62576294]
[154.13784790 396.77380371]
[156.71423340 411.55087280]
[159.29061890 426.32797241]
[173.88264465 430.94659424]
[184.64862061 441.82556152]
[189.11460876 456.46502686]
[186.25434875 471.50088501]
[176.72512817 483.47805786]
[162.71669006 489.64425659]
[147.44804382 488.58251953]
[134.42784119 480.53686523]
[126.64801788 467.35607910]
[125.89631653 452.06903076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 167]
[5 166]
[6 165]
[7 164]
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 154]
[22 153]
[23 152]
[24 151]
[25 150]
[26 149]
[27 148]
[28 64]
[29 63]
[30 62]
[31 61]
[32 60]
[35 58]
[36 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[65 75]
[66 74]
[67 73]
[68 72]
[76 144]
[77 143]
[78 142]
[79 141]
[80 137]
[81 136]
[82 135]
[83 134]
[85 132]
[86 131]
[88 129]
[89 128]
[90 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
