%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2W5)
} def

/sequence { (\
CAUCUGCAUGUGCCCCCUUAUCUAAUUCUUUGGUUGUUUCUCUGUAAUAGCUGGUGGAUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.149312259 ubox
1 12 0.162159217 ubox
1 53 0.005418836 ubox
1 56 0.552722998 ubox
2 9 0.147074724 ubox
2 11 0.163900858 ubox
2 21 0.010927190 ubox
2 26 0.003677815 ubox
2 52 0.005229607 ubox
2 55 0.554359742 ubox
2 59 0.185772367 ubox
3 8 0.132729968 ubox
3 10 0.156233858 ubox
3 20 0.011100386 ubox
3 25 0.003983319 ubox
3 54 0.553843084 ubox
3 58 0.200701330 ubox
4 50 0.004096699 ubox
4 53 0.547830700 ubox
4 54 0.018963367 ubox
4 56 0.003574697 ubox
4 57 0.203542436 ubox
5 12 0.011269356 ubox
5 20 0.010431255 ubox
5 24 0.036002934 ubox
5 46 0.008119832 ubox
5 49 0.004098438 ubox
5 53 0.017970209 ubox
5 56 0.202198796 ubox
6 11 0.009506243 ubox
6 13 0.560420537 ubox
6 19 0.008098379 ubox
6 23 0.040428938 ubox
6 37 0.003848095 ubox
6 45 0.008493217 ubox
6 48 0.003492805 ubox
6 51 0.549216489 ubox
6 52 0.004607925 ubox
6 55 0.197904101 ubox
7 12 0.561488195 ubox
7 36 0.004053868 ubox
7 44 0.008545461 ubox
7 50 0.549836532 ubox
7 53 0.015521879 ubox
7 54 0.197590607 ubox
7 56 0.009289970 ubox
8 21 0.099210652 ubox
8 26 0.011689063 ubox
8 35 0.004034836 ubox
8 37 0.005879551 ubox
8 43 0.008257828 ubox
8 45 0.008450181 ubox
8 48 0.172128804 ubox
8 52 0.017921709 ubox
8 55 0.009340352 ubox
8 59 0.058630681 ubox
9 20 0.106190806 ubox
9 24 0.008467022 ubox
9 25 0.012598943 ubox
9 36 0.005905311 ubox
9 44 0.008327682 ubox
9 46 0.033481507 ubox
9 47 0.170618711 ubox
9 49 0.272716908 ubox
9 53 0.018207087 ubox
9 54 0.008709763 ubox
9 58 0.063196621 ubox
10 19 0.107464769 ubox
10 21 0.066724963 ubox
10 23 0.008599329 ubox
10 26 0.014175963 ubox
10 35 0.003409696 ubox
10 43 0.005520651 ubox
10 45 0.033260350 ubox
10 48 0.274563460 ubox
10 51 0.159999829 ubox
10 52 0.014705716 ubox
10 59 0.030602635 ubox
11 20 0.070809288 ubox
11 24 0.008572233 ubox
11 25 0.015017468 ubox
11 44 0.022428254 ubox
11 46 0.479873040 ubox
11 47 0.217500319 ubox
11 49 0.010862110 ubox
11 50 0.153926659 ubox
11 56 0.063115966 ubox
11 58 0.032329977 ubox
12 19 0.065817587 ubox
12 23 0.009225854 ubox
12 34 0.044961104 ubox
12 35 0.003632696 ubox
12 37 0.043084082 ubox
12 43 0.024063099 ubox
12 45 0.525335486 ubox
12 48 0.008799907 ubox
12 51 0.045820982 ubox
12 55 0.071644277 ubox
13 33 0.045539871 ubox
13 36 0.043252722 ubox
13 44 0.526764842 ubox
13 50 0.045752545 ubox
13 54 0.072000193 ubox
13 57 0.098467116 ubox
14 32 0.045419087 ubox
14 33 0.021329403 ubox
14 53 0.071816622 ubox
14 54 0.009901900 ubox
14 56 0.098923877 ubox
14 57 0.123868613 ubox
15 32 0.021479435 ubox
15 33 0.017523332 ubox
15 53 0.010796422 ubox
15 54 0.069397369 ubox
15 56 0.124169909 ubox
15 57 0.037968353 ubox
16 32 0.017551895 ubox
16 33 0.056459318 ubox
16 53 0.069219236 ubox
16 54 0.139245158 ubox
16 56 0.038006095 ubox
16 57 0.023170086 ubox
17 32 0.056983949 ubox
17 33 0.006932977 ubox
17 50 0.016617971 ubox
17 53 0.139074841 ubox
17 54 0.045127989 ubox
17 56 0.023078956 ubox
17 57 0.011854115 ubox
18 25 0.021266495 ubox
18 32 0.006932662 ubox
18 33 0.003460665 ubox
18 47 0.035352890 ubox
18 49 0.015801807 ubox
18 50 0.009124658 ubox
18 53 0.043574058 ubox
18 54 0.013368354 ubox
18 56 0.009012346 ubox
18 57 0.019852751 ubox
18 58 0.003563070 ubox
19 24 0.023220430 ubox
19 32 0.007138167 ubox
19 36 0.359458230 ubox
19 44 0.011462791 ubox
19 46 0.038452515 ubox
19 49 0.013545855 ubox
19 53 0.014260796 ubox
19 56 0.025250702 ubox
19 57 0.003298350 ubox
20 26 0.023208189 ubox
20 31 0.010707410 ubox
20 34 0.089893939 ubox
20 35 0.348549403 ubox
20 37 0.175408928 ubox
20 43 0.010317945 ubox
20 45 0.038575621 ubox
20 48 0.014017731 ubox
20 52 0.013872882 ubox
20 55 0.032530718 ubox
20 59 0.167376834 ubox
21 25 0.021439903 ubox
21 33 0.081443498 ubox
21 36 0.164330457 ubox
21 44 0.037988711 ubox
21 47 0.013661888 ubox
21 54 0.032776103 ubox
21 58 0.183119679 ubox
22 32 0.083183017 ubox
22 33 0.554401324 ubox
22 50 0.028039274 ubox
22 53 0.032568917 ubox
22 54 0.008077953 ubox
22 57 0.186140186 ubox
23 32 0.556050681 ubox
23 36 0.080280960 ubox
23 46 0.004025896 ubox
23 49 0.028156818 ubox
23 53 0.008088892 ubox
23 56 0.184634465 ubox
24 30 0.025090050 ubox
24 31 0.554813532 ubox
24 35 0.089368392 ubox
24 38 0.031346910 ubox
24 39 0.005532103 ubox
24 45 0.003921780 ubox
24 48 0.025124058 ubox
24 52 0.004819672 ubox
24 55 0.176430341 ubox
24 60 0.581221920 ubox
25 29 0.023712366 ubox
25 30 0.529138999 ubox
25 34 0.091010924 ubox
25 37 0.032349059 ubox
25 38 0.005788590 ubox
25 45 0.006363063 ubox
25 48 0.011376595 ubox
25 55 0.042565851 ubox
25 59 0.717164821 ubox
26 33 0.089239843 ubox
26 36 0.032094479 ubox
26 44 0.006587610 ubox
26 47 0.015447935 ubox
26 54 0.055088559 ubox
26 57 0.005335747 ubox
26 58 0.734025263 ubox
27 32 0.065480892 ubox
27 33 0.012928985 ubox
27 46 0.014536122 ubox
27 53 0.047467204 ubox
27 54 0.054797316 ubox
27 56 0.007401869 ubox
27 57 0.736982707 ubox
27 58 0.165362926 ubox
28 32 0.016311425 ubox
28 50 0.004265402 ubox
28 53 0.062277826 ubox
28 54 0.091499552 ubox
28 56 0.738037109 ubox
28 57 0.178696126 ubox
29 47 0.005116730 ubox
29 49 0.004214300 ubox
29 53 0.085642430 ubox
29 54 0.036827464 ubox
29 56 0.169663084 ubox
29 57 0.004742291 ubox
29 58 0.005933136 ubox
30 46 0.005273879 ubox
30 47 0.005097495 ubox
30 53 0.028405858 ubox
30 54 0.657790918 ubox
30 56 0.006210730 ubox
30 57 0.006205242 ubox
31 44 0.016359894 ubox
31 46 0.005191509 ubox
31 53 0.725336620 ubox
31 56 0.005583840 ubox
32 40 0.020722273 ubox
32 41 0.020567328 ubox
32 42 0.008619812 ubox
32 43 0.027134596 ubox
32 45 0.004572855 ubox
32 52 0.806420987 ubox
33 38 0.003434042 ubox
33 39 0.019647352 ubox
33 40 0.022273928 ubox
33 41 0.005888190 ubox
33 42 0.027671833 ubox
33 48 0.012295250 ubox
33 51 0.814481337 ubox
34 47 0.015215224 ubox
34 50 0.814235448 ubox
35 46 0.016830762 ubox
35 49 0.814116154 ubox
36 43 0.004716577 ubox
36 45 0.016660847 ubox
36 48 0.815029754 ubox
36 51 0.011881832 ubox
36 59 0.004085387 ubox
37 44 0.012982355 ubox
37 47 0.813403105 ubox
37 50 0.011872317 ubox
37 58 0.004316273 ubox
38 46 0.797985537 ubox
38 47 0.034097429 ubox
38 49 0.011587554 ubox
38 57 0.004289652 ubox
38 58 0.008247649 ubox
39 46 0.042078072 ubox
39 56 0.004010633 ubox
39 57 0.008935186 ubox
39 58 0.004823590 ubox
40 50 0.003275494 ubox
40 53 0.004416692 ubox
40 56 0.009243052 ubox
40 57 0.005152328 ubox
41 49 0.003550448 ubox
41 54 0.006576622 ubox
41 56 0.004771243 ubox
42 50 0.009998302 ubox
42 53 0.010939120 ubox
42 54 0.008777666 ubox
43 49 0.011021034 ubox
43 53 0.008358131 ubox
44 48 0.009309652 ubox
44 51 0.019005339 ubox
44 52 0.003163634 ubox
45 50 0.018462419 ubox
6 13 0.9500000 lbox
7 12 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
showpage
end
%%EOF
