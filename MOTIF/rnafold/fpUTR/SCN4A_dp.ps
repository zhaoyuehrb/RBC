%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCN4A)
} def

/sequence { (\
CCAGCACCCCGGGGCUGCGCACUGCAGCUCCCCAGGCCACCCACCACCCUUCUGGUCUCUGAGCCCAGGAUGCGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003449157 ubox
1 69 0.012355251 ubox
1 77 0.860835793 ubox
2 11 0.003784762 ubox
2 17 0.022682558 ubox
2 68 0.012388219 ubox
2 72 0.005799079 ubox
2 76 0.882642476 ubox
3 16 0.022963666 ubox
3 71 0.005416083 ubox
4 15 0.023016932 ubox
4 37 0.048775239 ubox
4 73 0.990890586 ubox
5 14 0.022997180 ubox
5 36 0.048424279 ubox
5 72 0.991233758 ubox
6 71 0.972633882 ubox
7 13 0.022392497 ubox
7 36 0.078713836 ubox
7 69 0.537144303 ubox
7 77 0.033628955 ubox
8 12 0.022257566 ubox
8 35 0.079144984 ubox
8 36 0.052457433 ubox
8 68 0.534525116 ubox
8 69 0.751224829 ubox
8 76 0.033959481 ubox
8 77 0.025234170 ubox
9 35 0.053863551 ubox
9 36 0.028988097 ubox
9 68 0.748099143 ubox
9 69 0.244694060 ubox
9 76 0.025644487 ubox
9 77 0.019907109 ubox
10 35 0.030264119 ubox
10 68 0.249114973 ubox
10 72 0.004798750 ubox
10 74 0.036160056 ubox
10 76 0.020227798 ubox
11 30 0.005831776 ubox
11 31 0.875477524 ubox
11 32 0.449450939 ubox
11 33 0.140689358 ubox
11 65 0.004172004 ubox
11 66 0.067698857 ubox
11 73 0.026096193 ubox
12 29 0.004815392 ubox
12 30 0.880293061 ubox
12 31 0.450198093 ubox
12 32 0.137738877 ubox
12 33 0.008778347 ubox
12 64 0.003560268 ubox
12 65 0.047404028 ubox
12 66 0.015278488 ubox
13 28 0.003731148 ubox
13 29 0.881138354 ubox
13 30 0.449365293 ubox
13 31 0.132257226 ubox
13 32 0.008672601 ubox
13 64 0.045877376 ubox
13 65 0.014580710 ubox
14 28 0.994022325 ubox
14 29 0.050080838 ubox
14 30 0.091136929 ubox
14 31 0.006641803 ubox
14 64 0.014300623 ubox
15 27 0.999339332 ubox
15 63 0.012733438 ubox
16 26 0.999205095 ubox
16 62 0.011915651 ubox
17 25 0.999447581 ubox
17 28 0.021449494 ubox
17 38 0.003404063 ubox
18 24 0.999045155 ubox
18 27 0.021455677 ubox
18 74 0.022432829 ubox
19 23 0.616403420 ubox
19 25 0.014713813 ubox
19 28 0.004593602 ubox
19 37 0.006006579 ubox
19 73 0.022774808 ubox
20 24 0.014781558 ubox
20 27 0.004597125 ubox
20 36 0.006011957 ubox
20 72 0.022772134 ubox
21 71 0.021966267 ubox
22 35 0.006072746 ubox
22 68 0.015278708 ubox
22 69 0.016804494 ubox
23 34 0.006082968 ubox
23 67 0.015593798 ubox
23 68 0.016514239 ubox
24 33 0.006076013 ubox
24 66 0.015618820 ubox
27 37 0.003942809 ubox
27 64 0.022951543 ubox
28 36 0.003949436 ubox
28 63 0.026769981 ubox
29 35 0.003708040 ubox
29 62 0.033249920 ubox
29 70 0.004000180 ubox
30 36 0.003944766 ubox
30 61 0.033815561 ubox
30 69 0.004719507 ubox
31 35 0.004042403 ubox
31 68 0.004792491 ubox
31 69 0.045641012 ubox
32 55 0.032353153 ubox
32 68 0.070480058 ubox
32 69 0.233571049 ubox
32 77 0.009649871 ubox
33 54 0.032749423 ubox
33 61 0.048325997 ubox
33 68 0.234406557 ubox
33 76 0.009847596 ubox
34 50 0.016105440 ubox
34 53 0.032695256 ubox
34 58 0.098593005 ubox
34 60 0.045893486 ubox
35 41 0.023431216 ubox
35 42 0.052291886 ubox
35 45 0.041653368 ubox
35 48 0.017217813 ubox
35 49 0.019420700 ubox
35 52 0.032485354 ubox
35 57 0.108181642 ubox
35 58 0.004309027 ubox
35 59 0.043382413 ubox
35 65 0.974757640 ubox
35 66 0.105731804 ubox
36 40 0.023174867 ubox
36 41 0.051722213 ubox
36 44 0.041611918 ubox
36 47 0.017302926 ubox
36 48 0.019302783 ubox
36 51 0.025480782 ubox
36 56 0.110884960 ubox
36 57 0.024785805 ubox
36 58 0.024701336 ubox
36 64 0.979792297 ubox
36 65 0.076868088 ubox
36 73 0.009456334 ubox
37 55 0.113858274 ubox
37 63 0.982364387 ubox
37 72 0.008977969 ubox
37 77 0.003928444 ubox
38 54 0.113845632 ubox
38 61 0.967182830 ubox
38 72 0.003243018 ubox
38 76 0.004028624 ubox
39 53 0.102555028 ubox
39 56 0.018811253 ubox
39 60 0.937863311 ubox
39 71 0.004285727 ubox
40 55 0.020697137 ubox
40 77 0.016786050 ubox
41 54 0.020194219 ubox
41 55 0.031699219 ubox
41 76 0.016948776 ubox
41 77 0.010944099 ubox
42 54 0.032059918 ubox
42 61 0.016579482 ubox
42 72 0.003961237 ubox
42 76 0.011118599 ubox
43 53 0.029568097 ubox
43 56 0.956799257 ubox
43 60 0.014786011 ubox
43 71 0.003970241 ubox
44 55 0.982809305 ubox
44 77 0.017079100 ubox
45 54 0.982859884 ubox
45 72 0.019319645 ubox
45 76 0.017246020 ubox
46 53 0.885445879 ubox
46 56 0.040999115 ubox
46 71 0.019270265 ubox
47 55 0.042167283 ubox
47 77 0.011111577 ubox
48 54 0.041686290 ubox
48 55 0.025718998 ubox
48 69 0.020776863 ubox
48 76 0.010804021 ubox
48 77 0.052341519 ubox
49 54 0.026612266 ubox
49 68 0.020747980 ubox
49 76 0.053200045 ubox
49 77 0.062420239 ubox
50 63 0.003176051 ubox
50 67 0.020218787 ubox
50 70 0.077373692 ubox
50 75 0.045772255 ubox
50 76 0.063850133 ubox
51 62 0.004919330 ubox
51 69 0.084203036 ubox
51 70 0.005736701 ubox
51 74 0.033957509 ubox
51 75 0.070099794 ubox
51 77 0.009149386 ubox
52 61 0.005054700 ubox
52 68 0.088849370 ubox
52 69 0.005136950 ubox
52 74 0.074834431 ubox
52 76 0.014851134 ubox
53 67 0.090325072 ubox
53 68 0.003619275 ubox
53 72 0.005663255 ubox
53 74 0.004875604 ubox
53 75 0.014821877 ubox
54 65 0.027226925 ubox
54 66 0.089632979 ubox
54 71 0.004569217 ubox
54 73 0.011418499 ubox
55 64 0.030477419 ubox
55 65 0.088473349 ubox
55 71 0.082039163 ubox
55 73 0.015109102 ubox
56 62 0.016651979 ubox
56 63 0.030291604 ubox
56 70 0.085183690 ubox
56 72 0.014672611 ubox
57 61 0.017945946 ubox
57 63 0.081537681 ubox
57 69 0.086458844 ubox
58 62 0.073647003 ubox
58 68 0.010687558 ubox
58 69 0.044424813 ubox
58 70 0.012545441 ubox
59 68 0.113265098 ubox
59 69 0.012269730 ubox
60 67 0.121701282 ubox
60 68 0.010708023 ubox
61 66 0.122673262 ubox
63 73 0.005055309 ubox
64 72 0.005048740 ubox
66 72 0.003459696 ubox
1 77 0.9500000 lbox
2 76 0.9500000 lbox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
18 24 0.9500000 lbox
35 65 0.9500000 lbox
36 64 0.9500000 lbox
37 63 0.9500000 lbox
38 61 0.9500000 lbox
39 60 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
showpage
end
%%EOF
