%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAAGGGAUUGACAGGCCCUGCCGCGUCAGGCCGCUCCUCUCGGCUCCGCGCUCCUUCCCUCGCGCGUGGGCACCCGCCCCCGAGCGGUGAGAGCGCGUGCGCGCGCGCCCUUCUCCGUGGGCGAGCCAGCCAGUCCCGCUGCACACGCUCGCAGUCUGUGGGCCCUCCGGGAGGCGGCGGAGGUCACCGCGGGGAGAGGGGCGGGCGCAGC\
) } def
/len { sequence length } bind def

/coor [
[125.64177704 154.15771484]
[110.66951752 153.24588013]
[98.79660034 144.07887268]
[94.12598419 129.82456970]
[98.27189636 115.40854645]
[89.59824371 127.64651489]
[81.01464844 139.94781494]
[72.52158356 152.31178284]
[75.19795227 167.65696716]
[66.40864563 180.07481384]
[51.76285934 182.53175354]
[43.26979065 194.89572144]
[34.77672195 207.25968933]
[26.28365326 219.62365723]
[25.26876450 238.01089478]
[9.14640713 244.94418335]
[0.83575445 257.43148804]
[-7.47489834 269.91882324]
[-11.21696377 286.45462036]
[-28.14246178 287.43637085]
[-33.77128601 271.44412231]
[-19.96221352 261.60815430]
[-11.65156078 249.12084961]
[-3.34090829 236.63352966]
[-5.41451931 224.71748352]
[1.40508676 214.24656677]
[13.91968155 211.13059998]
[22.41275024 198.76661682]
[30.90581894 186.40264893]
[39.39888763 174.03868103]
[36.43693924 159.48661804]
[44.87398911 146.82681274]
[60.15761185 143.81871033]
[68.65068054 131.45474243]
[69.84661102 124.16323090]
[77.36028290 118.97285461]
[86.03393555 106.73489380]
[84.66536713 99.36081696]
[74.84150696 110.69624329]
[59.85403442 110.08333588]
[50.98854828 97.98361206]
[54.92077637 83.50820160]
[68.68974304 77.55711365]
[81.92822266 84.61266327]
[80.55965424 77.23858643]
[68.07234192 68.92793274]
[55.29767227 70.69773865]
[45.06852722 63.52056122]
[42.55432892 51.68963623]
[30.19035721 43.19656754]
[17.82638550 34.70349884]
[5.46241522 26.21043015]
[-6.90155602 17.71736145]
[-19.26552773 9.22429276]
[-31.62949944 0.73122442]
[-38.17620468 -0.16517974]
[-42.62148666 -3.70126963]
[-44.22676468 -8.19708538]
[-56.33607864 -17.04945564]
[-69.17627716 -15.84379196]
[-79.07951355 -23.46436882]
[-81.07039642 -35.39451599]
[-93.04846191 -44.42369461]
[-105.02651978 -53.45287323]
[-117.00457764 -62.48205185]
[-132.68196106 -64.61048126]
[-138.18772888 -78.45011902]
[-150.16578674 -87.47930145]
[-165.84317017 -89.60772705]
[-171.34895325 -103.44737244]
[-183.32701111 -112.47654724]
[-195.30506897 -121.50572968]
[-207.28312683 -130.53491211]
[-223.61688232 -131.99798584]
[-230.27029419 -146.98678589]
[-220.39889526 -160.08212280]
[-204.15754700 -157.81262207]
[-198.25395203 -142.51296997]
[-186.27589417 -133.48379517]
[-174.29782104 -124.45461273]
[-162.31976318 -115.42543030]
[-147.49913025 -113.94283295]
[-141.13661194 -99.45735931]
[-129.15855408 -90.42818451]
[-114.33792114 -88.94558716]
[-107.97539520 -74.46011353]
[-95.99733734 -65.43093109]
[-84.01927948 -56.40175247]
[-72.04122162 -47.37257385]
[-54.53240585 -46.17159653]
[-47.48370743 -29.15877151]
[-35.37439346 -20.30640030]
[-23.13643074 -11.63274670]
[-10.77245903 -3.13967824]
[1.59151244 5.35339069]
[13.95548344 13.84645939]
[26.31945419 22.33952713]
[38.68342590 30.83259583]
[51.04739761 39.32566452]
[68.59210968 39.75462341]
[76.38298798 56.44062042]
[88.87030792 64.75127411]
[115.86079407 89.02434540]
[130.75746155 87.26675415]
[145.65414429 85.50915527]
[160.55081177 83.75156403]
[173.34931946 74.45055389]
[186.89552307 80.64326477]
[201.79219055 78.88567352]
[216.68887329 77.12807465]
[231.58554077 75.37048340]
[246.48220825 73.61289215]
[261.37887573 71.85529327]
[276.27557373 70.09770203]
[291.17224121 68.34011078]
[306.06890869 66.58251190]
[320.96557617 64.82492065]
[335.86224365 63.06732559]
[349.61279297 57.07375336]
[361.04028320 47.35717392]
[372.46780396 37.64059067]
[383.89532471 27.92401123]
[395.32284546 18.20743179]
[406.75033569 8.49085140]
[418.17785645 -1.22572935]
[424.08746338 -20.50003624]
[443.24288940 -23.14730644]
[454.38021851 -33.19517136]
[458.65444946 -41.26525497]
[465.75558472 -43.30731583]
[477.03924561 -53.19060135]
[488.32287598 -63.07389069]
[487.81045532 -78.70307159]
[497.50476074 -90.97312927]
[512.82849121 -94.09051514]
[526.54620361 -86.58329773]
[532.18078613 -71.99614716]
[527.07189941 -57.21667862]
[513.63165283 -49.22330093]
[498.20617676 -51.79024506]
[486.92254639 -41.90695953]
[475.63888550 -32.02367020]
[464.42810059 -22.05782700]
[453.29074097 -12.00996304]
[453.68624878 -1.80214047]
[448.28540039 7.12648678]
[438.66427612 11.70401382]
[427.89443970 10.20178413]
[416.46691895 19.91836548]
[405.03942871 29.63494492]
[393.61190796 39.35152435]
[382.18438721 49.06810379]
[370.75686646 58.78468704]
[359.32937622 68.50126648]
[360.26281738 75.94295502]
[374.08575439 81.76757812]
[362.12969971 90.82632446]
[363.06314087 98.26800537]
[376.53646851 104.86116028]
[390.00976562 111.45431519]
[403.48309326 118.04747009]
[416.95642090 124.64062500]
[430.42974854 131.23377991]
[446.87207031 125.25823212]
[462.24569702 132.87419128]
[467.25271606 148.93043518]
[480.82138062 155.32508850]
[494.39004517 161.71975708]
[507.95867920 168.11441040]
[521.52734375 174.50906372]
[535.09600830 180.90373230]
[548.63275146 173.31854248]
[564.03875732 175.17214966]
[575.38995361 185.75180054]
[578.32171631 200.98941040]
[571.70660400 215.02578735]
[558.08831787 222.46368408]
[542.70336914 220.44305420]
[531.46759033 209.74089050]
[528.70135498 194.47238159]
[515.13269043 188.07772827]
[501.56402588 181.68305969]
[487.99536133 175.28840637]
[474.42672729 168.89375305]
[460.85806274 162.49908447]
[449.46231079 168.51007080]
[436.49142456 166.83567810]
[426.70880127 157.86491394]
[423.83657837 144.70709229]
[410.36325073 138.11393738]
[396.88995361 131.52078247]
[383.41662598 124.92763519]
[369.94329834 118.33448029]
[356.47000122 111.74132538]
[337.61984253 77.96399689]
[322.72317505 79.72159576]
[307.82650757 81.47918701]
[292.92984009 83.23677826]
[278.03314209 84.99437714]
[263.13647461 86.75196838]
[248.23980713 88.50955963]
[233.34313965 90.26715851]
[218.44645691 92.02474976]
[203.54978943 93.78234863]
[188.65312195 95.53993988]
[176.92012024 104.71523285]
[162.30841064 98.64823914]
[147.41172791 100.40583038]
[132.51506042 102.16342163]
[117.61838531 103.92102051]
[132.25981140 107.18115234]
[142.53958130 118.10482025]
[144.90527344 132.91709900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 37]
[6 36]
[7 34]
[8 33]
[11 30]
[12 29]
[13 28]
[14 27]
[16 24]
[17 23]
[18 22]
[45 102]
[46 101]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[54 94]
[55 93]
[58 92]
[59 91]
[62 89]
[63 88]
[64 87]
[65 86]
[67 84]
[68 83]
[70 81]
[71 80]
[72 79]
[73 78]
[103 210]
[104 209]
[105 208]
[106 207]
[108 205]
[109 204]
[110 203]
[111 202]
[112 201]
[113 200]
[114 199]
[115 198]
[116 197]
[117 196]
[118 195]
[119 154]
[120 153]
[121 152]
[122 151]
[123 150]
[124 149]
[125 148]
[127 144]
[128 143]
[130 142]
[131 141]
[132 140]
[158 194]
[159 193]
[160 192]
[161 191]
[162 190]
[163 189]
[166 185]
[167 184]
[168 183]
[169 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
