%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM207)
} def

/sequence { (\
AGUUCUGAGAAAGAAGGAAAUAAACACAGGCACCAAACCACUAUCCUAAGUUGACUGUCCUUUAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 56 0.005315115 ubox
1 61 0.003454640 ubox
1 63 0.004633158 ubox
2 21 0.009956087 ubox
2 25 0.009809193 ubox
2 27 0.005581762 ubox
2 55 0.005626589 ubox
2 60 0.003832491 ubox
2 62 0.003794591 ubox
2 67 0.018142698 ubox
3 9 0.020553806 ubox
3 10 0.045035796 ubox
3 11 0.212029228 ubox
3 12 0.040850248 ubox
3 13 0.005708959 ubox
3 14 0.011115831 ubox
3 15 0.155255731 ubox
3 16 0.004004279 ubox
3 18 0.060509757 ubox
3 19 0.028283628 ubox
3 20 0.008446235 ubox
3 24 0.008888319 ubox
3 26 0.004820583 ubox
3 54 0.005290539 ubox
3 65 0.015854159 ubox
3 66 0.019348821 ubox
4 8 0.019353299 ubox
4 9 0.044834908 ubox
4 10 0.243550495 ubox
4 11 0.041919696 ubox
4 12 0.013290410 ubox
4 13 0.008290768 ubox
4 14 0.281996174 ubox
4 15 0.004950762 ubox
4 17 0.065632946 ubox
4 18 0.032749828 ubox
4 19 0.005648266 ubox
4 23 0.005377161 ubox
4 30 0.003847968 ubox
4 53 0.004245142 ubox
4 64 0.017753847 ubox
4 65 0.018044867 ubox
5 9 0.244841797 ubox
5 13 0.326639822 ubox
5 16 0.068133868 ubox
5 17 0.033118719 ubox
5 29 0.004762009 ubox
6 12 0.328265149 ubox
6 15 0.068275281 ubox
6 16 0.032286000 ubox
6 28 0.004814364 ubox
6 64 0.020691851 ubox
7 27 0.004816267 ubox
7 62 0.003717513 ubox
7 63 0.018018966 ubox
8 61 0.003575272 ubox
8 62 0.015089815 ubox
8 63 0.008411530 ubox
9 60 0.003349157 ubox
9 61 0.006380717 ubox
9 62 0.006504409 ubox
9 63 0.014318705 ubox
10 61 0.004177385 ubox
10 62 0.012682418 ubox
10 63 0.018647154 ubox
11 61 0.007119041 ubox
11 62 0.015829544 ubox
11 63 0.022591092 ubox
12 61 0.010911581 ubox
12 62 0.017253294 ubox
12 63 0.055045474 ubox
13 59 0.005785938 ubox
13 60 0.008422043 ubox
13 61 0.006890990 ubox
13 62 0.050839370 ubox
13 63 0.897527283 ubox
14 58 0.005757333 ubox
14 61 0.036524792 ubox
14 62 0.941814445 ubox
14 63 0.026312744 ubox
15 47 0.010051424 ubox
15 56 0.006233650 ubox
15 61 0.977676123 ubox
15 62 0.022607134 ubox
15 63 0.004263283 ubox
16 34 0.003838000 ubox
16 39 0.003271677 ubox
16 46 0.011072431 ubox
16 55 0.006454140 ubox
16 56 0.005645803 ubox
16 59 0.009777907 ubox
16 60 0.992409449 ubox
16 61 0.007777618 ubox
17 33 0.003830611 ubox
17 38 0.003264891 ubox
17 45 0.011074819 ubox
17 55 0.005799508 ubox
17 58 0.009799305 ubox
17 59 0.992452721 ubox
17 60 0.007360703 ubox
17 63 0.004271535 ubox
18 44 0.010399300 ubox
18 58 0.980120320 ubox
18 62 0.004355968 ubox
18 63 0.004814459 ubox
19 52 0.008214268 ubox
19 61 0.003458840 ubox
19 62 0.005112102 ubox
19 63 0.005375956 ubox
20 51 0.007877538 ubox
20 58 0.022073165 ubox
20 61 0.004485391 ubox
20 62 0.005523122 ubox
20 67 0.003865696 ubox
21 50 0.007498675 ubox
21 53 0.081820752 ubox
21 57 0.040006543 ubox
21 64 0.044111527 ubox
21 66 0.003852198 ubox
22 52 0.076568497 ubox
22 56 0.041809619 ubox
22 62 0.012537763 ubox
22 63 0.046605098 ubox
23 51 0.064984619 ubox
23 52 0.950548943 ubox
23 61 0.014049807 ubox
23 62 0.046452611 ubox
23 63 0.010800478 ubox
24 51 0.966281175 ubox
24 58 0.011414269 ubox
24 61 0.041885808 ubox
24 62 0.011266650 ubox
25 50 0.967065762 ubox
25 53 0.039889368 ubox
25 57 0.016667070 ubox
26 51 0.062516855 ubox
26 52 0.032081008 ubox
26 56 0.015465128 ubox
26 58 0.126514999 ubox
27 50 0.068117012 ubox
27 53 0.013965635 ubox
27 57 0.179924280 ubox
28 42 0.018464695 ubox
28 47 0.955204712 ubox
28 52 0.013468734 ubox
28 56 0.179913544 ubox
28 61 0.073215483 ubox
28 62 0.006949490 ubox
29 39 0.050101295 ubox
29 41 0.019151047 ubox
29 42 0.009474045 ubox
29 45 0.026109827 ubox
29 46 0.971283737 ubox
29 47 0.029632827 ubox
29 51 0.010233916 ubox
29 52 0.016407334 ubox
29 55 0.178136894 ubox
29 56 0.008616794 ubox
29 59 0.052411988 ubox
29 60 0.078222920 ubox
29 61 0.007090475 ubox
30 38 0.050510517 ubox
30 41 0.012727182 ubox
30 44 0.021562868 ubox
30 45 0.961520879 ubox
30 46 0.030803124 ubox
30 51 0.025854453 ubox
30 55 0.012565289 ubox
30 58 0.054544714 ubox
30 59 0.077944711 ubox
30 60 0.007189018 ubox
31 50 0.026435751 ubox
31 53 0.141893520 ubox
31 57 0.081637838 ubox
32 51 0.050974791 ubox
32 52 0.137167039 ubox
32 56 0.079033130 ubox
32 58 0.044440049 ubox
33 50 0.062810544 ubox
33 57 0.043073409 ubox
34 53 0.048923311 ubox
34 57 0.026079311 ubox
35 52 0.047239003 ubox
35 56 0.027457013 ubox
36 51 0.030166860 ubox
36 52 0.081951994 ubox
37 51 0.087322302 ubox
38 50 0.088016097 ubox
39 53 0.027866856 ubox
40 51 0.139450747 ubox
40 52 0.020072099 ubox
40 58 0.007221235 ubox
41 50 0.144087536 ubox
41 57 0.009446911 ubox
42 48 0.022762713 ubox
42 49 0.139784100 ubox
42 53 0.005356707 ubox
43 47 0.022082395 ubox
43 51 0.006540742 ubox
43 52 0.005969914 ubox
44 50 0.006504281 ubox
44 54 0.011443069 ubox
45 53 0.011703822 ubox
49 56 0.012717570 ubox
50 55 0.013075131 ubox
53 59 0.003286132 ubox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
showpage
end
%%EOF
