%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DEFB128)
} def

/sequence { (\
GGCACACAGACCACUGGACAAAGUUCUGCUGCCUCUUUCUCUUGGGAAGUCUGUAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004798962 ubox
1 30 0.005780795 ubox
1 33 0.987713496 ubox
1 34 0.007354312 ubox
1 35 0.003857167 ubox
1 51 0.009483588 ubox
2 11 0.004798446 ubox
2 29 0.006797356 ubox
2 32 0.989669729 ubox
2 33 0.006737883 ubox
2 50 0.009158999 ubox
2 54 0.016234031 ubox
3 28 0.006520027 ubox
3 31 0.989388731 ubox
3 49 0.009155170 ubox
3 53 0.016513102 ubox
4 27 0.005205901 ubox
4 30 0.958773743 ubox
4 52 0.015945798 ubox
4 54 0.004320559 ubox
5 28 0.061123763 ubox
5 31 0.025991627 ubox
5 53 0.004237591 ubox
6 27 0.045439272 ubox
6 30 0.045418087 ubox
6 50 0.013855586 ubox
6 52 0.003457258 ubox
6 54 0.132361889 ubox
7 16 0.017553552 ubox
7 28 0.984486256 ubox
7 31 0.004979147 ubox
7 49 0.014073746 ubox
7 53 0.139030108 ubox
8 15 0.017847439 ubox
8 25 0.009323183 ubox
8 27 0.988234508 ubox
8 30 0.007006674 ubox
8 52 0.139075672 ubox
9 14 0.017735481 ubox
9 24 0.004381685 ubox
9 25 0.014466246 ubox
9 26 0.989463702 ubox
9 29 0.008571382 ubox
9 51 0.139132072 ubox
10 24 0.045358934 ubox
10 25 0.956078472 ubox
10 50 0.138958836 ubox
11 17 0.042196095 ubox
11 23 0.061373109 ubox
11 45 0.025555633 ubox
11 46 0.013407532 ubox
11 49 0.136211244 ubox
12 16 0.041980996 ubox
12 28 0.008112961 ubox
12 31 0.019793768 ubox
12 44 0.028635542 ubox
12 45 0.015564570 ubox
13 24 0.940124747 ubox
13 27 0.007407225 ubox
13 30 0.019564158 ubox
13 43 0.027417465 ubox
14 23 0.984859529 ubox
14 45 0.084154376 ubox
14 46 0.087393334 ubox
15 22 0.978955899 ubox
15 28 0.016599083 ubox
15 31 0.005559513 ubox
15 44 0.073400105 ubox
15 45 0.084164385 ubox
16 26 0.032439762 ubox
16 27 0.022342220 ubox
16 30 0.009568401 ubox
16 33 0.017503739 ubox
16 36 0.015723877 ubox
16 39 0.004678920 ubox
16 40 0.016158071 ubox
16 41 0.005739358 ubox
16 42 0.104313899 ubox
16 43 0.049536478 ubox
17 24 0.003184845 ubox
17 25 0.034013503 ubox
17 26 0.023721549 ubox
17 29 0.010239760 ubox
17 32 0.017548098 ubox
17 35 0.016879619 ubox
17 38 0.004609364 ubox
17 39 0.016903945 ubox
17 40 0.003675241 ubox
17 41 0.119822027 ubox
17 42 0.009760448 ubox
17 43 0.044085531 ubox
18 24 0.036459504 ubox
18 25 0.021779239 ubox
18 34 0.016571934 ubox
18 37 0.004493946 ubox
18 38 0.016066055 ubox
18 40 0.118738092 ubox
18 42 0.043397447 ubox
19 23 0.036503492 ubox
19 28 0.013260326 ubox
19 31 0.016070725 ubox
19 44 0.003198285 ubox
20 27 0.012432651 ubox
20 30 0.013735601 ubox
20 37 0.005469463 ubox
20 38 0.118732790 ubox
21 36 0.005508146 ubox
21 37 0.127543478 ubox
21 38 0.003398073 ubox
22 30 0.022387220 ubox
22 34 0.007721757 ubox
22 36 0.127831042 ubox
22 37 0.003419782 ubox
22 40 0.007827900 ubox
23 29 0.023949964 ubox
23 32 0.019647073 ubox
23 33 0.007004384 ubox
23 35 0.126981747 ubox
23 39 0.007930689 ubox
24 28 0.022444800 ubox
24 31 0.022038229 ubox
27 55 0.004121309 ubox
28 50 0.004843382 ubox
28 54 0.004489686 ubox
29 49 0.007530161 ubox
29 53 0.005009623 ubox
30 48 0.007974303 ubox
30 55 0.017514217 ubox
31 50 0.005662593 ubox
31 54 0.019010276 ubox
32 45 0.010131199 ubox
32 46 0.017936661 ubox
32 49 0.006242786 ubox
32 53 0.019214388 ubox
33 44 0.010197337 ubox
33 45 0.017971991 ubox
33 46 0.036903554 ubox
33 49 0.009594683 ubox
34 44 0.010331179 ubox
34 45 0.046873848 ubox
34 46 0.040512727 ubox
34 47 0.216436490 ubox
34 48 0.017518786 ubox
35 44 0.052960294 ubox
35 45 0.048885800 ubox
35 46 0.227530180 ubox
35 49 0.897009370 ubox
36 44 0.048426413 ubox
36 45 0.226402218 ubox
36 46 0.004714944 ubox
36 47 0.121162011 ubox
36 48 0.905539563 ubox
36 49 0.202561027 ubox
36 56 0.004777977 ubox
36 57 0.005722703 ubox
37 44 0.213051307 ubox
37 45 0.006972419 ubox
37 46 0.132123203 ubox
37 47 0.906019576 ubox
37 48 0.253662447 ubox
37 49 0.006492911 ubox
37 55 0.004791783 ubox
37 56 0.006288441 ubox
37 57 0.003553023 ubox
38 44 0.006717101 ubox
38 45 0.143541232 ubox
38 46 0.903796624 ubox
38 47 0.267270113 ubox
38 48 0.006602980 ubox
38 55 0.005744754 ubox
38 56 0.003726458 ubox
39 44 0.154525039 ubox
39 45 0.902215164 ubox
39 46 0.271752123 ubox
39 49 0.012560830 ubox
40 44 0.812877384 ubox
40 45 0.249853546 ubox
40 46 0.008079575 ubox
40 47 0.024571492 ubox
40 48 0.010503413 ubox
41 45 0.031950813 ubox
41 46 0.026539967 ubox
41 49 0.018796256 ubox
42 48 0.018735869 ubox
42 49 0.006965530 ubox
42 56 0.015518632 ubox
42 57 0.005057342 ubox
43 47 0.015644129 ubox
43 48 0.008482751 ubox
43 53 0.018619263 ubox
43 55 0.016943214 ubox
43 56 0.005481700 ubox
44 51 0.023532060 ubox
44 52 0.033323884 ubox
44 54 0.014800063 ubox
45 50 0.021401390 ubox
45 51 0.034618003 ubox
45 52 0.026877319 ubox
46 50 0.022453929 ubox
46 51 0.028673663 ubox
49 58 0.014618692 ubox
50 57 0.021160120 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
4 30 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
showpage
end
%%EOF
