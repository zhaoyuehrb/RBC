%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GLUD2)
} def

/sequence { (\
UUCCUUCCUAGUCGCGGGGAGUCUGAGAAAGCGCACCUGUUCCGCGACCGUCACGCACCCCUCCUCCGCCUGCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.007514645 ubox
1 27 0.004473286 ubox
2 10 0.012907320 ubox
2 20 0.003418172 ubox
2 26 0.005762049 ubox
2 28 0.003362251 ubox
3 19 0.003550789 ubox
3 25 0.005881193 ubox
3 27 0.003405552 ubox
4 11 0.137383860 ubox
4 18 0.003522930 ubox
4 21 0.019659366 ubox
5 10 0.137523280 ubox
5 11 0.011135345 ubox
5 20 0.020233548 ubox
6 10 0.014875350 ubox
6 19 0.020286258 ubox
6 20 0.003433675 ubox
7 17 0.003886594 ubox
7 18 0.020367578 ubox
7 19 0.003573694 ubox
8 16 0.004141472 ubox
8 17 0.020388243 ubox
8 18 0.003568401 ubox
9 16 0.019554862 ubox
9 17 0.003505607 ubox
9 72 0.218434967 ubox
10 62 0.004299536 ubox
10 65 0.038210354 ubox
10 71 0.242294050 ubox
11 48 0.780972126 ubox
11 58 0.005497449 ubox
11 61 0.003292306 ubox
11 64 0.041123676 ubox
11 69 0.021793533 ubox
11 70 0.242365779 ubox
11 73 0.191242625 ubox
11 76 0.177338925 ubox
12 47 0.783633753 ubox
12 57 0.005424350 ubox
12 68 0.010764627 ubox
12 72 0.187346684 ubox
12 75 0.171701626 ubox
13 46 0.784256035 ubox
13 68 0.124285028 ubox
13 72 0.037704445 ubox
13 75 0.039042763 ubox
13 77 0.219653529 ubox
14 40 0.010152632 ubox
14 45 0.784269943 ubox
14 56 0.007742813 ubox
14 67 0.124702804 ubox
14 69 0.428898781 ubox
14 71 0.010182893 ubox
14 73 0.181387797 ubox
14 74 0.028610667 ubox
14 76 0.240303379 ubox
15 39 0.011468659 ubox
15 44 0.784250829 ubox
15 55 0.007747912 ubox
15 68 0.430026129 ubox
15 72 0.183274539 ubox
15 75 0.240320361 ubox
16 38 0.019038939 ubox
16 42 0.016345356 ubox
16 43 0.783024908 ubox
16 54 0.007718223 ubox
16 60 0.019167491 ubox
16 61 0.315211797 ubox
16 62 0.025486773 ubox
16 63 0.021793776 ubox
16 64 0.015823316 ubox
16 65 0.005933420 ubox
16 66 0.117987079 ubox
16 67 0.426816225 ubox
16 70 0.135541136 ubox
16 71 0.117665065 ubox
16 74 0.232882556 ubox
17 37 0.034828396 ubox
17 38 0.088260653 ubox
17 41 0.021468619 ubox
17 42 0.776351641 ubox
17 43 0.036482057 ubox
17 52 0.007292629 ubox
17 59 0.019330055 ubox
17 60 0.317138672 ubox
17 61 0.034113247 ubox
17 62 0.020685840 ubox
17 63 0.015530853 ubox
17 64 0.005821069 ubox
17 65 0.123877109 ubox
17 66 0.424588150 ubox
17 69 0.137926199 ubox
17 70 0.114832310 ubox
17 71 0.013367186 ubox
17 73 0.229984543 ubox
17 74 0.008657341 ubox
18 23 0.006173092 ubox
18 24 0.006556316 ubox
18 36 0.045341060 ubox
18 37 0.360328405 ubox
18 38 0.123947135 ubox
18 40 0.143150962 ubox
18 41 0.655854265 ubox
18 42 0.051483815 ubox
18 43 0.008588859 ubox
18 51 0.007282453 ubox
18 58 0.019448122 ubox
18 59 0.318595027 ubox
18 60 0.038721213 ubox
18 61 0.035287325 ubox
18 62 0.006797959 ubox
18 63 0.005600901 ubox
18 64 0.437003706 ubox
18 65 0.071048425 ubox
18 67 0.266125838 ubox
18 69 0.086876518 ubox
18 70 0.051924453 ubox
18 71 0.031233157 ubox
18 73 0.012119073 ubox
19 23 0.007131420 ubox
19 36 0.363875549 ubox
19 37 0.146773067 ubox
19 40 0.590795847 ubox
19 41 0.062555248 ubox
19 42 0.009274212 ubox
19 58 0.318020799 ubox
19 59 0.038704867 ubox
19 60 0.035532699 ubox
19 61 0.007043098 ubox
19 62 0.004619096 ubox
19 63 0.438651426 ubox
19 64 0.060656487 ubox
19 66 0.276528854 ubox
19 69 0.052154479 ubox
19 70 0.034509849 ubox
20 38 0.431318845 ubox
20 40 0.071220355 ubox
20 41 0.010269452 ubox
20 62 0.439615296 ubox
20 65 0.276641076 ubox
20 71 0.017458293 ubox
21 32 0.104988776 ubox
21 34 0.361942347 ubox
21 36 0.358634559 ubox
21 37 0.409003882 ubox
21 40 0.009060797 ubox
21 48 0.017810295 ubox
21 54 0.010658603 ubox
21 56 0.362180869 ubox
21 58 0.102440737 ubox
21 61 0.393336157 ubox
21 64 0.275512263 ubox
21 69 0.040427203 ubox
21 70 0.017124774 ubox
22 28 0.046126736 ubox
22 31 0.065532230 ubox
22 33 0.359572439 ubox
22 35 0.378932106 ubox
22 39 0.014474889 ubox
22 47 0.021918678 ubox
22 53 0.009659670 ubox
22 55 0.378162204 ubox
22 57 0.131404893 ubox
22 68 0.039983452 ubox
23 27 0.047901060 ubox
23 31 0.407525755 ubox
23 46 0.022031332 ubox
24 30 0.406780575 ubox
24 33 0.379873555 ubox
24 35 0.471589864 ubox
24 39 0.007104084 ubox
24 44 0.019498915 ubox
24 50 0.003531213 ubox
24 53 0.419603591 ubox
24 55 0.165320135 ubox
24 57 0.229760326 ubox
25 32 0.394063067 ubox
25 34 0.488672649 ubox
25 38 0.003915684 ubox
25 41 0.003599982 ubox
25 42 0.030109138 ubox
25 43 0.052836212 ubox
25 45 0.005621003 ubox
25 49 0.004354754 ubox
25 52 0.424812001 ubox
25 54 0.175921326 ubox
25 56 0.238822525 ubox
25 63 0.284696051 ubox
25 66 0.029015080 ubox
26 38 0.024905362 ubox
26 40 0.003943868 ubox
26 41 0.029844624 ubox
26 51 0.422997236 ubox
26 62 0.284981713 ubox
26 65 0.029089134 ubox
27 37 0.025938525 ubox
27 40 0.024208332 ubox
27 41 0.011048682 ubox
27 42 0.071184719 ubox
27 52 0.299256448 ubox
27 61 0.284074954 ubox
27 63 0.010147454 ubox
27 64 0.028130917 ubox
28 40 0.011637046 ubox
28 41 0.068838335 ubox
28 51 0.298525663 ubox
28 62 0.011947252 ubox
29 40 0.048261386 ubox
29 41 0.009267013 ubox
30 38 0.055075533 ubox
30 40 0.008921482 ubox
30 41 0.098053140 ubox
30 62 0.005352116 ubox
31 37 0.055524186 ubox
31 40 0.128155364 ubox
31 45 0.248234738 ubox
31 51 0.051611875 ubox
31 56 0.279653042 ubox
31 61 0.005206407 ubox
31 69 0.006049125 ubox
31 76 0.003507439 ubox
32 39 0.131652889 ubox
32 44 0.248292343 ubox
32 46 0.467050539 ubox
32 50 0.052540427 ubox
32 55 0.280002184 ubox
32 68 0.006130421 ubox
32 75 0.003509625 ubox
33 38 0.089337483 ubox
33 40 0.067286052 ubox
33 43 0.238179912 ubox
33 45 0.468099620 ubox
33 49 0.051503171 ubox
33 51 0.012788594 ubox
33 54 0.277588575 ubox
33 56 0.023271148 ubox
33 67 0.006075984 ubox
34 39 0.093848787 ubox
34 44 0.467766843 ubox
34 50 0.020746729 ubox
34 55 0.023246431 ubox
34 72 0.003232605 ubox
35 51 0.153656373 ubox
36 50 0.157318888 ubox
38 44 0.012954251 ubox
38 46 0.083055101 ubox
38 50 0.055868928 ubox
38 53 0.042338665 ubox
38 55 0.006409426 ubox
38 57 0.007187170 ubox
39 43 0.022520262 ubox
39 45 0.087535794 ubox
39 48 0.248886452 ubox
39 49 0.060634029 ubox
39 52 0.042668600 ubox
39 54 0.013316949 ubox
39 56 0.008018468 ubox
39 58 0.010670411 ubox
40 44 0.081910217 ubox
40 47 0.246569318 ubox
40 50 0.004000537 ubox
40 53 0.013893150 ubox
40 55 0.007500154 ubox
40 57 0.010558542 ubox
41 46 0.224081331 ubox
41 47 0.066679651 ubox
42 46 0.072445009 ubox
43 50 0.036405685 ubox
43 55 0.024647272 ubox
43 77 0.009504347 ubox
44 49 0.034951137 ubox
44 51 0.021476182 ubox
44 54 0.025771746 ubox
44 56 0.143525847 ubox
44 76 0.010182403 ubox
45 50 0.021798991 ubox
45 55 0.143713954 ubox
45 75 0.010178335 ubox
46 52 0.031476779 ubox
46 54 0.142146489 ubox
46 74 0.010104930 ubox
47 51 0.027780113 ubox
49 55 0.066145476 ubox
49 68 0.009863484 ubox
49 72 0.005763237 ubox
49 75 0.444903370 ubox
49 77 0.387668330 ubox
50 54 0.064430569 ubox
50 56 0.091025142 ubox
50 58 0.064205257 ubox
50 67 0.010569076 ubox
50 69 0.007412126 ubox
50 71 0.005027156 ubox
50 73 0.104904777 ubox
50 74 0.459609592 ubox
50 76 0.414282650 ubox
51 55 0.085231206 ubox
51 57 0.061731826 ubox
51 68 0.007083978 ubox
51 72 0.040839937 ubox
51 75 0.404906215 ubox
52 72 0.547889259 ubox
53 71 0.546577809 ubox
54 68 0.031702282 ubox
54 72 0.050728631 ubox
54 75 0.054076733 ubox
54 77 0.178374448 ubox
55 67 0.031563627 ubox
55 69 0.560572846 ubox
55 71 0.022665089 ubox
55 73 0.318509002 ubox
55 74 0.040283177 ubox
55 76 0.187275096 ubox
56 68 0.560708239 ubox
56 72 0.321049366 ubox
56 75 0.187099128 ubox
57 71 0.289260577 ubox
67 75 0.029391823 ubox
67 77 0.450895282 ubox
68 74 0.031817782 ubox
68 76 0.482095879 ubox
69 75 0.481576666 ubox
71 77 0.010406375 ubox
72 76 0.018418100 ubox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
showpage
end
%%EOF
