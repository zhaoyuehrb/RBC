%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COL6A1)
} def

/sequence { (\
GCUCUCACUCUGGCUGGGAGCAGAAGGCAGCCUCGGUCUCUGGGCGGCGGCGGCGGCCCACUCUGCCCUGGCCGCGCUGUGUGGUGACCGCAGGCCCCAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.016508842 ubox
1 21 0.995480277 ubox
1 28 0.052804241 ubox
2 13 0.018977920 ubox
2 20 0.996226223 ubox
2 23 0.005040015 ubox
2 26 0.003623941 ubox
2 27 0.052736808 ubox
3 12 0.017103086 ubox
3 13 0.009208671 ubox
3 19 0.996096173 ubox
3 22 0.005022202 ubox
3 24 0.014368046 ubox
3 25 0.003570458 ubox
3 26 0.047427333 ubox
3 101 0.003642303 ubox
4 12 0.014244800 ubox
4 13 0.006788809 ubox
4 18 0.996210996 ubox
4 20 0.005634161 ubox
4 23 0.016686305 ubox
4 26 0.019086678 ubox
4 100 0.003920121 ubox
5 12 0.005762037 ubox
5 13 0.014120683 ubox
5 17 0.995404712 ubox
5 19 0.005681450 ubox
5 22 0.016201483 ubox
5 24 0.046359451 ubox
5 25 0.017856245 ubox
5 99 0.003634216 ubox
6 12 0.021203110 ubox
6 16 0.995390520 ubox
6 17 0.011253291 ubox
6 18 0.005632559 ubox
6 23 0.047257719 ubox
7 11 0.018103553 ubox
7 15 0.931218690 ubox
8 17 0.008094122 ubox
8 18 0.006682224 ubox
8 20 0.051458972 ubox
8 26 0.003401407 ubox
9 16 0.007215789 ubox
9 17 0.009477356 ubox
9 19 0.051620806 ubox
9 24 0.021065335 ubox
9 101 0.020235990 ubox
10 16 0.015102033 ubox
10 17 0.003786663 ubox
10 18 0.051617299 ubox
10 23 0.021700207 ubox
10 100 0.021851138 ubox
11 16 0.004018749 ubox
11 17 0.051162203 ubox
11 22 0.021552219 ubox
11 26 0.003211080 ubox
11 99 0.021826666 ubox
12 21 0.019495922 ubox
12 98 0.021769276 ubox
13 21 0.009992280 ubox
13 97 0.021013796 ubox
14 20 0.013585335 ubox
14 23 0.020959615 ubox
14 100 0.058991321 ubox
15 19 0.012247943 ubox
15 22 0.021060749 ubox
15 99 0.061175911 ubox
16 21 0.021064838 ubox
16 98 0.061559092 ubox
17 97 0.061561794 ubox
18 96 0.061427975 ubox
20 28 0.059345852 ubox
21 27 0.059368154 ubox
26 96 0.038267925 ubox
26 97 0.392013903 ubox
26 98 0.876460423 ubox
27 95 0.033120174 ubox
27 96 0.391803223 ubox
27 97 0.875697607 ubox
28 94 0.027877607 ubox
30 91 0.011085243 ubox
30 95 0.997620852 ubox
31 90 0.010129446 ubox
31 94 0.999593473 ubox
32 93 0.999771032 ubox
33 92 0.995918109 ubox
34 90 0.999140221 ubox
35 89 0.999972373 ubox
36 88 0.999986291 ubox
37 87 0.999843764 ubox
38 86 0.997216463 ubox
39 84 0.035206982 ubox
40 70 0.004457425 ubox
40 83 0.036933919 ubox
40 84 0.996687379 ubox
41 60 0.003406019 ubox
41 79 0.006034191 ubox
41 81 0.004690288 ubox
41 83 0.993649015 ubox
42 59 0.003841779 ubox
42 68 0.006513464 ubox
42 78 0.018891281 ubox
42 80 0.003839783 ubox
42 82 0.975597698 ubox
43 58 0.003843083 ubox
43 67 0.006528084 ubox
43 77 0.019404920 ubox
43 78 0.029959764 ubox
44 57 0.003843106 ubox
44 66 0.006528560 ubox
44 75 0.019956814 ubox
44 77 0.030399193 ubox
44 80 0.997772717 ubox
44 82 0.036555121 ubox
45 56 0.003841488 ubox
45 65 0.006528638 ubox
45 74 0.019983782 ubox
45 76 0.030370254 ubox
45 79 0.998397646 ubox
45 81 0.037653028 ubox
46 64 0.006447120 ubox
46 73 0.020009427 ubox
46 75 0.021512287 ubox
46 78 0.997154718 ubox
46 80 0.026592788 ubox
47 54 0.003841435 ubox
47 63 0.006418629 ubox
47 72 0.020007761 ubox
47 75 0.057166195 ubox
47 77 0.996955798 ubox
47 80 0.030943637 ubox
48 53 0.003841883 ubox
48 70 0.011492256 ubox
48 71 0.016384581 ubox
48 74 0.065132155 ubox
48 76 0.995082237 ubox
48 79 0.041163281 ubox
49 58 0.005892835 ubox
49 69 0.016324297 ubox
49 73 0.082511063 ubox
49 75 0.702327743 ubox
49 78 0.042468282 ubox
50 57 0.005980359 ubox
50 68 0.017697584 ubox
50 72 0.086162681 ubox
50 75 0.701086225 ubox
50 77 0.042921879 ubox
51 56 0.006049936 ubox
51 70 0.024729809 ubox
51 71 0.082637001 ubox
51 74 0.990084153 ubox
51 76 0.042955974 ubox
52 67 0.078305718 ubox
52 68 0.006922712 ubox
52 69 0.034000819 ubox
52 73 0.991649903 ubox
52 75 0.030785391 ubox
53 66 0.078569273 ubox
53 67 0.004929667 ubox
53 68 0.036248056 ubox
53 72 0.991647438 ubox
53 75 0.080601809 ubox
54 65 0.078754056 ubox
54 70 0.102825143 ubox
54 71 0.985408634 ubox
54 74 0.092454966 ubox
55 62 0.009065544 ubox
55 63 0.006010882 ubox
55 64 0.078813502 ubox
55 67 0.971808650 ubox
55 68 0.114873547 ubox
55 69 0.113830898 ubox
55 73 0.092763790 ubox
56 61 0.009510554 ubox
56 62 0.004755560 ubox
56 63 0.077780620 ubox
56 66 0.974746756 ubox
56 67 0.096848129 ubox
56 68 0.120391285 ubox
56 72 0.092821776 ubox
57 65 0.974828478 ubox
57 71 0.088286333 ubox
58 70 0.083327027 ubox
58 71 0.032287899 ubox
59 65 0.136871770 ubox
59 70 0.046077182 ubox
60 64 0.117448635 ubox
60 69 0.052953182 ubox
63 70 0.006794300 ubox
71 85 0.006991242 ubox
72 84 0.007359641 ubox
73 83 0.007365319 ubox
74 82 0.007362370 ubox
75 81 0.007362789 ubox
76 80 0.004543316 ubox
1 21 0.9500000 lbox
2 20 0.9500000 lbox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
26 98 0.9500000 lbox
27 97 0.9500000 lbox
30 95 0.9500000 lbox
31 94 0.9500000 lbox
32 93 0.9500000 lbox
33 92 0.9500000 lbox
34 90 0.9500000 lbox
35 89 0.9500000 lbox
36 88 0.9500000 lbox
37 87 0.9500000 lbox
38 86 0.9500000 lbox
40 84 0.9500000 lbox
41 83 0.9500000 lbox
42 82 0.9500000 lbox
44 80 0.9500000 lbox
45 79 0.9500000 lbox
46 78 0.9500000 lbox
47 77 0.9500000 lbox
48 76 0.9500000 lbox
49 75 0.9500000 lbox
51 74 0.9500000 lbox
52 73 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
showpage
end
%%EOF
