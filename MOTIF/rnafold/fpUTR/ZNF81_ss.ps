%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCGGCUGCGGUUCUCGCCGGUUCUCAGCCGGGGUUUGAUAGUUGUCAGGAGGAUUCGACGUUCAGUGCCCAGGGAUGUGGAGAGUUCUUGGAGUCUCUGCGGAGUCCCUGGGCCAGAUCUCACAGUGAAAGCUGCAGGAUCUUCCUUCUGACCCCAGCAGUCCCCGUUGAGUCCACCGAUCCCACUGGAAUUAUAAAGUUGUCAGCAAGAAAGCCCCAGGGCUGAAGUCCAAGUCCGUCGGGAAC\
) } def
/len { sequence length } bind def

/coor [
[136.95919800 677.58142090]
[129.48818970 676.92254639]
[124.14201355 690.93750000]
[118.79583740 704.95239258]
[121.10647583 720.60394287]
[109.34114075 729.73779297]
[103.99496460 743.75268555]
[98.64878845 757.76763916]
[93.30260468 771.78259277]
[103.05536652 783.64758301]
[105.55315399 798.80206299]
[100.12406921 813.16937256]
[88.22851562 822.88488770]
[73.06632996 825.33514404]
[58.71607590 819.86108398]
[49.03788757 807.93511963]
[46.63515472 792.76531982]
[52.15420151 778.43231201]
[64.11042786 768.79156494]
[79.28767395 766.43640137]
[84.63385010 752.42144775]
[89.98003387 738.40649414]
[95.32621002 724.39160156]
[92.63317871 709.74243164]
[104.78090668 699.60620117]
[110.12708282 685.59130859]
[115.47325897 671.57635498]
[118.83732605 656.95843506]
[120.15509033 642.01647949]
[121.47286224 627.07446289]
[122.79062653 612.13244629]
[124.10839081 597.19042969]
[125.42616272 582.24841309]
[126.55606079 567.29107666]
[127.49792480 552.32067871]
[128.43977356 537.35021973]
[129.38163757 522.37982178]
[130.32350159 507.40945435]
[131.26535034 492.43905640]
[132.20721436 477.46865845]
[119.72566986 469.33987427]
[112.94364166 455.96603394]
[113.77185059 440.89352417]
[122.08786011 428.17578125]
[135.74211121 421.28311157]
[136.68395996 406.31271362]
[137.62582397 391.34231567]
[138.56767273 376.37191772]
[131.64479065 363.18392944]
[140.23335266 349.89682007]
[141.17520142 334.92642212]
[140.04530334 319.96905518]
[136.86520386 305.31002808]
[126.60550690 294.51242065]
[131.24119568 279.38558960]
[128.06108093 264.72656250]
[124.88098145 250.06755066]
[121.70087433 235.40852356]
[118.52076721 220.74951172]
[115.34066010 206.09048462]
[112.16055298 191.43145752]
[108.98044586 176.77244568]
[105.80033875 162.11341858]
[102.62023163 147.45439148]
[87.43408966 145.83538818]
[73.54548645 139.48345947]
[62.38855743 129.05451965]
[55.11534882 115.62541962]
[52.47689438 100.58285522]
[54.74562836 85.48010254]
[61.68729401 71.87667084]
[51.14754105 61.20363235]
[40.60779190 50.53059769]
[30.06804276 39.85756302]
[19.52829361 29.18452644]
[8.98854446 18.51149178]
[-1.55120516 7.83845663]
[-12.09095478 -2.83457828]
[-22.63070488 -13.50761318]
[-33.17045212 -24.18064880]
[-43.90950012 -34.65312958]
[-54.84403229 -44.92133713]
[-65.77855682 -55.18954468]
[-76.71308899 -65.45774841]
[-87.64762115 -75.72595978]
[-98.58214569 -85.99416351]
[-109.51667786 -96.26236725]
[-124.87311554 -100.06898499]
[-128.85435486 -114.42165375]
[-139.78887939 -124.68985748]
[-155.86961365 -127.90579224]
[-160.86787415 -143.52467346]
[-149.64187622 -155.47914124]
[-133.73997498 -151.47145081]
[-129.52067566 -135.62438965]
[-118.58614349 -125.35618591]
[-104.01181793 -122.28401947]
[-99.24847412 -107.19689941]
[-88.31394196 -96.92869568]
[-77.37940979 -86.66048431]
[-66.44488525 -76.39228058]
[-55.51035309 -66.12406921]
[-44.57582474 -55.85586548]
[-33.64129257 -45.58765793]
[-30.14916801 -45.32348251]
[-26.60847664 -43.37020493]
[-23.80476952 -39.72183609]
[-22.49741936 -34.72039795]
[-11.95766926 -24.04736328]
[-1.41791952 -13.37432766]
[9.12182999 -2.70129275]
[19.66157913 7.97174263]
[30.20132828 18.64477730]
[40.74107742 29.31781197]
[51.28082657 39.99084854]
[61.82057953 50.66388321]
[72.36032867 61.33691788]
[86.16801453 54.53065109]
[101.42687225 52.49474335]
[104.23759460 37.76043320]
[107.04830933 23.02612495]
[109.85903168 8.29181671]
[112.66974640 -6.44249201]
[115.48046875 -21.17680168]
[106.86502838 -34.15416336]
[109.92539215 -49.05680847]
[122.35041809 -57.19033813]
[125.16114044 -71.92464447]
[127.97186279 -86.65895844]
[130.78257751 -101.39326477]
[124.88139343 -116.69385529]
[135.39065552 -129.28303528]
[151.49932861 -126.21014404]
[156.63619995 -110.63630676]
[145.51689148 -98.58254242]
[142.70616150 -83.84823608]
[139.89544678 -69.11392975]
[137.08473206 -54.37961960]
[145.64306641 -42.24329758]
[143.00250244 -27.26057243]
[130.21478271 -18.36608124]
[127.40406036 -3.63177228]
[124.59333801 11.10253620]
[121.78262329 25.83684540]
[118.97190094 40.57115555]
[116.16117859 55.30546188]
[120.34578705 57.04846573]
[124.34529877 59.18221283]
[128.12333679 61.68729401]
[138.79637146 51.14754105]
[143.17906189 35.94548798]
[157.67158508 32.50803375]
[168.34461975 21.96828461]
[179.01765442 11.42853546]
[182.83738708 -4.51955795]
[198.63356018 -8.92558861]
[210.15641785 2.74298978]
[205.55224609 18.48254395]
[189.55740356 22.10157013]
[178.88436890 32.64131927]
[168.21133423 43.18106842]
[164.59204102 57.62925339]
[149.33612061 61.82057953]
[138.66308594 72.36032867]
[145.96844482 87.92989349]
[147.25440979 105.08000183]
[142.35256958 121.56489563]
[131.90483093 135.22595215]
[117.27925110 144.27429199]
[120.45935822 158.93331909]
[123.63946533 173.59233093]
[126.81957245 188.25135803]
[129.99967957 202.91038513]
[133.17979431 217.56939697]
[136.35989380 232.22842407]
[139.53999329 246.88743591]
[142.72010803 261.54647827]
[145.90020752 276.20547485]
[156.38735962 288.05160522]
[151.52421570 302.12991333]
[154.70433044 316.78894043]
[159.44216919 311.81811523]
[165.66441345 308.00869751]
[173.11660767 305.67803955]
[188.11186218 306.05499268]
[203.10713196 306.43194580]
[217.24426270 298.12088013]
[231.37503052 306.44274902]
[230.96290588 322.83670044]
[216.43186951 330.43807983]
[202.73017883 321.42718506]
[187.73490906 321.05023193]
[172.73965454 320.67330933]
[185.71852112 328.19320679]
[200.53103638 330.55734253]
[211.82057190 340.43389893]
[216.13262939 354.80075073]
[212.14776611 369.26177979]
[201.08531189 379.39202881]
[186.33026123 382.09176636]
[172.39752197 376.53488159]
[163.55038452 364.42175293]
[162.49624634 349.45761108]
[156.14561462 335.86828613]
[155.20375061 350.83868408]
[162.05926514 365.09744263]
[153.53808594 377.31378174]
[152.59622192 392.28417969]
[151.65435791 407.25457764]
[150.71250916 422.22497559]
[163.39520264 430.77462769]
[170.05168152 444.43435669]
[168.98426819 459.49182129]
[160.57954407 471.91018677]
[147.17761230 478.41049194]
[146.23574829 493.38088989]
[145.29389954 508.35131836]
[144.35203552 523.32171631]
[143.41018677 538.29211426]
[142.46832275 553.26251221]
[141.52645874 568.23291016]
[144.10311890 574.27722168]
[143.36911011 579.88055420]
[140.36816406 583.56622314]
[139.05039978 598.50817871]
[137.73263550 613.45019531]
[136.41485596 628.39221191]
[135.09709167 643.33422852]
[133.77932739 658.27624512]
[142.09934998 645.79516602]
[153.50645447 636.05462646]
[168.19107056 632.99487305]
[182.53915405 637.36889648]
[193.01951599 648.10021973]
[197.05282593 662.54779053]
[193.64645386 677.15594482]
[183.63716125 688.33038330]
[174.10650635 676.74737549]
[176.91723633 691.48168945]
[179.72795105 706.21594238]
[190.84725952 718.26971436]
[185.71038818 733.84356689]
[169.60171509 736.91644287]
[159.09245300 724.32727051]
[164.99363708 709.02667236]
[162.18292236 694.29235840]
[159.37220764 679.55804443]
[151.90119934 678.89916992]
[150.58319092 693.84118652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[6 23]
[7 22]
[8 21]
[9 20]
[28 229]
[29 228]
[30 227]
[31 226]
[32 225]
[33 224]
[34 221]
[35 220]
[36 219]
[37 218]
[38 217]
[39 216]
[40 215]
[45 210]
[46 209]
[47 208]
[48 207]
[50 205]
[51 204]
[52 181]
[53 180]
[55 178]
[56 177]
[57 176]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
[78 110]
[79 109]
[80 108]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[89 96]
[90 95]
[119 146]
[120 145]
[121 144]
[122 143]
[123 142]
[124 141]
[127 138]
[128 137]
[129 136]
[130 135]
[149 164]
[150 163]
[152 161]
[153 160]
[154 159]
[184 193]
[185 192]
[186 191]
[238 247]
[239 246]
[240 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
