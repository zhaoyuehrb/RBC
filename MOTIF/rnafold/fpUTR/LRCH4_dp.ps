%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LRCH4)
} def

/sequence { (\
GAGGCAACUACGGCGGCUCCAAGGAGGGGGUGGGGGAAGGAGGGACGGCCGGUCCCGUCAGUCAGGCAGCGGGAGCCGCCGGGAGCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.178204052 ubox
3 8 0.183662067 ubox
3 9 0.025981365 ubox
4 8 0.026376880 ubox
4 86 0.915326215 ubox
5 85 0.914927733 ubox
8 82 0.583582047 ubox
8 83 0.511288557 ubox
8 85 0.200056903 ubox
8 88 0.010201976 ubox
9 81 0.266379966 ubox
9 82 0.464340386 ubox
9 84 0.198535664 ubox
9 87 0.008981020 ubox
11 81 0.952040196 ubox
12 80 0.999689680 ubox
13 79 0.999994487 ubox
14 78 0.999981314 ubox
15 77 0.999977797 ubox
16 76 0.999994278 ubox
17 75 0.999987155 ubox
18 73 0.018282721 ubox
18 74 0.999667977 ubox
19 27 0.004131263 ubox
19 28 0.004475871 ubox
19 72 0.042234017 ubox
19 73 0.999071674 ubox
20 26 0.005109467 ubox
20 27 0.005689657 ubox
20 29 0.003227984 ubox
20 71 0.056661770 ubox
20 72 0.997812770 ubox
23 55 0.008328305 ubox
23 59 0.065272031 ubox
23 63 0.006688075 ubox
24 54 0.008369632 ubox
24 58 0.063985679 ubox
24 59 0.117567963 ubox
24 62 0.003832103 ubox
24 63 0.017582890 ubox
25 53 0.008248474 ubox
25 58 0.117171735 ubox
25 62 0.017327928 ubox
26 56 0.111699134 ubox
26 63 0.013536140 ubox
27 55 0.111812013 ubox
27 56 0.113181333 ubox
27 62 0.012442462 ubox
27 63 0.055475740 ubox
28 50 0.008387708 ubox
28 54 0.111813945 ubox
28 55 0.113187928 ubox
28 56 0.007950296 ubox
28 59 0.009716303 ubox
28 62 0.047577888 ubox
28 63 0.913060870 ubox
29 49 0.008405759 ubox
29 53 0.111353436 ubox
29 54 0.113158937 ubox
29 55 0.008134416 ubox
29 58 0.008474403 ubox
29 59 0.019598399 ubox
29 62 0.905167690 ubox
29 63 0.122857338 ubox
30 53 0.106659521 ubox
30 54 0.008302474 ubox
30 58 0.018949694 ubox
30 62 0.112766985 ubox
30 67 0.149218930 ubox
30 70 0.070484501 ubox
31 47 0.008427066 ubox
31 51 0.112803905 ubox
31 52 0.100128341 ubox
31 57 0.019599825 ubox
31 60 0.926420804 ubox
31 61 0.015163201 ubox
31 64 0.065605082 ubox
31 66 0.148557903 ubox
31 68 0.271330769 ubox
31 69 0.058820514 ubox
31 71 0.015165117 ubox
32 46 0.008512611 ubox
32 50 0.113223982 ubox
32 56 0.023434538 ubox
32 59 0.926368045 ubox
32 63 0.065918559 ubox
32 67 0.274939472 ubox
32 70 0.015546770 ubox
33 49 0.113044767 ubox
33 50 0.110498971 ubox
33 55 0.023455074 ubox
33 56 0.069241530 ubox
33 58 0.833054321 ubox
33 59 0.011325999 ubox
33 62 0.064213372 ubox
33 63 0.029452062 ubox
34 49 0.110422129 ubox
34 50 0.016971751 ubox
34 54 0.023385685 ubox
34 55 0.070120549 ubox
34 56 0.910625681 ubox
34 58 0.005566019 ubox
34 59 0.004124669 ubox
34 62 0.029456648 ubox
34 63 0.073619851 ubox
35 49 0.017851267 ubox
35 50 0.005818756 ubox
35 53 0.022639038 ubox
35 54 0.069986388 ubox
35 55 0.911921937 ubox
35 56 0.136254934 ubox
35 59 0.006277394 ubox
35 62 0.071787444 ubox
35 63 0.063379562 ubox
36 49 0.005848747 ubox
36 53 0.067507283 ubox
36 54 0.912464048 ubox
36 55 0.123352213 ubox
36 58 0.004439621 ubox
36 59 0.020597153 ubox
36 62 0.061257664 ubox
36 63 0.303144755 ubox
37 53 0.904503026 ubox
37 58 0.017750438 ubox
37 62 0.302055669 ubox
39 50 0.502587923 ubox
39 54 0.042688431 ubox
39 55 0.032209591 ubox
39 59 0.142174954 ubox
40 49 0.502366931 ubox
40 53 0.040815405 ubox
40 54 0.044916093 ubox
40 58 0.145343207 ubox
40 59 0.292467935 ubox
40 63 0.004850391 ubox
41 53 0.044135712 ubox
41 58 0.285152370 ubox
41 62 0.004842958 ubox
42 50 0.741020329 ubox
42 55 0.003170072 ubox
42 56 0.343785783 ubox
43 49 0.740692561 ubox
43 50 0.224367069 ubox
43 54 0.003444626 ubox
43 55 0.346133046 ubox
43 56 0.015810791 ubox
44 49 0.224138604 ubox
44 54 0.348167312 ubox
44 55 0.011251747 ubox
44 59 0.005331306 ubox
45 53 0.348335513 ubox
45 58 0.005361599 ubox
46 52 0.348348496 ubox
46 57 0.005373650 ubox
47 56 0.005371193 ubox
48 55 0.005329762 ubox
56 71 0.004860473 ubox
57 67 0.093984078 ubox
57 70 0.008828350 ubox
58 66 0.094028278 ubox
58 69 0.008621455 ubox
59 65 0.093856855 ubox
59 71 0.005105532 ubox
61 67 0.047300228 ubox
61 70 0.073738985 ubox
62 66 0.044289381 ubox
62 69 0.071581609 ubox
63 71 0.018078577 ubox
81 86 0.009133145 ubox
4 86 0.9500000 lbox
5 85 0.9500000 lbox
11 81 0.9500000 lbox
12 80 0.9500000 lbox
13 79 0.9500000 lbox
14 78 0.9500000 lbox
15 77 0.9500000 lbox
16 76 0.9500000 lbox
17 75 0.9500000 lbox
18 74 0.9500000 lbox
19 73 0.9500000 lbox
20 72 0.9500000 lbox
28 63 0.9500000 lbox
29 62 0.9500000 lbox
31 60 0.9500000 lbox
32 59 0.9500000 lbox
33 58 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
showpage
end
%%EOF
