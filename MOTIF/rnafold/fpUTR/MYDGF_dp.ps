%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYDGF)
} def

/sequence { (\
GGCGGACGCUCCACGUGUCCCUCGCCGCGCCCCGUCUACCCGCCCCUGCCCUGAGGACCCUAGUCCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.008193746 ubox
1 22 0.040251119 ubox
1 23 0.080046601 ubox
1 26 0.945426146 ubox
1 31 0.053154381 ubox
1 32 0.004075017 ubox
1 33 0.015200596 ubox
1 36 0.040633466 ubox
1 40 0.048684952 ubox
1 41 0.024614646 ubox
1 44 0.239178080 ubox
1 45 0.016048863 ubox
1 46 0.008325800 ubox
1 50 0.160922156 ubox
1 51 0.018794189 ubox
1 59 0.005200022 ubox
1 60 0.005320724 ubox
1 65 0.011848305 ubox
1 66 0.012758653 ubox
2 20 0.005995830 ubox
2 21 0.056657022 ubox
2 22 0.073527417 ubox
2 25 0.946155676 ubox
2 28 0.012192222 ubox
2 30 0.053383381 ubox
2 31 0.003235749 ubox
2 32 0.015155869 ubox
2 35 0.040971887 ubox
2 39 0.049013489 ubox
2 40 0.024134142 ubox
2 43 0.240205088 ubox
2 44 0.011996909 ubox
2 45 0.007822649 ubox
2 49 0.161759199 ubox
2 50 0.015611928 ubox
2 58 0.005180566 ubox
2 59 0.005231839 ubox
2 64 0.012067313 ubox
2 65 0.012360633 ubox
3 24 0.945560517 ubox
3 27 0.012233641 ubox
3 29 0.053413715 ubox
3 34 0.041151800 ubox
3 42 0.240425809 ubox
3 48 0.161914588 ubox
3 63 0.015706242 ubox
4 12 0.004881724 ubox
4 19 0.003292153 ubox
4 20 0.869618351 ubox
4 21 0.077687496 ubox
4 22 0.010236881 ubox
4 23 0.419173279 ubox
4 26 0.008151220 ubox
4 28 0.023183952 ubox
4 31 0.015247161 ubox
4 32 0.007995915 ubox
4 33 0.039732123 ubox
4 37 0.079901792 ubox
4 40 0.014034764 ubox
4 41 0.223664810 ubox
4 46 0.007023067 ubox
4 47 0.028866283 ubox
4 66 0.005905364 ubox
5 11 0.004965573 ubox
5 19 0.963123812 ubox
5 20 0.061114915 ubox
5 21 0.040017347 ubox
5 22 0.088813289 ubox
5 25 0.006826358 ubox
5 30 0.015341353 ubox
5 31 0.010790080 ubox
5 32 0.038856091 ubox
5 36 0.135633295 ubox
5 39 0.017161487 ubox
5 40 0.193234355 ubox
5 45 0.006039787 ubox
5 46 0.022825978 ubox
5 65 0.005893135 ubox
6 10 0.004389708 ubox
6 16 0.018391725 ubox
6 18 0.970381839 ubox
6 35 0.202298123 ubox
6 64 0.005848607 ubox
7 15 0.018938506 ubox
7 17 0.970701682 ubox
7 29 0.042871260 ubox
7 34 0.203251607 ubox
7 42 0.006345223 ubox
7 63 0.005820631 ubox
8 14 0.019387667 ubox
8 16 0.970059709 ubox
8 18 0.012878815 ubox
8 28 0.043163437 ubox
8 30 0.015376117 ubox
8 33 0.201593901 ubox
8 35 0.080042183 ubox
8 41 0.006210622 ubox
8 43 0.011723242 ubox
9 15 0.969821061 ubox
9 17 0.013107536 ubox
9 27 0.043076389 ubox
9 29 0.015635485 ubox
9 34 0.081217829 ubox
9 42 0.011703405 ubox
13 35 0.010086333 ubox
14 24 0.022764546 ubox
14 27 0.053563564 ubox
14 29 0.208897546 ubox
14 34 0.010351017 ubox
15 23 0.022816457 ubox
15 25 0.061195181 ubox
15 26 0.047068069 ubox
15 28 0.210490911 ubox
15 30 0.076544705 ubox
15 33 0.006282963 ubox
16 24 0.066866322 ubox
16 27 0.210339662 ubox
16 29 0.076830696 ubox
17 23 0.067008093 ubox
17 25 0.048820307 ubox
17 26 0.207556436 ubox
17 28 0.076982032 ubox
17 58 0.005445509 ubox
18 24 0.055891670 ubox
18 27 0.076327361 ubox
18 57 0.005465689 ubox
19 56 0.004476797 ubox
20 55 0.003182366 ubox
20 56 0.012743401 ubox
21 55 0.026406051 ubox
22 54 0.047610197 ubox
23 29 0.015857519 ubox
23 34 0.024469368 ubox
23 42 0.012233977 ubox
23 48 0.004821531 ubox
23 53 0.050627703 ubox
24 28 0.016243956 ubox
24 30 0.056162553 ubox
24 33 0.025243538 ubox
24 35 0.023785050 ubox
24 41 0.013403510 ubox
24 43 0.028687171 ubox
24 47 0.006792203 ubox
24 49 0.044578614 ubox
24 52 0.045187775 ubox
25 29 0.055878448 ubox
25 34 0.024335269 ubox
25 42 0.027969216 ubox
25 48 0.044474926 ubox
26 34 0.029525149 ubox
26 42 0.009305904 ubox
26 48 0.005905828 ubox
26 53 0.008541520 ubox
27 33 0.036628378 ubox
27 35 0.272198582 ubox
27 41 0.013925385 ubox
27 43 0.625584472 ubox
27 47 0.008290232 ubox
27 49 0.520964031 ubox
27 52 0.009483407 ubox
27 64 0.037912940 ubox
28 34 0.284621547 ubox
28 42 0.626781714 ubox
28 48 0.521856597 ubox
28 53 0.019379176 ubox
28 63 0.039523669 ubox
29 33 0.266773197 ubox
29 35 0.042765893 ubox
29 41 0.610280123 ubox
29 43 0.158941219 ubox
29 47 0.461956546 ubox
29 49 0.157709263 ubox
29 52 0.011255991 ubox
29 64 0.020346720 ubox
30 34 0.051223314 ubox
30 42 0.158957285 ubox
30 48 0.157802770 ubox
30 56 0.004777801 ubox
30 63 0.021183843 ubox
31 55 0.004853152 ubox
31 56 0.006695771 ubox
32 55 0.006707055 ubox
32 56 0.020277757 ubox
33 42 0.449952000 ubox
33 48 0.011945717 ubox
33 53 0.017314748 ubox
33 55 0.020537200 ubox
34 41 0.446511879 ubox
34 43 0.267979370 ubox
34 47 0.010059444 ubox
34 49 0.022467190 ubox
34 52 0.014020397 ubox
34 58 0.068213839 ubox
34 64 0.003380075 ubox
34 69 0.010779846 ubox
35 42 0.258969097 ubox
35 48 0.021652367 ubox
35 54 0.095473603 ubox
35 56 0.015697888 ubox
35 57 0.068151355 ubox
35 68 0.010266159 ubox
36 53 0.105158646 ubox
36 55 0.025287989 ubox
36 56 0.067325329 ubox
36 63 0.020603217 ubox
37 48 0.013329253 ubox
37 53 0.028388741 ubox
37 54 0.038267759 ubox
37 55 0.064229755 ubox
37 62 0.020778621 ubox
38 47 0.015188181 ubox
38 52 0.032414926 ubox
38 61 0.019956836 ubox
38 64 0.010603685 ubox
39 56 0.007394632 ubox
39 63 0.011396405 ubox
40 55 0.007658009 ubox
40 56 0.010155891 ubox
41 48 0.052380929 ubox
41 53 0.042492092 ubox
41 55 0.010345031 ubox
42 47 0.036293916 ubox
42 49 0.291294476 ubox
42 52 0.024850965 ubox
42 64 0.004366367 ubox
43 48 0.290607794 ubox
43 56 0.007063563 ubox
43 63 0.004560237 ubox
44 55 0.007118081 ubox
44 56 0.014846219 ubox
45 55 0.012823843 ubox
45 56 0.176438982 ubox
46 55 0.179050810 ubox
46 56 0.004629703 ubox
46 63 0.006240767 ubox
47 53 0.016371782 ubox
47 54 0.184157510 ubox
47 55 0.004642410 ubox
47 62 0.006255914 ubox
47 67 0.014728507 ubox
48 52 0.011643876 ubox
48 61 0.006040250 ubox
48 66 0.014862006 ubox
49 56 0.016592521 ubox
50 55 0.016995524 ubox
50 56 0.012539372 ubox
51 55 0.012627850 ubox
51 63 0.017730879 ubox
52 62 0.017482190 ubox
52 67 0.035014745 ubox
53 61 0.013466523 ubox
53 65 0.003948189 ubox
53 66 0.020035397 ubox
54 61 0.013118818 ubox
54 64 0.003956193 ubox
55 60 0.015627423 ubox
55 65 0.008254211 ubox
55 66 0.978506549 ubox
56 64 0.005445671 ubox
56 65 0.980391237 ubox
57 64 0.980013829 ubox
58 63 0.975796941 ubox
63 69 0.012014479 ubox
64 68 0.010955550 ubox
1 26 0.9500000 lbox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 20 0.9500000 lbox
5 19 0.9500000 lbox
6 18 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
