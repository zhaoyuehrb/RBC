%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGCGUCCUCUACUAGUGGCCAUUUUGAUUGGUGUUGGGUGUAUUUUCCAGUGAGAGACCGCGGAGUGUUGGGUCGUGUAGAAGUGACUGAACCCAGAAGGUGGAGACGAGACGUUGUCCCGACUGCACAGAGGCUGCUCUGCAGCUCCUUAAAGGCGCUAGGCGUGACCCGCACCAAGGCCGGGAUCGGGACCACCGUGCCCGGGUACCUGCACUGCUCGCCCCCUCCUUUCGACCCCGCUUUCCCCAC\
CCAGUCGG\
) } def
/len { sequence length } bind def

/coor [
[119.45674133 1076.26562500]
[104.71589661 1082.59704590]
[90.64363861 1074.89306641]
[88.03500366 1059.06359863]
[98.89110565 1047.25146484]
[99.60483551 1032.26855469]
[100.31856537 1017.28552246]
[101.03229523 1002.30249023]
[101.74602509 987.31945801]
[86.89373016 982.69439697]
[73.73406982 974.37860107]
[63.16603088 962.93334961]
[55.91333008 949.13403320]
[52.47483826 933.91729736]
[53.09027863 918.31793213]
[57.72351456 903.39813232]
[66.06462097 890.17529297]
[77.55061340 879.55285645]
[91.40344238 872.25805664]
[106.68267822 868.79278564]
[107.21806335 853.80236816]
[107.75344849 838.81188965]
[108.28883362 823.82147217]
[108.82421875 808.83105469]
[100.10982513 803.51287842]
[94.32989502 795.00012207]
[92.57453918 784.77960205]
[95.22374725 774.67022705]
[101.86759186 766.49914551]
[111.36812592 761.77136230]
[112.43820953 746.80963135]
[113.50830078 731.84783936]
[114.57838440 716.88604736]
[104.66078186 705.83270264]
[105.53286743 690.64404297]
[117.19389343 680.31652832]
[118.26397705 665.35473633]
[107.30933380 657.75500488]
[101.48622131 645.64111328]
[102.40830231 632.12353516]
[109.94175720 620.73217773]
[122.21247864 614.49432373]
[123.46053314 599.54632568]
[124.70858002 584.59838867]
[125.95663452 569.65039062]
[127.20468903 554.70239258]
[119.82512665 550.43048096]
[114.19023132 543.97326660]
[110.92387390 536.00311279]
[110.40132904 527.36212158]
[112.70640564 518.97290039]
[117.61945343 511.74038696]
[124.63801575 506.45391846]
[133.02810669 503.70138550]
[135.16282654 488.85406494]
[137.29754639 474.00674438]
[139.43226624 459.15942383]
[141.56700134 444.31210327]
[143.61334229 429.45233154]
[145.57122803 414.58065796]
[136.32846069 402.95712280]
[138.10218811 387.84722900]
[150.35670471 378.23138428]
[152.31459045 363.35971069]
[154.27249146 348.48803711]
[154.23818970 317.86755371]
[152.10346985 303.02023315]
[137.33659363 295.81561279]
[129.70788574 281.07565308]
[132.40673828 264.53085327]
[144.56315613 252.74763489]
[142.25189209 237.92677307]
[139.94064331 223.10591125]
[137.62939453 208.28503418]
[133.50717163 202.18041992]
[135.37991333 193.27415466]
[133.24519348 178.42683411]
[131.11047363 163.57951355]
[128.97575378 148.73219299]
[126.84102631 133.88485718]
[69.14544678 96.53960419]
[60.88624573 84.01819611]
[52.62704849 71.49679565]
[44.36785126 58.97538376]
[36.10865402 46.45397568]
[27.84945488 33.93256760]
[21.44683075 36.66808701]
[14.03283405 37.51542664]
[6.18847656 36.13818741]
[-1.40176046 32.38302612]
[-8.00805283 26.30940819]
[-12.92134666 18.20094490]
[-15.52167702 8.55633926]
[-26.50009537 -1.66492987]
[-37.47851181 -11.88619900]
[-53.57287216 -15.03321171]
[-58.63799667 -30.63053703]
[-47.46332169 -42.63298416]
[-31.54439735 -38.69346237]
[-27.25724411 -22.86461639]
[-16.27882576 -12.64334774]
[-5.30040789 -2.42207861]
[0.93561417 -6.58885527]
[-7.39774656 -19.06102753]
[5.07455492 -27.39419556]
[13.40765858 -14.92240906]
[19.64368057 -19.08918571]
[14.40171814 -33.14343262]
[9.15975475 -47.19767761]
[3.24776149 -54.11700439]
[3.94012451 -61.45047760]
[-1.13422573 -75.56610107]
[-6.20857620 -89.68173218]
[-11.28292656 -103.79736328]
[-16.35727692 -117.91298676]
[-29.22046852 -128.08502197]
[-26.57542419 -144.26945496]
[-11.14313793 -149.81712341]
[1.20097518 -139.02107239]
[-2.24164844 -122.98734283]
[2.83270192 -108.87171173]
[7.90705252 -94.75608063]
[12.98140240 -80.64045715]
[18.05575371 -66.52482605]
[23.21400070 -52.43964005]
[28.45596313 -38.38539505]
[33.69792557 -24.33114815]
[50.94724274 2.27403951]
[40.37086487 25.67337036]
[48.63006210 38.19477844]
[56.88925934 50.71618652]
[65.14846039 63.23759460]
[73.40765381 75.75900269]
[81.66685486 88.28041077]
[96.52661133 86.23406219]
[101.09391022 71.94631195]
[97.92597198 56.44551849]
[109.17115784 46.67848206]
[113.73845673 32.39073181]
[118.30575562 18.10298347]
[122.87305450 3.81523395]
[127.44034576 -10.47251606]
[132.00764465 -24.76026535]
[131.07121277 -41.68833160]
[147.07849121 -47.27432632]
[156.87744141 -33.43897629]
[146.29539490 -20.19296837]
[141.72810364 -5.90521860]
[137.16079712 8.38253117]
[132.59350586 22.67028046]
[128.02619934 36.95803070]
[123.45890808 51.24578094]
[126.95353699 65.72462463]
[115.38166046 76.51361084]
[110.81436157 90.80136108]
[117.17156982 94.78079987]
[125.13044739 82.06639099]
[138.38023376 75.03479767]
[137.84486389 90.02526855]
[129.88598633 102.73967743]
[136.24317932 106.71911621]
[147.09919739 96.36793518]
[157.95520020 86.01674652]
[168.81121826 75.66556549]
[176.10208130 60.35936737]
[192.82841492 63.12813187]
[194.79817200 79.96726227]
[179.16239929 86.52157593]
[168.30639648 96.87275696]
[157.45037842 107.22394562]
[146.59437561 117.57512665]
[141.68835449 131.75013733]
[143.82307434 146.59745789]
[145.95779419 161.44477844]
[148.09251404 176.29211426]
[150.22724915 191.13943481]
[152.45027161 205.97378540]
[154.76152039 220.79464722]
[157.07276917 235.61552429]
[159.38401794 250.43638611]
[172.06848145 255.78295898]
[180.39538574 266.60787964]
[182.27944946 280.02517700]
[177.33537292 292.52365112]
[166.95079041 300.88549805]
[169.08551025 315.73281860]
[180.42175293 325.55575562]
[195.42175293 325.55575562]
[210.42175293 325.55575562]
[225.42175293 325.55575562]
[236.55488586 314.66119385]
[251.76701355 314.87487793]
[262.08468628 325.55575562]
[277.08468628 325.55575562]
[292.08468628 325.55575562]
[304.39993286 315.27398682]
[320.08743286 318.63284302]
[327.11306763 333.05575562]
[320.08743286 347.47863770]
[304.39993286 350.83752441]
[292.08468628 340.55575562]
[277.08468628 340.55575562]
[262.08468628 340.55575562]
[251.76701355 351.23660278]
[236.55488586 351.45028687]
[225.42175293 340.55575562]
[210.42175293 340.55575562]
[195.42175293 340.55575562]
[180.42175293 340.55575562]
[169.14416504 350.44592285]
[167.18626404 365.31759644]
[165.22837830 380.18927002]
[174.57656860 392.64916992]
[172.37911987 407.70327759]
[160.44290161 416.53857422]
[158.48501587 431.41024780]
[160.46360779 440.29357910]
[156.41432190 446.44680786]
[154.27958679 461.29415894]
[152.14486694 476.14147949]
[150.01014709 490.98880005]
[147.87542725 505.83612061]
[162.18276978 522.33709717]
[159.55674744 543.72961426]
[142.15267944 555.95043945]
[140.90461731 570.89843750]
[139.65657043 585.84643555]
[138.40852356 600.79443359]
[137.16046143 615.74237061]
[150.12651062 626.62835693]
[153.99877930 642.93847656]
[147.44105530 658.18511963]
[133.22575378 666.42480469]
[132.15567017 681.38659668]
[142.22824097 693.26855469]
[140.92988586 708.42669678]
[129.54017639 717.95611572]
[128.47007751 732.91790771]
[127.39999390 747.87969971]
[126.32990265 762.84149170]
[140.26840210 777.35357666]
[139.00675964 797.12829590]
[123.81466675 809.36639404]
[123.27928162 824.35687256]
[122.74389648 839.34729004]
[122.20851135 854.33776855]
[121.67312622 869.32818604]
[135.57768250 873.39422607]
[148.09562683 880.66723633]
[158.50061035 890.72003174]
[166.19017029 902.96423340]
[170.72056580 916.68469238]
[171.83239746 931.08142090]
[169.46548462 945.31616211]
[163.76203918 958.56109619]
[155.05819702 970.04705811]
[143.86415100 979.10833740]
[130.83433533 985.22094727]
[116.72903442 988.03320312]
[116.01530457 1003.01623535]
[115.30157471 1017.99920654]
[114.58784485 1032.98217773]
[113.87411499 1047.96520996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 263]
[6 262]
[7 261]
[8 260]
[9 259]
[20 247]
[21 246]
[22 245]
[23 244]
[24 243]
[30 240]
[31 239]
[32 238]
[33 237]
[36 234]
[37 233]
[42 229]
[43 228]
[44 227]
[45 226]
[46 225]
[54 222]
[55 221]
[56 220]
[57 219]
[58 218]
[59 216]
[60 215]
[63 212]
[64 211]
[65 210]
[66 186]
[67 185]
[71 180]
[72 179]
[73 178]
[74 177]
[76 176]
[77 175]
[78 174]
[79 173]
[80 172]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[93 102]
[94 101]
[95 100]
[107 127]
[108 126]
[109 125]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
[135 155]
[136 154]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
[161 171]
[162 170]
[163 169]
[164 168]
[187 209]
[188 208]
[189 207]
[190 206]
[193 203]
[194 202]
[195 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
