%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAAACGCACCGGAAGUGGGUCCGGCGGCUUUCUUUCCGUCGCAGAGAGCAUCGGCCGGCGACCGUUCCGGCGGCCAUUGCGAAAACUUCCCCACGGCUACUGCGUCCACGUGGCGGUGGCGUGGGGACUCCCUGAAAGCAGAGCGGCAGGGCGCCCGGAAGUCGUGAGUCGAGUCUUCCCGGGCUAAUCC\
) } def
/len { sequence length } bind def

/coor [
[51.06116867 126.00814819]
[46.73785019 115.31589508]
[31.89365578 117.47224426]
[17.04945946 119.62860107]
[2.20526505 121.78495789]
[-12.63893032 123.94131470]
[-27.48312569 126.09766388]
[-34.24795151 137.75325012]
[-46.31612396 143.29992676]
[-59.18404007 140.91458130]
[-68.19023132 131.68937683]
[-83.06707764 133.60754395]
[-97.43491364 145.11560059]
[-113.35518646 137.74496460]
[-128.19938660 139.90132141]
[-143.04357910 142.05767822]
[-157.88777161 144.21403503]
[-172.73196411 146.37039185]
[-187.57615662 148.52674866]
[-195.63063049 152.86219788]
[-202.67535400 150.59672546]
[-217.55220032 152.51487732]
[-232.42906189 154.43302917]
[-242.85363770 168.47366333]
[-259.87173462 170.59524536]
[-272.90093994 159.97029114]
[-287.74514771 162.12664795]
[-302.58935547 164.28300476]
[-317.43353271 166.43936157]
[-332.27774048 168.59571838]
[-348.24478149 182.87588501]
[-367.08792114 174.47175598]
[-381.81130981 177.33912659]
[-396.53469849 180.20651245]
[-411.25808716 183.07388306]
[-425.98147583 185.94126892]
[-440.70486450 188.80865479]
[-455.42825317 191.67602539]
[-461.03851318 206.04711914]
[-473.54116821 215.08520508]
[-488.94668579 215.90626526]
[-502.33917236 208.24829102]
[-509.44515991 194.55491638]
[-507.99716187 179.19566345]
[-498.45721436 167.07159424]
[-483.86950684 162.05146790]
[-468.88888550 165.73718262]
[-458.29562378 176.95263672]
[-443.57223511 174.08526611]
[-428.84884644 171.21788025]
[-414.12545776 168.35049438]
[-399.40206909 165.48312378]
[-384.67868042 162.61573792]
[-369.95529175 159.74836731]
[-366.24810791 151.65672302]
[-359.12039185 146.09947205]
[-350.09823608 144.42726135]
[-341.18887329 147.14106750]
[-334.43408203 153.75151062]
[-319.58990479 151.59516907]
[-304.74569702 149.43881226]
[-289.90151978 147.28245544]
[-275.05731201 145.12609863]
[-268.86614990 133.81745911]
[-257.11492920 128.05703735]
[-243.99926758 130.15122986]
[-234.34721375 139.55618286]
[-219.47036743 137.63803101]
[-204.59352112 135.71986389]
[-189.73251343 133.68254089]
[-174.88832092 131.52618408]
[-160.04412842 129.36984253]
[-145.19993591 127.21347809]
[-130.35572815 125.05712891]
[-115.51153564 122.90077209]
[-108.02105713 113.39245605]
[-95.66274261 111.48060608]
[-84.98523712 118.73069000]
[-70.10839081 116.81253052]
[-60.41933060 103.07308960]
[-43.45814514 100.53639221]
[-29.63948059 111.25347137]
[-14.79528522 109.09711456]
[0.04891006 106.94076538]
[14.89310551 104.78440857]
[29.73730087 102.62805176]
[44.58149719 100.47169495]
[47.21364594 83.11705780]
[55.14107513 67.45603180]
[67.56854248 55.05966949]
[83.24937439 47.17150497]
[100.61055756 44.58285141]
[117.91049194 47.55338669]
[124.63452148 34.14490128]
[131.35855103 20.73641777]
[138.08258057 7.32793474]
[144.80661011 -6.08054876]
[151.53063965 -19.48903275]
[158.25466919 -32.89751816]
[164.97869873 -46.30599976]
[166.03097534 -55.39244461]
[171.91946411 -59.87421036]
[178.85752869 -73.17320251]
[185.79560852 -86.47219086]
[192.73368835 -99.77117920]
[199.67175293 -113.07016754]
[206.60983276 -126.36915588]
[213.54791260 -139.66815186]
[205.81007385 -153.01466370]
[206.53910828 -168.42478943]
[215.50234985 -180.98121643]
[229.83967590 -186.67723083]
[244.97610474 -183.69525146]
[256.08163452 -172.98681641]
[259.61254883 -157.96894836]
[254.44215393 -143.43380737]
[242.22027588 -134.01948547]
[226.84689331 -132.73007202]
[219.90882874 -119.43108368]
[212.97074890 -106.13209534]
[206.03266907 -92.83310699]
[199.09460449 -79.53411865]
[192.15652466 -66.23512268]
[185.21844482 -52.93613815]
[178.38717651 -39.58197021]
[171.66314697 -26.17348671]
[164.93911743 -12.76500320]
[158.21508789 0.64348006]
[151.49105835 14.05196381]
[144.76702881 27.46044731]
[138.04299927 40.86893082]
[131.31896973 54.27741623]
[142.09762573 63.95526886]
[150.00018311 76.09570312]
[154.48670959 89.86927032]
[169.46937561 89.14826965]
[184.45202637 88.42726135]
[199.43469238 87.70625305]
[214.41735840 86.98525238]
[222.27012634 76.03310394]
[234.81513977 71.67088318]
[247.39454651 75.28081512]
[255.47329712 85.32818604]
[270.46557617 84.84741974]
[286.10278320 78.29651642]
[296.72647095 91.50913239]
[286.97116089 105.37527466]
[270.94635010 99.83970642]
[255.95407104 100.32048035]
[244.99047852 113.06607056]
[227.86408997 113.96237946]
[215.13836670 101.96791077]
[200.15570068 102.68891907]
[185.17303467 103.40991974]
[170.19038391 104.13092804]
[155.20771790 104.85193634]
[151.03025818 121.61817169]
[141.89242554 136.28302002]
[151.79766846 147.54739380]
[161.70291138 158.81176758]
[171.60815430 170.07615662]
[181.51339722 181.34053040]
[191.41864014 192.60490417]
[201.41383362 203.78953552]
[211.49835205 214.89370728]
[221.58287048 225.99787903]
[231.84405518 236.93898010]
[242.27929688 247.71423340]
[252.71453857 258.48947144]
[268.66793823 260.18325806]
[277.16857910 273.78906250]
[271.69555664 288.86968994]
[256.44723511 293.85656738]
[243.12088013 284.92419434]
[241.93930054 268.92471313]
[231.50405884 258.14947510]
[221.06881714 247.37422180]
[216.38095093 246.40409851]
[212.25703430 242.47106934]
[210.47869873 236.08238220]
[200.39418030 224.97822571]
[190.30966187 213.87405396]
[183.47694397 211.03250122]
[180.15426636 202.51014709]
[170.24902344 191.24577332]
[160.34378052 179.98138428]
[150.43853760 168.71701050]
[140.53329468 157.45263672]
[130.62805176 146.18826294]
[120.40505219 151.52734375]
[109.29837036 154.63490295]
[97.78899384 155.37638855]
[86.37537384 153.71966553]
[75.55180359 149.73649597]
[65.78701019 143.59936523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 87]
[3 86]
[4 85]
[5 84]
[6 83]
[7 82]
[11 79]
[12 78]
[14 75]
[15 74]
[16 73]
[17 72]
[18 71]
[19 70]
[21 69]
[22 68]
[23 67]
[26 63]
[27 62]
[28 61]
[29 60]
[30 59]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[135 156]
[136 155]
[137 154]
[138 153]
[139 152]
[143 149]
[144 148]
[158 189]
[159 188]
[160 187]
[161 186]
[162 185]
[163 184]
[164 182]
[165 181]
[166 180]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
