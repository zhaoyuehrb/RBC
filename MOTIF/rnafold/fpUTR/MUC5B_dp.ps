%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MUC5B)
} def

/sequence { (\
CACCCGGCCCGGCUCCCUCCCUGCCCGUCCCCGUCCCCCCACCCGUGCCAGCCCCCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 47 0.081218227 ubox
2 28 0.054821999 ubox
2 34 0.140669895 ubox
2 46 0.082199667 ubox
3 12 0.014327763 ubox
3 27 0.058364108 ubox
3 33 0.149308273 ubox
3 45 0.081508278 ubox
3 59 0.367943898 ubox
4 11 0.014237145 ubox
4 12 0.031194146 ubox
4 58 0.371769340 ubox
4 59 0.234971258 ubox
5 11 0.031549854 ubox
5 23 0.004614116 ubox
5 27 0.086633358 ubox
5 33 0.389635626 ubox
5 45 0.040980568 ubox
5 47 0.003483165 ubox
5 58 0.238994040 ubox
6 10 0.029712935 ubox
6 14 0.015316292 ubox
6 15 0.004615571 ubox
6 16 0.004289048 ubox
6 17 0.009415423 ubox
6 20 0.005934071 ubox
6 21 0.004703329 ubox
6 22 0.004698983 ubox
6 25 0.164137125 ubox
6 26 0.078721591 ubox
6 29 0.194897057 ubox
6 30 0.198577137 ubox
6 31 0.206512043 ubox
6 32 0.394997255 ubox
6 35 0.025216960 ubox
6 36 0.016699804 ubox
6 37 0.026587853 ubox
6 38 0.011700801 ubox
6 39 0.011088153 ubox
6 40 0.015914809 ubox
6 43 0.021499650 ubox
6 44 0.043330700 ubox
6 49 0.537683104 ubox
6 53 0.509250629 ubox
6 54 0.082227750 ubox
6 55 0.060738451 ubox
6 56 0.341296838 ubox
7 13 0.016914063 ubox
7 15 0.004251888 ubox
7 16 0.009396805 ubox
7 19 0.005972648 ubox
7 20 0.004695892 ubox
7 21 0.004701817 ubox
7 24 0.169469670 ubox
7 25 0.065140333 ubox
7 28 0.197822201 ubox
7 29 0.198766991 ubox
7 30 0.213489425 ubox
7 31 0.390155510 ubox
7 34 0.025451143 ubox
7 35 0.016650781 ubox
7 36 0.026618518 ubox
7 37 0.011606672 ubox
7 38 0.011044841 ubox
7 39 0.015810852 ubox
7 42 0.021503234 ubox
7 43 0.042925946 ubox
7 48 0.538270258 ubox
7 52 0.511778297 ubox
7 53 0.073724033 ubox
7 54 0.061148363 ubox
7 55 0.340984043 ubox
8 12 0.016818038 ubox
8 23 0.174119074 ubox
8 27 0.223878675 ubox
8 33 0.027548231 ubox
8 47 0.537664785 ubox
8 51 0.512642761 ubox
8 59 0.009801990 ubox
9 58 0.009961590 ubox
9 59 0.011435472 ubox
10 23 0.038078515 ubox
10 27 0.366023125 ubox
10 33 0.029532786 ubox
10 45 0.523652019 ubox
10 47 0.024379132 ubox
10 58 0.011622317 ubox
11 17 0.021469565 ubox
11 18 0.009406946 ubox
11 19 0.012037161 ubox
11 20 0.162269433 ubox
11 21 0.066744818 ubox
11 22 0.040643010 ubox
11 25 0.483413681 ubox
11 26 0.304076695 ubox
11 29 0.032077163 ubox
11 30 0.010612848 ubox
11 31 0.003847766 ubox
11 32 0.028518705 ubox
11 35 0.010211266 ubox
11 36 0.004952716 ubox
11 37 0.003816051 ubox
11 38 0.005405250 ubox
11 39 0.006970829 ubox
11 40 0.005596461 ubox
11 43 0.026547084 ubox
11 44 0.511215108 ubox
11 46 0.006390116 ubox
11 49 0.508711650 ubox
11 53 0.336365948 ubox
11 54 0.012891266 ubox
11 56 0.005437431 ubox
12 16 0.021211411 ubox
12 17 0.010354546 ubox
12 18 0.009874560 ubox
12 19 0.160876052 ubox
12 20 0.066437181 ubox
12 21 0.041128641 ubox
12 24 0.530017348 ubox
12 25 0.220982830 ubox
12 28 0.032493859 ubox
12 29 0.010520877 ubox
12 30 0.004012378 ubox
12 31 0.027980338 ubox
12 34 0.011507875 ubox
12 35 0.005020277 ubox
12 36 0.003803859 ubox
12 37 0.005376384 ubox
12 38 0.006910886 ubox
12 39 0.005657211 ubox
12 42 0.034572620 ubox
12 43 0.506269134 ubox
12 46 0.012441329 ubox
12 48 0.509444095 ubox
12 52 0.336647846 ubox
12 53 0.010439447 ubox
12 55 0.005385099 ubox
13 23 0.570574635 ubox
13 27 0.036546181 ubox
13 33 0.019180943 ubox
13 45 0.012829649 ubox
13 47 0.509167316 ubox
13 51 0.336043441 ubox
13 58 0.004237228 ubox
14 50 0.320572585 ubox
14 57 0.004099075 ubox
15 59 0.005138952 ubox
16 58 0.005160995 ubox
16 59 0.024081997 ubox
17 51 0.005234358 ubox
17 58 0.024499552 ubox
18 50 0.008628809 ubox
18 57 0.023691037 ubox
19 59 0.003421347 ubox
20 58 0.003308414 ubox
20 59 0.028456193 ubox
21 51 0.029994651 ubox
21 58 0.029010161 ubox
22 33 0.234042918 ubox
22 41 0.065333139 ubox
22 45 0.015743162 ubox
22 47 0.018377758 ubox
22 50 0.049438648 ubox
22 57 0.028989441 ubox
23 32 0.258793280 ubox
23 34 0.319338247 ubox
23 40 0.067259202 ubox
23 44 0.017535954 ubox
23 46 0.046467953 ubox
23 48 0.290483513 ubox
23 49 0.046548724 ubox
23 52 0.023057300 ubox
23 56 0.027293837 ubox
24 33 0.325144801 ubox
24 45 0.046698379 ubox
24 47 0.293725308 ubox
24 51 0.023491748 ubox
26 33 0.410534312 ubox
26 45 0.293290013 ubox
26 47 0.012568611 ubox
26 58 0.004354821 ubox
27 32 0.403986641 ubox
27 34 0.018889937 ubox
27 42 0.062095707 ubox
27 44 0.288371782 ubox
27 46 0.011488054 ubox
27 48 0.058189134 ubox
27 52 0.024127651 ubox
28 33 0.016243873 ubox
28 41 0.060423639 ubox
28 45 0.005846471 ubox
28 47 0.057410711 ubox
28 51 0.023626338 ubox
29 59 0.010472470 ubox
30 58 0.010917670 ubox
30 59 0.016382319 ubox
31 58 0.016624696 ubox
31 59 0.047916016 ubox
32 45 0.091589079 ubox
32 47 0.018298866 ubox
32 58 0.049008435 ubox
33 42 0.168397589 ubox
33 44 0.091979484 ubox
33 46 0.014371196 ubox
33 48 0.029370361 ubox
33 52 0.021517589 ubox
34 41 0.159890880 ubox
34 45 0.007020603 ubox
34 47 0.028387060 ubox
34 51 0.021015596 ubox
34 59 0.005362712 ubox
35 58 0.008765562 ubox
35 59 0.036893111 ubox
36 58 0.037577714 ubox
36 59 0.057568995 ubox
37 58 0.058310679 ubox
37 59 0.084049795 ubox
38 58 0.085128528 ubox
38 59 0.137713817 ubox
39 58 0.139792348 ubox
39 59 0.108003365 ubox
40 47 0.074777663 ubox
40 58 0.109734901 ubox
41 46 0.062988492 ubox
42 59 0.087894784 ubox
43 58 0.087844333 ubox
43 59 0.233068824 ubox
44 58 0.236997508 ubox
45 52 0.239144115 ubox
46 51 0.235740775 ubox
46 57 0.184922443 ubox
47 56 0.193817646 ubox
48 59 0.218848734 ubox
49 58 0.223070562 ubox
52 59 0.239661612 ubox
53 58 0.243673480 ubox
53 59 0.139984693 ubox
54 58 0.142579484 ubox
6 53 0.9500000 lbox
7 52 0.9500000 lbox
8 51 0.9500000 lbox
11 49 0.9500000 lbox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
showpage
end
%%EOF
