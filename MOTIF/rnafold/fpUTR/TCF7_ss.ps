%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGAUGUUCCGACCCGCCAGCUCGCGGAGCCGCUCUGCCCCGCGCCCUAGCCCGCGCCUGCAGCCCGCCCAGGCGGAGUCAGCCCGCGCUCCGCCCGCCGCGAUCCGAGCUCGGAGGUUCGGACUCCGGGCUCGCCGCCCCCCGGGCCGGCUCCGCGCCCCGCACUCCCGGCGCCCAGCGCCCCGCGCCCCGGCGGGCGGAGCGCACC\
) } def
/len { sequence length } bind def

/coor [
[-149.10270691 230.62239075]
[-155.93283081 236.57812500]
[-163.74229431 241.16198730]
[-172.25946045 244.21740723]
[-181.18858337 245.64097595]
[-190.22015381 245.38584900]
[-199.04153442 243.46336365]
[-207.34785461 239.94250488]
[-214.85249329 234.94746399]
[-221.29701233 228.65327454]
[-226.46003723 221.27961731]
[-230.16484070 213.08323669]
[-244.92378235 215.76158142]
[-259.68273926 218.43994141]
[-274.42123413 221.22860718]
[-289.13845825 224.12744141]
[-303.85568237 227.02629089]
[-318.57290649 229.92512512]
[-333.29013062 232.82395935]
[-337.00411987 244.76113892]
[-345.39254761 253.93310547]
[-356.81802368 258.64050293]
[-369.08871460 258.04660034]
[-379.87866211 252.32548523]
[-387.16873169 242.61717224]
[-401.96609497 245.07443237]
[-416.76345825 247.53170776]
[-431.56082153 249.98898315]
[-439.51458740 254.48225403]
[-446.59777832 252.37059021]
[-461.43023682 254.60623169]
[-451.09881592 265.48107910]
[-453.00741577 280.35916138]
[-465.74917603 288.27413940]
[-479.93246460 283.39202881]
[-485.10299683 269.31134033]
[-477.45059204 256.41128540]
[-492.40866089 257.53225708]
[-507.36669922 258.65319824]
[-514.91912842 269.80615234]
[-527.33483887 274.50421143]
[-540.00170898 271.24166870]
[-548.35083008 261.42669678]
[-563.32403564 262.32376099]
[-578.29718018 263.22082520]
[-593.27032471 264.11788940]
[-601.51013184 277.26647949]
[-615.91735840 283.02938843]
[-630.95214844 279.19070435]
[-640.83325195 267.22647095]
[-641.76123047 251.73715210]
[-633.37927246 238.67875671]
[-618.91033936 233.07246399]
[-603.91815186 237.07402039]
[-594.16735840 249.14474487]
[-579.19421387 248.24768066]
[-564.22106934 247.35061646]
[-549.24792480 246.45355225]
[-538.63659668 233.40644836]
[-521.53558350 232.04359436]
[-508.48767090 243.69514465]
[-493.52960205 242.57418823]
[-478.57156372 241.45323181]
[-463.66586304 239.77377319]
[-448.83340454 237.53813171]
[-434.01806641 235.19161987]
[-419.22073364 232.73434448]
[-404.42337036 230.27708435]
[-389.62600708 227.81980896]
[-382.46997070 211.67541504]
[-366.91864014 202.98146057]
[-349.10607910 205.38342285]
[-336.18896484 218.10673523]
[-321.47174072 215.20790100]
[-306.75451660 212.30906677]
[-292.03729248 209.41021729]
[-277.32006836 206.51138306]
[-271.36437988 202.13412476]
[-262.36108398 203.68099976]
[-247.60214233 201.00263977]
[-232.84320068 198.32427979]
[-228.67866516 177.28840637]
[-215.80401611 160.08580017]
[-196.72000122 150.11956787]
[-175.16026306 149.38121033]
[-155.36082458 158.05278015]
[-141.22785950 174.46383667]
[-127.03295135 169.61569214]
[-112.83803558 164.76754761]
[-98.64312744 159.91940308]
[-84.44821930 155.07125854]
[-70.25330353 150.22311401]
[-56.05839539 145.37496948]
[-41.86348343 140.52682495]
[-27.66857338 135.67868042]
[-13.47366238 130.83053589]
[0.72124815 125.98239136]
[14.91615868 121.13424683]
[29.11106873 116.28610229]
[43.30598068 111.43795776]
[57.50089264 106.58981323]
[53.78440857 91.52030182]
[55.68783951 74.81890869]
[63.82059097 58.64475250]
[77.95416260 45.35184479]
[96.97214508 37.16539001]
[118.94361115 35.85099792]
[141.31730652 42.42295456]
[148.22694397 29.10916901]
[155.13658142 15.79538250]
[162.04621887 2.48159528]
[168.95585632 -10.83219147]
[175.86549377 -24.14597893]
[182.77513123 -37.45976639]
[189.68476868 -50.77355194]
[196.59440613 -64.08734131]
[203.50404358 -77.40112305]
[197.33512878 -91.77048492]
[201.89537048 -106.72836304]
[215.03158569 -115.21210480]
[230.54124451 -113.21595764]
[241.10115051 -101.68242645]
[241.72526550 -86.05730438]
[232.11886597 -73.71829224]
[216.81782532 -70.49148560]
[209.90818787 -57.17770386]
[202.99856567 -43.86391449]
[196.08892822 -30.55012894]
[189.17929077 -17.23634148]
[182.26965332 -3.92255497]
[175.36001587 9.39123154]
[168.45037842 22.70501900]
[161.54074097 36.01880646]
[154.63110352 49.33259201]
[164.91564941 60.25174713]
[178.61883545 54.15069962]
[192.32202148 48.04964828]
[206.02519226 41.94860077]
[219.68235779 35.74522018]
[233.29273987 29.43986320]
[246.90312195 23.13450432]
[258.73327637 10.99021244]
[273.67788696 18.99616241]
[270.12188721 35.57299042]
[253.20848083 36.74488449]
[239.59809875 43.05024338]
[225.98771667 49.35560226]
[221.23960876 55.02003479]
[212.12625122 55.65178299]
[198.42306519 61.75283051]
[184.71987915 67.85388184]
[171.01670837 73.95493317]
[171.68899536 81.42473602]
[185.29939270 87.73007202]
[173.03358459 96.36434937]
[173.70588684 103.83415985]
[188.27822876 107.39036560]
[202.85058594 110.94657135]
[217.42292786 114.50277710]
[231.99528503 118.05898285]
[242.55110168 106.90235901]
[257.27560425 102.53372192]
[272.20794678 106.12822723]
[283.33142090 116.71896362]
[287.65386963 131.45707703]
[284.01260376 146.37808228]
[273.38705444 157.46832275]
[258.63546753 161.74455261]
[243.72592163 158.05651855]
[232.66905212 147.39625549]
[228.43908691 132.63133240]
[213.86672974 129.07513428]
[199.29437256 125.51892090]
[184.72203064 121.96271515]
[170.14967346 118.40650940]
[166.44836426 124.92956543]
[174.04534912 137.86346436]
[159.04574585 137.97569275]
[155.34443665 144.49874878]
[165.87139893 155.18438721]
[176.39836121 165.87002563]
[186.92533875 176.55566406]
[202.34848022 183.59577942]
[199.85304260 200.36506653]
[183.04829407 202.60935974]
[176.23970032 187.08264160]
[165.71272278 176.39698792]
[155.18576050 165.71134949]
[144.65878296 155.02571106]
[106.08973694 161.27897644]
[75.68173218 146.29550171]
[62.34903717 120.78472900]
[48.15412521 125.63287354]
[33.95921326 130.48101807]
[19.76430321 135.32916260]
[5.56939316 140.17730713]
[-8.62551785 145.02545166]
[-22.82042885 149.87359619]
[-37.01533890 154.72174072]
[-51.21025085 159.56988525]
[-65.40515900 164.41802979]
[-79.60007477 169.26617432]
[-93.79498291 174.11431885]
[-107.98989105 178.96246338]
[-122.18480682 183.81060791]
[-136.37971497 188.65875244]
[-135.67082214 197.72680664]
[-136.65344238 206.76252747]
[-139.29107666 215.45335388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 81]
[13 80]
[14 79]
[15 77]
[16 76]
[17 75]
[18 74]
[19 73]
[25 69]
[26 68]
[27 67]
[28 66]
[30 65]
[31 64]
[37 63]
[38 62]
[39 61]
[43 58]
[44 57]
[45 56]
[46 55]
[87 206]
[88 205]
[89 204]
[90 203]
[91 202]
[92 201]
[93 200]
[94 199]
[95 198]
[96 197]
[97 196]
[98 195]
[99 194]
[100 193]
[101 192]
[108 134]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[135 152]
[136 151]
[137 150]
[138 149]
[139 147]
[140 146]
[141 145]
[156 175]
[157 174]
[158 173]
[159 172]
[160 171]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
