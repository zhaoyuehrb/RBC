%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ORMDL2)
} def

/sequence { (\
AAGGGGCAGAAGGAGAGGCGUUACUUCCUGGAGACUUCAGGUGUGGUAGCCGGCGCCGCGCCCAUAGCCGGACGGGGAUCUGAGCUGGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.003557127 ubox
1 37 0.006362091 ubox
2 25 0.004514904 ubox
2 36 0.008066901 ubox
2 37 0.010452697 ubox
3 22 0.005718532 ubox
3 24 0.004606463 ubox
3 35 0.008236795 ubox
3 36 0.012227256 ubox
3 37 0.015618951 ubox
3 38 0.046821556 ubox
3 57 0.013773591 ubox
3 62 0.100704457 ubox
3 63 0.265394854 ubox
4 21 0.006940121 ubox
4 35 0.012413833 ubox
4 36 0.019337644 ubox
4 37 0.046686928 ubox
4 38 0.003524774 ubox
4 56 0.013790647 ubox
4 61 0.101343873 ubox
4 62 0.261298084 ubox
4 63 0.955336959 ubox
5 35 0.020261690 ubox
5 36 0.046606544 ubox
5 37 0.003179430 ubox
5 57 0.005434385 ubox
5 61 0.256723749 ubox
5 62 0.957718925 ubox
5 63 0.006640728 ubox
5 69 0.004546678 ubox
6 19 0.009078041 ubox
6 21 0.003706003 ubox
6 35 0.046517604 ubox
6 54 0.013925330 ubox
6 56 0.005567466 ubox
6 59 0.263390893 ubox
6 61 0.958905592 ubox
6 62 0.005806943 ubox
6 68 0.004565615 ubox
6 89 0.006603014 ubox
7 18 0.009073618 ubox
7 20 0.003716879 ubox
7 30 0.009980871 ubox
7 53 0.013843840 ubox
7 55 0.005566235 ubox
7 58 0.263424241 ubox
7 60 0.958895242 ubox
7 67 0.004566745 ubox
7 88 0.006463733 ubox
8 29 0.009826502 ubox
9 27 0.015644926 ubox
9 28 0.008132929 ubox
9 38 0.026497405 ubox
10 26 0.017792760 ubox
10 37 0.026513835 ubox
11 25 0.018097263 ubox
11 26 0.004265874 ubox
11 29 0.064477645 ubox
11 36 0.026171497 ubox
12 24 0.018113376 ubox
12 25 0.004810103 ubox
12 27 0.008136104 ubox
12 28 0.066561507 ubox
12 29 0.011411319 ubox
12 35 0.026004483 ubox
12 57 0.970888393 ubox
12 62 0.019277794 ubox
12 63 0.008454208 ubox
13 22 0.005919559 ubox
13 24 0.004873923 ubox
13 26 0.010236997 ubox
13 27 0.066594111 ubox
13 28 0.012242690 ubox
13 56 0.970778188 ubox
13 61 0.019422643 ubox
13 62 0.008323225 ubox
14 21 0.006404105 ubox
14 22 0.003880320 ubox
14 25 0.012300554 ubox
14 26 0.058987208 ubox
15 21 0.005735343 ubox
15 22 0.008092083 ubox
15 24 0.013910582 ubox
15 25 0.036800486 ubox
15 26 0.036131674 ubox
15 27 0.013592435 ubox
15 38 0.004558708 ubox
16 21 0.008326745 ubox
16 22 0.003664814 ubox
16 25 0.057836751 ubox
16 26 0.013967761 ubox
16 29 0.025003803 ubox
16 37 0.004560161 ubox
17 24 0.067874346 ubox
17 25 0.015051433 ubox
17 28 0.025189956 ubox
17 36 0.004529428 ubox
17 51 0.969946154 ubox
17 57 0.199662602 ubox
18 24 0.015337685 ubox
18 27 0.025130706 ubox
18 35 0.004481303 ubox
18 50 0.969828989 ubox
18 54 0.044249483 ubox
18 56 0.199770118 ubox
19 49 0.968592846 ubox
19 52 0.064147514 ubox
19 53 0.043478604 ubox
19 55 0.199745632 ubox
20 47 0.186737198 ubox
20 50 0.130456896 ubox
20 51 0.046398533 ubox
20 54 0.183648994 ubox
21 32 0.004259442 ubox
21 46 0.761934533 ubox
21 49 0.150688774 ubox
21 53 0.175914481 ubox
22 31 0.004175359 ubox
22 43 0.007297425 ubox
22 45 0.856604114 ubox
22 48 0.401220550 ubox
22 52 0.083429215 ubox
23 42 0.007416089 ubox
23 44 0.870113831 ubox
23 47 0.436062888 ubox
24 41 0.004347887 ubox
24 43 0.870095986 ubox
24 46 0.438855676 ubox
24 49 0.007584966 ubox
25 41 0.003629211 ubox
25 45 0.425488327 ubox
25 46 0.003322915 ubox
25 48 0.007079778 ubox
25 49 0.003271897 ubox
26 41 0.018517966 ubox
26 45 0.011662910 ubox
26 46 0.003605097 ubox
26 48 0.003554964 ubox
27 40 0.015468556 ubox
27 41 0.995956890 ubox
27 46 0.003514563 ubox
27 53 0.004109368 ubox
28 40 0.996952808 ubox
28 41 0.004805147 ubox
28 45 0.003442865 ubox
28 52 0.004294678 ubox
28 53 0.013410312 ubox
29 39 0.996790444 ubox
29 40 0.004098641 ubox
29 52 0.015628229 ubox
30 36 0.007526301 ubox
30 37 0.006174821 ubox
30 38 0.995492342 ubox
30 51 0.018308522 ubox
31 35 0.015203260 ubox
31 36 0.025465119 ubox
31 37 0.958090682 ubox
31 38 0.061666995 ubox
31 50 0.018311803 ubox
32 36 0.816870489 ubox
32 37 0.077509010 ubox
34 42 0.006135866 ubox
34 47 0.018250615 ubox
35 41 0.006275474 ubox
35 46 0.018266879 ubox
36 40 0.005655404 ubox
36 45 0.018071590 ubox
40 51 0.003434491 ubox
40 57 0.048030189 ubox
40 62 0.050956975 ubox
40 63 0.004920998 ubox
41 50 0.003540978 ubox
41 56 0.048238969 ubox
41 61 0.051331519 ubox
41 62 0.003504393 ubox
42 49 0.003526112 ubox
42 55 0.048225342 ubox
42 60 0.051482740 ubox
43 50 0.004610726 ubox
43 54 0.048152392 ubox
43 59 0.059186138 ubox
44 49 0.004572812 ubox
44 52 0.027874138 ubox
44 53 0.039624530 ubox
44 58 0.059177631 ubox
44 90 0.018661218 ubox
45 51 0.041664993 ubox
45 57 0.059223496 ubox
45 89 0.021050046 ubox
46 50 0.041095919 ubox
46 56 0.059192501 ubox
47 55 0.058210928 ubox
47 87 0.021204848 ubox
48 86 0.021371670 ubox
49 85 0.021394806 ubox
49 89 0.005007986 ubox
50 84 0.021392707 ubox
50 88 0.005015554 ubox
51 58 0.004071984 ubox
51 82 0.021416888 ubox
51 87 0.005025017 ubox
52 57 0.007482730 ubox
52 59 0.010432233 ubox
52 62 0.014087805 ubox
52 81 0.021422008 ubox
52 86 0.005005698 ubox
53 59 0.030020488 ubox
53 61 0.014214161 ubox
53 80 0.021403892 ubox
53 85 0.005008988 ubox
54 58 0.029855701 ubox
54 60 0.014261770 ubox
54 84 0.004981880 ubox
55 59 0.013489123 ubox
56 77 0.022034891 ubox
57 76 0.022043450 ubox
59 74 0.022063753 ubox
60 73 0.022024959 ubox
60 89 0.016543747 ubox
61 71 0.009597450 ubox
61 88 0.016492462 ubox
62 70 0.009537938 ubox
62 71 0.019846586 ubox
62 87 0.016227368 ubox
62 91 0.003186217 ubox
62 92 0.008988854 ubox
63 70 0.019877990 ubox
63 87 0.004273586 ubox
63 91 0.021714405 ubox
64 86 0.003299950 ubox
65 87 0.176203914 ubox
66 86 0.199346959 ubox
67 85 0.201643853 ubox
67 89 0.977933730 ubox
68 75 0.006226269 ubox
68 76 0.011276597 ubox
68 77 0.013326583 ubox
68 84 0.201634117 ubox
68 88 0.978955868 ubox
68 92 0.007067493 ubox
69 74 0.006241645 ubox
69 75 0.011315236 ubox
69 76 0.013362539 ubox
69 82 0.201461417 ubox
69 87 0.978927586 ubox
69 91 0.007201554 ubox
70 81 0.201639105 ubox
70 86 0.977373168 ubox
71 80 0.201833304 ubox
71 85 0.975157070 ubox
72 79 0.186799250 ubox
73 82 0.904584835 ubox
73 87 0.007513632 ubox
74 80 0.061847671 ubox
74 81 0.910918314 ubox
74 86 0.008313037 ubox
75 79 0.040477893 ubox
75 80 0.910262892 ubox
75 81 0.319089158 ubox
75 85 0.008537078 ubox
75 86 0.005585262 ubox
76 80 0.314308583 ubox
76 85 0.006447958 ubox
79 92 0.011793419 ubox
80 91 0.018381930 ubox
81 90 0.018413927 ubox
82 89 0.018374497 ubox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
6 61 0.9500000 lbox
7 60 0.9500000 lbox
12 57 0.9500000 lbox
13 56 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
67 89 0.9500000 lbox
68 88 0.9500000 lbox
69 87 0.9500000 lbox
70 86 0.9500000 lbox
71 85 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
