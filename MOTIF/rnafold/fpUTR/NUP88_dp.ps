%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUP88)
} def

/sequence { (\
AUUGGCCGAAACAGUGAGUGGACGGCCGCGGAUUGGCUGUGCUCAGCGGCGGGCUGAGCAACUGGAGUGAGGGGAGCAGUUGGGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.003709250 ubox
2 31 0.003799971 ubox
2 32 0.005672003 ubox
2 88 0.846735441 ubox
2 89 0.029024362 ubox
3 28 0.083397905 ubox
3 30 0.003205235 ubox
3 31 0.004840491 ubox
3 87 0.972933197 ubox
3 88 0.029959563 ubox
4 27 0.113789082 ubox
4 86 0.993418133 ubox
5 26 0.113852593 ubox
5 50 0.005542798 ubox
5 85 0.993466462 ubox
6 21 0.003859522 ubox
6 25 0.113853370 ubox
6 49 0.005561794 ubox
6 83 0.042303033 ubox
6 84 0.992553313 ubox
7 16 0.007319813 ubox
7 20 0.004985913 ubox
7 24 0.113852111 ubox
7 48 0.005561239 ubox
7 82 0.059756779 ubox
7 83 0.990961684 ubox
8 15 0.017204594 ubox
8 19 0.007820167 ubox
8 23 0.113306581 ubox
8 38 0.009585738 ubox
8 40 0.011387690 ubox
8 47 0.005350366 ubox
8 68 0.005313457 ubox
8 81 0.051481874 ubox
9 80 0.038972245 ubox
9 81 0.561062406 ubox
10 80 0.334355800 ubox
10 81 0.135576992 ubox
11 19 0.311437876 ubox
11 40 0.546349600 ubox
11 68 0.011345847 ubox
11 80 0.162655176 ubox
12 18 0.320513127 ubox
12 20 0.472587943 ubox
12 35 0.247671730 ubox
12 39 0.589446888 ubox
12 41 0.004818971 ubox
12 56 0.003206606 ubox
12 64 0.116810084 ubox
12 67 0.011041790 ubox
12 69 0.009317866 ubox
12 79 0.184648265 ubox
12 82 0.029968199 ubox
13 19 0.464616031 ubox
13 34 0.248093954 ubox
13 38 0.589738293 ubox
13 40 0.003405400 ubox
13 55 0.003206664 ubox
13 63 0.117484388 ubox
13 68 0.009487674 ubox
13 81 0.024716730 ubox
14 23 0.050189936 ubox
14 29 0.006243457 ubox
14 33 0.247742684 ubox
14 37 0.589875505 ubox
14 42 0.003537349 ubox
14 54 0.003175795 ubox
14 62 0.117525428 ubox
14 77 0.134055707 ubox
14 80 0.014106616 ubox
15 22 0.052574208 ubox
15 28 0.006276298 ubox
15 32 0.245511729 ubox
15 35 0.034492634 ubox
15 36 0.587097850 ubox
15 41 0.003798591 ubox
15 45 0.012031546 ubox
15 60 0.004437660 ubox
15 61 0.113893278 ubox
15 64 0.003832730 ubox
15 76 0.127664612 ubox
15 78 0.044642234 ubox
15 79 0.004657597 ubox
15 82 0.010103436 ubox
16 23 0.007803728 ubox
16 27 0.006758710 ubox
16 34 0.045037393 ubox
16 44 0.018719356 ubox
16 77 0.047607632 ubox
16 81 0.011582850 ubox
17 33 0.057154823 ubox
17 34 0.448814310 ubox
17 38 0.006539283 ubox
17 43 0.020937183 ubox
17 63 0.024171113 ubox
17 80 0.015413873 ubox
18 26 0.007994088 ubox
18 29 0.589226709 ubox
18 33 0.245454108 ubox
18 37 0.006751153 ubox
18 42 0.023478232 ubox
18 62 0.025134917 ubox
18 77 0.011052269 ubox
19 25 0.007967657 ubox
19 28 0.591736970 ubox
19 30 0.022617032 ubox
19 32 0.228555749 ubox
19 36 0.006755366 ubox
19 41 0.023487293 ubox
19 60 0.004159156 ubox
19 61 0.024386853 ubox
19 64 0.008027252 ubox
19 69 0.004377982 ubox
19 76 0.010606154 ubox
19 78 0.020080012 ubox
20 27 0.597648895 ubox
20 29 0.034322924 ubox
20 40 0.006527388 ubox
20 43 0.008196563 ubox
20 63 0.009364231 ubox
20 77 0.020280691 ubox
21 26 0.594992642 ubox
21 33 0.004328976 ubox
21 34 0.006199805 ubox
21 42 0.016206879 ubox
21 62 0.009487219 ubox
22 33 0.005758421 ubox
22 40 0.704323383 ubox
22 68 0.012028783 ubox
23 30 0.213432934 ubox
23 39 0.755681769 ubox
23 56 0.005258881 ubox
23 67 0.011744035 ubox
23 82 0.008996534 ubox
24 29 0.214671204 ubox
24 38 0.758193913 ubox
24 55 0.005384899 ubox
24 81 0.009092304 ubox
25 37 0.759080789 ubox
25 40 0.005072129 ubox
25 54 0.005401736 ubox
25 80 0.009300094 ubox
26 36 0.759086600 ubox
26 39 0.005518599 ubox
26 53 0.005365716 ubox
26 65 0.005515467 ubox
26 79 0.009340751 ubox
27 35 0.758911987 ubox
27 41 0.005110185 ubox
27 52 0.005324520 ubox
27 64 0.005515757 ubox
28 34 0.615010902 ubox
28 37 0.012822031 ubox
28 40 0.008319105 ubox
28 77 0.010855607 ubox
28 85 0.003612039 ubox
29 35 0.005276401 ubox
29 36 0.012860760 ubox
29 39 0.009177362 ubox
29 51 0.005281679 ubox
29 76 0.010865782 ubox
29 84 0.003624697 ubox
30 34 0.010462830 ubox
30 38 0.011162155 ubox
30 50 0.005290184 ubox
30 86 0.021344994 ubox
31 37 0.011325890 ubox
31 81 0.004553540 ubox
31 85 0.021335644 ubox
32 68 0.004739633 ubox
32 80 0.004958801 ubox
33 67 0.004810557 ubox
33 71 0.012476556 ubox
33 79 0.005041081 ubox
33 83 0.013770567 ubox
33 88 0.094983382 ubox
33 89 0.003254881 ubox
34 66 0.004734836 ubox
34 70 0.014212936 ubox
34 78 0.004984165 ubox
34 82 0.019909402 ubox
34 87 0.109195822 ubox
34 88 0.003363657 ubox
35 63 0.003998804 ubox
35 77 0.003927657 ubox
35 81 0.022912655 ubox
35 86 0.111502799 ubox
36 42 0.006312834 ubox
36 47 0.005785451 ubox
36 50 0.003662589 ubox
36 62 0.006575788 ubox
36 68 0.026757118 ubox
36 77 0.064143151 ubox
36 80 0.089037763 ubox
36 85 0.111507180 ubox
37 41 0.007206147 ubox
37 46 0.005820248 ubox
37 49 0.003668752 ubox
37 58 0.003386462 ubox
37 65 0.031603849 ubox
37 67 0.027409897 ubox
37 76 0.064288185 ubox
37 79 0.097845471 ubox
37 83 0.005234658 ubox
37 84 0.111287708 ubox
38 45 0.005817845 ubox
38 48 0.003665444 ubox
38 57 0.003313671 ubox
38 64 0.030405099 ubox
38 66 0.026743584 ubox
38 75 0.062484870 ubox
38 78 0.097919614 ubox
38 82 0.007083549 ubox
38 83 0.105476988 ubox
39 44 0.005803429 ubox
39 47 0.003666399 ubox
39 62 0.047901281 ubox
39 63 0.014395278 ubox
39 77 0.097789473 ubox
39 81 0.003964436 ubox
40 46 0.003639739 ubox
40 60 0.350487475 ubox
40 61 0.034968732 ubox
40 64 0.012458041 ubox
40 76 0.078270294 ubox
40 82 0.005721257 ubox
41 54 0.005307715 ubox
41 59 0.923521834 ubox
42 53 0.005315010 ubox
42 58 0.998460777 ubox
43 52 0.005310139 ubox
43 57 0.999423487 ubox
44 51 0.005289863 ubox
44 56 0.999750076 ubox
45 55 0.999606979 ubox
46 54 0.999886953 ubox
46 80 0.003550531 ubox
47 53 0.999747095 ubox
47 56 0.005063211 ubox
47 79 0.003633456 ubox
48 55 0.005151828 ubox
49 54 0.005127351 ubox
49 59 0.003211307 ubox
49 77 0.004827565 ubox
50 58 0.003276112 ubox
50 76 0.004839493 ubox
52 86 0.005652300 ubox
53 85 0.005681004 ubox
54 72 0.004810163 ubox
54 84 0.005686426 ubox
55 71 0.004809295 ubox
55 83 0.005615416 ubox
58 68 0.004868023 ubox
58 77 0.012183448 ubox
59 67 0.004910167 ubox
59 76 0.012800328 ubox
59 82 0.381149964 ubox
60 68 0.003631820 ubox
60 81 0.723889057 ubox
61 68 0.056305579 ubox
61 80 0.887680037 ubox
62 67 0.057947097 ubox
62 71 0.204684798 ubox
62 72 0.078135385 ubox
62 73 0.136365823 ubox
62 74 0.044079599 ubox
62 76 0.042722406 ubox
62 79 0.939715597 ubox
62 83 0.005128552 ubox
62 84 0.007809866 ubox
63 69 0.006178540 ubox
63 70 0.204223505 ubox
63 71 0.077103484 ubox
63 72 0.136379181 ubox
63 73 0.043714469 ubox
63 75 0.042871714 ubox
63 78 0.940307419 ubox
63 82 0.006405752 ubox
63 83 0.011858699 ubox
64 68 0.006281390 ubox
64 77 0.939317214 ubox
64 81 0.006572601 ubox
65 80 0.007024492 ubox
65 81 0.072496288 ubox
66 80 0.081525721 ubox
66 81 0.005619637 ubox
67 77 0.119648796 ubox
67 80 0.005850465 ubox
68 76 0.122426718 ubox
68 78 0.092134630 ubox
68 79 0.003391627 ubox
68 82 0.003866539 ubox
69 77 0.094753389 ubox
69 81 0.006256297 ubox
70 80 0.006657103 ubox
70 81 0.008189821 ubox
71 80 0.009650196 ubox
72 80 0.005818448 ubox
72 81 0.008991161 ubox
73 80 0.012018845 ubox
73 81 0.004245731 ubox
74 80 0.005273031 ubox
74 81 0.016123769 ubox
75 80 0.017628384 ubox
75 81 0.005862175 ubox
76 80 0.004754591 ubox
2 88 0.9500000 lbox
3 87 0.9500000 lbox
4 86 0.9500000 lbox
5 85 0.9500000 lbox
6 84 0.9500000 lbox
7 83 0.9500000 lbox
12 20 0.9500000 lbox
13 19 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
60 81 0.9500000 lbox
61 80 0.9500000 lbox
62 79 0.9500000 lbox
63 78 0.9500000 lbox
64 77 0.9500000 lbox
showpage
end
%%EOF
