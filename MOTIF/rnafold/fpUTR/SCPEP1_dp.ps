%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCPEP1)
} def

/sequence { (\
GUGAUGGGGCGCCGGGUCCAGCCUGUUGCUGAUGCUGCCGUGCGGUACUUGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.031043205 ubox
1 12 0.034547401 ubox
1 22 0.005834669 ubox
1 29 0.137112290 ubox
1 33 0.007997464 ubox
1 35 0.093594671 ubox
1 38 0.007287965 ubox
1 43 0.053769351 ubox
1 48 0.091512600 ubox
1 52 0.005545212 ubox
2 9 0.030941341 ubox
2 11 0.034628081 ubox
2 21 0.005557205 ubox
2 28 0.137011793 ubox
2 31 0.008220804 ubox
2 32 0.008278911 ubox
2 34 0.092089152 ubox
2 37 0.007244374 ubox
2 42 0.052018179 ubox
2 44 0.025801366 ubox
2 45 0.003988980 ubox
2 47 0.089952155 ubox
2 51 0.014660432 ubox
3 10 0.034585899 ubox
3 18 0.023654322 ubox
3 27 0.136805030 ubox
3 33 0.057568131 ubox
3 36 0.005575680 ubox
3 41 0.005887234 ubox
3 43 0.034062592 ubox
3 46 0.081337298 ubox
3 50 0.022782712 ubox
3 53 0.775676262 ubox
4 17 0.023536847 ubox
4 26 0.137076686 ubox
4 33 0.146497090 ubox
4 41 0.066946841 ubox
4 46 0.025239411 ubox
4 49 0.021174353 ubox
4 52 0.785934518 ubox
5 14 0.024344051 ubox
5 16 0.019652860 ubox
5 20 0.010316172 ubox
5 25 0.125478759 ubox
5 31 0.019136694 ubox
5 32 0.161337283 ubox
5 34 0.009670729 ubox
5 40 0.067695886 ubox
5 42 0.026700762 ubox
5 44 0.045713914 ubox
5 45 0.025139385 ubox
5 47 0.010442915 ubox
5 51 0.780862521 ubox
6 13 0.040281216 ubox
6 19 0.011175895 ubox
6 23 0.015254267 ubox
6 24 0.111649280 ubox
6 30 0.010195633 ubox
6 33 0.030332732 ubox
6 36 0.007611513 ubox
6 39 0.068147973 ubox
6 41 0.038943763 ubox
6 43 0.046515634 ubox
6 46 0.010356731 ubox
6 49 0.132963740 ubox
6 50 0.764301285 ubox
6 53 0.014413388 ubox
7 12 0.040386611 ubox
7 13 0.012010011 ubox
7 18 0.010090742 ubox
7 19 0.062734603 ubox
7 22 0.011772943 ubox
7 23 0.097682401 ubox
7 24 0.077754663 ubox
7 29 0.006911231 ubox
7 30 0.119612202 ubox
7 35 0.009046552 ubox
7 38 0.067962386 ubox
7 39 0.007687226 ubox
7 48 0.160880429 ubox
7 49 0.769781121 ubox
7 50 0.039056550 ubox
7 52 0.011985298 ubox
7 53 0.009218533 ubox
8 12 0.011847431 ubox
8 17 0.008395460 ubox
8 18 0.071458612 ubox
8 19 0.010667038 ubox
8 22 0.082510383 ubox
8 23 0.095115301 ubox
8 29 0.090524011 ubox
8 30 0.543180438 ubox
8 36 0.042711160 ubox
8 38 0.007717616 ubox
8 39 0.050113831 ubox
8 48 0.761712490 ubox
8 49 0.048793501 ubox
8 50 0.003371827 ubox
8 52 0.004005047 ubox
8 53 0.016556409 ubox
9 17 0.083864306 ubox
9 18 0.014129394 ubox
9 22 0.107286246 ubox
9 26 0.004724917 ubox
9 29 0.687957157 ubox
9 35 0.047687153 ubox
9 38 0.050174154 ubox
9 41 0.064369805 ubox
9 43 0.121681563 ubox
9 46 0.282750709 ubox
9 48 0.052531889 ubox
9 52 0.017277576 ubox
10 16 0.085311935 ubox
10 21 0.118169788 ubox
10 25 0.004672401 ubox
10 28 0.693106828 ubox
10 31 0.015415492 ubox
10 34 0.047652226 ubox
10 37 0.050087121 ubox
10 40 0.064826555 ubox
10 42 0.121759806 ubox
10 44 0.616218071 ubox
10 45 0.212775891 ubox
10 51 0.017267020 ubox
11 17 0.025706724 ubox
11 22 0.005296428 ubox
11 26 0.061118571 ubox
11 27 0.670437695 ubox
11 29 0.069258946 ubox
11 30 0.004096667 ubox
11 33 0.023956224 ubox
11 35 0.034608254 ubox
11 36 0.029417595 ubox
11 38 0.007675829 ubox
11 39 0.064493167 ubox
11 41 0.121412312 ubox
11 43 0.657410912 ubox
11 46 0.164283445 ubox
11 50 0.011339299 ubox
11 52 0.010104263 ubox
12 16 0.025884240 ubox
12 21 0.006643113 ubox
12 25 0.063431621 ubox
12 28 0.069313932 ubox
12 34 0.035212016 ubox
12 37 0.008155264 ubox
12 40 0.109195737 ubox
12 42 0.657542998 ubox
12 45 0.167410182 ubox
12 51 0.010022425 ubox
13 25 0.694989912 ubox
13 31 0.020245498 ubox
13 34 0.014702879 ubox
13 37 0.108939940 ubox
13 40 0.632207369 ubox
13 42 0.014212134 ubox
13 44 0.167321900 ubox
13 51 0.029345575 ubox
14 23 0.047121342 ubox
14 24 0.698120171 ubox
14 30 0.019942466 ubox
14 33 0.010273296 ubox
14 36 0.112020290 ubox
14 39 0.633592502 ubox
14 41 0.014271331 ubox
14 43 0.164830115 ubox
14 49 0.015786788 ubox
14 50 0.031007514 ubox
15 22 0.047170256 ubox
15 23 0.699060667 ubox
15 29 0.019798215 ubox
15 30 0.003279824 ubox
15 35 0.112918887 ubox
15 36 0.111029631 ubox
15 38 0.624920697 ubox
15 39 0.213449235 ubox
15 48 0.016728934 ubox
15 49 0.032163792 ubox
16 22 0.698835534 ubox
16 29 0.003705500 ubox
16 33 0.265956013 ubox
16 35 0.373610166 ubox
16 38 0.215842009 ubox
16 41 0.090767871 ubox
16 48 0.032294433 ubox
17 21 0.653753414 ubox
17 28 0.003737903 ubox
17 32 0.270421493 ubox
17 34 0.369347408 ubox
17 37 0.193795041 ubox
17 40 0.040725459 ubox
17 47 0.030458728 ubox
18 31 0.193238558 ubox
18 45 0.032444456 ubox
19 25 0.014274021 ubox
19 28 0.010041842 ubox
19 31 0.605518585 ubox
19 34 0.036441471 ubox
19 37 0.268274751 ubox
19 42 0.007253329 ubox
19 44 0.032301422 ubox
20 24 0.011614029 ubox
20 27 0.009883760 ubox
20 30 0.638517425 ubox
20 33 0.028469311 ubox
20 36 0.275035480 ubox
20 41 0.006934277 ubox
21 26 0.007041430 ubox
21 29 0.639694003 ubox
21 35 0.275941204 ubox
21 38 0.010613124 ubox
21 41 0.010237533 ubox
21 43 0.031376888 ubox
21 46 0.008210072 ubox
21 52 0.016167836 ubox
22 28 0.638421549 ubox
22 34 0.275157817 ubox
22 37 0.010635961 ubox
22 40 0.011013990 ubox
22 42 0.031365318 ubox
22 45 0.008346503 ubox
22 51 0.016748493 ubox
23 44 0.008274206 ubox
23 45 0.004952849 ubox
24 31 0.041676862 ubox
24 34 0.007350726 ubox
24 40 0.019648505 ubox
24 44 0.005090076 ubox
25 30 0.032710346 ubox
25 33 0.142086173 ubox
25 35 0.009231387 ubox
25 38 0.035042773 ubox
25 39 0.016904793 ubox
25 43 0.008258240 ubox
25 48 0.018581019 ubox
26 32 0.152658492 ubox
26 34 0.009206787 ubox
26 37 0.035819352 ubox
26 42 0.008157655 ubox
26 47 0.013356500 ubox
27 31 0.137838850 ubox
27 37 0.004365987 ubox
27 47 0.021127075 ubox
28 33 0.007454171 ubox
28 35 0.055643530 ubox
28 38 0.013370896 ubox
28 43 0.004144683 ubox
28 46 0.026104248 ubox
28 52 0.035218728 ubox
29 34 0.055752477 ubox
29 37 0.013503558 ubox
29 42 0.004149555 ubox
29 45 0.026388013 ubox
29 51 0.037266343 ubox
30 44 0.026364422 ubox
30 47 0.013837224 ubox
30 51 0.052482624 ubox
31 43 0.026027603 ubox
31 46 0.014677015 ubox
31 50 0.177680563 ubox
31 53 0.142714677 ubox
32 41 0.020160786 ubox
32 46 0.010715652 ubox
32 49 0.183805425 ubox
32 52 0.144426030 ubox
33 40 0.020416667 ubox
33 42 0.020135466 ubox
33 44 0.037316610 ubox
33 45 0.007391099 ubox
33 47 0.596859345 ubox
33 51 0.125630080 ubox
34 39 0.020019431 ubox
34 41 0.024380258 ubox
34 43 0.057198262 ubox
34 46 0.685591259 ubox
34 50 0.058879319 ubox
34 52 0.027613750 ubox
35 40 0.024765154 ubox
35 42 0.057559769 ubox
35 45 0.690907379 ubox
35 51 0.029028987 ubox
36 44 0.690497129 ubox
36 47 0.157401911 ubox
37 43 0.691025538 ubox
37 46 0.172955401 ubox
38 42 0.686019322 ubox
38 45 0.173905184 ubox
39 44 0.173665469 ubox
40 48 0.008960223 ubox
41 47 0.008892741 ubox
42 46 0.007420876 ubox
42 52 0.019554673 ubox
43 51 0.020609831 ubox
44 50 0.019036293 ubox
44 53 0.007264490 ubox
45 49 0.012432678 ubox
45 52 0.006023280 ubox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
showpage
end
%%EOF
