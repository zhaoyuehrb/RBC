%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGGUUCUUGGGAGUGGCGAAGCGGGUCCUGCCCCGCUGUCAGCUGCGGCCCCCGGCGCCGGGCGGGGGUGGCCGCGACCAUUGGCGGAGAGGCGAAAGGGGCGGGGCCGCCGCCAGCCGCUGCGGGCAAGGCUGAACAGGCGGAGGUGGGCAGCCGGCCAGGGAAGCACGGUCCAGGCGGCUACAUUCGGCCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[437.65176392 312.26580811]
[423.95489502 306.15057373]
[410.25805664 300.03530884]
[396.56121826 293.92004395]
[382.86434937 287.80480957]
[369.16751099 281.68954468]
[355.47067261 275.57427979]
[341.77380371 269.45904541]
[348.65188599 282.78915405]
[347.34194946 297.73184204]
[338.24948120 309.66192627]
[324.18884277 314.88671875]
[309.51220703 311.78900146]
[298.76235962 301.32757568]
[295.26672363 286.74057007]
[300.10726929 272.54309082]
[311.78573608 263.12960815]
[326.68701172 261.41381836]
[313.97729492 253.44744873]
[301.26757812 245.48107910]
[288.55786133 237.51472473]
[275.84814453 229.54835510]
[271.06896973 229.72622681]
[266.12869263 226.89880371]
[262.87243652 221.13139343]
[250.41661072 212.77360535]
[237.96078491 204.41581726]
[225.50497437 196.05802917]
[218.19372559 194.94078064]
[212.92181396 187.47215271]
[200.59748840 178.92167664]
[188.27314758 170.37118530]
[175.94880676 161.82070923]
[163.62448120 153.27021790]
[151.30014038 144.71974182]
[138.97581482 136.16925049]
[126.65147400 127.61877441]
[114.32714081 119.06829071]
[101.93272400 123.77248383]
[88.94120026 121.13218689]
[79.36627960 111.96311188]
[76.16613770 99.09804535]
[62.11560059 93.84614563]
[48.06506348 88.59424591]
[38.92351532 88.52008820]
[33.83791351 83.14987946]
[19.87075424 77.68010712]
[4.19938755 79.85239410]
[-4.83011818 68.00682831]
[-18.79727936 62.53705597]
[-34.46864700 64.70934296]
[-43.49814987 52.86378479]
[-57.46531296 47.39401245]
[-71.43247223 41.92424011]
[-85.39963531 36.45446396]
[-99.36679840 30.98469353]
[-113.33395386 25.51491928]
[-127.30111694 20.04514694]
[-140.29841614 28.52157211]
[-155.79403687 27.70590210]
[-167.82960510 17.91177559]
[-171.77717590 2.90523553]
[-166.11885071 -11.54339695]
[-153.03036499 -19.87832832]
[-137.54450989 -18.89460754]
[-125.61589813 -8.97049427]
[-121.83134460 6.07798624]
[-107.86418152 11.54775906]
[-93.89701843 17.01753235]
[-79.92986298 22.48730469]
[-65.96269989 27.95707703]
[-51.99554062 33.42684937]
[-38.02837753 38.89662170]
[-23.35603523 36.33310318]
[-13.32750607 48.56989670]
[0.63965493 54.03966904]
[15.31199741 51.47614670]
[25.34052658 63.71294403]
[39.30768967 69.18271637]
[53.31695938 74.54370880]
[67.36750031 79.79560852]
[81.41803741 85.04750824]
[83.05355072 83.21654510]
[84.86862183 81.56340790]
[86.84400940 80.10561371]
[82.92418671 65.62683868]
[71.84945679 54.32812500]
[75.99198151 40.02117920]
[72.07215118 25.54240227]
[58.24177170 17.89413071]
[53.95070648 2.68353128]
[61.74477768 -11.06521606]
[76.99989319 -15.19522285]
[90.66546631 -7.25623035]
[94.63395691 8.04169846]
[86.55092621 21.62257385]
[90.47075653 36.10134888]
[101.26511383 46.36444473]
[97.40296173 61.70701218]
[101.32279205 76.18578339]
[119.49013519 86.25222778]
[122.87762451 106.74395752]
[135.20196533 115.29444122]
[147.52629089 123.84492493]
[159.85063171 132.39540100]
[172.17495728 140.94589233]
[184.49929810 149.49636841]
[196.82362366 158.04685974]
[209.14796448 166.59733582]
[221.47230530 175.14782715]
[233.86274719 183.60221863]
[246.31857300 191.95999146]
[258.77438354 200.31777954]
[271.23022461 208.67556763]
[283.81451416 216.83862305]
[296.52423096 224.80499268]
[309.23394775 232.77136230]
[321.94366455 240.73773193]
[334.65338135 248.70410156]
[347.88906860 255.76219177]
[361.58590698 261.87744141]
[375.28277588 267.99270630]
[388.97961426 274.10794067]
[402.67645264 280.22320557]
[416.37332153 286.33847046]
[430.07015991 292.45370483]
[443.76699829 298.56896973]
[459.52264404 297.12997437]
[467.98983765 309.38375854]
[481.68667603 315.49902344]
[495.38354492 321.61428833]
[509.99099731 316.20498657]
[523.79443359 322.60186768]
[528.86132812 336.56115723]
[542.55816650 342.67642212]
[556.25500488 348.79165649]
[569.95184326 354.90692139]
[583.64874268 361.02218628]
[597.34558105 367.13742065]
[611.04241943 373.25268555]
[630.97222900 370.25701904]
[641.64367676 386.37673950]
[655.52410889 392.06307983]
[671.22735596 390.13476562]
[680.07153320 402.11932373]
[693.95196533 407.80566406]
[703.82177734 401.16275024]
[715.55303955 400.12310791]
[726.21789551 404.82995605]
[733.21057129 414.00674438]
[734.88409424 425.30093384]
[748.58099365 431.41619873]
[762.27783203 437.53143311]
[767.48376465 436.98721313]
[771.93072510 438.36123657]
[775.01403809 441.04156494]
[776.46044922 444.26464844]
[789.85717773 451.01208496]
[803.25390625 457.75952148]
[816.65063477 464.50692749]
[830.09942627 471.14999390]
[843.59948730 477.68826294]
[857.79248047 471.12374878]
[872.87091064 475.26797485]
[881.71520996 488.16421509]
[880.14935303 503.72320557]
[868.91271973 514.59844971]
[853.31085205 515.65509033]
[840.71051025 506.39410400]
[837.06121826 491.18829346]
[823.56115723 484.65002441]
[816.16552734 484.56372070]
[809.90319824 477.90365601]
[796.50646973 471.15621948]
[783.10974121 464.40881348]
[769.71301270 457.66137695]
[756.16253662 451.22830200]
[742.46569824 445.11303711]
[728.76885986 438.99777222]
[712.10339355 446.55996704]
[694.90509033 439.42352295]
[688.26562500 421.68606567]
[674.38519287 415.99972534]
[659.67474365 418.33474731]
[649.83776855 405.94348145]
[635.95733643 400.25717163]
[626.91699219 405.03903198]
[616.51904297 404.03042603]
[608.22442627 397.32427979]
[604.92718506 386.94952393]
[591.23028564 380.83428955]
[577.53344727 374.71902466]
[563.83660889 368.60375977]
[550.13977051 362.48852539]
[536.44293213 356.37326050]
[522.74609375 350.25799561]
[508.97033691 355.80459595]
[494.99267578 349.79800415]
[489.26828003 335.31112671]
[475.57144165 329.19586182]
[461.87457275 323.08062744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[5 123]
[6 122]
[7 121]
[8 120]
[18 119]
[19 118]
[20 117]
[21 116]
[22 115]
[25 114]
[26 113]
[27 112]
[28 111]
[30 110]
[31 109]
[32 108]
[33 107]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[42 82]
[43 81]
[44 80]
[46 79]
[47 78]
[49 76]
[50 75]
[52 73]
[53 72]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[85 100]
[86 99]
[88 97]
[89 96]
[129 201]
[130 200]
[131 199]
[134 196]
[135 195]
[136 194]
[137 193]
[138 192]
[139 191]
[140 190]
[142 186]
[143 185]
[145 183]
[146 182]
[151 179]
[152 178]
[153 177]
[157 176]
[158 175]
[159 174]
[160 173]
[161 171]
[162 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
