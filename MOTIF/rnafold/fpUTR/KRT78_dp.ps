%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT78)
} def

/sequence { (\
AGAAACUCACACACCUUGACAAUCUGUCUGUCCGUCUGCAGCUGCGUGACUGUCUGUCUCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.027581563 ubox
1 16 0.023004563 ubox
1 17 0.005499125 ubox
1 25 0.075297457 ubox
1 29 0.012176430 ubox
1 37 0.153127440 ubox
1 43 0.043379688 ubox
1 51 0.014256689 ubox
1 55 0.330101746 ubox
1 59 0.092305741 ubox
1 61 0.654907374 ubox
2 6 0.031079182 ubox
2 8 0.120159754 ubox
2 15 0.026433609 ubox
2 16 0.005309476 ubox
2 17 0.007680793 ubox
2 24 0.079806285 ubox
2 28 0.012891864 ubox
2 32 0.018468370 ubox
2 36 0.162212064 ubox
2 42 0.045862714 ubox
2 50 0.015017609 ubox
2 54 0.349538263 ubox
2 58 0.106055754 ubox
2 60 0.693458314 ubox
3 7 0.104678011 ubox
3 16 0.007972843 ubox
3 17 0.011159615 ubox
3 23 0.078239551 ubox
3 27 0.012542605 ubox
3 31 0.017842977 ubox
3 35 0.158712503 ubox
3 53 0.347176306 ubox
3 57 0.102102663 ubox
3 59 0.678604249 ubox
4 16 0.010965115 ubox
4 17 0.010126193 ubox
5 16 0.009512453 ubox
5 27 0.006820525 ubox
5 31 0.032751449 ubox
5 35 0.064844655 ubox
5 47 0.013178455 ubox
5 53 0.057049121 ubox
5 57 0.668557894 ubox
6 26 0.007437614 ubox
6 30 0.034117898 ubox
6 34 0.074081693 ubox
6 41 0.147615945 ubox
6 46 0.013539067 ubox
6 52 0.061181043 ubox
6 56 0.680962649 ubox
7 19 0.083885073 ubox
7 40 0.147732970 ubox
7 49 0.358460403 ubox
8 18 0.086562741 ubox
8 26 0.005103833 ubox
8 30 0.120221821 ubox
8 38 0.154332809 ubox
8 44 0.012639496 ubox
8 48 0.366474027 ubox
8 52 0.068898270 ubox
8 56 0.129995570 ubox
8 62 0.081034135 ubox
9 17 0.081226787 ubox
9 25 0.004739157 ubox
9 27 0.033104883 ubox
9 29 0.119309790 ubox
9 31 0.112803863 ubox
9 35 0.075128904 ubox
9 37 0.154755924 ubox
9 43 0.012433198 ubox
9 47 0.366620356 ubox
9 51 0.062064351 ubox
9 53 0.649730565 ubox
9 55 0.131381424 ubox
9 57 0.102773285 ubox
9 61 0.079851743 ubox
10 18 0.016526017 ubox
10 26 0.033929111 ubox
10 30 0.116936375 ubox
10 34 0.080628949 ubox
10 38 0.084140649 ubox
10 44 0.003381272 ubox
10 46 0.366395563 ubox
10 48 0.018430646 ubox
10 52 0.656306219 ubox
10 56 0.109754207 ubox
10 62 0.167726036 ubox
11 17 0.019761846 ubox
11 25 0.030885824 ubox
11 27 0.100942369 ubox
11 29 0.115667692 ubox
11 31 0.155143167 ubox
11 35 0.176247487 ubox
11 37 0.086484937 ubox
11 43 0.004006477 ubox
11 47 0.018939973 ubox
11 51 0.576432509 ubox
11 53 0.170808600 ubox
11 55 0.106939964 ubox
11 57 0.152220401 ubox
11 61 0.162709418 ubox
12 18 0.025245475 ubox
12 26 0.103563968 ubox
12 30 0.178341364 ubox
12 34 0.182286223 ubox
12 38 0.032139020 ubox
12 44 0.349711739 ubox
12 46 0.019027020 ubox
12 48 0.093148102 ubox
12 52 0.175511025 ubox
12 56 0.162096270 ubox
12 62 0.075810732 ubox
13 17 0.025554957 ubox
13 25 0.097005555 ubox
13 27 0.044925568 ubox
13 29 0.176741910 ubox
13 31 0.195119362 ubox
13 35 0.128539633 ubox
13 37 0.032040467 ubox
13 43 0.342411981 ubox
13 47 0.093585307 ubox
13 51 0.154776666 ubox
13 53 0.061707407 ubox
13 55 0.159862528 ubox
13 57 0.137428289 ubox
13 61 0.072888222 ubox
14 26 0.045848266 ubox
14 30 0.207885079 ubox
14 34 0.135286183 ubox
14 46 0.092853697 ubox
14 52 0.062763764 ubox
14 56 0.144096578 ubox
15 41 0.316151858 ubox
16 22 0.043792883 ubox
16 40 0.300363213 ubox
16 41 0.037225884 ubox
16 49 0.003831812 ubox
17 21 0.037371109 ubox
17 26 0.004474085 ubox
17 30 0.035902413 ubox
17 34 0.051962049 ubox
17 38 0.075006055 ubox
17 40 0.058619303 ubox
17 46 0.016254373 ubox
17 48 0.003739294 ubox
17 56 0.023379783 ubox
18 24 0.062362445 ubox
18 25 0.006242748 ubox
18 28 0.703713319 ubox
18 29 0.006923291 ubox
18 32 0.447440650 ubox
18 33 0.050146457 ubox
18 36 0.276117677 ubox
18 37 0.008157865 ubox
18 39 0.068553730 ubox
18 45 0.025552125 ubox
18 54 0.414411182 ubox
18 55 0.004098005 ubox
18 58 0.081852303 ubox
18 60 0.003480820 ubox
19 23 0.054315903 ubox
19 27 0.705709919 ubox
19 31 0.452029449 ubox
19 35 0.276384265 ubox
19 47 0.008004817 ubox
19 53 0.415055937 ubox
19 57 0.081990519 ubox
20 26 0.705828260 ubox
20 30 0.452325626 ubox
20 34 0.275897149 ubox
20 38 0.064598418 ubox
20 44 0.026722568 ubox
20 46 0.008133248 ubox
20 48 0.006794657 ubox
20 52 0.415173605 ubox
20 56 0.081987503 ubox
21 25 0.572045710 ubox
21 29 0.433791038 ubox
21 37 0.061557554 ubox
21 43 0.026149535 ubox
21 47 0.006920161 ubox
21 51 0.410247829 ubox
21 55 0.079183424 ubox
22 31 0.071020630 ubox
22 35 0.018828115 ubox
22 47 0.010378580 ubox
22 53 0.024803820 ubox
23 30 0.069729941 ubox
23 34 0.018017935 ubox
23 46 0.010022149 ubox
23 49 0.402066737 ubox
23 52 0.024209501 ubox
24 41 0.033897344 ubox
24 48 0.407507710 ubox
25 34 0.034109790 ubox
25 40 0.034288877 ubox
25 44 0.018333248 ubox
25 46 0.379800881 ubox
25 52 0.005606283 ubox
26 33 0.045975775 ubox
26 39 0.034460278 ubox
26 42 0.099761678 ubox
26 43 0.026433042 ubox
26 45 0.406354139 ubox
26 50 0.071693839 ubox
26 51 0.006717877 ubox
26 53 0.004060547 ubox
27 38 0.033225704 ubox
27 41 0.014523224 ubox
27 44 0.389935056 ubox
27 46 0.005606071 ubox
27 49 0.071710552 ubox
27 52 0.006367576 ubox
28 41 0.426097700 ubox
28 48 0.071301476 ubox
29 38 0.004832466 ubox
29 40 0.442178355 ubox
29 46 0.053264289 ubox
29 52 0.006928980 ubox
29 56 0.003557406 ubox
30 37 0.008717680 ubox
30 39 0.447514644 ubox
30 42 0.022981167 ubox
30 45 0.057857664 ubox
30 47 0.007143965 ubox
30 50 0.337265329 ubox
30 51 0.005759324 ubox
30 53 0.003169247 ubox
30 55 0.004752690 ubox
30 63 0.004758901 ubox
31 38 0.429108993 ubox
31 41 0.022406610 ubox
31 44 0.056458792 ubox
31 46 0.004377295 ubox
31 49 0.338048182 ubox
31 52 0.004178305 ubox
31 62 0.004610527 ubox
32 48 0.337976114 ubox
33 44 0.013845520 ubox
33 46 0.337144038 ubox
33 48 0.017188656 ubox
33 52 0.043453460 ubox
33 56 0.006563791 ubox
33 62 0.007733033 ubox
34 42 0.069345772 ubox
34 43 0.012250478 ubox
34 45 0.337390397 ubox
34 47 0.019031742 ubox
34 50 0.627170276 ubox
34 51 0.010492123 ubox
34 55 0.005235860 ubox
34 61 0.007132128 ubox
34 63 0.009612918 ubox
35 41 0.067945275 ubox
35 44 0.333878227 ubox
35 46 0.004106965 ubox
35 49 0.628282961 ubox
35 62 0.009378353 ubox
36 48 0.628324631 ubox
37 44 0.005475715 ubox
37 46 0.587928568 ubox
37 48 0.007700528 ubox
38 43 0.017521333 ubox
38 45 0.643127045 ubox
38 47 0.062006079 ubox
38 53 0.024419151 ubox
38 57 0.030015932 ubox
38 63 0.326293043 ubox
39 44 0.642331038 ubox
39 46 0.064180168 ubox
39 48 0.006481195 ubox
39 52 0.026528356 ubox
39 56 0.032335945 ubox
39 62 0.328116950 ubox
40 47 0.006744492 ubox
40 51 0.026566398 ubox
40 55 0.032351154 ubox
40 61 0.327996126 ubox
41 47 0.006331155 ubox
41 50 0.026559966 ubox
41 53 0.003205199 ubox
41 54 0.032089244 ubox
41 57 0.009938198 ubox
41 58 0.003972852 ubox
41 60 0.327248652 ubox
41 63 0.048268497 ubox
42 46 0.007448976 ubox
42 52 0.017871041 ubox
42 56 0.018500495 ubox
42 62 0.048474524 ubox
43 52 0.005605125 ubox
43 56 0.005257608 ubox
44 51 0.004451133 ubox
44 53 0.034531075 ubox
44 57 0.310561906 ubox
44 61 0.004414987 ubox
44 63 0.230199309 ubox
45 52 0.035556498 ubox
45 56 0.312808123 ubox
45 62 0.230910363 ubox
46 51 0.025244099 ubox
46 53 0.004382730 ubox
46 55 0.292580334 ubox
46 61 0.221427244 ubox
46 63 0.017910572 ubox
47 52 0.009683793 ubox
47 62 0.017825715 ubox
48 54 0.236815234 ubox
48 55 0.005835352 ubox
48 58 0.265451627 ubox
48 60 0.009718281 ubox
49 53 0.206116879 ubox
49 57 0.265944779 ubox
49 59 0.008561812 ubox
50 56 0.266157388 ubox
52 61 0.003740955 ubox
52 63 0.027332053 ubox
53 62 0.027132522 ubox
55 62 0.007916146 ubox
56 61 0.009505055 ubox
56 63 0.079143754 ubox
57 62 0.074252159 ubox
1 61 0.9500000 lbox
2 60 0.9500000 lbox
3 59 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
showpage
end
%%EOF
