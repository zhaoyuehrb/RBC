%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGAAUGCUUCAUUCGCCUCACAAACAACCACAGAACCACAAGUGCGGUGCAAACUUUCUCCAGGAGGACAGCAAGAAGUCUCUGGUUUUUAAAUGGUUAAUCUCCGCAGGUCACUACCAGCCACCGAGACCAACAGAGUCAUUUAAGGCUGCAAGCAGUAUUUACAACAGAGGGUACAAGUUCUAUCUGAAAAAAAAAGGAGGGACU\
) } def
/len { sequence length } bind def

/coor [
[188.49963379 252.64218140]
[188.63839722 244.17372131]
[180.22377014 231.75622559]
[171.80915833 219.33872986]
[163.39453125 206.92123413]
[154.97991943 194.50373840]
[146.56530762 182.08624268]
[138.15068054 169.66874695]
[129.73606873 157.25125122]
[121.32144165 144.83375549]
[112.90682983 132.41625977]
[104.37351227 136.74290466]
[94.46559906 138.71978760]
[83.85469055 137.93118286]
[73.33239746 134.15835571]
[63.75183868 127.41249847]
[55.96039581 117.95051575]
[43.12145233 125.70690918]
[30.28251266 133.46330261]
[17.44357300 141.21969604]
[9.63250160 154.97824097]
[-5.26204586 154.93684387]
[-18.10098648 162.69323730]
[-30.93992615 170.44961548]
[-27.07462502 185.05223083]
[-27.48130608 200.15226746]
[-32.12699890 214.52566528]
[-40.63509750 227.00720215]
[-52.31589127 236.58508301]
[-66.22247314 242.48284912]
[-81.22749329 244.22242737]
[-96.11455536 241.66276550]
[-109.67684937 235.01138306]
[-120.81493378 224.80746460]
[-128.62588501 211.87820435]
[-132.47651672 197.27172852]
[-132.05467224 182.17210388]
[-127.39453125 167.80339050]
[-118.87390137 155.33039856]
[-107.18348694 145.76426697]
[-93.27099609 139.88046265]
[-78.26423645 138.15596008]
[-63.37974548 140.73057556]
[-49.82414246 147.39558411]
[-38.69631958 157.61068726]
[-25.85737801 149.85429382]
[-13.01843739 142.09790039]
[-6.12569332 128.89413452]
[9.68718147 128.38075256]
[22.52612114 120.62435913]
[35.36506271 112.86796570]
[48.20400238 105.11157227]
[47.53488541 97.64148712]
[32.59469986 98.97972107]
[17.65449333 100.31770325]
[16.31675529 85.37747192]
[31.25646591 84.03953552]
[46.19665146 82.70130157]
[45.52753448 75.23120880]
[31.51451111 69.88002014]
[17.50148964 64.52883148]
[3.48846602 59.17764664]
[-10.52455711 53.82646179]
[-27.47850418 53.82442093]
[-32.16986084 37.53247452]
[-17.81330681 28.51439667]
[-5.17337084 39.81343842]
[8.83965206 45.16462708]
[22.85267448 50.51581192]
[36.86569595 55.86699677]
[50.87871933 61.21818161]
[64.10424805 54.14107895]
[67.42650604 39.51361847]
[70.74876404 24.88615799]
[74.07102966 10.25869751]
[64.02259064 -1.41756725]
[62.79066467 -16.59438324]
[70.63879395 -29.43458939]
[84.37840271 -35.12327957]
[87.70066071 -49.75074005]
[91.02291870 -64.37819672]
[94.34517670 -79.00566101]
[97.44928741 -93.68096161]
[100.33456421 -108.40085602]
[103.21983337 -123.12074280]
[106.10511017 -137.84063721]
[108.66094208 -152.62129211]
[110.88605499 -167.45533752]
[113.11117554 -182.28938293]
[115.33628845 -197.12341309]
[117.56140900 -211.95745850]
[119.78652191 -226.79150391]
[105.78641510 -237.41366577]
[99.12849426 -253.58099365]
[101.56352234 -270.80523682]
[112.33135986 -284.35394287]
[128.39494324 -290.55065918]
[130.17741394 -305.44439697]
[131.95988464 -320.33810425]
[133.74234009 -335.23181152]
[121.47329712 -349.66735840]
[123.61516571 -368.16940308]
[138.34385681 -379.04049683]
[139.68209839 -393.98068237]
[141.02032471 -408.92086792]
[142.35856628 -423.86105347]
[134.97163391 -438.50228882]
[144.18295288 -452.07003784]
[160.51669312 -450.60696411]
[167.17012024 -435.61816406]
[157.29875183 -422.52282715]
[155.96051025 -407.58264160]
[154.62228394 -392.64245605]
[153.28404236 -377.70227051]
[162.32322693 -370.74099731]
[166.92720032 -360.17126465]
[165.84611511 -348.57275391]
[159.23336792 -338.83764648]
[148.63606262 -333.44934082]
[146.85359192 -318.55563354]
[145.07113647 -303.66192627]
[143.28866577 -288.76818848]
[154.15805054 -282.32809448]
[161.81257629 -272.21826172]
[165.08694458 -259.91921997]
[163.46057129 -247.24900818]
[157.14001465 -236.09439087]
[147.03350830 -228.12986755]
[134.62057495 -224.56639099]
[132.39544678 -209.73234558]
[130.17033386 -194.89830017]
[127.94522095 -180.06425476]
[125.72010040 -165.23020935]
[123.49497986 -150.39617920]
[125.28546906 -147.35865784]
[125.69366455 -143.30299377]
[124.25705719 -138.88830566]
[120.82499695 -134.95536804]
[117.93972778 -120.23547363]
[115.05445099 -105.51557922]
[112.16918182 -90.79569244]
[114.04285431 -86.40269470]
[113.17676544 -80.78603363]
[108.97264099 -75.68340302]
[105.65038300 -61.05593872]
[102.32811737 -46.42847824]
[99.00585938 -31.80101967]
[108.94014740 -20.73540115]
[110.47175598 -5.76482391]
[102.80481720 7.39084005]
[88.69848633 13.58095646]
[85.37622833 28.20841599]
[82.05397034 42.83587646]
[78.73170471 57.46333694]
[100.08446503 54.55368805]
[119.52407837 61.31196213]
[133.11683655 75.44961548]
[138.53335571 93.28939056]
[135.42440796 110.69018555]
[125.32432556 124.00164032]
[133.73893738 136.41914368]
[142.15356445 148.83662415]
[150.56817627 161.25411987]
[158.98280334 173.67161560]
[167.39741516 186.08911133]
[175.81202698 198.50660706]
[184.22665405 210.92410278]
[192.64126587 223.34159851]
[201.05589294 235.75909424]
[201.40522766 220.76316833]
[208.01281738 207.29692078]
[219.65977478 197.84448242]
[234.19757080 194.14955139]
[248.94441223 196.89370728]
[261.17996216 205.57075500]
[268.64715576 218.58003235]
[269.96847534 233.52172852]
[264.90017700 247.63954163]
[254.37725830 258.32916260]
[240.34083557 263.61865234]
[225.38021851 262.53231812]
[212.25750732 255.27252197]
[218.73699951 268.80087280]
[225.21649170 282.32922363]
[231.69598389 295.85757446]
[238.17549133 309.38592529]
[244.65498352 322.91424561]
[257.59439087 332.01824951]
[256.11395264 346.83908081]
[262.59344482 360.36743164]
[269.07293701 373.89578247]
[284.39328003 375.70986938]
[296.28625488 385.53637695]
[300.95684814 400.23974609]
[296.91473389 415.12817383]
[285.44970703 425.45077515]
[270.22018433 427.91369629]
[256.08590698 421.73101807]
[247.55705261 408.87557983]
[247.35513306 393.44952393]
[255.54458618 380.37527466]
[249.06509399 366.84692383]
[242.58560181 353.31857300]
[230.10964966 345.18225098]
[231.12663269 329.39373779]
[224.64714050 315.86541748]
[218.16764832 302.33706665]
[211.68814087 288.80871582]
[205.20864868 275.28036499]
[198.72915649 261.75201416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[17 52]
[18 51]
[19 50]
[20 49]
[22 47]
[23 46]
[24 45]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[72 154]
[73 153]
[74 152]
[75 151]
[79 147]
[80 146]
[81 145]
[82 144]
[83 141]
[84 140]
[85 139]
[86 138]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[97 122]
[98 121]
[99 120]
[100 119]
[103 114]
[104 113]
[105 112]
[106 111]
[182 210]
[183 209]
[184 208]
[185 207]
[186 206]
[187 205]
[189 203]
[190 202]
[191 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
