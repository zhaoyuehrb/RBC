%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TCF23)
} def

/sequence { (\
AAGGCCUCCUCAGGCACUGUGUUUCUGCUCUGUGGGCUGCAGCCCCAGUGGGGUGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.004716914 ubox
2 18 0.176110114 ubox
2 38 0.056405771 ubox
3 9 0.004998043 ubox
3 17 0.181312901 ubox
3 37 0.047166655 ubox
3 38 0.442075442 ubox
4 8 0.004919716 ubox
4 15 0.203917571 ubox
4 37 0.478864115 ubox
4 40 0.036335472 ubox
4 54 0.016411074 ubox
4 57 0.839680962 ubox
5 14 0.204111601 ubox
5 35 0.027604258 ubox
5 36 0.478857580 ubox
5 39 0.036422028 ubox
5 53 0.016907128 ubox
5 56 0.849398918 ubox
6 13 0.204042691 ubox
6 34 0.027351766 ubox
6 35 0.468779388 ubox
6 36 0.035941756 ubox
6 52 0.016894103 ubox
6 53 0.004365222 ubox
6 55 0.848439255 ubox
6 56 0.005743910 ubox
7 12 0.186469075 ubox
7 34 0.413617975 ubox
7 35 0.022690987 ubox
7 36 0.053519382 ubox
7 51 0.014838214 ubox
7 52 0.006319242 ubox
7 53 0.043571051 ubox
7 55 0.005865059 ubox
8 34 0.170611981 ubox
8 35 0.121867947 ubox
8 36 0.029127507 ubox
8 50 0.014662874 ubox
8 51 0.010647945 ubox
8 52 0.046083695 ubox
8 53 0.846604781 ubox
9 34 0.155218601 ubox
9 35 0.029455476 ubox
9 48 0.010111358 ubox
9 50 0.010683210 ubox
9 51 0.046073491 ubox
9 52 0.847815327 ubox
9 53 0.008748764 ubox
10 34 0.028571988 ubox
10 47 0.009640706 ubox
10 50 0.035262073 ubox
10 51 0.846729493 ubox
10 52 0.008803854 ubox
11 19 0.011751521 ubox
11 27 0.043200498 ubox
11 32 0.483939005 ubox
11 34 0.003327357 ubox
11 50 0.845162164 ubox
11 51 0.018424463 ubox
12 18 0.016485938 ubox
12 20 0.003649672 ubox
12 23 0.005941909 ubox
12 24 0.093187063 ubox
12 26 0.059766413 ubox
12 29 0.023446451 ubox
12 31 0.484727700 ubox
12 33 0.003344063 ubox
12 49 0.757867477 ubox
13 17 0.018129943 ubox
13 22 0.009148556 ubox
13 23 0.168098267 ubox
13 24 0.010857523 ubox
13 25 0.066631052 ubox
13 26 0.011662563 ubox
13 28 0.024529148 ubox
13 29 0.743341412 ubox
13 30 0.482737264 ubox
13 44 0.047001650 ubox
13 45 0.037621602 ubox
13 46 0.157426370 ubox
14 20 0.031185528 ubox
14 22 0.194718430 ubox
14 23 0.010845327 ubox
14 24 0.056061368 ubox
14 25 0.012225139 ubox
14 28 0.921099191 ubox
14 29 0.061517995 ubox
14 33 0.038899066 ubox
14 43 0.047085444 ubox
14 44 0.037548211 ubox
14 45 0.157688085 ubox
14 49 0.006138138 ubox
15 19 0.032003574 ubox
15 21 0.197312859 ubox
15 27 0.922916341 ubox
15 32 0.040128451 ubox
15 34 0.014366752 ubox
15 42 0.043477575 ubox
15 48 0.007206152 ubox
15 50 0.043969995 ubox
16 20 0.159983169 ubox
16 22 0.084566486 ubox
16 26 0.841529078 ubox
16 31 0.039765971 ubox
16 33 0.016513419 ubox
16 49 0.050925529 ubox
16 54 0.004352892 ubox
17 21 0.102467244 ubox
17 32 0.016712468 ubox
17 42 0.164101363 ubox
17 48 0.056124517 ubox
17 53 0.004476327 ubox
17 56 0.005229145 ubox
18 27 0.005932042 ubox
18 41 0.167891873 ubox
18 47 0.055994706 ubox
18 52 0.004271073 ubox
18 55 0.005130684 ubox
19 26 0.019435235 ubox
19 28 0.085748109 ubox
19 37 0.003265833 ubox
19 40 0.168540812 ubox
19 43 0.004493187 ubox
19 46 0.055663868 ubox
19 54 0.004245564 ubox
19 57 0.026979840 ubox
20 27 0.084241930 ubox
20 39 0.166410084 ubox
20 41 0.026491006 ubox
20 42 0.003874777 ubox
20 56 0.026527077 ubox
21 26 0.047693610 ubox
21 28 0.091397757 ubox
21 37 0.061412812 ubox
21 38 0.129185951 ubox
21 40 0.027177233 ubox
21 43 0.037364997 ubox
21 57 0.083416064 ubox
22 27 0.090063629 ubox
22 36 0.054613353 ubox
22 39 0.026571810 ubox
22 42 0.036996560 ubox
22 53 0.003740952 ubox
22 56 0.083671956 ubox
23 35 0.033588099 ubox
23 36 0.073910245 ubox
23 41 0.033295384 ubox
23 52 0.004068947 ubox
23 53 0.026422000 ubox
23 55 0.075530328 ubox
23 56 0.005464091 ubox
24 34 0.022619676 ubox
24 35 0.077644198 ubox
24 36 0.092921896 ubox
24 51 0.003918097 ubox
24 52 0.037134311 ubox
24 53 0.022170703 ubox
24 55 0.005726222 ubox
24 56 0.016616307 ubox
25 34 0.081011209 ubox
25 35 0.109481798 ubox
25 36 0.015675135 ubox
25 42 0.024243963 ubox
25 48 0.011103390 ubox
25 50 0.004225146 ubox
25 51 0.040993206 ubox
25 52 0.027385731 ubox
25 53 0.083000881 ubox
25 55 0.021699178 ubox
25 56 0.160391193 ubox
26 32 0.010165701 ubox
26 34 0.109423316 ubox
26 35 0.015563481 ubox
26 41 0.024951611 ubox
26 47 0.011118051 ubox
26 50 0.040587944 ubox
26 51 0.026672425 ubox
26 52 0.081619741 ubox
26 55 0.162487073 ubox
27 31 0.005791588 ubox
27 33 0.111417801 ubox
27 37 0.118718384 ubox
27 40 0.024996847 ubox
27 46 0.011054980 ubox
27 49 0.037298413 ubox
27 54 0.167053886 ubox
27 57 0.007669712 ubox
28 32 0.111117029 ubox
28 35 0.004115568 ubox
28 36 0.118812277 ubox
28 39 0.024972103 ubox
28 48 0.034529633 ubox
28 51 0.038671847 ubox
28 52 0.014816361 ubox
28 53 0.167524977 ubox
28 56 0.007751153 ubox
29 34 0.003951275 ubox
29 35 0.118186409 ubox
29 36 0.004515514 ubox
29 47 0.025026654 ubox
29 50 0.037161926 ubox
29 51 0.015516299 ubox
29 52 0.166951928 ubox
29 55 0.007630717 ubox
30 34 0.114090834 ubox
30 35 0.009482751 ubox
30 36 0.011520235 ubox
30 42 0.003254656 ubox
30 48 0.823521287 ubox
30 50 0.012489272 ubox
30 51 0.154707652 ubox
31 35 0.010398340 ubox
31 41 0.003541629 ubox
31 47 0.834408476 ubox
31 50 0.148198795 ubox
32 40 0.003595284 ubox
32 46 0.837403732 ubox
32 49 0.109462473 ubox
33 39 0.003540465 ubox
33 47 0.106731638 ubox
33 48 0.028552387 ubox
34 44 0.007338059 ubox
34 45 0.847885136 ubox
34 46 0.095603531 ubox
35 43 0.006932917 ubox
35 44 0.849608779 ubox
35 45 0.081295449 ubox
36 43 0.851083918 ubox
36 44 0.063735379 ubox
36 57 0.016889627 ubox
37 42 0.849804104 ubox
37 48 0.003359515 ubox
37 56 0.017408187 ubox
38 47 0.003375182 ubox
38 55 0.017021939 ubox
39 46 0.003354516 ubox
39 54 0.005733438 ubox
39 57 0.468997540 ubox
40 53 0.005113947 ubox
40 55 0.082518465 ubox
40 56 0.471382237 ubox
41 54 0.077425002 ubox
42 54 0.460528742 ubox
42 57 0.022770881 ubox
43 52 0.061521564 ubox
43 53 0.485800798 ubox
43 56 0.022983698 ubox
44 51 0.061561550 ubox
44 52 0.485816135 ubox
44 53 0.009393295 ubox
44 55 0.022649667 ubox
45 50 0.061311402 ubox
45 51 0.485787578 ubox
45 52 0.010924281 ubox
45 53 0.022304037 ubox
46 50 0.482257908 ubox
46 51 0.011712985 ubox
46 52 0.022262797 ubox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
