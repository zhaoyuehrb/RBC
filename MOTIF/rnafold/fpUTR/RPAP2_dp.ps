%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPAP2)
} def

/sequence { (\
CCGGCGUCUUAGCCCGCUCUUCUGGCCCCGCCCCGCGCUACGCGUAGGGAGGCGGGGCCUCGGGGCGAGACGCCGGAGCGUGUCCCCGUCCGGCAGACUACUCUCCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 76 0.429710960 ubox
2 16 0.005220142 ubox
2 75 0.566341239 ubox
3 14 0.013592879 ubox
3 15 0.004749039 ubox
3 18 0.004109068 ubox
3 74 0.999152898 ubox
4 13 0.013866962 ubox
4 14 0.003971159 ubox
4 17 0.004623702 ubox
4 73 0.999870471 ubox
5 12 0.014106311 ubox
5 16 0.004627811 ubox
5 72 0.999860515 ubox
6 15 0.004599816 ubox
6 71 0.999843317 ubox
7 70 0.999754667 ubox
8 69 0.999828711 ubox
9 68 0.993796748 ubox
9 69 0.005265060 ubox
10 67 0.855905987 ubox
10 68 0.037197772 ubox
12 66 0.799355181 ubox
13 64 0.477918073 ubox
13 65 0.795556605 ubox
14 63 0.484952444 ubox
14 64 0.790979794 ubox
14 65 0.013233369 ubox
15 62 0.491800459 ubox
15 63 0.783825672 ubox
15 64 0.016788973 ubox
15 67 0.344096334 ubox
16 23 0.016416503 ubox
16 61 0.489191504 ubox
16 66 0.371827815 ubox
17 63 0.034417989 ubox
17 64 0.015725076 ubox
17 65 0.371714685 ubox
18 62 0.058600701 ubox
18 63 0.030735791 ubox
18 64 0.362334073 ubox
18 65 0.009447760 ubox
19 24 0.012837154 ubox
19 62 0.170282628 ubox
19 63 0.363652890 ubox
19 64 0.083029926 ubox
19 65 0.003255306 ubox
20 62 0.339061890 ubox
20 63 0.085220726 ubox
20 64 0.005645382 ubox
21 62 0.209013375 ubox
21 63 0.027376185 ubox
21 64 0.003405554 ubox
22 62 0.158135553 ubox
22 63 0.014275000 ubox
23 62 0.025387750 ubox
24 59 0.998790248 ubox
24 60 0.017061065 ubox
24 61 0.008613389 ubox
25 58 0.999911751 ubox
25 59 0.012495207 ubox
26 57 0.999994844 ubox
27 56 0.999994516 ubox
28 55 0.999994427 ubox
29 54 0.999977886 ubox
30 53 0.999974847 ubox
31 49 0.034468453 ubox
31 52 0.999016129 ubox
32 48 0.050742398 ubox
32 49 0.290854441 ubox
32 51 0.954833516 ubox
33 47 0.062915409 ubox
33 48 0.411473674 ubox
33 49 0.907891956 ubox
34 44 0.052848245 ubox
34 47 0.420813674 ubox
34 48 0.899821832 ubox
35 43 0.109910734 ubox
35 45 0.931965258 ubox
36 42 0.109950053 ubox
36 44 0.975933025 ubox
37 41 0.102864956 ubox
37 43 0.976646145 ubox
37 45 0.178941214 ubox
38 42 0.969556719 ubox
38 44 0.179523383 ubox
38 47 0.017819938 ubox
39 46 0.017708968 ubox
40 45 0.015974608 ubox
62 108 0.009598736 ubox
62 109 0.008546705 ubox
63 107 0.009624992 ubox
63 108 0.008620635 ubox
64 106 0.009627805 ubox
64 107 0.008618583 ubox
65 105 0.009625215 ubox
65 106 0.008614516 ubox
67 103 0.009709166 ubox
67 105 0.008667300 ubox
68 102 0.009709960 ubox
68 104 0.008693516 ubox
69 101 0.009662428 ubox
69 103 0.008694329 ubox
70 102 0.008395851 ubox
72 94 0.015469474 ubox
73 93 0.015511044 ubox
74 92 0.015544469 ubox
75 85 0.006350802 ubox
75 91 0.027590959 ubox
75 102 0.003168825 ubox
75 104 0.014785205 ubox
75 105 0.005016390 ubox
75 106 0.820021696 ubox
75 107 0.053329273 ubox
75 108 0.010790136 ubox
75 109 0.003888324 ubox
76 84 0.006965283 ubox
76 90 0.028555631 ubox
76 101 0.009084979 ubox
76 103 0.042372865 ubox
76 105 0.899466282 ubox
76 106 0.041491324 ubox
76 107 0.009740738 ubox
76 108 0.004207333 ubox
77 83 0.007233867 ubox
77 89 0.024938363 ubox
77 99 0.197446419 ubox
77 102 0.052314132 ubox
77 104 0.944837782 ubox
78 89 0.134087786 ubox
78 94 0.017933743 ubox
78 98 0.203530887 ubox
78 101 0.052655298 ubox
78 103 0.949483513 ubox
79 88 0.141050074 ubox
79 92 0.003983492 ubox
79 93 0.017785072 ubox
80 87 0.138594351 ubox
80 91 0.005771936 ubox
80 94 0.003493117 ubox
80 98 0.023183881 ubox
80 101 0.952901845 ubox
81 88 0.007023291 ubox
81 92 0.009951138 ubox
81 95 0.207145677 ubox
81 97 0.022147471 ubox
81 100 0.936474907 ubox
82 87 0.009770680 ubox
82 91 0.012956824 ubox
82 94 0.208680654 ubox
82 98 0.940519081 ubox
82 99 0.207979532 ubox
82 101 0.005412177 ubox
83 93 0.173202535 ubox
83 97 0.960857791 ubox
83 100 0.005166949 ubox
84 92 0.171756633 ubox
84 93 0.121297000 ubox
84 96 0.957840091 ubox
85 92 0.124098789 ubox
85 93 0.387164254 ubox
86 92 0.387843375 ubox
86 93 0.863876690 ubox
87 92 0.864301157 ubox
88 94 0.111866169 ubox
88 98 0.056998863 ubox
89 93 0.104717039 ubox
89 97 0.057039019 ubox
90 96 0.056966244 ubox
92 99 0.003319474 ubox
92 104 0.004492113 ubox
92 105 0.004917401 ubox
92 106 0.098229258 ubox
92 107 0.117911467 ubox
92 108 0.030014538 ubox
92 109 0.020361509 ubox
93 98 0.003520331 ubox
93 103 0.004968045 ubox
93 104 0.004316931 ubox
93 105 0.098517563 ubox
93 106 0.118088789 ubox
93 107 0.029539872 ubox
93 108 0.020485201 ubox
95 102 0.013173729 ubox
95 104 0.154955112 ubox
96 101 0.013574283 ubox
96 103 0.157484637 ubox
96 105 0.021458658 ubox
97 102 0.141881495 ubox
97 104 0.020118917 ubox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
15 63 0.9500000 lbox
24 59 0.9500000 lbox
25 58 0.9500000 lbox
26 57 0.9500000 lbox
27 56 0.9500000 lbox
28 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
75 106 0.9500000 lbox
76 105 0.9500000 lbox
77 104 0.9500000 lbox
78 103 0.9500000 lbox
80 101 0.9500000 lbox
81 100 0.9500000 lbox
82 98 0.9500000 lbox
83 97 0.9500000 lbox
84 96 0.9500000 lbox
86 93 0.9500000 lbox
87 92 0.9500000 lbox
showpage
end
%%EOF
