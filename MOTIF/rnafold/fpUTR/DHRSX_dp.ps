%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DHRSX)
} def

/sequence { (\
AGAGUCCCGCGGGCGGCGCGGAAGCGGCGGCGGCGCGGCCGGGGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 14 0.012754816 ubox
4 25 0.006120801 ubox
4 36 0.006675979 ubox
4 39 0.008681129 ubox
4 45 0.995353663 ubox
4 48 0.037487639 ubox
5 13 0.012677820 ubox
5 22 0.013968403 ubox
5 24 0.006030344 ubox
5 35 0.006603195 ubox
5 38 0.007433896 ubox
5 42 0.003633986 ubox
5 43 0.006333578 ubox
5 44 0.994242335 ubox
5 47 0.036173453 ubox
6 12 0.012703149 ubox
6 21 0.014091716 ubox
6 37 0.007333316 ubox
6 38 0.004508052 ubox
6 41 0.005317644 ubox
6 42 0.008538296 ubox
6 43 0.995309319 ubox
6 44 0.073153187 ubox
7 11 0.012612244 ubox
7 20 0.013177645 ubox
7 21 0.042240836 ubox
7 33 0.007314430 ubox
7 37 0.004350226 ubox
7 38 0.043172994 ubox
7 41 0.007995103 ubox
7 42 0.994567719 ubox
7 43 0.073627403 ubox
7 44 0.032608969 ubox
8 18 0.012459395 ubox
8 20 0.045261216 ubox
8 32 0.007349958 ubox
8 35 0.009208263 ubox
8 37 0.056133468 ubox
8 41 0.993362602 ubox
8 42 0.073805556 ubox
8 43 0.032887620 ubox
9 17 0.015733237 ubox
9 19 0.048830769 ubox
9 31 0.014659556 ubox
9 34 0.012113268 ubox
9 36 0.092263108 ubox
9 39 0.404265988 ubox
9 40 0.854331981 ubox
10 16 0.015775146 ubox
10 18 0.048875595 ubox
10 30 0.014664483 ubox
10 32 0.008012586 ubox
10 33 0.012520701 ubox
10 35 0.097864292 ubox
10 37 0.671418700 ubox
10 38 0.495488331 ubox
10 41 0.080675851 ubox
11 17 0.048784174 ubox
11 31 0.008814555 ubox
11 34 0.097846366 ubox
11 36 0.741272533 ubox
11 40 0.084966657 ubox
12 39 0.079525644 ubox
12 40 0.257932967 ubox
12 49 0.003666497 ubox
13 28 0.015253888 ubox
13 31 0.081732040 ubox
13 34 0.743069697 ubox
13 36 0.586953008 ubox
13 39 0.288020757 ubox
13 48 0.003732097 ubox
14 27 0.015259691 ubox
14 29 0.066624982 ubox
14 30 0.073685487 ubox
14 32 0.333090126 ubox
14 33 0.665951096 ubox
14 35 0.587192641 ubox
14 37 0.053537231 ubox
14 38 0.290085965 ubox
14 41 0.005809514 ubox
14 47 0.003724420 ubox
15 28 0.098242512 ubox
15 31 0.467610213 ubox
15 34 0.586957984 ubox
15 36 0.041228744 ubox
15 40 0.010397667 ubox
15 49 0.012492320 ubox
16 25 0.015443637 ubox
16 28 0.066129522 ubox
16 31 0.572917684 ubox
16 34 0.023152751 ubox
16 36 0.288970443 ubox
16 39 0.011153262 ubox
16 45 0.003833171 ubox
16 48 0.012583959 ubox
17 24 0.015452204 ubox
17 26 0.113516141 ubox
17 27 0.052850939 ubox
17 29 0.590508623 ubox
17 30 0.447947303 ubox
17 32 0.586925335 ubox
17 33 0.018690906 ubox
17 35 0.290872616 ubox
17 37 0.041073333 ubox
17 38 0.007961797 ubox
17 44 0.003844762 ubox
17 47 0.012577920 ubox
18 25 0.138811900 ubox
18 28 0.689435597 ubox
18 31 0.586877171 ubox
18 34 0.290611460 ubox
18 36 0.042911296 ubox
18 45 0.012353416 ubox
19 24 0.138879426 ubox
19 26 0.247826448 ubox
19 27 0.650194476 ubox
19 29 0.322736627 ubox
19 30 0.548430601 ubox
19 32 0.047015583 ubox
19 33 0.285196746 ubox
19 35 0.042980825 ubox
19 41 0.004411977 ubox
19 44 0.012385088 ubox
20 25 0.340987659 ubox
20 28 0.383798458 ubox
20 31 0.062785343 ubox
20 34 0.042950568 ubox
20 40 0.011757459 ubox
21 39 0.011685793 ubox
24 31 0.244684765 ubox
24 36 0.011592480 ubox
24 39 0.016219230 ubox
24 45 0.021800234 ubox
24 48 0.022789824 ubox
25 30 0.246752116 ubox
25 32 0.076934512 ubox
25 35 0.011580445 ubox
25 38 0.016297844 ubox
25 41 0.033261485 ubox
25 44 0.021749646 ubox
25 47 0.022760714 ubox
26 31 0.076830796 ubox
26 34 0.009222946 ubox
26 40 0.036094682 ubox
26 49 0.009365671 ubox
27 34 0.017207825 ubox
27 36 0.020951650 ubox
27 39 0.036130161 ubox
27 45 0.022102632 ubox
27 48 0.009435094 ubox
28 33 0.018665069 ubox
28 35 0.021120635 ubox
28 38 0.036088323 ubox
28 41 0.022763232 ubox
28 44 0.022111894 ubox
28 47 0.009412318 ubox
29 34 0.021136857 ubox
29 40 0.026743567 ubox
30 36 0.036406056 ubox
30 39 0.028124099 ubox
30 45 0.004845705 ubox
31 35 0.036157360 ubox
31 38 0.028095595 ubox
31 41 0.023641320 ubox
31 44 0.004486410 ubox
32 40 0.031486170 ubox
33 39 0.031824770 ubox
34 38 0.031595336 ubox
37 49 0.006572446 ubox
38 45 0.003710718 ubox
38 48 0.006711584 ubox
39 44 0.003790809 ubox
39 47 0.006727719 ubox
41 49 0.016719976 ubox
42 48 0.016966128 ubox
42 49 0.021622049 ubox
43 48 0.021879536 ubox
43 49 0.004463619 ubox
44 48 0.004583724 ubox
4 45 0.9500000 lbox
5 44 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
showpage
end
%%EOF
