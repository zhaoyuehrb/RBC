%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAD51C)
} def

/sequence { (\
GACGUCACGCCGCACGCCCCAGCGAGGGCGUGCGGAGUUUGGCUGCUCCGGGGUUAGCAGGUGAGCCUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.007432679 ubox
1 40 0.007953205 ubox
1 48 0.207062044 ubox
1 55 0.319545082 ubox
2 38 0.008249210 ubox
2 39 0.009442116 ubox
2 47 0.206758887 ubox
2 54 0.338035023 ubox
3 9 0.056765146 ubox
3 12 0.010644338 ubox
3 37 0.008120147 ubox
3 41 0.074051138 ubox
3 45 0.177280517 ubox
3 50 0.019341503 ubox
3 53 0.340096270 ubox
3 69 0.011982775 ubox
3 71 0.095647329 ubox
4 8 0.054631788 ubox
4 10 0.017028426 ubox
4 11 0.013747002 ubox
4 33 0.005611647 ubox
4 40 0.072557825 ubox
4 43 0.514441577 ubox
4 44 0.010718417 ubox
4 46 0.013872959 ubox
4 49 0.014415817 ubox
4 54 0.006737753 ubox
4 58 0.004347910 ubox
4 66 0.009935608 ubox
4 68 0.009155871 ubox
4 70 0.096592430 ubox
5 9 0.016174887 ubox
5 36 0.006282691 ubox
5 42 0.515051581 ubox
5 45 0.012488744 ubox
5 51 0.324126380 ubox
5 52 0.042043199 ubox
5 53 0.011231150 ubox
5 57 0.004593459 ubox
5 64 0.017482801 ubox
5 65 0.005977323 ubox
5 69 0.077651445 ubox
6 32 0.021429069 ubox
6 35 0.003917227 ubox
6 41 0.512163159 ubox
6 45 0.007247483 ubox
6 50 0.324927899 ubox
6 51 0.046540010 ubox
6 52 0.015630152 ubox
6 63 0.019358592 ubox
6 69 0.051951879 ubox
7 31 0.022038750 ubox
7 38 0.399904375 ubox
7 40 0.399994296 ubox
7 44 0.005845109 ubox
7 54 0.636677278 ubox
7 62 0.019213188 ubox
7 68 0.046324530 ubox
8 30 0.022116988 ubox
8 37 0.501238541 ubox
8 41 0.007644293 ubox
8 45 0.004176087 ubox
8 50 0.042690927 ubox
8 53 0.680446070 ubox
8 61 0.019172134 ubox
8 69 0.011233884 ubox
8 71 0.044648043 ubox
9 29 0.022120277 ubox
9 38 0.068284409 ubox
9 40 0.007673756 ubox
9 43 0.004498972 ubox
9 44 0.003242831 ubox
9 46 0.006824234 ubox
9 49 0.037188061 ubox
9 54 0.153345294 ubox
9 66 0.004530693 ubox
9 68 0.008689054 ubox
9 70 0.045922380 ubox
10 28 0.022108177 ubox
10 35 0.644881575 ubox
10 37 0.043127559 ubox
10 42 0.004196197 ubox
10 45 0.004932710 ubox
10 51 0.677126257 ubox
10 52 0.104971912 ubox
10 53 0.160099235 ubox
10 69 0.038807955 ubox
11 27 0.022065894 ubox
11 34 0.654814945 ubox
11 41 0.003786282 ubox
11 50 0.676410889 ubox
11 51 0.105198129 ubox
11 52 0.159839707 ubox
11 71 0.003328338 ubox
12 33 0.997191987 ubox
12 49 0.005286457 ubox
13 32 0.999709713 ubox
14 31 0.999543205 ubox
15 24 0.021712915 ubox
15 30 0.999712992 ubox
16 23 0.022013473 ubox
16 29 0.999734933 ubox
17 22 0.021942974 ubox
17 28 0.998309554 ubox
18 27 0.996865486 ubox
18 28 0.053610543 ubox
19 26 0.993436583 ubox
19 27 0.075801453 ubox
20 26 0.092772700 ubox
32 70 0.004944927 ubox
33 50 0.065417445 ubox
33 69 0.005240549 ubox
34 49 0.754779172 ubox
34 68 0.009897599 ubox
34 70 0.003789558 ubox
35 48 0.761156589 ubox
35 55 0.017517553 ubox
35 67 0.021577399 ubox
36 44 0.044184703 ubox
36 47 0.765677431 ubox
36 54 0.056102507 ubox
36 55 0.006387617 ubox
36 68 0.057820970 ubox
37 43 0.045408226 ubox
37 46 0.766319544 ubox
37 54 0.003939321 ubox
37 66 0.214120436 ubox
37 67 0.042591710 ubox
37 70 0.014360951 ubox
38 42 0.042518790 ubox
38 45 0.758647223 ubox
38 52 0.072698133 ubox
38 53 0.004076998 ubox
38 65 0.218722299 ubox
38 69 0.014232646 ubox
39 50 0.003622114 ubox
39 51 0.103955208 ubox
39 52 0.006281773 ubox
39 56 0.011596304 ubox
39 57 0.012396805 ubox
39 64 0.220694508 ubox
39 65 0.008573867 ubox
40 50 0.117239885 ubox
40 51 0.005054799 ubox
40 56 0.185579990 ubox
40 63 0.220121021 ubox
40 64 0.009870798 ubox
41 47 0.012436533 ubox
41 48 0.020564814 ubox
41 49 0.173006484 ubox
41 55 0.198261927 ubox
41 62 0.213711329 ubox
41 67 0.030707169 ubox
42 46 0.013552839 ubox
42 47 0.014734499 ubox
42 48 0.171847585 ubox
42 54 0.206921422 ubox
42 58 0.011042834 ubox
42 62 0.009930839 ubox
42 66 0.030784494 ubox
42 70 0.012577086 ubox
43 51 0.048023853 ubox
43 52 0.039790082 ubox
43 53 0.207064194 ubox
43 57 0.011826275 ubox
43 60 0.222887170 ubox
43 61 0.007665005 ubox
43 65 0.030430663 ubox
43 69 0.012509749 ubox
44 50 0.053799848 ubox
44 51 0.045707842 ubox
44 52 0.204911464 ubox
44 56 0.049308391 ubox
44 59 0.223285355 ubox
44 60 0.003802700 ubox
44 64 0.028402132 ubox
44 71 0.049612270 ubox
45 49 0.055412939 ubox
45 54 0.209193259 ubox
45 55 0.038634868 ubox
45 58 0.223657340 ubox
45 62 0.008680317 ubox
45 66 0.013557666 ubox
45 70 0.089420113 ubox
46 52 0.064376511 ubox
46 53 0.222717327 ubox
46 57 0.223662820 ubox
46 61 0.008861505 ubox
46 65 0.013576680 ubox
46 69 0.086200347 ubox
47 51 0.058717309 ubox
47 52 0.204875755 ubox
47 53 0.025635816 ubox
47 56 0.220015086 ubox
47 60 0.008197886 ubox
47 61 0.003645835 ubox
47 64 0.013305304 ubox
48 52 0.040854294 ubox
48 60 0.004230043 ubox
48 61 0.026590594 ubox
48 63 0.011279831 ubox
49 60 0.027079637 ubox
49 69 0.163643825 ubox
49 71 0.023386654 ubox
50 62 0.003287873 ubox
50 67 0.004772380 ubox
50 68 0.187687065 ubox
50 70 0.024150179 ubox
51 66 0.004188111 ubox
51 67 0.188888002 ubox
51 68 0.040274803 ubox
52 66 0.188829586 ubox
52 67 0.042409732 ubox
52 68 0.006655169 ubox
53 66 0.042621193 ubox
53 67 0.006534847 ubox
53 70 0.003999549 ubox
54 64 0.188468874 ubox
54 65 0.041989374 ubox
54 69 0.003484087 ubox
55 63 0.188606346 ubox
55 64 0.040759800 ubox
56 62 0.185825961 ubox
57 66 0.007644773 ubox
57 70 0.953303117 ubox
58 65 0.007749811 ubox
58 69 0.954584505 ubox
59 68 0.954441600 ubox
60 67 0.954648286 ubox
61 66 0.948741369 ubox
61 70 0.007443771 ubox
62 69 0.007322944 ubox
63 68 0.004546882 ubox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
61 66 0.9500000 lbox
showpage
end
%%EOF
