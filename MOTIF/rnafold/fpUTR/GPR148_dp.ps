%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPR148)
} def

/sequence { (\
GACCCCUGUGGGGCAGAUCAACACUCAAGGCAGGUGCAGAAUCAACAACCUGUGACAAAGCCAGCCAUCCCUGCCAGGAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.230129178 ubox
1 26 0.029280540 ubox
1 69 0.007602252 ubox
2 9 0.005143101 ubox
2 18 0.228860880 ubox
2 25 0.029080155 ubox
2 68 0.006980161 ubox
3 8 0.005284611 ubox
3 11 0.022808963 ubox
3 12 0.096525923 ubox
3 13 0.598457846 ubox
3 34 0.003228700 ubox
3 78 0.034674226 ubox
4 10 0.022783125 ubox
4 11 0.099199086 ubox
4 12 0.600891606 ubox
4 13 0.056854895 ubox
4 33 0.003213501 ubox
4 77 0.034201372 ubox
4 78 0.144821636 ubox
5 10 0.098783147 ubox
5 11 0.601055080 ubox
5 12 0.057410177 ubox
5 13 0.009262099 ubox
5 30 0.006084584 ubox
5 77 0.140758815 ubox
5 78 0.771278837 ubox
6 10 0.596691849 ubox
6 11 0.057360662 ubox
6 12 0.009329216 ubox
6 16 0.050194143 ubox
6 29 0.006717461 ubox
6 77 0.773901867 ubox
6 78 0.011520709 ubox
6 81 0.025961580 ubox
7 11 0.008420629 ubox
7 15 0.050315940 ubox
7 23 0.012378479 ubox
7 28 0.006815447 ubox
7 76 0.772539600 ubox
7 77 0.010426050 ubox
7 80 0.026071885 ubox
8 14 0.050335840 ubox
8 22 0.014266303 ubox
8 24 0.023097375 ubox
8 68 0.010902967 ubox
8 74 0.519331471 ubox
8 75 0.586863358 ubox
8 82 0.005583038 ubox
9 13 0.047088915 ubox
9 20 0.009797867 ubox
9 21 0.012002713 ubox
9 23 0.023218385 ubox
9 27 0.034901854 ubox
9 67 0.022722417 ubox
9 73 0.717229520 ubox
9 76 0.005397893 ubox
9 81 0.005614535 ubox
10 19 0.012485363 ubox
10 22 0.023239379 ubox
10 26 0.038896950 ubox
10 66 0.023121750 ubox
10 69 0.006154851 ubox
10 70 0.016306416 ubox
10 71 0.177142415 ubox
10 72 0.728704188 ubox
10 75 0.006140773 ubox
11 18 0.011612706 ubox
11 19 0.009983448 ubox
11 25 0.038886969 ubox
11 26 0.005836247 ubox
11 65 0.023001627 ubox
11 68 0.005647920 ubox
11 69 0.016420795 ubox
11 70 0.177353850 ubox
11 71 0.732413289 ubox
11 72 0.208304011 ubox
11 74 0.006100630 ubox
11 75 0.006722855 ubox
12 18 0.009639866 ubox
12 19 0.014032953 ubox
12 24 0.038966757 ubox
12 25 0.006271670 ubox
12 62 0.026557039 ubox
12 66 0.041735392 ubox
12 68 0.004633863 ubox
12 69 0.174152639 ubox
12 70 0.732014372 ubox
12 71 0.208726394 ubox
12 72 0.004536953 ubox
12 74 0.005521260 ubox
12 75 0.084512393 ubox
13 18 0.010984822 ubox
13 24 0.012661262 ubox
13 31 0.005939164 ubox
13 61 0.029052994 ubox
13 65 0.056509015 ubox
13 68 0.147197286 ubox
13 69 0.722075193 ubox
13 70 0.207722257 ubox
13 71 0.004758710 ubox
13 74 0.095121798 ubox
13 82 0.010791336 ubox
14 30 0.006622046 ubox
14 54 0.004307357 ubox
14 60 0.029787386 ubox
14 64 0.059728198 ubox
14 73 0.095560478 ubox
14 81 0.013829081 ubox
15 25 0.193420641 ubox
15 72 0.094645643 ubox
16 24 0.206924204 ubox
16 26 0.413421350 ubox
16 43 0.018692947 ubox
16 69 0.212695225 ubox
16 71 0.089054963 ubox
17 25 0.399355597 ubox
17 42 0.018670260 ubox
17 68 0.248162483 ubox
18 30 0.005604851 ubox
18 40 0.015104405 ubox
18 41 0.013774316 ubox
18 55 0.020640421 ubox
18 67 0.242019287 ubox
18 79 0.013441264 ubox
19 29 0.019481213 ubox
19 39 0.019838365 ubox
19 54 0.021126092 ubox
19 77 0.003911202 ubox
19 78 0.014220122 ubox
20 53 0.012464712 ubox
22 36 0.022042839 ubox
22 54 0.006524042 ubox
22 73 0.011949974 ubox
23 35 0.022146116 ubox
23 53 0.005373564 ubox
23 72 0.011588497 ubox
24 30 0.010406972 ubox
24 33 0.003695291 ubox
24 34 0.022080460 ubox
24 52 0.004631300 ubox
24 60 0.292724469 ubox
24 64 0.041141603 ubox
24 77 0.052486517 ubox
24 78 0.062155519 ubox
24 81 0.269000069 ubox
25 29 0.010090071 ubox
25 32 0.003788564 ubox
25 33 0.018733621 ubox
25 55 0.142749396 ubox
25 59 0.283239731 ubox
25 63 0.040601591 ubox
25 76 0.051908303 ubox
25 77 0.060458367 ubox
25 78 0.040714728 ubox
25 79 0.493649703 ubox
25 80 0.193549179 ubox
26 33 0.010810298 ubox
26 54 0.147468333 ubox
26 73 0.005579905 ubox
26 77 0.051005371 ubox
26 78 0.548603107 ubox
27 53 0.086536953 ubox
27 72 0.005467180 ubox
28 51 0.012235239 ubox
28 72 0.005603423 ubox
29 50 0.012488376 ubox
29 62 0.114454870 ubox
29 66 0.709046626 ubox
29 70 0.015172846 ubox
29 71 0.005713000 ubox
29 75 0.586935059 ubox
30 37 0.003327703 ubox
30 49 0.012455737 ubox
30 53 0.356566484 ubox
30 61 0.114542257 ubox
30 65 0.710082326 ubox
30 69 0.015204647 ubox
30 70 0.005601100 ubox
30 74 0.587280997 ubox
31 36 0.003335342 ubox
31 52 0.369716296 ubox
31 60 0.113691561 ubox
31 64 0.709012916 ubox
31 73 0.587271228 ubox
32 51 0.370917087 ubox
32 72 0.587022464 ubox
33 43 0.007368943 ubox
33 50 0.371081041 ubox
33 62 0.708237183 ubox
33 66 0.063848090 ubox
33 69 0.016305132 ubox
33 70 0.042698865 ubox
33 71 0.582032863 ubox
34 42 0.007877982 ubox
34 46 0.011215361 ubox
34 49 0.371074415 ubox
34 56 0.108859658 ubox
34 61 0.709267090 ubox
34 65 0.072427668 ubox
34 68 0.029653414 ubox
34 69 0.059927394 ubox
34 70 0.576952054 ubox
35 41 0.012655792 ubox
35 44 0.031283210 ubox
35 45 0.012162305 ubox
35 47 0.083369050 ubox
35 48 0.359772317 ubox
35 54 0.367143020 ubox
35 55 0.113286347 ubox
35 57 0.059919273 ubox
35 60 0.701506596 ubox
35 63 0.162708903 ubox
35 64 0.080204692 ubox
35 67 0.121436327 ubox
36 43 0.037225072 ubox
36 46 0.116808274 ubox
36 53 0.686737288 ubox
36 56 0.065447791 ubox
36 61 0.290666601 ubox
36 62 0.130556582 ubox
36 65 0.167168407 ubox
36 66 0.100161355 ubox
37 52 0.695091491 ubox
37 54 0.045440085 ubox
37 60 0.308229195 ubox
37 64 0.179313249 ubox
38 51 0.695090998 ubox
38 53 0.043902737 ubox
39 50 0.693671938 ubox
39 69 0.035339545 ubox
40 68 0.033884513 ubox
41 53 0.045869534 ubox
41 68 0.005740223 ubox
42 52 0.023760397 ubox
42 55 0.498143146 ubox
42 67 0.006846512 ubox
43 52 0.232869727 ubox
43 54 0.509001762 ubox
44 51 0.218412880 ubox
44 53 0.408699901 ubox
45 53 0.353998729 ubox
46 52 0.462880533 ubox
46 54 0.046251499 ubox
47 51 0.375232247 ubox
47 53 0.043516618 ubox
49 78 0.006170525 ubox
50 60 0.025012377 ubox
50 64 0.062426433 ubox
50 77 0.006198359 ubox
51 57 0.011192720 ubox
51 59 0.025096893 ubox
51 63 0.063716530 ubox
51 67 0.006747775 ubox
51 76 0.006193602 ubox
52 56 0.011785652 ubox
52 61 0.045938203 ubox
52 62 0.054843132 ubox
52 65 0.012960569 ubox
52 66 0.006802500 ubox
52 68 0.018340397 ubox
52 75 0.006144457 ubox
53 60 0.056084797 ubox
53 63 0.046645439 ubox
53 64 0.012157435 ubox
53 67 0.027326889 ubox
54 62 0.087068939 ubox
54 66 0.051854071 ubox
54 69 0.052302092 ubox
55 68 0.049244320 ubox
60 74 0.016612677 ubox
60 82 0.004644061 ubox
61 73 0.012043991 ubox
61 78 0.011667967 ubox
61 81 0.004670628 ubox
62 73 0.017506928 ubox
62 77 0.011677217 ubox
63 72 0.021276846 ubox
64 71 0.021212895 ubox
64 74 0.013522437 ubox
64 82 0.041258507 ubox
65 73 0.013090598 ubox
65 78 0.006898235 ubox
65 81 0.041568390 ubox
66 73 0.006199998 ubox
66 77 0.006916489 ubox
67 72 0.006317612 ubox
68 79 0.138004497 ubox
69 78 0.146509868 ubox
70 77 0.145767888 ubox
70 78 0.091752635 ubox
71 77 0.092731250 ubox
71 78 0.015313849 ubox
71 81 0.009141007 ubox
72 76 0.084242698 ubox
72 77 0.014991899 ubox
72 80 0.009215402 ubox
73 82 0.016443984 ubox
74 81 0.016633705 ubox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
6 10 0.9500000 lbox
25 79 0.9500000 lbox
26 78 0.9500000 lbox
29 75 0.9500000 lbox
30 74 0.9500000 lbox
31 73 0.9500000 lbox
32 72 0.9500000 lbox
33 71 0.9500000 lbox
34 70 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
showpage
end
%%EOF
