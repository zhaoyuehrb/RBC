%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED27)
} def

/sequence { (\
GCUUGCGAAGCCGGCUUUGGAGAGCUGCUGUGGCGGCGGCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.070651459 ubox
1 15 0.176918936 ubox
1 25 0.651224627 ubox
1 34 0.021775087 ubox
1 37 0.379595847 ubox
1 40 0.513482295 ubox
2 10 0.071277376 ubox
2 14 0.177226862 ubox
2 20 0.014870306 ubox
2 22 0.219275006 ubox
2 24 0.652408003 ubox
2 33 0.021763629 ubox
2 36 0.378583928 ubox
2 39 0.513557421 ubox
3 9 0.070243978 ubox
3 13 0.173950040 ubox
3 19 0.013453759 ubox
3 20 0.003545084 ubox
3 21 0.211490348 ubox
3 22 0.288637906 ubox
3 23 0.616521162 ubox
3 32 0.019451047 ubox
3 33 0.003835051 ubox
3 35 0.293004161 ubox
3 36 0.104645256 ubox
3 38 0.480420506 ubox
3 39 0.019932717 ubox
3 42 0.090533712 ubox
4 8 0.058485776 ubox
4 9 0.007120029 ubox
4 13 0.008945609 ubox
4 20 0.191968860 ubox
4 21 0.413587550 ubox
4 22 0.548247142 ubox
4 23 0.005298811 ubox
4 32 0.012880341 ubox
4 35 0.357136847 ubox
4 38 0.117170595 ubox
4 41 0.106197344 ubox
5 11 0.176107512 ubox
5 12 0.011584787 ubox
5 15 0.034622510 ubox
5 25 0.027438854 ubox
5 31 0.019289293 ubox
5 34 0.453785842 ubox
5 37 0.165597080 ubox
5 40 0.108602366 ubox
6 10 0.174996527 ubox
6 13 0.016756316 ubox
6 14 0.033903338 ubox
6 19 0.726723315 ubox
6 24 0.027481300 ubox
6 30 0.019924520 ubox
6 32 0.182173654 ubox
6 33 0.450745716 ubox
6 35 0.387502608 ubox
6 36 0.142687174 ubox
6 38 0.058599734 ubox
6 39 0.094854121 ubox
7 12 0.018689337 ubox
7 17 0.006429646 ubox
7 18 0.731971297 ubox
7 29 0.009764728 ubox
7 31 0.168822194 ubox
7 34 0.396236210 ubox
7 37 0.079570493 ubox
8 16 0.005931275 ubox
8 17 0.732534456 ubox
8 18 0.015876158 ubox
9 16 0.731520808 ubox
9 17 0.015450175 ubox
9 18 0.005200759 ubox
9 29 0.482622946 ubox
10 15 0.725702741 ubox
10 16 0.012874564 ubox
10 17 0.004373464 ubox
10 28 0.489264406 ubox
10 31 0.395666905 ubox
10 34 0.125876254 ubox
10 37 0.046689055 ubox
10 40 0.014948318 ubox
11 20 0.042156968 ubox
11 27 0.349013647 ubox
11 30 0.392917771 ubox
11 33 0.126033548 ubox
11 36 0.046800833 ubox
11 39 0.014965473 ubox
12 19 0.042918946 ubox
12 27 0.519970500 ubox
12 30 0.028827077 ubox
12 32 0.121528974 ubox
12 35 0.046663552 ubox
12 38 0.014951918 ubox
13 18 0.032708940 ubox
13 26 0.640463088 ubox
13 29 0.051241613 ubox
13 31 0.060612432 ubox
13 34 0.033538530 ubox
13 37 0.008133660 ubox
14 25 0.648484745 ubox
14 28 0.057087131 ubox
14 31 0.013274673 ubox
14 34 0.028798630 ubox
14 40 0.005012803 ubox
15 22 0.009177466 ubox
15 24 0.648495614 ubox
15 27 0.057051825 ubox
15 30 0.018013205 ubox
15 33 0.040289074 ubox
15 36 0.003574062 ubox
15 39 0.005018186 ubox
16 21 0.009520779 ubox
16 22 0.014398699 ubox
16 23 0.643187747 ubox
16 24 0.006770146 ubox
16 32 0.039562750 ubox
16 35 0.003452456 ubox
16 38 0.004957208 ubox
17 21 0.017405940 ubox
17 22 0.594997501 ubox
17 23 0.022850473 ubox
17 24 0.019634381 ubox
17 33 0.004174836 ubox
17 41 0.003257767 ubox
17 42 0.028361619 ubox
18 22 0.027662190 ubox
18 23 0.023438007 ubox
18 27 0.014915717 ubox
18 30 0.029238291 ubox
18 32 0.005389498 ubox
18 41 0.033288607 ubox
19 26 0.025576292 ubox
19 29 0.032294282 ubox
19 31 0.015794256 ubox
19 40 0.033841557 ubox
20 25 0.025887507 ubox
20 28 0.032625828 ubox
21 29 0.022148013 ubox
22 28 0.022187731 ubox
24 31 0.005946251 ubox
24 37 0.060480953 ubox
24 40 0.374794149 ubox
25 30 0.006002842 ubox
25 36 0.060619152 ubox
25 39 0.375377941 ubox
26 35 0.060719605 ubox
26 38 0.375788297 ubox
26 41 0.606879602 ubox
27 34 0.062468159 ubox
27 37 0.376628538 ubox
27 40 0.657535905 ubox
28 33 0.062286125 ubox
28 36 0.376637777 ubox
28 39 0.657703425 ubox
29 35 0.375274041 ubox
29 38 0.657204706 ubox
30 34 0.357573347 ubox
30 37 0.657501798 ubox
30 43 0.007125551 ubox
31 36 0.649794297 ubox
31 38 0.003503118 ubox
31 42 0.006698369 ubox
32 37 0.006476881 ubox
33 40 0.015020948 ubox
34 39 0.015083421 ubox
1 25 0.9500000 lbox
2 24 0.9500000 lbox
3 23 0.9500000 lbox
4 22 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
showpage
end
%%EOF
