%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SWAP70)
} def

/sequence { (\
AGGUGACUGCGCGGCGGGCUGUGGCUGCGGAGGUUGAGGGGCGUCCGAGGCGCGGAGGGGCUGGCUGGGCAGGAGGGGUUGGCGGGGCAGCAGGGCCGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.016172785 ubox
1 80 0.065893080 ubox
2 7 0.021701212 ubox
2 79 0.075302110 ubox
2 80 0.023586043 ubox
2 97 0.005273222 ubox
2 103 0.148898069 ubox
3 79 0.026893625 ubox
3 83 0.007462798 ubox
3 96 0.005277515 ubox
3 99 0.007547387 ubox
3 102 0.150113190 ubox
4 78 0.036994611 ubox
4 81 0.006161465 ubox
4 82 0.007555056 ubox
4 95 0.005117858 ubox
4 98 0.007397590 ubox
4 100 0.009652074 ubox
4 101 0.145289238 ubox
5 80 0.030830456 ubox
5 97 0.004252411 ubox
5 99 0.013371461 ubox
6 79 0.032236649 ubox
7 72 0.995341237 ubox
7 73 0.035071436 ubox
7 75 0.013494523 ubox
7 76 0.009296992 ubox
7 77 0.006146801 ubox
7 78 0.027128824 ubox
8 71 0.998674289 ubox
8 72 0.017404040 ubox
8 74 0.009521444 ubox
8 75 0.006574303 ubox
8 76 0.004507190 ubox
8 77 0.019076657 ubox
9 70 0.999931840 ubox
9 102 0.003948026 ubox
10 69 0.999836491 ubox
10 100 0.009106076 ubox
11 99 0.009587987 ubox
12 67 0.999288992 ubox
12 98 0.009591167 ubox
13 62 0.003516738 ubox
13 66 0.999172882 ubox
13 97 0.009592868 ubox
14 61 0.003782904 ubox
14 65 0.999928174 ubox
14 96 0.009593374 ubox
15 60 0.003824590 ubox
15 63 0.029622195 ubox
15 64 0.999421936 ubox
15 95 0.009584840 ubox
16 62 0.041722461 ubox
17 61 0.044318876 ubox
17 62 0.995511502 ubox
18 61 0.998686822 ubox
19 55 0.229107164 ubox
19 57 0.081369226 ubox
19 58 0.016584662 ubox
19 59 0.077990753 ubox
19 60 0.966604225 ubox
20 54 0.493417308 ubox
20 56 0.172554888 ubox
20 57 0.030199444 ubox
20 58 0.090132550 ubox
20 59 0.836827063 ubox
21 53 0.921175966 ubox
22 52 0.919289860 ubox
22 54 0.240287054 ubox
23 51 0.906830930 ubox
23 53 0.290082434 ubox
24 51 0.413825489 ubox
24 53 0.045567463 ubox
25 49 0.893686320 ubox
25 50 0.440683212 ubox
25 52 0.045059287 ubox
25 55 0.056120304 ubox
26 48 0.890584008 ubox
26 49 0.403352842 ubox
26 52 0.005043517 ubox
26 54 0.056104613 ubox
27 51 0.017773972 ubox
27 53 0.056102019 ubox
28 47 0.993213694 ubox
28 50 0.016258528 ubox
28 52 0.052642701 ubox
29 46 0.999533753 ubox
29 51 0.028842920 ubox
30 45 0.999776935 ubox
31 44 0.997428329 ubox
32 46 0.015238258 ubox
33 42 0.999606502 ubox
33 45 0.015205241 ubox
33 51 0.005758570 ubox
34 40 0.018755996 ubox
34 41 0.995131922 ubox
34 48 0.010633214 ubox
34 50 0.006726936 ubox
35 39 0.019586211 ubox
35 40 0.931356231 ubox
35 43 0.011578142 ubox
35 47 0.010654429 ubox
35 49 0.006741268 ubox
36 42 0.013414435 ubox
36 45 0.003258815 ubox
36 46 0.010271752 ubox
37 44 0.003593517 ubox
38 45 0.009757208 ubox
38 46 0.008167299 ubox
39 44 0.008801354 ubox
39 45 0.008185498 ubox
40 44 0.005305494 ubox
60 91 0.010109015 ubox
61 90 0.010121815 ubox
62 89 0.010116921 ubox
63 88 0.010080244 ubox
65 86 0.009959002 ubox
66 85 0.009827777 ubox
69 83 0.005506804 ubox
70 81 0.008790114 ubox
70 82 0.004993426 ubox
71 80 0.009313256 ubox
72 79 0.009279407 ubox
72 103 0.005853033 ubox
73 79 0.013578204 ubox
73 80 0.089387320 ubox
73 102 0.010938852 ubox
74 79 0.091044713 ubox
74 80 0.032201327 ubox
75 79 0.023599681 ubox
75 97 0.005669586 ubox
75 103 0.039348760 ubox
76 96 0.005530866 ubox
76 97 0.032555200 ubox
76 102 0.039302124 ubox
76 103 0.057832157 ubox
77 96 0.032594681 ubox
77 97 0.036832138 ubox
77 102 0.054565355 ubox
77 103 0.451985785 ubox
78 91 0.031157332 ubox
78 96 0.036931334 ubox
78 99 0.015024242 ubox
78 102 0.457657703 ubox
79 90 0.031176878 ubox
79 93 0.003292011 ubox
79 94 0.031166940 ubox
79 95 0.036638191 ubox
79 98 0.010650318 ubox
79 101 0.455833888 ubox
80 89 0.031136669 ubox
80 92 0.004383922 ubox
80 93 0.024925886 ubox
80 94 0.034746394 ubox
80 98 0.027459548 ubox
80 100 0.275762294 ubox
81 88 0.030924423 ubox
81 91 0.003550748 ubox
81 97 0.035373778 ubox
81 99 0.191180251 ubox
81 103 0.844087215 ubox
82 88 0.004647282 ubox
82 91 0.049926569 ubox
82 96 0.035650824 ubox
82 99 0.273038860 ubox
82 102 0.853564682 ubox
83 87 0.005931638 ubox
83 90 0.050099568 ubox
83 95 0.035646189 ubox
83 98 0.331282411 ubox
83 100 0.711156120 ubox
83 101 0.609191891 ubox
84 97 0.317511899 ubox
84 99 0.932252503 ubox
85 96 0.313501446 ubox
85 97 0.027705952 ubox
86 96 0.030857271 ubox
86 97 0.944861091 ubox
86 103 0.015914073 ubox
87 96 0.946207679 ubox
87 99 0.011869076 ubox
87 102 0.016116203 ubox
88 95 0.946323170 ubox
88 98 0.011890009 ubox
88 101 0.016073507 ubox
90 96 0.013115945 ubox
90 99 0.016131224 ubox
91 95 0.014020442 ubox
91 98 0.016178230 ubox
94 103 0.030771894 ubox
95 102 0.031173535 ubox
96 101 0.031199082 ubox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
12 67 0.9500000 lbox
13 66 0.9500000 lbox
14 65 0.9500000 lbox
15 64 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
81 103 0.9500000 lbox
82 102 0.9500000 lbox
83 100 0.9500000 lbox
84 99 0.9500000 lbox
86 97 0.9500000 lbox
87 96 0.9500000 lbox
88 95 0.9500000 lbox
showpage
end
%%EOF
