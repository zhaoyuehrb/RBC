%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAAAGAGAACUAAUGCUUUGUGCUGAUUCAUAUUUGAAUCGAGGCAUUGGGAACCCUGUAUGCCUUGUUUGUGGAAAGAACCAGUGACACCAUCACUGAGCUUCCUAAAAGUUCGAAGAAGUUAGAGGACUAUACACUUUCUUUUGAACUUUUAUAAUAAAUAUUUGCUCUGGUUUUUGGAACCCAGGGCUGUUAGAGGGGUGAGUGACAAGUCUUACAAGUGGCCUUAUUCCAACUCCAGAAAUUGCCCAAC\
GGAACUUUGAGAUUAU\
) } def
/len { sequence length } bind def

/coor [
[53.60329056 218.03323364]
[60.55950928 204.33993530]
[73.43917084 195.97274780]
[72.57341003 180.99774170]
[71.70764160 166.02275085]
[70.84187317 151.04776001]
[69.97610474 136.07276917]
[62.90726089 133.56649780]
[57.89447784 147.70410156]
[43.75695038 142.69108582]
[48.76956558 128.55393982]
[41.70071793 126.04766846]
[31.59528542 137.13281250]
[21.48985100 148.21794128]
[11.38441563 159.30307007]
[1.27898121 170.38819885]
[-8.82645321 181.47334290]
[-18.93188858 192.55847168]
[-29.03732300 203.64360046]
[-39.14275742 214.72874451]
[-49.24819183 225.81387329]
[-34.34668350 227.52999878]
[-26.29687500 240.18704224]
[-31.06096458 254.41038513]
[-45.11036682 259.66531372]
[-58.03919601 252.05970764]
[-60.27119446 237.22560120]
[-70.99959564 247.70898438]
[-81.72798920 258.19238281]
[-92.45639038 268.67578125]
[-103.18478394 279.15914917]
[-113.91318512 289.64254761]
[-117.81685638 305.57031250]
[-133.63601685 309.89309692]
[-145.09725952 298.16397095]
[-140.41024780 282.44888306]
[-124.39657593 278.91415405]
[-113.66817474 268.43075562]
[-102.93978119 257.94738770]
[-92.21138000 247.46398926]
[-81.48298645 236.98059082]
[-70.75458527 226.49720764]
[-60.33332443 215.70843506]
[-50.22789001 204.62330627]
[-40.12245560 193.53817749]
[-30.01702118 182.45303345]
[-19.91158676 171.36790466]
[-9.80615234 160.28277588]
[0.29928204 149.19763184]
[10.40471649 138.11250305]
[20.51015091 127.02736664]
[30.61558533 115.94223785]
[39.71921921 80.48778534]
[63.43350983 58.21211624]
[91.46269226 53.07478714]
[114.00273132 62.67708588]
[111.58779144 47.87276077]
[109.17285156 33.06843567]
[106.75791168 18.26410866]
[96.89977264 5.88963127]
[102.48710632 -7.91728783]
[100.07216644 -22.72161293]
[86.63403320 -37.77923203]
[94.34991455 -55.53197479]
[91.59367371 -70.27657318]
[88.83743286 -85.02117157]
[86.08119202 -99.76576233]
[83.32494354 -114.51036072]
[80.56870270 -129.25495911]
[71.29241943 -134.84616089]
[66.70068359 -144.41322327]
[68.08327484 -154.71365356]
[74.74849701 -162.39993286]
[72.33356476 -177.20425415]
[58.63531113 -184.25152588]
[51.79328537 -197.85447693]
[54.24413300 -212.70228577]
[64.84117126 -223.13496399]
[62.42623138 -237.93928528]
[60.01129150 -252.74362183]
[57.59635544 -267.54794312]
[55.18141556 -282.35226440]
[52.76647949 -297.15658569]
[50.35153961 -311.96090698]
[42.01798630 -324.43295288]
[29.26472855 -332.32943726]
[16.51147270 -340.22592163]
[3.75821471 -348.12240601]
[-8.99504185 -356.01889038]
[-24.87831116 -353.76028442]
[-36.44786453 -364.87448120]
[-34.82852936 -380.83560181]
[-21.26252174 -389.39962769]
[-6.15652180 -383.99700928]
[-1.09855986 -368.77215576]
[11.65469742 -360.87567139]
[24.40795517 -352.97918701]
[37.16121292 -345.08270264]
[49.91446686 -337.18621826]
[63.01880264 -344.48529053]
[63.01880264 -359.48529053]
[63.01880264 -374.48529053]
[63.01880264 -389.48529053]
[43.64283371 -399.04412842]
[31.89613342 -417.08987427]
[31.00422478 -438.53015137]
[41.14197540 -457.35995483]
[59.40557861 -468.34378052]
[58.02155304 -483.27981567]
[56.63752747 -498.21582031]
[55.25350189 -513.15185547]
[53.86947632 -528.08782959]
[52.48545074 -543.02386475]
[51.10142517 -557.95983887]
[49.71739960 -572.89587402]
[48.33337402 -587.83190918]
[46.94934845 -602.76788330]
[45.56532288 -617.70391846]
[44.18129730 -632.63995361]
[42.62485886 -647.55895996]
[40.89621353 -662.45904541]
[39.16756439 -677.35906982]
[37.43891907 -692.25915527]
[35.71027374 -707.15917969]
[33.72375488 -722.02709961]
[31.47996330 -736.85827637]
[29.23617172 -751.68951416]
[18.58714104 -764.16070557]
[24.31727982 -779.52618408]
[40.53191757 -781.97924805]
[50.55081940 -768.99645996]
[44.06740189 -753.93334961]
[46.31119537 -739.10211182]
[48.55498505 -724.27087402]
[51.12525177 -721.90747070]
[52.69558716 -718.19641113]
[52.65144730 -713.61340332]
[50.61033249 -708.88781738]
[52.33897781 -693.98779297]
[54.06762695 -679.08770752]
[55.79627228 -664.18768311]
[57.52491760 -649.28759766]
[60.61756516 -645.69177246]
[61.50760269 -640.12518311]
[59.11730957 -634.02392578]
[60.50133514 -619.08795166]
[61.88536072 -604.15191650]
[63.26938629 -589.21594238]
[64.65341187 -574.27990723]
[66.03743744 -559.34387207]
[67.42146301 -544.40789795]
[68.80548859 -529.47186279]
[70.18951416 -514.53582764]
[71.57353973 -499.59985352]
[72.95756531 -484.66381836]
[74.34159088 -469.72781372]
[83.00762939 -467.97753906]
[91.09295654 -464.37219238]
[98.20516968 -459.08114624]
[103.99785614 -452.35571289]
[108.18750000 -444.51724243]
[110.56732941 -435.94171143]
[111.01752472 -427.04174805]
[109.51123810 -418.24673462]
[106.11614227 -409.98214722]
[100.99140930 -402.64886475]
[94.38023376 -396.60385132]
[86.59832001 -392.14273071]
[78.01880646 -389.48529053]
[78.01880646 -374.48529053]
[78.01880646 -359.48529053]
[78.01880646 -344.48529053]
[77.44850159 -324.60525513]
[65.15586853 -314.37585449]
[67.57080078 -299.57153320]
[69.98574066 -284.76721191]
[72.40068054 -269.96289062]
[74.81562042 -255.15855408]
[77.23056030 -240.35423279]
[79.64549255 -225.54989624]
[93.00860596 -219.02569580]
[100.05090332 -205.72644043]
[97.88646698 -190.65432739]
[87.13788605 -179.61920166]
[89.55282593 -164.81486511]
[102.83909607 -150.73759460]
[95.31330109 -132.01119995]
[98.06954193 -117.26660156]
[100.82578278 -102.52201080]
[103.58203125 -87.77741241]
[106.33827209 -73.03281403]
[109.09451294 -58.28821945]
[117.97392273 -53.32230759]
[122.77244568 -44.10359955]
[121.70264435 -33.54574966]
[114.87648773 -25.13655281]
[117.29142761 -10.33222580]
[126.97683716 0.98334610]
[121.56224060 15.84916973]
[123.97718048 30.65349579]
[126.39211273 45.45782089]
[128.80705261 60.26214981]
[139.35221863 70.92982483]
[154.12767029 73.51558685]
[168.90312195 76.10134888]
[183.67857361 78.68711853]
[198.45401001 81.27288055]
[209.50813293 70.38315582]
[224.85690308 68.10391998]
[238.59840393 75.31159973]
[245.44876099 89.23468018]
[242.77386475 104.51946259]
[231.60226440 115.28863525]
[216.22967529 117.40122223]
[202.56716919 110.04489899]
[195.86825562 96.04832458]
[181.09280396 93.46256256]
[166.31735229 90.87680054]
[151.54191589 88.29103851]
[136.76646423 85.70526886]
[133.30761719 92.36007690]
[146.61711121 99.27796936]
[139.69902039 112.58736420]
[126.38993073 105.66967773]
[122.93108368 112.32447815]
[133.53768921 122.93108368]
[144.14428711 133.53768921]
[157.53918457 130.37565613]
[170.64599609 134.20564270]
[180.08007812 143.92747498]
[183.46028137 156.93409729]
[180.00923157 169.81021118]
[190.49261475 180.53860474]
[200.97601318 191.26699829]
[216.30895996 188.88360596]
[230.09907532 195.99781799]
[237.04380798 209.87406921]
[234.47274780 225.17666626]
[223.37452698 236.02143860]
[208.01663208 238.23835754]
[194.30448914 230.97496033]
[187.51069641 217.02418518]
[190.24761963 201.75039673]
[179.76422119 191.02198792]
[169.28083801 180.29359436]
[153.10539246 183.18835449]
[138.24887085 175.78526306]
[130.66909790 160.83125305]
[133.53768921 144.14428711]
[122.93108368 133.53768921]
[112.32447815 122.93108368]
[105.48113251 126.00006104]
[111.61909485 139.68675232]
[117.75704956 153.37344360]
[123.89479828 167.06022644]
[110.20791626 173.19775391]
[104.07035828 159.51139832]
[97.93240356 145.82470703]
[91.79444885 132.13801575]
[84.95110321 135.20700073]
[85.81686401 150.18199158]
[86.68263245 165.15698242]
[87.54840088 180.13197327]
[88.41416931 195.10697937]
[102.17227936 201.93412781]
[110.66020966 214.73454285]
[111.59474945 230.06497192]
[104.72451019 243.80162048]
[91.89755249 252.24937439]
[76.56426239 253.13586426]
[62.84922409 246.22259521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 264]
[4 263]
[5 262]
[6 261]
[7 260]
[12 52]
[13 51]
[14 50]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[20 44]
[21 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[56 202]
[57 201]
[58 200]
[59 199]
[61 197]
[62 196]
[64 192]
[65 191]
[66 190]
[67 189]
[68 188]
[69 187]
[73 185]
[74 184]
[78 180]
[79 179]
[80 178]
[81 177]
[82 176]
[83 175]
[84 174]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[100 172]
[101 171]
[102 170]
[103 169]
[108 156]
[109 155]
[110 154]
[111 153]
[112 152]
[113 151]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[119 145]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[125 134]
[126 133]
[127 132]
[203 220]
[204 219]
[205 218]
[206 217]
[207 216]
[225 251]
[226 250]
[227 249]
[232 245]
[233 244]
[234 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
