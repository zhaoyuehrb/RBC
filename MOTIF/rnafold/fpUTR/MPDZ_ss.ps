%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGUCACGGCAGCCCCAGCAGCCUGGGCCCCGCCACCGCCUCCGCGGCAGCCCCGGUCGGCGCAAGUGCGGCGCGCGCUGGGGGAGGGGGCGCGGCGGAGCGCUAGGCUGGCGUCGGGCCACCGCGGGAUUAAGUUUCUCAGUCACGCAGUUCCAUUUUAAUUGCUGUUAAUCAUUUCAGAGAAGAACACUGAACUUUGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[67.14268494 98.62458801]
[71.64179993 87.31040955]
[59.83404922 78.05962372]
[48.02629852 68.80884552]
[35.49287033 73.89270782]
[22.12418556 72.61418915]
[10.94183922 65.35102081]
[4.43218994 53.82351303]
[3.99371910 40.68786240]
[-9.39188862 33.91841125]
[-22.77749634 27.14895630]
[-37.62908554 31.84662628]
[-51.10755920 24.79075432]
[-55.49454498 10.60308456]
[-68.88014984 3.83363128]
[-82.26576233 -2.93582249]
[-95.65136719 -9.70527649]
[-112.16821289 -3.94558620]
[-127.44024658 -11.75855160]
[-132.24098206 -27.87550354]
[-145.72731018 -34.44202042]
[-159.26283264 -40.90650177]
[-172.84678650 -47.26858139]
[-186.43075562 -53.63066101]
[-200.01470947 -59.99274063]
[-213.59867859 -66.35482025]
[-227.18263245 -72.71689606]
[-240.76658630 -79.07897949]
[-254.39820862 -85.33829498]
[-268.07669067 -91.49448395]
[-283.83657837 -90.10260773]
[-292.26708984 -102.38169098]
[-305.94558716 -108.53787994]
[-319.62408447 -114.69406891]
[-333.30258179 -120.85026550]
[-346.98107910 -127.00645447]
[-359.29727173 -123.17064667]
[-370.56417847 -128.58155823]
[-374.97674561 -139.84617615]
[-388.56069946 -146.20825195]
[-402.14465332 -152.57032776]
[-415.72860718 -158.93240356]
[-429.31256104 -165.29449463]
[-442.89654541 -171.65657043]
[-456.48049927 -178.01864624]
[-463.45846558 -172.45465088]
[-471.82446289 -169.47364807]
[-480.66168213 -169.37234497]
[-489.01132202 -172.13352966]
[-495.97665405 -177.43092346]
[-500.81933594 -184.66752625]
[-503.03753662 -193.04277039]
[-502.41799927 -201.64105225]
[-515.48321533 -209.00987244]
[-528.54846191 -216.37869263]
[-541.61370850 -223.74751282]
[-554.67895508 -231.11633301]
[-567.74420166 -238.48515320]
[-580.80944824 -245.85397339]
[-595.85858154 -241.83383179]
[-609.00360107 -249.49298096]
[-612.74346924 -263.86480713]
[-625.80871582 -271.23361206]
[-638.87396240 -278.60244751]
[-651.93914795 -285.97125244]
[-666.51452637 -280.30618286]
[-681.30462646 -285.38427734]
[-689.32604980 -298.80776978]
[-686.79132080 -314.23855591]
[-674.89727783 -324.39068604]
[-659.25988770 -324.47058105]
[-647.26269531 -314.44058228]
[-644.57037354 -299.03649902]
[-631.50512695 -291.66769409]
[-618.43988037 -284.29885864]
[-605.37463379 -276.93005371]
[-591.14074707 -281.16464233]
[-577.78576660 -273.87774658]
[-573.44061279 -258.91921997]
[-560.37536621 -251.55038452]
[-547.31011963 -244.18156433]
[-534.24493408 -236.81274414]
[-521.17968750 -229.44392395]
[-508.11444092 -222.07511902]
[-495.04919434 -214.70629883]
[-475.20861816 -222.29370117]
[-455.98385620 -212.60952759]
[-450.11840820 -191.60260010]
[-436.53445435 -185.24052429]
[-422.95050049 -178.87844849]
[-409.36654663 -172.51637268]
[-395.78256226 -166.15428162]
[-382.19860840 -159.79220581]
[-368.61465454 -153.43013000]
[-351.23730469 -155.87124634]
[-340.82489014 -140.68495178]
[-327.14639282 -134.52876282]
[-313.46786499 -128.37257385]
[-299.78936768 -122.21637726]
[-286.11087036 -116.06018829]
[-271.32940674 -117.89239502]
[-261.92050171 -105.17298126]
[-248.24201965 -99.01679230]
[-240.85058594 -99.13825989]
[-234.40451050 -92.66294098]
[-220.82055664 -86.30085754]
[-207.23658752 -79.93878174]
[-193.65263367 -73.57669830]
[-180.06867981 -67.21462250]
[-166.48471069 -60.85253906]
[-152.90075684 -54.49045944]
[-145.50833130 -54.50027847]
[-139.16079712 -47.92834091]
[-125.67446899 -41.36182404]
[-114.20058441 -47.22821426]
[-101.24964142 -45.38671112]
[-91.58223724 -36.28787994]
[-88.88191223 -23.09088326]
[-75.49630737 -16.32143021]
[-62.11069870 -9.55197620]
[-48.72509003 -2.78252292]
[-34.69761658 -7.65751600]
[-21.02627373 -0.98301059]
[-16.00804329 13.76334858]
[-2.62243509 20.53280258]
[10.76317310 27.30225563]
[28.71434975 18.52525330]
[47.86986923 24.21265793]
[59.95163727 15.32272434]
[72.03340149 6.43279123]
[84.11517334 -2.45714164]
[84.93109894 -18.07342339]
[95.63184357 -29.47640800]
[111.16484070 -31.28195572]
[124.19588470 -22.63753891]
[128.57211304 -7.62479019]
[122.22720337 6.66773129]
[108.15703583 13.49153328]
[93.00510406 9.62462521]
[80.92333221 18.51455879]
[68.84156799 27.40449142]
[56.75979996 36.29442215]
[59.00247192 46.50215149]
[57.27708054 57.00109100]
[69.08483124 66.25187683]
[80.89258575 75.50265503]
[100.69060516 65.30257416]
[124.76466370 70.73019409]
[141.25102234 92.22619629]
[156.22366333 93.13187408]
[171.19628906 94.03754425]
[186.16893005 94.94322205]
[201.14155579 95.84889984]
[216.11419678 96.75457764]
[226.73873901 85.28055573]
[242.25935364 83.37156677]
[255.34770203 91.92897797]
[259.82385254 106.91223907]
[253.57431030 121.24671173]
[239.54991150 128.16410828]
[224.37254333 124.39822388]
[215.20851135 111.72721100]
[200.23588562 110.82153320]
[185.26324463 109.91585541]
[170.29061890 109.01017761]
[155.31797791 108.10450745]
[140.34535217 107.19882965]
[136.41696167 113.58769989]
[149.19470215 121.44448853]
[161.97245789 129.30126953]
[176.55265808 132.82516479]
[177.70658875 147.78071594]
[163.83952332 153.49951172]
[154.11567688 142.07902527]
[141.33792114 134.22224426]
[128.56016541 126.36545563]
[124.63177490 132.75433350]
[132.19708252 145.70678711]
[139.76239014 158.65924072]
[147.32769775 171.61169434]
[154.89300537 184.56414795]
[162.45831299 197.51661682]
[170.02360535 210.46907043]
[177.58891296 223.42152405]
[195.52996826 232.60952759]
[194.79347229 251.93029785]
[202.74652100 264.64834595]
[217.47467041 271.86041260]
[218.32283020 288.23760986]
[204.41848755 296.93249512]
[190.06523132 289.00051880]
[190.02847290 272.60140991]
[182.07540894 259.88336182]
[171.94938660 258.49224854]
[164.09657288 251.61167908]
[161.27012634 241.33288574]
[164.63645935 230.98683167]
[157.07115173 218.03437805]
[149.50584412 205.08192444]
[141.94053650 192.12945557]
[134.37524414 179.17700195]
[126.80992889 166.22454834]
[119.24462891 153.27209473]
[111.67932129 140.31962585]
[96.11207581 139.97027588]
[82.43525696 134.08064270]
[72.44600677 123.97229004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[9 126]
[10 125]
[11 124]
[14 121]
[15 120]
[16 119]
[17 118]
[20 114]
[21 113]
[22 111]
[23 110]
[24 109]
[25 108]
[26 107]
[27 106]
[28 105]
[29 103]
[30 102]
[32 100]
[33 99]
[34 98]
[35 97]
[36 96]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[45 88]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[62 76]
[63 75]
[64 74]
[65 73]
[128 142]
[129 141]
[130 140]
[131 139]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[177 204]
[178 203]
[179 202]
[180 201]
[181 200]
[182 199]
[183 198]
[184 197]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
