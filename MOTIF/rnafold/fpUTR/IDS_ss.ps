%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACCCGCCCCGGAGGGGAGGGACGCAGGGAAGAGUCGCACGGACGCACUCGCGCUGCGGCCAGCGCCCGGGCCUGCGGGCCCGGGCGGCGGCUGUGUUGCGCAGUCUUCAUGGGUUCCCGACGAGGAGGUCUCUGUGGCUGCGGCGGCGGCUGCUAACUGCGCCACCUGCUGCAGCCUGUCCCCGCCGCUCUGAAGCGGCCGCGUCGAAGCCGAA\
) } def
/len { sequence length } bind def

/coor [
[210.99627686 496.08676147]
[211.17021179 488.93115234]
[213.10282898 482.01644897]
[216.68606567 475.76950073]
[221.70959473 470.57867432]
[227.87318420 466.76965332]
[225.50532532 451.95773315]
[223.13745117 437.14581299]
[220.76959229 422.33386230]
[208.59391785 413.83160400]
[205.98155212 398.84393311]
[214.98207092 386.13061523]
[212.61419678 371.31869507]
[210.24633789 356.50677490]
[207.87846375 341.69482422]
[205.51060486 326.88290405]
[203.03607178 312.08843994]
[200.45501709 297.31216431]
[188.15806580 288.98623657]
[185.33001709 274.03778076]
[194.14637756 261.19607544]
[191.56530762 246.41979980]
[188.98425293 231.64352417]
[186.40318298 216.86726379]
[183.82211304 202.09098816]
[176.95454407 188.75546265]
[166.42463684 178.07270813]
[155.89474487 167.38995361]
[145.36483765 156.70719910]
[134.83493042 146.02445984]
[124.30503082 135.34170532]
[113.77513123 124.65895081]
[90.48410797 130.12963867]
[68.52424622 115.18589020]
[54.34068680 120.06714630]
[40.15712738 124.94839478]
[25.97356606 129.82965088]
[18.88187408 135.57839966]
[11.55030251 134.67744446]
[-2.70212603 139.35379028]
[-9.61196709 153.56750488]
[-24.57566833 158.65309143]
[-38.71553421 151.59335327]
[-43.64262772 136.57672119]
[-36.43379593 122.51229095]
[-21.36590958 117.74423981]
[-7.37847853 125.10136414]
[6.87395000 120.42501068]
[21.09231377 115.64608765]
[35.27587509 110.76483154]
[49.45943451 105.88358307]
[63.64299393 101.00233459]
[66.33045959 86.24504852]
[54.77827835 76.67702484]
[43.22609329 67.10900116]
[31.67390823 57.54098511]
[11.66498852 55.06253433]
[5.74024391 36.65327835]
[-6.08287430 27.42214203]
[-17.90599251 18.19100571]
[-29.72911072 8.95987034]
[-41.55222702 -0.27126616]
[-53.37534714 -9.50240231]
[-68.85517120 -7.76665592]
[-80.71398926 -17.29676628]
[-82.27336121 -32.06510925]
[-94.09648132 -41.29624557]
[-105.91960144 -50.52738190]
[-117.74272156 -59.75851822]
[-129.56584167 -68.98965454]
[-141.38896179 -78.22078705]
[-153.21206665 -87.45192719]
[-165.03518677 -96.68305969]
[-176.85830688 -105.91419983]
[-188.68142700 -115.14533234]
[-204.98800659 -116.88536835]
[-211.38610840 -131.98492432]
[-201.29391479 -144.91085815]
[-185.09341431 -142.36608887]
[-179.45028687 -126.96845245]
[-167.62716675 -117.73731995]
[-155.80406189 -108.50617981]
[-143.98094177 -99.27504730]
[-132.15782166 -90.04390717]
[-120.33470154 -80.81277466]
[-108.51158142 -71.58163452]
[-96.68846130 -62.35049820]
[-84.86534882 -53.11936188]
[-73.04222870 -43.88822556]
[-58.33664322 -45.95737839]
[-46.21482086 -36.76411819]
[-44.14421082 -21.32552147]
[-32.32109070 -12.09438419]
[-20.49797440 -2.86324787]
[-8.67485619 6.36788845]
[3.14826202 15.59902477]
[14.97138023 24.83016014]
[24.95324707 22.67493820]
[34.67897415 26.44641876]
[40.85290527 35.12536240]
[41.24192810 45.98880005]
[52.79411316 55.55681992]
[64.34629822 65.12483978]
[75.89848328 74.69286346]
[84.01703644 71.45659637]
[92.16713715 70.54401398]
[99.73580933 71.75556183]
[103.58329010 57.25738907]
[107.43076324 42.75922012]
[111.27823639 28.26105118]
[115.12570953 13.76288033]
[109.90731812 -3.89890528]
[122.76799774 -15.84243107]
[126.40614319 -30.39454079]
[130.04429626 -44.94664764]
[125.01641083 -60.55601883]
[136.21969604 -72.53176117]
[152.12918091 -68.55425262]
[156.37854004 -52.71522141]
[144.59640503 -41.30849838]
[140.95825195 -26.75638962]
[137.32009888 -12.20428181]
[143.27186584 -1.67698681]
[140.36376953 10.47386360]
[129.62388611 17.61035538]
[125.77640533 32.10852432]
[121.92893219 46.60669708]
[118.08145905 61.10486603]
[114.23398590 75.60303497]
[124.50538635 85.95349884]
[128.24563599 100.04761505]
[124.45788574 114.12905121]
[134.98779297 124.81179810]
[145.51768494 135.49455261]
[156.04759216 146.17730713]
[166.57748413 156.86006165]
[177.10739136 167.54280090]
[187.63729858 178.22555542]
[201.82084656 183.10681152]
[216.69487000 181.16677856]
[231.56887817 179.22674561]
[246.44288635 177.28671265]
[261.31689453 175.34667969]
[276.19091797 173.40664673]
[291.06494141 171.46661377]
[305.93893433 169.52658081]
[320.81295776 167.58654785]
[335.67260742 165.53939819]
[350.51712036 163.38522339]
[363.06307983 153.74626160]
[376.76959229 159.57557678]
[391.61410522 157.42141724]
[406.45861816 155.26724243]
[414.49691772 150.93989563]
[421.53240967 153.19058228]
[436.40640259 151.25054932]
[447.28839111 139.46234131]
[463.27856445 140.76406860]
[472.11059570 154.15715027]
[467.00933838 169.36755371]
[451.88803101 174.72717285]
[438.34643555 166.12455750]
[423.47244263 168.06459045]
[408.61279297 170.11175537]
[393.76828003 172.26591492]
[378.92376709 174.42008972]
[367.43957520 183.90496826]
[352.67129517 178.22973633]
[337.82678223 180.38391113]
[331.66195679 184.45315552]
[322.75299072 182.46057129]
[307.87896729 184.40060425]
[293.00497437 186.34063721]
[278.13095093 188.28067017]
[263.25692749 190.22070312]
[248.38291931 192.16072083]
[233.50891113 194.10075378]
[218.63490295 196.04078674]
[203.76087952 197.98081970]
[201.16047668 199.14320374]
[198.59838867 199.50991821]
[201.17944336 214.28619385]
[203.76051331 229.06246948]
[206.34158325 243.83872986]
[208.92265320 258.61499023]
[221.57038879 267.70742798]
[223.97746277 282.72943115]
[215.23127747 294.73107910]
[217.81234741 309.50735474]
[222.36953735 317.41763306]
[220.32254028 324.51504517]
[222.69039917 339.32696533]
[225.05825806 354.13888550]
[227.42613220 368.95083618]
[229.79399109 383.76275635]
[242.30940247 393.03649902]
[244.49975586 408.09164429]
[235.58151245 419.96600342]
[237.94938660 434.77795410]
[240.31724548 449.58987427]
[242.68511963 464.40179443]
[263.04605103 476.31692505]
[267.86282349 499.14205933]
[254.36061096 517.84143066]
[258.41662598 532.28265381]
[272.31842041 539.80035400]
[276.75253296 554.96984863]
[269.08825684 568.79138184]
[253.87272644 573.06488037]
[240.13299561 565.25494385]
[236.02061462 549.99505615]
[243.97540283 536.33868408]
[239.91940308 521.89746094]
[232.93260193 521.15649414]
[226.32144165 518.71398926]
[220.49494934 514.70953369]
[215.81646729 509.37979126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 201]
[7 200]
[8 199]
[9 198]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[17 189]
[18 188]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[26 138]
[27 137]
[28 136]
[29 135]
[30 134]
[31 133]
[32 132]
[34 52]
[35 51]
[36 50]
[37 49]
[39 48]
[40 47]
[53 104]
[54 103]
[55 102]
[56 101]
[58 97]
[59 96]
[60 95]
[61 94]
[62 93]
[63 92]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
[107 129]
[108 128]
[109 127]
[110 126]
[111 125]
[113 122]
[114 121]
[115 120]
[139 179]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[145 173]
[146 172]
[147 171]
[148 169]
[149 168]
[151 166]
[152 165]
[153 164]
[155 163]
[156 162]
[204 213]
[205 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
