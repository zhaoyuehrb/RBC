%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGAGUGAGUGAGACGGGCAGAUGGAGGAGGGAUUGUAAUGGCGGCAGCCGGCAGCUCCCUGCUCUGACCCACGGCAGGCACACAGCAACGACCCCUUCCCCGCCCCUCUCCCGGCCGGCCUCCGCCCCGCAGCCAGCGCGGGGCCACCCUCUCCGGCCCUUCCCCCAGCUGUCGGCGUCUCGCCCUGCGCCCCGGCCGGGGCCCCACACACA\
) } def
/len { sequence length } bind def

/coor [
[460.73147583 379.85888672]
[446.51803589 372.41864014]
[443.61471558 356.64047241]
[454.24871826 344.62808228]
[454.68295288 329.63436890]
[455.11721802 314.64065552]
[447.75164795 301.69470215]
[455.88522339 288.12432861]
[456.31948853 273.13061523]
[456.75375366 258.13690186]
[443.44714355 252.70556641]
[432.88195801 242.86901855]
[426.45932007 229.87074280]
[425.05261230 215.37736511]
[410.64639282 211.19876099]
[396.24017334 207.02014160]
[381.83395386 202.84153748]
[367.45507812 206.72706604]
[356.35659790 195.45167542]
[341.95037842 191.27307129]
[327.54415894 187.09446716]
[313.13793945 182.91584778]
[310.62255859 184.14353943]
[307.47039795 184.45111084]
[304.02862549 183.59144592]
[300.72729492 181.44723511]
[298.03195190 178.05592346]
[283.89172363 173.05053711]
[269.31207275 176.09733582]
[258.88476562 164.19850159]
[244.74455261 159.19309998]
[230.60432434 154.18771362]
[216.46409607 149.18231201]
[202.32386780 144.17691040]
[188.18363953 139.17152405]
[173.60398865 142.21832275]
[163.17671204 130.31948853]
[149.03648376 125.31409454]
[134.89625549 120.30870056]
[120.75602722 115.30329895]
[115.48065186 129.35276794]
[101.42723846 140.55697632]
[80.65639496 143.90713501]
[57.84877777 135.91419983]
[43.05618668 138.40003967]
[28.26359940 140.88586426]
[15.96809292 151.73724365]
[0.51105064 146.25894165]
[-2.20664644 130.08654785]
[10.61073589 119.85684967]
[25.77777290 126.09327698]
[40.57036209 123.60744476]
[55.36294937 121.12162018]
[55.47152710 106.12200928]
[40.71647644 103.42229462]
[25.96142578 100.72257996]
[11.20637512 98.02285767]
[-3.54867530 95.32314301]
[-18.80440712 101.33934021]
[-31.47235107 90.92516327]
[-28.52081299 74.79380798]
[-12.98608208 69.53984070]
[-0.84895760 80.56809235]
[13.90609360 83.26780701]
[28.66114426 85.96752930]
[43.41619492 88.66724396]
[58.17124557 91.36695862]
[63.78586960 77.45739746]
[51.29124832 69.15773010]
[38.79663086 60.85806274]
[29.92116547 58.71799850]
[26.18240356 52.34670639]
[13.80924606 43.86702347]
[-2.67416096 39.90045929]
[-3.42567182 22.96317673]
[12.64165688 17.55232811]
[22.28892708 31.49386787]
[34.66208267 39.97354889]
[47.09629822 48.36344147]
[59.59091568 56.66310883]
[72.08554077 64.96277618]
[82.34107208 54.01636124]
[73.24558258 42.08857346]
[57.60213852 38.53019714]
[50.76071167 24.01901054]
[57.96946716 9.68676090]
[73.69846344 6.52792025]
[85.88175964 16.96568108]
[85.17337036 32.99308777]
[94.26885986 44.92087555]
[127.84342957 70.47631073]
[125.76142120 101.16307831]
[139.90165710 106.16847229]
[154.04187012 111.17386627]
[168.18209839 116.17926788]
[183.77316284 113.49047852]
[193.18904114 125.03129578]
[207.32926941 130.03668213]
[221.46949768 135.04208374]
[235.60972595 140.04748535]
[249.74993896 145.05288696]
[263.89016724 150.05827332]
[279.48123169 147.36949158]
[288.89712524 158.91030884]
[303.03732300 163.91569519]
[317.31655884 168.50962830]
[331.72277832 172.68823242]
[346.12899780 176.86685181]
[360.53521729 181.04545593]
[375.94451904 177.45881653]
[386.01257324 188.43531799]
[400.41879272 192.61392212]
[414.82501221 196.79254150]
[429.23123169 200.97114563]
[446.11077881 183.89146423]
[469.56567383 179.43492126]
[491.27941895 189.02140808]
[503.00686646 179.66906738]
[514.73437500 170.31672668]
[526.46185303 160.96437073]
[538.18927002 151.61203003]
[549.91674805 142.25967407]
[545.43817139 124.86151123]
[549.01574707 107.31007385]
[559.88220215 93.13704681]
[575.80847168 85.17354584]
[593.56072998 84.98465729]
[609.55700684 92.56208038]
[620.86730957 82.70936584]
[632.17767334 72.85664368]
[643.48803711 63.00392914]
[654.79840088 53.15121078]
[666.10870361 43.29849625]
[677.41906738 33.44577789]
[676.94891357 17.81526375]
[686.67639160 5.57148504]
[702.00848389 2.49557877]
[715.70587158 10.03989410]
[721.30096436 24.64223671]
[716.15203857 39.40782547]
[702.69024658 47.36480331]
[687.27178955 44.75612640]
[675.96142578 54.60884476]
[664.65112305 64.46156311]
[653.34075928 74.31427765]
[642.03039551 84.16699219]
[630.72003174 94.01971436]
[619.40972900 103.87242889]
[623.89227295 115.24731445]
[624.67230225 127.47313690]
[621.65979004 139.37284851]
[615.13037109 149.79617310]
[605.70056152 157.73086548]
[594.26928711 162.40087891]
[581.93237305 163.34240723]
[569.87725830 160.44978333]
[559.26910400 153.98715210]
[547.54162598 163.33949280]
[535.81414795 172.69184875]
[524.08666992 182.04418945]
[512.35925293 191.39654541]
[500.63174438 200.74888611]
[503.53448486 207.87197876]
[505.01345825 215.42030334]
[505.01345825 223.11213684]
[503.53448486 230.66044617]
[500.63174438 237.78355408]
[512.35925293 247.13589478]
[524.08666992 256.48825073]
[535.81414795 265.84060669]
[551.42773438 268.39559937]
[556.55413818 282.38018799]
[568.28161621 291.73254395]
[580.00909424 301.08486938]
[591.73657227 310.43722534]
[604.61456299 309.77081299]
[614.18927002 317.79809570]
[615.67999268 329.79959106]
[627.27087402 339.32073975]
[638.86169434 348.84188843]
[650.45257568 358.36303711]
[662.04339600 367.88418579]
[677.02496338 363.84286499]
[691.50872803 369.41076660]
[699.92529297 382.44689941]
[699.03839111 397.93859863]
[689.18902588 409.92901611]
[674.16448975 413.80755615]
[659.74206543 408.08288574]
[651.46734619 394.95620728]
[652.52227783 379.47503662]
[640.93139648 369.95388794]
[629.34057617 360.43273926]
[617.74969482 350.91159058]
[606.15887451 341.39044189]
[588.71459961 339.45874023]
[582.38421631 322.16470337]
[570.65673828 312.81234741]
[558.92926025 303.45999146]
[547.20184326 294.10766602]
[532.42712402 292.22158813]
[526.46185303 277.56805420]
[514.73437500 268.21572876]
[503.00686646 258.86337280]
[491.27941895 249.51101685]
[486.90982056 252.76205444]
[482.13745117 255.38638306]
[477.05160522 257.33489990]
[471.74743652 258.57116699]
[471.31320190 273.56488037]
[470.87893677 288.55859375]
[478.21347046 302.57696533]
[470.11093140 315.07492065]
[469.67666626 330.06860352]
[469.24243164 345.06231689]
[479.16333008 357.67007446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 215]
[5 214]
[6 213]
[8 211]
[9 210]
[10 209]
[14 114]
[15 113]
[16 112]
[17 111]
[19 109]
[20 108]
[21 107]
[22 106]
[27 105]
[28 104]
[30 102]
[31 101]
[32 100]
[33 99]
[34 98]
[35 97]
[37 95]
[38 94]
[39 93]
[40 92]
[44 53]
[45 52]
[46 51]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[68 81]
[69 80]
[70 79]
[72 78]
[73 77]
[82 90]
[83 89]
[117 162]
[118 161]
[119 160]
[120 159]
[121 158]
[122 157]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[167 205]
[168 204]
[169 203]
[170 202]
[172 200]
[173 199]
[174 198]
[175 197]
[178 195]
[179 194]
[180 193]
[181 192]
[182 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
