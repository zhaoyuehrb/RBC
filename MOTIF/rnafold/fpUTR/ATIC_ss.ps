%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGAUCUUGCAUCUGAAACUGAGCAGAGCAGGGCGCCGGGCAGGGCCGGCGGGCCACGUGAUAAGCCCGGAAACAGCUCCGCCCCCUCGCUUCCUGAGCCGCCACAUCCCGGCAGCCCUCCUACCUGCGCACGUGGUGCCGCCGCUGCUGCCUCCCGCUCGCCCUGAACCCAGUGCCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[72.58029175 193.79133606]
[72.32964325 178.79342651]
[71.95369720 163.79814148]
[71.45246887 148.80651855]
[70.95124054 133.81489563]
[70.45001984 118.82326508]
[63.40710068 116.24503326]
[58.25040054 130.33079529]
[44.16473389 125.17385864]
[49.32126236 111.08856964]
[42.27833939 108.51033783]
[32.21656799 119.63511658]
[22.15479851 130.75990295]
[18.70969200 139.24174500]
[11.83074570 141.98471069]
[1.58448648 152.93980408]
[-8.66177273 163.89491272]
[-18.90803146 174.85000610]
[-15.83774471 190.06030273]
[-22.32481384 204.15631104]
[-35.87482834 211.71783447]
[-51.27753067 209.83732605]
[-62.61027145 199.23785400]
[-65.51537323 183.99514771]
[-58.87577438 169.97035217]
[-45.24452591 162.55625916]
[-29.86313057 164.60374451]
[-19.61687088 153.64865112]
[-9.37061119 142.69355774]
[0.87564778 131.73844910]
[11.03001690 120.69812775]
[21.09178925 109.57334900]
[31.15355873 98.44856262]
[94.76283264 89.19206238]
[97.01026917 74.36138153]
[99.25770569 59.53070450]
[101.50514221 44.70002747]
[103.75257874 29.86934853]
[94.64907074 17.22957420]
[97.13955688 2.22117233]
[109.24575043 -6.37973690]
[111.49318695 -21.21041489]
[113.74062347 -36.04109573]
[115.98806000 -50.87177277]
[118.23549652 -65.70245361]
[120.48293304 -80.53313446]
[122.60637665 -95.38207245]
[124.60568237 -110.24822998]
[126.60498047 -125.11439514]
[124.64499664 -134.05693054]
[128.76391602 -140.21147156]
[131.01135254 -155.04214478]
[133.25878906 -169.87281799]
[135.50622559 -184.70350647]
[137.75366211 -199.53417969]
[139.87710571 -214.38311768]
[141.87640381 -229.24928284]
[143.87570190 -244.11544800]
[145.87501526 -258.98159790]
[147.87431335 -273.84777832]
[149.87362671 -288.71392822]
[151.87292480 -303.58007812]
[153.87223816 -318.44625854]
[142.81875610 -329.17596436]
[140.23298645 -344.18154907]
[146.89999390 -357.67285156]
[160.07510376 -364.56881714]
[162.07441711 -379.43496704]
[151.02095032 -390.16470337]
[148.43516541 -405.17025757]
[155.10217285 -418.66156006]
[168.27729797 -425.55752563]
[170.27659607 -440.42367554]
[172.27590942 -455.28985596]
[163.34687805 -463.17486572]
[159.38224792 -474.28067017]
[161.26072693 -485.80075073]
[168.39978027 -494.88305664]
[178.92916870 -499.33593750]
[181.42411804 -514.12701416]
[183.91905212 -528.91802979]
[186.29032898 -543.72943115]
[188.53776550 -558.56011963]
[190.78520203 -573.39080811]
[175.48393250 -581.35388184]
[163.83743286 -594.04443359]
[157.23289490 -609.92602539]
[156.44850159 -627.08355713]
[161.56173706 -643.45452881]
[171.94204712 -657.07647705]
[186.32865906 -666.32263184]
[202.98359680 -670.09600830]
[204.48503113 -685.02069092]
[205.98646545 -699.94537354]
[207.48789978 -714.86999512]
[203.05735779 -731.23480225]
[217.55610657 -740.02246094]
[230.01396179 -728.52294922]
[222.41256714 -713.36859131]
[220.91113281 -698.44390869]
[219.40969849 -683.51922607]
[217.90826416 -668.59460449]
[229.87829590 -663.80670166]
[240.20657349 -656.06835938]
[248.18124390 -645.90429688]
[253.25035095 -634.00653076]
[255.06013489 -621.18750000]
[253.47966003 -608.32458496]
[248.61022949 -596.29992676]
[240.77900696 -585.94006348]
[230.51693726 -577.95910645]
[218.52287292 -572.90936279]
[205.61587524 -571.14337158]
[203.36843872 -556.31268311]
[201.12100220 -541.48199463]
[203.23155212 -534.38342285]
[198.71011353 -526.42309570]
[196.21516418 -511.63204956]
[193.72023010 -496.84100342]
[205.21142578 -482.60928345]
[202.62652588 -464.17901611]
[187.14205933 -453.29055786]
[185.14276123 -438.42437744]
[183.14346313 -423.55822754]
[194.02856445 -413.42648315]
[196.89434814 -398.65313721]
[190.43605042 -384.86389160]
[176.94058228 -377.43566895]
[174.94126892 -362.56951904]
[185.82638550 -352.43774414]
[188.69216919 -337.66442871]
[182.23387146 -323.87515259]
[168.73838806 -316.44696045]
[166.73908997 -301.58078003]
[164.73979187 -286.71463013]
[162.74047852 -271.84844971]
[160.74118042 -256.98229980]
[158.74186707 -242.11613464]
[156.74256897 -227.24996948]
[154.74325562 -212.38381958]
[156.97212219 -205.32151794]
[152.58433533 -197.28674316]
[150.33689880 -182.45606995]
[148.08946228 -167.62538147]
[145.84202576 -152.79470825]
[143.59458923 -137.96403503]
[141.47114563 -123.11508942]
[139.47184753 -108.24892426]
[137.47253418 -93.38276672]
[139.70140076 -86.32047272]
[135.31361389 -78.28569794]
[133.06617737 -63.45501709]
[130.81874084 -48.62433624]
[128.57130432 -33.79365921]
[126.32386780 -18.96298027]
[124.07643127 -4.13230085]
[133.09085083 7.66921902]
[131.02288818 22.74165154]
[118.58325195 32.11678314]
[116.33581543 46.94746399]
[114.08837891 61.77814102]
[111.84095001 76.60881805]
[109.59351349 91.43949890]
[112.58129883 106.13892365]
[120.44013977 118.91541290]
[134.26072693 126.61618042]
[134.33847046 141.51058960]
[142.19731140 154.28706360]
[150.05615234 167.06355286]
[164.73059082 174.38426208]
[165.45767212 190.76728821]
[151.48944092 199.35917664]
[137.19520569 191.32133484]
[137.27966309 174.92239380]
[129.42082214 162.14590454]
[121.56198120 149.36943054]
[108.30350494 142.58251953]
[107.66365051 126.77425385]
[99.80480957 113.99776459]
[85.44164276 118.32204437]
[85.94287109 133.31365967]
[86.44409180 148.30528259]
[86.94532013 163.29690552]
[90.36540222 171.78887939]
[87.32754517 178.54277039]
[87.57819366 193.54067993]
[90.09052277 212.75885010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 183]
[4 182]
[5 181]
[6 180]
[11 33]
[12 32]
[13 31]
[15 30]
[16 29]
[17 28]
[18 27]
[34 163]
[35 162]
[36 161]
[37 160]
[38 159]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 151]
[47 149]
[48 148]
[49 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[67 129]
[68 128]
[72 124]
[73 123]
[74 122]
[79 119]
[80 118]
[81 117]
[82 115]
[83 114]
[84 113]
[92 102]
[93 101]
[94 100]
[95 99]
[164 179]
[165 178]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
