%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCCGGGAGGGGCGAGGCCGGCGGCUGCCGGGCCUCCAAUCUCGGCGGCGGCGGCGGCAACAGGGGAGCCUGGGUCUCGCGGCCUGCGAGUCCGUCGCGUGCUGAGGGAGACGCAGGAGGUGGAGCCGGCCGGGUGCUCGAGGGAAGGAGACUGGAAGCUGGUUCCGGCGUGAGGAGAGUCUGAAAAAGGGGAGCGCGGAGAGGAGGCUGGAAGAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[102.07080841 249.10615540]
[108.85270691 235.32568359]
[121.62516785 226.79574585]
[120.56945038 211.83293152]
[119.51373291 196.87013245]
[118.45801544 181.90733337]
[117.40229797 166.94453430]
[116.34658813 151.98171997]
[103.05800629 152.33033752]
[90.59341431 149.46130371]
[79.68911743 143.79551697]
[70.92733002 135.91123962]
[64.70561218 126.49502563]
[61.22083282 116.28752899]
[46.57702637 119.53698730]
[31.93322372 122.78644562]
[17.28941917 126.03590393]
[2.64561391 129.28536987]
[-11.99819088 132.53482056]
[-26.64199448 135.78428650]
[-41.28580093 139.03373718]
[-38.24822235 159.92832947]
[-58.27555847 181.17709351]
[-72.08267212 187.03915405]
[-81.76161194 199.55429077]
[-96.50050354 197.40615845]
[-110.30761719 203.26820374]
[-124.11473083 209.13024902]
[-137.92184448 214.99229431]
[-151.72895813 220.85433960]
[-165.53607178 226.71640015]
[-169.80374146 231.74749756]
[-175.16574097 233.59712219]
[-179.81568909 232.54301453]
[-193.78247070 238.01376343]
[-207.74925232 243.48451233]
[-217.77693176 255.72201538]
[-232.44944763 253.15951538]
[-246.41622925 258.63024902]
[-252.51550293 273.21017456]
[-267.16940308 279.12954712]
[-281.68405151 272.87643433]
[-287.44812012 258.16076660]
[-281.04193115 243.71307373]
[-266.26614380 238.10488892]
[-251.88697815 244.66348267]
[-237.92019653 239.19273376]
[-228.89152527 227.34654236]
[-213.22000122 229.51773071]
[-199.25321960 224.04698181]
[-185.28643799 218.57623291]
[-171.39811707 212.90928650]
[-157.59100342 207.04722595]
[-143.78388977 201.18518066]
[-129.97677612 195.32313538]
[-116.16966248 189.46109009]
[-102.36254883 183.59904480]
[-93.67118073 171.50320435]
[-77.94471741 173.23204041]
[-64.13760376 167.36997986]
[-64.29608154 159.87165833]
[-64.61303711 144.87501526]
[-64.77150726 137.37667847]
[-78.81397247 132.10324097]
[-92.85643768 126.82978821]
[-106.89889526 121.55633545]
[-122.97969818 124.77188873]
[-133.60012817 112.27634430]
[-127.83478546 96.92404938]
[-111.61457062 94.50813293]
[-101.62545013 107.51387787]
[-87.58298492 112.78732300]
[-73.54052734 118.06077576]
[-59.49806213 123.33422089]
[-44.53525925 124.38993835]
[-29.89145470 121.14048004]
[-15.24765015 117.89102173]
[-0.60384572 114.64155579]
[14.03995895 111.39209747]
[28.68376350 108.14263916]
[43.32756805 104.89318085]
[57.97137451 101.64372253]
[60.46852493 85.63442993]
[68.83209229 71.75696564]
[81.82093811 62.07073593]
[77.85367584 47.60488510]
[73.88640594 33.13903809]
[69.91913605 18.67318726]
[65.95187378 4.20733881]
[61.98460388 -10.25851059]
[48.53347015 -18.11374474]
[44.71616745 -32.84068680]
[52.28782654 -45.61587906]
[48.32056046 -60.08172989]
[44.35329056 -74.54757690]
[33.24158478 -85.80992889]
[37.33719254 -100.13037872]
[33.36992645 -114.59622955]
[29.40266037 -129.06207275]
[16.22983932 -138.21939087]
[15.32001305 -154.23661804]
[27.37112236 -164.82672119]
[43.13858795 -161.86587524]
[50.52695847 -147.62539673]
[43.86850739 -133.02934265]
[47.83577728 -118.56349182]
[51.80304337 -104.09764862]
[62.63098526 -93.86998749]
[58.81914139 -78.51484680]
[62.78640747 -64.04899597]
[66.75367737 -49.58314896]
[79.78306580 -42.45780563]
[84.01251221 -27.84389114]
[76.45045471 -14.22577763]
[80.41772461 0.24007136]
[84.38498688 14.70592022]
[88.35225677 29.17177010]
[92.31951904 43.63761902]
[96.28678894 58.10346603]
[113.28035736 56.82804489]
[130.55247498 62.62186813]
[145.12506104 75.42324829]
[154.15063477 93.91566467]
[166.54138184 85.46170807]
[178.93212891 77.00775146]
[191.32287598 68.55379486]
[203.71362305 60.09983826]
[216.10437012 51.64587784]
[228.49511719 43.19192123]
[240.88586426 34.73796463]
[253.27661133 26.28400612]
[265.66735840 17.83004951]
[268.47711182 -0.91233516]
[283.83587646 -11.46057606]
[301.71334839 -7.49300194]
[313.86102295 -16.29267502]
[326.00869751 -25.09235001]
[331.11685181 -32.65415573]
[338.39004517 -33.92899704]
[350.66046143 -42.55667114]
[362.93087769 -51.18434143]
[363.03668213 -66.70105743]
[372.26983643 -79.17215729]
[387.08004761 -83.80224609]
[401.77243042 -78.81095886]
[410.69750977 -66.11755371]
[410.42340088 -50.60290146]
[401.05548096 -38.23270035]
[386.19595337 -33.76354599]
[371.55856323 -38.91391754]
[359.28811646 -30.28624725]
[347.01770020 -21.65857506]
[334.80834961 -12.94468594]
[322.66070557 -4.14501190]
[310.51303101 4.65466213]
[311.19781494 16.03290367]
[306.25735474 26.43824005]
[296.81301880 33.23957443]
[285.14038086 34.65577698]
[274.12130737 30.22079659]
[261.73056030 38.67475510]
[249.33982849 47.12871170]
[236.94908142 55.58266830]
[224.55833435 64.03662872]
[212.16758728 72.49058533]
[199.77684021 80.94454193]
[187.38609314 89.39849854]
[174.99534607 97.85245514]
[162.60459900 106.30641174]
[163.44941711 121.28260040]
[176.71232605 128.28941345]
[189.97523499 135.29621887]
[203.23814392 142.30302429]
[197.79992676 128.32353210]
[201.51165771 113.79002380]
[212.98716736 104.13015747]
[227.94078064 102.95150757]
[240.78794861 110.69425964]
[246.73077393 124.46679688]
[243.54985046 139.12564087]
[232.43310547 149.19630432]
[217.53251648 150.91784668]
[229.92326355 159.37181091]
[242.31401062 167.82575989]
[256.87738037 162.46969604]
[271.79843140 166.72908020]
[281.33966064 178.96607971]
[281.83230591 194.47534180]
[273.08694458 207.29321289]
[258.46630859 212.49098206]
[243.59236145 208.06999207]
[234.18441772 195.73019409]
[233.86004639 180.21650696]
[221.46929932 171.76255798]
[209.07855225 163.30859375]
[196.23133850 155.56591797]
[182.96842957 148.55911255]
[169.70552063 141.55232239]
[156.44261169 134.54551697]
[150.15930176 138.64064026]
[158.43936157 151.14825439]
[166.71942139 163.65588379]
[174.99946594 176.16351318]
[182.91786194 188.90318298]
[170.35131836 197.09355164]
[161.89277649 184.70576477]
[153.79275513 172.08079529]
[145.69271851 159.45584106]
[137.59269714 146.83088684]
[131.30938721 150.92601013]
[132.36509705 165.88880920]
[133.42082214 180.85162354]
[134.47653198 195.81442261]
[135.53225708 210.77722168]
[136.58796692 225.74002075]
[150.43159485 232.39204407]
[159.08126831 245.08372498]
[160.21026611 260.40106201]
[153.51489258 274.22378540]
[140.79615784 282.83361816]
[125.47534943 283.91461182]
[111.67369080 277.17593384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 215]
[4 214]
[5 213]
[6 212]
[7 211]
[8 210]
[14 82]
[15 81]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[21 75]
[23 60]
[24 59]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[34 51]
[35 50]
[36 49]
[38 47]
[39 46]
[63 74]
[64 73]
[65 72]
[66 71]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[93 111]
[94 110]
[95 109]
[97 107]
[98 106]
[99 105]
[123 169]
[124 168]
[125 167]
[126 166]
[127 165]
[128 164]
[129 163]
[130 162]
[131 161]
[132 160]
[135 155]
[136 154]
[137 153]
[139 152]
[140 151]
[141 150]
[170 199]
[171 198]
[172 197]
[173 196]
[182 195]
[183 194]
[184 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
