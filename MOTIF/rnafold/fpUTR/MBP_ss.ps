%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGUGCGCGCCCGUCCCUCGGAGCCGCCGCCGUCAGUCACCGCCGCCGCGCGCCAGAGAGAAGCAGCCUCCGGCCCCGGCGGCCCCUGUCUCCCGACCCCGGAAGGCGAAGCAGGCUGCCCGGGGACCCCGCGCGUGGGCGCUUGAAGCCGAGACCAGCCUGCCCGGGCCUGGGCAGGCGGAGCAGGGCCUUGGACCCCGCGGCGCCCCUCGGCCUCGGAGCAACGAGCGCAGCGCCGCCUCUGAAGAGCCAAU\
CCAUUCAGG\
) } def
/len { sequence length } bind def

/coor [
[282.55334473 825.60565186]
[286.04342651 810.81658936]
[296.53588867 799.68750000]
[292.32540894 785.29058838]
[288.11492920 770.89361572]
[283.90444946 756.49670410]
[279.69396973 742.09979248]
[275.39825439 727.72802734]
[271.01739502 713.38201904]
[266.63653564 699.03601074]
[262.25567627 684.69000244]
[251.13864136 674.77734375]
[254.50816345 659.31909180]
[250.12731934 644.97308350]
[245.74645996 630.62707520]
[232.51791382 623.87866211]
[227.87074280 609.39215088]
[235.03880310 595.56262207]
[230.65795898 581.21661377]
[226.27709961 566.87060547]
[215.16004944 556.95794678]
[218.52958679 541.49969482]
[214.14872742 527.15368652]
[209.76788330 512.80767822]
[205.30206299 498.48788452]
[200.75144958 484.19482422]
[196.20083618 469.90173340]
[178.88851929 456.89538574]
[184.16746521 435.10168457]
[178.94444275 421.04040527]
[173.72142029 406.97909546]
[168.49839783 392.91778564]
[163.27537537 378.85650635]
[158.05235291 364.79519653]
[142.46826172 358.43310547]
[136.19888306 342.44760132]
[143.58810425 326.57397461]
[138.19874573 312.57559204]
[132.80938721 298.57720947]
[120.24857330 297.85256958]
[108.89231110 291.17877197]
[101.50973511 279.56369019]
[100.17362213 265.27246094]
[85.20549774 266.24981689]
[70.23737335 267.22717285]
[55.26924515 268.20449829]
[40.30112076 269.18185425]
[25.33299446 270.15921021]
[10.36486912 271.13656616]
[2.72056150 282.20202637]
[-9.71575356 286.78753662]
[-22.33798599 283.43304443]
[-30.60696793 273.57617188]
[-45.58562851 274.37600708]
[-60.56428909 275.17587280]
[-73.93225861 283.63800049]
[-87.05399323 276.59036255]
[-102.03265381 277.39019775]
[-117.01131439 278.19003296]
[-124.55855560 291.64526367]
[-138.19284058 298.86395264]
[-153.56352234 297.54269409]
[-165.76586914 288.10308838]
[-170.90615845 273.55725098]
[-167.34413147 258.54675293]
[-156.21643066 247.86134338]
[-141.07386780 244.91072083]
[-126.74836731 250.63641357]
[-117.81114960 263.21139526]
[-102.83248901 262.41156006]
[-87.85382843 261.61169434]
[-75.55723572 253.20677185]
[-61.36412430 260.19720459]
[-46.38546371 259.39736938]
[-31.40680504 258.59753418]
[-20.69349861 245.61425781]
[-3.56635833 244.38839722]
[9.38751984 256.16842651]
[24.35564423 255.19108582]
[39.32377243 254.21372986]
[54.29189682 253.23638916]
[69.26002502 252.25903320]
[84.22814941 251.28167725]
[99.19627380 250.30433655]
[110.02062225 239.92004395]
[111.61802673 225.00534058]
[113.21542358 210.09065247]
[114.81282043 195.17594910]
[116.41022491 180.26124573]
[114.00576019 173.29904175]
[118.11598206 165.17958069]
[119.89008331 150.28485107]
[121.66417694 135.39013672]
[123.43827820 120.49542236]
[107.57463837 134.65379333]
[83.69897461 136.31794739]
[61.51194000 121.62065125]
[51.89833069 93.94271851]
[44.89117432 80.68000031]
[37.88401413 67.41727448]
[30.87685776 54.15455627]
[23.86969948 40.89183807]
[16.86254311 27.62911797]
[2.02901125 22.87474060]
[-4.88831043 9.32463646]
[-0.26432404 -4.78756905]
[-7.27148151 -18.05028915]
[-14.27863979 -31.31300926]
[-29.60294724 -34.42743301]
[-39.29962921 -46.69561768]
[-38.79021072 -62.32490158]
[-28.31522560 -73.93561554]
[-12.82063770 -76.04553223]
[0.37748072 -67.65841675]
[5.04738140 -52.73440933]
[-1.01591945 -38.32016754]
[5.99123812 -25.05744743]
[12.99839592 -11.79472637]
[27.26206589 -7.66152906]
[34.55725098 5.68893528]
[30.12526321 20.62195969]
[37.13241959 33.88468170]
[44.13957977 47.14739990]
[51.14673615 60.41011810]
[58.15389252 73.67283630]
[65.16104889 86.93556213]
[72.53479004 85.56514740]
[69.79396820 70.81768036]
[74.79405975 56.67557526]
[84.54144287 68.07685852]
[87.28225708 82.82433319]
[94.65599060 81.45392609]
[96.43009186 66.55920410]
[98.20418549 51.66448975]
[99.97828674 36.76977539]
[93.02220917 21.91901779]
[102.62593079 8.62614536]
[118.90997314 10.56572437]
[125.12271118 25.74248314]
[114.87300110 38.54387283]
[113.09890747 53.43858719]
[111.32480621 68.33330536]
[109.55071259 83.22801971]
[116.14006805 86.80996704]
[123.30396271 73.63124847]
[130.46784973 60.45252991]
[137.63174438 47.27380753]
[144.79563904 34.09508896]
[151.95953369 20.91637039]
[154.70053101 6.16893244]
[169.57322693 4.21875668]
[176.02369690 17.76096535]
[165.13824463 28.08026123]
[157.97436523 41.25897980]
[150.81047058 54.43770218]
[143.64657593 67.61641693]
[136.48268127 80.79514313]
[129.31878662 93.97386169]
[135.90815735 97.55580902]
[147.44314575 87.96707153]
[158.97814941 78.37833405]
[170.51313782 68.78959656]
[182.04814148 59.20085907]
[193.58312988 49.61212540]
[205.11813354 40.02338791]
[216.65312195 30.43465042]
[228.18812561 20.84591484]
[233.35725403 5.28275108]
[249.47225952 2.24325037]
[259.95541382 14.85419083]
[254.02252197 30.14251709]
[237.77685547 32.38090897]
[226.24185181 41.96964645]
[214.70686340 51.55838394]
[203.17185974 61.14712143]
[191.63687134 70.73585510]
[180.10186768 80.32459259]
[168.56687927 89.91333008]
[157.03187561 99.50206757]
[145.49688721 109.09080505]
[138.33299255 122.26952362]
[136.55889893 137.16423035]
[134.78480530 152.05895996]
[133.01069641 166.95367432]
[131.32492065 181.85864258]
[129.72752380 196.77334595]
[128.13012695 211.68804932]
[126.53272247 226.60275269]
[124.93532562 241.51744080]
[138.57023621 242.84053040]
[149.97338867 249.73262024]
[157.07138062 260.56335449]
[158.73899841 273.02691650]
[154.96818542 284.62945557]
[146.80778503 293.18783569]
[152.19712830 307.18624878]
[157.58648682 321.18463135]
[170.42604065 325.18786621]
[178.50616455 335.69503784]
[179.06167603 348.74359131]
[172.11364746 359.57217407]
[177.33666992 373.63348389]
[182.55969238 387.69476318]
[187.78271484 401.75607300]
[193.00573730 415.81735229]
[198.22875977 429.87866211]
[206.25874329 431.87411499]
[212.78387451 436.80804443]
[216.79866028 443.82794189]
[217.72096252 451.76776123]
[215.47541809 459.34143066]
[210.49391174 465.35113525]
[215.04452515 479.64419556]
[219.59513855 493.93728638]
[225.16253662 501.13613892]
[224.11389160 508.42681885]
[228.49475098 522.77282715]
[232.87559509 537.11883545]
[244.30598450 548.05761719]
[240.62312317 562.48974609]
[245.00396729 576.83575439]
[249.38482666 591.18176270]
[263.05587769 598.64764404]
[267.29434204 613.25897217]
[260.09246826 626.24621582]
[264.47332764 640.59222412]
[268.85418701 654.93829346]
[280.28457642 665.87701416]
[276.60171509 680.30914307]
[280.98254395 694.65515137]
[285.36340332 709.00115967]
[289.74426270 723.34716797]
[295.22592163 730.61157227]
[294.09091187 737.88928223]
[298.30139160 752.28625488]
[302.51187134 766.68316650]
[306.72235107 781.08013916]
[310.93283081 795.47705078]
[325.76846313 799.19873047]
[336.67730713 809.77673340]
[340.79937744 824.29827881]
[337.12393188 838.83605957]
[326.73516846 849.51031494]
[330.94564819 863.90722656]
[335.15612793 878.30419922]
[339.36660767 892.70111084]
[343.57708740 907.09808350]
[358.59359741 910.05828857]
[370.50714111 919.66693115]
[376.58001709 933.71606445]
[375.41674805 948.97729492]
[367.28466797 961.94372559]
[354.05242920 969.63574219]
[338.76074219 970.28570557]
[324.92349243 963.74438477]
[315.72039795 951.51483154]
[313.26623535 936.40740967]
[318.12500000 921.89355469]
[329.18014526 911.30853271]
[324.96966553 896.91162109]
[320.75918579 882.51464844]
[316.54870605 868.11773682]
[312.33825684 853.72076416]
[297.83502197 850.32635498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 238]
[4 237]
[5 236]
[6 235]
[7 234]
[8 232]
[9 231]
[10 230]
[11 229]
[13 227]
[14 226]
[15 225]
[18 222]
[19 221]
[20 220]
[22 218]
[23 217]
[24 216]
[25 214]
[26 213]
[27 212]
[29 206]
[30 205]
[31 204]
[32 203]
[33 202]
[34 201]
[37 197]
[38 196]
[39 195]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[48 79]
[49 78]
[53 75]
[54 74]
[55 73]
[57 71]
[58 70]
[59 69]
[85 189]
[86 188]
[87 187]
[88 186]
[89 185]
[91 184]
[92 183]
[93 182]
[94 181]
[98 126]
[99 125]
[100 124]
[101 123]
[102 122]
[103 121]
[106 118]
[107 117]
[108 116]
[132 143]
[133 142]
[134 141]
[135 140]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
[243 263]
[244 262]
[245 261]
[246 260]
[247 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
