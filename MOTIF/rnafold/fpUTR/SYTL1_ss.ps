%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGGUGUUUCCUCCUCCUCCGUGUGGGGCAGCUGCUGGCUGGGCUGCCUGUUGAGUCAGCCUUCUUCCCUCACGGCUCUUCUCCCGGUCCCUGAAACUCGGCUGCCAGGGGAGCUGGAGCCACCUGCGAAGGUGUCCUCCCAUACUGGACCCCUACAGGAAGCUCCGUGUGCCCAGCUGGGGCACAGCCCCAGCUG\
) } def
/len { sequence length } bind def

/coor [
[99.80897522 136.58404541]
[96.52977753 136.41960144]
[92.07597351 150.74313354]
[87.62216949 165.06666565]
[83.16836548 179.39019775]
[92.55525970 191.74598694]
[92.85321045 207.26020813]
[83.94763184 219.96730042]
[69.26291656 224.98115540]
[54.44562531 220.37380981]
[45.19331360 207.91691589]
[45.06368637 192.40037537]
[54.10658264 179.79063416]
[68.84483337 174.93638611]
[73.29863739 160.61285400]
[77.75244141 146.28932190]
[82.20624542 131.96578979]
[74.33509827 126.07186890]
[68.31808472 118.29441071]
[64.58988953 109.19529724]
[49.60688019 109.90902710]
[34.62387085 110.62275696]
[19.64085960 111.33647919]
[4.65784979 112.05020905]
[-8.75853634 120.43538666]
[-21.83954811 113.31243896]
[-36.82255936 114.02616882]
[-51.80556870 114.73989868]
[-66.78857422 115.45362091]
[-75.22211456 118.99101257]
[-82.01458740 116.05790710]
[-97.00703430 116.53382111]
[-108.73680878 129.50506592]
[-125.88100433 129.97583008]
[-137.82496643 118.14288330]
[-152.80796814 118.85660553]
[-167.79098511 119.57033539]
[-182.77398682 120.28406525]
[-197.75700378 120.99779510]
[-212.74000549 121.71152496]
[-227.72302246 122.42525482]
[-241.13940430 130.81042480]
[-254.22041321 123.68747711]
[-269.20343018 124.40120697]
[-284.18643188 125.11493683]
[-295.99850464 135.97103882]
[-311.82803345 133.36241150]
[-319.53201294 119.29014587]
[-313.20056152 104.54930115]
[-297.69067383 100.44778442]
[-284.90017700 110.13192749]
[-269.91714478 109.41819763]
[-254.93414307 108.70446777]
[-242.58944702 100.37034607]
[-228.43675232 107.44224548]
[-213.45373535 106.72851562]
[-198.47073364 106.01478577]
[-183.48771667 105.30105591]
[-168.50471497 104.58732605]
[-153.52169800 103.87359619]
[-138.53869629 103.15986633]
[-131.28584290 92.50222015]
[-119.03482819 87.90236664]
[-106.18314362 91.25091553]
[-97.48295593 101.54137421]
[-82.49050903 101.06545258]
[-67.50230408 100.47061157]
[-52.51929855 99.75688171]
[-37.53628540 99.04315948]
[-22.55327606 98.32942963]
[-10.20857620 89.99530029]
[3.94412112 97.06719971]
[18.92713165 96.35346985]
[33.91014099 95.63973999]
[48.89315033 94.92601776]
[63.87615967 94.21228790]
[66.71506500 82.74794769]
[73.18087006 72.52298737]
[82.76512909 64.67885590]
[94.60295105 60.15644836]
[107.54994202 59.58603287]
[106.59857941 44.61623383]
[105.64722443 29.64643288]
[104.69586182 14.67663193]
[103.74450684 -0.29316819]
[95.14752197 -13.57482624]
[102.06203461 -26.76720428]
[101.11067200 -41.73700333]
[100.15931702 -56.70680618]
[88.58058929 -67.12654114]
[87.82902527 -82.32159424]
[97.83400726 -93.29592896]
[96.88264465 -108.26573181]
[95.93128967 -123.23552704]
[94.97992706 -138.20533752]
[87.94118500 -153.62908936]
[100.81365967 -164.66247559]
[114.97931671 -155.34741211]
[109.94972992 -139.15669250]
[110.90109253 -124.18688965]
[111.85244751 -109.21708679]
[112.80381012 -94.24729156]
[124.11756134 -84.62779999]
[125.29562378 -69.45984650]
[115.12911224 -57.65816498]
[116.08047485 -42.68836212]
[117.03182983 -27.71856308]
[125.56076813 -15.50764465]
[118.71430206 -1.24452698]
[119.66566467 13.72527313]
[120.61701965 28.69507408]
[121.56838226 43.66487503]
[122.51973724 58.63467407]
[134.38372803 67.81322479]
[149.11265564 64.97445679]
[163.81860352 62.01893234]
[178.50064087 58.94683075]
[193.18267822 55.87473297]
[207.86471558 52.80263138]
[222.54675293 49.73052979]
[237.22879028 46.65843201]
[245.89463806 33.71467972]
[260.82806396 30.80828285]
[273.11456299 39.14961624]
[287.79660034 36.07751846]
[302.47863770 33.00541687]
[317.16067505 29.93331718]
[322.58517456 20.48999977]
[332.11791992 15.69510460]
[342.49707031 16.91865921]
[350.31738281 23.51578331]
[365.08950806 20.91106033]
[379.86163330 18.30633736]
[392.10858154 8.29020882]
[405.98605347 13.69989491]
[420.75817871 11.09517193]
[435.53030396 8.49044895]
[450.30239868 5.88572693]
[456.16772461 -8.38317966]
[468.82934570 -17.19717598]
[484.24703979 -17.74374962]
[497.50103760 -9.84848976]
[504.36203003 3.96925449]
[502.64074707 19.30029106]
[492.88641357 31.25254250]
[478.21157837 36.01208878]
[463.29898071 32.06017303]
[452.90713501 20.65784264]
[438.13500977 23.26256561]
[423.36288452 25.86728859]
[408.59078979 28.47201157]
[397.40042114 38.30183029]
[382.46633911 33.07845306]
[367.69424438 35.68317413]
[352.92211914 38.28789902]
[339.07098389 51.77101517]
[320.23275757 44.61535263]
[305.55072021 47.68745422]
[290.86871338 50.75955200]
[276.18667603 53.83165359]
[268.27520752 66.39924622]
[253.42929077 69.72394562]
[240.30088806 61.34046936]
[225.61885071 64.41256714]
[210.93681335 67.48466492]
[196.25477600 70.55677032]
[181.57273865 73.62886810]
[166.89070129 76.70096588]
[160.98120117 81.15278625]
[151.95143127 79.70339203]
[137.22248840 82.54216003]
[139.84324646 96.68411255]
[137.41548157 110.45533752]
[130.52032471 122.15985870]
[120.27107239 130.45509338]
[125.84600830 144.38061523]
[131.42094421 158.30613708]
[136.99588013 172.23165894]
[142.57081604 186.15716553]
[148.14575195 200.08268738]
[153.72070312 214.00820923]
[159.29563904 227.93373108]
[164.87057495 241.85925293]
[170.44551086 255.78475952]
[181.94554138 268.24212646]
[173.15856934 282.74127197]
[156.79356384 278.31143188]
[156.51998901 261.35971069]
[150.94505310 247.43418884]
[145.37011719 233.50866699]
[139.79518127 219.58314514]
[134.22024536 205.65762329]
[128.64530945 191.73210144]
[123.07036591 177.80659485]
[117.49542999 163.88107300]
[111.92049408 149.95555115]
[106.34555817 136.03002930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[26 70]
[27 69]
[28 68]
[29 67]
[31 66]
[32 65]
[35 61]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[43 53]
[44 52]
[45 51]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[87 107]
[88 106]
[89 105]
[92 102]
[93 101]
[94 100]
[95 99]
[114 171]
[115 170]
[116 168]
[117 167]
[118 166]
[119 165]
[120 164]
[121 163]
[124 160]
[125 159]
[126 158]
[127 157]
[131 155]
[132 154]
[133 153]
[135 151]
[136 150]
[137 149]
[138 148]
[175 197]
[176 196]
[177 195]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
