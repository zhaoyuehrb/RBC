%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCUGGUCGGAGGAUGCUCCGAGGCCCGACGCUGCUCCCGGCGGGCUGUCAUCCUCCUAGGGGUCGGCCGGCCGGCCUGGAGCCGCCCCGCCCACGGCCGAGGUUUCGGUUUCCCUUGGGAGCCCCGCCCUGUGUCCCGGGGAGCCGGAGGAGGUGGAGAUGA\
) } def
/len { sequence length } bind def

/coor [
[98.90879059 159.87748718]
[90.97428894 147.14784241]
[90.14122009 132.17100525]
[96.61422729 118.64086151]
[88.31019592 131.13258362]
[80.00617218 143.62429810]
[79.20063782 150.25840759]
[75.67265320 154.78450012]
[71.14405823 156.42340088]
[62.37327194 168.59194946]
[53.60248947 180.76048279]
[44.83170700 192.92901611]
[36.06092453 205.09756470]
[27.29014015 217.26609802]
[26.17693710 233.62742615]
[11.33395004 240.60006714]
[-1.96962833 231.01116943]
[-0.04821708 214.72497559]
[15.12160110 208.49531555]
[23.89238358 196.32678223]
[32.66316605 184.15823364]
[41.43394852 171.98970032]
[50.20473480 159.82116699]
[58.97551727 147.65261841]
[67.51445007 135.32028198]
[75.81847382 122.82855988]
[84.12250519 110.33683014]
[72.07347107 119.27108765]
[57.35057449 116.40120697]
[49.53921509 103.59563446]
[53.72501373 89.19150543]
[67.18279266 82.56668091]
[81.15048218 88.03398132]
[69.86508942 78.15269470]
[54.38543320 74.88301849]
[49.90691757 60.67766571]
[38.62152481 50.79637527]
[27.33613205 40.91508102]
[16.05073929 31.03379059]
[4.76534700 21.15250015]
[-10.71431160 17.88282967]
[-15.19282722 3.67747331]
[-26.47821999 -6.20381784]
[-37.76361084 -16.08510971]
[-53.24327087 -19.35477829]
[-57.72178650 -33.56013489]
[-69.00717926 -43.44142532]
[-80.29257202 -53.32271957]
[-91.57796478 -63.20401001]
[-102.86335754 -73.08530426]
[-114.24174500 -82.85935974]
[-125.71211243 -92.52531433]
[-141.24592590 -91.36849976]
[-152.74081421 -101.33455658]
[-153.74794006 -116.15080261]
[-165.21830750 -125.81676483]
[-176.68867493 -135.48271179]
[-188.15904236 -145.14866638]
[-204.16732788 -150.73178101]
[-203.23393250 -167.66001892]
[-186.70887756 -171.44931030]
[-178.49307251 -156.61903381]
[-167.02272034 -146.95307922]
[-155.55235291 -137.28712463]
[-144.08198547 -127.62117004]
[-129.30941772 -129.14006042]
[-117.53913879 -119.50080109]
[-116.04615784 -103.99568176]
[-104.57579041 -94.32972717]
[-97.40284729 -92.41565704]
[-92.98206329 -84.37068939]
[-81.69667053 -74.48940277]
[-70.41127777 -64.60810852]
[-59.12588882 -54.72681808]
[-47.84049606 -44.84552765]
[-33.16804504 -42.28263474]
[-27.88232231 -27.37050247]
[-16.59692955 -17.48921013]
[-5.31153631 -7.60791922]
[9.36091518 -5.04502535]
[14.64663792 9.86710739]
[25.93203163 19.74839783]
[37.21742249 29.62969017]
[48.50281525 39.51098251]
[59.78820801 49.39227295]
[74.46066284 51.95516586]
[79.74638367 66.86730194]
[91.03177643 76.74858856]
[108.33942413 80.29750061]
[116.44489288 93.01097107]
[131.44490051 93.01097107]
[146.44490051 93.01097107]
[161.44490051 93.01097107]
[176.44490051 93.01097107]
[182.06434631 84.18942261]
[190.80886841 78.69479370]
[200.93316650 77.49047852]
[210.47267151 80.69651031]
[221.75805664 70.81521606]
[233.04345703 60.93392563]
[244.32884216 51.05263519]
[255.61422729 41.17134476]
[266.89962769 31.29005432]
[271.66809082 15.59949112]
[287.69989014 12.14787292]
[298.50286865 24.48592758]
[292.96386719 39.92132187]
[276.78091431 42.57544708]
[265.49551392 52.45673752]
[254.21012878 62.33802795]
[242.92474365 72.21932220]
[231.63934326 82.10060883]
[220.35395813 91.98190308]
[221.34976196 95.06322479]
[221.89866638 98.25460815]
[221.98956299 101.49157715]
[235.92782593 107.03455353]
[249.86610413 112.57752991]
[263.80438232 118.12051392]
[279.48690796 116.03047180]
[288.45416260 127.92324829]
[302.39242554 133.46621704]
[316.76339722 127.45684814]
[330.81982422 133.27677917]
[336.46029663 147.01434326]
[350.39855957 152.55732727]
[364.33682251 158.10029602]
[378.27511597 163.64328003]
[392.21337891 169.18624878]
[404.21456909 159.60151672]
[419.40264893 157.31735229]
[433.69213867 162.94819641]
[443.23919678 174.97937012]
[445.47573853 190.17454529]
[439.80014038 204.44630432]
[427.73910522 213.95561218]
[412.53698730 216.14451599]
[398.28311157 210.42420959]
[388.81164551 198.33343506]
[386.67041016 183.12452698]
[372.73211670 177.58154297]
[358.79385376 172.03857422]
[344.85559082 166.49559021]
[330.91732788 160.95262146]
[317.38302612 167.06475830]
[303.16867065 161.64195251]
[296.84945679 147.40449524]
[282.91116333 141.86151123]
[268.22558594 144.34802246]
[258.26138306 132.05877686]
[244.32312012 126.51580811]
[230.38485718 120.97282410]
[216.44657898 115.42984772]
[194.62864685 123.43849182]
[176.44490051 108.01097107]
[161.44490051 108.01097107]
[146.44490051 108.01097107]
[131.44490051 108.01097107]
[116.44489288 108.01097107]
[131.29713440 110.11114502]
[143.30802917 119.09660339]
[149.51593018 132.75170898]
[148.39009094 147.70939636]
[140.20812988 160.28140259]
[126.98753357 167.36773682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[33 88]
[34 87]
[36 85]
[37 84]
[38 83]
[39 82]
[40 81]
[42 79]
[43 78]
[44 77]
[46 75]
[47 74]
[48 73]
[49 72]
[50 71]
[51 69]
[52 68]
[55 65]
[56 64]
[57 63]
[58 62]
[90 159]
[91 158]
[92 157]
[93 156]
[94 155]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[116 153]
[117 152]
[118 151]
[119 150]
[121 148]
[122 147]
[125 144]
[126 143]
[127 142]
[128 141]
[129 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
