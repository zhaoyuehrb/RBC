%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ELP2)
} def

/sequence { (\
AGUUCCGCUCCGAGGGCGGAAGUGCGCGUCUCUUGUUUGUGCGGCUGACCAGUUGGCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 46 0.032489678 ubox
2 8 0.003561722 ubox
2 23 0.064171599 ubox
2 25 0.063095467 ubox
2 27 0.013185257 ubox
2 45 0.035645408 ubox
2 49 0.023687312 ubox
2 57 0.029915950 ubox
2 60 0.059118990 ubox
3 7 0.003333818 ubox
3 20 0.020309051 ubox
3 21 0.831519923 ubox
3 22 0.035832327 ubox
3 24 0.058253115 ubox
3 26 0.012675484 ubox
3 44 0.031107212 ubox
3 48 0.023526950 ubox
3 56 0.024447247 ubox
3 59 0.053531277 ubox
4 20 0.981994415 ubox
4 21 0.033464989 ubox
4 43 0.016376261 ubox
4 44 0.003261764 ubox
4 47 0.020046258 ubox
4 55 0.009211546 ubox
4 58 0.033368448 ubox
4 59 0.008044879 ubox
5 19 0.997698490 ubox
5 43 0.007172645 ubox
5 44 0.036894580 ubox
5 56 0.004332058 ubox
5 58 0.006683093 ubox
6 18 0.997759395 ubox
6 24 0.014576637 ubox
6 26 0.005857280 ubox
6 41 0.018284655 ubox
6 43 0.041140927 ubox
6 55 0.004337539 ubox
6 58 0.042525302 ubox
7 17 0.997769013 ubox
7 23 0.015997046 ubox
7 25 0.006073688 ubox
7 40 0.018436167 ubox
7 42 0.041237722 ubox
7 57 0.043300866 ubox
8 15 0.014027566 ubox
8 16 0.997497527 ubox
8 22 0.016174399 ubox
8 24 0.006064602 ubox
8 39 0.018438836 ubox
8 41 0.041214759 ubox
8 52 0.003163931 ubox
8 56 0.042166966 ubox
9 14 0.018207303 ubox
9 15 0.981542023 ubox
9 16 0.017841179 ubox
9 20 0.014898420 ubox
9 21 0.011426291 ubox
9 55 0.037056774 ubox
10 14 0.947487308 ubox
10 15 0.159926779 ubox
10 16 0.005032195 ubox
10 19 0.019442887 ubox
10 55 0.010948921 ubox
10 56 0.011731917 ubox
11 15 0.007278712 ubox
11 18 0.019446511 ubox
11 35 0.044709778 ubox
11 39 0.005575363 ubox
11 55 0.015788378 ubox
12 17 0.019079915 ubox
12 32 0.012135638 ubox
12 34 0.045193682 ubox
12 38 0.004387593 ubox
12 54 0.018145128 ubox
13 31 0.012179757 ubox
13 33 0.045281556 ubox
13 37 0.004074046 ubox
13 53 0.018021175 ubox
14 30 0.012165418 ubox
14 31 0.005648717 ubox
14 32 0.045134546 ubox
14 50 0.025674116 ubox
15 29 0.010959369 ubox
15 30 0.035505581 ubox
15 31 0.028408685 ubox
15 49 0.025543401 ubox
15 50 0.032595974 ubox
15 54 0.007405080 ubox
16 27 0.013900968 ubox
16 29 0.035630294 ubox
16 30 0.027568874 ubox
16 49 0.032626492 ubox
16 53 0.007664011 ubox
17 26 0.014257202 ubox
17 28 0.044955151 ubox
17 47 0.039477531 ubox
17 52 0.007705250 ubox
18 25 0.014239225 ubox
18 27 0.044929048 ubox
18 46 0.040615910 ubox
18 50 0.009016480 ubox
19 45 0.040483388 ubox
19 49 0.009060947 ubox
20 34 0.003401674 ubox
20 54 0.004837625 ubox
21 31 0.005176781 ubox
21 33 0.004952795 ubox
21 46 0.227526407 ubox
21 53 0.006833767 ubox
22 30 0.006244551 ubox
22 32 0.005538028 ubox
22 42 0.078793240 ubox
22 45 0.270002161 ubox
22 49 0.008769027 ubox
22 57 0.076352950 ubox
22 60 0.156416834 ubox
23 41 0.078673837 ubox
23 43 0.693827511 ubox
23 44 0.191704906 ubox
23 48 0.008190989 ubox
23 51 0.009103938 ubox
23 55 0.003536831 ubox
23 56 0.075494049 ubox
23 58 0.063848627 ubox
23 59 0.156044849 ubox
24 36 0.012885297 ubox
24 38 0.005127123 ubox
24 40 0.078960127 ubox
24 42 0.923569625 ubox
24 45 0.026688396 ubox
24 50 0.009496647 ubox
24 53 0.050994040 ubox
24 54 0.003681622 ubox
24 57 0.086510068 ubox
25 35 0.013523294 ubox
25 39 0.078938906 ubox
25 41 0.924418996 ubox
25 43 0.088662100 ubox
25 44 0.023606284 ubox
25 52 0.053055281 ubox
25 55 0.013096424 ubox
25 56 0.086001562 ubox
25 58 0.237426977 ubox
26 34 0.011274148 ubox
26 36 0.072809502 ubox
26 38 0.039500123 ubox
26 40 0.923880707 ubox
26 42 0.090784512 ubox
26 45 0.006285049 ubox
26 53 0.082028400 ubox
26 54 0.011728870 ubox
26 57 0.239995116 ubox
27 35 0.080229262 ubox
27 39 0.924102936 ubox
27 41 0.090756409 ubox
27 43 0.021873684 ubox
27 44 0.005804798 ubox
27 52 0.083930131 ubox
27 55 0.040200371 ubox
27 56 0.239593519 ubox
27 58 0.220406899 ubox
28 34 0.077319682 ubox
28 36 0.016949822 ubox
28 38 0.854828617 ubox
28 40 0.070652698 ubox
28 42 0.022160385 ubox
28 45 0.006098593 ubox
28 49 0.172875958 ubox
28 53 0.008268151 ubox
28 54 0.028499309 ubox
28 57 0.223576518 ubox
28 60 0.016321449 ubox
29 35 0.036920386 ubox
29 39 0.026433629 ubox
29 41 0.021379261 ubox
29 44 0.006050245 ubox
29 48 0.173665930 ubox
29 56 0.223331507 ubox
29 59 0.016463540 ubox
30 43 0.005927116 ubox
30 47 0.173663865 ubox
30 52 0.038987457 ubox
30 55 0.223309120 ubox
30 56 0.008093942 ubox
30 58 0.016423487 ubox
31 44 0.004159471 ubox
31 48 0.015467977 ubox
31 51 0.038316149 ubox
31 55 0.007757283 ubox
31 56 0.003443710 ubox
32 43 0.004928945 ubox
32 44 0.037706871 ubox
32 47 0.016044656 ubox
32 52 0.285347900 ubox
32 55 0.003802996 ubox
32 56 0.010607219 ubox
33 43 0.026837975 ubox
33 44 0.154926176 ubox
33 48 0.003537722 ubox
33 51 0.280640538 ubox
33 52 0.069731424 ubox
33 55 0.009779490 ubox
33 59 0.010700290 ubox
34 43 0.169771067 ubox
34 47 0.003538416 ubox
34 51 0.075880520 ubox
34 58 0.011711009 ubox
35 42 0.175289276 ubox
35 45 0.012821275 ubox
35 49 0.294407364 ubox
35 50 0.065444290 ubox
35 57 0.012573957 ubox
35 60 0.017910160 ubox
36 41 0.172486215 ubox
36 44 0.012776968 ubox
36 48 0.297424235 ubox
36 52 0.004274984 ubox
36 56 0.012491419 ubox
36 59 0.015382229 ubox
37 43 0.011148252 ubox
37 47 0.271258954 ubox
37 48 0.040312817 ubox
37 51 0.004778301 ubox
37 52 0.004483835 ubox
37 55 0.009211333 ubox
37 58 0.011514978 ubox
37 59 0.049640800 ubox
38 43 0.004890789 ubox
38 47 0.040876208 ubox
38 51 0.004907562 ubox
38 58 0.054978967 ubox
39 45 0.279799296 ubox
39 46 0.024645796 ubox
39 49 0.021134006 ubox
39 50 0.004354467 ubox
39 57 0.058234090 ubox
39 60 0.009685741 ubox
40 44 0.261825597 ubox
40 47 0.003470723 ubox
40 48 0.021200491 ubox
40 56 0.055210048 ubox
40 58 0.019252491 ubox
40 59 0.008332486 ubox
41 46 0.004558053 ubox
41 53 0.012907461 ubox
41 57 0.027390929 ubox
42 52 0.013189378 ubox
42 55 0.067615601 ubox
42 56 0.022514348 ubox
42 58 0.011508964 ubox
43 50 0.072691571 ubox
43 54 0.094508490 ubox
43 57 0.026167673 ubox
44 49 0.072430542 ubox
44 53 0.112808264 ubox
44 57 0.854985314 ubox
45 52 0.114043389 ubox
45 56 0.856068545 ubox
46 51 0.106731882 ubox
46 55 0.851599596 ubox
46 58 0.172692716 ubox
47 54 0.764674823 ubox
47 57 0.255227422 ubox
48 53 0.668439510 ubox
49 56 0.317275877 ubox
50 55 0.318393390 ubox
52 60 0.031047687 ubox
53 59 0.031198373 ubox
54 58 0.028203204 ubox
3 21 0.9500000 lbox
4 20 0.9500000 lbox
5 19 0.9500000 lbox
6 18 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
10 14 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
