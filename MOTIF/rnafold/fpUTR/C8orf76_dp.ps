%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C8orf76)
} def

/sequence { (\
CCGCCUUUUCCGGCGGGCCCCGCUUCCUCGUUGCCCCCGCCGCGGGCGCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.894569263 ubox
1 17 0.024759613 ubox
1 45 0.015939307 ubox
2 12 0.005067609 ubox
2 15 0.901186974 ubox
2 16 0.017848415 ubox
2 44 0.015994809 ubox
2 48 0.368583966 ubox
2 50 0.195547354 ubox
3 11 0.005263005 ubox
3 14 0.901692275 ubox
3 18 0.011891516 ubox
3 43 0.015994457 ubox
3 47 0.382213026 ubox
3 49 0.197242244 ubox
4 13 0.901696010 ubox
4 17 0.011917576 ubox
4 42 0.015013778 ubox
4 45 0.003387418 ubox
4 46 0.382214293 ubox
4 48 0.197137489 ubox
5 12 0.900744917 ubox
5 13 0.004481698 ubox
5 16 0.011915645 ubox
5 44 0.004653807 ubox
5 45 0.381857128 ubox
5 46 0.159326024 ubox
6 12 0.006051382 ubox
6 15 0.011736489 ubox
6 44 0.350553081 ubox
6 45 0.155984940 ubox
6 46 0.057950904 ubox
7 44 0.151520295 ubox
7 45 0.059408114 ubox
7 46 0.024490917 ubox
8 44 0.069135022 ubox
8 45 0.028950353 ubox
8 46 0.087502603 ubox
9 44 0.055181851 ubox
9 45 0.095885842 ubox
9 46 0.006938472 ubox
10 44 0.132684850 ubox
10 45 0.008476037 ubox
11 39 0.122893154 ubox
11 42 0.409393055 ubox
11 44 0.007928800 ubox
12 24 0.035218318 ubox
12 38 0.123804914 ubox
12 41 0.412257218 ubox
12 43 0.003486113 ubox
13 23 0.038005234 ubox
13 37 0.123795021 ubox
13 40 0.412286892 ubox
14 22 0.038083141 ubox
14 39 0.412154751 ubox
15 21 0.038466340 ubox
15 24 0.003976539 ubox
15 25 0.015578308 ubox
15 26 0.005565403 ubox
15 27 0.003882585 ubox
15 36 0.164027909 ubox
15 37 0.032029847 ubox
15 38 0.396558388 ubox
16 20 0.037889070 ubox
16 23 0.011147153 ubox
16 24 0.080814990 ubox
16 25 0.005906977 ubox
16 26 0.006927015 ubox
16 27 0.008343510 ubox
16 35 0.173004519 ubox
16 36 0.039805339 ubox
16 37 0.392145820 ubox
17 23 0.348434039 ubox
17 24 0.013878873 ubox
17 25 0.009576274 ubox
17 26 0.030692606 ubox
17 27 0.003981083 ubox
17 31 0.003429887 ubox
17 34 0.181909905 ubox
17 35 0.040901114 ubox
17 36 0.387235239 ubox
17 47 0.040047078 ubox
17 49 0.240706762 ubox
18 22 0.346707141 ubox
18 30 0.006123222 ubox
18 33 0.189749771 ubox
18 46 0.036482924 ubox
18 48 0.240890785 ubox
19 45 0.032483351 ubox
19 46 0.241644913 ubox
20 44 0.027735721 ubox
20 45 0.242247805 ubox
21 30 0.172513264 ubox
21 33 0.083586410 ubox
21 42 0.019502407 ubox
21 44 0.242802408 ubox
21 48 0.009659335 ubox
21 50 0.233052568 ubox
22 29 0.166536267 ubox
22 31 0.299774454 ubox
22 32 0.060832440 ubox
22 34 0.232379645 ubox
22 40 0.013102076 ubox
22 41 0.016211128 ubox
22 43 0.243291553 ubox
22 47 0.010543881 ubox
22 49 0.235406505 ubox
23 30 0.309602718 ubox
23 33 0.232706129 ubox
23 39 0.016772597 ubox
23 42 0.242659862 ubox
23 46 0.010068218 ubox
23 48 0.235268543 ubox
23 52 0.008578012 ubox
24 45 0.008101673 ubox
24 46 0.003293649 ubox
24 51 0.007460786 ubox
24 52 0.004275239 ubox
25 46 0.069337130 ubox
25 50 0.006345905 ubox
25 51 0.005288953 ubox
26 45 0.071653184 ubox
26 46 0.105282995 ubox
26 50 0.005231957 ubox
27 44 0.070741751 ubox
27 45 0.105103757 ubox
27 46 0.197544213 ubox
27 52 0.812701530 ubox
28 44 0.018534401 ubox
28 45 0.197994077 ubox
28 51 0.831048735 ubox
29 39 0.103050514 ubox
29 42 0.068094066 ubox
29 44 0.223976080 ubox
29 50 0.833022517 ubox
30 38 0.102469934 ubox
30 40 0.023163883 ubox
30 41 0.072461408 ubox
30 43 0.226009772 ubox
30 49 0.832525295 ubox
31 39 0.022130647 ubox
31 42 0.224027527 ubox
31 48 0.587076124 ubox
31 51 0.063254253 ubox
32 39 0.035007989 ubox
32 42 0.006406138 ubox
32 48 0.584643499 ubox
32 50 0.068831185 ubox
33 38 0.035686555 ubox
33 40 0.252576692 ubox
33 41 0.011641275 ubox
33 43 0.004157784 ubox
33 47 0.830805130 ubox
33 49 0.074397556 ubox
34 39 0.252302593 ubox
34 42 0.004184569 ubox
34 45 0.018122101 ubox
34 46 0.828301465 ubox
34 48 0.074869920 ubox
35 44 0.018515207 ubox
35 45 0.825421725 ubox
35 46 0.077215398 ubox
36 44 0.821728819 ubox
36 45 0.098699840 ubox
36 46 0.083331953 ubox
37 44 0.115442016 ubox
37 45 0.088980236 ubox
38 44 0.094621615 ubox
38 48 0.005765679 ubox
39 43 0.106178908 ubox
39 47 0.006885069 ubox
40 46 0.006893045 ubox
41 45 0.006843619 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
showpage
end
%%EOF
