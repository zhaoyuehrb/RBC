%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GGA2)
} def

/sequence { (\
GCAGUCAGCAGAGGAGAGCGCCAGGACGCUACAGCGGCUGAAGAGGCAGUGGCGCCCGCGGCCGCAGCGUCGGGGCUGGAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.486246952 ubox
1 19 0.684546216 ubox
1 82 0.429155245 ubox
2 8 0.486303857 ubox
2 18 0.684969428 ubox
2 20 0.003633168 ubox
2 78 0.059260784 ubox
2 81 0.429204305 ubox
3 77 0.059704532 ubox
4 19 0.020402384 ubox
4 76 0.056610422 ubox
4 82 0.035844784 ubox
5 12 0.115179966 ubox
5 14 0.071722480 ubox
5 15 0.678707952 ubox
5 17 0.055099825 ubox
5 18 0.015796441 ubox
5 75 0.055707028 ubox
5 79 0.378520474 ubox
5 80 0.075420846 ubox
5 81 0.031108924 ubox
6 11 0.120921270 ubox
6 13 0.102046642 ubox
6 14 0.676758209 ubox
6 16 0.060252698 ubox
6 74 0.053005315 ubox
6 78 0.387610784 ubox
6 79 0.078023069 ubox
7 77 0.374309560 ubox
8 19 0.327262494 ubox
8 21 0.009413254 ubox
8 76 0.292901349 ubox
8 82 0.109017110 ubox
9 18 0.327685641 ubox
9 20 0.009807097 ubox
9 75 0.290154059 ubox
9 78 0.019375807 ubox
9 81 0.108992213 ubox
10 77 0.017066740 ubox
11 71 0.006664151 ubox
11 76 0.008302913 ubox
12 70 0.006422386 ubox
12 77 0.004839623 ubox
13 22 0.190720458 ubox
13 71 0.018288904 ubox
13 77 0.010715038 ubox
14 21 0.190589144 ubox
14 70 0.017245505 ubox
14 71 0.017417421 ubox
14 76 0.005152500 ubox
15 70 0.017090889 ubox
15 77 0.009298559 ubox
16 71 0.005175779 ubox
16 76 0.004715003 ubox
17 30 0.010935194 ubox
17 70 0.004583011 ubox
17 77 0.405467821 ubox
18 29 0.011266617 ubox
18 65 0.024369261 ubox
18 68 0.006593199 ubox
18 70 0.004887881 ubox
18 76 0.418308530 ubox
18 82 0.346613628 ubox
19 28 0.011268374 ubox
19 64 0.024395378 ubox
19 67 0.006591994 ubox
19 69 0.006696290 ubox
19 72 0.004268647 ubox
19 75 0.419000866 ubox
19 78 0.061516519 ubox
19 81 0.346426062 ubox
19 83 0.007946483 ubox
20 27 0.011087913 ubox
20 62 0.018033603 ubox
20 63 0.017253836 ubox
20 68 0.006710382 ubox
20 76 0.793597268 ubox
20 77 0.014887652 ubox
20 82 0.014715443 ubox
21 61 0.024958391 ubox
21 67 0.006700245 ubox
21 73 0.386876912 ubox
21 74 0.267440788 ubox
21 75 0.795188241 ubox
21 79 0.320189243 ubox
21 81 0.010901768 ubox
22 60 0.024932352 ubox
22 72 0.384971951 ubox
22 73 0.268107079 ubox
22 74 0.795390898 ubox
22 78 0.320931151 ubox
23 77 0.320711817 ubox
24 56 0.009720427 ubox
24 57 0.023148051 ubox
24 63 0.007665675 ubox
24 71 0.070639212 ubox
24 76 0.320318187 ubox
25 55 0.009804316 ubox
25 56 0.023096511 ubox
25 62 0.007532359 ubox
25 70 0.037125308 ubox
25 71 0.995441986 ubox
26 70 0.998655817 ubox
27 54 0.025351857 ubox
27 60 0.007596310 ubox
27 69 0.999518964 ubox
27 72 0.003298765 ubox
27 83 0.003503813 ubox
28 53 0.025419803 ubox
28 59 0.007700093 ubox
28 68 0.999544189 ubox
28 82 0.003747575 ubox
29 52 0.025420039 ubox
29 58 0.007689163 ubox
29 67 0.999506441 ubox
29 81 0.003747828 ubox
30 51 0.025404133 ubox
30 66 0.985697569 ubox
31 50 0.025331991 ubox
32 49 0.025216654 ubox
32 78 0.003551881 ubox
33 77 0.003503119 ubox
34 47 0.024372671 ubox
34 53 0.012210617 ubox
34 65 0.998996827 ubox
34 76 0.003213436 ubox
35 46 0.024375507 ubox
35 52 0.012220422 ubox
35 64 0.999558560 ubox
35 75 0.003207190 ubox
36 63 0.999565060 ubox
37 47 0.007038957 ubox
37 50 0.012299793 ubox
37 62 0.999582054 ubox
38 45 0.012315572 ubox
38 46 0.007036839 ubox
38 49 0.012351438 ubox
38 61 0.999575376 ubox
39 44 0.012360293 ubox
39 45 0.006960126 ubox
39 48 0.012482519 ubox
39 58 0.004676827 ubox
39 60 0.998601800 ubox
40 47 0.012679944 ubox
40 57 0.010007877 ubox
40 59 0.996411920 ubox
43 71 0.003273289 ubox
44 70 0.003372373 ubox
45 56 0.975627696 ubox
45 57 0.022633765 ubox
46 53 0.209202822 ubox
46 55 0.977145181 ubox
46 56 0.016657099 ubox
46 68 0.003557875 ubox
47 52 0.208970453 ubox
47 54 0.976391312 ubox
47 67 0.003554972 ubox
49 55 0.003792016 ubox
49 59 0.013977381 ubox
49 65 0.003794895 ubox
50 54 0.003618699 ubox
50 58 0.015021528 ubox
50 64 0.003797510 ubox
51 57 0.015121095 ubox
51 63 0.003809451 ubox
52 56 0.014878040 ubox
52 62 0.003809057 ubox
53 61 0.003761612 ubox
55 74 0.009977579 ubox
56 73 0.010106389 ubox
56 74 0.003177072 ubox
57 72 0.010108715 ubox
57 73 0.003173379 ubox
58 71 0.010058922 ubox
59 69 0.004338204 ubox
59 72 0.003538862 ubox
60 68 0.004085065 ubox
60 71 0.003555641 ubox
61 68 0.009249223 ubox
61 70 0.003559285 ubox
62 67 0.009331935 ubox
62 69 0.003522164 ubox
75 82 0.027898679 ubox
76 81 0.027913031 ubox
77 83 0.021385411 ubox
78 82 0.040008698 ubox
1 19 0.9500000 lbox
2 18 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
25 71 0.9500000 lbox
26 70 0.9500000 lbox
27 69 0.9500000 lbox
28 68 0.9500000 lbox
29 67 0.9500000 lbox
30 66 0.9500000 lbox
34 65 0.9500000 lbox
35 64 0.9500000 lbox
36 63 0.9500000 lbox
37 62 0.9500000 lbox
38 61 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
showpage
end
%%EOF
