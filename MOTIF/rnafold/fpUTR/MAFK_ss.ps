%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGGCGGCGGGCGGCGCGGGGGCACUUGUUGUUCUUCGCGAAGUCGGAGCCCGAGCGCCAGGCGGCGGCGGCGGCCGAGGGGAGCGCGACAGUGAGCGCCGGCGCGAGGACAGCGCGUGCCCGCGAGGAGCCGCCGCGCGCCCGCGCCCUCCGCGCGACGCCAGCUACGAGUUCCAGGGAGCUCUGUCCUGGUGACCGUGCCCGGGUU\
) } def
/len { sequence length } bind def

/coor [
[585.38848877 459.13287354]
[573.33209229 450.20852661]
[561.27569580 441.28421021]
[549.21929932 432.35989380]
[537.09716797 423.52511597]
[524.90985107 414.78042603]
[512.65808105 406.12628174]
[500.34252930 397.56314087]
[488.02700806 389.00000000]
[475.71145630 380.43688965]
[463.39590454 371.87374878]
[451.08035278 363.31060791]
[443.79461670 362.07312012]
[438.64703369 354.52819824]
[426.45974731 345.78350830]
[412.94534302 352.04663086]
[398.01116943 350.69531250]
[385.67700195 341.99273682]
[379.31307983 328.19427490]
[380.71948242 312.96374512]
[368.53216553 304.21905518]
[353.68075562 303.08578491]
[346.97897339 288.75408936]
[334.79168701 280.00939941]
[322.60437012 271.26470947]
[310.41705322 262.52001953]
[298.22976685 253.77532959]
[286.04244995 245.03063965]
[271.19104004 243.89735413]
[264.48925781 229.56568909]
[252.30195618 220.82098389]
[240.11465454 212.07629395]
[227.92735291 203.33160400]
[215.74005127 194.58691406]
[203.55274963 185.84222412]
[196.28614807 184.49691772]
[191.25093079 176.87655640]
[179.19454956 167.95222473]
[167.13816833 159.02789307]
[155.08178711 150.10356140]
[143.02540588 141.17924500]
[130.96900940 132.25491333]
[118.91262817 123.33058929]
[103.72241974 132.66343689]
[84.32819366 132.09440613]
[67.10496521 120.11519623]
[58.60810471 99.21801758]
[44.39820862 94.41397095]
[30.18831444 89.60992432]
[15.97841930 84.80587006]
[-1.98914230 88.83840179]
[-13.05280685 75.21585846]
[-27.33232880 70.62290192]
[-41.61185074 66.02995300]
[-50.92883682 73.41294861]
[-62.53401184 75.36213684]
[-73.52555084 71.50740051]
[-81.21141815 62.91540527]
[-83.76863098 51.79755783]
[-97.90577698 46.78347397]
[-112.04292297 41.76938629]
[-126.18006897 36.75529861]
[-142.19895935 40.26629257]
[-153.04759216 27.96834755]
[-147.56581116 12.51253605]
[-131.39280701 9.79847240]
[-121.16598511 22.61815262]
[-107.02883911 27.63223839]
[-92.89169312 32.64632416]
[-78.75453949 37.66041183]
[-62.73088837 28.80725670]
[-45.02111816 34.57773590]
[-37.01889801 51.75042725]
[-22.73937607 56.34338379]
[-8.45985317 60.93633652]
[2.44100428 55.69360352]
[14.37476635 59.40262222]
[20.78246689 70.59597778]
[34.99236298 75.40002441]
[49.20225906 80.20407104]
[63.41215134 85.00811768]
[68.67601776 79.66567230]
[55.26083755 72.95500946]
[57.49756622 58.12270737]
[72.29511261 55.66655731]
[79.20373535 68.98077393]
[84.46759796 63.63832474]
[79.45351410 49.50117493]
[74.43942261 35.36402893]
[69.42533875 21.22688293]
[54.50746155 16.95644951]
[44.97528839 4.71237755]
[44.49412918 -10.79723549]
[53.24900436 -23.60862923]
[67.87348175 -28.79555893]
[82.74415588 -24.36354637]
[92.14294434 -12.01679039]
[92.45582581 3.49712968]
[83.56248474 16.21279526]
[88.57656860 30.34994316]
[93.59066010 44.48709106]
[98.60474396 58.62423706]
[117.24267578 65.51240540]
[129.27799988 79.54383850]
[132.66699219 96.30892181]
[127.83695984 111.27420044]
[139.89334106 120.19853210]
[151.94972229 129.12286377]
[164.00610352 138.04718018]
[176.06250000 146.97151184]
[188.11888123 155.89584351]
[200.17526245 164.82015991]
[212.29743958 173.65492249]
[224.48474121 182.39961243]
[236.67204285 191.14430237]
[248.85934448 199.88899231]
[261.04666138 208.63368225]
[273.23394775 217.37837219]
[288.95709229 219.13714600]
[294.78713989 232.84333801]
[306.97445679 241.58802795]
[319.16177368 250.33271790]
[331.34906006 259.07742310]
[343.53637695 267.82211304]
[355.72366333 276.56680298]
[371.44680786 278.32556152]
[377.27685547 292.03173828]
[389.46417236 300.77642822]
[403.44204712 294.56625366]
[418.55184937 296.17572021]
[430.74627686 305.07302856]
[436.80938721 318.78778076]
[435.20443726 333.59622192]
[447.39172363 342.34091187]
[459.64349365 350.99505615]
[471.95904541 359.55819702]
[484.27459717 368.12133789]
[496.59011841 376.68447876]
[508.90567017 385.24758911]
[521.22125244 393.81072998]
[530.05285645 396.14016724]
[533.65454102 402.59313965]
[545.84185791 411.33782959]
[554.63793945 413.79785156]
[558.14367676 420.30349731]
[570.20001221 429.22781372]
[582.25640869 438.15216064]
[594.31280518 447.07647705]
[606.50012207 455.82116699]
[618.81567383 464.38430786]
[631.13122559 472.94744873]
[643.44677734 481.51058960]
[656.34051514 477.61791992]
[668.93823242 481.80075073]
[676.71160889 492.31951904]
[677.00311279 505.20101929]
[689.19042969 513.94567871]
[701.37774658 522.69036865]
[713.56506348 531.43511963]
[725.75231934 540.17980957]
[744.11425781 541.57061768]
[750.71704102 557.83044434]
[763.03253174 566.39355469]
[775.34808350 574.95672607]
[787.66363525 583.51983643]
[799.97918701 592.08300781]
[812.29473877 600.64611816]
[825.10382080 599.13684082]
[835.18499756 606.52203369]
[837.45666504 618.40283203]
[849.64392090 627.14752197]
[861.89569092 635.80169678]
[874.21124268 644.36480713]
[886.52679443 652.92797852]
[898.84234619 661.49108887]
[911.15789795 670.05426025]
[923.47344971 678.61737061]
[939.85125732 679.45294189]
[947.07464600 694.17553711]
[937.71276855 707.63983154]
[921.39636230 705.99493408]
[914.91027832 690.93292236]
[902.59472656 682.36981201]
[890.27917480 673.80664062]
[877.96368408 665.24353027]
[865.64813232 656.68035889]
[853.33258057 648.11724854]
[846.04681396 646.87976074]
[840.89923096 639.33483887]
[828.71197510 630.59014893]
[811.18029785 629.80242920]
[803.73162842 612.96166992]
[791.41607666 604.39855957]
[779.10052490 595.83538818]
[766.78497314 587.27227783]
[754.46942139 578.70910645]
[742.15386963 570.14599609]
[730.19708252 571.97650146]
[719.86688232 564.94384766]
[717.00762939 552.36706543]
[704.82037354 543.62237549]
[692.63305664 534.87768555]
[680.44573975 526.13299561]
[668.25842285 517.38830566]
[651.79498291 520.82403564]
[637.66247559 511.09777832]
[634.88360596 493.82614136]
[622.56805420 485.26300049]
[610.25250244 476.69985962]
[597.93695068 468.13671875]
[593.16204834 468.08465576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 143]
[6 142]
[7 140]
[8 139]
[9 138]
[10 137]
[11 136]
[12 135]
[14 134]
[15 133]
[20 128]
[21 127]
[23 125]
[24 124]
[25 123]
[26 122]
[27 121]
[28 120]
[30 118]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[37 112]
[38 111]
[39 110]
[40 109]
[41 108]
[42 107]
[43 106]
[47 81]
[48 80]
[49 79]
[50 78]
[52 75]
[53 74]
[54 73]
[59 70]
[60 69]
[61 68]
[62 67]
[87 102]
[88 101]
[89 100]
[90 99]
[149 210]
[150 209]
[151 208]
[152 207]
[156 204]
[157 203]
[158 202]
[159 201]
[160 200]
[162 197]
[163 196]
[164 195]
[165 194]
[166 193]
[167 192]
[170 190]
[171 189]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
