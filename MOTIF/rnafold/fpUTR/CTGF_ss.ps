%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUCACACAACAACUCUUCCCCGCUGAGAGGAGACAGCCAGUGCGACUCCACCCUCCAGCUCGACGGCAGCCGCCCCGGCCGACAGCCCCGAGACGACAGCCCGGCGCGUCCCGGUCCCCACCUCCGACCACCGCCAGCGCUCCAGGCCCCGCCGCUCCCCGCUCGCCGCCACCGCGCCCUCCGCUCCGCCCGCAGUGCCAACC\
) } def
/len { sequence length } bind def

/coor [
[-192.01159668 343.91744995]
[-184.33140564 356.80209351]
[-179.32379150 370.94155884]
[-177.18280029 385.78796387]
[-177.99136353 400.76614380]
[-181.71815491 415.29580688]
[-188.21879578 428.81402588]
[-197.24142456 440.79702759]
[-208.43646240 450.78054810]
[-221.37019348 458.37783813]
[-235.54151917 463.29449463]
[-250.40138245 465.34008789]
[-265.37405396 464.43533325]
[-279.87948608 460.61529541]
[-293.35565186 454.02795410]
[-305.28045654 444.92855835]
[-315.19186401 433.66961670]
[-322.70593262 420.68734741]
[-327.53146362 406.48474121]
[-329.48156738 391.61206055]
[-328.48065186 376.64547729]
[-324.56750488 362.16488647]
[-317.89376831 348.73132324]
[-308.71795654 336.86520386]
[-297.39691162 327.02725220]
[-311.92904663 330.74438477]
[-326.46118164 334.46148682]
[-340.99331665 338.17861938]
[-348.53463745 343.33856201]
[-355.77420044 341.84008789]
[-370.36108398 345.33624268]
[-384.94796753 348.83236694]
[-399.53485107 352.32852173]
[-413.51788330 366.84591675]
[-431.80023193 360.55526733]
[-446.27429199 364.49252319]
[-454.68246460 379.83099365]
[-471.25576782 384.25714111]
[-485.61474609 375.50436401]
[-500.02737427 379.66079712]
[-511.00527954 391.84347534]
[-526.98620605 388.16351318]
[-531.53033447 372.40652466]
[-519.96307373 360.78195190]
[-504.18380737 365.24816895]
[-489.77117920 361.09173584]
[-485.17971802 349.05035400]
[-474.32867432 341.74383545]
[-461.05538940 342.02621460]
[-450.21151733 350.01846313]
[-435.73748779 346.08123779]
[-431.47814941 336.78875732]
[-422.62023926 331.26007080]
[-411.96224976 331.52655029]
[-403.03097534 337.74163818]
[-388.44412231 334.24548340]
[-373.85723877 330.74935913]
[-359.27035522 327.25320435]
[-344.71041870 323.64648438]
[-330.17828369 319.92935181]
[-315.64614868 316.21224976]
[-301.11401367 312.49511719]
[-313.21051025 303.62524414]
[-314.82064819 288.71191406]
[-304.89611816 277.46450806]
[-289.89834595 277.20571899]
[-279.59170532 288.10403442]
[-280.68615723 303.06365967]
[-268.43161011 294.41345215]
[-256.17706299 285.76324463]
[-252.52418518 279.33569336]
[-243.67025757 277.07641602]
[-231.28584290 268.61318970]
[-225.14335632 255.04412842]
[-209.38404846 253.64598083]
[-196.99963379 245.18275452]
[-196.02085876 235.00761414]
[-189.46397400 226.88131714]
[-179.30725098 223.64024353]
[-168.83241272 226.58515930]
[-156.19685364 218.50167847]
[-143.56129456 210.41819763]
[-137.00982666 197.04182434]
[-121.21534729 196.12260437]
[-108.57978821 188.03912354]
[-106.69779205 183.64657593]
[-102.03475189 180.39111328]
[-95.43581390 179.90882874]
[-82.56074524 172.21253967]
[-80.96645355 162.11553955]
[-73.92863464 154.40200806]
[-63.59397507 151.78311157]
[-53.31709671 155.35810852]
[-40.21438980 148.05612183]
[-27.11168480 140.75413513]
[-41.99531937 138.88935852]
[-54.01317978 129.91322327]
[-60.02545166 116.17085266]
[-58.46135712 101.25262451]
[-49.72953033 89.05609894]
[-36.11127472 82.76776886]
[-21.16452217 84.03054047]
[-8.79429817 92.51450348]
[-2.23247814 106.00311279]
[-3.19341707 120.97229767]
[-11.42823601 133.51313782]
[2.62781739 128.27601624]
[16.68387032 123.03890991]
[30.73992348 117.80179596]
[44.79597855 112.56468201]
[58.85203171 107.32756805]
[59.62601089 89.19306946]
[68.01460266 73.09678650]
[82.43569183 62.07449722]
[100.16944885 58.20502472]
[117.87123871 62.21816254]
[126.61418915 50.02960587]
[135.35713196 37.84104919]
[144.10008240 25.65249634]
[138.32028198 11.34874058]
[141.21363831 -3.80487275]
[151.85690308 -14.97288132]
[166.85385132 -18.59161377]
[181.41900635 -13.50634766]
[190.90467834 -1.33977032]
[192.28402710 14.02580643]
[185.11689758 27.68728256]
[171.69032288 35.28533173]
[156.28863525 34.39544296]
[147.54568481 46.58399963]
[138.80274963 58.77255249]
[130.05979919 70.96110535]
[133.47216797 74.97075653]
[136.35334778 79.37760925]
[138.65762329 84.11172485]
[140.34841919 89.09797668]
[155.29618835 87.84734344]
[168.40321350 78.98638916]
[181.73126221 85.63561249]
[196.67904663 84.38497925]
[211.62681580 83.13435364]
[226.57458496 81.88372040]
[232.26414490 66.64184570]
[243.98851013 55.44652176]
[259.36590576 50.50193024]
[275.30279541 52.74947739]
[288.61639404 61.68904877]
[296.67004395 75.48915863]
[311.59710693 74.01182556]
[326.52416992 72.53448486]
[341.69079590 64.95756531]
[353.17016602 77.43396759]
[344.35913086 91.91851807]
[328.00152588 87.46155548]
[313.07446289 88.93889618]
[298.14736938 90.41622925]
[294.03430176 103.66750336]
[285.15280151 114.38368225]
[272.81866455 120.92544556]
[258.87902832 122.27573395]
[245.43574524 118.19777679]
[234.52845764 109.27577209]
[227.82522583 96.83148956]
[212.87744141 98.08212280]
[197.92967224 99.33275604]
[182.98190308 100.58338165]
[170.94404602 109.35488892]
[156.54681396 102.79512024]
[141.59904480 104.04575348]
[137.53990173 118.37401581]
[128.71478271 130.36955261]
[116.24409485 138.50944519]
[101.71110535 141.76028442]
[86.96086884 139.70932007]
[73.86605835 132.61695862]
[64.08914185 121.38362122]
[50.03309250 126.62073517]
[35.97703934 131.85784912]
[21.92098427 137.09495544]
[7.86493206 142.33207703]
[-6.19112110 147.56919861]
[-19.80969238 153.85684204]
[-32.91239929 161.15882874]
[-46.01510620 168.46081543]
[-55.56287003 186.21244812]
[-74.86446381 185.08761597]
[-87.73953247 192.78388977]
[-100.49630737 200.67468262]
[-113.13186646 208.75816345]
[-120.58711243 222.71272278]
[-135.47781372 223.05375671]
[-148.11337280 231.13723755]
[-160.74893188 239.22071838]
[-169.20211792 257.51889038]
[-188.53640747 257.56716919]
[-200.92082214 266.03039551]
[-207.94911194 280.20480347]
[-222.82260132 280.99758911]
[-235.20701599 289.46081543]
[-247.52685547 298.01779175]
[-259.78140259 306.66799927]
[-272.03594971 315.31820679]
[-257.20358276 313.08187866]
[-242.22052002 313.79421997]
[-227.66722107 317.42761230]
[-214.10754395 323.84127808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 62]
[26 61]
[27 60]
[28 59]
[30 58]
[31 57]
[32 56]
[33 55]
[35 51]
[36 50]
[39 46]
[40 45]
[68 202]
[69 201]
[70 200]
[72 199]
[73 198]
[75 196]
[76 195]
[80 193]
[81 192]
[82 191]
[84 189]
[85 188]
[88 187]
[89 186]
[93 184]
[94 183]
[95 182]
[106 181]
[107 180]
[108 179]
[109 178]
[110 177]
[111 176]
[116 132]
[117 131]
[118 130]
[119 129]
[136 169]
[137 168]
[139 166]
[140 165]
[141 164]
[142 163]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
