%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C10orf25)
} def

/sequence { (\
GCGCUCUGGCGCCGCCGCGGUCGCUCUAGGAAAGUGGCGGAGCGACCCUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.134339592 ubox
1 12 0.783801072 ubox
1 15 0.082102452 ubox
1 18 0.119521626 ubox
1 24 0.004676061 ubox
1 43 0.022410402 ubox
2 8 0.052264426 ubox
2 9 0.134495478 ubox
2 11 0.794930498 ubox
2 14 0.082277739 ubox
2 17 0.119229502 ubox
2 19 0.044805573 ubox
2 23 0.004683888 ubox
2 42 0.021745346 ubox
2 44 0.316207965 ubox
3 7 0.032639532 ubox
3 10 0.795805307 ubox
3 12 0.061237509 ubox
3 13 0.059472837 ubox
3 15 0.052617398 ubox
3 16 0.081316545 ubox
3 18 0.118160622 ubox
3 22 0.004593716 ubox
3 43 0.320700201 ubox
4 9 0.793246592 ubox
4 11 0.083486819 ubox
4 14 0.074059680 ubox
4 17 0.117183498 ubox
4 20 0.004976545 ubox
4 42 0.320667919 ubox
5 19 0.005183027 ubox
5 41 0.319503449 ubox
5 45 0.090670195 ubox
6 19 0.005046112 ubox
6 40 0.248117392 ubox
6 42 0.003209265 ubox
6 44 0.097226743 ubox
7 14 0.041862892 ubox
7 17 0.101366243 ubox
7 39 0.195541972 ubox
7 41 0.005824604 ubox
7 44 0.032245970 ubox
8 13 0.045783930 ubox
8 16 0.192521437 ubox
8 18 0.003536199 ubox
8 25 0.013877882 ubox
8 38 0.175137390 ubox
8 43 0.032029405 ubox
8 47 0.135566983 ubox
8 48 0.036360913 ubox
8 49 0.004296525 ubox
8 50 0.008937322 ubox
9 15 0.195266451 ubox
9 18 0.077749204 ubox
9 24 0.029720037 ubox
9 38 0.007130553 ubox
9 43 0.405496743 ubox
9 46 0.135454793 ubox
9 47 0.031844294 ubox
9 48 0.003687502 ubox
10 14 0.193850106 ubox
10 17 0.077883933 ubox
10 19 0.021142207 ubox
10 23 0.029774902 ubox
10 36 0.171014120 ubox
10 37 0.009153406 ubox
10 39 0.042417515 ubox
10 42 0.406807315 ubox
10 44 0.138065888 ubox
11 16 0.074238684 ubox
11 18 0.077644531 ubox
11 21 0.015093378 ubox
11 22 0.029175663 ubox
11 35 0.170442879 ubox
11 38 0.047762684 ubox
11 43 0.138096428 ubox
12 17 0.077601056 ubox
12 20 0.033358468 ubox
12 30 0.014436688 ubox
12 34 0.168501762 ubox
12 37 0.048170071 ubox
12 40 0.490606949 ubox
12 42 0.102342886 ubox
13 19 0.036847432 ubox
13 23 0.007656863 ubox
13 29 0.018054688 ubox
13 36 0.048119619 ubox
13 39 0.562014768 ubox
13 44 0.027914329 ubox
14 18 0.047002908 ubox
14 21 0.004963318 ubox
14 22 0.007520758 ubox
14 24 0.005878875 ubox
14 35 0.047510025 ubox
14 38 0.571811353 ubox
14 43 0.028199045 ubox
15 20 0.008917993 ubox
15 23 0.005661398 ubox
15 30 0.167783652 ubox
15 34 0.046674301 ubox
15 37 0.572282316 ubox
15 40 0.003920216 ubox
15 42 0.028141390 ubox
16 23 0.004746649 ubox
16 29 0.168170730 ubox
16 36 0.572275468 ubox
16 39 0.004319450 ubox
16 44 0.011156570 ubox
17 22 0.004833537 ubox
17 24 0.078350187 ubox
17 35 0.572077645 ubox
17 38 0.004415668 ubox
17 43 0.011276435 ubox
18 23 0.078285452 ubox
18 34 0.572128514 ubox
18 37 0.004383526 ubox
18 39 0.026427226 ubox
18 42 0.011266623 ubox
19 25 0.029085038 ubox
19 26 0.074557419 ubox
19 27 0.105623961 ubox
19 38 0.019253885 ubox
19 47 0.792736151 ubox
19 48 0.065649567 ubox
19 50 0.005396690 ubox
20 24 0.031096650 ubox
20 25 0.054976055 ubox
20 26 0.108737553 ubox
20 38 0.039908755 ubox
20 46 0.797115103 ubox
20 47 0.046599880 ubox
21 30 0.105480547 ubox
21 31 0.556593321 ubox
21 37 0.044496858 ubox
21 40 0.008668295 ubox
21 45 0.798399309 ubox
22 29 0.120948678 ubox
22 30 0.557688667 ubox
22 36 0.046777858 ubox
22 39 0.010170507 ubox
22 44 0.798494638 ubox
23 35 0.047147596 ubox
23 38 0.010434935 ubox
23 43 0.798504304 ubox
24 30 0.028876915 ubox
24 34 0.047182197 ubox
24 37 0.010447510 ubox
24 42 0.798509642 ubox
25 29 0.026726709 ubox
25 31 0.011051809 ubox
25 33 0.045418879 ubox
25 36 0.009557581 ubox
25 37 0.004793311 ubox
25 40 0.008411431 ubox
25 41 0.798264769 ubox
26 30 0.012250948 ubox
26 34 0.012029447 ubox
26 36 0.007597566 ubox
26 37 0.066659976 ubox
26 39 0.017017646 ubox
26 40 0.795626878 ubox
27 33 0.013469486 ubox
27 36 0.103994248 ubox
27 39 0.764199896 ubox
28 35 0.163365712 ubox
29 51 0.003243410 ubox
30 50 0.003730748 ubox
31 49 0.003705425 ubox
34 46 0.004845621 ubox
35 45 0.004839204 ubox
37 43 0.004863210 ubox
38 42 0.004828673 ubox
39 47 0.013848188 ubox
39 48 0.031146386 ubox
39 50 0.003647562 ubox
39 51 0.050933346 ubox
40 46 0.015150595 ubox
40 47 0.032931475 ubox
40 48 0.007208659 ubox
40 49 0.003882293 ubox
40 50 0.180625819 ubox
41 49 0.181790966 ubox
41 51 0.011204113 ubox
42 48 0.180647566 ubox
42 50 0.012121813 ubox
44 50 0.090632331 ubox
45 49 0.079030414 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
showpage
end
%%EOF
