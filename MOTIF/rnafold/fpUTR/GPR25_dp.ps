%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPR25)
} def

/sequence { (\
CGUGAAGAGCAAACCCCCUCCUGCUCAGAGCUGCUGCCGCCUGCGCCCAGGGCUGCACUCCGCGCAGGCCUCAUAGCCAGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.045498892 ubox
1 36 0.008961934 ubox
1 64 0.084059961 ubox
2 10 0.035620835 ubox
2 14 0.018766205 ubox
2 24 0.019555652 ubox
2 31 0.342801802 ubox
2 32 0.011615626 ubox
2 34 0.033034993 ubox
2 37 0.011779683 ubox
2 38 0.013372137 ubox
2 40 0.004363628 ubox
2 61 0.003229086 ubox
2 63 0.090416765 ubox
2 65 0.023562925 ubox
2 74 0.059251705 ubox
2 77 0.005810183 ubox
2 82 0.066673600 ubox
3 9 0.035393339 ubox
3 11 0.013505362 ubox
3 13 0.018623290 ubox
3 23 0.019325506 ubox
3 27 0.032361264 ubox
3 30 0.342659260 ubox
3 33 0.032655810 ubox
3 36 0.011619151 ubox
3 39 0.004548170 ubox
3 62 0.090363708 ubox
3 64 0.023560447 ubox
3 73 0.061429107 ubox
3 76 0.005272373 ubox
3 79 0.057569915 ubox
3 81 0.064290513 ubox
4 10 0.015077684 ubox
4 20 0.003455618 ubox
4 22 0.013606531 ubox
4 26 0.030401837 ubox
4 32 0.023157687 ubox
4 35 0.006249426 ubox
4 38 0.020296526 ubox
4 60 0.003951514 ubox
4 61 0.089652677 ubox
4 63 0.023391253 ubox
4 72 0.062154199 ubox
4 78 0.064565719 ubox
5 25 0.025906745 ubox
5 59 0.003895650 ubox
5 71 0.059076488 ubox
6 19 0.007796753 ubox
6 22 0.013545359 ubox
6 25 0.003318696 ubox
6 32 0.005618618 ubox
6 35 0.006374602 ubox
6 59 0.051296105 ubox
6 71 0.003682944 ubox
7 18 0.008385669 ubox
7 20 0.050828245 ubox
7 21 0.010316812 ubox
7 24 0.003936517 ubox
7 26 0.991591117 ubox
7 31 0.003579833 ubox
7 34 0.006370381 ubox
7 58 0.052332882 ubox
7 60 0.013202917 ubox
7 70 0.003418666 ubox
8 19 0.052481666 ubox
8 22 0.011012627 ubox
8 25 0.992955189 ubox
8 32 0.007722750 ubox
8 35 0.020955196 ubox
8 59 0.013130480 ubox
9 18 0.052464663 ubox
9 21 0.010940853 ubox
9 24 0.993442043 ubox
9 31 0.007792235 ubox
9 34 0.021505369 ubox
9 37 0.009003118 ubox
9 56 0.053371087 ubox
9 58 0.012012817 ubox
9 82 0.003879085 ubox
10 23 0.993363202 ubox
10 30 0.007747249 ubox
10 33 0.021506407 ubox
10 36 0.009023422 ubox
10 55 0.053501867 ubox
10 81 0.003455652 ubox
11 22 0.938094713 ubox
11 32 0.020998759 ubox
11 35 0.008744617 ubox
11 54 0.051708916 ubox
14 51 0.005680264 ubox
14 52 0.013139985 ubox
15 50 0.005613549 ubox
15 51 0.013057749 ubox
15 52 0.025122805 ubox
16 50 0.012943373 ubox
16 51 0.024216121 ubox
16 52 0.046258659 ubox
17 50 0.023216259 ubox
17 51 0.046857254 ubox
17 81 0.014778613 ubox
18 30 0.014486306 ubox
18 50 0.047358309 ubox
18 80 0.014919958 ubox
19 29 0.014802984 ubox
19 49 0.045924187 ubox
19 79 0.014708320 ubox
20 28 0.014505042 ubox
20 68 0.003510424 ubox
20 81 0.073429799 ubox
21 28 0.006995718 ubox
21 30 0.004258331 ubox
21 67 0.008609457 ubox
21 80 0.076235103 ubox
22 27 0.007138866 ubox
22 29 0.004502227 ubox
22 45 0.003983329 ubox
22 66 0.009896590 ubox
22 79 0.076140743 ubox
23 31 0.019474629 ubox
23 34 0.012049108 ubox
23 37 0.005065690 ubox
23 44 0.004433905 ubox
23 46 0.054450332 ubox
23 65 0.010108554 ubox
23 77 0.039427444 ubox
23 78 0.066975798 ubox
23 82 0.040619897 ubox
24 30 0.019517691 ubox
24 33 0.012068954 ubox
24 36 0.005049292 ubox
24 43 0.004297659 ubox
24 45 0.054534438 ubox
24 64 0.010096490 ubox
24 76 0.053473666 ubox
24 81 0.040708233 ubox
25 29 0.017595513 ubox
25 75 0.052880297 ubox
25 80 0.037360130 ubox
25 81 0.004167683 ubox
26 33 0.003993237 ubox
26 36 0.014172497 ubox
26 43 0.054582130 ubox
26 80 0.014764817 ubox
27 32 0.005428250 ubox
27 35 0.037748622 ubox
27 42 0.054646570 ubox
27 71 0.006235047 ubox
28 34 0.039308724 ubox
28 41 0.054644992 ubox
28 60 0.078978711 ubox
28 70 0.006455453 ubox
28 72 0.054779671 ubox
29 35 0.021938753 ubox
29 59 0.079183739 ubox
29 71 0.054588774 ubox
30 34 0.022034922 ubox
30 37 0.357660537 ubox
30 40 0.047675068 ubox
30 58 0.079176873 ubox
30 63 0.003461414 ubox
30 65 0.008200479 ubox
30 69 0.003198252 ubox
30 70 0.052274331 ubox
30 77 0.511854227 ubox
30 82 0.611795411 ubox
31 36 0.358375050 ubox
31 39 0.047581759 ubox
31 62 0.003456111 ubox
31 64 0.008049925 ubox
31 67 0.007023066 ubox
31 68 0.003850122 ubox
31 76 0.513052360 ubox
31 80 0.278822476 ubox
31 81 0.599602839 ubox
32 39 0.003197428 ubox
32 57 0.078278736 ubox
32 64 0.003615827 ubox
32 66 0.010351434 ubox
32 73 0.003928106 ubox
32 75 0.512406593 ubox
32 79 0.309104352 ubox
32 80 0.542788881 ubox
33 38 0.025146405 ubox
33 40 0.006978290 ubox
33 56 0.078725666 ubox
33 61 0.003249296 ubox
33 63 0.008951851 ubox
33 65 0.010835595 ubox
33 69 0.003285874 ubox
33 72 0.005005431 ubox
33 74 0.505266085 ubox
33 77 0.639099258 ubox
33 78 0.226213565 ubox
33 82 0.035912175 ubox
34 39 0.007216576 ubox
34 55 0.078542716 ubox
34 62 0.008952893 ubox
34 64 0.010662131 ubox
34 67 0.009534974 ubox
34 76 0.678656531 ubox
34 80 0.020913657 ubox
34 81 0.035237409 ubox
35 57 0.015918619 ubox
35 66 0.010954560 ubox
35 73 0.520387732 ubox
35 75 0.658531560 ubox
35 79 0.022636977 ubox
35 80 0.031800254 ubox
36 53 0.077824653 ubox
36 56 0.016305756 ubox
36 63 0.009150295 ubox
36 65 0.011202894 ubox
36 72 0.544631689 ubox
36 74 0.607744089 ubox
36 77 0.049450002 ubox
36 78 0.018844035 ubox
36 82 0.076122837 ubox
37 52 0.077844907 ubox
37 55 0.016296066 ubox
37 62 0.008874902 ubox
37 64 0.010489487 ubox
37 76 0.051226943 ubox
37 81 0.076362305 ubox
38 51 0.059593343 ubox
38 62 0.010015886 ubox
38 64 0.004273575 ubox
38 80 0.076293829 ubox
39 46 0.018750912 ubox
39 53 0.017160575 ubox
39 61 0.010173253 ubox
39 63 0.005830698 ubox
39 69 0.861358123 ubox
39 82 0.495554173 ubox
40 45 0.018709400 ubox
40 51 0.051065605 ubox
40 52 0.016586972 ubox
40 62 0.005822285 ubox
40 68 0.862276278 ubox
40 81 0.496564327 ubox
41 50 0.071642054 ubox
41 51 0.015972169 ubox
41 67 0.862300575 ubox
41 80 0.496581251 ubox
42 49 0.072105385 ubox
42 50 0.015187587 ubox
42 57 0.014139420 ubox
42 66 0.862115859 ubox
42 79 0.496216946 ubox
43 48 0.071369599 ubox
43 56 0.014737745 ubox
43 65 0.862324560 ubox
43 77 0.142334331 ubox
43 78 0.475683731 ubox
44 55 0.014733046 ubox
44 64 0.862316611 ubox
44 76 0.200436442 ubox
45 53 0.022179580 ubox
45 63 0.862125849 ubox
45 77 0.452315100 ubox
46 52 0.022469051 ubox
46 62 0.861463886 ubox
46 76 0.451800911 ubox
47 51 0.022371194 ubox
48 55 0.011115754 ubox
49 54 0.010047209 ubox
49 59 0.386607029 ubox
49 71 0.465938657 ubox
50 58 0.394141014 ubox
50 59 0.257261670 ubox
50 60 0.498985618 ubox
50 61 0.505340988 ubox
50 70 0.480915653 ubox
50 71 0.112636681 ubox
50 72 0.042865867 ubox
51 58 0.278682714 ubox
51 59 0.495008227 ubox
51 60 0.505534506 ubox
51 61 0.065078870 ubox
51 69 0.480905722 ubox
51 70 0.123523697 ubox
51 71 0.008911733 ubox
52 58 0.508860665 ubox
52 59 0.385745703 ubox
52 60 0.064834277 ubox
52 69 0.123615073 ubox
52 70 0.008040543 ubox
53 67 0.487405021 ubox
53 68 0.094895757 ubox
54 64 0.012237337 ubox
54 66 0.493794226 ubox
54 67 0.049882190 ubox
55 63 0.030105882 ubox
55 65 0.495965521 ubox
56 62 0.030395552 ubox
56 64 0.495699839 ubox
62 82 0.005318082 ubox
63 81 0.005325746 ubox
64 82 0.019090789 ubox
65 81 0.019343702 ubox
67 78 0.023245692 ubox
67 83 0.093812008 ubox
68 77 0.023290555 ubox
68 82 0.095595070 ubox
69 76 0.023175721 ubox
69 81 0.095681295 ubox
70 76 0.013717008 ubox
70 80 0.095831133 ubox
70 81 0.004320116 ubox
71 75 0.012697339 ubox
71 79 0.092464238 ubox
71 80 0.004246654 ubox
71 81 0.003250727 ubox
72 80 0.004587930 ubox
76 82 0.031510949 ubox
77 81 0.031375850 ubox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
39 82 0.9500000 lbox
40 81 0.9500000 lbox
41 80 0.9500000 lbox
42 79 0.9500000 lbox
43 78 0.9500000 lbox
45 77 0.9500000 lbox
46 76 0.9500000 lbox
49 71 0.9500000 lbox
50 70 0.9500000 lbox
51 69 0.9500000 lbox
53 67 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
56 64 0.9500000 lbox
showpage
end
%%EOF
