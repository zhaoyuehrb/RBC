%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUGUCAGUGAGGGAGGGACAGUCCAGGCAGUUCUGUGCGUGUUCACUGUUUAGUAGUACUCAAAACUGCCAGUGUGAGAGGAUUUGGAAAUCACUGGAUCUGCUCAAUACAAAA\
) } def
/len { sequence length } bind def

/coor [
[88.46300507 136.65051270]
[80.17953491 133.63592529]
[72.67754364 128.74607849]
[64.38554382 141.24577332]
[56.09354401 153.74548340]
[54.91240692 169.52253723]
[41.42916870 175.85118103]
[33.13716888 188.35089111]
[34.89725113 204.29710388]
[23.42620087 215.51290894]
[7.52362442 213.39451599]
[-0.61138296 199.56697083]
[5.26166105 184.63757324]
[20.63746071 180.05888367]
[28.92946053 167.55917358]
[29.51749802 152.67617798]
[43.59383392 145.45349121]
[51.88583374 132.95378113]
[60.17783737 120.45407104]
[55.65666962 106.15165710]
[41.68662643 100.68924713]
[27.71658516 95.22683716]
[13.74654198 89.76442719]
[-0.22350033 84.30202484]
[-14.19354343 78.83961487]
[-33.85689926 82.87474823]
[-45.47367477 67.51199341]
[-59.71463776 62.80083847]
[-75.24659729 65.81230164]
[-84.89973450 54.46918869]
[-99.14069366 49.75803757]
[-113.38166046 45.04688644]
[-127.38701630 52.36982727]
[-142.44322205 47.56497955]
[-149.61767578 33.48298264]
[-144.65391541 18.47842789]
[-130.49684143 11.45325470]
[-115.54560852 16.57537270]
[-108.67050934 30.80592155]
[-94.42954254 35.51707077]
[-80.18858337 40.22822189]
[-65.67523193 36.87978745]
[-55.00349045 48.55987549]
[-40.76252365 53.27102661]
[-31.93880081 47.81423569]
[-21.34965134 48.19248581]
[-12.57888126 54.52361298]
[-8.73113441 64.86956787]
[5.23890829 70.33197784]
[19.20895004 75.79438782]
[33.17899323 81.25679779]
[47.14903641 86.71920776]
[61.11907959 92.18161011]
[70.25423431 76.33427429]
[85.00209045 66.87307739]
[101.68246460 65.32460785]
[105.62899780 50.85308456]
[109.57553864 36.38156891]
[113.52207947 21.91004944]
[117.46861267 7.43853188]
[108.40811920 -5.30672026]
[109.71139526 -20.88990021]
[120.76306915 -31.95310593]
[136.34487915 -33.27263260]
[149.09957886 -24.22543716]
[153.00477600 -9.08332920]
[146.21656799 5.00404930]
[131.94013977 11.38507080]
[127.99359894 25.85658836]
[124.04705811 40.32810593]
[120.10051727 54.79962540]
[116.15398407 69.27114105]
[126.56355286 77.64845276]
[133.03804016 89.33689117]
[134.61831665 102.60494232]
[148.97964478 106.93532562]
[163.34097290 111.26570129]
[177.70231628 115.59608459]
[192.12001038 119.73490906]
[206.59153748 123.68144226]
[221.06304932 127.62798309]
[236.41271973 123.79414368]
[246.65586853 134.60742188]
[261.12738037 138.55395508]
[275.59890747 142.50050354]
[290.07043457 146.44703674]
[304.54196167 150.39356995]
[319.01345825 154.34011841]
[333.48498535 158.28665161]
[347.95651245 162.23318481]
[361.55227661 154.17523193]
[376.84283447 158.17195129]
[384.75662231 171.85214233]
[380.59844971 187.09960938]
[366.83535767 194.86830139]
[351.63269043 190.54917908]
[344.00994873 176.70471191]
[329.53845215 172.75816345]
[315.06692505 168.81163025]
[300.59539795 164.86509705]
[286.12390137 160.91854858]
[271.65237427 156.97201538]
[257.18084717 153.02548218]
[242.70933533 149.07893372]
[228.39477539 153.19506836]
[217.11651611 142.09950256]
[202.64498901 138.15296936]
[188.17347717 134.20642090]
[180.79817200 135.49888611]
[173.37193298 129.95741272]
[159.01060486 125.62702942]
[144.64927673 121.29665375]
[130.28793335 116.96627045]
[126.13739014 123.77673340]
[120.45203400 129.56782532]
[113.48324585 133.99343872]
[105.56036377 136.76965332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[7 15]
[8 14]
[20 53]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[27 44]
[28 43]
[30 41]
[31 40]
[32 39]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[75 113]
[76 112]
[77 111]
[78 110]
[79 108]
[80 107]
[81 106]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
