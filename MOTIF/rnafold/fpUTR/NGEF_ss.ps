%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUUUCCAGGACAGGACGAAGUUUUUGGCUGUGGGCUCUCUGGGACAGAGUGGAGCGCCUGUGGAUUUAGCCGGGGACACACCAUCCUGCUCGCAGGUGCCUGGACAGGACAGGGGACGAGGGAGGAACACUCUCUGAGGAAGCCCAACUCCUAUGAGCUCCUCUCUGGCAGCACUCAAACCAGUGAAGCUUGGGAAAGUCAUUGACCUCCAGUCGUUCUGCUGAGAAACAUCUGGCUCUAUUUCC\
) } def
/len { sequence length } bind def

/coor [
[139.54624939 417.14004517]
[138.03479004 402.21636963]
[136.52334595 387.29272461]
[135.01188660 372.36904907]
[133.03054810 357.50048828]
[130.58128357 342.70181274]
[128.13201904 327.90313721]
[125.68274689 313.10443115]
[113.46050262 304.66925049]
[110.76578522 289.69616699]
[119.69625854 276.93356323]
[117.24699402 262.13485718]
[113.06456757 256.06417847]
[114.86140442 247.13412476]
[112.59904480 232.30570984]
[110.33667755 217.47731018]
[108.07431030 202.64889526]
[105.81195068 187.82049561]
[103.54958344 172.99208069]
[101.28721619 158.16366577]
[99.02485657 143.33526611]
[76.46079254 136.39782715]
[60.87826157 118.66509247]
[46.42676163 122.68430328]
[31.97525787 126.70351410]
[17.52375603 130.72273254]
[3.07225275 134.74194336]
[-11.37924957 138.76115417]
[-25.83075333 142.78036499]
[-40.28225327 146.79957581]
[-54.73375702 150.81878662]
[-69.18525696 154.83799744]
[-83.63676453 158.85722351]
[-97.92581940 163.42041016]
[-112.03196716 168.52107239]
[-126.13811493 173.62171936]
[-140.24426270 178.72236633]
[-154.35040283 183.82301331]
[-164.69720459 195.79191589]
[-179.29707336 192.84350586]
[-193.40321350 197.94415283]
[-207.50936890 203.04479980]
[-221.61550903 208.14546204]
[-235.72166443 213.24610901]
[-239.90057373 228.18988037]
[-252.08598328 237.79693604]
[-267.59234619 238.37315369]
[-280.45718384 229.69697571]
[-285.73364258 215.10456848]
[-281.39288330 200.20700073]
[-269.10397339 190.73271179]
[-253.59225464 190.32473755]
[-240.82231140 199.13995361]
[-226.71615601 194.03930664]
[-212.61001587 188.93865967]
[-198.50387573 183.83801270]
[-184.39772034 178.73735046]
[-175.05989075 167.13330078]
[-159.45106506 169.71687317]
[-145.34490967 164.61622620]
[-131.23876953 159.51557922]
[-117.13262177 154.41491699]
[-103.02647400 149.31427002]
[-116.19242859 142.12693787]
[-120.53209686 127.76841736]
[-113.55107117 114.49192810]
[-99.26200104 109.92874908]
[-85.87820435 116.70178223]
[-81.09263611 130.91790771]
[-87.65597534 144.40571594]
[-73.20447540 140.38650513]
[-58.75297165 136.36729431]
[-44.30146790 132.34806824]
[-29.84996605 128.32885742]
[-15.39846230 124.30964661]
[-0.94696003 120.29043579]
[13.50454235 116.27122498]
[27.95604515 112.25201416]
[42.40754700 108.23279572]
[56.85905075 104.21358490]
[56.97409058 94.74007416]
[59.14460754 85.51784515]
[63.26691818 76.98747253]
[69.14408112 69.55648041]
[60.45023346 57.33285141]
[43.52497101 50.05010223]
[42.57724762 32.51617813]
[33.72987747 20.40321159]
[24.88250542 8.29024315]
[16.03513145 -3.82272530]
[7.18775988 -15.93569374]
[-0.38135615 -21.00353813]
[-1.69368207 -28.25776100]
[-10.38752651 -40.48138809]
[-17.89210129 -45.64432526]
[-19.11280060 -52.91452789]
[-27.65173340 -65.24686432]
[-36.19066620 -77.57920837]
[-51.23987961 -84.09482574]
[-52.85274506 -100.41446686]
[-39.37008667 -109.74988556]
[-24.66170692 -102.49759674]
[-23.85832787 -86.11814117]
[-15.31939411 -73.78580475]
[-6.78046036 -61.45346069]
[1.83610010 -49.17523193]
[10.52994537 -36.95160675]
[19.30072784 -24.78306580]
[28.14809990 -12.67009735]
[36.99547195 -0.55712938]
[45.84284592 11.55583858]
[54.69021606 23.66880798]
[66.57575989 25.83309555]
[74.04815674 35.83058929]
[72.67385864 48.63900757]
[81.36770630 60.86263275]
[88.67192078 56.29067612]
[97.05030060 53.13214493]
[106.21952057 51.63045883]
[115.84278107 51.97052002]
[125.54215240 54.26724625]
[134.91334534 58.55680847]
[142.49514771 45.61399841]
[150.07695007 32.67118835]
[157.65873718 19.72838020]
[165.24053955 6.78556967]
[172.82234192 -6.15723991]
[180.40414429 -19.10004997]
[187.98593140 -32.04285812]
[184.44079590 -39.53951645]
[184.13534546 -47.73273468]
[187.04521179 -55.29756927]
[192.63198853 -61.03963470]
[199.94120789 -64.08362579]
[207.76483154 -64.00630188]
[215.98988342 -76.55016327]
[224.21495056 -89.09402466]
[221.20899963 -104.37806702]
[229.72906494 -116.98215485]
[244.31860352 -119.75367737]
[252.54365540 -132.29753113]
[260.76870728 -144.84140015]
[268.99377441 -157.38525391]
[263.37124634 -171.84785461]
[267.35598755 -186.84457397]
[279.41577148 -196.60885620]
[294.91336060 -197.38615417]
[307.88961792 -188.87756348]
[313.35491943 -174.35481262]
[309.20773315 -159.40220642]
[297.04275513 -149.76931763]
[281.53762817 -149.16020203]
[273.31256104 -136.61633301]
[265.08752441 -124.07247925]
[256.86245728 -111.52861786]
[260.13684082 -97.04366302]
[251.97416687 -84.20523071]
[236.75880432 -80.86896515]
[228.53375244 -68.32510376]
[220.30868530 -55.78124619]
[221.14895630 -34.14638901]
[200.92874146 -24.46106148]
[193.34695435 -11.51825047]
[185.76515198 1.42455888]
[178.18334961 14.36736870]
[170.60154724 27.31017876]
[163.01974487 40.25298691]
[155.43795776 53.19579697]
[147.85615540 66.13861084]
[156.16018677 78.63033295]
[171.02874756 76.64898682]
[185.89730835 74.66764069]
[195.49383545 62.39797974]
[210.60089111 60.60042191]
[222.23899841 69.82484436]
[237.10757446 67.84350586]
[251.97613525 65.86215973]
[266.84469604 63.88081360]
[276.24566650 51.17658615]
[291.88851929 48.92349243]
[304.49264526 58.45825195]
[306.58023071 74.12406158]
[296.91275024 86.62667084]
[281.22573853 88.54850769]
[268.82604980 78.74938202]
[253.95748901 80.73072815]
[239.08891296 82.71206665]
[224.22035217 84.69341278]
[215.40390015 96.64355469]
[200.35328674 98.86473083]
[187.87866211 89.53620911]
[173.01008606 91.51755524]
[158.14152527 93.49890137]
[155.87916565 108.32730865]
[169.48043823 114.65228271]
[183.08171082 120.97726440]
[196.68298340 127.30223846]
[206.63768005 122.99720001]
[217.10491943 124.82974243]
[224.68533325 131.96044922]
[227.05160522 141.86979675]
[240.48896790 148.53591919]
[253.92633057 155.20205688]
[270.80245972 156.82466125]
[273.91503906 173.49044800]
[258.76220703 181.09494019]
[247.26019287 168.63941956]
[233.82283020 161.97328186]
[220.38546753 155.30714417]
[201.21095276 157.91014099]
[190.35800171 140.90351868]
[176.75672913 134.57853699]
[163.15545654 128.25355530]
[149.55418396 121.92858124]
[132.87423706 136.02192688]
[113.85326385 141.07289124]
[116.11563110 155.90130615]
[118.37799072 170.72972107]
[120.64035797 185.55812073]
[122.90272522 200.38653564]
[125.16508484 215.21493530]
[127.42745209 230.04335022]
[129.68981934 244.87176514]
[132.04568481 259.68560791]
[134.49494934 274.48428345]
[147.06114197 283.68908691]
[149.33424377 298.73193359]
[140.48143005 310.65518188]
[142.93069458 325.45385742]
[145.37997437 340.25253296]
[147.82923889 355.05123901]
[158.44999695 344.45880127]
[173.36755371 346.02920532]
[181.54977417 358.60104370]
[176.94552612 372.87695312]
[162.95986938 378.29925537]
[149.93554688 370.85760498]
[151.44700623 385.78128052]
[152.95845032 400.70492554]
[154.46990967 415.62857056]
[168.26889038 422.52722168]
[176.12800598 435.80270386]
[175.53939819 451.21884155]
[166.69093323 463.85638428]
[152.40608215 469.68280029]
[137.24311829 466.83883667]
[126.04048157 456.23202515]
[122.37288666 441.24694824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 240]
[2 239]
[3 238]
[4 237]
[5 231]
[6 230]
[7 229]
[8 228]
[11 225]
[12 224]
[14 223]
[15 222]
[16 221]
[17 220]
[18 219]
[19 218]
[20 217]
[21 216]
[23 80]
[24 79]
[25 78]
[26 77]
[27 76]
[28 75]
[29 74]
[30 73]
[31 72]
[32 71]
[33 70]
[34 63]
[35 62]
[36 61]
[37 60]
[38 59]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[84 116]
[85 115]
[87 112]
[88 111]
[89 110]
[90 109]
[91 108]
[93 107]
[94 106]
[96 105]
[97 104]
[98 103]
[122 169]
[123 168]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[129 162]
[135 160]
[136 159]
[137 158]
[140 155]
[141 154]
[142 153]
[143 152]
[170 193]
[171 192]
[172 191]
[175 188]
[176 187]
[177 186]
[178 185]
[194 214]
[195 213]
[196 212]
[197 211]
[201 209]
[202 208]
[203 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
