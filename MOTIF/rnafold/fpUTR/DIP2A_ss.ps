%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCGCUCGUGCCCGCGCGGGUGCGUUGCUGUCCUGGCCGCGCCCCUGUCCCGCCGCCUCCCGCUCCUCGCCUGGCGGAUGUAGGUUGUUGGCCUGAGGGGAGCUACGUAGCCGAGGUUUGCGCUGCCGCCGCCAGGCCCGGUCCGGUUCCAGCCUCUGCCCGGACGCUAGCCGGCCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[284.49792480 291.45568848]
[279.32916260 285.07363892]
[277.09194946 277.07388306]
[278.22552490 268.74987793]
[267.08978271 258.70025635]
[255.86865234 248.74603271]
[244.56294250 238.88798523]
[232.46214294 239.39680481]
[222.96015930 231.25564575]
[221.51666260 218.42280579]
[210.38092041 208.37316895]
[199.24517822 198.32353210]
[188.10943604 188.27388000]
[173.29383850 189.29058838]
[161.85745239 179.25744629]
[160.89151001 163.71058655]
[149.75576782 153.66094971]
[132.42997742 150.93554688]
[126.88030243 133.38914490]
[115.57460785 123.53108978]
[104.26890564 113.67303467]
[90.58625031 110.79614258]
[85.87303925 97.63265991]
[74.56733704 87.77460480]
[63.26164627 77.91654968]
[51.95595169 68.05849457]
[40.65025330 58.20044327]
[25.16390228 54.96262360]
[20.65617371 40.76651001]
[9.35047913 30.90845299]
[-1.95521653 21.05039787]
[-17.44156837 17.81257820]
[-21.94929695 3.61646390]
[-33.25499344 -6.24159098]
[-44.56068802 -16.09964561]
[-55.86638260 -25.95770073]
[-67.33873749 -35.62129593]
[-78.97440338 -45.08761597]
[-90.61007690 -54.55393600]
[-102.24574280 -64.02025604]
[-113.88141632 -73.48657227]
[-125.59747314 -82.85321808]
[-137.39306641 -92.11949921]
[-150.28457642 -91.36157990]
[-159.92184448 -99.34212494]
[-161.47647095 -111.35343933]
[-173.11213684 -120.81975555]
[-184.74780273 -130.28607178]
[-196.38346863 -139.75239563]
[-207.96351624 -134.97196960]
[-220.40461731 -135.57475281]
[-231.34062195 -141.38449097]
[-238.71788025 -151.24049377]
[-241.18080139 -163.22900391]
[-238.32066345 -175.05465698]
[-249.62635803 -184.91271973]
[-260.93206787 -194.77076721]
[-272.23776245 -204.62882996]
[-283.54345703 -214.48687744]
[-295.04766846 -211.37777710]
[-306.50445557 -214.19029236]
[-315.08474731 -222.11045837]
[-318.72778320 -233.07814026]
[-316.63525391 -244.32196045]
[-327.59780884 -254.56025696]
[-343.61605835 -255.45176697]
[-352.78842163 -268.61410522]
[-348.07864380 -283.95025635]
[-333.09967041 -289.69564819]
[-319.34207153 -281.44287109]
[-317.35949707 -265.52279663]
[-306.39697266 -255.28450012]
[-288.19097900 -257.02410889]
[-274.23995972 -244.71089172]
[-273.68539429 -225.79257202]
[-262.37969971 -215.93452454]
[-251.07400513 -206.07646179]
[-239.76831055 -196.21841431]
[-228.46261597 -186.36035156]
[-211.47267151 -191.10903931]
[-194.88078308 -184.66860962]
[-185.37800598 -169.43447876]
[-186.91716003 -151.38806152]
[-175.28147888 -141.92175293]
[-163.64581299 -132.45542908]
[-152.01014709 -122.98910522]
[-134.56755066 -121.15435028]
[-128.12678528 -103.91509247]
[-116.33119202 -94.64881134]
[-109.11172485 -92.98522186]
[-104.41509247 -85.12224579]
[-92.77942657 -75.65592194]
[-81.14376068 -66.18960571]
[-69.50808716 -56.72328568]
[-57.87241745 -47.25696564]
[-53.09214783 -46.84968948]
[-48.52342224 -43.41948700]
[-46.00832748 -37.26339722]
[-34.70263290 -27.40534210]
[-23.39693642 -17.54728699]
[-12.09124184 -7.68923140]
[2.58645129 -5.15652561]
[7.90283871 9.74470234]
[19.20853424 19.60275841]
[30.51422882 29.46081352]
[45.19192123 31.99351883]
[50.50830841 46.89474869]
[61.81400681 56.75280380]
[73.11969757 66.61085510]
[84.42539215 76.46891022]
[95.73109436 86.32696533]
[109.41374969 89.20385742]
[114.12696075 102.36734009]
[125.43266296 112.22539520]
[136.73835754 122.08345032]
[149.65176392 121.98655701]
[158.86779785 130.45005798]
[159.80540466 142.52520752]
[170.94114685 152.57485962]
[186.50527954 151.94584656]
[197.65533447 162.29624939]
[198.15907288 177.13813782]
[209.29481506 187.18778992]
[220.43055725 197.23742676]
[231.56629944 207.28706360]
[249.64924622 210.70506287]
[254.42100525 227.58229065]
[265.72671509 237.44033813]
[274.27334595 240.73268127]
[277.13940430 247.56449890]
[288.27514648 257.61413574]
[310.46878052 260.62377930]
[316.45175171 281.41546631]
[328.24734497 290.68173218]
[340.04293823 299.94802856]
[351.83853149 309.21432495]
[363.63412476 318.48059082]
[375.42971802 327.74688721]
[387.22531128 337.01315308]
[399.02090454 346.27944946]
[420.39218140 342.02056885]
[437.74191284 354.73342896]
[440.05853271 375.83273315]
[452.60128784 384.05950928]
[465.14401245 392.28628540]
[477.68673706 400.51306152]
[490.22946167 408.73983765]
[502.77221680 416.96661377]
[513.30566406 414.13638306]
[523.44500732 417.51397705]
[529.90533447 425.74975586]
[530.73516846 435.96353149]
[542.98968506 444.61373901]
[555.24426270 453.26394653]
[571.67114258 457.45837402]
[572.18804932 474.40444946]
[556.04730225 479.59228516]
[546.59405518 465.51849365]
[534.33947754 456.86828613]
[522.08496094 448.21807861]
[502.76522827 447.89871216]
[494.54544067 429.50936890]
[482.00268555 421.28259277]
[469.45996094 413.05581665]
[456.91723633 404.82901001]
[444.37451172 396.60223389]
[431.83175659 388.37545776]
[424.42687988 392.90106201]
[415.90835571 394.77328491]
[407.20181274 393.75964355]
[399.26275635 389.94281006]
[392.97189331 383.71466064]
[389.03717041 375.73620605]
[387.91442871 366.86752319]
[389.75460815 358.07504272]
[377.95901489 348.80874634]
[366.16342163 339.54248047]
[354.36782837 330.27618408]
[342.57223511 321.00991821]
[330.77664185 311.74362183]
[318.98104858 302.47732544]
[307.18545532 293.21105957]
[299.69384766 295.81176758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 131]
[5 130]
[6 128]
[7 127]
[10 125]
[11 124]
[12 123]
[13 122]
[16 119]
[17 118]
[19 115]
[20 114]
[21 113]
[23 111]
[24 110]
[25 109]
[26 108]
[27 107]
[29 105]
[30 104]
[31 103]
[33 101]
[34 100]
[35 99]
[36 98]
[37 95]
[38 94]
[39 93]
[40 92]
[41 91]
[42 89]
[43 88]
[46 86]
[47 85]
[48 84]
[49 83]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[64 72]
[65 71]
[133 182]
[134 181]
[135 180]
[136 179]
[137 178]
[138 177]
[139 176]
[140 175]
[143 167]
[144 166]
[145 165]
[146 164]
[147 163]
[148 162]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
