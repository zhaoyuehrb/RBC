%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGAAGUUCGCCGACGACGCGCCCGCCCUGGGCCACCGGCGCCGGCCCAAGUUCGCCGGGGGGGCCCGGAGGAAGCUUGGGGGACGCGACGGGGGAACGCGGAAACCCCGGGGAUCUGCAGGCGCGCCCGGGCCGUGUGCCUUCUCUCCGCGUGUCCAAACCGUGUCCCCAGCCGCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[0.59067482 243.10812378]
[-7.63610315 255.65086365]
[-15.86288166 268.19360352]
[-24.08965874 280.73632812]
[-32.31643677 293.27905273]
[-24.54000854 306.36679077]
[-23.22251701 321.47146606]
[-28.57192039 335.59249878]
[-39.47710800 345.94808960]
[-53.73821640 350.52304077]
[-68.51026154 348.46096802]
[-76.73703766 361.00372314]
[-84.96382141 373.54644775]
[-80.28700256 388.46829224]
[-86.34362793 402.88534546]
[-100.27393341 409.99029541]
[-115.50045776 406.42843628]
[-124.83370972 393.88156128]
[-123.86679840 378.27389526]
[-113.05628204 366.97491455]
[-97.50655365 365.31967163]
[-89.27976990 352.77694702]
[-81.05299377 340.23419189]
[-88.82954407 327.50665283]
[-90.31497192 312.60351562]
[-85.16136169 298.47549438]
[-74.34058380 287.94311523]
[-59.96151733 283.13381958]
[-44.85916901 285.05227661]
[-36.63239288 272.50955200]
[-28.40561295 259.96682739]
[-20.17883492 247.42408752]
[-11.95205688 234.88134766]
[-15.11745167 228.45382690]
[-15.85212135 221.25831604]
[-14.01675034 214.19163513]
[-9.79533195 208.15116882]
[-3.67786241 203.92102051]
[3.59618902 202.07025146]
[11.12715626 202.87678528]
[20.39343834 191.08120728]
[29.65972137 179.28561401]
[38.92600632 167.49002075]
[48.19228745 155.69442749]
[57.35753632 143.82015991]
[66.42108154 131.86807251]
[75.48462677 119.91600037]
[84.54817200 107.96392822]
[80.54207611 94.72655487]
[87.70826721 80.63539886]
[75.91267395 71.36911774]
[64.11708069 62.10283279]
[52.32149124 52.83654785]
[40.52589798 43.57026672]
[28.65163231 34.40501785]
[16.69955444 25.34147072]
[-1.60897028 23.47778511]
[-7.80240297 7.06888676]
[-19.90748024 -1.78927982]
[-32.01255798 -10.64744663]
[-44.11763382 -19.50561333]
[-56.22270966 -28.36377907]
[-72.57559204 -29.59475136]
[-79.44119263 -44.48755646]
[-69.75676727 -57.72175217]
[-53.48482513 -55.68313217]
[-47.36454391 -40.46885681]
[-35.25946808 -31.61068916]
[-23.15439034 -22.75252342]
[-11.04931355 -13.89435673]
[1.05576348 -5.03619051]
[13.06912327 -6.57495070]
[23.23064995 0.72636747]
[25.76310158 13.38939381]
[37.71517944 22.45293999]
[44.96199036 23.99302292]
[49.79218292 31.77467346]
[61.58777618 41.04095459]
[73.38336945 50.30723953]
[85.17896271 59.57352066]
[96.97454834 68.83980560]
[111.81686401 71.00908661]
[125.77104187 65.50627899]
[139.72521973 60.00346375]
[153.67939758 54.50064850]
[167.63357544 48.99783707]
[181.58773804 43.49502563]
[195.54191589 37.99221039]
[209.49609375 32.48939896]
[223.45027161 26.98658371]
[225.80683899 11.87387848]
[235.34849548 0.04791141]
[249.43479919 -5.37818766]
[264.24667358 -3.04061174]
[275.82180786 6.33393574]
[289.77597046 0.83112270]
[303.73016357 -4.67169046]
[313.72970581 -16.93218613]
[328.40805054 -14.40339565]
[342.36224365 -19.90620804]
[356.31640625 -25.40902138]
[370.27059937 -30.91183472]
[384.22476196 -36.41464996]
[398.17895508 -41.91746140]
[412.13311768 -47.42027664]
[398.91659546 -54.51419449]
[394.43609619 -68.82939911]
[401.24978638 -82.19254303]
[415.46734619 -86.97386169]
[428.97119141 -80.44342804]
[434.05120850 -66.32984161]
[427.80661011 -52.69100952]
[442.25036621 -56.73796082]
[456.69412231 -60.78491592]
[471.13787842 -64.83186340]
[485.58163452 -68.87881470]
[490.37106323 -78.67804718]
[499.58044434 -84.10047913]
[510.03359985 -83.55711365]
[518.27722168 -77.47001648]
[532.85070801 -81.02147675]
[547.42419434 -84.57294464]
[559.00006104 -95.35764313]
[573.19738770 -90.85369873]
[587.77087402 -94.40516663]
[602.34442139 -97.95663452]
[609.96282959 -103.04036713]
[617.19702148 -101.44207001]
[631.82904053 -104.74420166]
[643.50402832 -116.26058197]
[659.24102783 -111.64766693]
[662.85119629 -95.65083313]
[650.62066650 -84.72624207]
[635.13116455 -90.11219025]
[620.49914551 -86.81005096]
[605.89587402 -83.38312531]
[591.32238770 -79.83165741]
[576.74884033 -76.28019714]
[566.21539307 -65.74952698]
[550.97564697 -69.99944305]
[536.40216064 -66.44797516]
[521.82867432 -62.89650726]
[508.89096069 -48.54489517]
[489.62857056 -54.43505859]
[475.18481445 -50.38810730]
[460.74105835 -46.34115601]
[446.29730225 -42.29420471]
[431.85354614 -38.24725342]
[417.63592529 -33.46609879]
[403.68176270 -27.96328545]
[389.72756958 -22.46047211]
[375.77340698 -16.95765877]
[361.81921387 -11.45484543]
[347.86505127 -5.95203209]
[333.91085815 -0.44921878]
[324.90942383 11.41767788]
[309.23297119 9.28248596]
[295.27877808 14.78529930]
[281.32461548 20.28811264]
[279.26373291 35.04000473]
[270.03417969 46.85828400]
[256.03582764 52.50734329]
[240.99057007 50.37719345]
[228.95309448 40.94076157]
[214.99891663 46.44357300]
[201.04473877 51.94638824]
[187.09056091 57.44919968]
[173.13638306 62.95201492]
[159.18220520 68.45482635]
[145.22802734 73.95764160]
[131.27384949 79.46045685]
[117.31967926 84.96326447]
[117.40145874 110.17887115]
[96.50025177 117.02747345]
[87.43670654 128.97955322]
[78.37316132 140.93162537]
[69.30961609 152.88369751]
[66.60819244 161.63511658]
[59.98788071 164.96070862]
[50.72159576 176.75630188]
[41.45531464 188.55189514]
[32.18902969 200.34748840]
[22.92274857 212.14308167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[5 29]
[11 23]
[12 22]
[13 21]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[45 177]
[46 176]
[47 175]
[48 174]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 75]
[56 74]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[82 172]
[83 171]
[84 170]
[85 169]
[86 168]
[87 167]
[88 166]
[89 165]
[90 164]
[95 159]
[96 158]
[97 157]
[99 155]
[100 154]
[101 153]
[102 152]
[103 151]
[104 150]
[105 149]
[112 148]
[113 147]
[114 146]
[115 145]
[116 144]
[120 142]
[121 141]
[122 140]
[124 138]
[125 137]
[126 136]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
