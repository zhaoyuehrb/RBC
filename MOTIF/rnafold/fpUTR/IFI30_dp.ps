%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IFI30)
} def

/sequence { (\
UGGUUAAAGGCGCUUAUUUCCCAGGCAGCCGCUGCAGUCGCCACACCUUUGCCCCUGCUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004025989 ubox
1 23 0.036822443 ubox
1 27 0.004804314 ubox
1 31 0.009854354 ubox
1 43 0.006242432 ubox
1 62 0.004837994 ubox
2 11 0.011363313 ubox
2 14 0.006507804 ubox
2 21 0.013808642 ubox
2 22 0.040794520 ubox
2 26 0.005287644 ubox
2 30 0.077670441 ubox
2 33 0.069879630 ubox
2 42 0.007327842 ubox
2 47 0.021770415 ubox
2 53 0.011690720 ubox
2 54 0.008048401 ubox
2 55 0.003201533 ubox
2 59 0.005475321 ubox
2 61 0.005224395 ubox
3 11 0.021856379 ubox
3 13 0.007075284 ubox
3 20 0.014062050 ubox
3 21 0.040649778 ubox
3 26 0.005166273 ubox
3 29 0.078277145 ubox
3 32 0.074369904 ubox
3 35 0.004722624 ubox
3 41 0.007325841 ubox
3 46 0.021805488 ubox
3 52 0.011740424 ubox
3 53 0.008067739 ubox
3 58 0.005635365 ubox
3 61 0.014819938 ubox
4 10 0.021668393 ubox
4 12 0.006924390 ubox
4 24 0.004985448 ubox
4 25 0.005184658 ubox
4 28 0.078002249 ubox
4 31 0.073996560 ubox
4 34 0.004651285 ubox
4 40 0.007243849 ubox
4 45 0.021230006 ubox
4 51 0.009254050 ubox
4 57 0.005503895 ubox
4 60 0.014294586 ubox
5 9 0.016055928 ubox
5 16 0.009754828 ubox
5 23 0.004793375 ubox
5 24 0.004774815 ubox
5 27 0.075113422 ubox
5 34 0.006486692 ubox
5 51 0.010880636 ubox
6 15 0.010083761 ubox
6 18 0.020737673 ubox
6 19 0.024740568 ubox
6 33 0.023300790 ubox
6 50 0.013202408 ubox
7 14 0.009205187 ubox
7 15 0.014906748 ubox
7 17 0.018082097 ubox
7 18 0.026458945 ubox
7 19 0.011325332 ubox
7 49 0.013522490 ubox
8 14 0.017333582 ubox
8 15 0.007360344 ubox
8 17 0.026727131 ubox
8 18 0.011529729 ubox
8 33 0.005121259 ubox
8 48 0.013504320 ubox
8 56 0.011971886 ubox
9 13 0.017248758 ubox
9 14 0.006442910 ubox
9 15 0.009018524 ubox
9 17 0.011173485 ubox
9 18 0.003165888 ubox
9 20 0.005243941 ubox
9 21 0.010519759 ubox
9 22 0.018665939 ubox
9 30 0.984278568 ubox
9 33 0.007884623 ubox
9 42 0.024280538 ubox
9 47 0.011899379 ubox
9 53 0.004110360 ubox
9 55 0.012052418 ubox
10 14 0.006266588 ubox
10 19 0.004939076 ubox
10 20 0.010486496 ubox
10 21 0.018558746 ubox
10 26 0.059860685 ubox
10 29 0.993747956 ubox
10 32 0.008663303 ubox
10 41 0.024567996 ubox
10 46 0.011281258 ubox
10 52 0.004121308 ubox
10 54 0.012030941 ubox
11 25 0.059855714 ubox
11 28 0.993336080 ubox
11 31 0.008690258 ubox
11 40 0.024781424 ubox
11 51 0.004124286 ubox
12 26 0.991513932 ubox
12 29 0.013036011 ubox
12 30 0.006136222 ubox
12 38 0.004868577 ubox
12 39 0.024250899 ubox
12 41 0.004353803 ubox
12 50 0.003527775 ubox
12 52 0.012134244 ubox
13 24 0.065065209 ubox
13 25 0.994130522 ubox
13 28 0.014193657 ubox
13 37 0.022876148 ubox
13 40 0.004354952 ubox
13 51 0.012135733 ubox
14 23 0.072115323 ubox
14 24 0.985531264 ubox
14 25 0.013209582 ubox
14 27 0.013399388 ubox
14 36 0.022534350 ubox
14 37 0.003902401 ubox
15 23 0.912507454 ubox
15 24 0.048026660 ubox
15 36 0.004126662 ubox
16 38 0.004821905 ubox
17 24 0.015996626 ubox
17 25 0.004864628 ubox
17 37 0.004878779 ubox
18 23 0.025557401 ubox
18 24 0.008494638 ubox
18 25 0.003183320 ubox
18 36 0.004671611 ubox
19 23 0.013271433 ubox
19 24 0.004386378 ubox
20 24 0.004762518 ubox
22 34 0.006849904 ubox
23 33 0.006669131 ubox
24 30 0.004749798 ubox
24 32 0.005978640 ubox
24 33 0.009925970 ubox
24 39 0.009595414 ubox
24 42 0.008645641 ubox
24 59 0.003610727 ubox
25 29 0.004716602 ubox
25 32 0.010569601 ubox
25 35 0.023669434 ubox
25 38 0.009593755 ubox
25 41 0.008660996 ubox
25 58 0.003913937 ubox
25 61 0.044560354 ubox
26 31 0.010959148 ubox
26 34 0.023681626 ubox
26 37 0.009589943 ubox
26 40 0.008651419 ubox
26 57 0.003984968 ubox
26 60 0.044600235 ubox
27 33 0.023631172 ubox
27 56 0.003983901 ubox
27 59 0.044592847 ubox
28 32 0.023113968 ubox
28 35 0.010237010 ubox
28 38 0.007856056 ubox
28 41 0.003527404 ubox
28 55 0.003976812 ubox
28 58 0.044586868 ubox
29 34 0.010205905 ubox
29 37 0.007896696 ubox
29 40 0.003497290 ubox
29 57 0.044405748 ubox
30 57 0.003168829 ubox
30 62 0.138987826 ubox
31 38 0.003631961 ubox
31 41 0.003353173 ubox
31 52 0.005374578 ubox
31 56 0.003964565 ubox
31 58 0.003267546 ubox
31 61 0.985906832 ubox
32 37 0.003800641 ubox
32 40 0.003355005 ubox
32 51 0.005376977 ubox
32 57 0.003244131 ubox
32 60 0.984608395 ubox
33 60 0.006143605 ubox
33 62 0.062318559 ubox
34 41 0.004693943 ubox
34 52 0.044591552 ubox
34 58 0.987995272 ubox
34 59 0.004436666 ubox
34 61 0.127164943 ubox
35 40 0.004785815 ubox
35 51 0.044656459 ubox
35 57 0.990315963 ubox
35 60 0.127288507 ubox
36 50 0.044183594 ubox
36 56 0.989971540 ubox
36 59 0.127256954 ubox
37 44 0.006009114 ubox
37 46 0.011313099 ubox
37 47 0.003472034 ubox
37 49 0.040410013 ubox
37 52 0.005351360 ubox
37 55 0.988417786 ubox
37 58 0.127233570 ubox
38 43 0.005900684 ubox
38 45 0.011213746 ubox
38 51 0.005518101 ubox
38 57 0.119392484 ubox
39 51 0.059480913 ubox
39 57 0.035355031 ubox
39 62 0.003763176 ubox
40 50 0.046967631 ubox
40 52 0.972859649 ubox
40 56 0.028415958 ubox
40 58 0.003403956 ubox
40 61 0.004128828 ubox
41 51 0.912432301 ubox
41 57 0.003535331 ubox
41 60 0.004052093 ubox
42 51 0.366124603 ubox
42 57 0.003479454 ubox
43 50 0.445821538 ubox
43 56 0.003816849 ubox
44 51 0.098437337 ubox
44 57 0.004002621 ubox
45 50 0.098116814 ubox
45 56 0.003806276 ubox
50 62 0.008507422 ubox
51 58 0.012979721 ubox
51 61 0.014522391 ubox
52 57 0.012956793 ubox
52 60 0.014507611 ubox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
31 61 0.9500000 lbox
32 60 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
showpage
end
%%EOF
