%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACAGCUGCGCGUCUGCGGGAAUAGGUGCAGCGGGCCCUUGGCGGGGGACUCUGAGGGAGGAGCUGGGGACGGCGACCCUAGGAGAGUUCUUUGGGGUGACUUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[29.77380943 143.58444214]
[16.19418144 149.95576477]
[2.61455417 156.32708740]
[-0.51032776 169.51856995]
[-10.54758453 178.33740234]
[-23.64266777 179.69804382]
[-34.93801498 173.32321167]
[-48.69250488 179.30769348]
[-62.44699478 185.29217529]
[-76.20148468 191.27665710]
[-89.95597076 197.26113892]
[-103.71046448 203.24562073]
[-117.46495056 209.23008728]
[-117.16108704 224.42799377]
[-122.70099640 238.58348083]
[-133.23986816 249.53794861]
[-147.17062378 255.62092590]
[-162.36891174 255.90480042]
[-176.51710510 250.34628296]
[-187.45770264 239.79299927]
[-193.52233887 225.85426331]
[-193.78622437 210.65560913]
[-188.20909119 196.51475525]
[-177.64143372 185.58804321]
[-163.69473267 179.54173279]
[-148.49574280 179.29785156]
[-134.36222839 184.89356995]
[-123.44943237 195.47560120]
[-109.69494629 189.49111938]
[-95.94045258 183.50663757]
[-82.18596649 177.52217102]
[-68.43147278 171.53768921]
[-54.67698288 165.55320740]
[-40.92249298 159.56872559]
[-35.49954224 143.71943665]
[-20.01718712 136.48977661]
[-3.75676560 142.74745178]
[9.82286167 136.37612915]
[23.40248871 130.00482178]
[36.89059830 123.44197083]
[50.28448486 116.68891144]
[63.67837143 109.93585968]
[77.07225800 103.18280029]
[90.46614838 96.42974854]
[95.76629639 90.18778229]
[104.33599091 89.68115997]
[117.91561890 83.30983734]
[131.49525452 76.93852234]
[136.94665527 62.34674072]
[150.80908203 56.07876587]
[164.68652344 61.36576462]
[178.26614380 54.99444580]
[191.84577942 48.62312698]
[205.42539978 42.25180817]
[219.00503540 35.88048553]
[232.58465576 29.50916672]
[246.16429138 23.13784599]
[259.74389648 16.76652718]
[273.32354736 10.39520645]
[286.90316772 4.02388716]
[300.48278809 -2.34743285]
[301.68664551 -18.76817703]
[310.91882324 -32.28817368]
[325.60647583 -39.30583191]
[341.73910522 -38.00886536]
[354.96350098 -28.84129524]
[368.35739136 -35.59435272]
[381.75128174 -42.34740829]
[395.14517212 -49.10046387]
[408.53906250 -55.85351944]
[421.93295288 -62.60657501]
[425.33892822 -77.86872864]
[437.78973389 -87.32978058]
[453.40646362 -86.52251434]
[464.81536865 -75.82809448]
[466.62954712 -60.29610062]
[457.99237061 -47.26026535]
[442.98202515 -42.87570953]
[428.68600464 -49.21268845]
[415.29211426 -42.45963287]
[401.89822388 -35.70657349]
[388.50433350 -28.95351982]
[375.11044312 -22.20046234]
[361.71655273 -15.44740677]
[361.83074951 -1.71277511]
[355.95947266 10.77768040]
[345.20809937 19.53725052]
[331.65969849 22.79456902]
[317.97155762 19.85158539]
[306.85412598 11.23219490]
[293.27447510 17.60351372]
[279.69485474 23.97483444]
[266.11523438 30.34615517]
[252.53559875 36.71747589]
[238.95597839 43.08879471]
[225.37634277 49.46011353]
[211.79672241 55.83143234]
[198.21708679 62.20275497]
[184.63746643 68.57407379]
[171.05784607 74.94539642]
[166.25390625 88.99736023]
[152.57299805 95.65222931]
[137.86656189 90.51815033]
[124.28694153 96.88946533]
[110.70731354 103.26078796]
[97.21920776 109.82363129]
[83.82531738 116.57669067]
[70.43142700 123.32974243]
[57.03754044 130.08279419]
[43.64365387 136.83586121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[12 29]
[13 28]
[40 110]
[41 109]
[42 108]
[43 107]
[44 106]
[46 105]
[47 104]
[48 103]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
