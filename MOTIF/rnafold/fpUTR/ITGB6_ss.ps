%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUAAAUCAUGUUGAAGUUGCUUUUAAACACAGCUUUUCUGCUUUACCUGUCCAGGUAGCCUCUGUUUUCAUUUCAGUCUUAAUGAAAACUUUCUAACUUAUAUCUCAAGUUUCUUUUCAAAGCAGUGUAAGUAGUAUUUAAAAUGUUAUACUUCAAGAAAGAAAGACUUUAACGAUAUUCAGCGUUGGUCUUGUAACGCUGAAGGUAAUUCAUUUUUUAAUCGGUCUGCACAGCAAGAACUGAAACGA\
) } def
/len { sequence length } bind def

/coor [
[640.30981445 441.24819946]
[627.77941895 433.00265503]
[615.24902344 424.75711060]
[602.71862793 416.51159668]
[588.86993408 421.92932129]
[574.31433105 418.10830688]
[564.68719482 406.31121826]
[563.84277344 390.92962646]
[551.31237793 382.68411255]
[536.13189697 388.96255493]
[520.04144287 384.90573120]
[509.44183350 371.92272949]
[508.67132568 355.01358032]
[496.03869629 346.92550659]
[483.40606689 338.83743286]
[470.77343750 330.74938965]
[458.14080811 322.66131592]
[445.50820923 314.57324219]
[432.87557983 306.48519897]
[413.53103638 306.98614502]
[404.59448242 288.89807129]
[391.76336670 281.12872314]
[378.88388062 273.43984985]
[365.95654297 265.83169556]
[353.02917480 258.22357178]
[340.10183716 250.61544800]
[327.17449951 243.00730896]
[314.24713135 235.39918518]
[301.31979370 227.79104614]
[286.42669678 228.00384521]
[278.45782471 214.33609009]
[265.53048706 206.72796631]
[250.63739014 206.94076538]
[242.66850281 193.27301025]
[229.74116516 185.66487122]
[216.81381226 178.05674744]
[203.88645935 170.44860840]
[187.78761292 175.35346985]
[172.83409119 166.92022705]
[168.53575134 149.95036316]
[155.51419067 142.50462341]
[142.49263000 135.05889893]
[129.47108459 127.61315155]
[116.44952393 120.16741943]
[103.42796326 112.72167969]
[88.55731201 110.75602722]
[74.04837799 114.56269836]
[59.53943634 118.36937714]
[45.03050232 122.17604828]
[30.52156448 125.98271942]
[19.25225067 137.89634705]
[3.36500096 133.83096313]
[-0.79674393 117.96868896]
[11.04826260 106.62726593]
[26.71489143 111.47377777]
[41.22382736 107.66710663]
[55.73276520 103.86043549]
[70.24169922 100.05376434]
[84.75064087 96.24709320]
[85.26653290 88.76485443]
[70.30205536 87.73307800]
[55.33760071 86.70106506]
[56.36984253 71.73662567]
[71.33383942 72.76860809]
[86.29830933 73.80038452]
[86.81420135 66.31814575]
[72.96500397 60.55622101]
[59.11581039 54.79429626]
[45.26661301 49.03237152]
[31.41741943 43.27044296]
[17.56822395 37.50851822]
[3.71902847 31.74659157]
[-10.13016701 25.98466492]
[-23.97936249 20.22274017]
[-37.15182877 28.42430687]
[-52.62690353 27.28335190]
[-64.45409393 17.23859596]
[-68.08561707 2.15245414]
[-62.12506485 -12.17414665]
[-48.86440277 -20.23233414]
[-33.40261841 -18.92357254]
[-21.68508530 -8.75110531]
[-18.21743584 6.37354422]
[-4.36824083 12.13547039]
[9.48095417 17.89739609]
[23.33015060 23.65932274]
[37.17934418 29.42124939]
[51.02854156 35.18317413]
[64.87773895 40.94510269]
[78.72692871 46.70702744]
[92.57612610 52.46895218]
[97.55494690 46.85991287]
[83.80884552 40.85618591]
[85.27098083 25.92761612]
[99.92072296 22.70502853]
[107.51259613 35.64183426]
[112.49141693 30.03279495]
[105.12731171 16.96489525]
[97.76321411 3.89699483]
[90.39910889 -9.17090511]
[83.03501129 -22.23880577]
[67.63191223 -24.93667984]
[57.60623169 -36.93750381]
[57.69179153 -52.57485199]
[67.84819031 -64.46524811]
[83.27989197 -66.99441528]
[96.70051575 -58.96814728]
[101.77324677 -44.17621231]
[96.10291290 -29.60290718]
[103.46701050 -16.53500748]
[110.83111572 -3.46710658]
[118.19521332 9.60079288]
[125.55931854 22.66869354]
[140.14533997 26.16837502]
[152.38465881 34.84011459]
[160.52258301 47.44068146]
[163.39239502 62.16359711]
[160.58267212 76.89809418]
[152.49623108 89.53176117]
[140.29240417 98.25336456]
[125.72077179 101.81253052]
[110.87370300 99.70011902]
[123.89525604 107.14585876]
[136.91680908 114.59159851]
[149.93836975 122.03733063]
[162.95993042 129.48307800]
[175.98149109 136.92880249]
[188.46746826 131.91911316]
[201.37246704 134.96269226]
[210.04585266 144.73287964]
[211.49459839 157.52127075]
[224.42193604 165.12939453]
[237.34928894 172.73753357]
[250.27664185 180.34565735]
[266.09436035 180.67704773]
[273.13861084 193.80061340]
[286.06594849 201.40875244]
[301.88369751 201.74012756]
[308.92791748 214.86370850]
[321.85525513 222.47183228]
[334.78262329 230.07997131]
[347.70996094 237.68809509]
[360.63729858 245.29623413]
[373.56466675 252.90435791]
[386.49200439 260.51248169]
[395.44955444 262.16070557]
[399.53268433 268.29760742]
[412.36380005 276.06695557]
[422.72695923 272.87252808]
[432.93109131 275.83361816]
[439.68948364 283.74597168]
[440.96362305 293.85256958]
[453.59625244 301.94061279]
[466.22888184 310.02868652]
[478.86151123 318.11676025]
[491.49414062 326.20480347]
[504.12677002 334.29287720]
[516.75939941 342.38095093]
[529.17175293 336.42105103]
[542.80041504 337.35839844]
[554.09954834 344.84204102]
[560.18231201 356.83190918]
[559.55792236 370.15368652]
[572.08831787 378.39923096]
[586.54882812 373.08898926]
[601.19232178 377.26296997]
[610.46051025 389.11898804]
[610.96411133 403.98117065]
[623.49456787 412.22671509]
[636.02496338 420.47225952]
[648.55535889 428.71780396]
[658.76806641 419.17318726]
[671.41180420 412.73059082]
[685.55261230 409.99719238]
[700.10888672 411.30126953]
[713.93414307 416.65753174]
[725.90740967 425.75714111]
[735.02355957 437.98330688]
[740.47778320 452.45220947]
[741.73504639 468.07653809]
[756.65020752 469.66937256]
[771.56542969 471.26217651]
[786.48059082 472.85501099]
[801.39581299 474.44781494]
[816.31097412 476.04064941]
[831.22619629 477.63345337]
[846.14135742 479.22628784]
[861.05657959 480.81909180]
[875.97174072 482.41192627]
[888.11163330 472.29269409]
[903.84344482 473.80465698]
[913.83374023 486.05084229]
[912.15551758 501.76577759]
[899.80438232 511.62606812]
[884.10809326 509.78179932]
[874.37890625 497.32711792]
[859.46374512 495.73428345]
[844.54852295 494.14147949]
[829.63336182 492.54864502]
[814.71813965 490.95584106]
[799.80297852 489.36300659]
[784.88781738 487.77020264]
[769.97259521 486.17736816]
[755.05743408 484.58456421]
[740.14221191 482.99172974]
[735.74902344 489.07037354]
[748.07470703 497.61892700]
[760.40039062 506.16748047]
[772.72607422 514.71606445]
[785.05169678 523.26458740]
[797.37738037 531.81317139]
[809.70306396 540.36169434]
[823.44519043 546.37445068]
[822.97894287 561.36718750]
[808.88977051 566.51446533]
[798.86853027 555.35290527]
[786.88421631 546.33203125]
[774.89990234 537.31115723]
[762.91558838 528.29028320]
[750.93127441 519.26940918]
[738.94696045 510.24853516]
[726.96264648 501.22766113]
[722.56945801 507.30630493]
[728.76184082 520.96844482]
[734.95422363 534.63061523]
[741.14660645 548.29278564]
[747.33898926 561.95489502]
[753.61676025 575.57806396]
[759.97967529 589.16162109]
[766.42742920 602.70507812]
[772.95983887 616.20800781]
[785.30059814 627.83306885]
[777.54602051 642.90966797]
[760.91198730 639.63177490]
[759.45697021 622.74041748]
[752.92456055 609.23748779]
[747.19744873 604.59710693]
[746.39611816 595.52453613]
[740.03320312 581.94091797]
[734.36456299 577.22918701]
[733.67687988 568.14727783]
[727.48449707 554.48516846]
[721.29211426 540.82299805]
[715.09973145 527.16082764]
[708.90728760 513.49871826]
[689.92614746 517.41638184]
[671.08038330 514.67938232]
[654.59344482 505.84259033]
[642.33135986 492.16674805]
[635.59197998 475.44320679]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 168]
[8 164]
[9 163]
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[21 148]
[22 147]
[23 145]
[24 144]
[25 143]
[26 142]
[27 141]
[28 140]
[29 139]
[31 137]
[32 136]
[34 134]
[35 133]
[36 132]
[37 131]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[74 83]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[180 205]
[181 204]
[182 203]
[183 202]
[184 201]
[185 200]
[186 199]
[187 198]
[188 197]
[189 196]
[223 245]
[224 244]
[225 243]
[226 242]
[227 241]
[228 239]
[229 238]
[230 236]
[231 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
