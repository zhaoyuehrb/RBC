%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM234)
} def

/sequence { (\
AUGGGUCUCCGCCCCUUCGUUCCCGGAAGUAGAAGACAGCGGCGUUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.003316472 ubox
1 45 0.028609585 ubox
2 11 0.024911675 ubox
2 25 0.016472488 ubox
2 31 0.003257490 ubox
2 38 0.010810886 ubox
2 41 0.019394669 ubox
2 44 0.031704299 ubox
2 47 0.014171101 ubox
3 9 0.012601147 ubox
3 10 0.069627889 ubox
3 13 0.017849328 ubox
3 14 0.520145827 ubox
3 15 0.042279742 ubox
3 16 0.005265998 ubox
3 24 0.023400981 ubox
3 37 0.009821987 ubox
3 40 0.070514244 ubox
3 43 0.034363581 ubox
3 46 0.024276570 ubox
3 49 0.329885099 ubox
4 8 0.008438827 ubox
4 9 0.070465818 ubox
4 10 0.024928916 ubox
4 12 0.017837254 ubox
4 13 0.521966576 ubox
4 14 0.042023134 ubox
4 15 0.006312563 ubox
4 23 0.023413549 ubox
4 45 0.026496287 ubox
4 46 0.017923361 ubox
4 48 0.331945621 ubox
4 49 0.712941751 ubox
5 9 0.024944534 ubox
5 12 0.521851857 ubox
5 13 0.040771460 ubox
5 14 0.006359351 ubox
5 22 0.023390193 ubox
5 37 0.191678962 ubox
5 40 0.006212905 ubox
5 43 0.032512942 ubox
5 45 0.020118441 ubox
5 48 0.721890059 ubox
6 11 0.492904187 ubox
6 33 0.006659288 ubox
6 36 0.192107047 ubox
6 39 0.005747297 ubox
6 42 0.013464490 ubox
6 44 0.018765711 ubox
6 47 0.708786488 ubox
7 29 0.004155446 ubox
7 32 0.006970648 ubox
7 35 0.192174411 ubox
7 41 0.008634982 ubox
7 42 0.004895335 ubox
8 27 0.015829124 ubox
8 31 0.006158214 ubox
8 33 0.115702036 ubox
8 34 0.150493061 ubox
8 36 0.007618852 ubox
8 42 0.003847069 ubox
9 26 0.018952510 ubox
9 32 0.163494791 ubox
9 35 0.007983710 ubox
9 41 0.003503062 ubox
9 42 0.611363029 ubox
10 19 0.018386545 ubox
10 25 0.018961229 ubox
10 41 0.612897133 ubox
10 44 0.547924180 ubox
11 18 0.017742686 ubox
11 20 0.005101333 ubox
11 24 0.018289007 ubox
11 30 0.154060412 ubox
11 40 0.613609421 ubox
11 43 0.556198212 ubox
11 45 0.009673622 ubox
11 48 0.004561973 ubox
12 19 0.006504630 ubox
12 26 0.005477829 ubox
12 29 0.153471969 ubox
12 39 0.612578968 ubox
12 42 0.555523471 ubox
12 44 0.010248737 ubox
12 47 0.004553474 ubox
13 25 0.005535863 ubox
13 26 0.019597022 ubox
13 41 0.554163941 ubox
13 42 0.030128208 ubox
14 25 0.019613059 ubox
14 26 0.042001379 ubox
14 41 0.041116542 ubox
15 25 0.042057942 ubox
15 26 0.030169717 ubox
15 29 0.420046038 ubox
15 32 0.024230659 ubox
15 35 0.716297776 ubox
15 39 0.487677819 ubox
16 25 0.028844995 ubox
16 27 0.192727260 ubox
16 28 0.424019766 ubox
16 29 0.003404623 ubox
16 31 0.021392042 ubox
16 32 0.014024910 ubox
16 33 0.006263957 ubox
16 34 0.719518624 ubox
16 35 0.007457679 ubox
16 36 0.008904024 ubox
16 38 0.474992244 ubox
16 39 0.013471228 ubox
17 26 0.208797889 ubox
17 27 0.424641352 ubox
17 28 0.003720117 ubox
17 31 0.022214595 ubox
17 32 0.007081295 ubox
17 33 0.722075977 ubox
17 34 0.007510290 ubox
17 35 0.009182287 ubox
17 36 0.385298462 ubox
17 38 0.018492220 ubox
17 42 0.014275423 ubox
18 25 0.220531600 ubox
18 26 0.420433070 ubox
18 32 0.721490487 ubox
18 35 0.388258997 ubox
18 41 0.019726608 ubox
18 44 0.023804491 ubox
18 47 0.020647759 ubox
19 24 0.222504497 ubox
19 30 0.092503260 ubox
19 37 0.076119304 ubox
19 40 0.021941538 ubox
19 43 0.024586465 ubox
19 46 0.020627403 ubox
19 48 0.030800354 ubox
20 26 0.006768676 ubox
20 27 0.024440232 ubox
20 28 0.368015937 ubox
20 29 0.140924446 ubox
20 32 0.017149835 ubox
20 33 0.051644327 ubox
20 34 0.430089554 ubox
20 35 0.007775102 ubox
20 36 0.073717391 ubox
20 39 0.021629257 ubox
20 42 0.009691647 ubox
20 44 0.005897492 ubox
20 47 0.030642702 ubox
21 25 0.008709877 ubox
21 26 0.027448688 ubox
21 27 0.413312935 ubox
21 28 0.133340809 ubox
21 31 0.018031613 ubox
21 32 0.050465964 ubox
21 33 0.452865214 ubox
21 34 0.008023651 ubox
21 35 0.065970936 ubox
21 36 0.020862244 ubox
21 38 0.016895041 ubox
21 41 0.004780864 ubox
22 26 0.413075530 ubox
22 32 0.453322318 ubox
22 35 0.026129361 ubox
22 42 0.004224654 ubox
23 41 0.003625745 ubox
23 42 0.059981805 ubox
24 41 0.060867732 ubox
24 44 0.011101663 ubox
25 40 0.060841589 ubox
25 43 0.011317257 ubox
25 49 0.004852214 ubox
26 48 0.004888689 ubox
29 37 0.070805530 ubox
29 40 0.059560398 ubox
29 43 0.006077335 ubox
29 48 0.014787848 ubox
30 36 0.069960611 ubox
30 39 0.059913895 ubox
30 42 0.006031309 ubox
30 47 0.014994232 ubox
31 46 0.012660172 ubox
32 45 0.009484665 ubox
33 46 0.004256461 ubox
34 45 0.004015445 ubox
34 46 0.004776762 ubox
35 45 0.003824022 ubox
35 46 0.058119762 ubox
36 45 0.066107650 ubox
37 44 0.067050477 ubox
37 47 0.217370246 ubox
38 46 0.218261412 ubox
39 45 0.218122519 ubox
39 48 0.257779307 ubox
40 44 0.216900320 ubox
40 47 0.258291133 ubox
41 46 0.196799795 ubox
41 49 0.418552152 ubox
42 48 0.421857445 ubox
43 47 0.418835019 ubox
4 49 0.9500000 lbox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
showpage
end
%%EOF
