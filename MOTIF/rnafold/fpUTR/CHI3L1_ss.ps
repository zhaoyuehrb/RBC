%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAUAGCUCAGUUCCCAUAAAAGGGCUGGUUUGCCGCGUCGGGGAGUGGAGUGGGACAGGUAUAUAAAGGAAGUACAGGGCCUGGGGAAGAGGCCCUGUCUAGGUAGCUGGCACCAGGAGCCGUGGGCAAGGGAAGAGGCCACACCCUGCCCUGCUCUGCUGCAGCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-21.99160004 438.86523438]
[-36.70707703 434.65652466]
[-47.77308273 424.08285522]
[-52.64673233 409.57403564]
[-50.20809937 394.46405029]
[-41.01755905 382.22506714]
[-27.18703079 375.66952515]
[-26.63920021 360.67953491]
[-26.09136963 345.68954468]
[-25.68045807 330.69515991]
[-25.40649605 315.69766235]
[-25.13253593 300.70016479]
[-24.85857582 285.70266724]
[-37.59057617 277.77197266]
[-50.93070984 284.63061523]
[-64.27084351 291.48922729]
[-77.61096954 298.34786987]
[-76.02770233 312.52130127]
[-79.37638855 326.35342407]
[-87.23394012 338.18347168]
[-98.63719177 346.59823608]
[-112.20090485 350.60095215]
[-126.28604889 349.72924805]
[-139.19786072 344.10842896]
[-149.38972473 334.43408203]
[-162.85290527 341.04794312]
[-176.31607056 347.66177368]
[-181.18112183 362.69863892]
[-195.29171753 369.81668091]
[-210.27629089 364.79293823]
[-217.24476624 350.60787964]
[-212.06286621 335.67727661]
[-197.80493164 328.85916138]
[-182.92991638 334.19860840]
[-169.46675110 327.58477783]
[-156.00357056 320.97091675]
[-157.26184082 305.19100952]
[-152.36352539 290.09741211]
[-142.02883911 278.00500488]
[-127.81405640 270.78015137]
[-111.87728119 269.55285645]
[-96.65073395 274.53997803]
[-84.46960449 285.00775146]
[-71.12947845 278.14910889]
[-57.78934479 271.29046631]
[-44.44921112 264.43182373]
[-34.47063065 259.32662964]
[-24.57840157 259.05813599]
[-16.76087189 262.65725708]
[-7.59326553 250.78480530]
[1.57434011 238.91236877]
[10.74194622 227.03991699]
[19.90955162 215.16746521]
[29.07715797 203.29502869]
[38.24476242 191.42257690]
[47.41236877 179.55012512]
[49.06689835 164.74769592]
[63.62524414 158.55374146]
[72.79285431 146.68130493]
[81.96045685 134.80885315]
[91.12805939 122.93640900]
[77.39077759 128.96028137]
[63.25737381 133.98490906]
[48.26861572 133.40422058]
[34.56631088 127.30120850]
[24.10842514 116.54794312]
[18.38933182 102.68100739]
[18.22625160 87.68189240]
[23.64248848 73.69388580]
[33.86409378 62.71578217]
[47.43046570 56.31628799]
[62.40526581 55.41013718]
[68.86490631 68.94797516]
[69.68642426 53.97048569]
[67.02445984 45.19306564]
[70.66219330 38.72771454]
[71.75711823 23.76773071]
[72.85205078 8.80774593]
[73.94697571 -6.15223789]
[75.04190826 -21.11222267]
[76.13684082 -36.07220459]
[77.23176575 -51.03219223]
[78.32669830 -65.99217224]
[79.42163086 -80.95215607]
[68.08287048 -91.72093201]
[66.37028503 -107.26445770]
[75.09250641 -120.24354553]
[90.13116455 -124.52988434]
[104.38547516 -118.09957886]
[111.12497711 -103.98883820]
[107.16748810 -88.86030579]
[94.38161469 -79.85723114]
[93.28668213 -64.89724731]
[92.19174957 -49.93725967]
[91.09682465 -34.97727585]
[90.00189209 -20.01729202]
[88.90696716 -5.05730820]
[87.81203461 9.90267563]
[86.71710205 24.86265945]
[85.62217712 39.82264328]
[84.66390991 54.79200363]
[83.84239197 69.76949310]
[90.31463623 73.55896759]
[109.73134613 84.92739105]
[122.39039612 76.88073730]
[135.04943848 68.83408356]
[138.60076904 53.66748428]
[151.55346680 45.68737030]
[165.99061584 49.16648865]
[178.64965820 41.11983871]
[191.30870056 33.07318497]
[198.41192627 18.29223824]
[214.78242493 17.32330513]
[223.57963562 31.16313934]
[215.75375366 45.57450485]
[199.35536194 45.73222733]
[186.69631958 53.77888107]
[174.03727722 61.82553482]
[171.05949402 76.37435913]
[158.33604431 84.71514893]
[143.09608459 81.49313354]
[130.43704224 89.53977966]
[117.77799988 97.58643341]
[120.36773682 112.36119080]
[135.00886536 115.62264252]
[149.65000916 118.88409424]
[164.32032776 122.01170349]
[179.01858521 125.00520325]
[193.71684265 127.99870300]
[203.83607483 116.44461823]
[218.38177490 111.51329041]
[233.44125366 114.53122711]
[244.96356201 124.68661499]
[249.84927368 139.24771118]
[246.78414917 154.29763794]
[236.59268188 165.78807068]
[222.01635742 170.62811279]
[206.97610474 167.51582336]
[195.51766968 157.28840637]
[190.72334290 142.69696045]
[176.02508545 139.70346069]
[161.32682800 136.70996094]
[154.11837769 138.46273804]
[146.38856506 133.52523804]
[131.74742126 130.26377869]
[117.10628510 127.00232697]
[103.00051117 132.10400391]
[93.83290100 143.97645569]
[84.66529846 155.84890747]
[75.49769592 167.72135925]
[73.18743896 183.37297058]
[59.28481674 188.71772766]
[50.11721039 200.59017944]
[40.94960403 212.46263123]
[31.78199959 224.33506775]
[22.61439323 236.20751953]
[13.44678783 248.07997131]
[4.27918196 259.95242310]
[-4.88842392 271.82485962]
[-9.86107731 285.97662354]
[-10.13503838 300.97412109]
[-10.40899849 315.97161865]
[-10.68295956 330.96914673]
[-7.70220041 339.64346313]
[-11.10137749 346.23736572]
[-11.64920807 361.22735596]
[-12.19703865 376.21734619]
[1.11806810 383.76498413]
[9.39070225 396.64218140]
[10.71987438 411.88986206]
[4.80014849 426.00421143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[9 165]
[10 163]
[11 162]
[12 161]
[13 160]
[14 46]
[15 45]
[16 44]
[17 43]
[25 36]
[26 35]
[27 34]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[55 153]
[56 152]
[58 150]
[59 149]
[60 148]
[61 147]
[73 102]
[74 101]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[104 123]
[105 122]
[106 121]
[109 118]
[110 117]
[111 116]
[124 146]
[125 145]
[126 144]
[127 142]
[128 141]
[129 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
