%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FCGR2A)
} def

/sequence { (\
CUCUUUUCUAAGCUUGUCUCUUAAAACCCACUGGACGUUGGCACAGUGCUGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.058542352 ubox
1 52 0.066073538 ubox
1 53 0.309369597 ubox
2 11 0.058961446 ubox
2 35 0.006599143 ubox
2 51 0.056131185 ubox
2 52 0.319245235 ubox
2 53 0.093578306 ubox
3 12 0.222966012 ubox
3 34 0.007129061 ubox
3 46 0.009010373 ubox
3 51 0.324540094 ubox
3 52 0.161598388 ubox
3 53 0.049002009 ubox
4 11 0.225677901 ubox
4 12 0.023200813 ubox
4 24 0.015084585 ubox
4 25 0.040736389 ubox
4 26 0.079571658 ubox
4 33 0.006993596 ubox
4 45 0.008819470 ubox
4 51 0.159792487 ubox
4 52 0.049468893 ubox
4 53 0.008606340 ubox
5 10 0.215988103 ubox
5 11 0.029119625 ubox
5 12 0.016618030 ubox
5 23 0.014248210 ubox
5 24 0.044665257 ubox
5 25 0.092749613 ubox
5 26 0.104337948 ubox
5 51 0.047665609 ubox
5 52 0.011914446 ubox
5 53 0.012529691 ubox
6 10 0.025784868 ubox
6 11 0.017352994 ubox
6 12 0.011784133 ubox
6 23 0.037958476 ubox
6 24 0.090313420 ubox
6 25 0.121681414 ubox
6 26 0.116411165 ubox
6 35 0.004745830 ubox
6 45 0.003188522 ubox
6 46 0.007495745 ubox
6 51 0.012453152 ubox
6 52 0.015961283 ubox
6 53 0.062427072 ubox
7 11 0.011572279 ubox
7 23 0.064616542 ubox
7 24 0.121629836 ubox
7 25 0.128260527 ubox
7 34 0.005077006 ubox
7 35 0.021428792 ubox
7 45 0.007374118 ubox
7 51 0.016203572 ubox
7 52 0.098112020 ubox
7 53 0.297189746 ubox
8 33 0.005244597 ubox
8 34 0.023161624 ubox
8 40 0.004872291 ubox
8 41 0.022882290 ubox
8 46 0.353174614 ubox
8 51 0.110077484 ubox
8 52 0.481707411 ubox
8 53 0.171278569 ubox
9 16 0.026779135 ubox
9 23 0.358569777 ubox
9 33 0.022683470 ubox
9 40 0.023439908 ubox
9 45 0.348078471 ubox
9 48 0.005406685 ubox
9 51 0.468785380 ubox
9 52 0.163659207 ubox
10 15 0.026854091 ubox
10 22 0.374835415 ubox
10 32 0.018736244 ubox
10 39 0.023120104 ubox
10 47 0.004981128 ubox
10 50 0.353124096 ubox
11 19 0.068451618 ubox
11 21 0.377118366 ubox
11 22 0.020376603 ubox
11 32 0.013054787 ubox
11 38 0.022026624 ubox
11 39 0.035937388 ubox
11 50 0.422890307 ubox
12 18 0.071268154 ubox
12 20 0.374356831 ubox
12 21 0.021209642 ubox
12 31 0.017443753 ubox
12 38 0.041359558 ubox
12 42 0.390425459 ubox
12 47 0.218856496 ubox
12 49 0.523385344 ubox
13 34 0.005824109 ubox
13 37 0.041559332 ubox
13 41 0.390809454 ubox
13 46 0.219901867 ubox
13 48 0.522709753 ubox
13 52 0.018033056 ubox
13 53 0.008778412 ubox
14 24 0.092659107 ubox
14 25 0.071478605 ubox
14 26 0.027392325 ubox
14 33 0.005578980 ubox
14 40 0.373872413 ubox
14 45 0.212801643 ubox
14 46 0.474352653 ubox
14 51 0.017073445 ubox
14 52 0.008401579 ubox
15 23 0.102684721 ubox
15 24 0.079033940 ubox
15 25 0.031612983 ubox
15 30 0.005222096 ubox
15 37 0.348146382 ubox
15 40 0.005778290 ubox
15 43 0.218065178 ubox
15 45 0.513144596 ubox
15 51 0.006771262 ubox
16 22 0.102309146 ubox
16 27 0.035634172 ubox
16 29 0.006204927 ubox
16 31 0.005944507 ubox
16 36 0.413360847 ubox
16 38 0.019788288 ubox
16 42 0.223724013 ubox
16 44 0.516351708 ubox
16 47 0.003894580 ubox
16 49 0.014265897 ubox
16 50 0.003417704 ubox
17 26 0.036306858 ubox
17 30 0.005673914 ubox
17 34 0.010440883 ubox
17 35 0.413493539 ubox
17 37 0.018071919 ubox
17 41 0.222805751 ubox
17 43 0.509295133 ubox
17 48 0.009895267 ubox
17 52 0.005784295 ubox
17 53 0.008054218 ubox
18 33 0.017400502 ubox
18 34 0.412491337 ubox
18 40 0.222403232 ubox
18 41 0.219450935 ubox
18 46 0.009120625 ubox
18 51 0.007333795 ubox
18 52 0.012860214 ubox
18 53 0.030702869 ubox
19 33 0.319891141 ubox
19 34 0.030402184 ubox
19 35 0.146668566 ubox
19 40 0.186223703 ubox
19 41 0.323063769 ubox
19 45 0.008914464 ubox
19 51 0.011639067 ubox
19 52 0.031250501 ubox
19 53 0.012820433 ubox
20 33 0.231468039 ubox
20 34 0.150568578 ubox
20 40 0.350349229 ubox
20 41 0.218319981 ubox
20 46 0.006659711 ubox
20 51 0.031821536 ubox
20 52 0.022124579 ubox
20 53 0.028041648 ubox
21 33 0.146531917 ubox
21 34 0.027027221 ubox
21 35 0.018504410 ubox
21 40 0.210484433 ubox
21 41 0.167391261 ubox
21 45 0.006419938 ubox
21 51 0.021598607 ubox
21 52 0.028594389 ubox
21 53 0.003913382 ubox
22 33 0.049015705 ubox
22 34 0.017244671 ubox
22 40 0.187653697 ubox
22 48 0.003259654 ubox
22 51 0.028652156 ubox
22 52 0.005309166 ubox
23 32 0.072804152 ubox
23 39 0.211893116 ubox
23 47 0.003591715 ubox
23 50 0.027447997 ubox
24 38 0.207871146 ubox
24 39 0.048883131 ubox
25 38 0.047895178 ubox
25 39 0.149743533 ubox
26 38 0.153274298 ubox
26 47 0.008517108 ubox
27 34 0.409747438 ubox
27 37 0.152311841 ubox
27 41 0.072073216 ubox
27 46 0.008521733 ubox
27 52 0.532125985 ubox
27 53 0.419554652 ubox
28 33 0.408750341 ubox
28 34 0.264675012 ubox
28 40 0.072252015 ubox
28 41 0.094167811 ubox
28 51 0.530547856 ubox
28 52 0.424456048 ubox
28 53 0.014672457 ubox
29 33 0.263655485 ubox
29 40 0.094799594 ubox
29 48 0.579477378 ubox
29 51 0.394344758 ubox
29 52 0.013243260 ubox
30 38 0.086844191 ubox
30 39 0.082807656 ubox
30 47 0.649298728 ubox
30 50 0.270711099 ubox
31 37 0.098374789 ubox
31 41 0.008525873 ubox
31 46 0.699161527 ubox
31 52 0.029404739 ubox
32 40 0.008626844 ubox
32 43 0.018797521 ubox
32 45 0.698936277 ubox
32 48 0.017123660 ubox
32 51 0.029470734 ubox
33 39 0.008488061 ubox
33 42 0.025964047 ubox
33 44 0.698659428 ubox
33 47 0.012778048 ubox
33 50 0.041639882 ubox
34 38 0.007051748 ubox
34 49 0.051033172 ubox
35 47 0.071807261 ubox
36 46 0.072245463 ubox
36 48 0.040446194 ubox
36 51 0.004540724 ubox
37 44 0.045898610 ubox
37 47 0.038188585 ubox
37 49 0.008878580 ubox
38 43 0.042828000 ubox
38 46 0.038371184 ubox
38 48 0.008700022 ubox
38 52 0.092560242 ubox
38 53 0.005212247 ubox
39 45 0.041992639 ubox
39 51 0.116767089 ubox
39 52 0.006237376 ubox
40 44 0.041588008 ubox
40 50 0.156762724 ubox
41 47 0.007989241 ubox
41 49 0.167713948 ubox
42 46 0.008262201 ubox
42 48 0.167718163 ubox
42 51 0.033741582 ubox
43 47 0.135933522 ubox
43 50 0.036935764 ubox
44 51 0.042508011 ubox
45 50 0.038380412 ubox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
showpage
end
%%EOF
