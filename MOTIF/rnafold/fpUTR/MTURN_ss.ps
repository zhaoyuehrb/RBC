%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAGCCGCGGGCGCGGCGCCGCGCUGUCCCCGGCCGCCGCCCGCCCCACUCCGCACCGCAUGUAAACAGUCCCAGCCGGCCCAGCCCGGCCCCGGAGGAGCCCGCGCAGGCCGAGCCGAGCGCCGCGCUGCCCGCCCGGGAGGAGGGCGCCUAGGAGCGGGAGGGCGGGCGGCGGCGGGAGGCGGGCGCGGGGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-27.46276474 849.55004883]
[-22.45516205 863.68951416]
[-26.59926605 878.10571289]
[-38.35107040 887.42742920]
[-53.33209610 888.18170166]
[-65.96072388 880.08740234]
[-71.53189850 866.15887451]
[-76.56465149 880.28936768]
[-81.59739685 894.41992188]
[-81.21583557 911.36956787]
[-97.39746094 916.42834473]
[-106.73806763 902.27954102]
[-95.72791290 889.38714600]
[-90.69515991 875.25665283]
[-85.66241455 861.12609863]
[-81.51788330 846.71008301]
[-78.27761841 832.06420898]
[-75.03735352 817.41839600]
[-71.79708862 802.77252197]
[-68.55681610 788.12670898]
[-73.36212158 774.02850342]
[-62.82641602 762.22558594]
[-59.58615112 747.57971191]
[-56.34588242 732.93389893]
[-53.10561371 718.28808594]
[-49.86534882 703.64221191]
[-46.62508011 688.99639893]
[-43.38481140 674.35052490]
[-51.58470154 661.96917725]
[-48.50724411 647.07006836]
[-35.46496582 638.55322266]
[-32.22469711 623.90740967]
[-29.09841537 609.23681641]
[-26.08630943 594.54235840]
[-31.11028099 580.52056885]
[-20.75941086 568.55523682]
[-17.74730492 553.86077881]
[-14.73519897 539.16632080]
[-11.72309303 524.47186279]
[-8.71098709 509.77737427]
[-5.69888115 495.08291626]
[-2.68677497 480.38845825]
[0.32533109 465.69400024]
[3.33743715 450.99954224]
[6.34954309 436.30505371]
[9.36164951 421.61059570]
[12.37375546 406.91613770]
[15.38586140 392.22167969]
[18.39796829 377.52722168]
[12.02171993 369.53112793]
[11.08348465 359.12658691]
[16.13414383 349.73168945]
[25.71692657 344.56665039]
[29.18457222 329.97299194]
[32.65221786 315.37930298]
[36.11986160 300.78561401]
[39.58750534 286.19195557]
[35.00204086 272.02075195]
[45.72002411 260.38308716]
[49.18766785 245.78939819]
[39.58847809 236.50476074]
[35.80192947 223.58522034]
[38.92027283 210.37705994]
[48.23270035 200.35664368]
[61.38393021 196.21549988]
[65.07811737 181.67752075]
[51.03367996 186.94570923]
[38.07700348 179.38761902]
[35.74976349 164.56925964]
[45.76580048 153.40328979]
[60.74901962 154.11265564]
[69.66552734 166.17591858]
[74.47791290 151.96884155]
[79.29029846 137.76176453]
[84.10268402 123.55469513]
[70.97825623 109.81988525]
[68.85682678 89.52139282]
[80.32627869 70.95671082]
[73.37133026 57.66653824]
[66.41637421 44.37636948]
[59.46142197 31.08619881]
[52.50646973 17.79602814]
[37.35046768 13.31594372]
[29.87495995 -0.60857809]
[34.51502991 -15.71636677]
[48.51781082 -23.04423904]
[63.57569885 -18.24469948]
[70.75511169 -4.16522694]
[65.79663849 10.84107494]
[72.75159454 24.13124466]
[79.70654297 37.42141342]
[86.66149902 50.71158600]
[93.61645508 64.00175476]
[108.60919952 64.46825409]
[116.37693787 51.63618088]
[124.14468384 38.80410385]
[131.91242981 25.97202873]
[139.68017578 13.13995457]
[139.18093872 -7.00756931]
[156.50036621 -15.59607601]
[163.86528015 -28.66351891]
[171.12835693 -41.78783798]
[178.28915405 -54.96823883]
[185.44995117 -68.14864349]
[185.23925781 -83.96844482]
[198.11380005 -91.45812988]
[205.27459717 -104.63853455]
[212.33268738 -117.87421417]
[219.28762817 -131.16438293]
[226.24258423 -144.45455933]
[225.04946899 -162.82667542]
[240.21899414 -171.64395142]
[246.96641541 -185.04067993]
[253.71385193 -198.43739319]
[255.43865967 -215.30337524]
[272.12298584 -218.31494141]
[279.63552856 -203.11633301]
[267.11056519 -191.68997192]
[260.36315918 -178.29324341]
[253.61572266 -164.89653015]
[257.10845947 -153.31044006]
[251.59077454 -142.09193420]
[239.53276062 -137.49960327]
[232.57780457 -124.20943451]
[225.62284851 -110.91926575]
[225.30659485 -103.52991486]
[218.45500183 -97.47772980]
[211.29418945 -84.29733276]
[212.01708984 -69.42028046]
[198.63035583 -60.98784256]
[191.46955872 -47.80744171]
[184.30876160 -34.62704086]
[183.87762451 -27.24349976]
[176.93272400 -21.29860878]
[169.56781006 -8.23116398]
[173.19082642 1.33271325]
[170.89964294 11.52514267]
[163.21598816 18.92340088]
[152.51225281 20.90769768]
[144.74450684 33.73977280]
[136.97676086 46.57184982]
[129.20901489 59.40392303]
[121.44126892 72.23600006]
[131.02371216 86.71873474]
[132.23878479 103.37172699]
[125.42458344 117.88001251]
[112.91835022 126.79863739]
[98.30976105 128.36708069]
[93.49737549 142.57415771]
[88.68498993 156.78123474]
[83.87260437 170.98829651]
[79.61609650 185.37170410]
[75.92191315 199.90968323]
[86.91076660 212.76364136]
[88.06400299 229.46865845]
[79.12487030 243.43081665]
[63.78134537 249.25704956]
[60.31370163 263.85073853]
[64.65113831 279.06576538]
[54.18118286 289.65960693]
[50.71353912 304.25326538]
[47.24589539 318.84695435]
[43.77825165 333.44061279]
[40.31060410 348.03430176]
[46.95218277 367.06222534]
[33.09243011 380.53933716]
[30.08032417 395.23379517]
[27.06821823 409.92825317]
[24.05611229 424.62271118]
[21.04400444 439.31716919]
[18.03189850 454.01162720]
[15.01979351 468.70608521]
[12.00768757 483.40057373]
[8.99558067 498.09503174]
[5.98347473 512.78948975]
[2.97136879 527.48394775]
[-0.04073726 542.17840576]
[-3.05284333 556.87286377]
[-6.06494951 571.56732178]
[-1.25642395 586.64013672]
[-11.39184761 597.55444336]
[-14.40395355 612.24890137]
[-13.06120777 621.29156494]
[-17.57885551 627.14764404]
[-20.81912422 641.79351807]
[-12.58675003 655.01715088]
[-16.08147812 669.82397461]
[-28.73897171 677.59082031]
[-31.97923851 692.23663330]
[-35.21950531 706.88250732]
[-38.45977402 721.52832031]
[-41.70004272 736.17419434]
[-44.94030762 750.82000732]
[-48.18057632 765.46582031]
[-43.60704041 780.61157227]
[-53.91097641 791.36694336]
[-57.15124512 806.01281738]
[-60.39151001 820.65863037]
[-63.63177872 835.30450439]
[-66.87204742 849.95031738]
[-54.75557327 841.10778809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 15]
[8 14]
[9 13]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[31 185]
[32 184]
[33 182]
[34 181]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[59 158]
[60 157]
[65 153]
[66 152]
[72 151]
[73 150]
[74 149]
[75 148]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[100 135]
[101 134]
[102 132]
[103 131]
[104 130]
[106 128]
[107 127]
[108 125]
[109 124]
[110 123]
[112 120]
[113 119]
[114 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
