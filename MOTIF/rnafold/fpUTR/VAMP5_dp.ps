%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VAMP5)
} def

/sequence { (\
GCUCUUCCUCCGGGGCCGCUGGCACUGCGGCCGCUCCGCAGGCAGAGAAGCCGGGAGCGGGCGAGGCGGCGGCGGCAGCAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.047661802 ubox
1 76 0.170913663 ubox
1 79 0.453180507 ubox
1 82 0.830920019 ubox
2 13 0.009951266 ubox
2 14 0.062527632 ubox
2 15 0.048376539 ubox
2 47 0.003374315 ubox
2 75 0.170887097 ubox
2 78 0.453431453 ubox
2 81 0.831481465 ubox
3 12 0.009628069 ubox
3 13 0.062374007 ubox
3 14 0.052919575 ubox
3 46 0.003395528 ubox
3 74 0.152140849 ubox
3 75 0.021240756 ubox
3 77 0.435970545 ubox
3 80 0.819329608 ubox
4 12 0.062756864 ubox
4 13 0.059608322 ubox
4 14 0.036539526 ubox
4 15 0.005839339 ubox
4 45 0.003402585 ubox
4 74 0.066898551 ubox
4 75 0.289462329 ubox
4 78 0.731641389 ubox
4 81 0.011751918 ubox
5 12 0.056285559 ubox
5 13 0.034876682 ubox
5 14 0.023040677 ubox
5 15 0.006032538 ubox
5 44 0.003335893 ubox
5 74 0.270883857 ubox
5 75 0.060620552 ubox
5 77 0.695407239 ubox
5 78 0.161620518 ubox
5 80 0.012595640 ubox
5 81 0.007428038 ubox
6 12 0.029813938 ubox
6 13 0.031338484 ubox
6 14 0.143766241 ubox
6 15 0.048080604 ubox
6 74 0.053676668 ubox
6 75 0.052233864 ubox
6 77 0.154155008 ubox
6 80 0.014266729 ubox
7 12 0.034775949 ubox
7 13 0.173489170 ubox
7 14 0.861086338 ubox
7 15 0.008399283 ubox
7 42 0.003412392 ubox
7 72 0.004562627 ubox
7 74 0.035612204 ubox
7 75 0.417895070 ubox
8 12 0.172446082 ubox
8 13 0.863323849 ubox
8 14 0.030202880 ubox
8 41 0.003415427 ubox
8 71 0.004563079 ubox
8 74 0.417578256 ubox
8 75 0.050725269 ubox
8 78 0.087897086 ubox
8 81 0.007119544 ubox
9 13 0.029027163 ubox
9 14 0.015107596 ubox
9 40 0.003340289 ubox
9 74 0.049376279 ubox
9 75 0.025210263 ubox
9 77 0.088214706 ubox
9 80 0.007009146 ubox
10 14 0.034011634 ubox
10 69 0.004261913 ubox
10 72 0.069501488 ubox
10 74 0.029467834 ubox
10 75 0.143615379 ubox
11 38 0.003436571 ubox
11 68 0.004262823 ubox
11 71 0.069455165 ubox
11 74 0.143869723 ubox
11 83 0.014608157 ubox
12 37 0.003446448 ubox
12 67 0.004177875 ubox
12 70 0.029488534 ubox
12 73 0.063059515 ubox
12 82 0.015581167 ubox
13 36 0.003445651 ubox
14 32 0.005446772 ubox
14 35 0.003306861 ubox
15 23 0.006095508 ubox
15 31 0.005646622 ubox
15 34 0.003305645 ubox
15 67 0.007039927 ubox
15 70 0.068127751 ubox
15 73 0.702487742 ubox
15 76 0.700527756 ubox
15 79 0.003469825 ubox
15 82 0.004631224 ubox
16 22 0.006107179 ubox
16 30 0.005806328 ubox
16 33 0.003301305 ubox
16 66 0.007046868 ubox
16 69 0.073648916 ubox
16 72 0.705913925 ubox
16 75 0.702551035 ubox
16 81 0.004625807 ubox
17 21 0.006064427 ubox
17 29 0.005828168 ubox
17 65 0.006935424 ubox
17 68 0.073658197 ubox
17 71 0.706092126 ubox
17 74 0.702691708 ubox
17 83 0.041606829 ubox
18 28 0.007640512 ubox
18 31 0.003687966 ubox
18 67 0.073284248 ubox
18 70 0.706116290 ubox
18 73 0.702688442 ubox
18 79 0.005588841 ubox
18 82 0.044475504 ubox
19 27 0.007754846 ubox
19 30 0.003819611 ubox
19 65 0.006169854 ubox
19 66 0.072835850 ubox
19 69 0.706083389 ubox
19 72 0.702680214 ubox
19 78 0.005594200 ubox
19 81 0.044481503 ubox
20 29 0.003834219 ubox
20 64 0.008675013 ubox
20 65 0.044080817 ubox
20 68 0.665365691 ubox
20 71 0.692654340 ubox
20 77 0.005578097 ubox
20 80 0.044363144 ubox
21 28 0.004754066 ubox
21 67 0.488787457 ubox
21 70 0.649425191 ubox
21 76 0.005406342 ubox
21 79 0.043113778 ubox
22 28 0.008754576 ubox
22 62 0.010815288 ubox
22 67 0.706880606 ubox
22 70 0.229400040 ubox
22 76 0.004697304 ubox
22 79 0.010770125 ubox
23 27 0.008969684 ubox
23 61 0.010816360 ubox
23 66 0.839120562 ubox
23 69 0.306559680 ubox
23 75 0.004765202 ubox
23 78 0.014890583 ubox
25 65 0.867295370 ubox
25 66 0.416518306 ubox
25 69 0.064288000 ubox
25 72 0.004141595 ubox
25 75 0.043296155 ubox
25 78 0.007147478 ubox
26 63 0.032030475 ubox
26 64 0.865797733 ubox
26 65 0.382562049 ubox
26 68 0.065396649 ubox
26 71 0.004148592 ubox
26 74 0.043451817 ubox
26 77 0.007267805 ubox
27 62 0.041871995 ubox
27 67 0.066100845 ubox
27 70 0.004166000 ubox
27 73 0.043541696 ubox
27 76 0.007292382 ubox
28 61 0.041711469 ubox
28 63 0.990736313 ubox
28 66 0.061726038 ubox
28 69 0.004125498 ubox
28 72 0.043524219 ubox
28 75 0.007269585 ubox
29 62 0.997003865 ubox
30 62 0.025966770 ubox
30 67 0.003899798 ubox
30 70 0.043506050 ubox
30 73 0.006966220 ubox
31 60 0.998605949 ubox
31 61 0.022453903 ubox
31 66 0.003853086 ubox
31 69 0.043521864 ubox
31 72 0.006936272 ubox
32 59 0.998849565 ubox
32 60 0.015900764 ubox
32 65 0.003531433 ubox
32 68 0.043517502 ubox
32 71 0.006896581 ubox
33 58 0.998996827 ubox
33 62 0.003725831 ubox
33 67 0.043494528 ubox
33 70 0.006516861 ubox
34 57 0.999006254 ubox
34 61 0.003724249 ubox
34 66 0.043375472 ubox
34 69 0.006472100 ubox
35 55 0.011907219 ubox
35 56 0.998792068 ubox
35 61 0.020983634 ubox
35 64 0.003959928 ubox
35 65 0.037390010 ubox
35 68 0.005595849 ubox
36 54 0.027506896 ubox
36 55 0.998618722 ubox
36 60 0.040659917 ubox
36 61 0.003226332 ubox
36 65 0.003490863 ubox
37 53 0.036948316 ubox
37 54 0.995570475 ubox
37 59 0.040801671 ubox
37 63 0.016574962 ubox
38 51 0.019149687 ubox
38 52 0.019804723 ubox
38 58 0.040859338 ubox
38 62 0.016626581 ubox
39 50 0.019803023 ubox
39 57 0.040512755 ubox
39 61 0.016597798 ubox
41 52 0.996628352 ubox
42 51 0.999555191 ubox
42 58 0.012206210 ubox
43 50 0.998676676 ubox
43 57 0.012198655 ubox
51 60 0.007012756 ubox
52 59 0.007298147 ubox
53 58 0.009096926 ubox
61 67 0.004794160 ubox
61 70 0.003858968 ubox
62 66 0.004765262 ubox
62 69 0.003929271 ubox
69 76 0.006223349 ubox
70 75 0.006234940 ubox
72 79 0.013092057 ubox
72 82 0.008177444 ubox
73 78 0.013665031 ubox
73 81 0.008218533 ubox
73 83 0.003306955 ubox
74 82 0.016261157 ubox
75 82 0.187482177 ubox
76 81 0.187557232 ubox
1 82 0.9500000 lbox
2 81 0.9500000 lbox
3 80 0.9500000 lbox
4 78 0.9500000 lbox
5 77 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
15 76 0.9500000 lbox
16 75 0.9500000 lbox
17 74 0.9500000 lbox
18 73 0.9500000 lbox
19 72 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
22 67 0.9500000 lbox
23 66 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
28 63 0.9500000 lbox
29 62 0.9500000 lbox
31 60 0.9500000 lbox
32 59 0.9500000 lbox
33 58 0.9500000 lbox
34 57 0.9500000 lbox
35 56 0.9500000 lbox
36 55 0.9500000 lbox
37 54 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
showpage
end
%%EOF
