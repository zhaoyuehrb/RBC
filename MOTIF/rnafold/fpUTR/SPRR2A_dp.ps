%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPRR2A)
} def

/sequence { (\
AAACCCCUGGUACCUGAGCACUGAUCUGCCUUGGAGAACCUGAUCCUGAGACUCCAGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 11 0.707236792 ubox
4 10 0.733126126 ubox
4 34 0.025392261 ubox
4 61 0.142114657 ubox
5 9 0.728068851 ubox
5 33 0.024948120 ubox
5 34 0.147414604 ubox
5 60 0.143419293 ubox
5 61 0.082844852 ubox
6 33 0.147731520 ubox
6 34 0.066241917 ubox
6 60 0.083322657 ubox
6 61 0.187485506 ubox
7 18 0.148284407 ubox
7 33 0.066425303 ubox
7 34 0.006360634 ubox
7 36 0.012430410 ubox
7 57 0.179941475 ubox
7 60 0.190664694 ubox
7 61 0.005285423 ubox
8 16 0.033811671 ubox
8 17 0.149474007 ubox
8 20 0.085380867 ubox
8 23 0.220535527 ubox
8 33 0.005926191 ubox
8 35 0.012357640 ubox
8 42 0.003989325 ubox
8 56 0.181196192 ubox
8 59 0.190330558 ubox
9 15 0.055335428 ubox
9 19 0.094468330 ubox
9 22 0.323906081 ubox
9 26 0.006024374 ubox
9 30 0.169544250 ubox
9 31 0.009610607 ubox
9 40 0.049010896 ubox
9 55 0.181467702 ubox
9 58 0.187088883 ubox
10 14 0.057105035 ubox
10 19 0.176934086 ubox
10 21 0.333446303 ubox
10 25 0.009441606 ubox
10 29 0.170513543 ubox
10 30 0.010789278 ubox
10 39 0.049804281 ubox
10 52 0.006183441 ubox
10 54 0.181236905 ubox
10 58 0.021831272 ubox
11 18 0.174830206 ubox
11 20 0.330145789 ubox
11 23 0.008621326 ubox
11 24 0.009762565 ubox
11 28 0.169884261 ubox
11 38 0.048942118 ubox
11 51 0.007367679 ubox
11 57 0.028083165 ubox
12 22 0.010304314 ubox
12 27 0.162249751 ubox
13 34 0.085634641 ubox
13 61 0.364646949 ubox
14 33 0.085836148 ubox
14 34 0.093261249 ubox
14 36 0.009038545 ubox
14 50 0.171729422 ubox
14 57 0.057914760 ubox
14 60 0.368959312 ubox
14 61 0.005281565 ubox
15 23 0.021187414 ubox
15 33 0.093249815 ubox
15 35 0.008745205 ubox
15 49 0.171681132 ubox
15 56 0.057884574 ubox
15 59 0.368639854 ubox
15 60 0.003575854 ubox
16 22 0.024097297 ubox
16 26 0.145451656 ubox
16 32 0.104256328 ubox
16 45 0.006154032 ubox
16 54 0.027531735 ubox
16 55 0.054353282 ubox
16 58 0.367166579 ubox
17 25 0.145040279 ubox
17 27 0.017508227 ubox
17 31 0.114784965 ubox
17 32 0.005898144 ubox
17 44 0.005778602 ubox
17 47 0.169301242 ubox
17 53 0.033375923 ubox
18 26 0.018682456 ubox
18 29 0.415526268 ubox
18 30 0.083384515 ubox
18 46 0.165591557 ubox
18 52 0.030864219 ubox
18 58 0.015895558 ubox
19 28 0.424689793 ubox
19 42 0.023631049 ubox
19 48 0.017160455 ubox
19 57 0.017212820 ubox
20 27 0.382607269 ubox
20 41 0.022908736 ubox
20 47 0.016670603 ubox
21 34 0.004019934 ubox
21 50 0.013674810 ubox
21 57 0.084092636 ubox
21 60 0.021187960 ubox
21 61 0.015973789 ubox
22 33 0.004029396 ubox
22 42 0.005612511 ubox
22 49 0.013507565 ubox
22 56 0.084256684 ubox
22 59 0.021015323 ubox
22 60 0.006757642 ubox
23 32 0.004719741 ubox
23 41 0.006621096 ubox
23 45 0.164378277 ubox
23 54 0.038238101 ubox
23 55 0.079588881 ubox
23 58 0.020719315 ubox
24 31 0.004743661 ubox
24 44 0.164488897 ubox
24 53 0.046758619 ubox
25 35 0.019453801 ubox
25 37 0.029157750 ubox
25 43 0.164380996 ubox
25 49 0.007289174 ubox
25 51 0.083756948 ubox
25 61 0.558078502 ubox
26 33 0.003816098 ubox
26 34 0.019630214 ubox
26 36 0.029993102 ubox
26 42 0.164247023 ubox
26 48 0.007330123 ubox
26 50 0.084385438 ubox
26 57 0.016250181 ubox
26 60 0.861838019 ubox
26 61 0.013299760 ubox
27 33 0.019201476 ubox
27 35 0.030068920 ubox
27 49 0.083783103 ubox
27 56 0.016191025 ubox
27 59 0.863671297 ubox
27 60 0.009357952 ubox
28 32 0.009014015 ubox
28 41 0.016230108 ubox
28 47 0.004039297 ubox
28 55 0.015974473 ubox
28 58 0.864212638 ubox
29 57 0.838717464 ubox
29 61 0.029494859 ubox
30 36 0.033267072 ubox
30 50 0.112015950 ubox
30 57 0.206065706 ubox
30 60 0.033600387 ubox
30 61 0.004595265 ubox
31 35 0.030085009 ubox
31 37 0.025944231 ubox
31 38 0.054052983 ubox
31 43 0.010483990 ubox
31 49 0.112246693 ubox
31 56 0.194316077 ubox
31 57 0.303074172 ubox
31 59 0.029659221 ubox
31 60 0.004421104 ubox
32 36 0.024389141 ubox
32 37 0.056673930 ubox
32 42 0.011099497 ubox
32 48 0.106884483 ubox
32 56 0.870423063 ubox
33 40 0.046643720 ubox
33 41 0.025865528 ubox
33 46 0.136950066 ubox
33 47 0.066518146 ubox
33 55 0.950831922 ubox
34 39 0.046516973 ubox
34 40 0.026038548 ubox
34 45 0.137431345 ubox
34 46 0.066296160 ubox
34 54 0.950920651 ubox
35 41 0.010464844 ubox
35 44 0.137211891 ubox
35 47 0.004300543 ubox
35 53 0.950690146 ubox
36 40 0.010816983 ubox
36 45 0.066935429 ubox
36 46 0.004982734 ubox
36 52 0.949117270 ubox
36 54 0.005685879 ubox
37 44 0.064034442 ubox
37 53 0.006249294 ubox
39 61 0.197125791 ubox
40 50 0.872080667 ubox
40 57 0.010992063 ubox
40 60 0.199498457 ubox
41 48 0.059317561 ubox
41 49 0.869244996 ubox
41 56 0.011248337 ubox
41 59 0.199493695 ubox
42 47 0.073559743 ubox
42 54 0.005341461 ubox
42 55 0.010818471 ubox
42 58 0.199148138 ubox
43 53 0.006372781 ubox
44 51 0.106032810 ubox
45 50 0.106312634 ubox
45 60 0.003971280 ubox
45 61 0.050179121 ubox
46 57 0.199890929 ubox
46 60 0.051335839 ubox
47 56 0.200756143 ubox
47 59 0.051313833 ubox
48 54 0.022360800 ubox
48 55 0.200095799 ubox
48 58 0.051174321 ubox
49 53 0.023260815 ubox
54 61 0.005898451 ubox
55 60 0.006038825 ubox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
5 9 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
showpage
end
%%EOF
