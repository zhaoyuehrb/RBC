%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGGCAGUGACCGUAAAGCUGUUCGCUCGGUGCGACGCAAGUCUCAGCUCAGCGCGCUUAUCCUGGGUCCACCGGCGCUACCGCCCCCCGACGUGAGAGAGCGAAGUUCUUGGGCCGCGCUCCCUCCCUACCUGGGUGCCCUCCCCCUCCGGGAGCCUGGGUCCCCGGGGCGGUCGCGGCGGCUGCAUCCUCAGGCCAGGCCGCGGGGGGAGGGGGCGGCACGGGCCUCCGAAAGCGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[82.83550262 134.29244995]
[73.63612366 130.39601135]
[63.51404190 141.46594238]
[53.39196396 152.53588867]
[43.26988602 163.60581970]
[33.14780807 174.67576599]
[23.02573204 185.74569702]
[12.90365314 196.81564331]
[15.86202335 211.93365479]
[9.42639732 225.73350525]
[-3.74526644 233.01164246]
[-18.50028801 231.16033936]
[-28.62236595 242.23027039]
[-38.74444199 253.30021667]
[-48.65262222 264.56201172]
[-58.34326172 276.01153564]
[-68.03390503 287.46102905]
[-64.49864197 302.45465088]
[-70.40097046 316.49087524]
[-83.28420258 324.26818848]
[-98.09930420 322.98339844]
[-107.78994751 334.43292236]
[-117.48058319 345.88241577]
[-127.17122650 357.33193970]
[-125.61122131 373.05905151]
[-135.69335938 385.22976685]
[-151.43608093 386.62341309]
[-163.49951172 376.41314697]
[-164.72663879 360.65658569]
[-154.38941956 348.70178223]
[-138.62074280 347.64129639]
[-128.93009949 336.19180298]
[-119.23946381 324.74227905]
[-109.54882050 313.29275513]
[-113.26425934 298.89367676]
[-107.72293854 284.90231323]
[-94.85509491 276.76156616]
[-79.48342133 277.77041626]
[-69.79277802 266.32089233]
[-60.10213852 254.87136841]
[-60.01929092 251.36814880]
[-58.24975204 247.72897339]
[-54.74698257 244.73977661]
[-49.81438065 243.17813110]
[-39.69230270 232.10820007]
[-29.57022667 221.03825378]
[-32.73141098 206.50743103]
[-26.65824890 192.73860168]
[-13.48803902 185.09667969]
[1.83371472 186.69355774]
[11.95579243 175.62362671]
[22.07787132 164.55368042]
[32.19994736 153.48374939]
[42.32202530 142.41380310]
[52.44410324 131.34387207]
[62.56618118 120.27392578]
[57.85811615 106.03194427]
[43.13248825 103.17607880]
[28.40686417 100.32021332]
[13.68124008 97.46434784]
[-1.04438484 94.60848236]
[6.56234026 107.53665161]
[2.91426706 122.08628082]
[-9.89218521 129.89619446]
[-24.49759865 126.47831726]
[-32.50875854 113.79678345]
[-29.32193375 99.13922119]
[-16.76867294 90.92885590]
[-31.23247528 86.95413208]
[-45.83195114 93.60505676]
[-60.06863022 86.20934296]
[-63.02135086 70.44036102]
[-52.42503357 58.39470673]
[-36.40827179 59.31278992]
[-27.25775146 72.49032593]
[-12.79394913 76.46504974]
[1.81148171 79.88285065]
[16.53710747 82.73872375]
[31.26273155 85.59458923]
[45.98835754 88.45045471]
[60.71398163 91.30632019]
[74.72849274 71.15657806]
[96.86969757 63.67446136]
[117.99853516 70.48258972]
[128.40002441 59.67476273]
[138.80151367 48.86693954]
[149.20300293 38.05911255]
[159.60449219 27.25129128]
[170.00598145 16.44346619]
[180.40745544 5.63564253]
[190.80894470 -5.17218113]
[179.11210632 4.21844864]
[164.34030151 6.82490778]
[150.13594055 2.00449634]
[140.00155640 -9.05417061]
[136.43606567 -23.62425041]
[140.31863403 -38.11306000]
[150.69192505 -48.94795227]
[164.99807739 -53.45726395]
[179.70950317 -50.52909470]
[191.19863892 -40.88546371]
[196.63237000 -26.90551186]
[193.02833557 -41.46610641]
[189.42430115 -56.02669907]
[185.82025146 -70.58729553]
[182.21621704 -85.14788818]
[168.96585083 -93.33725739]
[165.51826477 -108.15510559]
[173.40724182 -120.73683167]
[169.80319214 -135.29742432]
[166.19915771 -149.85801697]
[154.44378662 -161.29232788]
[158.73023987 -177.12135315]
[174.64900208 -181.06156921]
[185.82418823 -169.05960083]
[180.75975037 -153.46206665]
[184.36378479 -138.90147400]
[187.96783447 -124.34087372]
[200.81483459 -116.89172363]
[204.67727661 -102.17655182]
[196.77680969 -88.75193024]
[200.38084412 -74.19133759]
[203.98489380 -59.63074112]
[207.58892822 -45.07014847]
[211.19297791 -30.50955200]
[224.54936218 -23.68263245]
[238.46189880 -29.28988838]
[252.37443542 -34.89714432]
[266.28695679 -40.50440216]
[280.19952393 -46.11165619]
[294.11206055 -51.71891403]
[291.93194580 -60.03210831]
[294.00460815 -69.86754608]
[301.01190186 -79.05616760]
[311.41339111 -89.86399078]
[321.81488037 -100.67181396]
[332.21636963 -111.47963715]
[342.61785889 -122.28746033]
[353.01934814 -133.09529114]
[357.01394653 -148.40390015]
[371.41433716 -152.20887756]
[381.81582642 -163.01670837]
[392.21731567 -173.82452393]
[402.61880493 -184.63235474]
[412.74087524 -195.70228577]
[422.57693481 -207.02713013]
[432.41299438 -218.35195923]
[442.24908447 -229.67678833]
[442.56201172 -245.71678162]
[455.38479614 -255.35812378]
[470.88092041 -251.20478821]
[477.16305542 -236.44285583]
[469.41207886 -222.39643860]
[453.57391357 -219.84071350]
[443.73782349 -208.51588440]
[433.90176392 -197.19105530]
[424.06570435 -185.86622620]
[424.11441040 -183.08531189]
[423.07733154 -180.11753845]
[420.87792969 -177.37170410]
[417.58718872 -175.27682495]
[413.42660522 -174.23086548]
[403.02514648 -163.42303467]
[392.62365723 -152.61521912]
[382.22216797 -141.80738831]
[378.97155762 -127.27182007]
[363.82717896 -122.69379425]
[353.42568970 -111.88597107]
[343.02420044 -101.07814789]
[332.62271118 -90.27032471]
[322.22122192 -79.46250153]
[311.81973267 -68.65467834]
[316.70928955 -54.47397995]
[331.56152344 -52.37373734]
[346.41375732 -50.27349472]
[361.26599121 -48.17325211]
[376.11822510 -46.07300949]
[390.97048950 -43.97276688]
[401.71392822 -51.08265305]
[414.02862549 -49.04248810]
[421.41470337 -39.48104477]
[436.23892212 -37.19130325]
[451.06314087 -34.90156555]
[457.31878662 -36.92305374]
[462.83538818 -35.68406296]
[466.23474121 -32.35939026]
[480.99563599 -29.69180679]
[495.75653076 -27.02422523]
[508.59658813 -36.23878479]
[524.17779541 -33.59275436]
[533.25610352 -20.65597725]
[530.44549561 -5.10361528]
[517.41345215 3.83739305]
[501.89166260 0.86250502]
[493.08892822 -12.26333046]
[478.32803345 -14.93091297]
[463.56713867 -17.59849548]
[448.77337646 -20.07735825]
[433.94918823 -22.36709785]
[419.12496948 -24.65683746]
[403.11840820 -17.43873215]
[388.87023926 -29.12052917]
[374.01800537 -31.22077179]
[359.16577148 -33.32101440]
[344.31350708 -35.42125702]
[329.46127319 -37.52149963]
[314.60903931 -39.62173843]
[299.71929932 -37.80637741]
[285.80676270 -32.19911957]
[271.89422607 -26.59186363]
[257.98168945 -20.98460770]
[244.06915283 -15.37735176]
[230.15661621 -9.77009583]
[219.02465820 4.88676691]
[201.61677551 5.22930622]
[191.21528625 16.03713036]
[180.81379700 26.84495354]
[170.41230774 37.65277863]
[160.01081848 48.46060181]
[149.60932922 59.26842499]
[139.20785522 70.07624817]
[128.80636597 80.88407135]
[133.50273132 91.46816254]
[134.44079590 103.00933838]
[131.51535034 114.21293640]
[125.05455780 123.82214355]
[115.78316498 130.75900269]
[119.57286072 145.27238464]
[123.36254883 159.78576660]
[127.15223694 174.29914856]
[132.33677673 181.79090881]
[130.89639282 189.02209473]
[134.50042725 203.58268738]
[138.10447693 218.14328003]
[149.85984802 229.57757568]
[145.57337952 245.40661621]
[129.65463257 249.34681702]
[118.47943115 237.34486389]
[123.54387665 221.74731445]
[119.93984222 207.18672180]
[116.33580017 192.62612915]
[112.63885498 178.08885193]
[108.84916687 163.57546997]
[105.05947876 149.06208801]
[101.26978302 134.54870605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 56]
[3 55]
[4 54]
[5 53]
[6 52]
[7 51]
[8 50]
[12 46]
[13 45]
[14 44]
[15 40]
[16 39]
[17 38]
[21 34]
[22 33]
[23 32]
[24 31]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[68 76]
[69 75]
[84 222]
[85 221]
[86 220]
[87 219]
[88 218]
[89 217]
[90 216]
[91 215]
[102 125]
[103 124]
[104 123]
[105 122]
[106 121]
[109 118]
[110 117]
[111 116]
[126 213]
[127 212]
[128 211]
[129 210]
[130 209]
[131 208]
[134 172]
[135 171]
[136 170]
[137 169]
[138 168]
[139 167]
[141 165]
[142 164]
[143 163]
[144 162]
[145 157]
[146 156]
[147 155]
[148 154]
[173 207]
[174 206]
[175 205]
[176 204]
[177 203]
[178 202]
[181 200]
[182 199]
[183 198]
[186 197]
[187 196]
[188 195]
[227 245]
[228 244]
[229 243]
[230 242]
[232 241]
[233 240]
[234 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
