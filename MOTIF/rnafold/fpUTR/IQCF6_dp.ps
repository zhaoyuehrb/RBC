%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IQCF6)
} def

/sequence { (\
GGACUUACCUGACAGUUAGAGAAGACAGCCAUAAAGAUUCAGUCAUGGUGGCGUGGAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.184609616 ubox
1 10 0.054423373 ubox
1 17 0.013772163 ubox
1 30 0.031243715 ubox
1 40 0.008802418 ubox
2 8 0.184814282 ubox
2 9 0.057482189 ubox
2 16 0.009267028 ubox
2 17 0.340007655 ubox
2 29 0.031218204 ubox
2 39 0.008816904 ubox
3 16 0.350735327 ubox
3 38 0.008752511 ubox
3 54 0.073683411 ubox
4 15 0.352167256 ubox
4 19 0.111350848 ubox
4 21 0.093067721 ubox
4 24 0.834340718 ubox
4 28 0.013152126 ubox
4 36 0.008880505 ubox
4 51 0.015849908 ubox
4 53 0.075499723 ubox
4 56 0.023926146 ubox
5 12 0.017563200 ubox
5 14 0.346788857 ubox
5 15 0.004436253 ubox
5 18 0.107666405 ubox
5 19 0.031616240 ubox
5 20 0.092294168 ubox
5 21 0.014020114 ubox
5 22 0.026929627 ubox
5 23 0.838719205 ubox
5 24 0.013485498 ubox
5 25 0.018540731 ubox
5 27 0.012372498 ubox
5 35 0.008663489 ubox
5 50 0.011428658 ubox
5 51 0.076734216 ubox
5 55 0.018875424 ubox
5 56 0.046616245 ubox
5 57 0.010622377 ubox
5 58 0.022579265 ubox
5 59 0.021202706 ubox
6 11 0.024893698 ubox
6 14 0.013470695 ubox
6 18 0.039936517 ubox
6 19 0.077596066 ubox
6 20 0.013848673 ubox
6 21 0.029021094 ubox
6 22 0.834791093 ubox
6 23 0.013760969 ubox
6 24 0.020493131 ubox
6 33 0.003320605 ubox
6 34 0.007850387 ubox
6 50 0.083602993 ubox
6 55 0.057439654 ubox
6 56 0.009833514 ubox
6 57 0.024679190 ubox
6 58 0.023634490 ubox
7 16 0.124407343 ubox
7 17 0.041008998 ubox
7 32 0.003668712 ubox
7 49 0.085242821 ubox
7 54 0.060175532 ubox
8 15 0.129709092 ubox
8 48 0.085408373 ubox
8 53 0.060265503 ubox
8 56 0.061779502 ubox
9 15 0.051696106 ubox
9 19 0.866483695 ubox
9 21 0.077933963 ubox
9 24 0.049901602 ubox
9 28 0.006638461 ubox
9 42 0.008384008 ubox
9 47 0.085383000 ubox
9 51 0.004002751 ubox
9 55 0.061480524 ubox
9 56 0.024084492 ubox
10 14 0.047853338 ubox
10 18 0.866862606 ubox
10 20 0.077906936 ubox
10 23 0.049934461 ubox
10 27 0.012659552 ubox
10 31 0.007342893 ubox
10 41 0.008584767 ubox
10 45 0.083481433 ubox
10 50 0.003880688 ubox
10 53 0.006855667 ubox
10 55 0.023077915 ubox
11 17 0.856870643 ubox
11 26 0.013120421 ubox
11 30 0.007742295 ubox
11 40 0.008607220 ubox
11 44 0.085372904 ubox
11 52 0.003519404 ubox
11 54 0.011718795 ubox
12 16 0.730451818 ubox
12 39 0.008278206 ubox
12 43 0.085352030 ubox
12 54 0.036900874 ubox
13 42 0.085104851 ubox
13 53 0.039204220 ubox
13 55 0.017377304 ubox
14 39 0.041016213 ubox
14 54 0.015500273 ubox
15 26 0.148457896 ubox
15 29 0.007924860 ubox
15 38 0.051865486 ubox
15 52 0.005135681 ubox
15 60 0.019282472 ubox
16 22 0.010014440 ubox
16 23 0.013130450 ubox
16 24 0.009595969 ubox
16 25 0.148928258 ubox
16 28 0.007898201 ubox
16 34 0.009776410 ubox
16 35 0.003719633 ubox
16 36 0.003305990 ubox
16 37 0.051935099 ubox
16 51 0.005111652 ubox
16 57 0.004196136 ubox
16 58 0.004037932 ubox
16 59 0.019389793 ubox
17 21 0.009728642 ubox
17 22 0.013914027 ubox
17 23 0.011522526 ubox
17 24 0.144608039 ubox
17 27 0.007264489 ubox
17 33 0.010715641 ubox
17 34 0.003597778 ubox
17 35 0.003507785 ubox
17 36 0.050227859 ubox
17 41 0.006500021 ubox
17 50 0.004943349 ubox
17 56 0.004471675 ubox
17 57 0.004558633 ubox
17 58 0.018028501 ubox
18 32 0.011315139 ubox
18 49 0.003549229 ubox
19 39 0.005292451 ubox
19 40 0.012412857 ubox
20 38 0.005444918 ubox
20 39 0.012129584 ubox
21 38 0.008537416 ubox
21 40 0.017409448 ubox
22 39 0.017398099 ubox
23 38 0.016900376 ubox
24 40 0.003511796 ubox
24 44 0.003624991 ubox
25 39 0.003294616 ubox
25 43 0.003730877 ubox
25 54 0.469336635 ubox
26 42 0.003761775 ubox
26 50 0.013189107 ubox
26 53 0.478852834 ubox
26 55 0.729477276 ubox
27 49 0.010686698 ubox
27 54 0.701057701 ubox
28 49 0.023587904 ubox
28 52 0.993670519 ubox
29 48 0.026557424 ubox
29 51 0.994779940 ubox
29 56 0.016504565 ubox
30 47 0.026590938 ubox
30 50 0.994773798 ubox
30 55 0.016557432 ubox
31 38 0.007179796 ubox
31 46 0.026535998 ubox
31 49 0.993743577 ubox
31 54 0.016492290 ubox
32 37 0.007426692 ubox
32 45 0.025979966 ubox
32 47 0.047326642 ubox
32 48 0.983355100 ubox
32 53 0.016142410 ubox
33 39 0.006699286 ubox
33 46 0.062411475 ubox
34 38 0.005483864 ubox
36 44 0.979975481 ubox
37 43 0.973376027 ubox
37 46 0.014480913 ubox
37 49 0.006679727 ubox
38 42 0.900990284 ubox
38 45 0.015831417 ubox
38 48 0.005669006 ubox
38 57 0.031796918 ubox
38 58 0.008513520 ubox
39 47 0.003408979 ubox
39 48 0.043682247 ubox
39 56 0.034369431 ubox
39 57 0.009633195 ubox
40 47 0.073689054 ubox
40 55 0.035541315 ubox
40 56 0.009298177 ubox
41 46 0.071150642 ubox
41 54 0.034178174 ubox
42 52 0.038564057 ubox
43 51 0.038616215 ubox
43 56 0.020639741 ubox
44 50 0.038591708 ubox
44 55 0.027171550 ubox
45 49 0.031278409 ubox
45 54 0.027301496 ubox
46 53 0.027298034 ubox
47 52 0.027243148 ubox
53 60 0.123777717 ubox
54 59 0.123851484 ubox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
12 16 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
showpage
end
%%EOF
