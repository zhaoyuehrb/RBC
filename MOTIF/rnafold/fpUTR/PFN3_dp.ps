%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PFN3)
} def

/sequence { (\
CGCGUGGCGCCUCUAUAUUUCCCCGAGAGGUGCGAGGCGGCUGGGCGCACUCGGAGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.502549051 ubox
1 43 0.012479608 ubox
1 47 0.054527543 ubox
1 58 0.058887006 ubox
1 60 0.761576869 ubox
2 38 0.509639856 ubox
2 41 0.030362385 ubox
2 42 0.007163691 ubox
2 46 0.089511246 ubox
2 48 0.021567132 ubox
2 57 0.062351675 ubox
2 59 0.845355167 ubox
3 34 0.003445153 ubox
3 37 0.509541927 ubox
3 39 0.030188502 ubox
3 40 0.024758905 ubox
3 43 0.007686103 ubox
3 45 0.090016189 ubox
3 47 0.021593404 ubox
3 56 0.062281697 ubox
3 58 0.845515382 ubox
3 60 0.075440685 ubox
4 38 0.035248663 ubox
4 41 0.008213531 ubox
4 42 0.004990709 ubox
4 46 0.021602699 ubox
4 57 0.843840276 ubox
4 59 0.081517338 ubox
5 34 0.022386173 ubox
5 37 0.034219176 ubox
5 39 0.003529782 ubox
5 40 0.007902963 ubox
5 43 0.089219448 ubox
5 45 0.020910484 ubox
5 53 0.009425226 ubox
5 56 0.803415089 ubox
5 58 0.081445516 ubox
6 33 0.038431678 ubox
6 38 0.004173636 ubox
6 42 0.098039780 ubox
6 52 0.009639504 ubox
6 57 0.080833864 ubox
7 33 0.965651232 ubox
7 41 0.099054991 ubox
7 57 0.004296090 ubox
7 59 0.007352272 ubox
8 32 0.992389358 ubox
8 39 0.090833473 ubox
8 40 0.070170133 ubox
8 53 0.014046715 ubox
8 56 0.005087774 ubox
8 58 0.007362772 ubox
9 31 0.992859260 ubox
9 38 0.115026667 ubox
9 57 0.007270126 ubox
10 30 0.993301787 ubox
10 37 0.115168407 ubox
10 56 0.006126073 ubox
11 29 0.993296027 ubox
11 36 0.115169030 ubox
11 56 0.003861515 ubox
12 26 0.005557526 ubox
12 28 0.993121391 ubox
12 35 0.115138499 ubox
12 55 0.005308815 ubox
13 25 0.006763737 ubox
13 27 0.993100145 ubox
13 34 0.114980393 ubox
13 54 0.004945205 ubox
14 26 0.965948885 ubox
14 32 0.066974839 ubox
15 31 0.067300809 ubox
16 30 0.059833685 ubox
16 32 0.085532581 ubox
17 31 0.090676851 ubox
18 26 0.028423031 ubox
18 27 0.006191854 ubox
18 28 0.067773364 ubox
18 29 0.006903317 ubox
18 30 0.091062285 ubox
19 25 0.044261584 ubox
19 26 0.024263661 ubox
19 27 0.068345065 ubox
19 28 0.007817645 ubox
19 29 0.091233896 ubox
20 25 0.035110278 ubox
20 26 0.080037147 ubox
20 27 0.007308043 ubox
20 28 0.091692368 ubox
21 25 0.085744620 ubox
21 27 0.091617678 ubox
21 30 0.005418532 ubox
22 29 0.005439550 ubox
23 30 0.006292419 ubox
23 54 0.005213093 ubox
24 29 0.006365057 ubox
24 53 0.005436814 ubox
25 52 0.005537785 ubox
26 51 0.005529796 ubox
27 50 0.005513007 ubox
30 48 0.005652246 ubox
31 47 0.005652136 ubox
32 46 0.005655845 ubox
33 45 0.005653151 ubox
33 53 0.226169088 ubox
34 52 0.848044557 ubox
34 59 0.003319207 ubox
35 42 0.006265107 ubox
35 51 0.848903143 ubox
36 41 0.006440830 ubox
36 50 0.847705892 ubox
37 46 0.016871263 ubox
37 48 0.848282754 ubox
37 57 0.015695787 ubox
37 59 0.048234994 ubox
38 45 0.016908944 ubox
38 47 0.848869194 ubox
38 53 0.006950110 ubox
38 56 0.015992793 ubox
38 58 0.048296577 ubox
39 46 0.840441611 ubox
39 52 0.007090873 ubox
39 57 0.048535311 ubox
39 59 0.005035579 ubox
40 46 0.107072561 ubox
40 48 0.013433868 ubox
40 51 0.006385091 ubox
40 57 0.048249493 ubox
40 59 0.015882997 ubox
41 45 0.146818854 ubox
41 47 0.013453279 ubox
41 54 0.107925194 ubox
41 56 0.047379336 ubox
41 58 0.015014974 ubox
42 49 0.007608890 ubox
42 53 0.110305629 ubox
42 55 0.041263254 ubox
42 60 0.024019057 ubox
43 48 0.007876091 ubox
43 51 0.013638941 ubox
43 52 0.116421989 ubox
43 59 0.041541252 ubox
44 50 0.018186039 ubox
44 51 0.115619275 ubox
44 52 0.010628580 ubox
45 50 0.114790969 ubox
45 51 0.008343114 ubox
45 57 0.042503396 ubox
45 59 0.501524449 ubox
46 53 0.013494421 ubox
46 56 0.042495622 ubox
46 58 0.502006825 ubox
46 60 0.029529363 ubox
47 52 0.012851797 ubox
47 57 0.502560941 ubox
47 59 0.072393343 ubox
48 56 0.502263103 ubox
48 58 0.072932338 ubox
50 56 0.071138743 ubox
51 55 0.065071027 ubox
52 58 0.007650080 ubox
52 60 0.024190754 ubox
53 57 0.008803745 ubox
53 59 0.026893051 ubox
1 60 0.9500000 lbox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
7 33 0.9500000 lbox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
showpage
end
%%EOF
