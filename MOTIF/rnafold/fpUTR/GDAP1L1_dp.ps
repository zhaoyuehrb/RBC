%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GDAP1L1)
} def

/sequence { (\
GAGGCCAUGUGAUGCUGGGCGAGAGAGAGCCGCCGCGCCGGAGCCUCCUUCUUUCCUGCCUCUGAUUCCGGGCUGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 47 0.158344882 ubox
1 51 0.003701339 ubox
1 55 0.004349623 ubox
1 62 0.054833762 ubox
1 77 0.485861880 ubox
2 16 0.004080922 ubox
2 46 0.158934644 ubox
2 50 0.003384563 ubox
2 54 0.004248175 ubox
2 57 0.010266990 ubox
2 61 0.055292664 ubox
2 74 0.153609404 ubox
2 76 0.462765496 ubox
3 15 0.003770059 ubox
3 16 0.021922134 ubox
3 39 0.003719583 ubox
3 45 0.159037720 ubox
3 56 0.010507072 ubox
3 60 0.055415475 ubox
3 69 0.009744497 ubox
3 73 0.144135571 ubox
3 74 0.891181437 ubox
3 77 0.014986077 ubox
4 15 0.023788210 ubox
4 20 0.065312337 ubox
4 38 0.003724046 ubox
4 44 0.159031670 ubox
4 59 0.055337159 ubox
4 68 0.009741502 ubox
4 73 0.972074189 ubox
4 76 0.008430011 ubox
5 14 0.023094152 ubox
5 18 0.007088538 ubox
5 19 0.065290980 ubox
5 37 0.003691156 ubox
5 41 0.014114569 ubox
5 43 0.158216941 ubox
5 58 0.054977995 ubox
5 71 0.129423052 ubox
5 72 0.974429555 ubox
5 75 0.008136852 ubox
6 14 0.015132856 ubox
6 17 0.012567805 ubox
6 18 0.065200818 ubox
6 40 0.020697072 ubox
6 58 0.004488683 ubox
6 64 0.003354006 ubox
6 70 0.129212925 ubox
6 71 0.973146828 ubox
7 13 0.016133150 ubox
7 16 0.012979776 ubox
7 57 0.005017831 ubox
7 63 0.003810539 ubox
7 66 0.107280656 ubox
8 12 0.014344765 ubox
8 17 0.003510232 ubox
8 37 0.012820016 ubox
8 40 0.096034067 ubox
8 64 0.007509358 ubox
8 65 0.107990494 ubox
8 70 0.807290580 ubox
9 15 0.066407509 ubox
9 16 0.003322906 ubox
9 36 0.014698534 ubox
9 38 0.108850182 ubox
9 39 0.088217633 ubox
9 44 0.003349306 ubox
9 63 0.011368644 ubox
9 66 0.071622380 ubox
9 69 0.910039051 ubox
10 14 0.062137810 ubox
10 35 0.014727846 ubox
10 37 0.116508480 ubox
10 40 0.067177928 ubox
10 43 0.003382903 ubox
10 64 0.024298375 ubox
10 65 0.068679472 ubox
10 70 0.016438369 ubox
11 34 0.014238327 ubox
11 36 0.116269522 ubox
11 39 0.067872137 ubox
11 62 0.171062249 ubox
11 63 0.005989806 ubox
11 67 0.763906770 ubox
11 68 0.525612284 ubox
11 69 0.015146840 ubox
11 77 0.005032859 ubox
12 61 0.169302981 ubox
12 66 0.808143490 ubox
12 67 0.501065430 ubox
12 76 0.005092056 ubox
13 35 0.030718600 ubox
13 37 0.071666327 ubox
13 40 0.005288692 ubox
13 64 0.035398903 ubox
13 65 0.813602653 ubox
13 75 0.004801492 ubox
14 33 0.111186590 ubox
14 34 0.029129054 ubox
14 36 0.074891188 ubox
14 38 0.075811797 ubox
14 39 0.004476601 ubox
14 59 0.183213764 ubox
14 63 0.046363463 ubox
14 73 0.005975510 ubox
15 32 0.111008335 ubox
15 35 0.074594647 ubox
15 37 0.075917265 ubox
15 41 0.007482861 ubox
15 58 0.182323893 ubox
15 72 0.005980770 ubox
16 32 0.014140631 ubox
16 35 0.007280651 ubox
16 37 0.004509632 ubox
16 40 0.007512722 ubox
16 58 0.021966746 ubox
16 64 0.027546083 ubox
16 71 0.005497142 ubox
17 31 0.026349148 ubox
17 34 0.016914358 ubox
17 36 0.014384661 ubox
17 39 0.007540155 ubox
17 55 0.005704688 ubox
17 56 0.096518942 ubox
17 57 0.157609284 ubox
17 60 0.030431451 ubox
17 61 0.896565785 ubox
17 62 0.271996790 ubox
17 63 0.010520509 ubox
18 30 0.019725320 ubox
18 31 0.127596990 ubox
18 33 0.012030044 ubox
18 34 0.089653300 ubox
18 38 0.007479960 ubox
18 54 0.005640927 ubox
18 55 0.096541880 ubox
18 56 0.167459915 ubox
18 57 0.014417863 ubox
18 59 0.027383173 ubox
18 60 0.964398393 ubox
18 61 0.035720846 ubox
18 62 0.005678133 ubox
19 30 0.129629419 ubox
19 33 0.090099215 ubox
19 36 0.007436303 ubox
19 53 0.007683574 ubox
19 54 0.090208278 ubox
19 55 0.167434480 ubox
19 56 0.017135255 ubox
19 59 0.964899533 ubox
19 60 0.026714264 ubox
20 29 0.130800212 ubox
20 32 0.090396353 ubox
20 35 0.007441608 ubox
20 58 0.963669561 ubox
21 31 0.089742007 ubox
21 34 0.007387125 ubox
21 50 0.047643826 ubox
21 51 0.045130582 ubox
21 53 0.250608047 ubox
21 54 0.018001233 ubox
21 55 0.580167179 ubox
21 57 0.724427563 ubox
22 49 0.056125228 ubox
22 50 0.044044088 ubox
22 52 0.285430593 ubox
22 53 0.017057521 ubox
22 54 0.594747258 ubox
22 57 0.074674917 ubox
23 48 0.057365500 ubox
23 49 0.039640851 ubox
23 50 0.025212615 ubox
23 51 0.286772719 ubox
23 52 0.006569951 ubox
23 53 0.599126391 ubox
23 54 0.006810179 ubox
23 55 0.720699941 ubox
23 56 0.073911561 ubox
24 49 0.073975884 ubox
24 50 0.276371487 ubox
24 52 0.599990674 ubox
24 53 0.007309942 ubox
24 54 0.722138379 ubox
25 47 0.134810364 ubox
25 48 0.098128374 ubox
25 49 0.233286915 ubox
25 50 0.026810993 ubox
25 51 0.599543316 ubox
25 53 0.720497040 ubox
25 54 0.003770306 ubox
25 55 0.058747408 ubox
25 77 0.005717337 ubox
26 46 0.140071555 ubox
26 49 0.138982378 ubox
26 50 0.557751027 ubox
26 52 0.720874797 ubox
26 53 0.003865808 ubox
26 54 0.058698598 ubox
26 76 0.005764001 ubox
27 45 0.142893436 ubox
27 47 0.630493200 ubox
27 48 0.146280032 ubox
27 49 0.112108956 ubox
27 50 0.024286222 ubox
27 51 0.716210648 ubox
27 53 0.058044935 ubox
28 46 0.653891572 ubox
28 49 0.141947941 ubox
28 50 0.694956999 ubox
28 52 0.058028314 ubox
28 74 0.005796594 ubox
29 36 0.118396817 ubox
29 38 0.099550389 ubox
29 44 0.408100900 ubox
29 45 0.635665584 ubox
29 48 0.195648258 ubox
29 49 0.517929994 ubox
29 51 0.057414355 ubox
29 73 0.005820698 ubox
30 35 0.118437502 ubox
30 37 0.099002800 ubox
30 41 0.370659323 ubox
30 43 0.441884263 ubox
30 72 0.005785040 ubox
31 37 0.027895383 ubox
31 40 0.373008706 ubox
31 71 0.005205072 ubox
32 36 0.029814912 ubox
32 38 0.147644447 ubox
32 39 0.340740610 ubox
32 44 0.103534616 ubox
33 37 0.195455975 ubox
33 41 0.757941717 ubox
33 43 0.090292736 ubox
34 40 0.760441771 ubox
34 70 0.003324885 ubox
35 39 0.711512993 ubox
35 44 0.460161963 ubox
35 69 0.003342187 ubox
35 73 0.004577501 ubox
36 43 0.460716162 ubox
36 72 0.004579864 ubox
37 44 0.057351163 ubox
37 59 0.003317536 ubox
38 43 0.057269746 ubox
38 58 0.003324534 ubox
38 71 0.004725358 ubox
39 64 0.007068551 ubox
39 70 0.005220448 ubox
40 46 0.004468532 ubox
40 47 0.009786125 ubox
40 48 0.181920328 ubox
40 49 0.014479973 ubox
40 51 0.007241764 ubox
40 56 0.006149918 ubox
40 63 0.007137173 ubox
40 69 0.005250547 ubox
41 45 0.004891363 ubox
41 46 0.007752659 ubox
41 47 0.182134153 ubox
41 48 0.015889434 ubox
41 50 0.009687024 ubox
41 55 0.006156608 ubox
41 62 0.007149222 ubox
41 68 0.005250130 ubox
42 46 0.158510939 ubox
42 49 0.032521867 ubox
42 54 0.006053677 ubox
42 61 0.007138191 ubox
42 67 0.005192672 ubox
43 48 0.036007002 ubox
43 49 0.004117065 ubox
43 53 0.005010071 ubox
43 59 0.004193852 ubox
43 60 0.005882323 ubox
43 66 0.004301171 ubox
44 58 0.005780615 ubox
55 71 0.003494007 ubox
55 72 0.012307710 ubox
56 70 0.003492634 ubox
56 71 0.012473638 ubox
57 70 0.012447877 ubox
57 75 0.011856310 ubox
58 69 0.012245899 ubox
58 73 0.172302154 ubox
58 76 0.006248221 ubox
59 71 0.003616987 ubox
59 72 0.172530479 ubox
59 75 0.006545931 ubox
60 70 0.004272566 ubox
60 71 0.172160589 ubox
60 72 0.007075916 ubox
61 70 0.163437835 ubox
61 71 0.006576088 ubox
61 72 0.012192151 ubox
62 70 0.042007859 ubox
62 71 0.021855268 ubox
63 70 0.032923377 ubox
64 69 0.052503549 ubox
64 77 0.025244127 ubox
65 76 0.025573837 ubox
66 75 0.025525838 ubox
69 75 0.004569135 ubox
70 77 0.006081860 ubox
71 76 0.005684929 ubox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
8 70 0.9500000 lbox
9 69 0.9500000 lbox
11 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
17 61 0.9500000 lbox
18 60 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
showpage
end
%%EOF
