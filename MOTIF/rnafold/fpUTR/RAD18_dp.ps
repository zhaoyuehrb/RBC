%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAD18)
} def

/sequence { (\
GACGUAAUGCGGUAGCGCGGGGAAUUUCGAGUGGUGUUGGAGCGCCGGAGGCUAGUGGGUGGCUGACCCCCAGCAUCCUCGGGAGCGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.007182801 ubox
1 28 0.011336311 ubox
1 38 0.004308223 ubox
2 13 0.034558981 ubox
2 25 0.009244398 ubox
2 26 0.003406831 ubox
2 27 0.011208497 ubox
2 37 0.004557430 ubox
3 9 0.010177253 ubox
3 11 0.076030827 ubox
3 12 0.034502582 ubox
3 17 0.048684529 ubox
3 19 0.217345137 ubox
3 29 0.003743626 ubox
3 36 0.004579293 ubox
3 87 0.161692359 ubox
4 8 0.010895574 ubox
4 10 0.078903421 ubox
4 16 0.049479465 ubox
4 18 0.222737691 ubox
4 25 0.013478419 ubox
4 28 0.003859446 ubox
4 35 0.003786705 ubox
4 43 0.003203869 ubox
4 86 0.164657247 ubox
4 89 0.020598693 ubox
5 9 0.073823542 ubox
5 14 0.008485936 ubox
5 15 0.048148944 ubox
5 17 0.205086844 ubox
5 24 0.014862840 ubox
5 39 0.004157177 ubox
5 85 0.160995431 ubox
5 88 0.020027592 ubox
6 13 0.011293689 ubox
6 26 0.003553124 ubox
6 38 0.005553532 ubox
7 13 0.028312865 ubox
7 25 0.004551907 ubox
7 37 0.005734745 ubox
8 12 0.026578843 ubox
8 14 0.025687250 ubox
8 17 0.152401754 ubox
8 19 0.458859187 ubox
8 24 0.003738599 ubox
8 36 0.005715207 ubox
8 44 0.004306885 ubox
9 13 0.021558347 ubox
9 16 0.284911900 ubox
9 18 0.947322443 ubox
9 35 0.005723580 ubox
9 37 0.009501602 ubox
9 43 0.006111035 ubox
9 86 0.003676839 ubox
10 15 0.284974589 ubox
10 17 0.948113257 ubox
10 19 0.031716989 ubox
10 34 0.005709348 ubox
10 36 0.009982139 ubox
10 39 0.010730393 ubox
10 42 0.006111655 ubox
10 85 0.003631002 ubox
11 16 0.943923560 ubox
11 18 0.032903685 ubox
11 35 0.009770530 ubox
11 38 0.011033795 ubox
11 90 0.074872078 ubox
12 18 0.017496295 ubox
12 32 0.003437210 ubox
12 37 0.010725686 ubox
12 89 0.076950601 ubox
13 17 0.016430246 ubox
13 33 0.006993086 ubox
13 36 0.013631951 ubox
13 39 0.009640541 ubox
13 88 0.071897685 ubox
14 32 0.006378569 ubox
14 35 0.014699784 ubox
14 38 0.012335880 ubox
15 32 0.009339754 ubox
15 37 0.013084513 ubox
15 86 0.041021435 ubox
16 31 0.011533729 ubox
16 33 0.015349777 ubox
16 36 0.013140850 ubox
16 85 0.041114079 ubox
16 87 0.079626680 ubox
17 32 0.015401783 ubox
17 35 0.013123852 ubox
17 86 0.081859474 ubox
18 29 0.013198082 ubox
18 31 0.015360279 ubox
18 34 0.013046261 ubox
18 81 0.006666914 ubox
18 85 0.081839456 ubox
18 87 0.008716085 ubox
19 26 0.004027911 ubox
19 28 0.014212367 ubox
19 80 0.006915077 ubox
19 86 0.010311174 ubox
19 90 0.712761060 ubox
20 25 0.006466467 ubox
20 26 0.003192165 ubox
20 27 0.013491892 ubox
20 28 0.006810676 ubox
20 79 0.006912982 ubox
20 89 0.723396994 ubox
20 90 0.603060554 ubox
21 26 0.010884514 ubox
21 27 0.006542351 ubox
21 28 0.013819852 ubox
21 46 0.003612098 ubox
21 78 0.006913821 ubox
21 89 0.610270405 ubox
21 90 0.178824102 ubox
22 26 0.004432035 ubox
22 27 0.010972018 ubox
22 28 0.010444560 ubox
22 45 0.003622588 ubox
22 77 0.006895513 ubox
22 89 0.180819903 ubox
23 27 0.009133182 ubox
23 38 0.003848341 ubox
23 76 0.006363138 ubox
24 37 0.004029916 ubox
25 36 0.004019833 ubox
25 42 0.004911571 ubox
25 83 0.006550805 ubox
25 84 0.980212630 ubox
25 85 0.050709004 ubox
25 88 0.004053148 ubox
26 41 0.019975728 ubox
26 82 0.005964511 ubox
26 83 0.990439189 ubox
26 84 0.055365124 ubox
26 85 0.007362896 ubox
26 87 0.003850948 ubox
27 34 0.004029990 ubox
27 40 0.021099916 ubox
27 41 0.003967179 ubox
27 82 0.993736980 ubox
27 83 0.045557064 ubox
27 84 0.006570354 ubox
28 33 0.004342647 ubox
28 39 0.021648844 ubox
28 40 0.004107152 ubox
28 81 0.998510981 ubox
28 82 0.032442102 ubox
28 83 0.005514419 ubox
29 38 0.021650170 ubox
29 80 0.999253083 ubox
30 37 0.021267746 ubox
30 38 0.003655608 ubox
30 79 0.999115254 ubox
31 78 0.998858426 ubox
32 47 0.010238010 ubox
33 46 0.019735733 ubox
33 77 0.998291881 ubox
33 78 0.007678421 ubox
34 45 0.019762938 ubox
34 76 0.998395915 ubox
34 77 0.008671943 ubox
35 44 0.019758111 ubox
35 75 0.998881489 ubox
36 43 0.019750414 ubox
36 74 0.999130706 ubox
36 89 0.004985967 ubox
37 42 0.018805356 ubox
37 73 0.998661308 ubox
37 88 0.005011404 ubox
38 72 0.998123256 ubox
38 87 0.005001212 ubox
39 46 0.006835206 ubox
39 68 0.003452515 ubox
39 69 0.005669358 ubox
39 70 0.015295620 ubox
39 71 0.998803018 ubox
39 90 0.020187556 ubox
40 45 0.007178782 ubox
40 67 0.003920412 ubox
40 68 0.006249661 ubox
40 69 0.020900798 ubox
40 70 0.996245489 ubox
40 89 0.020735218 ubox
41 53 0.609220461 ubox
41 64 0.114230169 ubox
42 52 0.627691007 ubox
42 56 0.184303040 ubox
42 60 0.006426218 ubox
42 63 0.114875708 ubox
42 86 0.034760437 ubox
43 51 0.627548600 ubox
43 55 0.192398835 ubox
43 57 0.015018554 ubox
43 59 0.006732197 ubox
43 61 0.078315077 ubox
43 62 0.086235303 ubox
43 65 0.032007728 ubox
43 85 0.034765946 ubox
44 52 0.746825334 ubox
44 56 0.027407093 ubox
44 60 0.108973669 ubox
44 63 0.037953763 ubox
44 64 0.007188778 ubox
45 51 0.748020102 ubox
45 55 0.027995193 ubox
45 58 0.032688014 ubox
45 59 0.111867169 ubox
45 62 0.038557695 ubox
45 83 0.035727629 ubox
46 50 0.742740746 ubox
46 57 0.035527031 ubox
46 58 0.111021037 ubox
46 61 0.038552655 ubox
46 65 0.041098937 ubox
46 82 0.035822119 ubox
47 53 0.027622270 ubox
47 56 0.037420048 ubox
47 60 0.029172300 ubox
47 64 0.040917415 ubox
47 68 0.143617188 ubox
47 69 0.060406782 ubox
47 70 0.013150304 ubox
47 71 0.004827983 ubox
47 78 0.014434165 ubox
48 52 0.027606253 ubox
48 63 0.040741923 ubox
48 67 0.144219042 ubox
48 68 0.059123972 ubox
48 69 0.018336638 ubox
48 70 0.004927021 ubox
48 77 0.016729835 ubox
48 80 0.036495759 ubox
49 64 0.004379518 ubox
49 76 0.015830629 ubox
49 79 0.036571888 ubox
50 63 0.003242306 ubox
50 64 0.158186959 ubox
50 68 0.021171889 ubox
50 69 0.004278259 ubox
50 78 0.036593457 ubox
51 60 0.046430419 ubox
51 63 0.158819833 ubox
51 67 0.021307558 ubox
51 68 0.004197648 ubox
51 74 0.018092950 ubox
51 77 0.036509265 ubox
52 58 0.005909843 ubox
52 59 0.047508702 ubox
52 62 0.158866645 ubox
52 73 0.018207077 ubox
53 57 0.005722195 ubox
53 58 0.045556548 ubox
53 61 0.158671252 ubox
53 65 0.037657098 ubox
53 72 0.014823948 ubox
54 60 0.156182990 ubox
54 64 0.041008937 ubox
55 63 0.041329729 ubox
55 67 0.021231149 ubox
55 74 0.007903238 ubox
56 62 0.041113389 ubox
56 65 0.004929218 ubox
56 66 0.021092986 ubox
56 72 0.039608151 ubox
56 73 0.004808844 ubox
57 64 0.009361452 ubox
57 68 0.029952574 ubox
57 69 0.972625058 ubox
57 70 0.010568438 ubox
57 71 0.043130728 ubox
58 63 0.009773042 ubox
58 64 0.019958250 ubox
58 67 0.029923538 ubox
58 68 0.975921390 ubox
58 69 0.015523932 ubox
58 70 0.043706169 ubox
59 63 0.019577576 ubox
59 67 0.975930154 ubox
59 68 0.014700912 ubox
59 69 0.044322790 ubox
60 66 0.971571566 ubox
61 68 0.045740762 ubox
61 69 0.007618492 ubox
62 67 0.045551572 ubox
62 68 0.007722311 ubox
80 87 0.003196320 ubox
81 86 0.003520594 ubox
81 90 0.011198210 ubox
82 89 0.012956816 ubox
82 90 0.010792353 ubox
83 89 0.011150061 ubox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
11 16 0.9500000 lbox
19 90 0.9500000 lbox
20 89 0.9500000 lbox
25 84 0.9500000 lbox
26 83 0.9500000 lbox
27 82 0.9500000 lbox
28 81 0.9500000 lbox
29 80 0.9500000 lbox
30 79 0.9500000 lbox
31 78 0.9500000 lbox
33 77 0.9500000 lbox
34 76 0.9500000 lbox
35 75 0.9500000 lbox
36 74 0.9500000 lbox
37 73 0.9500000 lbox
38 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
57 69 0.9500000 lbox
58 68 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
showpage
end
%%EOF
