%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUUUUACUUCUCCCUAGAGCAGGGGUGUUUGCCAGCAGCCUGCACUCUCAGAAAUCAGACUUGAGUGGCCGGAACCCUUGAGACCAGAGGCUUACCAUGCUGCUCCCUAGGAGGGCCAGGAACUGCUGACGUGACCACUGGACAGUUAUUCGUGUCUCUUACAAUUACCAAACAGA\
) } def
/len { sequence length } bind def

/coor [
[81.88630676 299.19235229]
[72.07630920 287.84490967]
[65.02947998 274.60324097]
[61.09734344 260.12780762]
[60.47603226 245.14067078]
[63.19654083 230.38943481]
[69.12316132 216.60992432]
[77.96236420 204.48718262]
[80.97226715 189.79226685]
[83.98217010 175.09735107]
[86.99208069 160.40243530]
[90.00198364 145.70753479]
[93.01188660 131.01261902]
[96.02178955 116.31770325]
[86.33523560 127.77067566]
[76.64867401 139.22364807]
[66.96212006 150.67662048]
[66.85977173 166.71934509]
[54.16463470 176.52818298]
[38.61534119 172.57862854]
[32.13997650 157.90043640]
[39.70588303 143.75346375]
[55.50914764 140.99006653]
[65.19570160 129.53709412]
[74.88226318 118.08412170]
[84.56881714 106.63114166]
[88.21750641 92.08167267]
[85.08166504 77.41312408]
[81.94583130 62.74456787]
[71.49448395 50.86685562]
[76.40010834 36.80327988]
[73.26426697 22.13472748]
[70.12842560 7.46617174]
[66.99258423 -7.20238352]
[63.59979630 -21.81364632]
[59.95110321 -36.36311340]
[56.30241013 -50.91258240]
[52.65371704 -65.46205139]
[49.00502396 -80.01152039]
[45.35633087 -94.56098938]
[41.45285797 -109.04418182]
[37.29580688 -123.45664215]
[33.13875961 -137.86909485]
[28.98170853 -152.28155518]
[18.07500076 -159.20233154]
[14.91997528 -171.31411743]
[20.68328857 -181.97018433]
[16.77981567 -196.45338440]
[12.87634373 -210.93656921]
[8.97287178 -225.41976929]
[5.06939888 -239.90295410]
[-4.83405828 -239.97354126]
[-14.49343204 -242.11833191]
[-23.47959518 -246.23814392]
[-31.39415359 -252.14613342]
[-37.88709641 -259.57626343]
[-42.67228317 -268.19531250]
[-45.54005432 -277.61776733]
[-46.36640549 -287.42312622]
[-45.11835098 -297.17465210]
[-41.85522461 -306.43872070]
[-36.72586823 -314.80426025]
[-29.96184158 -321.90090942]
[-21.86698532 -327.41540527]
[-12.80375385 -331.10546875]
[-14.64195538 -345.99240112]
[-16.48015594 -360.87933350]
[-18.31835747 -375.76629639]
[-20.15655899 -390.65322876]
[-21.99476051 -405.54016113]
[-23.83296204 -420.42709351]
[-35.26445770 -434.84609985]
[-27.82849312 -450.72814941]
[-29.92767525 -465.58053589]
[-32.15711212 -480.41394043]
[-34.51662827 -495.22717285]
[-44.32838821 -507.63845825]
[-38.68942642 -521.42437744]
[-41.04894257 -536.23767090]
[-43.40845871 -551.05090332]
[-45.76797867 -565.86413574]
[-59.27121735 -573.75061035]
[-64.49727631 -588.48907471]
[-58.97856522 -603.12048340]
[-45.32085419 -610.73632812]
[-29.97289658 -607.74066162]
[-20.18152618 -595.54791260]
[-20.56993103 -579.91516113]
[-30.95471764 -568.22369385]
[-28.59519958 -553.41040039]
[-26.23568344 -538.59716797]
[-23.87616539 -523.78387451]
[-14.23317528 -512.43212891]
[-19.70336914 -497.58670044]
[-17.34385109 -482.77343750]
[-13.17445183 -476.64462280]
[-15.07528782 -467.67971802]
[-12.97610569 -452.82733154]
[-3.49036479 -445.29150391]
[-1.63436937 -432.91394043]
[-8.94602108 -422.26531982]
[-7.10782003 -407.37835693]
[-5.26961851 -392.49142456]
[-3.43141699 -377.60449219]
[-1.59321570 -362.71752930]
[0.24498568 -347.83059692]
[2.08318710 -332.94366455]
[21.94899368 -327.70025635]
[37.63833618 -314.36544800]
[46.05151367 -295.52334595]
[45.50462723 -274.85101318]
[36.06647873 -256.40093994]
[19.55259323 -243.80642700]
[23.45606613 -229.32324219]
[27.35953712 -214.84004211]
[31.26301003 -200.35685730]
[35.16648102 -185.87365723]
[48.24316788 -174.18891907]
[43.39416504 -156.43859863]
[47.55121613 -142.02615356]
[51.70826721 -127.61369324]
[55.86531448 -113.20123291]
[59.56374741 -110.13789368]
[61.35971069 -104.70749664]
[59.90579987 -98.20967865]
[63.55449295 -83.66020966]
[67.20318604 -69.11074829]
[70.85187531 -54.56127548]
[74.50057220 -40.01180649]
[78.14926147 -25.46233749]
[81.73790741 -22.27109146]
[83.34219360 -16.78100967]
[81.66114044 -10.33822346]
[84.79698181 4.33033133]
[87.93282318 18.99888611]
[91.06865692 33.66744232]
[101.29570770 44.49595642]
[96.61437988 59.60872650]
[99.75022125 74.27728271]
[102.88606262 88.94583893]
[115.03273010 88.54585266]
[126.37142944 100.34828186]
[138.99668884 108.44782257]
[151.62196350 116.54736328]
[164.24723816 124.64691162]
[176.87249756 132.74644470]
[191.27830505 126.97996521]
[206.31402588 130.81492615]
[216.19810486 142.77673340]
[217.12991333 158.26579285]
[208.75117493 171.32627869]
[194.28366089 176.93615723]
[179.29043579 172.93830872]
[169.53669739 160.86999512]
[168.77296448 145.37171936]
[156.14768982 137.27217102]
[143.52241516 129.17263794]
[130.89715576 121.07308960]
[118.27188110 112.97354889]
[125.46846771 126.13444519]
[132.66505432 139.29533386]
[139.86164856 152.45622253]
[147.05822754 165.61712646]
[154.25482178 178.77801514]
[161.45141602 191.93890381]
[173.46138000 200.92559814]
[183.17726135 212.35369873]
[190.11441040 225.65316772]
[193.92678833 240.16061401]
[194.42420959 255.15235901]
[191.58187866 269.88061523]
[185.54158020 283.61068726]
[176.60459900 295.65768433]
[165.21673584 305.42071533]
[151.94604492 312.41275024]
[137.45448303 316.28503418]
[122.46492004 316.84442139]
[107.72505951 314.06298828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 26]
[15 25]
[16 24]
[17 23]
[27 140]
[28 139]
[29 138]
[31 136]
[32 135]
[33 134]
[34 133]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[40 125]
[41 122]
[42 121]
[43 120]
[44 119]
[47 117]
[48 116]
[49 115]
[50 114]
[51 113]
[65 107]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[73 98]
[74 97]
[75 95]
[76 94]
[78 92]
[79 91]
[80 90]
[81 89]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
