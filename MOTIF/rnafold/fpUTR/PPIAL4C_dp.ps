%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPIAL4C)
} def

/sequence { (\
ACUAUAAAGACAGUAAAAAGAUCAGUGGUUAUCUUUGCAGAUGCCACCAUCACUGUGAGCCCUGUACUAUCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.097270739 ubox
1 26 0.004407802 ubox
1 29 0.003330468 ubox
1 65 0.238457513 ubox
2 9 0.200477940 ubox
2 13 0.103009729 ubox
2 20 0.006105720 ubox
2 25 0.004683928 ubox
2 28 0.003830231 ubox
2 59 0.045287127 ubox
2 64 0.252115316 ubox
2 73 0.076904073 ubox
3 8 0.192145167 ubox
3 12 0.102047551 ubox
3 15 0.026738589 ubox
3 19 0.006094126 ubox
3 24 0.004545046 ubox
3 27 0.003839536 ubox
3 57 0.011865040 ubox
3 58 0.041594355 ubox
3 64 0.028647215 ubox
3 66 0.105751806 ubox
3 69 0.012815134 ubox
3 72 0.075431731 ubox
4 14 0.027852641 ubox
4 26 0.003866572 ubox
4 56 0.007979884 ubox
4 63 0.034124340 ubox
4 65 0.113062693 ubox
4 68 0.012973087 ubox
4 70 0.049564718 ubox
5 13 0.027558867 ubox
5 15 0.006492919 ubox
5 25 0.003799937 ubox
5 55 0.004887625 ubox
5 57 0.025179934 ubox
5 64 0.112971684 ubox
5 66 0.021927099 ubox
5 69 0.050210009 ubox
6 14 0.006654105 ubox
6 54 0.003992300 ubox
6 56 0.013732646 ubox
6 63 0.105149590 ubox
6 65 0.022045587 ubox
6 68 0.043553191 ubox
8 54 0.003191931 ubox
8 63 0.049732324 ubox
8 68 0.121508614 ubox
9 23 0.009876824 ubox
9 51 0.004045913 ubox
9 53 0.003257528 ubox
9 62 0.052040084 ubox
9 67 0.126455218 ubox
9 71 0.224232889 ubox
10 22 0.009232573 ubox
10 26 0.004202047 ubox
10 50 0.003914553 ubox
10 56 0.913406365 ubox
10 65 0.154406979 ubox
10 70 0.221808560 ubox
11 25 0.004315237 ubox
11 55 0.937296877 ubox
11 57 0.010522581 ubox
11 64 0.156065820 ubox
12 54 0.937313888 ubox
12 56 0.010108472 ubox
12 63 0.155776415 ubox
12 68 0.226231086 ubox
13 22 0.005993899 ubox
13 38 0.004491527 ubox
13 53 0.937516626 ubox
13 60 0.025011199 ubox
13 62 0.154032771 ubox
13 67 0.231688352 ubox
13 74 0.017020296 ubox
14 21 0.007113001 ubox
14 37 0.004486379 ubox
14 52 0.932159088 ubox
14 55 0.008828191 ubox
14 57 0.057912498 ubox
14 59 0.027887908 ubox
14 66 0.231318918 ubox
14 69 0.003286595 ubox
14 73 0.016160616 ubox
15 36 0.003944638 ubox
15 54 0.008641045 ubox
15 56 0.058220933 ubox
15 63 0.003180794 ubox
15 65 0.227482490 ubox
17 36 0.025744428 ubox
18 35 0.029433058 ubox
19 34 0.030419370 ubox
19 54 0.075211873 ubox
19 63 0.041453204 ubox
19 68 0.028500635 ubox
20 30 0.003954662 ubox
20 33 0.030621817 ubox
20 51 0.951070353 ubox
20 53 0.073809455 ubox
20 62 0.042769881 ubox
20 67 0.029469597 ubox
20 71 0.020097463 ubox
21 29 0.004241413 ubox
21 32 0.030520593 ubox
21 50 0.948972317 ubox
21 56 0.036266437 ubox
21 65 0.008279102 ubox
21 70 0.020075402 ubox
22 28 0.004508225 ubox
22 31 0.029921566 ubox
22 49 0.903661088 ubox
22 55 0.009239814 ubox
22 58 0.197754518 ubox
22 69 0.019717621 ubox
23 27 0.004651702 ubox
23 55 0.131383303 ubox
23 57 0.197847500 ubox
23 64 0.062822745 ubox
24 30 0.006730544 ubox
24 54 0.133750207 ubox
24 56 0.193916376 ubox
24 63 0.062915449 ubox
24 68 0.011956014 ubox
25 29 0.004694055 ubox
25 38 0.003298290 ubox
25 47 0.981155854 ubox
25 50 0.081521931 ubox
25 53 0.134662727 ubox
25 62 0.062825469 ubox
25 67 0.012045597 ubox
25 70 0.005193589 ubox
26 37 0.003285729 ubox
26 46 0.983856337 ubox
26 49 0.087246850 ubox
26 52 0.131216828 ubox
26 55 0.003980083 ubox
26 66 0.011871782 ubox
26 69 0.005474049 ubox
26 72 0.003316685 ubox
27 45 0.984448264 ubox
27 48 0.092123081 ubox
27 51 0.127152243 ubox
27 54 0.005672075 ubox
27 61 0.062968181 ubox
27 65 0.010669266 ubox
27 68 0.005607959 ubox
27 71 0.003773090 ubox
27 75 0.030841542 ubox
28 44 0.984425195 ubox
28 47 0.093455139 ubox
28 50 0.125564189 ubox
28 53 0.005731815 ubox
28 60 0.062974145 ubox
28 67 0.005617099 ubox
28 70 0.003762546 ubox
28 74 0.031210298 ubox
29 43 0.714212691 ubox
29 46 0.089706669 ubox
29 49 0.124770322 ubox
29 52 0.005613125 ubox
29 59 0.060138994 ubox
29 66 0.004976896 ubox
29 69 0.003657739 ubox
29 73 0.031075092 ubox
30 37 0.006412761 ubox
30 43 0.689042053 ubox
30 57 0.003299021 ubox
30 58 0.031141575 ubox
30 72 0.027771068 ubox
31 36 0.006394184 ubox
31 42 0.966197373 ubox
31 50 0.003366422 ubox
31 56 0.003476151 ubox
31 70 0.008690215 ubox
32 41 0.994617940 ubox
32 49 0.003557671 ubox
32 55 0.003245440 ubox
32 58 0.021766788 ubox
32 69 0.008268078 ubox
33 40 0.995021348 ubox
33 57 0.023613761 ubox
33 59 0.011480904 ubox
34 39 0.908918562 ubox
34 40 0.006195302 ubox
34 41 0.003911964 ubox
34 58 0.010971007 ubox
34 59 0.016513997 ubox
35 39 0.030526089 ubox
35 40 0.004154135 ubox
35 57 0.008497460 ubox
35 58 0.048929710 ubox
36 46 0.004292015 ubox
36 55 0.003765572 ubox
36 57 0.055669671 ubox
36 66 0.032495186 ubox
37 44 0.026015173 ubox
37 45 0.003348634 ubox
37 54 0.003471612 ubox
37 56 0.061172794 ubox
37 65 0.040754343 ubox
38 43 0.026191975 ubox
38 55 0.061593466 ubox
38 64 0.042348036 ubox
39 54 0.059712229 ubox
39 63 0.042344226 ubox
40 51 0.044708981 ubox
40 53 0.046859831 ubox
40 62 0.042218137 ubox
41 50 0.053364383 ubox
42 49 0.055383540 ubox
42 52 0.028639532 ubox
43 48 0.054826445 ubox
43 51 0.028611316 ubox
43 60 0.042567790 ubox
44 59 0.042622738 ubox
45 57 0.043267685 ubox
46 56 0.043244875 ubox
47 55 0.041780139 ubox
48 55 0.039757784 ubox
48 57 0.052546221 ubox
48 64 0.004724636 ubox
49 54 0.036023286 ubox
49 56 0.051781345 ubox
49 63 0.004619250 ubox
50 55 0.047982717 ubox
50 58 0.039313334 ubox
51 57 0.042114530 ubox
52 56 0.034203274 ubox
52 65 0.008001492 ubox
53 59 0.023642920 ubox
53 64 0.009624094 ubox
53 73 0.176540399 ubox
54 58 0.021434952 ubox
54 72 0.177597591 ubox
55 67 0.010990721 ubox
55 70 0.004087898 ubox
55 71 0.177725268 ubox
55 74 0.009836329 ubox
56 66 0.011250995 ubox
56 69 0.015648036 ubox
56 72 0.049537696 ubox
56 73 0.006349574 ubox
57 63 0.006624414 ubox
57 65 0.011285695 ubox
57 68 0.014092071 ubox
57 71 0.109369090 ubox
58 68 0.182779556 ubox
58 70 0.107854220 ubox
59 65 0.052628143 ubox
59 67 0.183384126 ubox
59 74 0.260289574 ubox
60 64 0.054896905 ubox
60 73 0.239542912 ubox
62 73 0.780822828 ubox
63 69 0.020245517 ubox
63 72 0.813631773 ubox
64 68 0.018223540 ubox
64 70 0.025345579 ubox
64 71 0.817791762 ubox
64 74 0.054324859 ubox
65 69 0.047385306 ubox
65 73 0.053752146 ubox
67 73 0.053746398 ubox
68 72 0.048780129 ubox
10 56 0.9500000 lbox
11 55 0.9500000 lbox
12 54 0.9500000 lbox
13 53 0.9500000 lbox
14 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
62 73 0.9500000 lbox
63 72 0.9500000 lbox
64 71 0.9500000 lbox
showpage
end
%%EOF
