%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL3L1)
} def

/sequence { (\
AGAAGGACGCAGGCAGCAAAGAGUAGUCAGUCCCUUCUUGGCUCUGCUGACACUCGAGCCCACAUUCCAUCACCUGCUCCCAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.004159951 ubox
2 37 0.004798109 ubox
2 71 0.039888712 ubox
2 79 0.006409155 ubox
2 85 0.297590222 ubox
3 36 0.004798712 ubox
3 70 0.039391355 ubox
3 78 0.006372893 ubox
3 84 0.298216087 ubox
4 35 0.004782772 ubox
5 34 0.004162937 ubox
5 68 0.042585244 ubox
5 79 0.010141180 ubox
5 80 0.939534523 ubox
5 81 0.329759195 ubox
6 32 0.003384943 ubox
6 33 0.003426646 ubox
6 67 0.042614999 ubox
6 78 0.008222849 ubox
6 79 0.943670628 ubox
6 80 0.323881940 ubox
7 31 0.004122910 ubox
7 66 0.041596359 ubox
7 78 0.942163313 ubox
8 30 0.004120650 ubox
9 17 0.005668856 ubox
9 77 0.998730569 ubox
10 16 0.005671244 ubox
10 76 0.998996201 ubox
11 75 0.998746116 ubox
12 28 0.004491197 ubox
12 60 0.040301163 ubox
12 61 0.036937910 ubox
12 68 0.005393495 ubox
12 74 0.998355616 ubox
12 78 0.004570529 ubox
12 80 0.003917345 ubox
12 81 0.006941847 ubox
13 27 0.004557986 ubox
13 59 0.043472994 ubox
13 60 0.038264963 ubox
13 67 0.006152543 ubox
13 73 0.995857061 ubox
13 74 0.003233801 ubox
13 77 0.005746283 ubox
13 79 0.003935921 ubox
13 80 0.006936557 ubox
14 26 0.004621021 ubox
14 49 0.054102216 ubox
14 58 0.045910887 ubox
14 76 0.005761077 ubox
15 43 0.006509139 ubox
15 48 0.054318747 ubox
15 66 0.018126792 ubox
15 75 0.005748941 ubox
15 78 0.007826319 ubox
16 24 0.010203851 ubox
16 42 0.006966828 ubox
16 47 0.054363153 ubox
16 59 0.855316148 ubox
16 65 0.004606621 ubox
16 74 0.005368957 ubox
16 77 0.007971269 ubox
17 23 0.010490840 ubox
17 41 0.006941223 ubox
17 46 0.054299646 ubox
17 58 0.855330783 ubox
17 76 0.007970062 ubox
18 45 0.038021580 ubox
18 66 0.011406965 ubox
18 75 0.007439547 ubox
19 39 0.011068135 ubox
19 65 0.009047845 ubox
19 66 0.026591938 ubox
20 38 0.012346582 ubox
20 43 0.005478822 ubox
20 45 0.031937981 ubox
20 54 0.005370559 ubox
20 65 0.028101168 ubox
20 66 0.017605279 ubox
21 28 0.004979138 ubox
21 37 0.012429541 ubox
21 39 0.004153157 ubox
21 42 0.005295583 ubox
21 44 0.046462133 ubox
21 53 0.005587570 ubox
21 55 0.997463138 ubox
21 65 0.003408501 ubox
21 67 0.006576623 ubox
22 27 0.004857270 ubox
22 35 0.003221109 ubox
22 36 0.011960172 ubox
22 38 0.004607228 ubox
22 43 0.045825304 ubox
22 45 0.020416844 ubox
22 54 0.997986077 ubox
22 66 0.006404620 ubox
23 34 0.004191800 ubox
23 35 0.009258009 ubox
23 37 0.004630304 ubox
23 42 0.044623527 ubox
23 44 0.027904330 ubox
23 51 0.007293128 ubox
23 53 0.998135378 ubox
23 65 0.006048275 ubox
24 40 0.005421892 ubox
24 41 0.042851916 ubox
24 49 0.025951142 ubox
24 50 0.005892727 ubox
24 52 0.992534487 ubox
24 64 0.005851757 ubox
25 35 0.007223908 ubox
25 38 0.015494255 ubox
25 39 0.007194233 ubox
25 43 0.030376219 ubox
25 48 0.052139622 ubox
26 34 0.007724265 ubox
26 37 0.016410136 ubox
26 38 0.006037714 ubox
26 42 0.032639443 ubox
26 47 0.052575656 ubox
26 51 0.996264035 ubox
26 63 0.003764924 ubox
27 41 0.033513962 ubox
27 46 0.010923477 ubox
27 50 0.996699788 ubox
27 62 0.003570098 ubox
28 40 0.037611228 ubox
28 46 0.058373452 ubox
28 49 0.996523746 ubox
29 35 0.013729301 ubox
29 36 0.007311682 ubox
29 38 0.034699521 ubox
29 39 0.032802319 ubox
29 43 0.012290935 ubox
29 45 0.067194083 ubox
29 48 0.995702300 ubox
30 34 0.013836128 ubox
30 35 0.006321153 ubox
30 37 0.039686765 ubox
30 38 0.024499695 ubox
30 42 0.016898652 ubox
30 44 0.074459048 ubox
30 47 0.995242335 ubox
31 41 0.015437301 ubox
31 46 0.977277479 ubox
32 40 0.021438525 ubox
32 41 0.498818761 ubox
33 40 0.495059806 ubox
33 41 0.822256056 ubox
34 40 0.825237422 ubox
34 41 0.210378232 ubox
35 40 0.205665872 ubox
35 41 0.024442614 ubox
36 40 0.020613202 ubox
40 45 0.006254039 ubox
40 60 0.014349938 ubox
41 47 0.003522091 ubox
41 59 0.014558773 ubox
42 46 0.004604548 ubox
42 58 0.014680260 ubox
43 57 0.014675829 ubox
44 56 0.014626922 ubox
45 52 0.005914367 ubox
46 51 0.005968204 ubox
46 55 0.004682208 ubox
46 59 0.013274622 ubox
47 58 0.013340735 ubox
48 56 0.003198533 ubox
48 57 0.012987641 ubox
49 55 0.007523687 ubox
50 54 0.006685526 ubox
56 66 0.050741095 ubox
56 67 0.382063678 ubox
56 71 0.219014196 ubox
56 79 0.005596888 ubox
57 65 0.055185653 ubox
57 66 0.381162103 ubox
57 70 0.216683186 ubox
57 78 0.005613622 ubox
58 65 0.300462579 ubox
58 77 0.005619383 ubox
59 76 0.005599934 ubox
64 70 0.069321134 ubox
65 69 0.066414051 ubox
75 82 0.006632050 ubox
76 81 0.007083600 ubox
5 80 0.9500000 lbox
6 79 0.9500000 lbox
7 78 0.9500000 lbox
9 77 0.9500000 lbox
10 76 0.9500000 lbox
11 75 0.9500000 lbox
12 74 0.9500000 lbox
13 73 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
showpage
end
%%EOF
