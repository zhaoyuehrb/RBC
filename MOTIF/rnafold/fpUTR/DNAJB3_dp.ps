%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DNAJB3)
} def

/sequence { (\
AGGCGGCCCAGGUCUCCGAGCACUCGGGCCUGCGCCUGGGUGCUGGCAGCCUUGCCGCUCGCUGUGCCAGUGCCUGGUGGGCCGUUCUGGCCAUCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.037223426 ubox
1 63 0.007479011 ubox
1 75 0.003892341 ubox
1 88 0.005545568 ubox
2 36 0.003234986 ubox
2 56 0.004511922 ubox
2 58 0.030299519 ubox
2 59 0.932807847 ubox
2 60 0.132061278 ubox
2 62 0.007214439 ubox
2 63 0.003305283 ubox
2 74 0.005097713 ubox
2 86 0.055163171 ubox
2 87 0.006455628 ubox
3 35 0.003236019 ubox
3 55 0.004522755 ubox
3 58 0.996827308 ubox
3 59 0.015161969 ubox
3 62 0.003552946 ubox
3 73 0.004414741 ubox
3 85 0.066435166 ubox
3 86 0.004848513 ubox
4 34 0.003235141 ubox
4 54 0.004521882 ubox
4 57 0.997647140 ubox
4 61 0.003548694 ubox
4 72 0.003867098 ubox
4 84 0.067435538 ubox
5 53 0.004425235 ubox
5 56 0.997673009 ubox
5 60 0.003445140 ubox
5 83 0.067475921 ubox
6 55 0.997678506 ubox
6 58 0.003537689 ubox
6 82 0.067477133 ubox
7 54 0.995766470 ubox
7 57 0.003552754 ubox
7 81 0.067476304 ubox
8 80 0.067454569 ubox
9 32 0.008041202 ubox
9 54 0.036421542 ubox
9 79 0.066912666 ubox
10 31 0.008671674 ubox
10 52 0.966322256 ubox
10 53 0.067796240 ubox
10 78 0.013563292 ubox
11 17 0.004937613 ubox
11 30 0.008788240 ubox
11 51 0.997492657 ubox
11 52 0.067051449 ubox
11 74 0.003697411 ubox
12 16 0.004864353 ubox
12 29 0.008785474 ubox
12 50 0.997580552 ubox
12 51 0.067101104 ubox
12 73 0.003690281 ubox
13 28 0.006274237 ubox
13 49 0.781393191 ubox
14 28 0.005335833 ubox
14 46 0.011947779 ubox
14 49 0.616450727 ubox
15 45 0.011373714 ubox
15 46 0.011345589 ubox
15 48 0.620206427 ubox
16 27 0.008402881 ubox
16 45 0.012481375 ubox
16 46 0.995495935 ubox
17 26 0.008665413 ubox
17 45 0.994677446 ubox
18 25 0.008761983 ubox
18 44 0.488223828 ubox
19 24 0.008197580 ubox
19 44 0.867232622 ubox
20 43 0.999882244 ubox
21 42 0.999949365 ubox
22 41 0.999751835 ubox
23 40 0.999933658 ubox
24 39 0.999301875 ubox
25 38 0.999737496 ubox
26 37 0.999190808 ubox
27 36 0.999944894 ubox
28 35 0.999931721 ubox
29 34 0.997167928 ubox
33 79 0.007296044 ubox
34 78 0.007899743 ubox
35 77 0.007922292 ubox
36 76 0.007885000 ubox
38 75 0.008123640 ubox
39 74 0.008883476 ubox
40 73 0.008937133 ubox
41 72 0.008925517 ubox
42 71 0.008934494 ubox
43 70 0.008955979 ubox
44 69 0.008961808 ubox
45 56 0.006624642 ubox
45 68 0.009004540 ubox
46 55 0.006644851 ubox
46 67 0.008991021 ubox
47 54 0.006646057 ubox
47 66 0.008882936 ubox
48 53 0.005987457 ubox
48 59 0.003570654 ubox
48 63 0.004065453 ubox
48 65 0.007892161 ubox
49 58 0.003990217 ubox
49 62 0.004934479 ubox
50 57 0.003984063 ubox
50 61 0.004931354 ubox
50 64 0.003822314 ubox
54 62 0.012547020 ubox
54 78 0.061761486 ubox
55 61 0.012548383 ubox
55 77 0.064708514 ubox
56 66 0.007098783 ubox
56 76 0.064717876 ubox
57 65 0.009730290 ubox
57 71 0.005057063 ubox
57 73 0.005833352 ubox
57 75 0.060360178 ubox
58 64 0.009881421 ubox
58 70 0.005475207 ubox
58 72 0.005701542 ubox
59 69 0.006101144 ubox
60 66 0.004811410 ubox
60 72 0.890864758 ubox
60 79 0.026047733 ubox
60 84 0.005517477 ubox
61 67 0.038816082 ubox
61 71 0.937738579 ubox
61 73 0.082116721 ubox
61 78 0.026182344 ubox
61 82 0.017381058 ubox
61 83 0.004208206 ubox
61 99 0.304276483 ubox
62 66 0.038611005 ubox
62 70 0.940995819 ubox
62 72 0.081980352 ubox
62 77 0.026194768 ubox
62 81 0.017842607 ubox
62 98 0.306500445 ubox
63 69 0.939953740 ubox
63 76 0.025960869 ubox
63 80 0.017317957 ubox
63 93 0.028440968 ubox
63 97 0.305800447 ubox
64 68 0.925005463 ubox
64 71 0.006166518 ubox
64 73 0.018756240 ubox
64 75 0.022113157 ubox
64 92 0.033955014 ubox
64 94 0.032454063 ubox
64 96 0.302437039 ubox
65 70 0.010372909 ubox
65 72 0.018427425 ubox
65 79 0.153841052 ubox
65 93 0.086483772 ubox
66 71 0.009302915 ubox
66 73 0.050000542 ubox
66 78 0.250370957 ubox
66 91 0.164601779 ubox
66 92 0.065050528 ubox
67 72 0.049903221 ubox
67 77 0.255674572 ubox
67 90 0.177204432 ubox
68 76 0.255738951 ubox
68 89 0.177206082 ubox
69 75 0.255109197 ubox
69 88 0.177111803 ubox
70 74 0.249518318 ubox
70 85 0.003694899 ubox
70 87 0.176376157 ubox
70 99 0.004489474 ubox
71 84 0.047784783 ubox
72 82 0.158234852 ubox
72 83 0.042109742 ubox
72 85 0.056376656 ubox
72 99 0.159189850 ubox
73 80 0.023156410 ubox
73 81 0.163985143 ubox
73 84 0.055877402 ubox
73 98 0.128227789 ubox
74 79 0.025100292 ubox
74 80 0.163779315 ubox
74 81 0.020857378 ubox
74 98 0.925957128 ubox
75 79 0.147546933 ubox
75 80 0.020717287 ubox
75 84 0.024992766 ubox
75 97 0.944976652 ubox
76 83 0.056609680 ubox
76 95 0.042852643 ubox
76 96 0.946681175 ubox
77 82 0.056490411 ubox
77 94 0.051335746 ubox
77 95 0.944984978 ubox
78 93 0.232382218 ubox
79 92 0.193833771 ubox
79 95 0.013085586 ubox
79 96 0.005129236 ubox
80 91 0.137273738 ubox
80 92 0.961337495 ubox
80 95 0.003773281 ubox
81 91 0.972032094 ubox
82 90 0.981621236 ubox
83 89 0.981234673 ubox
84 88 0.605417705 ubox
87 98 0.067885469 ubox
88 97 0.069044788 ubox
89 96 0.069326094 ubox
90 95 0.068205818 ubox
90 99 0.003468257 ubox
91 98 0.003501898 ubox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
64 68 0.9500000 lbox
74 98 0.9500000 lbox
75 97 0.9500000 lbox
76 96 0.9500000 lbox
77 95 0.9500000 lbox
80 92 0.9500000 lbox
81 91 0.9500000 lbox
82 90 0.9500000 lbox
83 89 0.9500000 lbox
showpage
end
%%EOF
