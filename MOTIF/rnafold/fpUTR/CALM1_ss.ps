%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUACGGCGCACCAUAUAUAUAUCGCGGGGCGCAGACUCGCGCUCCGGCAGUGGUGCUGGGAGUGUCGUGGACGCCGUGCCGUUACUCGUAGUCAGGCGGCGGCGCAGGCGGCGGCGGCGGCAUAGCGCACAGCGCGCCUUAGCAGCAGCAGCAGCAGCAGCGGCAUCGGAGGUACCCCCGCCGUCGCAGCCCCCGCGCUGGUGCAGCCACCCUCGCUCCCUCUGCUCUUCCUCCCUUCGCUCGCACC\
) } def
/len { sequence length } bind def

/coor [
[-176.46740723 722.62811279]
[-186.54425049 710.94647217]
[-188.68324280 695.66815186]
[-182.20181274 681.66833496]
[-169.16818237 673.41436768]
[-169.16818237 658.41436768]
[-169.26281738 643.41461182]
[-169.45205688 628.41583252]
[-183.20858765 622.43603516]
[-194.30496216 632.52911377]
[-205.40135193 642.62219238]
[-216.49772644 652.71533203]
[-227.59410095 662.80841064]
[-238.69047546 672.90148926]
[-249.78684998 682.99456787]
[-246.54266357 691.04339600]
[-245.42054749 699.62939453]
[-246.48262024 708.20385742]
[-249.65171814 716.22131348]
[-254.71691895 723.17395020]
[-261.34756470 728.62402344]
[-269.11477661 732.23138428]
[-277.51934814 733.77471924]
[-286.02359009 733.16485596]
[-294.08590698 730.45025635]
[-301.19531250 725.81298828]
[-313.13867188 734.88800049]
[-325.08206177 743.96301270]
[-337.02542114 753.03802490]
[-348.96878052 762.11303711]
[-360.91217041 771.18804932]
[-372.85552979 780.26306152]
[-384.79891968 789.33807373]
[-386.68728638 805.02911377]
[-399.16925049 814.72326660]
[-414.83947754 812.66906738]
[-424.40109253 800.08532715]
[-422.18136597 784.43768311]
[-409.49719238 775.00964355]
[-393.87393188 777.39471436]
[-381.93054199 768.31970215]
[-369.98718262 759.24468994]
[-358.04382324 750.16967773]
[-346.10043335 741.09466553]
[-334.15707397 732.01965332]
[-322.21368408 722.94464111]
[-310.27032471 713.86962891]
[-312.58648682 692.41809082]
[-301.34039307 673.84954834]
[-281.00991821 665.86773682]
[-259.87994385 671.89819336]
[-248.78356934 661.80511475]
[-237.68717957 651.71203613]
[-226.59080505 641.61895752]
[-215.49443054 631.52581787]
[-204.39805603 621.43273926]
[-193.30168152 611.33966064]
[-178.89593506 599.61938477]
[-164.08767700 600.40991211]
[-158.36929321 586.54272461]
[-152.65089417 572.67547607]
[-146.93251038 558.80822754]
[-141.21412659 544.94104004]
[-135.49572754 531.07379150]
[-129.77734375 517.20654297]
[-136.89331055 501.95608521]
[-130.64335632 485.96710205]
[-114.44581604 479.32833862]
[-108.90283966 465.39004517]
[-103.35986328 451.45178223]
[-97.81688690 437.51351929]
[-101.98186493 418.61666870]
[-85.92143250 406.40707397]
[-80.73189545 392.33337402]
[-75.54235840 378.25967407]
[-70.35282135 364.18600464]
[-75.44972229 363.82138062]
[-80.48674011 362.41271973]
[-85.30273438 359.97396851]
[-96.77310181 350.30801392]
[-108.24346161 340.64205933]
[-119.71382904 330.97610474]
[-131.18420410 321.31015015]
[-142.65457153 311.64419556]
[-154.24597168 302.12371826]
[-165.95655823 292.75024414]
[-177.66716003 283.37677002]
[-193.81121826 278.19937134]
[-193.30525208 261.25296021]
[-176.88105774 257.04791260]
[-168.29368591 271.66619873]
[-156.58309937 281.03964233]
[-144.87249756 290.41311646]
[-140.13417053 290.79101562]
[-135.57644653 294.13333130]
[-132.98860168 300.17382812]
[-121.51824188 309.83978271]
[-110.04787445 319.50573730]
[-98.57750702 329.17169189]
[-87.10714722 338.83764648]
[-75.63677979 348.50360107]
[-60.71311951 346.99215698]
[-51.41371155 335.22265625]
[-42.11430359 323.45315552]
[-32.81489563 311.68365479]
[-23.51548767 299.91418457]
[-21.69602394 285.13110352]
[-7.06951952 279.09985352]
[2.22988844 267.33038330]
[3.90648937 260.15158081]
[11.72162056 255.47201538]
[21.16877937 243.82078552]
[30.61593628 232.16955566]
[32.62176895 217.41062927]
[47.32320023 211.56439209]
[56.77035904 199.91316223]
[66.21751404 188.26193237]
[75.66467285 176.61070251]
[85.11183167 164.95947266]
[94.55899048 153.30824280]
[104.00614929 141.65699768]
[113.45330811 130.00576782]
[90.74315643 132.24002075]
[71.58255768 119.03144836]
[65.35397339 96.13906097]
[75.56271362 74.22309875]
[78.01198578 59.42441177]
[80.46125031 44.62572861]
[82.91051483 29.82704163]
[79.53160858 13.21321201]
[94.56079102 5.36718798]
[106.26068115 17.63702583]
[97.70920563 32.27630997]
[95.25993347 47.07499313]
[92.81066895 61.87368011]
[90.36140442 76.67236328]
[104.07993317 82.73881531]
[113.37934113 70.96932220]
[122.67874908 59.19982529]
[123.42709351 54.08369446]
[125.81238556 50.14796066]
[129.11715698 47.81645203]
[132.55955505 47.16970825]
[142.29768372 35.76054764]
[145.37179565 20.24086952]
[159.51951599 15.58348751]
[169.25762939 4.17432547]
[172.33174133 -11.34535313]
[186.47946167 -16.00273514]
[196.21759033 -27.41189575]
[198.66732788 -43.62703705]
[214.03161621 -49.36034775]
[226.50498962 -38.71388626]
[223.25590515 -22.63982201]
[207.62675476 -17.67377281]
[197.88862610 -6.26461220]
[195.51104736 8.43900681]
[180.66679382 13.91244793]
[170.92868042 25.32160950]
[168.55110168 40.02522659]
[153.70683289 45.49866867]
[143.96871948 56.90783310]
[134.44824219 68.49923706]
[125.14884186 80.26873016]
[115.84943390 92.03822327]
[120.11889648 98.20439148]
[135.06846619 96.97531891]
[128.65783691 110.53673553]
[132.92729187 116.70290375]
[147.21635437 112.13970184]
[154.41758728 106.56145477]
[161.71455383 107.61030579]
[176.06005859 103.22774506]
[189.44149780 92.81749725]
[203.14926147 102.79415131]
[197.35717773 118.72801971]
[180.44261169 117.57323456]
[166.09712219 121.95579529]
[151.77955627 126.42876434]
[137.49049377 130.99195862]
[125.10453796 139.45292664]
[115.65737915 151.10415649]
[106.21022034 162.75540161]
[96.76306152 174.40663147]
[87.31590271 186.05786133]
[77.86874390 197.70909119]
[68.42159271 209.36032104]
[58.97443008 221.01155090]
[56.29287720 236.60385132]
[42.26716995 241.61671448]
[32.82001114 253.26794434]
[23.37285233 264.91918945]
[13.99938297 276.62979126]
[4.69997501 288.39926147]
[2.21535397 304.02416992]
[-11.74599361 309.21359253]
[-21.04540253 320.98306274]
[-30.34481049 332.75256348]
[-39.64421844 344.52206421]
[-48.94362640 356.29156494]
[-56.27913666 369.37551880]
[-61.46867371 383.44921875]
[-66.65821075 397.52291870]
[-71.84774780 411.59658813]
[-66.74170685 421.16519165]
[-67.71063995 431.74734497]
[-74.19642639 439.88641357]
[-83.87861633 443.05648804]
[-89.42159271 456.99475098]
[-94.96456909 470.93304443]
[-100.50754547 484.87130737]
[-93.79357147 496.53048706]
[-94.99491882 509.73565674]
[-103.45108032 519.69531250]
[-115.91011047 522.92492676]
[-121.62850189 536.79217529]
[-127.34689331 550.65942383]
[-133.06527710 564.52661133]
[-138.78366089 578.39385986]
[-144.50205994 592.26110840]
[-150.22044373 606.12829590]
[-142.08329773 593.52728271]
[-130.52445984 583.96728516]
[-116.62049103 578.33880615]
[-101.66640472 577.16607666]
[-87.05500793 580.55828857]
[-74.14719391 588.19952393]
[-64.14519501 599.37805176]
[-57.98056793 613.05279541]
[-56.22749710 627.94995117]
[-59.04925537 642.68218994]
[-66.18302917 655.87719727]
[-76.96437836 666.30615234]
[-90.38914490 672.99761963]
[-105.20696259 675.32836914]
[-120.03770447 673.08129883]
[-133.50004578 666.46582031]
[-144.34013367 656.09790039]
[-151.54830933 642.94335938]
[-154.45326233 628.22656250]
[-154.26400757 643.22540283]
[-151.03314209 651.74218750]
[-154.16818237 658.41436768]
[-154.16818237 673.41436768]
[-141.13455200 681.66833496]
[-134.65313721 695.66815186]
[-136.79211426 710.94647217]
[-146.86895752 722.62811279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 244]
[6 243]
[7 241]
[8 240]
[9 57]
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[15 51]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[59 221]
[60 220]
[61 219]
[62 218]
[63 217]
[64 216]
[65 215]
[68 211]
[69 210]
[70 209]
[71 208]
[73 204]
[74 203]
[75 202]
[76 201]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 93]
[86 92]
[87 91]
[102 200]
[103 199]
[104 198]
[105 197]
[106 196]
[108 194]
[109 193]
[111 192]
[112 191]
[113 190]
[115 188]
[116 187]
[117 186]
[118 185]
[119 184]
[120 183]
[121 182]
[122 181]
[126 136]
[127 135]
[128 134]
[129 133]
[137 165]
[138 164]
[139 163]
[143 162]
[144 161]
[146 159]
[147 158]
[149 156]
[150 155]
[169 180]
[170 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
