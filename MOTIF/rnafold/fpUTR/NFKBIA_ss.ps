%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCACAGCAGUCCGUGCCGCCGUCCCGCCCGCCAGCGCCCCAGCGAGGAAGCAGCGCGCAGCCCGCGGCCCAGCGCACCCGCAGCAGCGCCCGCAGCUCGUCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[149.32962036 149.24935913]
[147.15626526 133.99870300]
[133.95884705 126.86931610]
[120.76142120 119.73992920]
[108.14387512 127.46595764]
[93.35422516 127.86637878]
[80.33710480 120.83440399]
[72.56439209 108.24555206]
[72.10919189 93.45748901]
[58.91177368 86.32810974]
[48.23740387 91.94671631]
[36.29916763 91.64772034]
[26.12737656 85.62486267]
[20.24649239 75.50984192]
[20.04891968 63.93198013]
[7.27598286 56.06737137]
[-5.49695396 48.20276260]
[-18.26989174 40.33815384]
[-31.04282761 32.47354507]
[-46.85079956 31.82654953]
[-53.63172150 18.56501198]
[-66.40465546 10.70040321]
[-79.20800781 12.91689873]
[-89.71898651 5.98493099]
[-92.53614807 -5.87321997]
[-105.08141327 -14.09613895]
[-117.62667847 -22.31905746]
[-130.28704834 -30.36362839]
[-143.05998230 -38.22823715]
[-155.83291626 -46.09284592]
[-173.94567871 -40.94858170]
[-189.87432861 -50.38455963]
[-193.92472839 -68.12651825]
[-207.12214661 -75.25590515]
[-223.49049377 -74.25120544]
[-232.31791687 -88.07179260]
[-224.52352905 -102.50022125]
[-208.12553406 -102.69376373]
[-199.99276733 -88.45332336]
[-186.79534912 -81.32393646]
[-176.66983032 -86.94176483]
[-164.96952820 -86.90628052]
[-154.66769409 -81.10868073]
[-148.43963623 -70.91936493]
[-147.96830750 -58.86578369]
[-135.19537354 -51.00117493]
[-122.42243195 -43.13656616]
[-114.96789551 -42.29716110]
[-109.40375519 -34.86431885]
[-96.85849762 -26.64140129]
[-84.31323242 -18.41848183]
[-66.82709503 -18.44017410]
[-58.54004669 -2.07253432]
[-45.76710892 5.79207516]
[-30.87274551 5.87653971]
[-23.17821884 19.70060730]
[-10.40528202 27.56521606]
[2.36765528 35.42982483]
[15.14059258 43.29443359]
[27.91352844 51.15904236]
[45.30371475 45.79581070]
[61.43983841 54.87244415]
[66.04115295 73.13068390]
[79.23857880 80.26007080]
[91.85612488 72.53404236]
[106.64577484 72.13362122]
[119.66289520 79.16559601]
[127.43560791 91.75444794]
[127.89080811 106.54251099]
[141.08822632 113.67189026]
[154.28564453 120.80127716]
[168.23197937 114.25863647]
[183.18190002 117.14878845]
[193.44201660 128.15760803]
[195.23089600 142.92031860]
[208.42831421 150.04971313]
[221.62573242 157.17909241]
[234.82315063 164.30847168]
[248.76948547 157.76583862]
[263.71942139 160.65599060]
[273.97952271 171.66481018]
[275.76840210 186.42752075]
[288.96582031 193.55691528]
[298.15002441 194.91961670]
[302.43164062 201.07937622]
[315.42202759 208.57937622]
[328.41241455 216.07937622]
[344.23236084 216.27876282]
[351.38586426 229.34309387]
[364.37625122 236.84309387]
[380.76644897 236.30200195]
[389.19924927 250.36686707]
[380.99966431 264.56893921]
[364.60275269 264.29837036]
[356.87625122 249.83348083]
[343.88586426 242.33348083]
[328.99505615 242.67053223]
[320.91241455 229.06974792]
[307.92202759 221.56974792]
[294.93164062 214.06974792]
[281.83642578 206.75433350]
[268.63900757 199.62493896]
[255.31155396 206.22166443]
[240.47978210 203.67558289]
[229.86714172 192.75656128]
[227.69377136 177.50588989]
[214.49635315 170.37651062]
[201.29893494 163.24713135]
[188.10151672 156.11775208]
[174.77404785 162.71446228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 71]
[3 70]
[4 69]
[9 64]
[10 63]
[15 60]
[16 59]
[17 58]
[18 57]
[19 56]
[21 54]
[22 53]
[25 51]
[26 50]
[27 49]
[28 47]
[29 46]
[30 45]
[33 40]
[34 39]
[75 109]
[76 108]
[77 107]
[78 106]
[82 102]
[83 101]
[85 100]
[86 99]
[87 98]
[89 96]
[90 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
