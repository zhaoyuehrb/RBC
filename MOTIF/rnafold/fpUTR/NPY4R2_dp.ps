%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPY4R2)
} def

/sequence { (\
GCGUCAUCCCUCAAGUGUAUCACUUAGUUCAAGAGUCCUGGAAUCUUUUCACAUCCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.027261768 ubox
1 18 0.019536016 ubox
1 28 0.015895697 ubox
1 36 0.306200599 ubox
2 15 0.028309242 ubox
2 17 0.020223512 ubox
2 27 0.017254095 ubox
2 35 0.334696819 ubox
2 40 0.018201477 ubox
3 16 0.015858453 ubox
3 18 0.007524288 ubox
3 20 0.018559833 ubox
3 23 0.011183228 ubox
3 28 0.004818747 ubox
3 36 0.024014266 ubox
3 39 0.017205712 ubox
3 44 0.027796484 ubox
3 52 0.055339139 ubox
3 54 0.010159032 ubox
3 58 0.071131051 ubox
4 15 0.006845474 ubox
4 19 0.019237924 ubox
4 22 0.010957225 ubox
4 34 0.294924616 ubox
4 35 0.008199068 ubox
4 41 0.071733857 ubox
4 42 0.041245627 ubox
4 43 0.027104236 ubox
4 51 0.051508998 ubox
4 53 0.010066267 ubox
4 57 0.064429149 ubox
5 17 0.037768032 ubox
5 33 0.308932215 ubox
5 40 0.119305637 ubox
5 41 0.043722176 ubox
6 16 0.037818646 ubox
6 20 0.004294773 ubox
6 28 0.018128607 ubox
6 36 0.013263705 ubox
6 39 0.116457869 ubox
6 44 0.027754140 ubox
6 54 0.010889794 ubox
7 15 0.037018794 ubox
7 19 0.004163574 ubox
7 27 0.012577830 ubox
7 34 0.062265023 ubox
7 35 0.008553547 ubox
7 41 0.003824511 ubox
7 42 0.200400345 ubox
7 43 0.021753963 ubox
7 53 0.010520596 ubox
8 33 0.066902553 ubox
8 40 0.008322198 ubox
8 41 0.214982950 ubox
9 40 0.214958966 ubox
9 41 0.023817446 ubox
10 27 0.622300517 ubox
10 33 0.031643204 ubox
10 35 0.419904203 ubox
10 40 0.023740474 ubox
10 41 0.003983250 ubox
11 26 0.622601939 ubox
11 32 0.030735422 ubox
11 34 0.422360035 ubox
11 41 0.004941617 ubox
11 42 0.007652816 ubox
12 33 0.422364692 ubox
12 40 0.007761949 ubox
12 41 0.007986821 ubox
13 25 0.909802904 ubox
13 29 0.045609049 ubox
13 39 0.006428582 ubox
13 47 0.010741875 ubox
14 24 0.951085206 ubox
14 25 0.015724709 ubox
14 28 0.044228644 ubox
14 29 0.013272062 ubox
14 39 0.009419270 ubox
14 46 0.012022886 ubox
14 59 0.202505009 ubox
15 23 0.955928525 ubox
15 24 0.005825434 ubox
15 28 0.011300296 ubox
15 38 0.010160866 ubox
15 45 0.012143794 ubox
15 52 0.067551343 ubox
15 54 0.067075332 ubox
15 58 0.224776637 ubox
16 22 0.954824121 ubox
16 26 0.044177052 ubox
16 27 0.004998790 ubox
16 31 0.064916330 ubox
16 43 0.003683406 ubox
16 51 0.067618972 ubox
16 53 0.070030810 ubox
16 57 0.224755787 ubox
17 21 0.939598469 ubox
17 23 0.016090689 ubox
17 25 0.043567798 ubox
17 28 0.010323947 ubox
17 30 0.065677536 ubox
17 44 0.005359581 ubox
17 50 0.067498678 ubox
17 52 0.071076720 ubox
17 54 0.006674059 ubox
17 56 0.223882968 ubox
17 58 0.006764113 ubox
18 22 0.014685942 ubox
18 26 0.043583504 ubox
18 27 0.009205430 ubox
18 40 0.013486734 ubox
18 43 0.005829448 ubox
18 51 0.068534728 ubox
18 53 0.014872109 ubox
18 57 0.006287907 ubox
19 25 0.043948273 ubox
19 28 0.049273659 ubox
19 36 0.004154833 ubox
19 39 0.015330371 ubox
19 54 0.134012509 ubox
20 27 0.049216152 ubox
20 34 0.014218562 ubox
20 35 0.004001024 ubox
20 41 0.007600565 ubox
20 42 0.006738307 ubox
20 53 0.131370869 ubox
21 33 0.014889524 ubox
21 40 0.011689310 ubox
21 41 0.007019651 ubox
22 28 0.011651551 ubox
22 36 0.094842393 ubox
22 39 0.008580144 ubox
23 27 0.012405462 ubox
23 33 0.030967731 ubox
23 35 0.101388411 ubox
23 41 0.003257738 ubox
24 32 0.031429454 ubox
24 33 0.006789791 ubox
24 34 0.101166568 ubox
24 35 0.003588192 ubox
24 41 0.008203994 ubox
24 43 0.004603877 ubox
25 31 0.030363266 ubox
25 32 0.012126438 ubox
25 33 0.099177157 ubox
25 34 0.006159072 ubox
25 40 0.014855308 ubox
25 42 0.003238475 ubox
26 39 0.022672719 ubox
26 46 0.209438757 ubox
26 47 0.038749389 ubox
26 48 0.019257250 ubox
26 49 0.011604702 ubox
26 59 0.038287602 ubox
27 36 0.006797521 ubox
27 38 0.024522964 ubox
27 44 0.289270674 ubox
27 45 0.214990574 ubox
27 46 0.020465447 ubox
27 47 0.011269416 ubox
27 48 0.010986076 ubox
27 52 0.134250819 ubox
27 54 0.013492737 ubox
27 58 0.043254590 ubox
28 34 0.019384929 ubox
28 35 0.015797263 ubox
28 41 0.003524051 ubox
28 42 0.125932627 ubox
28 43 0.373051948 ubox
28 51 0.130421597 ubox
28 53 0.014207274 ubox
28 57 0.040085886 ubox
29 33 0.019075001 ubox
29 34 0.016790387 ubox
29 40 0.003533528 ubox
29 41 0.135419689 ubox
29 42 0.385926311 ubox
30 40 0.146340038 ubox
30 41 0.383686120 ubox
31 39 0.123165614 ubox
31 47 0.223449549 ubox
31 48 0.023535924 ubox
31 49 0.134269652 ubox
32 39 0.373890427 ubox
32 46 0.250838305 ubox
32 47 0.018903203 ubox
32 48 0.148794898 ubox
32 49 0.009789508 ubox
32 59 0.066699049 ubox
33 38 0.408089471 ubox
33 45 0.254324437 ubox
33 46 0.008643200 ubox
33 47 0.154006588 ubox
33 48 0.010450337 ubox
33 49 0.006002943 ubox
33 50 0.038021146 ubox
33 55 0.137154892 ubox
33 58 0.073719652 ubox
34 44 0.249331684 ubox
34 46 0.154790397 ubox
34 47 0.009841983 ubox
34 48 0.006562650 ubox
34 49 0.037774685 ubox
34 54 0.136765091 ubox
34 59 0.234509287 ubox
35 44 0.015593266 ubox
35 45 0.154557901 ubox
35 46 0.007888496 ubox
35 47 0.006553630 ubox
35 48 0.035369123 ubox
35 52 0.068857656 ubox
35 54 0.030633733 ubox
35 58 0.259581594 ubox
36 42 0.197574883 ubox
36 43 0.037243102 ubox
36 51 0.061117308 ubox
36 53 0.032861247 ubox
36 57 0.235441499 ubox
37 41 0.210885298 ubox
39 51 0.224218651 ubox
39 53 0.332176087 ubox
39 57 0.563688612 ubox
40 46 0.017412210 ubox
40 47 0.011417265 ubox
40 48 0.013492524 ubox
40 49 0.017067349 ubox
40 50 0.249540839 ubox
40 52 0.360877607 ubox
40 55 0.011049060 ubox
40 56 0.646131114 ubox
40 59 0.005006766 ubox
41 45 0.017831104 ubox
41 46 0.009809898 ubox
41 47 0.014932550 ubox
41 48 0.021555366 ubox
41 49 0.247763750 ubox
41 50 0.425170898 ubox
41 54 0.005136377 ubox
41 55 0.646014201 ubox
41 58 0.005714868 ubox
42 46 0.013158745 ubox
42 47 0.022178971 ubox
42 48 0.243817535 ubox
42 49 0.424944151 ubox
42 54 0.601920678 ubox
43 47 0.186285656 ubox
43 48 0.407885834 ubox
43 54 0.138417817 ubox
44 53 0.192895748 ubox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
showpage
end
%%EOF
