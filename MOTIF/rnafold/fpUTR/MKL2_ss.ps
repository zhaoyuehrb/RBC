%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCGAGAUCGCGCGGCGGCGGCGGGAGCGGCGGCGGCGGCGGCCGGGGAGGUUCACAAUAAAGGUGCUAAGAAAGAGAAUGUAAGACAGGAAAAUAAUUAAAUAUUCUUACCGAGUGUCUUCAAUAGGCCGUGUUUAAGAGGCGUCUUACACUCCCUGUUGCCAGUGGCUGGAACACA\
) } def
/len { sequence length } bind def

/coor [
[117.89481354 143.58480835]
[110.50780487 130.52981567]
[110.63797760 115.53038025]
[103.13825989 115.46529388]
[98.77620697 129.81703186]
[94.41415405 144.16877747]
[98.65434265 160.01026917]
[86.86560059 171.41017151]
[71.17517853 166.64123535]
[67.72403717 150.60934448]
[80.06240845 139.80671692]
[84.42446899 125.45497894]
[88.78652191 111.10324097]
[76.47027588 102.54111481]
[64.53703308 111.62944031]
[58.24625397 126.14621735]
[43.43313980 127.70211792]
[31.49989700 136.79045105]
[25.20911980 151.30722046]
[10.39600372 152.86312866]
[-1.53723812 161.95146179]
[-7.82801485 176.46823120]
[-22.64113235 178.02413940]
[-34.57437134 187.11247253]
[-40.40220642 202.44114685]
[-56.63212967 204.79096985]
[-66.56819153 191.74462891]
[-59.98901749 176.72309875]
[-43.66270447 175.17922974]
[-31.72946167 166.09089661]
[-26.29223061 152.22418213]
[-10.62556839 150.01821899]
[1.30767334 140.92988586]
[6.74490452 127.06317139]
[22.41156578 124.85720825]
[34.34480667 115.76888275]
[39.78203964 101.90216064]
[55.44869995 99.69619751]
[67.38194275 90.60787201]
[76.67601776 78.83415985]
[82.74533844 65.11689758]
[88.81465912 51.39963531]
[94.88397980 37.68236923]
[100.95330048 23.96510506]
[107.02262115 10.24784088]
[107.63782501 1.10648656]
[113.31816101 -3.65339804]
[119.62464142 -17.26325798]
[125.93112946 -30.87311554]
[132.23760986 -44.48297501]
[138.54409790 -58.09283447]
[144.85058594 -71.70269775]
[130.90351868 -66.18185425]
[119.79006195 -76.25612640]
[123.91957855 -90.67649841]
[138.68211365 -93.34062195]
[126.14714813 -101.57923126]
[113.61218262 -109.81784058]
[98.68593597 -105.15509796]
[84.27460480 -111.22531891]
[77.18277740 -125.16232300]
[80.75900269 -140.38548279]
[93.31469727 -149.70689392]
[108.92144012 -148.72526550]
[120.21020508 -137.90408325]
[121.85079193 -122.35280609]
[134.38575745 -114.11419678]
[146.92071533 -105.87558746]
[139.87005615 -119.11523438]
[128.70704651 -129.13458252]
[122.78497314 -142.91606140]
[123.19929504 -157.91033936]
[129.87336731 -171.34375000]
[141.57260132 -180.73138428]
[156.13288879 -184.33670044]
[170.86082458 -181.49276733]
[183.03201294 -172.72567749]
[190.39503479 -159.65716553]
[191.58784485 -144.70466614]
[186.38981628 -130.63410950]
[175.76512146 -120.04998016]
[169.41310120 -106.46131897]
[181.50227356 -115.34116364]
[193.59146118 -124.22101593]
[205.68063354 -133.10086060]
[217.76982117 -141.98071289]
[229.85899353 -150.86056519]
[241.94818115 -159.74040222]
[254.03736877 -168.62025452]
[263.02178955 -180.63191223]
[268.12490845 -194.73718262]
[273.22799683 -208.84243774]
[278.33111572 -222.94769287]
[283.43423462 -237.05294800]
[280.85336304 -252.66223145]
[292.45904541 -261.99804688]
[297.56216431 -276.10330200]
[290.62927246 -290.30578613]
[295.84857178 -305.22335815]
[310.12356567 -312.00570679]
[324.98513794 -306.62899780]
[331.61618042 -292.28308105]
[326.08261108 -277.47918701]
[311.66741943 -271.00018311]
[306.56430054 -256.89492798]
[309.51016235 -242.29455566]
[297.53948975 -231.94984436]
[292.43637085 -217.84457397]
[287.33325195 -203.73931885]
[282.23016357 -189.63406372]
[277.12704468 -175.52880859]
[281.92575073 -169.76492310]
[289.92370605 -182.45478821]
[304.46395874 -178.76948547]
[305.45202637 -163.80206299]
[291.52319336 -158.23715210]
[296.32189941 -152.47326660]
[311.11843872 -154.93542480]
[323.46139526 -164.83299255]
[337.28607178 -159.28974915]
[352.08261108 -161.75190735]
[366.87915039 -164.21406555]
[381.67572021 -166.67623901]
[394.01867676 -176.57380676]
[407.84335327 -171.03054810]
[422.63989258 -173.49272156]
[437.43643188 -175.95487976]
[452.23297119 -178.41703796]
[462.69348145 -190.58082581]
[478.71954346 -189.84249878]
[488.01733398 -176.76846313]
[483.45440674 -161.38798523]
[468.53103638 -155.49964905]
[454.69512939 -163.62049866]
[439.89859009 -161.15832520]
[425.10205078 -158.69616699]
[410.30551147 -156.23400879]
[399.02090454 -146.51254272]
[384.13787842 -151.87968445]
[369.34133911 -149.41752625]
[354.54476929 -146.95536804]
[339.74822998 -144.49320984]
[328.46362305 -134.77174377]
[313.58059692 -140.13888550]
[298.78405762 -137.67672729]
[262.91720581 -156.53106689]
[250.82803345 -147.65122986]
[238.73884583 -138.77137756]
[226.64967346 -129.89152527]
[214.56048584 -121.01168060]
[202.47129822 -112.13183594]
[190.38212585 -103.25198364]
[178.29293823 -94.37213898]
[158.46043396 -65.39620972]
[152.15396118 -51.78635025]
[145.84747314 -38.17649078]
[139.54098511 -24.56663322]
[133.23449707 -10.95677376]
[126.92802429 2.65308547]
[120.73988342 16.31716156]
[114.67056274 30.03442574]
[108.60124207 43.75168991]
[102.53192139 57.46895599]
[96.46260071 71.18621826]
[90.39328003 84.90348053]
[119.47055054 72.82922363]
[147.56242371 111.61333466]
[151.67472839 126.03862000]
[155.78703308 140.46391296]
[170.13574219 146.68072510]
[177.08512878 160.68928528]
[173.35391235 175.87519836]
[160.70384216 185.06814575]
[145.10792542 183.92747498]
[133.93005371 172.99179077]
[132.44807434 157.42459106]
[141.36175537 144.57621765]
[137.24943542 130.15093994]
[133.13713074 115.72564697]
[125.63741302 115.66056061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 13]
[5 12]
[6 11]
[14 39]
[15 38]
[17 36]
[18 35]
[20 33]
[21 32]
[23 30]
[24 29]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[47 159]
[48 158]
[49 157]
[50 156]
[51 155]
[52 154]
[56 68]
[57 67]
[58 66]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 146]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[96 105]
[97 104]
[117 145]
[118 144]
[120 142]
[121 141]
[122 140]
[123 139]
[125 137]
[126 136]
[127 135]
[128 134]
[167 179]
[168 178]
[169 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
