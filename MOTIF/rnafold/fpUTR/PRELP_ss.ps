%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAGCUAACCUCCCCACCCCAAUAGGAUCUGGUGGAAGAAAAGUCAGGCAAACACAAGCACGCACACACCACUGGGAGAUCAGAUCUUCUAGCUGGCUCUCUGCUGCCACAGCUCCGCCGAAGGGAGGGGGUGGAAGAGGAGGACUAAACUCAGAGCUGAGAGGAGAGGCAGGUGUGUGCAGGUGCAUCACCUGGAUC\
) } def
/len { sequence length } bind def

/coor [
[51.28475571 171.01257324]
[37.55923843 164.96192932]
[26.83276939 154.47657776]
[20.47171974 140.89213562]
[19.28637886 125.93903351]
[23.42774010 111.52206421]
[32.36826324 99.47768402]
[44.96907425 91.34014893]
[59.62505341 88.14604187]
[74.46926880 90.30223083]
[87.60899353 97.53256989]
[77.90744019 86.09229279]
[68.20589447 74.65201569]
[58.50434494 63.21173477]
[48.80279541 51.77145767]
[38.74842453 40.63998795]
[28.35105896 29.82819939]
[17.95369148 19.01641083]
[7.55632544 8.20462227]
[-2.84104109 -2.60716605]
[-13.23840809 -13.41895390]
[-23.63577461 -24.23074341]
[-30.19002342 -16.20880508]
[-38.73975372 -10.61996555]
[-48.43880463 -7.91316175]
[-58.35784149 -8.25721264]
[-67.57333374 -11.53282642]
[-75.25353241 -17.35181618]
[-80.73348236 -25.10097122]
[-83.57226562 -34.00578308]
[-83.58763885 -43.20747757]
[-80.86534882 -51.84573746]
[-92.67588043 -61.09297180]
[-104.48641205 -70.34020233]
[-116.29694366 -79.58744049]
[-128.10746765 -88.83467102]
[-139.91799927 -98.08190155]
[-155.55374146 -100.49735260]
[-160.80488586 -114.43560028]
[-172.61541748 -123.68283844]
[-184.42594910 -132.93006897]
[-197.30580139 -132.14985657]
[-206.95364380 -140.10174561]
[-208.54093933 -152.09881592]
[-220.20550537 -161.52951050]
[-231.87007141 -170.96020508]
[-243.53462219 -180.39089966]
[-255.19918823 -189.82159424]
[-266.86373901 -199.25228882]
[-280.54779053 -205.39613342]
[-295.34625244 -207.84680176]
[-306.30041504 -196.85653687]
[-321.62771606 -194.43716431]
[-335.43450928 -201.51899719]
[-342.41177368 -215.37890625]
[-339.87664795 -230.68748474]
[-328.80389404 -241.55827332]
[-313.45126343 -243.81123352]
[-299.72210693 -236.58004761]
[-292.89559937 -222.64524841]
[-278.09713745 -220.19459534]
[-273.80331421 -226.34382629]
[-286.10180664 -234.93147278]
[-298.40026855 -243.51910400]
[-310.69876099 -252.10673523]
[-322.99722290 -260.69436646]
[-335.29556274 -269.28219604]
[-326.70755005 -281.58041382]
[-314.40957642 -272.99285889]
[-302.11111450 -264.40521240]
[-289.81262207 -255.81758118]
[-277.51416016 -247.22994995]
[-265.21569824 -238.64230347]
[-260.92187500 -244.79154968]
[-268.32012939 -257.84014893]
[-275.71838379 -270.88873291]
[-283.11663818 -283.93734741]
[-290.51489258 -296.98593140]
[-297.91314697 -310.03451538]
[-305.31140137 -323.08312988]
[-312.70962524 -336.13171387]
[-320.10787964 -349.18029785]
[-333.17977905 -359.97671509]
[-326.42395020 -375.52648926]
[-309.61166382 -373.33929443]
[-307.05929565 -356.57855225]
[-299.66104126 -343.52996826]
[-292.26278687 -330.48138428]
[-284.86453247 -317.43276978]
[-277.46627808 -304.38418579]
[-270.06802368 -291.33560181]
[-262.66976929 -278.28698730]
[-255.27153015 -265.23840332]
[-247.87327576 -252.18980408]
[-257.43307495 -210.91685486]
[-245.76849365 -201.48616028]
[-234.10392761 -192.05546570]
[-222.43937683 -182.62477112]
[-210.77481079 -173.19407654]
[-199.11024475 -163.76338196]
[-181.65618896 -161.97389221]
[-175.17872620 -144.74060059]
[-163.36819458 -135.49336243]
[-151.55764771 -126.24613190]
[-136.76669312 -124.49210358]
[-130.67077637 -109.89243317]
[-118.86023712 -100.64520264]
[-107.04970551 -91.39797211]
[-95.23917389 -82.15073395]
[-83.42864227 -72.90350342]
[-71.61811066 -63.65626907]
[-61.08664703 -69.95160675]
[-48.43608856 -71.54630280]
[-35.74811554 -67.79152679]
[-25.26497650 -58.95087051]
[-15.92572784 -70.68877411]
[-6.58647919 -82.42668152]
[2.75276947 -94.16458893]
[-0.53996265 -109.45157623]
[6.80961370 -123.25439453]
[21.33125305 -129.05577087]
[36.16828156 -124.11647797]
[44.31510925 -110.76869965]
[41.92504883 -95.31484222]
[30.12661934 -85.05175018]
[14.49067497 -84.82534027]
[5.15142679 -73.08743286]
[-4.18782139 -61.34952927]
[-13.52707005 -49.61162186]
[-12.82398605 -34.62810898]
[-2.42661953 -23.81632042]
[7.97074699 -13.00453281]
[18.36811447 -2.19274426]
[28.76548004 8.61904430]
[39.16284561 19.43083191]
[49.56021500 30.24262047]
[52.36499786 30.42813110]
[55.26490021 31.74037170]
[57.82872391 34.22102737]
[59.61822128 37.75447083]
[60.24307251 42.06990814]
[69.94461823 53.51018906]
[79.64617157 64.95046234]
[89.34771729 76.39073944]
[99.04927063 87.83102417]
[111.14096832 72.90283966]
[135.09973145 69.66767120]
[149.66169739 73.26615906]
[161.52603149 63.44049454]
[176.72344971 62.49601364]
[189.41282654 70.58573151]
[194.84046936 84.43054199]
[209.40243530 88.02902985]
[223.96440125 91.62751770]
[235.74313354 81.52598572]
[251.21253967 80.31059265]
[264.42431641 88.44869995]
[270.29824829 102.81102753]
[266.57571411 117.87496948]
[254.68809509 127.84812927]
[239.20642090 128.89562988]
[226.08370972 120.61468506]
[220.36592102 106.18948364]
[205.80395508 102.59099579]
[191.24198914 98.99250793]
[179.99034119 108.71559906]
[164.99345398 109.96361542]
[151.98524475 102.04907990]
[146.06320190 87.82812500]
[131.50123596 84.22963715]
[127.01732635 90.24166870]
[113.56558990 108.27776337]
[121.16687775 121.20913696]
[128.76815796 134.14051819]
[136.36946106 147.07188416]
[143.97074890 160.00326538]
[151.57203674 172.93463135]
[158.62448120 178.75288391]
[159.18925476 186.12805176]
[166.58750916 199.17663574]
[173.98576355 212.22523499]
[181.38401794 225.27383423]
[195.78808594 233.11315918]
[195.93051147 249.51168823]
[181.66479492 257.60000610]
[167.66625977 249.05757141]
[168.33541870 232.67208862]
[160.93716431 219.62348938]
[153.53890991 206.57489014]
[146.14065552 193.52630615]
[138.64065552 180.53591919]
[131.03936768 167.60455322]
[123.43807983 154.67317200]
[115.83679199 141.74180603]
[108.23550415 128.81042480]
[100.63421631 115.87905121]
[103.12725830 130.67042542]
[100.26711273 145.39521790]
[92.41809082 158.17774963]
[80.58004761 167.38972473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 145]
[12 144]
[13 143]
[14 142]
[15 141]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[32 111]
[33 110]
[34 109]
[35 108]
[36 107]
[37 106]
[39 104]
[40 103]
[41 102]
[44 100]
[45 99]
[46 98]
[47 97]
[48 96]
[49 95]
[50 61]
[51 60]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[115 129]
[116 128]
[117 127]
[118 126]
[147 170]
[148 169]
[152 165]
[153 164]
[154 163]
[172 196]
[173 195]
[174 194]
[175 193]
[176 192]
[177 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
