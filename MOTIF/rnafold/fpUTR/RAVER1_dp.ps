%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAVER1)
} def

/sequence { (\
UUAGCCAACGGGGCAAGGGGGGCGGGAAGGAGGUGGGGUUUCUCCCAGCCAAUCGACGGGCGCGCCCUCGUUGCCGCUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.022231632 ubox
1 11 0.008953092 ubox
1 16 0.117979749 ubox
1 17 0.143474797 ubox
1 18 0.033581889 ubox
1 19 0.012744986 ubox
2 7 0.024313952 ubox
2 10 0.010731600 ubox
2 11 0.012320583 ubox
2 15 0.133858948 ubox
2 16 0.168638347 ubox
2 17 0.037100750 ubox
2 18 0.025829675 ubox
3 78 0.291863582 ubox
3 80 0.054120283 ubox
4 14 0.630364168 ubox
4 77 0.315406798 ubox
4 79 0.060873498 ubox
5 11 0.085010191 ubox
5 12 0.021697769 ubox
5 13 0.630885451 ubox
5 18 0.019398857 ubox
5 19 0.006799307 ubox
5 76 0.315280300 ubox
6 10 0.080043276 ubox
6 11 0.034674291 ubox
6 12 0.630326628 ubox
6 17 0.019441597 ubox
6 18 0.006893944 ubox
6 73 0.007849355 ubox
7 72 0.008036957 ubox
8 71 0.008045135 ubox
9 70 0.008048677 ubox
9 76 0.037611850 ubox
10 69 0.007955937 ubox
10 75 0.022163148 ubox
10 78 0.475951115 ubox
10 79 0.200295865 ubox
10 80 0.043006776 ubox
11 67 0.006591405 ubox
11 74 0.015027844 ubox
11 75 0.040450666 ubox
11 77 0.533517849 ubox
11 78 0.099673699 ubox
11 79 0.047368585 ubox
11 80 0.004548085 ubox
12 66 0.006616650 ubox
12 74 0.029023809 ubox
12 75 0.771113014 ubox
12 77 0.049328828 ubox
12 78 0.011160317 ubox
13 65 0.006638866 ubox
13 74 0.774133504 ubox
13 77 0.008605407 ubox
14 64 0.006628357 ubox
14 73 0.774830075 ubox
14 76 0.007752140 ubox
15 72 0.774367226 ubox
16 71 0.768636387 ubox
16 80 0.027146600 ubox
17 54 0.005705887 ubox
17 68 0.032543810 ubox
17 69 0.068070212 ubox
17 71 0.003662385 ubox
17 79 0.029888200 ubox
17 80 0.015481053 ubox
18 53 0.005661818 ubox
18 67 0.039933921 ubox
18 68 0.065321174 ubox
18 69 0.770417067 ubox
18 78 0.028765130 ubox
18 79 0.015516854 ubox
18 80 0.052617958 ubox
19 66 0.040086562 ubox
19 67 0.070507237 ubox
19 68 0.770141089 ubox
19 77 0.028363027 ubox
19 78 0.008881330 ubox
19 79 0.049975288 ubox
19 80 0.572599919 ubox
20 65 0.040155028 ubox
20 66 0.070440487 ubox
20 67 0.770642480 ubox
20 77 0.005061208 ubox
20 78 0.040721060 ubox
20 79 0.627291745 ubox
20 80 0.020837057 ubox
21 50 0.007032291 ubox
21 65 0.070334004 ubox
21 66 0.770651065 ubox
21 75 0.028426419 ubox
21 77 0.028910037 ubox
21 78 0.628979649 ubox
21 79 0.022699857 ubox
22 49 0.007069549 ubox
22 63 0.081264340 ubox
22 65 0.770615139 ubox
22 74 0.028429868 ubox
22 77 0.630689380 ubox
23 48 0.007082279 ubox
23 62 0.081618862 ubox
23 64 0.770254734 ubox
23 73 0.028419239 ubox
23 76 0.631365877 ubox
24 44 0.008014319 ubox
24 45 0.006466143 ubox
24 46 0.476897372 ubox
24 50 0.009434470 ubox
24 57 0.005909556 ubox
24 61 0.074856994 ubox
24 63 0.600477355 ubox
24 72 0.026179261 ubox
24 75 0.631360803 ubox
25 43 0.011025322 ubox
25 44 0.006885954 ubox
25 45 0.497628384 ubox
25 46 0.170591744 ubox
25 49 0.009912888 ubox
25 50 0.016906484 ubox
25 53 0.004191194 ubox
25 54 0.012442291 ubox
25 71 0.023340887 ubox
25 74 0.631272809 ubox
26 42 0.012247555 ubox
26 44 0.497740154 ubox
26 45 0.168168742 ubox
26 49 0.016896148 ubox
26 53 0.011275391 ubox
26 54 0.020600385 ubox
26 69 0.009258909 ubox
26 72 0.004253547 ubox
26 74 0.004413794 ubox
27 41 0.012300320 ubox
27 43 0.354066220 ubox
27 53 0.020494614 ubox
27 68 0.007400194 ubox
27 71 0.004084178 ubox
27 72 0.623489056 ubox
28 40 0.012505449 ubox
28 41 0.010180858 ubox
28 43 0.382353527 ubox
28 68 0.020308864 ubox
28 71 0.626284947 ubox
28 72 0.003248221 ubox
29 39 0.012038668 ubox
29 40 0.010431918 ubox
29 41 0.048067825 ubox
29 42 0.517842697 ubox
29 43 0.039600353 ubox
29 44 0.003657597 ubox
29 45 0.261798277 ubox
29 46 0.032221252 ubox
29 50 0.029797680 ubox
29 54 0.165551558 ubox
29 66 0.004008883 ubox
29 67 0.021114472 ubox
29 68 0.008368207 ubox
29 69 0.014711354 ubox
29 71 0.003591662 ubox
30 39 0.010029221 ubox
30 40 0.051638233 ubox
30 41 0.517411057 ubox
30 42 0.062083151 ubox
30 44 0.264439391 ubox
30 45 0.026426116 ubox
30 49 0.029761844 ubox
30 53 0.159853317 ubox
30 54 0.275709711 ubox
30 65 0.004029892 ubox
30 66 0.020702606 ubox
30 67 0.010084752 ubox
30 68 0.013040714 ubox
30 69 0.630679645 ubox
31 39 0.051881528 ubox
31 40 0.516604995 ubox
31 41 0.062886500 ubox
31 43 0.265051658 ubox
31 53 0.263117214 ubox
31 68 0.630435553 ubox
32 39 0.488381322 ubox
32 40 0.060816926 ubox
32 41 0.005018137 ubox
32 42 0.264924219 ubox
32 43 0.015600949 ubox
32 44 0.008897524 ubox
32 45 0.009806141 ubox
32 46 0.075681086 ubox
32 50 0.346944573 ubox
32 54 0.026270662 ubox
32 66 0.189446420 ubox
32 67 0.599966806 ubox
33 39 0.050687587 ubox
33 40 0.020411800 ubox
33 41 0.251495300 ubox
33 42 0.018507963 ubox
33 43 0.007415080 ubox
33 44 0.009948937 ubox
33 45 0.075632447 ubox
33 49 0.347701938 ubox
33 53 0.025718406 ubox
33 57 0.005408630 ubox
33 63 0.019342547 ubox
33 65 0.266859398 ubox
33 66 0.566874869 ubox
33 67 0.004859104 ubox
34 38 0.016556498 ubox
34 47 0.604295246 ubox
34 48 0.270695122 ubox
34 51 0.010340989 ubox
34 52 0.021640731 ubox
34 56 0.005198544 ubox
34 62 0.018834895 ubox
34 64 0.322980250 ubox
35 41 0.006185407 ubox
35 42 0.012261992 ubox
35 43 0.015812393 ubox
35 44 0.074594996 ubox
35 45 0.047385132 ubox
35 46 0.684076172 ubox
35 50 0.012893589 ubox
35 61 0.004643326 ubox
35 63 0.311842131 ubox
35 66 0.014399289 ubox
36 40 0.007597963 ubox
36 41 0.010290445 ubox
36 42 0.016743871 ubox
36 43 0.074518574 ubox
36 44 0.048954321 ubox
36 45 0.684620375 ubox
36 46 0.416980341 ubox
36 49 0.010962056 ubox
36 50 0.005082040 ubox
36 54 0.004487011 ubox
36 65 0.019711942 ubox
36 67 0.004309054 ubox
37 41 0.010939205 ubox
37 42 0.074471795 ubox
37 43 0.049118435 ubox
37 44 0.683711930 ubox
37 45 0.418510674 ubox
37 46 0.021276368 ubox
37 49 0.004865133 ubox
37 50 0.019478064 ubox
37 66 0.004716597 ubox
38 42 0.102654646 ubox
38 43 0.498221587 ubox
38 44 0.418379769 ubox
38 45 0.021209986 ubox
38 49 0.019571324 ubox
38 61 0.006322045 ubox
38 63 0.020089663 ubox
38 65 0.005090406 ubox
39 48 0.019567522 ubox
39 60 0.005920448 ubox
39 62 0.019870554 ubox
39 64 0.005012640 ubox
40 47 0.016684145 ubox
40 59 0.005659718 ubox
41 58 0.005202958 ubox
43 56 0.005709437 ubox
43 60 0.003466117 ubox
44 55 0.005784070 ubox
44 59 0.003860662 ubox
44 60 0.013291963 ubox
45 58 0.003850469 ubox
45 59 0.013373969 ubox
46 58 0.013382449 ubox
48 61 0.931491864 ubox
48 63 0.037257654 ubox
48 65 0.025037223 ubox
49 59 0.052892274 ubox
49 60 0.932146555 ubox
49 62 0.036911504 ubox
49 64 0.025013106 ubox
50 58 0.061364764 ubox
50 59 0.931403812 ubox
51 72 0.003492529 ubox
52 71 0.004013151 ubox
53 59 0.016035326 ubox
53 60 0.072363542 ubox
54 58 0.030371571 ubox
54 59 0.093168887 ubox
54 62 0.068061897 ubox
54 64 0.005130377 ubox
54 70 0.019649677 ubox
54 73 0.010417049 ubox
55 61 0.072762594 ubox
55 63 0.006595174 ubox
55 69 0.020697840 ubox
55 72 0.011502316 ubox
56 68 0.020668022 ubox
56 71 0.011801949 ubox
57 64 0.023980535 ubox
57 70 0.011893520 ubox
58 63 0.026776638 ubox
58 66 0.009451582 ubox
58 67 0.053239076 ubox
58 69 0.011678253 ubox
59 65 0.009894137 ubox
59 66 0.053358159 ubox
59 67 0.004948724 ubox
59 68 0.010757433 ubox
60 65 0.053133406 ubox
60 66 0.004935211 ubox
60 67 0.010649869 ubox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
19 80 0.9500000 lbox
20 79 0.9500000 lbox
21 78 0.9500000 lbox
22 77 0.9500000 lbox
23 76 0.9500000 lbox
24 75 0.9500000 lbox
25 74 0.9500000 lbox
27 72 0.9500000 lbox
28 71 0.9500000 lbox
30 69 0.9500000 lbox
31 68 0.9500000 lbox
32 67 0.9500000 lbox
33 66 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
showpage
end
%%EOF
