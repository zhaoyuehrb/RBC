%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC35F6)
} def

/sequence { (\
GGAAGCGCUCGCGCAGGAGACCCCGGGUGACGGGGCCCGGCGCCGCUAACUGGAGCGAACCCCAGCGUCCGCCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.007029754 ubox
1 37 0.029243107 ubox
1 38 0.011994537 ubox
1 47 0.007598228 ubox
1 51 0.113738572 ubox
1 61 0.026631395 ubox
1 62 0.081455286 ubox
1 63 0.096449849 ubox
1 69 0.011682260 ubox
1 70 0.634858298 ubox
1 73 0.544687118 ubox
2 8 0.003535889 ubox
2 9 0.005820118 ubox
2 10 0.009069492 ubox
2 36 0.029226828 ubox
2 37 0.012379773 ubox
2 46 0.007213648 ubox
2 50 0.127287476 ubox
2 60 0.026557396 ubox
2 61 0.081959429 ubox
2 62 0.096069724 ubox
2 68 0.006369258 ubox
2 69 0.634410653 ubox
2 72 0.543724467 ubox
3 9 0.008839804 ubox
3 68 0.480519780 ubox
4 47 0.659461655 ubox
4 51 0.019183816 ubox
5 12 0.014719664 ubox
5 14 0.082412588 ubox
5 36 0.018291305 ubox
5 43 0.010524027 ubox
5 46 0.683485469 ubox
5 50 0.020230345 ubox
5 66 0.159952377 ubox
5 68 0.551017954 ubox
5 72 0.041169693 ubox
6 11 0.014721149 ubox
6 13 0.082493826 ubox
6 32 0.003663723 ubox
6 35 0.018292747 ubox
6 42 0.010556917 ubox
6 45 0.683592486 ubox
6 57 0.134445550 ubox
6 65 0.157589949 ubox
6 67 0.681530198 ubox
6 71 0.041508775 ubox
6 74 0.006418517 ubox
7 12 0.080362087 ubox
7 14 0.014827166 ubox
7 31 0.003729503 ubox
7 41 0.010566070 ubox
7 43 0.004374229 ubox
7 44 0.680975275 ubox
7 46 0.100124997 ubox
7 56 0.137725218 ubox
7 66 0.684761467 ubox
7 68 0.004988913 ubox
7 70 0.035436727 ubox
7 72 0.008925691 ubox
7 73 0.005016665 ubox
8 13 0.014818014 ubox
8 19 0.056929894 ubox
8 33 0.006483755 ubox
8 34 0.016925063 ubox
8 40 0.010466158 ubox
8 42 0.005526878 ubox
8 45 0.100159556 ubox
8 55 0.137730628 ubox
8 65 0.684337016 ubox
8 67 0.005660432 ubox
8 71 0.009487470 ubox
9 18 0.057180259 ubox
9 20 0.003674183 ubox
9 30 0.004302265 ubox
9 32 0.003330480 ubox
9 33 0.016984569 ubox
9 39 0.006475053 ubox
9 53 0.003210663 ubox
9 54 0.137656720 ubox
9 58 0.012144521 ubox
9 64 0.639547675 ubox
9 75 0.004318487 ubox
10 16 0.003265012 ubox
10 17 0.057176702 ubox
10 19 0.004029890 ubox
10 29 0.004772650 ubox
10 32 0.017870626 ubox
10 39 0.008143309 ubox
10 42 0.025501647 ubox
10 45 0.019218847 ubox
10 52 0.007331321 ubox
10 53 0.137220111 ubox
10 57 0.014254531 ubox
10 67 0.028897479 ubox
10 74 0.004667802 ubox
11 28 0.004782065 ubox
11 31 0.017943662 ubox
11 38 0.008081164 ubox
11 41 0.025833072 ubox
11 43 0.992120515 ubox
11 44 0.017407594 ubox
11 46 0.004346541 ubox
11 56 0.010442373 ubox
11 66 0.021542011 ubox
11 68 0.011314821 ubox
11 73 0.003492087 ubox
12 27 0.004783253 ubox
12 29 0.018242226 ubox
12 40 0.025677408 ubox
12 42 0.993655643 ubox
12 45 0.004246889 ubox
12 55 0.010379801 ubox
12 65 0.020624916 ubox
12 67 0.011400743 ubox
13 28 0.018246813 ubox
13 38 0.003804766 ubox
13 41 0.993850516 ubox
13 43 0.004035487 ubox
13 46 0.003193860 ubox
13 66 0.011402351 ubox
13 72 0.003366853 ubox
14 27 0.018230530 ubox
14 40 0.990391916 ubox
14 42 0.004569573 ubox
14 45 0.003191091 ubox
14 52 0.009672320 ubox
14 65 0.011384686 ubox
14 71 0.003360778 ubox
15 51 0.009703821 ubox
16 22 0.003782011 ubox
16 23 0.011398832 ubox
16 24 0.017303594 ubox
16 37 0.285832713 ubox
16 38 0.948664562 ubox
16 44 0.003599339 ubox
16 50 0.009673910 ubox
16 61 0.007451959 ubox
16 62 0.007004405 ubox
16 63 0.010342285 ubox
17 21 0.003744412 ubox
17 22 0.011426547 ubox
17 23 0.017273546 ubox
17 36 0.286500168 ubox
17 37 0.951554208 ubox
17 43 0.003612298 ubox
17 60 0.007432879 ubox
17 61 0.007004643 ubox
17 62 0.010315817 ubox
18 47 0.008694163 ubox
19 46 0.009002898 ubox
21 34 0.013710832 ubox
21 35 0.998907774 ubox
22 33 0.012052026 ubox
22 34 0.999521916 ubox
22 35 0.004261684 ubox
23 32 0.010110992 ubox
23 33 0.999546723 ubox
23 34 0.004152071 ubox
23 40 0.016206186 ubox
24 32 0.999551196 ubox
24 33 0.004025710 ubox
24 39 0.018699663 ubox
25 31 0.998362392 ubox
25 38 0.018859775 ubox
26 37 0.018863889 ubox
27 36 0.018863670 ubox
28 35 0.018726474 ubox
32 63 0.004261178 ubox
33 62 0.004399793 ubox
34 61 0.004401172 ubox
35 60 0.004395043 ubox
38 57 0.003659317 ubox
38 71 0.005128214 ubox
38 74 0.099994537 ubox
39 61 0.005466672 ubox
39 62 0.005440240 ubox
39 63 0.004253075 ubox
39 69 0.006248160 ubox
39 70 0.005956822 ubox
39 73 0.104173066 ubox
40 56 0.007353195 ubox
40 60 0.005471655 ubox
40 61 0.005471332 ubox
40 62 0.004237375 ubox
40 68 0.006404270 ubox
40 69 0.005922904 ubox
40 72 0.104183633 ubox
41 55 0.007790961 ubox
41 67 0.008765432 ubox
41 71 0.104178300 ubox
42 66 0.008818455 ubox
42 70 0.103455450 ubox
43 53 0.009522313 ubox
43 65 0.008786964 ubox
43 67 0.003713262 ubox
44 52 0.041880844 ubox
44 57 0.691166055 ubox
44 67 0.093721375 ubox
44 71 0.004537983 ubox
44 74 0.006458170 ubox
45 51 0.034202211 ubox
45 56 0.698251748 ubox
45 66 0.094509377 ubox
45 68 0.045675064 ubox
45 70 0.004769491 ubox
45 72 0.007913220 ubox
45 73 0.005675970 ubox
46 53 0.006571861 ubox
46 55 0.698245986 ubox
46 65 0.090745418 ubox
46 67 0.046463614 ubox
46 71 0.008500902 ubox
47 52 0.010335252 ubox
47 54 0.677092674 ubox
47 64 0.073740482 ubox
49 68 0.009850853 ubox
50 65 0.379710416 ubox
50 67 0.008937930 ubox
51 64 0.390673615 ubox
51 71 0.410202805 ubox
51 74 0.034941278 ubox
52 61 0.052479113 ubox
52 62 0.032840626 ubox
52 63 0.396428879 ubox
52 69 0.033920439 ubox
52 70 0.569606605 ubox
52 73 0.043185973 ubox
53 60 0.052447954 ubox
53 61 0.034983161 ubox
53 62 0.396066643 ubox
53 68 0.034039325 ubox
53 69 0.569856487 ubox
53 72 0.040904811 ubox
54 68 0.551377778 ubox
55 66 0.554423014 ubox
55 68 0.080545249 ubox
55 72 0.055022131 ubox
56 65 0.555157610 ubox
56 67 0.141391645 ubox
56 71 0.056601075 ubox
57 66 0.141602062 ubox
57 69 0.004683998 ubox
57 70 0.056376978 ubox
58 68 0.004612740 ubox
59 68 0.054574373 ubox
60 67 0.055880886 ubox
65 72 0.078895453 ubox
66 71 0.081305690 ubox
66 74 0.058595669 ubox
67 73 0.058603691 ubox
67 76 0.181472393 ubox
68 75 0.183331231 ubox
69 74 0.183405232 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
showpage
end
%%EOF
