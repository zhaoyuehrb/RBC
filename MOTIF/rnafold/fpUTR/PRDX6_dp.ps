%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRDX6)
} def

/sequence { (\
GAACCAACCGGUUGCUUGCUGUCCCAGCGGCGCCCCCUCAUCACCGUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.038047199 ubox
1 17 0.018196173 ubox
1 23 0.022137446 ubox
1 39 0.077964851 ubox
1 42 0.210363835 ubox
1 48 0.118245479 ubox
2 12 0.028844115 ubox
2 13 0.635970067 ubox
2 16 0.015633747 ubox
2 17 0.012067111 ubox
2 22 0.020979378 ubox
2 38 0.072131797 ubox
2 41 0.203718858 ubox
2 47 0.112872051 ubox
3 12 0.678764769 ubox
3 16 0.010836390 ubox
3 22 0.006750912 ubox
3 47 0.025086844 ubox
4 11 0.684603050 ubox
4 21 0.007153757 ubox
4 46 0.030674461 ubox
5 10 0.683681308 ubox
5 14 0.017167526 ubox
5 18 0.009346783 ubox
5 21 0.005041904 ubox
6 13 0.016871451 ubox
6 17 0.009476652 ubox
6 20 0.004564074 ubox
7 12 0.013314797 ubox
7 16 0.009148682 ubox
7 22 0.031845263 ubox
7 47 0.064090118 ubox
8 21 0.024132919 ubox
8 46 0.049890909 ubox
9 18 0.006102962 ubox
9 21 0.158185734 ubox
9 46 0.315667597 ubox
9 49 0.008701197 ubox
10 16 0.003950055 ubox
10 17 0.005762144 ubox
10 20 0.162405244 ubox
10 24 0.032885790 ubox
10 25 0.048388880 ubox
10 34 0.473008301 ubox
10 35 0.359203422 ubox
10 36 0.104258119 ubox
10 37 0.155870179 ubox
10 38 0.011550336 ubox
10 39 0.010578466 ubox
10 42 0.011628035 ubox
10 45 0.325665932 ubox
10 48 0.006057824 ubox
10 51 0.024428575 ubox
11 15 0.004160322 ubox
11 16 0.004286980 ubox
11 19 0.162858696 ubox
11 23 0.032922313 ubox
11 24 0.048314044 ubox
11 28 0.003990318 ubox
11 31 0.010742246 ubox
11 33 0.474422858 ubox
11 34 0.359511536 ubox
11 35 0.103155201 ubox
11 36 0.155746692 ubox
11 37 0.012729043 ubox
11 38 0.008380583 ubox
11 41 0.011586359 ubox
11 44 0.325639233 ubox
11 47 0.004652647 ubox
11 50 0.024602904 ubox
12 18 0.161681230 ubox
12 21 0.008281791 ubox
12 27 0.004065195 ubox
12 30 0.010967188 ubox
12 32 0.335192542 ubox
12 40 0.011951551 ubox
12 43 0.321734007 ubox
12 49 0.024333464 ubox
13 21 0.004878282 ubox
13 26 0.009685742 ubox
13 29 0.011896403 ubox
13 32 0.594729168 ubox
13 40 0.038631670 ubox
13 43 0.020569408 ubox
14 20 0.007248573 ubox
14 22 0.139216221 ubox
14 25 0.014061238 ubox
14 28 0.056326548 ubox
14 31 0.774938033 ubox
14 33 0.265904392 ubox
14 39 0.037773238 ubox
14 42 0.025151002 ubox
14 47 0.011880844 ubox
14 50 0.043189118 ubox
15 21 0.145767531 ubox
15 27 0.056262499 ubox
15 30 0.771879187 ubox
15 32 0.266252786 ubox
15 46 0.012160757 ubox
15 49 0.043272287 ubox
16 26 0.045659848 ubox
16 27 0.008168909 ubox
16 29 0.540778787 ubox
16 30 0.256250025 ubox
17 26 0.066068707 ubox
17 29 0.604425553 ubox
17 32 0.102043279 ubox
17 40 0.004219565 ubox
17 46 0.004474510 ubox
18 25 0.076294507 ubox
18 28 0.902529446 ubox
18 31 0.166469940 ubox
18 33 0.009758970 ubox
18 45 0.004462529 ubox
18 47 0.004268563 ubox
19 27 0.903192262 ubox
19 30 0.166776373 ubox
19 32 0.009570799 ubox
19 46 0.004433816 ubox
20 26 0.902681197 ubox
20 29 0.166659230 ubox
20 32 0.004435163 ubox
20 43 0.004689859 ubox
21 25 0.888410660 ubox
21 28 0.166730201 ubox
21 31 0.010567796 ubox
21 33 0.003371034 ubox
21 42 0.004773297 ubox
21 44 0.004264246 ubox
22 27 0.158750940 ubox
22 30 0.009662023 ubox
22 32 0.003344014 ubox
22 43 0.004160719 ubox
23 29 0.009598997 ubox
23 30 0.005586791 ubox
24 29 0.005600481 ubox
26 38 0.006508173 ubox
27 37 0.006718687 ubox
27 47 0.010464643 ubox
27 50 0.389271757 ubox
28 46 0.011084587 ubox
28 49 0.390752104 ubox
29 35 0.012326176 ubox
29 36 0.018434813 ubox
29 37 0.020475015 ubox
29 38 0.003439454 ubox
29 39 0.003320186 ubox
29 45 0.015096950 ubox
29 48 0.402464561 ubox
29 51 0.368648585 ubox
30 34 0.012204957 ubox
30 35 0.018333560 ubox
30 36 0.020415383 ubox
30 37 0.004239718 ubox
30 44 0.015061488 ubox
30 47 0.402721672 ubox
30 50 0.376346871 ubox
31 46 0.402891453 ubox
31 49 0.376399686 ubox
32 45 0.392577859 ubox
32 47 0.070244021 ubox
32 48 0.366410204 ubox
32 50 0.116838081 ubox
33 46 0.304806099 ubox
33 49 0.116946286 ubox
40 47 0.038693926 ubox
41 46 0.037500935 ubox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
showpage
end
%%EOF
