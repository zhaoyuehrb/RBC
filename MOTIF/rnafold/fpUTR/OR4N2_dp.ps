%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4N2)
} def

/sequence { (\
AGGAAAGGUACUAGCUCUUCUUUAUGCAUCUGGUAGAACUCAGCUGUGAAUUCCUGUGAUCCUGGGCUUUUUCUGGCCAGGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004927271 ubox
1 19 0.003364298 ubox
1 21 0.016084288 ubox
1 22 0.084102337 ubox
1 23 0.009709366 ubox
1 55 0.933456315 ubox
1 63 0.004036874 ubox
2 11 0.005566221 ubox
2 18 0.004792090 ubox
2 20 0.018488561 ubox
2 21 0.122672598 ubox
2 22 0.008660441 ubox
2 23 0.005058491 ubox
2 53 0.012676457 ubox
2 54 0.988447092 ubox
2 55 0.020405718 ubox
2 62 0.004295018 ubox
3 17 0.004957384 ubox
3 19 0.018089170 ubox
3 20 0.127257371 ubox
3 21 0.004708940 ubox
3 22 0.005497991 ubox
3 52 0.012663267 ubox
3 53 0.988661169 ubox
3 54 0.021865117 ubox
3 61 0.004310680 ubox
4 16 0.004318432 ubox
4 18 0.017489063 ubox
4 19 0.125909536 ubox
4 21 0.005642036 ubox
4 22 0.003325135 ubox
4 23 0.015614691 ubox
4 51 0.021070621 ubox
4 52 0.947903479 ubox
4 60 0.003886348 ubox
5 18 0.120408341 ubox
5 19 0.041265417 ubox
5 21 0.003230664 ubox
5 22 0.021678468 ubox
5 23 0.012706367 ubox
5 51 0.720385308 ubox
5 52 0.253401181 ubox
6 12 0.008524648 ubox
6 16 0.030402571 ubox
6 18 0.056623277 ubox
6 19 0.025673847 ubox
6 21 0.026161178 ubox
6 22 0.015664966 ubox
6 31 0.003494526 ubox
6 40 0.005399578 ubox
6 45 0.003367674 ubox
6 51 0.353575222 ubox
6 52 0.019766471 ubox
6 55 0.062832114 ubox
7 11 0.009023042 ubox
7 15 0.031149834 ubox
7 16 0.129326619 ubox
7 17 0.060540930 ubox
7 18 0.030306276 ubox
7 20 0.026640159 ubox
7 21 0.016678614 ubox
7 30 0.003618656 ubox
7 39 0.006026864 ubox
7 40 0.003775605 ubox
7 44 0.003321079 ubox
7 45 0.007178546 ubox
7 51 0.059721661 ubox
7 52 0.011004966 ubox
7 53 0.003780192 ubox
7 54 0.064788933 ubox
8 15 0.143623336 ubox
8 16 0.021900991 ubox
8 17 0.031096497 ubox
8 19 0.024475257 ubox
8 20 0.016807556 ubox
8 25 0.004752275 ubox
8 29 0.003590255 ubox
8 39 0.005011540 ubox
8 44 0.007336911 ubox
8 47 0.029647223 ubox
8 51 0.033729630 ubox
8 52 0.004069130 ubox
8 53 0.064742494 ubox
9 14 0.139344572 ubox
9 24 0.004953859 ubox
9 28 0.003549138 ubox
9 35 0.021099532 ubox
9 38 0.004431619 ubox
9 43 0.006938960 ubox
9 46 0.010919914 ubox
9 48 0.917385354 ubox
9 50 0.035744014 ubox
9 58 0.004565780 ubox
10 23 0.004839765 ubox
10 34 0.022562727 ubox
10 45 0.008382243 ubox
10 47 0.961386847 ubox
10 57 0.005013092 ubox
11 33 0.022686777 ubox
11 36 0.003280854 ubox
11 43 0.009483459 ubox
11 46 0.943208576 ubox
11 56 0.004978869 ubox
12 24 0.003571718 ubox
12 32 0.022660464 ubox
12 35 0.003276486 ubox
12 42 0.009603418 ubox
12 46 0.278455481 ubox
12 48 0.003444546 ubox
13 21 0.006148873 ubox
13 23 0.003705531 ubox
13 31 0.022457557 ubox
13 40 0.012367522 ubox
13 45 0.966641192 ubox
13 55 0.005040936 ubox
14 20 0.006437355 ubox
14 22 0.003269180 ubox
14 27 0.017148435 ubox
14 30 0.018474784 ubox
14 39 0.012742812 ubox
14 44 0.986878647 ubox
14 47 0.003162332 ubox
14 54 0.005115271 ubox
15 26 0.018386086 ubox
15 43 0.986819456 ubox
15 46 0.003170585 ubox
16 37 0.068028607 ubox
16 42 0.963269513 ubox
17 32 0.004469978 ubox
17 33 0.008972974 ubox
17 36 0.086059162 ubox
17 43 0.005947557 ubox
17 48 0.003246326 ubox
18 32 0.008821465 ubox
18 35 0.081432959 ubox
18 36 0.004446925 ubox
18 37 0.009565857 ubox
18 38 0.748305911 ubox
18 42 0.010588087 ubox
18 50 0.020733715 ubox
19 33 0.036401662 ubox
19 35 0.005438539 ubox
19 36 0.008097277 ubox
19 37 0.768242391 ubox
19 42 0.004399842 ubox
19 49 0.023499874 ubox
20 32 0.038769043 ubox
20 33 0.073065258 ubox
20 36 0.768903680 ubox
20 48 0.023800319 ubox
21 32 0.072266092 ubox
21 33 0.013440701 ubox
21 35 0.723440992 ubox
21 36 0.014255119 ubox
21 37 0.526832870 ubox
21 38 0.138250005 ubox
21 49 0.007750764 ubox
21 50 0.028420168 ubox
22 32 0.032782888 ubox
22 33 0.419695682 ubox
22 35 0.039874100 ubox
22 36 0.549098698 ubox
22 37 0.144204989 ubox
22 38 0.083948957 ubox
22 48 0.008250953 ubox
22 49 0.035486040 ubox
22 50 0.032440869 ubox
22 59 0.014912636 ubox
23 32 0.454816850 ubox
23 35 0.564117411 ubox
23 36 0.126981057 ubox
23 37 0.070012968 ubox
23 48 0.034825240 ubox
23 49 0.038596434 ubox
23 58 0.016991916 ubox
24 31 0.423806080 ubox
24 34 0.584048264 ubox
24 47 0.023986969 ubox
24 51 0.013529205 ubox
24 57 0.017201832 ubox
24 60 0.003666325 ubox
25 32 0.127588691 ubox
25 33 0.582340491 ubox
25 35 0.307411088 ubox
25 42 0.004792410 ubox
25 46 0.020915808 ubox
25 48 0.066801999 ubox
25 50 0.012971181 ubox
25 56 0.016594628 ubox
25 58 0.004919850 ubox
25 59 0.004981252 ubox
26 31 0.079519744 ubox
26 34 0.433629215 ubox
26 41 0.006727981 ubox
26 44 0.008636904 ubox
26 45 0.016443431 ubox
26 47 0.143337078 ubox
26 55 0.003659427 ubox
26 57 0.010628209 ubox
27 33 0.434950090 ubox
27 43 0.008108656 ubox
27 46 0.147006516 ubox
27 48 0.023413242 ubox
27 56 0.010900066 ubox
27 58 0.027077971 ubox
28 34 0.019041080 ubox
28 45 0.145651625 ubox
28 47 0.023468371 ubox
28 55 0.010579819 ubox
28 57 0.027096805 ubox
28 60 0.014223353 ubox
29 33 0.017870380 ubox
29 37 0.014366389 ubox
29 46 0.021752033 ubox
29 49 0.005919088 ubox
29 56 0.026408685 ubox
29 59 0.018912547 ubox
29 81 0.012708535 ubox
30 36 0.014854719 ubox
30 43 0.150414806 ubox
30 48 0.006245523 ubox
30 58 0.019690535 ubox
30 80 0.017283021 ubox
31 35 0.013428740 ubox
31 42 0.151089555 ubox
31 46 0.005294178 ubox
31 56 0.010870965 ubox
31 79 0.017324905 ubox
32 40 0.015965894 ubox
32 41 0.150910933 ubox
32 45 0.008921776 ubox
32 53 0.005978771 ubox
32 54 0.026775145 ubox
32 55 0.017544521 ubox
32 57 0.004367742 ubox
32 78 0.017343913 ubox
33 39 0.074749162 ubox
33 40 0.107182527 ubox
33 44 0.009202899 ubox
33 52 0.005765808 ubox
33 53 0.026306277 ubox
33 54 0.017871590 ubox
33 57 0.003316059 ubox
33 77 0.017336888 ubox
34 38 0.067826002 ubox
34 43 0.009162669 ubox
34 56 0.009588518 ubox
34 75 0.011711047 ubox
34 76 0.012717870 ubox
35 52 0.009095221 ubox
35 55 0.010718472 ubox
35 74 0.016597840 ubox
36 51 0.008902012 ubox
36 52 0.003419434 ubox
36 53 0.032321017 ubox
36 54 0.008011919 ubox
36 73 0.017180549 ubox
37 51 0.003595437 ubox
37 52 0.033959946 ubox
37 72 0.017094199 ubox
38 47 0.023988877 ubox
38 51 0.032728722 ubox
38 71 0.015804218 ubox
39 46 0.024211745 ubox
39 66 0.007868200 ubox
40 49 0.041614787 ubox
40 65 0.007872192 ubox
41 48 0.042798980 ubox
41 64 0.007880840 ubox
42 47 0.041042468 ubox
42 63 0.007875049 ubox
42 68 0.014664267 ubox
43 62 0.007824833 ubox
43 67 0.015283780 ubox
44 66 0.015247823 ubox
45 65 0.014997842 ubox
46 60 0.003868896 ubox
47 59 0.003977032 ubox
48 61 0.008293862 ubox
49 60 0.007677020 ubox
50 57 0.014083151 ubox
50 60 0.008374371 ubox
51 56 0.014140099 ubox
51 59 0.009603767 ubox
51 83 0.006478546 ubox
51 84 0.006215488 ubox
52 58 0.009126819 ubox
52 59 0.024298013 ubox
52 82 0.006975486 ubox
52 83 0.008124231 ubox
53 58 0.025667022 ubox
53 81 0.007177317 ubox
53 82 0.008215660 ubox
54 80 0.007184468 ubox
54 81 0.006672339 ubox
55 79 0.007139496 ubox
55 80 0.004262890 ubox
56 78 0.005018879 ubox
60 82 0.291425774 ubox
60 83 0.834569185 ubox
61 76 0.003999675 ubox
61 81 0.451980659 ubox
61 82 0.891074853 ubox
62 75 0.003997818 ubox
62 80 0.454794128 ubox
62 81 0.890164976 ubox
62 82 0.011541575 ubox
63 79 0.450529922 ubox
63 80 0.823478728 ubox
63 81 0.011496032 ubox
64 73 0.003397921 ubox
64 78 0.370771389 ubox
65 77 0.266923842 ubox
65 78 0.923973217 ubox
66 73 0.003567499 ubox
66 77 0.963524507 ubox
67 76 0.997267596 ubox
68 75 0.980580814 ubox
68 76 0.007145197 ubox
69 75 0.036161199 ubox
69 76 0.004547102 ubox
70 75 0.011352368 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
11 46 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
60 83 0.9500000 lbox
61 82 0.9500000 lbox
62 81 0.9500000 lbox
63 80 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
showpage
end
%%EOF
