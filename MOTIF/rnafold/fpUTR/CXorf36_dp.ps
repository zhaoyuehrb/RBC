%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CXorf36)
} def

/sequence { (\
CUCUUUGGCCAAGCCCUGCCUCUGUACAGCCUCGAGUGGACAGCCAGAGGCUGCAGCUGGAGCCCAGAGCCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005698788 ubox
1 62 0.014771185 ubox
1 67 0.013964043 ubox
1 69 0.474498312 ubox
1 75 0.091722885 ubox
2 7 0.005195968 ubox
2 8 0.003244571 ubox
2 61 0.015222485 ubox
2 66 0.013662927 ubox
2 68 0.483499212 ubox
2 74 0.093251902 ubox
3 7 0.004223396 ubox
3 60 0.015255451 ubox
3 62 0.029485650 ubox
3 67 0.484113053 ubox
3 69 0.665864295 ubox
3 75 0.192744259 ubox
4 12 0.003227160 ubox
4 59 0.014214952 ubox
4 61 0.030464899 ubox
4 66 0.456780585 ubox
4 67 0.020594568 ubox
4 68 0.676415251 ubox
4 69 0.008640400 ubox
4 74 0.186264927 ubox
4 75 0.283683934 ubox
5 60 0.031026484 ubox
5 62 0.003483721 ubox
5 66 0.091768199 ubox
5 67 0.677148505 ubox
5 68 0.010558015 ubox
5 73 0.166204878 ubox
5 74 0.463693205 ubox
5 75 0.010530425 ubox
6 12 0.003206894 ubox
6 59 0.030749763 ubox
6 66 0.679874877 ubox
6 67 0.009280343 ubox
6 73 0.500548479 ubox
6 74 0.011743143 ubox
7 15 0.064579010 ubox
7 16 0.008485915 ubox
7 20 0.060795732 ubox
7 58 0.036813913 ubox
7 64 0.502651753 ubox
7 65 0.662131318 ubox
7 71 0.174609363 ubox
7 72 0.509480744 ubox
8 14 0.064972608 ubox
8 15 0.007922215 ubox
8 19 0.061034004 ubox
8 54 0.004048112 ubox
8 57 0.039011612 ubox
8 63 0.531809120 ubox
8 64 0.638882663 ubox
8 70 0.178069532 ubox
8 71 0.507982519 ubox
9 13 0.064604232 ubox
9 18 0.060132464 ubox
9 53 0.004015962 ubox
9 56 0.039028608 ubox
9 60 0.547797923 ubox
9 62 0.547149399 ubox
9 69 0.180954457 ubox
10 18 0.018588417 ubox
10 24 0.006787259 ubox
10 53 0.005532320 ubox
10 59 0.560686313 ubox
11 17 0.020422044 ubox
11 23 0.006604867 ubox
11 52 0.004155230 ubox
11 58 0.405196088 ubox
12 21 0.011037146 ubox
12 23 0.004037112 ubox
12 52 0.020993393 ubox
12 58 0.661118455 ubox
13 19 0.031757345 ubox
13 20 0.010801746 ubox
13 22 0.004313683 ubox
13 30 0.005425941 ubox
13 51 0.021639995 ubox
13 54 0.130137502 ubox
13 57 0.768936896 ubox
13 63 0.314130167 ubox
13 70 0.508701134 ubox
14 18 0.031953283 ubox
14 29 0.005428296 ubox
14 50 0.021636466 ubox
14 53 0.130085013 ubox
14 56 0.767332431 ubox
14 60 0.036618779 ubox
14 62 0.314065849 ubox
14 69 0.508636862 ubox
15 49 0.021628505 ubox
15 59 0.036445654 ubox
15 60 0.301652847 ubox
16 29 0.003337665 ubox
16 47 0.021602622 ubox
16 56 0.045861328 ubox
16 59 0.300989104 ubox
16 60 0.080670734 ubox
16 62 0.089384460 ubox
16 67 0.511895244 ubox
16 75 0.008791081 ubox
17 26 0.033984800 ubox
17 28 0.003530186 ubox
17 46 0.021601462 ubox
17 53 0.100474096 ubox
17 55 0.072568629 ubox
17 59 0.079404595 ubox
17 61 0.092605006 ubox
17 66 0.511892595 ubox
17 73 0.013406529 ubox
17 74 0.008465289 ubox
18 25 0.037627632 ubox
18 27 0.003635868 ubox
18 45 0.021548426 ubox
18 51 0.777526949 ubox
18 52 0.015910288 ubox
18 54 0.073499739 ubox
18 57 0.264854787 ubox
18 58 0.070120915 ubox
18 63 0.076343752 ubox
18 65 0.507460457 ubox
18 70 0.024663126 ubox
18 72 0.014624974 ubox
19 24 0.037778523 ubox
19 50 0.778122517 ubox
19 53 0.064806432 ubox
19 56 0.237040117 ubox
19 60 0.167813534 ubox
19 62 0.069618175 ubox
19 69 0.017890168 ubox
20 49 0.778197505 ubox
20 56 0.035653445 ubox
20 59 0.168041696 ubox
20 60 0.048470612 ubox
20 62 0.493888821 ubox
20 69 0.030792406 ubox
21 48 0.778089080 ubox
21 55 0.041994648 ubox
21 59 0.044615817 ubox
21 60 0.028965011 ubox
21 61 0.497253984 ubox
21 68 0.036510824 ubox
22 43 0.022927385 ubox
22 47 0.778147297 ubox
22 56 0.275082734 ubox
22 59 0.036565118 ubox
22 60 0.496765988 ubox
22 62 0.013358491 ubox
22 67 0.036623584 ubox
23 42 0.025347749 ubox
23 46 0.777561598 ubox
23 55 0.354681674 ubox
23 59 0.468349429 ubox
23 61 0.013397381 ubox
23 66 0.036594822 ubox
24 41 0.027556006 ubox
24 44 0.128075429 ubox
24 45 0.764364840 ubox
24 54 0.355317408 ubox
24 57 0.452053991 ubox
24 58 0.144772039 ubox
24 65 0.036417991 ubox
25 38 0.029246404 ubox
25 40 0.024061815 ubox
25 43 0.177655852 ubox
25 53 0.212087806 ubox
25 56 0.445192522 ubox
25 59 0.013684973 ubox
26 37 0.030534299 ubox
26 52 0.106752347 ubox
26 58 0.015464669 ubox
27 36 0.030596050 ubox
27 38 0.034830416 ubox
27 53 0.582843265 ubox
28 37 0.034313256 ubox
28 52 0.614124714 ubox
29 37 0.022707440 ubox
29 44 0.116086184 ubox
29 51 0.626530752 ubox
29 63 0.031820958 ubox
30 36 0.023888784 ubox
30 39 0.766876016 ubox
30 43 0.115506489 ubox
30 50 0.626596367 ubox
30 62 0.022623559 ubox
31 38 0.767021502 ubox
31 39 0.018065377 ubox
31 43 0.007076249 ubox
31 49 0.626591373 ubox
31 62 0.027634969 ubox
32 38 0.016002622 ubox
32 39 0.028379296 ubox
32 40 0.108954695 ubox
32 42 0.007332379 ubox
32 48 0.626389033 ubox
32 61 0.035716293 ubox
33 38 0.030362109 ubox
33 39 0.111119066 ubox
33 47 0.626152050 ubox
33 60 0.035774185 ubox
35 58 0.035719285 ubox
36 44 0.453256588 ubox
36 57 0.035844018 ubox
37 43 0.450298753 ubox
37 46 0.417181629 ubox
37 55 0.004480403 ubox
37 56 0.035439245 ubox
38 45 0.423034153 ubox
38 54 0.005440759 ubox
39 44 0.421262597 ubox
41 53 0.035832304 ubox
42 52 0.035970392 ubox
43 51 0.035989215 ubox
44 50 0.035988733 ubox
45 49 0.035726906 ubox
52 73 0.004210720 ubox
53 70 0.014718389 ubox
53 72 0.004501277 ubox
54 69 0.014874537 ubox
56 63 0.012340404 ubox
56 70 0.006373019 ubox
57 62 0.012344009 ubox
57 67 0.077803998 ubox
57 69 0.006224484 ubox
57 75 0.014588604 ubox
58 66 0.078387514 ubox
58 68 0.005313698 ubox
58 73 0.056475347 ubox
58 74 0.010630486 ubox
59 65 0.078924059 ubox
59 72 0.063874508 ubox
60 64 0.077652057 ubox
60 71 0.063886562 ubox
62 70 0.066089379 ubox
63 69 0.066034430 ubox
1 69 0.9500000 lbox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
showpage
end
%%EOF
