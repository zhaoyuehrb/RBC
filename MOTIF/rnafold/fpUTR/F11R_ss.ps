%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCAGCUCCUGUGGGGAAAGGCGCCAGUGCGCCGAGGCGGGGAGUGGCGGCGGGGUAACACCUGGCCGAGGUGACUCGUUCUGAAGAGCAGCGGUUCCUUACACCAAUCGGAACGUGCAGGGGUGGGGAGCUGGCCAAUCAGGCGCGGAGGGCGGGGCCGGGCGGGGUUCCACCUGGCGGCUGGCUCUCAGUCCCCUCGCUGUAGUCGCGGAGCUGUGUCUGUUCCCAGGAGUCCUUCGGCGGCUGUUGUGUC\
GGGAGCCUGAUCGCG\
) } def
/len { sequence length } bind def

/coor [
[300.24911499 730.68640137]
[295.13696289 716.58441162]
[290.02481079 702.48242188]
[284.91268921 688.38043213]
[274.11001587 682.98754883]
[269.72354126 671.30993652]
[274.60693359 659.39739990]
[269.65859985 645.23712158]
[264.71029663 631.07678223]
[259.76196289 616.91650391]
[254.81364441 602.75622559]
[249.86531067 588.59588623]
[244.91699219 574.43560791]
[239.76245117 569.17700195]
[239.99441528 560.08239746]
[235.21057129 545.86566162]
[230.42674255 531.64898682]
[225.64289856 517.43225098]
[214.96817017 511.79037476]
[210.85360718 500.01419067]
[216.01184082 488.21810913]
[211.39312744 473.94689941]
[206.77441406 459.67565918]
[202.15570068 445.40444946]
[197.53698730 431.13323975]
[192.91827393 416.86203003]
[187.88703918 411.48538208]
[188.32977295 402.39855957]
[183.87680054 388.07476807]
[179.42384338 373.75094604]
[165.90934753 362.53216553]
[170.16441345 344.59930420]
[165.54570007 330.32809448]
[160.92698669 316.05688477]
[155.89573669 310.68020630]
[156.33848572 301.59338379]
[151.88551331 287.26959229]
[138.37103271 276.05078125]
[142.62608337 258.11795044]
[138.00737000 243.84672546]
[133.38865662 229.57551575]
[128.76994324 215.30430603]
[117.48966217 205.57781982]
[120.60176849 190.06571960]
[115.98305511 175.79450989]
[111.36434174 161.52330017]
[106.33309937 156.14662170]
[106.77584076 147.05979919]
[102.32287598 132.73600769]
[69.24329376 142.56153870]
[30.01211548 117.75438690]
[15.25361538 120.43518066]
[0.49511570 123.11598206]
[-11.70006466 133.19508362]
[-25.60523605 127.85696411]
[-40.36373520 130.53776550]
[-55.12223816 133.21855164]
[-69.88073730 135.89935303]
[-84.38426208 144.67912292]
[-96.83587646 133.17288208]
[-89.22625732 118.02262878]
[-72.56153107 121.14085388]
[-57.80303574 118.46006012]
[-43.04453278 115.77925873]
[-28.28603363 113.09846497]
[-17.14648056 103.21111298]
[-2.18568182 108.35748291]
[12.57281780 105.67668152]
[27.33131790 102.99588776]
[27.15743256 87.99689484]
[12.34075069 85.65896606]
[-2.47593212 83.32103729]
[-17.57991219 89.70866394]
[-30.49884605 79.60752106]
[-27.94284439 63.40879059]
[-12.54129982 57.77634048]
[-0.13800304 68.50435638]
[14.67867947 70.84228516]
[29.49536324 73.18021393]
[33.69859314 58.78115463]
[19.95098877 52.78087616]
[6.20338202 46.78059769]
[-7.54422379 40.78032303]
[-23.77112961 43.15088654]
[-33.72385788 30.11726761]
[-27.16389465 15.08733273]
[-10.83956814 13.52259159]
[-1.54394603 27.03271484]
[12.20366001 33.03299332]
[25.95126534 39.03327179]
[39.69887161 45.03355026]
[44.79864883 39.53425217]
[54.99820328 28.53565788]
[60.09798431 23.03636169]
[53.07980347 9.77947044]
[46.06162643 -3.47742128]
[39.04344559 -16.73431206]
[32.02526855 -29.99120331]
[25.00708961 -43.24809647]
[17.98891068 -56.50498581]
[10.97073078 -69.76187897]
[3.95255232 -83.01876831]
[-3.06562638 -96.27565765]
[-10.08380508 -109.53255463]
[-16.83990860 -115.62528229]
[-17.10549164 -122.98404694]
[-23.96952057 -136.32141113]
[-39.17366791 -138.79933167]
[-49.87826920 -149.62821960]
[-52.12723160 -164.50793457]
[-45.26530075 -177.70082092]
[-52.12932968 -191.03817749]
[-66.90691376 -197.28338623]
[-71.09896088 -212.76905823]
[-61.48970795 -225.61592102]
[-45.45053864 -225.96894836]
[-35.28533554 -213.55732727]
[-38.79197311 -197.90220642]
[-31.92794418 -184.56484985]
[-17.20395088 -182.48109436]
[-6.40252447 -172.00286865]
[-3.81192875 -156.99813843]
[-10.63216305 -143.18544006]
[-3.76813436 -129.84808350]
[3.17308617 -116.55072784]
[10.19126511 -103.29383850]
[17.20944405 -90.03694916]
[24.22762299 -76.78005981]
[31.24580193 -63.52316666]
[38.26398087 -50.26627350]
[45.28215790 -37.00938416]
[52.30033875 -23.75249100]
[59.31851578 -10.49559975]
[66.33669281 2.76129127]
[73.35487366 16.01818275]
[88.11337280 13.33738518]
[90.02097321 -1.54082298]
[91.92857361 -16.41903114]
[83.29644775 -29.94182777]
[88.62309265 -45.07478714]
[103.82234192 -50.20919800]
[117.23464966 -41.40637970]
[118.57122803 -25.41909981]
[106.80677795 -14.51143265]
[104.89917755 0.36677516]
[102.99158478 15.24498272]
[116.36849976 22.03158951]
[127.24812317 11.70522022]
[131.93093872 -3.40708351]
[146.48867798 -6.55692625]
[157.36830139 -16.88329697]
[168.24792480 -27.20966530]
[179.12753296 -37.53603363]
[190.00715637 -47.86240387]
[200.88677979 -58.18877411]
[205.56959534 -73.30107880]
[220.12733459 -76.45092010]
[231.00695801 -86.77729034]
[241.76612854 -97.22908783]
[252.40342712 -107.80490112]
[263.04074097 -118.38072205]
[273.67803955 -128.95654297]
[284.31530762 -139.53236389]
[294.95260620 -150.10816956]
[299.28384399 -165.32498169]
[313.76464844 -168.81146240]
[324.40194702 -179.38728333]
[328.16766357 -195.34822083]
[343.94882202 -199.80769348]
[355.51110840 -188.17819214]
[350.96023560 -172.42314148]
[334.97775269 -168.74998474]
[324.34045410 -158.17417908]
[320.77008057 -143.71382141]
[305.52844238 -139.47088623]
[294.89114380 -128.89506531]
[284.25384521 -118.31924438]
[273.61654663 -107.74342346]
[262.97924805 -97.16761017]
[252.34194946 -86.59178925]
[251.43002319 -81.93702698]
[247.60653687 -77.79376221]
[241.33332825 -75.89767456]
[230.45370483 -65.57130432]
[226.54907227 -51.19760895]
[211.21315002 -47.30915833]
[200.33352661 -36.98278809]
[189.45390320 -26.65641785]
[178.57429504 -16.33004761]
[167.69467163 -6.00367785]
[156.81504822 4.32269192]
[152.91041565 18.69638443]
[137.57449341 22.58483887]
[126.69487000 32.91120911]
[152.35737610 95.97950745]
[116.64666748 128.28305054]
[121.09963226 142.60684204]
[125.63555145 156.90458679]
[130.25427246 171.17579651]
[134.87298584 185.44700623]
[146.48362732 196.19425964]
[143.04115295 210.68559265]
[147.65986633 224.95680237]
[152.27857971 239.22801208]
[156.89730835 253.49922180]
[167.98884583 260.03628540]
[171.55424500 271.99017334]
[166.20930481 282.81661987]
[170.66227722 297.14041138]
[175.19819641 311.43817139]
[179.81690979 325.70938110]
[184.43562317 339.98059082]
[195.52717590 346.51763916]
[199.09257507 358.47152710]
[193.74763489 369.29800415]
[198.20060730 383.62179565]
[202.65356445 397.94558716]
[207.18948364 412.24331665]
[211.80819702 426.51452637]
[216.42691040 440.78573608]
[221.04562378 455.05694580]
[225.66433716 469.32818604]
[230.28305054 483.59939575]
[244.23825073 495.63870239]
[239.85960388 512.64837646]
[244.64344788 526.86511230]
[249.42729187 541.08184814]
[254.21113586 555.29852295]
[259.07730103 569.48730469]
[264.02560425 583.64758301]
[268.97393799 597.80786133]
[273.92227173 611.96820068]
[278.87057495 626.12847900]
[283.81890869 640.28875732]
[288.76724243 654.44909668]
[302.99780273 666.16162109]
[299.01464844 683.26831055]
[304.12680054 697.37023926]
[309.23895264 711.47222900]
[314.35110474 725.57421875]
[320.19158936 739.39050293]
[326.74456787 752.88336182]
[333.29757690 766.37628174]
[347.96118164 771.63134766]
[354.41464233 785.40844727]
[349.31433105 799.35559082]
[355.86730957 812.84851074]
[362.42028809 826.34136963]
[377.43502808 831.27429199]
[384.48928833 845.41687012]
[379.39791870 860.37860107]
[365.18154907 867.28295898]
[350.27447510 862.03369141]
[343.52081299 847.74511719]
[348.92739868 832.89434814]
[342.37442017 819.40148926]
[335.82144165 805.90856934]
[321.70626831 801.29364014]
[314.86840820 787.70324707]
[319.80465698 772.92926025]
[313.25167847 759.43634033]
[306.69869995 745.94348145]
[303.77496338 760.65576172]
[293.42120361 771.50927734]
[278.86294556 775.12280273]
[264.63565063 770.37048340]
[255.17169189 758.73291016]
[253.41940308 743.83557129]
[259.92471313 730.31964111]
[272.66098022 722.39575195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 240]
[2 239]
[3 238]
[4 237]
[7 235]
[8 234]
[9 233]
[10 232]
[11 231]
[12 230]
[13 229]
[15 228]
[16 227]
[17 226]
[18 225]
[21 223]
[22 222]
[23 221]
[24 220]
[25 219]
[26 218]
[28 217]
[29 216]
[30 215]
[32 212]
[33 211]
[34 210]
[36 209]
[37 208]
[39 205]
[40 204]
[41 203]
[42 202]
[44 200]
[45 199]
[46 198]
[48 197]
[49 196]
[51 69]
[52 68]
[53 67]
[55 65]
[56 64]
[57 63]
[58 62]
[70 79]
[71 78]
[72 77]
[80 91]
[81 90]
[82 89]
[83 88]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[106 124]
[107 123]
[111 119]
[112 118]
[136 146]
[137 145]
[138 144]
[147 194]
[148 193]
[150 191]
[151 190]
[152 189]
[153 188]
[154 187]
[155 186]
[157 184]
[158 183]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[166 173]
[167 172]
[241 262]
[242 261]
[243 260]
[246 257]
[247 256]
[248 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
