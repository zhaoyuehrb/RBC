%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCUGCAUUUCUGCAGAGACAGAAAGAAACGCAGCUCUUGACUUCUUUUUUGUAAACAUUACUGUAAGAGUUGUGAUAACUUUUUAUUCUACUAUGUAUAUGUAUGGAAUAGUAUUAAUAAAUGAACUAGGGAAGGAUGUAAUAAAUUAGACAUCUCUUCAUUUUAGAGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[94.37747192 136.91601562]
[93.00284576 121.97912598]
[85.82218170 124.14431763]
[79.86740875 137.91169739]
[73.91263580 151.67907715]
[67.95786285 165.44644165]
[62.00308609 179.21382141]
[56.04830933 192.98120117]
[50.09353638 206.74858093]
[52.51775742 222.96755981]
[39.51712799 232.96333313]
[24.46557808 226.45312500]
[22.84685326 210.13406372]
[36.32616043 200.79380798]
[42.28093338 187.02642822]
[48.23571014 173.25904846]
[54.19048309 159.49166870]
[60.14525986 145.72428894]
[66.10003662 131.95692444]
[72.05480957 118.18954468]
[72.47250366 110.41878510]
[74.75104523 103.72926331]
[78.43822479 98.51972961]
[83.00558472 95.04449463]
[69.08456421 89.45832062]
[55.16354752 83.87215424]
[41.24253082 78.28598022]
[27.32151604 72.69981384]
[13.13829517 81.88829041]
[-3.56195021 80.83445740]
[-16.22385216 70.15002441]
[-19.99520683 54.18804169]
[-34.01317596 48.84982300]
[-48.03114319 43.51160812]
[-62.04911041 38.17338943]
[-76.06707764 32.83517075]
[-90.08504486 27.49695587]
[-104.10301971 22.15873718]
[-118.12098694 16.82052040]
[-132.13894653 11.48230362]
[-146.15692139 6.14408636]
[-155.32237244 6.01082277]
[-160.37492371 0.58472604]
[-174.29592896 -5.00144386]
[-183.47991943 6.98007774]
[-195.55662537 16.03855896]
[-209.62983704 21.50179863]
[-224.65527344 22.96438789]
[-239.51791382 20.31779671]
[-253.11485291 13.75841522]
[-264.43713379 3.77299571]
[-272.64456177 -8.89747810]
[-277.12805176 -23.31277275]
[-277.55496216 -38.40317917]
[-273.89355469 -53.04888535]
[-266.41555786 -66.16308594]
[-255.67590332 -76.77262115]
[-242.47152710 -84.09018707]
[-227.78227234 -87.57277679]
[-212.69819641 -86.96195984]
[-198.33862305 -82.30306244]
[-185.76913452 -73.94180298]
[-175.92248535 -62.49864197]
[-169.52934265 -48.82273865]
[-167.06411743 -33.92893982]
[-168.70976257 -18.92246056]
[-154.78874207 -13.33629036]
[-140.81871033 -7.87388229]
[-126.80073547 -2.53566480]
[-112.78276825 2.80255246]
[-98.76480103 8.14076996]
[-84.74683380 13.47898674]
[-70.72885895 18.81720352]
[-56.71089554 24.15542221]
[-42.69292450 29.49363899]
[-28.67495728 34.83185577]
[-14.65698910 40.17007446]
[-4.18948603 31.85535049]
[9.12763023 29.78987885]
[21.82452393 34.62027359]
[30.53921700 45.18215561]
[32.90768433 58.77879715]
[46.82870102 64.36496735]
[60.74971771 69.95113373]
[74.67073822 75.53730774]
[88.59175110 81.12347412]
[102.46264648 75.41398621]
[108.41741943 61.64661026]
[114.37220001 47.87923050]
[120.32697296 34.11185455]
[126.28174591 20.34447861]
[132.23652649 6.57710266]
[138.19129944 -7.19027376]
[138.73098755 -16.34079361]
[144.37586975 -21.14767075]
[150.57405090 -34.80719376]
[156.77223206 -48.46671295]
[150.97946167 -63.17111206]
[157.35745239 -77.63128662]
[172.12228394 -83.26827240]
[186.51422119 -76.73774719]
[191.99478149 -61.91415787]
[185.31246948 -47.59207153]
[170.43176270 -42.26853180]
[164.23356628 -28.60901070]
[158.03538513 -14.94948864]
[151.95867920 -1.23549914]
[146.00389099 12.53187752]
[140.04911804 26.29925346]
[134.09434509 40.06663132]
[128.13957214 53.83400726]
[122.18479919 67.60138702]
[116.23002625 81.36875916]
[128.05625916 72.14162445]
[139.88250732 62.91448212]
[147.93312073 50.25796127]
[160.40292358 41.92104721]
[175.17546082 39.31872177]
[189.74346924 42.89266205]
[201.63439941 52.03628540]
[208.83004761 65.19769287]
[210.10914612 80.14305115]
[205.25460815 94.33577728]
[195.09034729 105.36699677]
[181.34150696 111.36444092]
[166.34159851 111.31019592]
[152.63705444 105.21386719]
[137.68132019 104.06231689]
[122.72559357 102.91075897]
[135.29840088 111.09149933]
[147.87120056 119.27224731]
[160.44400024 127.45299530]
[173.01679993 135.63374329]
[185.73281860 143.59005737]
[198.58804321 151.31942749]
[211.44326782 159.04879761]
[224.29849243 166.77818298]
[237.22180176 174.39315796]
[250.21218872 181.89315796]
[263.20257568 189.39315796]
[276.19293213 196.89315796]
[289.18331909 204.39315796]
[302.44421387 196.64433289]
[317.80297852 196.58013916]
[331.12817383 204.21786499]
[338.83538818 217.50297546]
[338.85144043 232.86186218]
[331.17199707 246.16305542]
[317.86279297 253.82859802]
[302.50393677 253.79649353]
[289.22686768 246.07539368]
[281.60308838 232.74223328]
[281.68331909 217.38354492]
[268.69293213 209.88354492]
[255.70256042 202.38354492]
[242.71218872 194.88354492]
[229.72180176 187.38354492]
[222.33383179 186.76020813]
[216.56912231 179.63340759]
[203.71389771 171.90402222]
[190.85867310 164.17465210]
[178.00344849 156.44528198]
[173.20693970 156.71897888]
[168.19303894 153.96092224]
[164.83605957 148.20654297]
[152.26325989 140.02580261]
[139.69044495 131.84504700]
[127.11764526 123.66430664]
[114.54484558 115.48355865]
[107.36418152 117.64875031]
[114.47579193 130.85575867]
[126.73655701 139.49714661]
[129.89190674 154.16151428]
[122.27045441 167.08100891]
[107.90932465 171.41206360]
[94.41574860 164.86047363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[24 86]
[25 85]
[26 84]
[27 83]
[28 82]
[32 77]
[33 76]
[34 75]
[35 74]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[43 67]
[44 66]
[87 113]
[88 112]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[95 106]
[96 105]
[97 104]
[129 169]
[130 168]
[131 167]
[132 166]
[133 165]
[134 162]
[135 161]
[136 160]
[137 159]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
