%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCGGCGGGCUCGGCGCGGCGGCAGAGGAGGCGGCGGGCGCUGGGAGACACCGGACGCCCGCUCGGCUGCGCUGCGGCUCAGGCCCCCGCUCGGGCCCGACCCGCUCGGUCACCGCCGGCUCGGGCGCGCACCUGCCGGCUGCGGCCCCAGGGCCAUGCGGAGGCCCACGAGGAGGCCGGCGGCCACGCGCAUCCCGUAGCCCAGGUGGCCCAGGUCUGCACCGCGGCGGCCUCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[83.73970795 495.87341309]
[83.73970795 480.87341309]
[83.73970795 465.87341309]
[83.73970795 450.87341309]
[83.73970795 435.87341309]
[73.45146942 428.13638306]
[69.43164062 415.70278931]
[73.35830688 403.03570557]
[84.01397705 394.81832886]
[84.20789337 379.81958008]
[84.40181732 364.82083130]
[84.59573364 349.82208252]
[81.54608154 343.10766602]
[84.89036560 334.63101196]
[85.27817535 319.63601685]
[77.87250519 306.71298218]
[85.96401215 293.11743164]
[86.35181427 278.12246704]
[86.73962402 263.12747192]
[87.12743378 248.13249207]
[87.51524353 233.13749695]
[79.42207336 224.16519165]
[79.60943604 211.68296814]
[88.52160645 202.37840271]
[89.10324097 187.38969421]
[89.68486786 172.40097046]
[90.26650238 157.41224670]
[90.84812927 142.42353821]
[78.47309113 137.68428040]
[68.10503387 129.43168640]
[60.71057892 118.43513489]
[46.23431396 122.36422729]
[34.94269180 133.44618225]
[20.63309669 129.31282043]
[6.15683222 133.24191284]
[-8.29373074 137.26449585]
[-22.71798897 141.38041687]
[-37.14225006 145.49633789]
[-51.56650543 149.61224365]
[-65.99076843 153.72816467]
[-80.41502380 157.84408569]
[-94.83928680 161.95999146]
[-109.23663330 166.16906738]
[-123.60647583 170.47111511]
[-137.97631836 174.77316284]
[-152.34616089 179.07521057]
[-159.62533569 193.10336304]
[-174.71690369 197.79591370]
[-188.66732788 190.36883545]
[-193.20004272 175.22848511]
[-185.62588501 161.35737610]
[-170.43846130 156.98498535]
[-156.64820862 164.70536804]
[-142.27836609 160.40332031]
[-127.90852356 156.10127258]
[-113.53868103 151.79922485]
[-108.04412842 146.88052368]
[-98.95520020 147.53573608]
[-84.53093719 143.41981506]
[-70.10668182 139.30390930]
[-55.68242264 135.18798828]
[-41.25816345 131.07206726]
[-26.83390617 126.95616150]
[-12.40964699 122.84024048]
[-6.85196447 117.99298859]
[2.22773743 118.76564789]
[16.70400047 114.83655548]
[26.96018600 104.03562927]
[42.30522156 107.88796234]
[56.78148270 103.95886993]
[56.61688995 98.80899811]
[57.06378555 93.67591095]
[58.11586761 88.63195801]
[59.75831223 83.74824524]
[61.96796799 79.09360504]
[64.71369171 74.73363495]
[54.21043015 64.02468872]
[43.70716858 53.31574631]
[33.20391083 42.60680008]
[18.01690102 38.17223740]
[14.62893295 23.66806793]
[4.12567234 12.95912170]
[-11.06133652 8.52455997]
[-14.44930458 -5.97960997]
[-24.95256424 -16.68855667]
[-35.45582581 -27.39750099]
[-45.95908356 -38.10644913]
[-56.46234512 -48.81539536]
[-72.26633453 -48.71799469]
[-83.45144653 -59.88351440]
[-83.38175201 -75.68765259]
[-72.09859467 -86.75408936]
[-56.29608154 -86.51730347]
[-45.34955597 -75.11778259]
[-45.75339890 -59.31865311]
[-35.25013733 -48.60970688]
[-24.74687767 -37.90076065]
[-14.24361801 -27.19181633]
[-3.74035811 -16.48287010]
[10.69538689 -12.81428432]
[14.83461857 2.45586109]
[25.33787918 13.16480732]
[39.77362442 16.83339310]
[43.91285706 32.10353851]
[54.41611481 42.81248474]
[64.91937256 53.52143097]
[75.42263794 64.23037720]
[95.04234314 56.88463974]
[115.81726837 59.58556366]
[132.90647888 71.70378113]
[145.79882812 64.03646851]
[158.69116211 56.36915588]
[171.58349609 48.70184326]
[184.47583008 41.03453064]
[197.36816406 33.36721802]
[210.26049805 25.69990540]
[212.04914856 12.36312103]
[221.05581665 2.62899709]
[233.83354187 -0.10652762]
[245.67811584 4.93484020]
[258.66848755 -2.56515980]
[271.65887451 -10.06515980]
[284.64926147 -17.56516075]
[297.59088135 -25.14897537]
[310.48321533 -32.81628799]
[323.37554932 -40.48360062]
[336.26788330 -48.15091324]
[344.90554810 -64.42469788]
[362.45700073 -63.94227219]
[375.24911499 -71.77561951]
[388.04125977 -79.60896301]
[400.83340454 -87.44230652]
[400.03967285 -96.26709747]
[402.13192749 -104.83231354]
[406.85809326 -112.22427368]
[413.68673706 -117.66381073]
[421.86660767 -120.58837128]
[430.50936890 -120.71009827]
[438.68594360 -118.04395294]
[445.52639771 -112.90306854]
[458.79782104 -119.89372253]
[472.06924438 -126.88437653]
[485.34066772 -133.87503052]
[498.61212158 -140.86567688]
[511.88354492 -147.85633850]
[525.10949707 -154.93263245]
[538.28942871 -162.09426880]
[551.46936035 -169.25590515]
[564.64935303 -176.41755676]
[577.78271484 -183.66424561]
[590.86895752 -190.99568176]
[600.72015381 -210.04167175]
[621.33355713 -208.81246948]
[634.12573242 -216.64581299]
[646.91784668 -224.47915649]
[659.70996094 -232.31250000]
[672.50213623 -240.14584351]
[674.63940430 -255.63668823]
[686.26861572 -266.09112549]
[701.89874268 -266.57293701]
[714.14978027 -256.85461426]
[717.23712158 -241.52481079]
[709.70306396 -227.82183838]
[695.10485840 -222.21580505]
[680.33544922 -227.35371399]
[667.54333496 -219.52037048]
[654.75115967 -211.68702698]
[641.95904541 -203.85368347]
[629.16693115 -196.02033997]
[628.53033447 -187.20169067]
[623.84606934 -179.54148865]
[616.05139160 -174.81388855]
[606.81945801 -174.18093872]
[598.20037842 -177.90942383]
[585.11413574 -170.57798767]
[580.82409668 -164.57969666]
[571.81097412 -163.23760986]
[558.63104248 -156.07597351]
[545.45111084 -148.91432190]
[532.27111816 -141.75268555]
[527.90393066 -135.81036377]
[518.87420654 -134.58489990]
[505.60275269 -127.59425354]
[492.33132935 -120.60359955]
[479.05990601 -113.61294556]
[465.78848267 -106.62229919]
[452.51705933 -99.63164520]
[448.09469604 -78.83816528]
[429.46508789 -68.01657867]
[408.66674805 -74.65016937]
[395.87460327 -66.81682587]
[383.08245850 -58.98348236]
[370.29034424 -51.15013885]
[367.16583252 -39.47797775]
[356.59100342 -32.84364319]
[343.93521118 -35.25857925]
[331.04287720 -27.59126472]
[318.15054321 -19.92395210]
[305.25817871 -12.25663948]
[301.12469482 -6.14944696]
[292.14926147 -4.57477903]
[279.15887451 2.92522120]
[266.16848755 10.42522144]
[253.17811584 17.92522049]
[249.51509094 34.34914017]
[234.81196594 43.20766830]
[217.92781067 38.59223938]
[205.03547668 46.25955200]
[192.14314270 53.92686462]
[179.25080872 61.59417725]
[166.35847473 69.26148987]
[153.46614075 76.92880249]
[140.57380676 84.59611511]
[143.39924622 99.86570740]
[140.66835022 115.15248871]
[132.73074341 128.49932861]
[120.60266113 138.19741821]
[105.83684540 143.00515747]
[105.25521851 157.99388123]
[104.67358398 172.98260498]
[104.09195709 187.97131348]
[103.51032257 202.96003723]
[112.46468353 219.06173706]
[102.51022339 233.52531433]
[102.12242126 248.52029419]
[101.73461151 263.51528931]
[101.34680176 278.51025391]
[100.95899200 293.50524902]
[108.33692169 307.50085449]
[100.27316284 320.02383423]
[99.88535309 335.01882935]
[99.59448242 350.01599121]
[99.40055847 365.01473999]
[99.20664215 380.01348877]
[99.01271820 395.01223755]
[111.45188141 407.32662964]
[111.13172913 424.48916626]
[98.73970795 435.87341309]
[98.73970795 450.87341309]
[98.73970795 465.87341309]
[98.73970795 480.87341309]
[98.73970795 495.87341309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 242]
[2 241]
[3 240]
[4 239]
[5 238]
[9 235]
[10 234]
[11 233]
[12 232]
[14 231]
[15 230]
[17 228]
[18 227]
[19 226]
[20 225]
[21 224]
[24 222]
[25 221]
[26 220]
[27 219]
[28 218]
[31 70]
[32 69]
[34 67]
[35 66]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 56]
[44 55]
[45 54]
[46 53]
[76 107]
[77 106]
[78 105]
[79 104]
[81 102]
[82 101]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[110 213]
[111 212]
[112 211]
[113 210]
[114 209]
[115 208]
[116 207]
[120 204]
[121 203]
[122 202]
[123 201]
[124 199]
[125 198]
[126 197]
[127 196]
[129 193]
[130 192]
[131 191]
[132 190]
[140 187]
[141 186]
[142 185]
[143 184]
[144 183]
[145 182]
[146 180]
[147 179]
[148 178]
[149 177]
[150 175]
[151 174]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
