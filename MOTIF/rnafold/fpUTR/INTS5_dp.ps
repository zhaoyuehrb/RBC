%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (INTS5)
} def

/sequence { (\
AUGCGCCGCCUGCGCUCCGCCGCUCGCGCCUCGGGCUCGGCUCGGGCUCCGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 14 0.025062029 ubox
2 28 0.047375906 ubox
3 9 0.005650855 ubox
3 13 0.035511966 ubox
3 15 0.905391352 ubox
3 20 0.021712361 ubox
3 23 0.007275816 ubox
3 27 0.067931735 ubox
3 29 0.393235903 ubox
3 47 0.006247943 ubox
4 8 0.005645027 ubox
4 12 0.035524041 ubox
4 14 0.906975752 ubox
4 19 0.021923380 ubox
4 22 0.007338278 ubox
4 26 0.067965504 ubox
4 28 0.394867178 ubox
4 46 0.006253661 ubox
4 51 0.026076712 ubox
5 11 0.028793316 ubox
5 13 0.907001381 ubox
5 15 0.011423552 ubox
5 18 0.021859515 ubox
5 20 0.004386766 ubox
5 21 0.006429877 ubox
5 23 0.005141238 ubox
5 25 0.067477661 ubox
5 27 0.394759990 ubox
5 29 0.087680117 ubox
5 41 0.005205647 ubox
5 47 0.003858785 ubox
5 50 0.026310657 ubox
6 12 0.905200680 ubox
6 14 0.010551265 ubox
6 19 0.005609036 ubox
6 22 0.005318324 ubox
6 26 0.383138071 ubox
6 28 0.063170613 ubox
6 40 0.005288630 ubox
6 45 0.006264305 ubox
6 46 0.003828310 ubox
6 52 0.012890415 ubox
6 53 0.003438767 ubox
7 14 0.007231699 ubox
7 19 0.004093826 ubox
7 22 0.036986960 ubox
7 26 0.094428917 ubox
7 28 0.092598605 ubox
7 39 0.005267740 ubox
7 44 0.006286515 ubox
7 45 0.003786009 ubox
7 51 0.012915473 ubox
7 52 0.003482415 ubox
8 13 0.008432730 ubox
8 15 0.026126337 ubox
8 18 0.003689545 ubox
8 20 0.007353855 ubox
8 21 0.036866145 ubox
8 23 0.337757437 ubox
8 25 0.131020077 ubox
8 27 0.113276346 ubox
8 29 0.005703694 ubox
8 36 0.004919470 ubox
8 41 0.004486255 ubox
8 43 0.005742118 ubox
8 47 0.030244813 ubox
8 50 0.006402136 ubox
9 14 0.026085071 ubox
9 19 0.008046062 ubox
9 22 0.337794042 ubox
9 26 0.113342930 ubox
9 28 0.005712527 ubox
9 35 0.005348315 ubox
9 40 0.004585728 ubox
9 46 0.030633551 ubox
9 53 0.014066396 ubox
10 34 0.005350805 ubox
10 39 0.004529096 ubox
10 40 0.005920845 ubox
10 45 0.030633508 ubox
10 52 0.014376233 ubox
11 19 0.007321331 ubox
11 22 0.030476133 ubox
11 26 0.005370860 ubox
11 33 0.005284838 ubox
11 39 0.005979325 ubox
11 44 0.030569969 ubox
11 51 0.014358079 ubox
12 18 0.007954506 ubox
12 20 0.360289840 ubox
12 21 0.037660209 ubox
12 23 0.202732946 ubox
12 25 0.015693382 ubox
12 29 0.011379761 ubox
12 38 0.007317427 ubox
12 43 0.030503543 ubox
12 50 0.014300599 ubox
13 19 0.361106145 ubox
13 22 0.202796845 ubox
13 28 0.011504347 ubox
14 18 0.337823155 ubox
14 20 0.079631596 ubox
14 21 0.185119709 ubox
14 23 0.017424961 ubox
14 27 0.011514434 ubox
14 36 0.007620045 ubox
14 41 0.029915723 ubox
14 47 0.014813531 ubox
15 19 0.105734970 ubox
15 22 0.017435963 ubox
15 26 0.011498357 ubox
15 35 0.007580601 ubox
15 40 0.028821253 ubox
15 46 0.014774543 ubox
15 53 0.012314609 ubox
16 35 0.005066121 ubox
16 39 0.026019235 ubox
16 45 0.010114211 ubox
16 46 0.005680626 ubox
16 52 0.006231169 ubox
16 53 0.527087057 ubox
17 34 0.012011204 ubox
17 39 0.004976021 ubox
17 40 0.012705762 ubox
17 44 0.009984939 ubox
17 45 0.013015354 ubox
17 51 0.005989742 ubox
17 52 0.899762247 ubox
17 53 0.027080993 ubox
18 26 0.003471222 ubox
18 28 0.081541293 ubox
18 33 0.012044639 ubox
18 39 0.015450057 ubox
18 44 0.013047657 ubox
18 51 0.901211445 ubox
18 52 0.025396890 ubox
19 25 0.003609467 ubox
19 27 0.084871080 ubox
19 29 0.013141603 ubox
19 32 0.012029864 ubox
19 36 0.022934141 ubox
19 38 0.016317277 ubox
19 41 0.013229245 ubox
19 43 0.012328872 ubox
19 47 0.008044767 ubox
19 50 0.898798397 ubox
20 26 0.084779233 ubox
20 28 0.012152059 ubox
20 35 0.022878128 ubox
20 40 0.013440320 ubox
20 45 0.005887522 ubox
20 46 0.008474939 ubox
20 52 0.027502984 ubox
20 53 0.006425614 ubox
21 28 0.008266813 ubox
21 33 0.003279127 ubox
21 34 0.022782252 ubox
21 39 0.013390564 ubox
21 44 0.005984673 ubox
21 45 0.008392945 ubox
21 51 0.027599542 ubox
21 52 0.006529890 ubox
22 27 0.009703896 ubox
22 29 0.028666053 ubox
22 36 0.022584830 ubox
22 38 0.006617251 ubox
22 41 0.014708281 ubox
22 43 0.005447495 ubox
22 47 0.901455231 ubox
22 50 0.019910277 ubox
23 28 0.028680041 ubox
23 35 0.023208907 ubox
23 40 0.014684509 ubox
23 46 0.901982024 ubox
23 52 0.005362471 ubox
23 53 0.047229147 ubox
24 34 0.023202476 ubox
24 40 0.006290868 ubox
24 45 0.901405309 ubox
24 52 0.048614282 ubox
25 33 0.023595406 ubox
25 39 0.016148762 ubox
25 44 0.901862045 ubox
25 51 0.049534716 ubox
26 32 0.022886327 ubox
26 36 0.003376239 ubox
26 38 0.016440674 ubox
26 41 0.005735130 ubox
26 43 0.901377602 ubox
26 50 0.049405577 ubox
27 35 0.003379451 ubox
27 40 0.006239907 ubox
28 36 0.018617624 ubox
28 41 0.901575463 ubox
28 47 0.055280474 ubox
29 35 0.018678029 ubox
29 40 0.901786302 ubox
29 46 0.055141844 ubox
29 52 0.009981894 ubox
29 53 0.064997072 ubox
30 34 0.018561609 ubox
30 39 0.900382152 ubox
30 40 0.014255596 ubox
30 45 0.054936364 ubox
30 46 0.010769811 ubox
30 51 0.010169465 ubox
30 52 0.078885658 ubox
30 53 0.405281122 ubox
31 39 0.006018462 ubox
31 40 0.007598932 ubox
31 44 0.009268591 ubox
31 45 0.011933432 ubox
31 51 0.039749598 ubox
31 52 0.414222956 ubox
32 39 0.047960573 ubox
32 44 0.055480200 ubox
32 51 0.423855477 ubox
32 52 0.003969670 ubox
33 38 0.104276483 ubox
33 43 0.056264322 ubox
33 49 0.055604403 ubox
33 50 0.422562886 ubox
34 42 0.056270674 ubox
34 48 0.066849694 ubox
34 49 0.420924370 ubox
35 41 0.056305655 ubox
35 47 0.423600729 ubox
35 48 0.047094981 ubox
36 40 0.055896912 ubox
36 46 0.426212757 ubox
37 45 0.425691123 ubox
37 46 0.005303538 ubox
38 44 0.425746391 ubox
38 45 0.015318539 ubox
39 43 0.398329739 ubox
41 53 0.008238835 ubox
42 52 0.011259655 ubox
43 51 0.012453930 ubox
44 50 0.012499832 ubox
45 49 0.012298234 ubox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
17 52 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
showpage
end
%%EOF
