%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM95)
} def

/sequence { (\
UGGAGCCAGGGCUGCAGAGCAUUCCUCGGCUCAGCUGGGGCAGCGCCGCCCCAUCCCCCAGUGGUCCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008994887 ubox
1 16 0.005802800 ubox
1 33 0.123387637 ubox
1 53 0.003198584 ubox
1 60 0.072974699 ubox
1 63 0.005192840 ubox
2 7 0.015033508 ubox
2 15 0.006441131 ubox
2 32 0.101895611 ubox
2 36 0.008808416 ubox
2 55 0.021618466 ubox
2 56 0.030249968 ubox
2 57 0.021740824 ubox
2 58 0.020354871 ubox
2 59 0.080930730 ubox
2 62 0.004882753 ubox
2 66 0.041572517 ubox
2 67 0.549621768 ubox
2 68 0.100541318 ubox
2 69 0.026781757 ubox
3 31 0.044150840 ubox
3 32 0.810671914 ubox
3 35 0.006810538 ubox
3 55 0.023290866 ubox
3 56 0.014122899 ubox
3 57 0.013427387 ubox
3 58 0.052313113 ubox
3 65 0.004817404 ubox
3 66 0.547550602 ubox
3 67 0.108714125 ubox
3 68 0.009036979 ubox
3 69 0.030751573 ubox
4 13 0.011289839 ubox
4 31 0.819952968 ubox
4 36 0.011168768 ubox
4 54 0.016436848 ubox
4 65 0.464882761 ubox
4 68 0.030707720 ubox
5 12 0.012062546 ubox
5 30 0.822984286 ubox
5 35 0.015469697 ubox
5 62 0.035458238 ubox
5 65 0.308167235 ubox
5 67 0.025825472 ubox
6 11 0.012026995 ubox
6 29 0.822997323 ubox
6 34 0.015467513 ubox
6 61 0.036476833 ubox
6 64 0.556017101 ubox
7 28 0.822737099 ubox
7 63 0.556538060 ubox
8 23 0.004041124 ubox
8 26 0.807140500 ubox
8 62 0.528808425 ubox
8 68 0.093628944 ubox
9 22 0.003336838 ubox
9 24 0.009246090 ubox
9 25 0.812162916 ubox
9 26 0.127371729 ubox
9 27 0.030563936 ubox
9 32 0.060032215 ubox
9 51 0.029136323 ubox
9 52 0.003617729 ubox
9 56 0.031936698 ubox
9 57 0.178754374 ubox
9 58 0.289892706 ubox
9 59 0.425233033 ubox
9 67 0.100559805 ubox
10 22 0.004079587 ubox
10 23 0.008996948 ubox
10 24 0.812059650 ubox
10 25 0.129690709 ubox
10 26 0.027033092 ubox
10 31 0.060346136 ubox
10 36 0.021514176 ubox
10 50 0.029202682 ubox
10 51 0.003331945 ubox
10 55 0.031943190 ubox
10 56 0.179188637 ubox
10 57 0.290484924 ubox
10 58 0.426158615 ubox
10 59 0.085074587 ubox
10 66 0.100615641 ubox
10 67 0.003292244 ubox
11 20 0.217074406 ubox
11 22 0.023434892 ubox
11 23 0.731617437 ubox
11 24 0.128656586 ubox
11 25 0.026682939 ubox
11 30 0.060884828 ubox
11 35 0.060322718 ubox
11 49 0.029239647 ubox
11 54 0.021197893 ubox
11 55 0.176441183 ubox
11 56 0.287166953 ubox
11 57 0.420241425 ubox
11 58 0.083959734 ubox
11 62 0.012478138 ubox
11 65 0.100558277 ubox
11 66 0.003272531 ubox
12 19 0.219866653 ubox
12 29 0.060992684 ubox
12 34 0.066134841 ubox
12 48 0.029250038 ubox
12 61 0.015386691 ubox
12 64 0.100621078 ubox
13 18 0.217673146 ubox
13 21 0.788274542 ubox
13 28 0.060913195 ubox
13 33 0.065288812 ubox
13 53 0.028565602 ubox
13 60 0.015122155 ubox
13 63 0.099564205 ubox
14 20 0.792726339 ubox
14 27 0.060068686 ubox
14 30 0.031600416 ubox
14 32 0.044362751 ubox
14 35 0.543024897 ubox
14 46 0.028859648 ubox
14 49 0.004718117 ubox
14 52 0.004581204 ubox
14 59 0.012088368 ubox
14 62 0.093079229 ubox
15 19 0.786979343 ubox
15 29 0.033185446 ubox
15 34 0.543190972 ubox
15 45 0.028862952 ubox
15 48 0.004781159 ubox
15 61 0.093178472 ubox
16 26 0.041593640 ubox
16 31 0.006578377 ubox
17 24 0.043615191 ubox
17 25 0.040823305 ubox
17 27 0.043189774 ubox
17 30 0.005477622 ubox
17 32 0.559125900 ubox
18 23 0.041582790 ubox
18 26 0.043629059 ubox
18 31 0.562133193 ubox
19 25 0.043329290 ubox
19 30 0.562280400 ubox
19 41 0.003588278 ubox
19 44 0.028516989 ubox
19 46 0.006100203 ubox
20 29 0.562143663 ubox
20 43 0.028483960 ubox
20 45 0.006107799 ubox
22 43 0.005869029 ubox
23 28 0.012508072 ubox
23 40 0.004359266 ubox
23 42 0.007752230 ubox
24 28 0.014767755 ubox
24 39 0.005013224 ubox
24 40 0.029083283 ubox
25 38 0.004996850 ubox
25 39 0.029285072 ubox
26 38 0.029271731 ubox
27 37 0.029755744 ubox
28 36 0.030450342 ubox
28 59 0.003774964 ubox
29 35 0.030853473 ubox
29 58 0.003769465 ubox
30 34 0.030632836 ubox
31 64 0.008232704 ubox
32 63 0.014878492 ubox
33 62 0.015693561 ubox
33 68 0.032453493 ubox
34 44 0.020198163 ubox
34 49 0.003268819 ubox
34 62 0.194566274 ubox
34 65 0.057356396 ubox
34 67 0.034067404 ubox
35 43 0.020222984 ubox
35 48 0.003240502 ubox
35 61 0.205030908 ubox
35 64 0.059448454 ubox
36 42 0.020198441 ubox
36 53 0.879552409 ubox
36 60 0.199888450 ubox
36 63 0.041710177 ubox
37 41 0.019877062 ubox
37 50 0.015126080 ubox
37 52 0.979708677 ubox
37 58 0.011685153 ubox
37 59 0.194358776 ubox
37 67 0.004309812 ubox
37 68 0.005138871 ubox
37 69 0.008746926 ubox
38 49 0.015166528 ubox
38 51 0.980302926 ubox
38 52 0.003561954 ubox
38 57 0.016111880 ubox
38 58 0.192286598 ubox
38 66 0.004256737 ubox
38 67 0.005586416 ubox
38 68 0.009214184 ubox
39 47 0.016989232 ubox
39 50 0.980674752 ubox
39 51 0.003772311 ubox
39 56 0.019448716 ubox
39 57 0.190091170 ubox
39 66 0.005551690 ubox
39 67 0.009282339 ubox
40 46 0.018128180 ubox
40 49 0.981019705 ubox
40 50 0.003427782 ubox
40 55 0.022110249 ubox
40 56 0.186999467 ubox
40 65 0.005141595 ubox
40 66 0.009277872 ubox
41 45 0.018887006 ubox
41 48 0.980444463 ubox
41 64 0.005046118 ubox
42 68 0.003450387 ubox
43 49 0.105161630 ubox
43 62 0.004510207 ubox
43 67 0.003685065 ubox
44 48 0.104556055 ubox
44 61 0.004754507 ubox
45 65 0.020858801 ubox
46 64 0.021601490 ubox
47 63 0.021618596 ubox
48 62 0.021584372 ubox
49 61 0.021561608 ubox
51 64 0.017890401 ubox
52 63 0.020190701 ubox
53 62 0.024745066 ubox
53 65 0.044269029 ubox
54 61 0.025384994 ubox
54 64 0.046565069 ubox
55 63 0.052575171 ubox
55 64 0.314098502 ubox
56 63 0.315758265 ubox
56 64 0.313382773 ubox
57 63 0.314251486 ubox
57 64 0.340776960 ubox
58 63 0.341295725 ubox
58 64 0.210110935 ubox
59 63 0.209927712 ubox
60 68 0.066708442 ubox
61 67 0.071083127 ubox
63 69 0.024205937 ubox
64 68 0.016594758 ubox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
showpage
end
%%EOF
