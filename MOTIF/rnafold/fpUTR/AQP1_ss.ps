%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAAAAAGUUGGCAGGCCGACAGCACAGCCGUGUCUGCAUCCAUCCAGAGGAGGUCUGUGUGGUGUGGGGCGGGCCAGGAGCGAAGAGAGGCCUUCCUCCCUUUGUGCUCCCCCCGCCCCCCGGCCCUAUAAAUAGGCCCAGCCCAGGCUGUGGCUCAGCUCUCAGAGGGAAUUGAGCACCCGGCAGCGGUCUCAGGCCAAGCCCCCUGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[102.36680603 301.87588501]
[100.41899872 317.11077881]
[91.10194397 329.32095337]
[76.92188263 335.22192383]
[61.69318390 333.22634888]
[49.51228714 323.87106323]
[43.65579224 309.67257690]
[45.69906616 294.45022583]
[55.09248352 282.29870605]
[69.30925751 276.48675537]
[71.25817871 261.61389160]
[73.20709991 246.74104309]
[75.15602112 231.86819458]
[77.10494232 216.99533081]
[79.05386353 202.12248230]
[81.00279236 187.24963379]
[82.95171356 172.37678528]
[84.90063477 157.50393677]
[72.57376862 152.74935913]
[61.60131836 145.38980103]
[52.52515793 135.78872681]
[45.79349518 124.42024231]
[31.44927788 128.80697632]
[20.51519394 140.24185181]
[6.08157969 136.56488037]
[-8.26263905 140.95161438]
[-22.60685730 145.33834839]
[-36.95107651 149.72506714]
[-51.29529572 154.11180115]
[-65.63951111 158.49853516]
[-79.95159912 162.98898315]
[-94.23081207 167.58290100]
[-99.15827179 182.17832947]
[-111.58984375 190.97090149]
[-126.63708496 190.75984192]
[-138.53233337 181.83566284]
[-152.81153870 186.42959595]
[-167.09074402 191.02351379]
[-181.36996460 195.61744690]
[-186.07957458 210.40254211]
[-198.60011292 219.56855774]
[-214.11717224 219.59095764]
[-226.66412354 210.46115112]
[-231.41641235 195.68971252]
[-226.54669189 180.95657349]
[-213.92745972 171.92692566]
[-198.41105652 172.07284546]
[-185.96388245 181.33824158]
[-171.68467712 176.74430847]
[-157.40547180 172.15037537]
[-143.12626648 167.55645752]
[-138.66609192 153.37037659]
[-126.56465912 144.42500305]
[-111.33829498 144.31942749]
[-98.82473755 153.30369568]
[-84.54553223 148.70976257]
[-79.14328003 143.67117310]
[-70.02624512 144.15431213]
[-55.68202209 139.76757812]
[-41.33780670 135.38085938]
[-26.99358749 130.99412537]
[-12.64936829 126.60739136]
[1.69485056 122.22066498]
[11.60293865 111.09955597]
[27.06254768 114.46275330]
[41.40676498 110.07601929]
[42.28531647 85.72735596]
[52.85667801 63.77569199]
[71.34546661 47.90766907]
[65.83167267 33.95782471]
[60.31788635 20.00798416]
[54.80409622 6.05814075]
[49.29030228 -7.89170218]
[43.77651215 -21.84154510]
[38.26272202 -35.79138565]
[32.74893188 -49.74123001]
[22.54088402 -53.48038101]
[16.20430183 -62.04241943]
[15.63567352 -72.45919037]
[20.78168869 -81.28071594]
[15.67406654 -95.38433838]
[10.56644535 -109.48796082]
[5.45882368 -123.59158325]
[0.35120192 -137.69520569]
[-4.96006107 -151.72341919]
[-10.47385216 -165.67324829]
[-15.98764324 -179.62309265]
[-21.50143433 -193.57293701]
[-33.76979446 -203.56283569]
[-31.25255203 -218.24317932]
[-36.76634216 -232.19302368]
[-42.28013611 -246.14286804]
[-47.79392624 -260.09271240]
[-60.96927261 -269.85705566]
[-58.83222198 -286.11636353]
[-43.58118820 -292.14443970]
[-30.90512657 -281.74014282]
[-33.84408188 -265.60650635]
[-28.33029175 -251.65666199]
[-22.81650162 -237.70681763]
[-17.30270958 -223.75697327]
[-5.42873383 -214.76487732]
[-7.55159092 -199.08673096]
[-2.03780031 -185.13688660]
[3.47599077 -171.18704224]
[8.98978138 -157.23719788]
[12.93374157 -154.55108643]
[15.23465633 -149.36083984]
[14.45482540 -142.80282593]
[19.56244659 -128.69920349]
[24.67006874 -114.59558105]
[29.77769089 -100.49195862]
[34.88531113 -86.38833618]
[50.54822159 -75.04547882]
[46.69877243 -55.25502014]
[52.21256256 -41.30517960]
[57.72635651 -27.35533524]
[63.24014664 -13.40549278]
[68.75393677 0.54434979]
[74.26773071 14.49419212]
[79.78151703 28.44403458]
[85.29531097 42.39387894]
[101.26682281 39.22680664]
[117.85900116 40.50303650]
[133.83285522 46.31972885]
[143.60343933 34.93835449]
[153.37402344 23.55698395]
[163.14460754 12.17561245]
[158.63165283 -2.57690406]
[162.83291626 -17.42119408]
[174.40779114 -27.62050056]
[189.66278076 -29.92026138]
[203.73005676 -23.58662987]
[212.12083435 -10.64064598]
[212.15762329 4.78667355]
[203.82868958 17.77252769]
[189.79176331 24.17317772]
[174.52598572 21.94619942]
[164.75540161 33.32757187]
[154.98481750 44.70894241]
[145.21421814 56.09031296]
[154.30970764 68.01810455]
[167.87100220 61.60784149]
[181.43229675 55.19758606]
[194.99357605 48.78732681]
[203.87945557 35.00424957]
[220.24339294 36.07824707]
[227.25158691 50.90448761]
[217.69459534 64.23100281]
[201.40383911 62.34861374]
[187.84254456 68.75887299]
[174.28126526 75.16913605]
[160.71997070 81.57939148]
[161.02664185 88.39905548]
[160.58628845 95.07172394]
[159.43391418 101.51744843]
[174.26094055 103.78886414]
[189.08796692 106.06027985]
[203.91499329 108.33169556]
[218.74201965 110.60311127]
[233.56904602 112.87452698]
[248.38171387 107.31618500]
[259.79058838 116.89151764]
[274.61761475 119.16293335]
[289.44464111 121.43435669]
[304.27166748 123.70577240]
[320.84371948 120.12763977]
[328.86962891 135.06153870]
[316.74114990 146.90789795]
[302.00024414 138.53279114]
[287.17321777 136.26138306]
[272.34619141 133.98995972]
[257.51916504 131.71855164]
[243.76701355 137.43936157]
[231.29762268 127.70155334]
[216.47059631 125.43013763]
[201.64356995 123.15872192]
[186.81654358 120.88730621]
[171.98953247 118.61588287]
[157.16250610 116.34446716]
[155.05294800 122.44695282]
[152.29406738 128.28468323]
[148.91839600 133.78880310]
[144.96575928 138.89439392]
[140.48275757 143.54124451]
[149.22911072 155.72735596]
[157.97546387 167.91346741]
[171.42663574 168.55236816]
[181.90182495 176.70159912]
[185.71566772 189.21029663]
[181.69050598 201.44795227]
[190.25953674 213.75941467]
[198.82855225 226.07086182]
[207.39758301 238.38230896]
[221.40858459 247.92840576]
[216.11418152 264.03448486]
[199.17190552 263.40560913]
[195.08613586 246.95133972]
[186.51710510 234.63989258]
[177.94808960 222.32843018]
[169.37905884 210.01698303]
[152.71154785 207.75842285]
[142.63801575 193.86921692]
[145.78935242 176.65982056]
[137.04299927 164.47370911]
[128.29664612 152.28759766]
[114.48510742 157.66172791]
[99.77348328 159.45285034]
[97.82456207 174.32569885]
[95.87564087 189.19856262]
[93.92671967 204.07141113]
[91.97779846 218.94425964]
[90.02887726 233.81710815]
[88.07995605 248.68995667]
[86.13103485 263.56280518]
[84.18211365 278.43566895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 216]
[11 215]
[12 214]
[13 213]
[14 212]
[15 211]
[16 210]
[17 209]
[18 208]
[22 66]
[23 65]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 56]
[32 55]
[36 51]
[37 50]
[38 49]
[39 48]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[85 106]
[86 105]
[87 104]
[88 103]
[90 101]
[91 100]
[92 99]
[93 98]
[125 141]
[126 140]
[127 139]
[128 138]
[142 153]
[143 152]
[144 151]
[145 150]
[156 180]
[157 179]
[158 178]
[159 177]
[160 176]
[161 175]
[163 173]
[164 172]
[165 171]
[166 170]
[185 206]
[186 205]
[187 204]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
