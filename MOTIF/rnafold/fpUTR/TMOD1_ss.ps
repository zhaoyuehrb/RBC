%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCCGCCCGCCCGCGGCCGCCCGGGAGCUCGUCCAGCCCCGCGCUGCGCUCGCCCGCCCGCUGCCCGCCGGAGCACCGCGGCCUCCGCCCGCGUCCAUCUGCCCGCCGCCCGCGCCUGUUCCGCAGCCCGCGUCCGCGCCGGCCCCACAGCUCUGCGUCCGGGUAUUACUCAGCACAGAAAUUCAGGAGACACAGACAAGUUCUUCCACG\
) } def
/len { sequence length } bind def

/coor [
[252.36584473 391.46749878]
[264.45846558 377.09344482]
[257.08596802 364.03027344]
[249.71345520 350.96713257]
[230.17230225 350.04180908]
[215.04908752 337.40567017]
[210.60006714 318.05880737]
[218.80282593 299.82247925]
[210.67637634 287.21450806]
[202.54994202 274.60656738]
[194.42349243 261.99859619]
[186.29704285 249.39060974]
[171.72969055 246.50479126]
[163.30871582 233.83427429]
[166.43441772 218.57426453]
[158.30796814 205.96630859]
[150.18151855 193.35833740]
[142.05508423 180.75036621]
[133.92863464 168.14239502]
[122.17662048 165.28196716]
[115.30281830 154.84652710]
[117.44688416 142.12933350]
[109.50640106 129.40342712]
[93.02892303 130.10542297]
[78.53706360 122.23229980]
[65.81115723 130.17279053]
[53.08525467 138.11328125]
[40.35934830 146.05377197]
[34.73696518 153.24987793]
[27.38783455 154.01582336]
[14.54673576 161.76864624]
[1.70563698 169.52145386]
[-3.52291894 184.68858337]
[-18.68861580 189.92129517]
[-32.15763092 181.20549011]
[-33.59768677 165.22718811]
[-21.90409470 154.24359131]
[-6.04718113 156.68035889]
[6.79391766 148.92753601]
[19.63501549 141.17472839]
[32.41886139 133.32786560]
[45.14476776 125.38737488]
[57.87067413 117.44688416]
[70.59658051 109.50640106]
[70.91876984 89.54940033]
[83.37327576 73.95225525]
[78.61254883 59.72779083]
[73.85181427 45.50332260]
[69.09108734 31.27885628]
[63.40108109 24.13609505]
[64.36653900 16.81050301]
[59.81513596 2.51768327]
[48.25526810 -8.28417015]
[51.76599503 -22.75911713]
[47.21458817 -37.05193710]
[33.45557404 -44.35448456]
[29.04340744 -58.91427612]
[36.09006500 -71.98638916]
[31.53866005 -86.27921295]
[26.98725510 -100.57202911]
[13.22823906 -107.87458038]
[8.81607437 -122.43437195]
[15.86273098 -135.50648499]
[11.31132698 -149.79930115]
[6.75992250 -164.09213257]
[2.20851779 -178.38494873]
[-2.34288669 -192.67776489]
[-11.43442154 -180.74696350]
[-26.42669487 -180.26559448]
[-36.26486206 -191.58860779]
[-33.69455338 -206.36674500]
[-20.61103630 -213.70307922]
[-6.66207981 -208.18840027]
[-10.15305328 -222.77651978]
[-13.64402676 -237.36462402]
[-17.13500023 -251.95274353]
[-20.62597466 -266.54086304]
[-24.11694717 -281.12896729]
[-37.08944702 -294.19934082]
[-31.43765640 -310.81433105]
[-35.14240265 -325.34963989]
[-38.84715271 -339.88494873]
[-42.55189896 -354.42022705]
[-46.25664902 -368.95553589]
[-58.37691116 -372.00543213]
[-67.99512482 -379.87271118]
[-73.32546997 -391.01733398]
[-73.41206360 -403.29864502]
[-68.29983521 -414.38626099]
[-59.01433945 -422.20242310]
[-62.29078293 -436.84024048]
[-75.35407257 -445.32482910]
[-78.46833038 -460.21630859]
[-70.29906464 -472.61785889]
[-73.57550812 -487.25564575]
[-76.85195160 -501.89343262]
[-90.33100128 -510.14517212]
[-93.94599152 -525.53045654]
[-85.55222321 -538.92150879]
[-70.12956238 -542.37365723]
[-56.82800674 -533.83874512]
[-53.53913116 -518.38043213]
[-62.21416473 -505.16989136]
[-58.93771744 -490.53210449]
[-55.66127014 -475.89428711]
[-42.98462677 -468.15878296]
[-39.45332336 -453.36065674]
[-47.65299606 -440.11666870]
[-44.37654877 -425.47888184]
[-27.85742760 -419.22958374]
[-18.31395531 -404.18173218]
[-19.72795868 -386.26116943]
[-31.72135162 -372.66027832]
[-28.01660347 -358.12496948]
[-24.31185532 -343.58969116]
[-20.60710716 -329.05438232]
[-16.90235901 -314.51910400]
[-6.66579628 -308.07666016]
[-3.45940924 -295.99914551]
[-9.52883244 -284.61993408]
[-6.03785896 -270.03182983]
[-2.54688525 -255.44371033]
[0.94408822 -240.85560608]
[4.43506145 -226.26748657]
[7.92603493 -211.67936707]
[11.94993401 -197.22917175]
[16.50133896 -182.93635559]
[21.05274200 -168.64352417]
[25.60414696 -154.35070801]
[30.15555191 -140.05789185]
[43.46353531 -133.46749878]
[48.28291321 -119.03739166]
[41.28007507 -105.12343597]
[45.83148193 -90.83061981]
[50.38288498 -76.53779602]
[63.69086838 -69.94741058]
[68.51024628 -55.51729202]
[61.50740814 -41.60334015]
[66.05881500 -27.31052017]
[77.29313660 -17.53098488]
[74.10795593 -2.03372121]
[78.65936279 12.25909901]
[83.31555176 26.51812744]
[88.07628632 40.74259186]
[92.83701324 54.96706009]
[97.59774017 69.19152832]
[108.16460419 70.19610596]
[117.76815796 74.71709442]
[125.27534485 82.22108459]
[129.80041504 91.82271576]
[130.80949402 102.38914490]
[128.18351746 112.67369080]
[122.23229980 121.46293640]
[130.17279053 134.18884277]
[146.62287903 142.46620178]
[146.53660583 160.01594543]
[154.66305542 172.62391663]
[162.78948975 185.23188782]
[170.91593933 197.83985901]
[179.04238892 210.44783020]
[194.23110962 213.90328979]
[202.29287720 226.80532837]
[198.90501404 241.26417542]
[207.03146362 253.87214661]
[215.15789795 266.48010254]
[223.28434753 279.08807373]
[231.41079712 291.69604492]
[241.89292908 290.09045410]
[252.27479553 292.05535889]
[261.37911987 297.34201050]
[268.18212891 305.32656860]
[271.92864990 315.08352661]
[272.21585083 325.49285889]
[269.03643799 335.36874390]
[262.77661133 343.59463501]
[270.14910889 356.65777588]
[277.52163696 369.72094727]
[288.80276489 367.05273438]
[300.38281250 367.16180420]
[311.58880615 370.03616333]
[321.77081299 375.50323486]
[330.33978271 383.24032593]
[336.80145264 392.79354858]
[340.78494263 403.60449219]
[342.06405640 415.04284668]
[340.57003784 426.44323730]
[336.39538574 437.14373779]
[329.78793335 446.52453613]
[321.13638306 454.04367065]
[327.53103638 467.61233521]
[333.92568970 481.18096924]
[340.32037354 494.74963379]
[346.71502686 508.31829834]
[353.20275879 514.74511719]
[353.10232544 522.13336182]
[359.29708862 535.79443359]
[374.17648315 541.12170410]
[380.85525513 555.44543457]
[375.37097168 570.26770020]
[360.97741699 576.79461670]
[346.21401978 571.15393066]
[339.83959961 556.69219971]
[345.63604736 541.98925781]
[339.44125366 528.32818604]
[333.14636230 514.71295166]
[326.75170898 501.14428711]
[320.35705566 487.57565308]
[313.96240234 474.00698853]
[307.56771851 460.43832397]
[289.05532837 462.10342407]
[271.28698730 456.53656006]
[256.98376465 444.56390381]
[248.34609985 427.99453735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[22 154]
[23 153]
[25 44]
[26 43]
[27 42]
[28 41]
[30 40]
[31 39]
[32 38]
[46 146]
[47 145]
[48 144]
[49 143]
[51 142]
[52 141]
[54 139]
[55 138]
[58 135]
[59 134]
[60 133]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[90 109]
[91 108]
[94 105]
[95 104]
[96 103]
[189 209]
[190 208]
[191 207]
[192 206]
[193 205]
[195 204]
[196 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
