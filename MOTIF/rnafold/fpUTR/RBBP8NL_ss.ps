%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUGUCUUGUUGCCUGUGCAGGUUCACAGCCCGCUCACUUCUCUCUCCCUGUGAAGAGCGUGGGGGACUCCGCGCAGAGGUCGACAGAGGUUGAGGCAGGGCCAGGAGCCAUGAUGGACACAGAGGGGCAGUAGAGGCUGCAGGCGUCUCCACAACCCCAGCGCAGAGGGGCCCGGGCCAGGGCCACAGGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[107.72452545 361.86206055]
[111.90927887 346.91992188]
[124.09844971 337.31762695]
[123.38472748 322.33462524]
[122.67099762 307.35162354]
[121.95726776 292.36859131]
[121.24353790 277.38558960]
[110.42053986 272.69943237]
[101.42673492 265.32373047]
[94.89755249 255.89482117]
[91.26215363 245.18890381]
[90.71595764 234.05851746]
[93.21204376 223.36471558]
[98.47151947 213.91046143]
[106.01161194 206.38037109]
[115.18873596 201.29132080]
[111.88407898 186.65988159]
[108.57942200 172.02842712]
[105.27476501 157.39698792]
[101.97010040 142.76553345]
[98.66544342 128.13409424]
[76.92798615 116.15519714]
[73.10616302 91.63164520]
[60.48735809 83.52203369]
[47.86855316 75.41242218]
[35.24975204 67.30281067]
[22.63094711 59.19319534]
[8.22864819 64.65945435]
[-6.45907974 60.64397430]
[-15.85486031 48.88883591]
[-16.51913071 34.03297043]
[-29.13793373 25.92335701]
[-41.75673676 17.81374359]
[-54.37553787 9.70413208]
[-67.05828094 1.69488299]
[-79.80416107 -6.21349907]
[-92.61238098 -14.02051640]
[-105.48213196 -21.72567749]
[-118.35188293 -29.43083763]
[-131.28236389 -37.03365707]
[-144.27273560 -44.53365707]
[-157.26312256 -52.03365707]
[-170.25349426 -59.53365707]
[-183.24388123 -67.03366089]
[-199.06382751 -67.23304749]
[-206.21731567 -80.29737854]
[-219.20770264 -87.79737854]
[-234.29655457 -83.92898560]
[-247.36380005 -91.72010040]
[-250.95874023 -106.12885284]
[-263.94912720 -113.62885284]
[-276.93951416 -121.12885284]
[-292.75946045 -121.32823944]
[-299.91293335 -134.39257812]
[-312.90332031 -141.89257812]
[-311.66296387 -126.94393921]
[-322.46444702 -116.53586578]
[-337.35681152 -118.32972717]
[-345.37777710 -131.00505066]
[-340.62313843 -145.23156738]
[-326.59194946 -150.53704834]
[-338.94711304 -159.04295349]
[-351.30224609 -167.54884338]
[-363.65740967 -176.05474854]
[-376.01254272 -184.56063843]
[-388.36770630 -193.06654358]
[-404.74926758 -193.82608032]
[-412.04089355 -208.51499939]
[-402.74157715 -222.02259827]
[-386.41769409 -220.45341492]
[-379.86181641 -205.42169189]
[-367.50665283 -196.91578674]
[-355.15151978 -188.40989685]
[-342.79635620 -179.90399170]
[-330.44122314 -171.39810181]
[-318.08605957 -162.89219666]
[-305.40332031 -154.88294983]
[-292.41293335 -147.38294983]
[-277.52215576 -147.72001648]
[-269.43951416 -134.11923218]
[-256.44912720 -126.61923218]
[-243.45874023 -119.11923218]
[-229.18292236 -123.21029663]
[-215.90199280 -115.78928375]
[-211.70770264 -100.78775787]
[-198.71731567 -93.28775787]
[-183.82653809 -93.62482452]
[-175.74388123 -80.02404022]
[-162.75349426 -72.52404022]
[-149.76312256 -65.02404022]
[-136.77273560 -57.52404022]
[-123.78235626 -50.02404022]
[-116.40988159 -49.40154648]
[-110.64672089 -42.30059052]
[-97.77696991 -34.59542847]
[-84.90721893 -26.89026642]
[-77.54555511 -26.15088272]
[-71.89578247 -18.95938110]
[-59.14989853 -11.05099869]
[-51.80088806 -10.19490623]
[-46.26592636 -2.91467094]
[-33.64712524 5.19494152]
[-21.02832031 13.30455399]
[-8.40951824 21.41416550]
[5.37980032 15.84705830]
[19.97579956 19.51049995]
[29.72990799 31.20283699]
[30.74056053 46.57439423]
[43.35936356 54.68400574]
[55.97816467 62.79361725]
[68.59696960 70.90322876]
[81.21577454 79.01284027]
[84.44684601 73.63173676]
[89.10639954 68.78499603]
[95.09333038 64.83161163]
[102.22004700 62.10818481]
[110.21801758 60.90881348]
[119.67630768 49.26661682]
[121.73169708 32.99678421]
[136.95227051 26.89219093]
[149.68041992 37.23271561]
[146.82249451 53.38091660]
[131.31851196 58.72490692]
[121.86021423 70.36710358]
[125.55857086 76.89183807]
[132.95527649 89.94130707]
[136.65362549 96.46604919]
[151.50096130 94.33132172]
[166.34828186 92.19660187]
[181.19560242 90.06188202]
[190.66494751 77.69380951]
[205.75265503 75.74040222]
[217.48536682 84.84420013]
[232.33268738 82.70947266]
[244.89125061 73.08695984]
[258.59011841 78.93422699]
[273.43743896 76.79950714]
[288.28475952 74.66477966]
[303.13208008 72.53005981]
[317.97940063 70.39533997]
[326.06964111 57.01318359]
[340.88562012 52.01111603]
[355.43170166 57.75095749]
[362.83966064 71.52252960]
[359.61166382 86.82331848]
[347.27191162 96.42876434]
[331.64685059 95.80345917]
[320.11413574 85.24266052]
[305.26681519 87.37738037]
[290.41949463 89.51210022]
[275.57217407 91.64682770]
[260.72485352 93.78154755]
[249.22824097 103.25137329]
[234.46740723 97.55680084]
[219.62008667 99.69152069]
[210.92747498 111.73203278]
[195.90058899 114.10845184]
[183.33032227 104.90920258]
[168.48300171 107.04392242]
[153.63568115 109.17864227]
[138.78836060 111.31336975]
[126.62760925 121.59725189]
[113.29689026 124.82942963]
[116.60154724 139.46087646]
[119.90621185 154.09233093]
[123.21086884 168.72377014]
[126.51552582 183.35522461]
[129.82017517 197.98666382]
[151.13800049 202.50857544]
[167.03919983 218.48924255]
[171.76232910 241.30123901]
[162.96615601 263.68255615]
[171.27496338 276.17111206]
[179.58377075 288.65966797]
[187.89256287 301.14819336]
[196.20137024 313.63674927]
[211.74327087 316.50463867]
[220.63621521 329.56951904]
[217.60415649 345.08023071]
[204.44598389 353.83456421]
[188.96820068 350.63867188]
[180.35348511 337.38870239]
[183.71281433 321.94555664]
[175.40402222 309.45700073]
[167.09521484 296.96844482]
[158.78642273 284.47991943]
[150.47761536 271.99136353]
[136.22654724 276.67187500]
[136.94027710 291.65487671]
[137.65400696 306.63787842]
[138.36773682 321.62088013]
[139.08146667 336.60391235]
[152.12818909 345.00405884]
[157.71434021 359.48074341]
[153.69192505 374.46740723]
[141.60763550 384.20132446]
[126.10813904 384.93966675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 192]
[4 191]
[5 190]
[6 189]
[7 188]
[16 168]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[23 112]
[24 111]
[25 110]
[26 109]
[27 108]
[31 104]
[32 103]
[33 102]
[34 101]
[35 99]
[36 98]
[37 96]
[38 95]
[39 94]
[40 92]
[41 91]
[42 90]
[43 89]
[44 88]
[46 86]
[47 85]
[50 82]
[51 81]
[52 80]
[54 78]
[55 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[117 124]
[118 123]
[127 161]
[128 160]
[129 159]
[130 158]
[133 155]
[134 154]
[136 152]
[137 151]
[138 150]
[139 149]
[140 148]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
