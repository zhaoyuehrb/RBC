%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCGUGCGCGCACCCAGACUCCUUGCGGGAGCGAGUGCGUCUGGGAGCCCGCGGCCGGAGAAGGGCUGCGGGUUAGGGGGCCGGCGCCCGCGGUUCAGGAUUCCAGAAUUGGAAAUAACGGGAGGGAGGACCUGGUCCAGCUUCCCUUCCUCAAAUAAGGAAAUUGACACCUGGCGUGAGUACCUGUGGAGAAGAAACA\
) } def
/len { sequence length } bind def

/coor [
[104.76903534 264.80285645]
[114.79902649 253.45921326]
[127.97006989 245.98912048]
[125.18685150 231.24958801]
[120.85351562 225.25587463]
[122.47683716 216.25930786]
[119.92317963 201.47827148]
[117.36952972 186.69723511]
[114.81587982 171.91621399]
[112.03266144 157.17668152]
[109.02055359 142.48222351]
[106.00844574 127.78775787]
[102.99633789 113.09329987]
[93.51085663 134.52033997]
[68.07789612 147.00299072]
[55.75356293 155.55348206]
[43.42922592 164.10395813]
[31.10489273 172.65444946]
[18.78055763 181.20492554]
[6.45622253 189.75541687]
[-5.86811209 198.30589294]
[-8.66189480 215.57127380]
[-22.79778862 225.28599548]
[-39.25623703 221.84384155]
[-51.44610596 230.58494568]
[-63.63597488 239.32606506]
[-75.82584381 248.06718445]
[-88.01570892 256.80828857]
[-94.28230286 271.96289062]
[-110.57313538 273.84463501]
[-120.12959290 260.51773071]
[-113.12081146 245.69177246]
[-96.75682831 244.61842346]
[-84.56695557 235.87731934]
[-72.37709045 227.13619995]
[-60.18722153 218.39508057]
[-47.99735260 209.65396118]
[-47.70086288 196.76792908]
[-39.91863632 186.24983215]
[-27.31322289 182.07514954]
[-14.41859627 185.98156738]
[-2.09426117 177.43107605]
[10.23007393 168.88059998]
[22.55440903 160.33010864]
[34.87874222 151.77963257]
[47.20307922 143.22914124]
[59.52741241 134.67866516]
[57.66593170 119.79461670]
[43.61539459 114.54271698]
[29.56485748 109.29081726]
[15.51432133 104.03892517]
[1.46378434 98.78702545]
[-12.58675194 93.53513336]
[-26.63728905 88.28323364]
[-40.68782425 83.03133392]
[-54.73836136 77.77944183]
[-68.78890228 72.52754211]
[-82.83943939 67.27564240]
[-96.35900879 75.13408661]
[-111.75800323 72.41286469]
[-121.76548004 60.39685822]
[-121.65621948 44.75965881]
[-111.48180389 32.88467026]
[-96.04628754 30.37890244]
[-82.63784790 38.42550278]
[-77.58753967 53.22510910]
[-63.53700256 58.47700500]
[-49.48646545 63.72890091]
[-35.43592834 68.98079681]
[-21.38539314 74.23269653]
[-7.33485556 79.48459625]
[6.71568108 84.73648834]
[20.76621819 89.98838806]
[34.81675339 95.24028015]
[48.86729050 100.49217987]
[62.91782761 105.74407959]
[67.88116455 100.12133026]
[63.10559082 85.90184021]
[77.80783844 88.87583923]
[82.77117920 83.25308990]
[75.81622314 69.96292114]
[68.86127472 56.67274857]
[61.90631866 43.38257980]
[47.77422333 35.06297684]
[48.18371201 18.66894150]
[62.71354294 11.06525421]
[76.41667175 20.07393646]
[75.19648743 36.42762756]
[82.15144348 49.71779633]
[89.10639954 63.00796890]
[96.06134796 76.29814148]
[91.29840851 62.07440948]
[97.30298615 48.32868576]
[110.97491455 42.15790558]
[125.25533295 46.74806213]
[132.77124023 59.72924805]
[129.64215088 74.39924622]
[117.48164368 83.18442535]
[130.87837219 76.43700409]
[144.27510071 69.68957520]
[157.67181396 62.94215012]
[157.28179932 28.86502647]
[191.88798523 4.86767006]
[195.80781555 -9.61110592]
[199.72764587 -24.08988190]
[203.64747620 -38.56865692]
[207.56730652 -53.04743195]
[202.84324646 -68.75141907]
[214.27679443 -80.50752258]
[230.10609436 -76.22206879]
[234.04733276 -60.30356216]
[222.04608154 -49.12760162]
[218.12625122 -34.64882660]
[214.20642090 -20.17005157]
[210.28659058 -5.69127703]
[206.36676025 8.78749847]
[212.28720093 13.39167118]
[217.38584900 -0.71519911]
[232.37785339 -0.22533563]
[236.54472351 14.18428516]
[224.12808228 22.60001755]
[230.04852295 27.20418930]
[243.11596680 19.83927727]
[256.18341064 12.47436714]
[269.25085449 5.10945559]
[282.31829834 -2.25545549]
[295.38574219 -9.62036705]
[299.73535156 -24.57759476]
[313.09249878 -31.86051178]
[327.32513428 -27.62165260]
[340.39257812 -34.98656464]
[353.46002197 -42.35147476]
[366.52746582 -49.71638489]
[377.35720825 -62.76065445]
[392.88967896 -55.96514893]
[390.65954590 -39.15851593]
[373.89236450 -36.64894485]
[360.82492065 -29.28403091]
[347.75747681 -21.91912079]
[334.69003296 -14.55420971]
[330.94589233 -0.18350892]
[317.79858398 7.47170925]
[302.75064087 3.44707680]
[289.68319702 10.81198788]
[276.61575317 18.17689896]
[263.54830933 25.54181099]
[250.48086548 32.90672302]
[237.41342163 40.27163315]
[240.08193970 55.03236008]
[254.90089417 57.35583115]
[269.71984863 59.67930222]
[284.53881836 62.00277710]
[299.35775757 64.32624817]
[311.98001099 54.81548309]
[327.61856079 57.09832382]
[336.99533081 69.82041168]
[334.54727173 85.43394470]
[321.72677612 94.67570496]
[306.13998413 92.06270599]
[297.03430176 79.14520264]
[282.21533203 76.82173157]
[267.39639282 74.49826050]
[252.57742310 72.17478943]
[237.75846863 69.85131836]
[230.23783875 81.05546570]
[220.40078735 89.38056946]
[209.20877075 94.43579865]
[197.65615845 96.12561798]
[186.68507385 94.63726044]
[177.10957336 90.40504456]
[169.55535889 84.05545807]
[164.41925049 76.33887482]
[151.02252197 83.08630371]
[137.62579346 89.83372498]
[124.22907257 96.58115387]
[117.69080353 110.08119202]
[120.70291138 124.77565002]
[123.71501923 139.47010803]
[126.72711945 154.16458130]
[130.82965088 159.36416626]
[131.57322693 165.00755310]
[129.59690857 169.36256409]
[132.15055847 184.14358521]
[134.70420837 198.92462158]
[137.25787354 213.70564270]
[139.92637634 228.46636963]
[142.70959473 243.20590210]
[157.69772339 245.35879517]
[171.17355347 252.26390076]
[181.67535400 263.17221069]
[188.06396484 276.90042114]
[189.64639282 291.95947266]
[186.25097656 306.71582031]
[178.24604797 319.56881714]
[166.49990845 329.12429810]
[152.28668213 334.34570312]
[137.14813232 334.66668701]
[122.72637177 330.05242920]
[110.58575439 321.00344849]
[102.04321289 308.50128174]
[98.02537537 293.90213013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[6 185]
[7 184]
[8 183]
[9 182]
[10 179]
[11 178]
[12 177]
[13 176]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[24 37]
[25 36]
[26 35]
[27 34]
[28 33]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[80 91]
[81 90]
[82 89]
[83 88]
[98 175]
[99 174]
[100 173]
[101 172]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[127 143]
[130 140]
[131 139]
[132 138]
[133 137]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
