%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUAAUCGUUGCCAGCGGGGUGUGGACUUCGCCGCUGACCCCACCUCCGCCGCUUUGGGUAAUUUAGAGCCGCGCGCCGGGCGGGAAUGUAAGAUGGCGGAGUAGCAACGCAAAGCGCUUGGUAUUGAGUCUGUGGCCGACUUCGGUUCCGGUCUCUGCAGCAGCCGUGAUCGCUUAGUGGAGUGCUUAGGGUAGUUGGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[-4.06983948 94.60004425]
[-10.57207870 84.39674377]
[-25.12774467 80.77285004]
[-39.68340683 77.14894867]
[-51.56487656 86.95389557]
[-66.76391602 87.87185669]
[-79.43915558 79.76000214]
[-84.84263611 65.90574646]
[-99.39830017 62.28184891]
[-113.95396423 58.65795517]
[-128.50962830 55.03405762]
[-143.06529236 51.41016388]
[-157.62095642 47.78626633]
[-164.45166016 56.21948242]
[-173.71806335 61.74370575]
[-184.25839233 63.71812820]
[-194.76890564 61.94377136]
[-203.96507263 56.68258286]
[-215.99185181 65.64675903]
[-228.01864624 74.61093140]
[-240.04542542 83.57510376]
[-252.07221985 92.53927612]
[-263.96090698 101.68581390]
[-275.70870972 111.01258850]
[-287.45654297 120.33936310]
[-299.20434570 129.66613770]
[-300.75888062 145.39378357]
[-313.03201294 155.35098267]
[-328.74234009 153.63027954]
[-338.56921387 141.25254822]
[-336.68252563 125.56127930]
[-324.20156860 115.86582184]
[-308.53112793 117.91831970]
[-296.78332520 108.59154510]
[-285.03549194 99.26477051]
[-273.28768921 89.93799591]
[-271.86218262 85.37605286]
[-267.55349731 81.66275024]
[-261.03637695 80.51248932]
[-249.00959778 71.54831696]
[-236.98281860 62.58414078]
[-224.95602417 53.61996841]
[-212.92924500 44.65579605]
[-215.00018311 36.51631165]
[-214.74404907 28.12141037]
[-212.18075562 20.12331963]
[-223.63867188 10.44262028]
[-235.09660339 0.76191962]
[-246.55451965 -8.91878128]
[-258.01245117 -18.59948158]
[-269.47036743 -28.28018188]
[-280.92828369 -37.96088028]
[-292.38623047 -47.64158249]
[-307.92114258 -50.63771057]
[-312.64950562 -64.76186371]
[-324.10745239 -74.44256592]
[-335.56536865 -84.12326813]
[-347.02328491 -93.80397034]
[-362.55822754 -96.80009460]
[-367.28659058 -110.92424774]
[-378.74450684 -120.60494995]
[-385.69281006 -117.19131470]
[-393.27490234 -115.76750183]
[-400.93457031 -116.42327881]
[-408.11380005 -119.09640503]
[-414.29348755 -123.57820129]
[-419.03091431 -129.52976990]
[-421.99148560 -136.50761414]
[-422.97232056 -143.99665833]
[-421.91613770 -151.44822693]
[-418.91427612 -158.32032776]
[-429.27551270 -169.16676331]
[-439.63671875 -180.01321411]
[-449.99792480 -190.85964966]
[-465.59042358 -189.67294312]
[-478.26754761 -198.82847595]
[-482.04360962 -214.00331116]
[-475.13562012 -228.03234863]
[-460.80532837 -234.29148865]
[-445.81906128 -229.82537842]
[-437.25289917 -216.74276733]
[-439.15148926 -201.22085571]
[-428.79028320 -190.37442017]
[-418.42904663 -179.52798462]
[-408.06784058 -168.68154907]
[-385.61914062 -170.61323547]
[-368.88116455 -155.13113403]
[-369.06381226 -132.06288147]
[-357.60589600 -122.38217163]
[-342.89050293 -120.07847595]
[-337.34259033 -105.26189423]
[-325.88467407 -95.58119202]
[-314.42675781 -85.90048981]
[-302.96881104 -76.21978760]
[-288.25344849 -73.91609192]
[-282.70553589 -59.09950638]
[-271.24758911 -49.41880798]
[-259.78967285 -39.73810577]
[-248.33174133 -30.05740547]
[-236.87382507 -20.37670517]
[-225.41589355 -10.69600487]
[-213.95797729 -1.01530468]
[-202.50004578 8.66539574]
[-181.65228271 2.98056579]
[-162.12716675 12.73825932]
[-153.99707031 33.23060226]
[-139.44140625 36.85449982]
[-124.88573456 40.47839355]
[-110.33007050 44.10229111]
[-95.77440643 47.72618484]
[-81.21874237 51.35008240]
[-69.95014954 41.64663696]
[-54.95111084 40.42479706]
[-41.95673370 48.36201859]
[-36.05951309 62.59328842]
[-21.50384903 66.21718597]
[-6.94818306 69.84107971]
[9.63168144 64.09511566]
[22.77738762 76.98715973]
[37.38662338 80.38865662]
[51.99586105 83.79016113]
[66.60509491 87.19166565]
[81.21433258 90.59317017]
[95.82357025 93.99466705]
[94.45802307 85.02677155]
[97.51024628 75.50917816]
[105.03287506 67.11473083]
[116.51863861 61.47259903]
[130.52508545 56.10419846]
[144.53150940 50.73579788]
[154.64846802 38.57201004]
[169.30184937 41.24180222]
[183.30828857 35.87340546]
[197.31472778 30.50500488]
[207.43167114 18.34121323]
[222.08505249 21.01100922]
[236.09149170 15.64260960]
[250.09793091 10.27420998]
[264.10437012 4.90580988]
[278.11080933 -0.46258992]
[288.01165771 -13.53566647]
[304.24783325 -11.22961807]
[310.11700439 4.08329058]
[299.58142090 16.65045166]
[283.47921753 13.54384708]
[269.47277832 18.91224670]
[255.46632385 24.28064728]
[241.45988464 29.64904594]
[227.45346069 35.01744461]
[218.33833313 46.79725266]
[202.68312073 44.51144028]
[188.67668152 49.87984085]
[174.67024231 55.24824142]
[165.55513000 67.02804565]
[149.89991760 64.74223328]
[135.89347839 70.11063385]
[121.88703918 75.47903442]
[120.40984344 82.83212280]
[117.45545197 97.53829956]
[115.97824860 104.89138031]
[126.82469177 115.25260162]
[137.67112732 125.61381531]
[148.51756287 135.97502136]
[163.84094238 139.91265869]
[167.69944763 154.29879761]
[178.54589844 164.66001892]
[189.39233398 175.02122498]
[204.71569824 178.95884705]
[208.57421875 193.34500122]
[219.42065430 203.70620728]
[230.26708984 214.06742859]
[245.59046936 218.00505066]
[249.44897461 232.39118958]
[260.29541016 242.75241089]
[271.14184570 253.11361694]
[281.98831177 263.47485352]
[292.83474731 273.83605957]
[308.88742065 277.18920898]
[313.75210571 292.85018921]
[302.42443848 304.70834351]
[286.55734253 300.56500244]
[282.47351074 284.68249512]
[271.62707520 274.32128906]
[260.78063965 263.96005249]
[249.93420410 253.59884644]
[239.08776855 243.23764038]
[224.54020691 240.04110718]
[219.90588379 224.91386414]
[209.05944824 214.55264282]
[198.21299744 204.19143677]
[183.66543579 200.99491882]
[179.03111267 185.86766052]
[168.18467712 175.50645447]
[157.33824158 165.14523315]
[142.79067993 161.94871521]
[138.15635681 146.82147217]
[127.30991364 136.46025085]
[116.46347809 126.09903717]
[105.61703491 115.73782349]
[92.42206573 108.60390472]
[77.81282806 105.20240021]
[63.20359421 101.80090332]
[48.59435654 98.39939880]
[33.98512268 94.99789429]
[19.37588501 91.59639740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 117]
[3 116]
[4 115]
[8 111]
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[18 43]
[19 42]
[20 41]
[21 40]
[22 39]
[23 36]
[24 35]
[25 34]
[26 33]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[51 98]
[52 97]
[53 96]
[55 94]
[56 93]
[57 92]
[58 91]
[60 89]
[61 88]
[71 85]
[72 84]
[73 83]
[74 82]
[119 205]
[120 204]
[121 203]
[122 202]
[123 201]
[124 200]
[128 157]
[129 156]
[130 155]
[132 153]
[133 152]
[134 151]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[160 199]
[161 198]
[162 197]
[163 196]
[165 194]
[166 193]
[167 192]
[169 190]
[170 189]
[171 188]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
