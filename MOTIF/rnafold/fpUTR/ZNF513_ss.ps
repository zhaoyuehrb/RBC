%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGGGGGUAGGGGGCUCCAUGAAUGGAAGCGGCGGCGGCGGCGGGAGCGGCCUGAGCUGGGCGCCGGGGCCAGGGCCGGGGGCUGCCCAGGGCCCGCGCCGCUGCAUGGGGGCGGCCCGCGGGCCCUGAGAGGAAGGGCAGACAGGCGGGCCGAGAUAGGAGGGGCGGGGUCGGGCGGCCGCAGGCCGGAGGCGCGUCGGGCUGGAGCCGGUCACG\
) } def
/len { sequence length } bind def

/coor [
[135.56024170 116.16482544]
[131.76753235 124.54405212]
[125.98149109 132.01011658]
[118.42803955 138.08590698]
[109.44764709 142.35160828]
[99.48043823 144.47222900]
[94.01463318 158.44094849]
[88.54882812 172.40965271]
[83.08302307 186.37837219]
[77.61721039 200.34709167]
[82.70458221 215.56214905]
[73.86030579 228.94715881]
[57.86897278 230.23428345]
[46.99774933 218.43614197]
[49.58612061 202.60325623]
[63.64849854 194.88128662]
[69.11430359 180.91256714]
[74.58010864 166.94384766]
[80.04591370 152.97514343]
[85.51171875 139.00642395]
[79.89514923 134.03610229]
[69.95450592 145.26925659]
[60.01385880 156.50239563]
[50.07321548 167.73554993]
[40.13240051 178.96853638]
[28.89955902 169.02755737]
[38.84006882 157.79490662]
[48.78071213 146.56175232]
[58.72135544 135.32861328]
[68.66200256 124.09545898]
[63.04542542 119.12513733]
[49.84524155 126.24940491]
[41.37576294 139.61273193]
[26.50076866 138.84864807]
[13.30058479 145.97291565]
[5.16230297 160.21020508]
[-11.23562622 160.01029968]
[-19.02441788 145.57884216]
[-10.19163322 131.76168823]
[6.17631865 132.77272034]
[19.37650108 125.64846039]
[26.90181732 112.79470825]
[42.72097778 113.04922485]
[55.92115784 105.92495728]
[65.48930359 78.11231232]
[88.74921417 64.48188019]
[112.85692596 68.90461731]
[121.53385925 56.66897583]
[123.20535278 40.93631363]
[136.87898254 35.03030014]
[145.55592346 22.79466438]
[154.23286438 10.55902863]
[162.90979004 -1.67660785]
[171.49874878 -13.97416496]
[179.99926758 -26.33300972]
[182.28198242 -35.17133331]
[188.71144104 -38.80697632]
[197.38836670 -51.04261017]
[206.06530762 -63.27824783]
[214.74223328 -75.51388550]
[216.41372681 -91.24654388]
[230.08737183 -97.15256500]
[238.76429749 -109.38819885]
[247.44123840 -121.62383270]
[256.11816406 -133.85946655]
[264.79510498 -146.09510803]
[265.04550171 -150.41654968]
[266.50790405 -154.06842041]
[268.82400513 -156.75250244]
[271.57556152 -158.31715393]
[274.33721924 -158.76422119]
[283.70156860 -170.48210144]
[293.06594849 -182.19998169]
[290.80838013 -199.54997253]
[301.58743286 -212.89991760]
[318.35015869 -214.29248047]
[327.54547119 -226.14347839]
[336.74078369 -237.99449158]
[345.93609619 -249.84548950]
[341.76681519 -264.67532349]
[347.06732178 -278.94970703]
[359.60839844 -287.26748657]
[374.46469116 -286.61346436]
[383.66000366 -298.46447754]
[392.85531616 -310.31549072]
[402.05062866 -322.16647339]
[411.24594116 -334.01748657]
[420.44122314 -345.86849976]
[429.63653564 -357.71951294]
[438.83184814 -369.57052612]
[440.10501099 -376.04846191]
[443.88790894 -380.27951050]
[448.46487427 -381.62457275]
[457.99633789 -393.20690918]
[467.52783203 -404.78927612]
[477.05932617 -416.37161255]
[486.59078979 -427.95397949]
[489.62484741 -436.56335449]
[496.34301758 -439.63281250]
[506.03967285 -451.07723999]
[515.73632812 -462.52166748]
[525.43298340 -473.96612549]
[528.45074463 -489.49685669]
[542.58148193 -494.20553589]
[552.27813721 -505.64996338]
[549.63061523 -518.85260010]
[554.99041748 -530.99298096]
[566.19683838 -537.73150635]
[579.04498291 -536.80096436]
[588.90478516 -548.10516357]
[584.83587646 -561.27105713]
[587.77893066 -574.62268066]
[596.86120605 -584.69702148]
[609.63189697 -588.93536377]
[622.72314453 -586.33258057]
[632.74407959 -597.49414062]
[642.76507568 -608.65570068]
[652.78601074 -619.81726074]
[662.80694580 -630.97882080]
[672.82794189 -642.14038086]
[682.84887695 -653.30194092]
[692.86981201 -664.46350098]
[690.38818359 -685.35003662]
[703.94610596 -701.04388428]
[724.38317871 -701.60626221]
[733.74755859 -713.32409668]
[743.11193848 -725.04199219]
[752.47625732 -736.75988770]
[761.84063721 -748.47778320]
[758.58062744 -763.77178955]
[765.95977783 -777.55883789]
[780.49377441 -783.32910156]
[795.32019043 -778.35803223]
[803.43841553 -764.99285889]
[801.01531982 -749.54412842]
[789.19488525 -739.30633545]
[773.55853271 -739.11340332]
[764.19415283 -727.39550781]
[754.82977295 -715.67761230]
[745.46545410 -703.95977783]
[736.10107422 -692.24188232]
[739.94482422 -683.72778320]
[740.42974854 -674.34094238]
[737.44744873 -665.36621094]
[731.36676025 -658.04754639]
[722.98913574 -653.41528320]
[713.44293213 -652.14147949]
[704.03137207 -654.44250488]
[694.01043701 -643.28094482]
[683.98950195 -632.11938477]
[673.96850586 -620.95782471]
[663.94757080 -609.79626465]
[653.92663574 -598.63470459]
[643.90563965 -587.47320557]
[633.88470459 -576.31164551]
[637.83251953 -560.37481689]
[631.43725586 -545.07275391]
[617.03741455 -536.51477051]
[600.20892334 -538.24530029]
[590.34912109 -526.94116211]
[592.20861816 -510.22378540]
[581.18267822 -497.07699585]
[563.72253418 -495.95333862]
[554.02587891 -484.50891113]
[551.70172119 -469.79675293]
[536.87738037 -464.26947021]
[527.18078613 -452.82504272]
[517.48413086 -441.38061523]
[507.78747559 -429.93615723]
[498.17315674 -418.42248535]
[488.64166260 -406.84014893]
[479.11016846 -395.25778198]
[469.57870483 -383.67544556]
[460.04721069 -372.09307861]
[450.68286133 -360.37521362]
[441.48754883 -348.52420044]
[432.29223633 -336.67318726]
[423.09692383 -324.82217407]
[413.90164185 -312.97119141]
[404.70632935 -301.12017822]
[395.51101685 -289.26916504]
[386.31570435 -277.41815186]
[390.63970947 -263.19000244]
[385.69799805 -248.97578430]
[373.18777466 -240.29551697]
[357.78710938 -240.65019226]
[348.59179688 -228.79917908]
[339.39648438 -216.94818115]
[330.20117188 -205.09716797]
[333.58694458 -192.66828918]
[329.13110352 -180.37452698]
[318.24917603 -172.77845764]
[304.78381348 -172.83563232]
[295.41946411 -161.11773682]
[286.05511475 -149.39985657]
[277.03073120 -137.41816711]
[268.35382080 -125.18253326]
[259.67687988 -112.94689941]
[250.99993896 -100.71126556]
[242.32299805 -88.47562408]
[241.27214050 -73.61814117]
[226.97787476 -66.83695221]
[218.30093384 -54.60131454]
[209.62400818 -42.36567688]
[200.94706726 -30.13004112]
[192.35812378 -17.83248329]
[183.85758972 -5.47363853]
[182.65762329 1.81441617]
[175.14543152 7.00032759]
[166.46849060 19.23596382]
[157.79156494 31.47159958]
[149.11462402 43.70723724]
[148.06376648 58.56472397]
[133.76950073 65.34591675]
[125.09255981 77.58155060]
[130.51260376 83.40971375]
[134.54635620 90.55632782]
[136.87307739 98.68389130]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[31 44]
[32 43]
[34 41]
[35 40]
[47 215]
[48 214]
[50 212]
[51 211]
[52 210]
[53 209]
[54 207]
[55 206]
[57 205]
[58 204]
[59 203]
[60 202]
[62 200]
[63 199]
[64 198]
[65 197]
[66 196]
[71 195]
[72 194]
[73 193]
[76 189]
[77 188]
[78 187]
[79 186]
[83 182]
[84 181]
[85 180]
[86 179]
[87 178]
[88 177]
[89 176]
[90 175]
[93 174]
[94 173]
[95 172]
[96 171]
[97 170]
[99 169]
[100 168]
[101 167]
[102 166]
[104 164]
[105 163]
[109 160]
[110 159]
[115 155]
[116 154]
[117 153]
[118 152]
[119 151]
[120 150]
[121 149]
[122 148]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
