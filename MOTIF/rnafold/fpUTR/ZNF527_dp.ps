%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF527)
} def

/sequence { (\
GAGGAUUCUGGGAGGUGACGUCGCGGGUCUCGGUCGCGGGGCCCGUUUGCAGAGCCCGCGGCGCCGGGAGGACUUUGUUCUUCUUCAGAAGAGAAAACUGAAGAAGGAGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003401318 ubox
1 75 0.683386526 ubox
1 76 0.151435744 ubox
2 7 0.003238384 ubox
2 9 0.003625252 ubox
2 74 0.939622638 ubox
2 75 0.185094644 ubox
2 76 0.010558938 ubox
2 78 0.003400624 ubox
3 8 0.003711646 ubox
3 65 0.004901933 ubox
3 73 0.966674396 ubox
3 74 0.213250338 ubox
3 75 0.011985755 ubox
3 76 0.007343089 ubox
4 64 0.004905431 ubox
4 73 0.216329845 ubox
4 74 0.012034940 ubox
4 75 0.014047900 ubox
4 76 0.004393611 ubox
5 74 0.015517338 ubox
5 75 0.004777232 ubox
6 54 0.003924390 ubox
6 69 0.233917736 ubox
6 70 0.957829823 ubox
6 71 0.013142228 ubox
6 72 0.079499337 ubox
7 18 0.004102146 ubox
7 53 0.004975376 ubox
7 61 0.004149868 ubox
7 68 0.237131723 ubox
7 69 0.965879433 ubox
7 70 0.006207305 ubox
7 71 0.080424259 ubox
7 72 0.035200300 ubox
8 17 0.004417399 ubox
8 52 0.005073536 ubox
8 60 0.004548776 ubox
8 67 0.241264283 ubox
8 68 0.966210636 ubox
8 70 0.080792978 ubox
8 71 0.037388452 ubox
9 51 0.005073040 ubox
9 58 0.005099982 ubox
9 66 0.243927672 ubox
9 67 0.962170345 ubox
9 69 0.080211731 ubox
9 70 0.037100662 ubox
10 50 0.005072005 ubox
10 57 0.005937986 ubox
10 65 0.246490764 ubox
11 56 0.005943274 ubox
11 64 0.245986862 ubox
11 65 0.963976451 ubox
12 48 0.004955559 ubox
12 55 0.005942648 ubox
12 64 0.963478110 ubox
12 76 0.003610535 ubox
13 47 0.004932631 ubox
13 75 0.004319026 ubox
14 56 0.007157344 ubox
14 65 0.093897629 ubox
14 74 0.004957118 ubox
15 50 0.005769152 ubox
15 55 0.007228239 ubox
15 59 0.014504899 ubox
15 62 0.023101786 ubox
15 64 0.095481211 ubox
15 73 0.005043267 ubox
16 49 0.005753838 ubox
16 51 0.008765115 ubox
16 54 0.007222874 ubox
16 58 0.014496877 ubox
16 60 0.003796827 ubox
16 61 0.021259599 ubox
16 63 0.060505851 ubox
16 66 0.025079142 ubox
16 72 0.004904022 ubox
17 48 0.005697243 ubox
17 50 0.009364875 ubox
17 57 0.014357742 ubox
17 59 0.004064584 ubox
17 62 0.024080909 ubox
17 65 0.025746889 ubox
18 47 0.005676925 ubox
19 49 0.009670425 ubox
19 58 0.007904241 ubox
19 60 0.005521204 ubox
19 63 0.995204933 ubox
20 48 0.009403761 ubox
20 50 0.008989447 ubox
20 55 0.003482151 ubox
20 57 0.007781123 ubox
20 59 0.005413818 ubox
20 62 0.999109140 ubox
21 49 0.008782520 ubox
21 53 0.015212637 ubox
21 58 0.004656623 ubox
21 61 0.999131392 ubox
22 52 0.015369934 ubox
22 60 0.999563092 ubox
23 46 0.024180837 ubox
23 50 0.003363143 ubox
23 59 0.999664280 ubox
24 45 0.024868904 ubox
24 58 0.999659629 ubox
25 44 0.031486547 ubox
25 56 0.005180257 ubox
25 57 0.999461208 ubox
26 43 0.032127570 ubox
26 55 0.007297412 ubox
26 56 0.999439887 ubox
27 42 0.032745823 ubox
27 55 0.999290930 ubox
27 56 0.004019194 ubox
28 41 0.032910180 ubox
28 53 0.142767995 ubox
28 54 0.176326378 ubox
29 40 0.037940108 ubox
29 52 0.167832702 ubox
29 54 0.972973140 ubox
30 39 0.037957789 ubox
30 51 0.165907381 ubox
30 53 0.982820403 ubox
31 38 0.038034741 ubox
31 45 0.064057909 ubox
31 49 0.140186553 ubox
31 52 0.976349464 ubox
32 37 0.037900080 ubox
32 43 0.219416497 ubox
32 44 0.055029544 ubox
32 47 0.005596571 ubox
32 48 0.129128142 ubox
33 42 0.222956756 ubox
33 43 0.039764005 ubox
33 47 0.105819899 ubox
33 50 0.879450413 ubox
34 41 0.226078215 ubox
34 49 0.858327852 ubox
34 53 0.010753414 ubox
35 40 0.225829303 ubox
35 45 0.013041890 ubox
35 49 0.145802781 ubox
35 52 0.010902469 ubox
36 42 0.010522266 ubox
36 44 0.012327914 ubox
36 46 0.953319780 ubox
36 48 0.054678731 ubox
36 50 0.046697783 ubox
37 41 0.010550863 ubox
37 45 0.971597793 ubox
37 49 0.047145601 ubox
38 44 0.971729005 ubox
38 47 0.005203582 ubox
38 48 0.046792365 ubox
39 43 0.956043684 ubox
39 46 0.005480184 ubox
39 47 0.046228840 ubox
40 46 0.044221916 ubox
41 50 0.017689855 ubox
42 49 0.017665804 ubox
45 55 0.017772614 ubox
46 54 0.017749119 ubox
47 51 0.004454537 ubox
47 53 0.017451444 ubox
48 52 0.015753116 ubox
48 53 0.003708060 ubox
49 55 0.009909428 ubox
49 59 0.005655864 ubox
50 54 0.009875725 ubox
50 58 0.005666445 ubox
54 62 0.012696862 ubox
55 61 0.012717610 ubox
55 68 0.004778087 ubox
56 60 0.012625650 ubox
56 67 0.004798416 ubox
57 66 0.004804365 ubox
58 65 0.004388396 ubox
64 71 0.010689222 ubox
65 70 0.010720614 ubox
66 74 0.003303578 ubox
67 73 0.003574825 ubox
73 109 0.008032727 ubox
73 110 0.016633139 ubox
74 108 0.007309604 ubox
74 109 0.016912838 ubox
74 110 0.007894997 ubox
74 111 0.021540730 ubox
75 107 0.005799874 ubox
75 108 0.012654715 ubox
75 109 0.013974146 ubox
75 110 0.042523317 ubox
75 111 0.562118639 ubox
76 107 0.010568173 ubox
76 108 0.010514472 ubox
76 109 0.047104900 ubox
76 110 0.905445169 ubox
78 105 0.004926430 ubox
78 107 0.006475197 ubox
78 108 0.980447199 ubox
78 109 0.037396932 ubox
78 110 0.008049918 ubox
78 111 0.018266162 ubox
79 104 0.004860569 ubox
79 107 0.992549470 ubox
79 108 0.044758518 ubox
79 109 0.005097440 ubox
79 110 0.021683083 ubox
79 111 0.003425089 ubox
80 103 0.004844035 ubox
80 106 0.998874299 ubox
80 107 0.038036642 ubox
80 109 0.022738160 ubox
80 110 0.003838111 ubox
81 102 0.004805278 ubox
81 105 0.998740625 ubox
81 106 0.028147886 ubox
81 108 0.022586099 ubox
81 109 0.003548959 ubox
82 101 0.004698090 ubox
82 104 0.999181353 ubox
82 105 0.019815834 ubox
82 107 0.022089307 ubox
83 100 0.004675679 ubox
83 103 0.999723873 ubox
83 106 0.021934601 ubox
84 95 0.003340996 ubox
84 102 0.999179533 ubox
84 105 0.021860607 ubox
85 94 0.003466451 ubox
85 101 0.999397245 ubox
85 104 0.021642248 ubox
86 93 0.003488393 ubox
86 100 0.999733770 ubox
86 103 0.021572328 ubox
87 99 0.998714515 ubox
88 98 0.994226238 ubox
90 99 0.028628081 ubox
91 98 0.035172601 ubox
92 99 0.010411831 ubox
93 98 0.013744568 ubox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
19 63 0.9500000 lbox
20 62 0.9500000 lbox
21 61 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
33 50 0.9500000 lbox
34 49 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
39 43 0.9500000 lbox
75 111 0.9500000 lbox
76 110 0.9500000 lbox
78 108 0.9500000 lbox
79 107 0.9500000 lbox
80 106 0.9500000 lbox
81 105 0.9500000 lbox
82 104 0.9500000 lbox
83 103 0.9500000 lbox
84 102 0.9500000 lbox
85 101 0.9500000 lbox
86 100 0.9500000 lbox
87 99 0.9500000 lbox
88 98 0.9500000 lbox
showpage
end
%%EOF
