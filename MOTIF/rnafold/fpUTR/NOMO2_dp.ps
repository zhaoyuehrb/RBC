%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NOMO2)
} def

/sequence { (\
GAGCCUGCGGCGUGCAGUGUGAGGGGCGGGACCCGGCUGCCGGCGGUGGGUCUAGCUGGGGGAGGUCGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 52 0.499454096 ubox
1 67 0.006885683 ubox
2 51 0.449414086 ubox
2 53 0.455231849 ubox
2 66 0.006529593 ubox
3 11 0.013099872 ubox
3 18 0.010381363 ubox
3 20 0.098127212 ubox
3 27 0.291075259 ubox
3 44 0.007603532 ubox
3 47 0.017397440 ubox
3 51 0.665474725 ubox
3 52 0.464623856 ubox
3 71 0.020348093 ubox
4 10 0.013125842 ubox
4 17 0.007788213 ubox
4 19 0.103074560 ubox
4 24 0.048606247 ubox
4 25 0.026186661 ubox
4 26 0.291022512 ubox
4 30 0.062129974 ubox
4 43 0.007612670 ubox
4 46 0.018224531 ubox
4 49 0.278218917 ubox
4 50 0.902373970 ubox
4 62 0.011736554 ubox
4 70 0.020296220 ubox
5 9 0.013031043 ubox
5 17 0.115904970 ubox
5 23 0.048851778 ubox
5 24 0.030278416 ubox
5 25 0.290332350 ubox
5 29 0.062429064 ubox
5 42 0.007598096 ubox
5 45 0.017947079 ubox
5 46 0.008246633 ubox
5 48 0.277839124 ubox
5 49 0.903045448 ubox
5 61 0.011774170 ubox
5 69 0.019825254 ubox
6 16 0.118711088 ubox
6 19 0.004993821 ubox
6 21 0.018625738 ubox
6 22 0.047967476 ubox
6 23 0.032310072 ubox
6 24 0.286678315 ubox
6 28 0.062409455 ubox
6 45 0.009124618 ubox
6 48 0.899540697 ubox
6 60 0.011739639 ubox
6 68 0.016779550 ubox
7 15 0.121290612 ubox
7 18 0.023700035 ubox
7 20 0.083411151 ubox
7 27 0.062490321 ubox
7 40 0.007549073 ubox
7 44 0.012150239 ubox
7 47 0.904253174 ubox
7 67 0.011381662 ubox
8 14 0.121245328 ubox
8 17 0.023785038 ubox
8 19 0.084009408 ubox
8 21 0.086505061 ubox
8 26 0.062463114 ubox
8 39 0.007557950 ubox
8 42 0.015279714 ubox
8 43 0.011612119 ubox
8 45 0.301910201 ubox
8 46 0.895165198 ubox
8 48 0.003424810 ubox
8 58 0.011932671 ubox
8 65 0.008151386 ubox
8 68 0.006422855 ubox
9 13 0.074808062 ubox
9 18 0.070748872 ubox
9 20 0.064635802 ubox
9 38 0.007551595 ubox
9 41 0.015678339 ubox
9 44 0.334809750 ubox
9 47 0.003902360 ubox
9 57 0.011918813 ubox
9 67 0.007358878 ubox
9 72 0.006206292 ubox
10 18 0.141948190 ubox
10 20 0.241396319 ubox
10 27 0.003685249 ubox
10 37 0.007554974 ubox
10 40 0.015584076 ubox
10 44 0.883317921 ubox
10 56 0.011924027 ubox
10 66 0.007987333 ubox
10 71 0.006251829 ubox
11 17 0.150588543 ubox
11 19 0.243323224 ubox
11 21 0.022951917 ubox
11 26 0.003753203 ubox
11 36 0.007487214 ubox
11 39 0.015498473 ubox
11 42 0.370161472 ubox
11 43 0.869840944 ubox
11 45 0.007296641 ubox
11 55 0.011896049 ubox
11 65 0.008033351 ubox
11 70 0.006251199 ubox
12 18 0.193573284 ubox
12 20 0.019092511 ubox
12 27 0.003807095 ubox
12 38 0.014125878 ubox
12 41 0.401450545 ubox
12 44 0.007420041 ubox
13 17 0.054038829 ubox
13 19 0.010245235 ubox
13 21 0.041311786 ubox
13 26 0.003778142 ubox
13 28 0.008336969 ubox
13 42 0.037088653 ubox
13 43 0.007066400 ubox
13 68 0.006093777 ubox
14 18 0.006815509 ubox
14 20 0.047298532 ubox
14 27 0.010990137 ubox
14 37 0.013050798 ubox
14 40 0.944759365 ubox
14 41 0.029630642 ubox
14 67 0.006014562 ubox
15 19 0.047350774 ubox
15 21 0.018506196 ubox
15 26 0.010985415 ubox
15 36 0.012964103 ubox
15 39 0.945452656 ubox
15 48 0.004301933 ubox
15 58 0.005711495 ubox
15 65 0.005045592 ubox
16 20 0.015031591 ubox
16 38 0.944590206 ubox
16 47 0.004316659 ubox
16 57 0.005522668 ubox
17 27 0.004538813 ubox
17 37 0.940683966 ubox
17 56 0.005325555 ubox
17 71 0.003726031 ubox
18 26 0.004558808 ubox
18 28 0.020140800 ubox
18 35 0.054266158 ubox
18 36 0.853315631 ubox
18 45 0.004327234 ubox
18 55 0.004889952 ubox
18 70 0.003857062 ubox
19 27 0.027478905 ubox
19 32 0.007895964 ubox
19 34 0.029831906 ubox
19 37 0.088972977 ubox
19 44 0.004354532 ubox
19 71 0.008786037 ubox
20 26 0.027367523 ubox
20 28 0.004016461 ubox
20 31 0.007867199 ubox
20 35 0.253687603 ubox
20 36 0.105475748 ubox
20 43 0.004031319 ubox
20 68 0.003903699 ubox
20 70 0.008791764 ubox
21 27 0.007671986 ubox
21 34 0.273699471 ubox
21 67 0.004151085 ubox
22 66 0.004060503 ubox
23 33 0.291989598 ubox
23 34 0.878750156 ubox
23 72 0.013451088 ubox
24 32 0.291218361 ubox
24 33 0.888499820 ubox
24 34 0.133236377 ubox
24 38 0.005835457 ubox
24 71 0.013521398 ubox
24 72 0.010369053 ubox
25 32 0.888406668 ubox
25 33 0.135020457 ubox
25 34 0.004880001 ubox
25 37 0.007445595 ubox
25 57 0.013483514 ubox
25 67 0.033096723 ubox
25 71 0.009765251 ubox
25 72 0.091331698 ubox
26 32 0.135043445 ubox
26 33 0.004918284 ubox
26 56 0.014027165 ubox
26 66 0.033349268 ubox
26 71 0.092556091 ubox
27 35 0.029381104 ubox
27 55 0.014084386 ubox
27 65 0.033401817 ubox
27 68 0.011780355 ubox
27 70 0.092419995 ubox
28 34 0.029681430 ubox
28 67 0.012613108 ubox
28 72 0.054282949 ubox
29 33 0.029204353 ubox
29 53 0.035786488 ubox
29 66 0.012430344 ubox
29 67 0.005013595 ubox
29 71 0.051858565 ubox
29 72 0.284801210 ubox
30 52 0.037200463 ubox
30 67 0.092923274 ubox
30 71 0.288554260 ubox
31 51 0.037229002 ubox
31 66 0.093185219 ubox
32 50 0.037204947 ubox
32 60 0.039656498 ubox
32 61 0.003179526 ubox
32 65 0.092161823 ubox
32 70 0.306566193 ubox
33 49 0.037165048 ubox
33 59 0.040059968 ubox
33 64 0.091146662 ubox
33 65 0.011562896 ubox
33 69 0.306786533 ubox
34 48 0.037071913 ubox
34 58 0.040436257 ubox
34 64 0.016098531 ubox
34 68 0.306784845 ubox
35 47 0.026439126 ubox
35 57 0.040457293 ubox
35 67 0.306691402 ubox
36 44 0.010708335 ubox
36 47 0.025084143 ubox
36 56 0.040500105 ubox
36 66 0.305098684 ubox
37 43 0.010731536 ubox
37 46 0.035470933 ubox
37 55 0.040498801 ubox
37 61 0.008327471 ubox
37 62 0.131706082 ubox
37 64 0.054434500 ubox
37 65 0.286779019 ubox
38 42 0.009668192 ubox
38 45 0.035423110 ubox
38 54 0.039568307 ubox
38 60 0.008775079 ubox
38 61 0.181495578 ubox
38 63 0.073223728 ubox
38 64 0.227342685 ubox
39 44 0.034782678 ubox
39 47 0.003289936 ubox
39 51 0.024531879 ubox
39 53 0.028555575 ubox
40 46 0.003533179 ubox
40 49 0.013119446 ubox
40 50 0.027167473 ubox
40 59 0.230282353 ubox
40 60 0.029825715 ubox
40 61 0.098143041 ubox
40 62 0.195306463 ubox
41 45 0.003508753 ubox
41 48 0.013293686 ubox
41 49 0.027098781 ubox
41 58 0.232138886 ubox
41 59 0.023199231 ubox
41 60 0.097882904 ubox
41 61 0.195402878 ubox
42 47 0.011929361 ubox
42 52 0.028100371 ubox
42 57 0.237201637 ubox
43 51 0.028571127 ubox
43 56 0.237965985 ubox
44 50 0.028640824 ubox
44 55 0.237853244 ubox
44 58 0.211927009 ubox
45 52 0.030518726 ubox
45 53 0.144662559 ubox
45 57 0.213957789 ubox
46 51 0.021336744 ubox
46 52 0.162923178 ubox
46 56 0.214246874 ubox
47 54 0.023499376 ubox
47 55 0.212091978 ubox
47 58 0.006887294 ubox
48 53 0.024017339 ubox
48 57 0.007963327 ubox
49 56 0.008126014 ubox
49 57 0.004192268 ubox
49 72 0.033741699 ubox
50 56 0.004325079 ubox
50 71 0.046961831 ubox
51 55 0.004098210 ubox
51 63 0.003533010 ubox
51 70 0.049595325 ubox
52 58 0.004424000 ubox
52 59 0.006219778 ubox
52 60 0.006511299 ubox
52 61 0.007934633 ubox
52 62 0.005736558 ubox
52 68 0.005744210 ubox
52 69 0.074379906 ubox
52 70 0.014483254 ubox
53 58 0.005867647 ubox
53 59 0.006440657 ubox
53 60 0.007791862 ubox
53 61 0.005646428 ubox
53 68 0.073370068 ubox
53 69 0.014497969 ubox
55 66 0.078607571 ubox
55 71 0.933827072 ubox
56 62 0.004414503 ubox
56 64 0.014444894 ubox
56 65 0.079346736 ubox
56 69 0.118682120 ubox
56 70 0.934399883 ubox
57 61 0.004001972 ubox
57 63 0.015161464 ubox
57 64 0.077942728 ubox
57 68 0.131041684 ubox
57 69 0.929630278 ubox
58 67 0.142615398 ubox
58 72 0.008103593 ubox
59 66 0.133978313 ubox
59 67 0.926785661 ubox
59 71 0.008183266 ubox
59 72 0.008395969 ubox
60 66 0.881747726 ubox
60 67 0.074325432 ubox
60 71 0.008489126 ubox
60 72 0.009204324 ubox
61 66 0.080298513 ubox
61 67 0.014705442 ubox
61 71 0.009327358 ubox
61 72 0.010117246 ubox
62 66 0.011562190 ubox
62 71 0.010243089 ubox
64 72 0.026496606 ubox
65 71 0.026763090 ubox
66 70 0.025038176 ubox
3 51 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
55 71 0.9500000 lbox
56 70 0.9500000 lbox
57 69 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
showpage
end
%%EOF
