%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCCACUCCCCCGCCCUCCCCAGGGCCCUGGGAAGGGGCUCAGCGUGGGAAAGGAUGGUUGAGUUUUAACCAGAGGCAAAGCGUGAGCGGGAUCAGUGUGUGCGGAACGCAAGCAGCCGAGAGCGGAGAGGCGCCGCUGUAGUUAACUCCUCCCUGCCCGCCGCGCCGACCCUCCCCAGGAACCCCCAGGGAGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[130.92878723 255.69230652]
[116.13967133 252.05885315]
[104.11098480 242.71913147]
[96.92675781 229.29129028]
[95.83170319 214.10179138]
[101.01555634 199.78231812]
[111.58017731 188.81378174]
[125.69518280 183.09657288]
[126.16400146 168.10389709]
[126.63281250 153.11122131]
[127.10163116 138.11854553]
[127.57044983 123.12587738]
[120.52946472 120.54237366]
[106.44748688 115.37537384]
[99.40649414 112.79187012]
[90.06724548 124.52977753]
[80.72800446 136.26768494]
[71.38875580 148.00558472]
[62.04950333 159.74349976]
[60.15989685 176.03341675]
[45.00226974 182.29267883]
[32.16949463 172.08230591]
[34.86282730 155.90583801]
[50.31159592 150.40425110]
[59.65084457 138.66633606]
[68.99009705 126.92843628]
[78.32934570 115.19052887]
[87.66859436 103.45262146]
[93.70532227 89.72098541]
[96.04026031 74.90383148]
[98.37519836 60.08667755]
[100.71013641 45.26952362]
[103.04507446 30.45236778]
[105.38001251 15.63521385]
[99.88520050 0.79885328]
[109.50933838 -10.56886864]
[111.84427643 -25.38602257]
[114.17921448 -40.20317841]
[116.51416016 -55.02033234]
[104.04004669 -63.74718475]
[96.62218475 -76.97074127]
[95.68515015 -92.04197693]
[101.36133575 -105.96827698]
[112.47530365 -116.00765991]
[126.78675079 -120.20861053]
[129.12168884 -135.02575684]
[131.45661926 -149.84291077]
[133.67570496 -164.67787170]
[135.77877808 -179.52970886]
[137.88185120 -194.38154602]
[139.98492432 -209.23338318]
[132.86930847 -219.99755859]
[134.93193054 -232.32876587]
[144.52804565 -239.70195007]
[146.86299133 -254.51910400]
[149.19792175 -269.33624268]
[141.77944946 -268.06076050]
[133.49113464 -269.75891113]
[120.27268219 -276.84924316]
[107.05423737 -283.93957520]
[93.83579254 -291.02990723]
[80.61735535 -298.12023926]
[67.39891052 -305.21057129]
[54.18046570 -312.30090332]
[37.36451721 -314.45965576]
[34.78379822 -331.21603394]
[50.17091751 -338.33453369]
[61.27079391 -325.51931763]
[74.48923492 -318.42901611]
[87.70767975 -311.33868408]
[100.92612457 -304.24835205]
[114.14456940 -297.15802002]
[127.36301422 -290.06768799]
[140.58145142 -282.97735596]
[154.81803894 -287.70172119]
[161.17501831 -301.28805542]
[167.53199768 -314.87442017]
[173.88897705 -328.46075439]
[165.50781250 -343.14822388]
[167.50967407 -359.77249146]
[178.90948486 -371.80917358]
[195.07324219 -374.65325928]
[201.21710205 -388.33731079]
[207.36096191 -402.02136230]
[199.81465149 -415.45114136]
[201.60232544 -430.57257080]
[211.83029175 -441.61126709]
[226.42239380 -444.47634888]
[232.56623840 -458.16040039]
[238.71009827 -471.84445190]
[244.85395813 -485.52850342]
[250.99780273 -499.21252441]
[245.08239746 -504.75338745]
[241.04428101 -512.15307617]
[239.46505737 -520.76422119]
[240.70025635 -529.75964355]
[244.82502747 -538.21191406]
[251.60769653 -545.18878174]
[260.51574707 -549.85443115]
[264.00033569 -564.44409180]
[267.48489380 -579.03369141]
[263.16513062 -594.25378418]
[273.64736938 -604.83544922]
[277.13195801 -619.42510986]
[280.61654663 -634.01470947]
[284.10110474 -648.60437012]
[281.89968872 -665.41479492]
[297.44375610 -672.18377686]
[308.25119019 -659.12103271]
[298.69076538 -645.11981201]
[295.20617676 -630.53015137]
[291.72158813 -615.94049072]
[288.23703003 -601.35089111]
[292.80603027 -587.17437744]
[282.07455444 -575.54913330]
[278.58996582 -560.95947266]
[275.10537720 -546.36987305]
[288.15399170 -538.97161865]
[298.88418579 -549.45312500]
[309.61437988 -559.93469238]
[305.17147827 -574.58117676]
[308.05541992 -589.61248779]
[317.60351562 -601.57464600]
[331.62167358 -607.71875000]
[346.88861084 -606.63293457]
[359.89611816 -598.56677246]
[367.65515137 -585.37371826]
[368.38275146 -570.08551025]
[361.91174316 -556.21527100]
[349.72906494 -546.95019531]
[334.63421631 -544.41943359]
[320.09594727 -549.20446777]
[309.36572266 -538.72296143]
[298.63552856 -528.24139404]
[290.03225708 -499.78314209]
[264.68185425 -493.06866455]
[258.53799438 -479.38464355]
[252.39413452 -465.70059204]
[246.25028992 -452.01654053]
[240.10643005 -438.33251953]
[247.66134644 -425.52386475]
[246.20816040 -410.54547119]
[236.09558105 -399.16177368]
[221.04499817 -395.87750244]
[214.90115356 -382.19345093]
[208.75729370 -368.50939941]
[216.44444275 -357.58837891]
[217.73979187 -344.18734741]
[212.19827271 -331.79846191]
[201.17051697 -323.70330811]
[187.47532654 -322.10379028]
[181.11834717 -308.51745605]
[174.76136780 -294.93109131]
[168.40438843 -281.34475708]
[164.01507568 -267.00131226]
[161.68014526 -252.18415833]
[159.34519958 -237.36700439]
[166.52249146 -221.35661316]
[154.83676147 -207.13031006]
[152.73368835 -192.27847290]
[150.63061523 -177.42663574]
[148.52754211 -162.57479858]
[150.70414734 -155.50553894]
[146.27377319 -147.50798035]
[143.93884277 -132.69082642]
[141.60389709 -117.87367249]
[153.92987061 -109.47510529]
[161.41783142 -96.50437164]
[162.53617859 -81.50736237]
[157.00968933 -67.45466614]
[145.88467407 -57.15316391]
[131.33131409 -52.68539429]
[128.99636841 -37.86824036]
[126.66143799 -23.05108452]
[124.32649231 -8.23393059]
[129.98832703 5.54260731]
[120.19716644 17.97015190]
[117.86222839 32.78730774]
[115.52729034 47.60446167]
[113.19235229 62.42161560]
[110.85741425 77.23876953]
[108.52247620 92.05592346]
[113.04678345 77.75450134]
[123.90392303 67.40449524]
[138.40525818 63.56895447]
[152.95970154 67.19770050]
[163.96305847 77.39211273]
[168.69047546 91.62768555]
[165.97126770 106.37915802]
[156.47882080 117.99351501]
[142.56312561 123.59469604]
[142.09429932 138.58737183]
[141.62548828 153.58003235]
[141.15667725 168.57270813]
[140.68785095 183.56538391]
[154.41807556 190.15332031]
[164.27676392 201.76048279]
[168.55581665 216.37586975]
[166.51390076 231.46726990]
[158.50474548 244.42001343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[36 175]
[37 174]
[38 173]
[39 172]
[45 166]
[46 165]
[47 164]
[48 162]
[49 161]
[50 160]
[51 159]
[54 157]
[55 156]
[56 155]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[75 154]
[76 153]
[77 152]
[78 151]
[82 146]
[83 145]
[84 144]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[99 117]
[100 116]
[101 115]
[103 113]
[104 112]
[105 111]
[106 110]
[118 134]
[119 133]
[120 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
