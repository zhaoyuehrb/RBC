%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGCGCGGCUCAUCUUCGCCCAGCCAGGACACGCAGGAUCGCGUUAUCUGUCCCUCCCGCGGGCACAUUGGGAGUUGUAGUCUAAUUAUAUAUUUCCGCCCUUAGUGUGGGGAGAGCGGGAACUACUCGACCCACAGAGCCGAUCGCGGAGCGGAUUCUGCUUUUAGGAGUACCCGCCAACAAGCGGGACCGAGCAGGAAUCCGUAUCUGGGAACAGG\
) } def
/len { sequence length } bind def

/coor [
[163.04322815 203.02114868]
[154.02258301 191.03666687]
[150.86120605 176.37359619]
[154.14225769 161.73683167]
[163.26049805 149.82643127]
[176.53388977 142.83949280]
[191.51084900 142.06440735]
[178.89205933 133.95480347]
[166.27325439 125.84518433]
[153.65444946 117.73557281]
[141.03564453 109.62596130]
[128.41683960 101.51634979]
[127.74324799 110.81929779]
[123.97792816 119.80462646]
[117.27340698 127.43542480]
[108.13092041 132.74691772]
[97.36740875 134.96328735]
[86.04369354 133.60003662]
[75.35996246 128.53907776]
[61.38200378 133.98118591]
[47.40404510 139.42330933]
[33.42608261 144.86541748]
[26.57010841 150.89112854]
[19.20947075 150.28387451]
[5.15522432 155.52584839]
[-2.21982026 174.22169495]
[-20.68543434 181.34602356]
[-38.15835571 172.71887207]
[-51.97521210 178.55792236]
[-65.79206848 184.39697266]
[-79.60892487 190.23602295]
[-93.20856476 196.56451416]
[-106.57366180 203.37437439]
[-119.93875885 210.18421936]
[-133.30386353 216.99407959]
[-137.94866943 232.10041809]
[-151.95375061 239.42388916]
[-167.01013184 234.61962891]
[-174.18511963 220.53790283]
[-169.22193909 205.53315735]
[-155.06513977 198.50743103]
[-140.11370850 203.62898254]
[-126.74861908 196.81912231]
[-113.38352203 190.00926208]
[-100.01841736 183.19941711]
[-113.27790833 176.18612671]
[-116.20577240 161.47465515]
[-106.64185333 149.91908264]
[-91.64238739 150.04507446]
[-82.27394104 161.75968933]
[-85.44797516 176.41917419]
[-71.63111877 170.58010864]
[-57.81426239 164.74105835]
[-43.99740982 158.90200806]
[-42.84392548 148.71348572]
[-37.52674866 139.85198975]
[-28.94642830 133.94847107]
[-18.61085510 132.12165833]
[-8.37041569 134.76660156]
[-0.08673848 141.47160339]
[13.96750736 136.22962952]
[27.98396873 130.88746643]
[41.96192932 125.44534302]
[55.93988800 120.00322723]
[69.91784668 114.56111145]
[71.66868591 107.26834106]
[57.08319473 103.76643372]
[60.58532715 89.18099213]
[75.17037201 92.68279266]
[76.92121124 85.39001465]
[66.93742371 74.19519806]
[56.95363998 63.00037384]
[46.96985626 51.80554962]
[36.98606873 40.61072922]
[27.00228500 29.41590691]
[17.01849937 18.22108650]
[6.95503807 7.09783316]
[-3.18758535 -3.95328426]
[-13.33020878 -15.00440121]
[-23.47283173 -26.05551910]
[-33.61545563 -37.10663605]
[-43.75807953 -48.15775299]
[-58.92269135 -55.73870850]
[-55.83598328 -72.40930176]
[-38.96239853 -74.05809784]
[-32.70696259 -58.30037689]
[-22.56433868 -47.24925995]
[-12.42171574 -36.19814301]
[-2.27909184 -25.14702415]
[7.86353159 -14.09590721]
[18.00615501 -3.04479051]
[24.84021187 -0.24418600]
[28.21332169 8.23730087]
[38.19710541 19.43212318]
[48.18089294 30.62694359]
[58.16467667 41.82176590]
[68.14846039 53.01658630]
[78.13224792 64.21141052]
[88.11603546 75.40623474]
[95.47709656 73.96932220]
[92.08258820 59.35846329]
[85.20825195 46.02641296]
[95.54218292 35.15397263]
[109.20595551 41.34278107]
[107.84973145 56.28065491]
[110.19923401 71.09550476]
[117.56029510 69.65859985]
[122.60103607 55.53093338]
[127.64177704 41.40327072]
[132.68252563 27.27560425]
[137.72326660 13.14793873]
[142.76400757 -0.97972691]
[136.24430847 -15.12650585]
[141.55758667 -29.38216019]
[155.08456421 -35.51050949]
[160.12530518 -49.63817596]
[165.16604614 -63.76584244]
[162.51625061 -79.36357117]
[174.08056641 -88.75056458]
[179.12130737 -102.87822723]
[178.74932861 -119.82809448]
[194.93382263 -124.87773132]
[204.26641846 -110.72361755]
[193.24897766 -97.83748627]
[188.20823669 -83.70982361]
[191.21858215 -69.12259674]
[179.29370117 -58.72510147]
[174.25296021 -44.59743500]
[169.21221924 -30.46976852]
[175.80468750 -17.16281891]
[170.89392090 -2.76354885]
[156.89166260 4.06101418]
[151.85092163 18.18867874]
[146.81018066 32.31634521]
[141.76943970 46.44401169]
[136.72869873 60.57167435]
[131.68795776 74.69934082]
[136.52645874 88.89754486]
[149.14526367 97.00715637]
[161.76405334 105.11676788]
[174.38285828 113.22637939]
[187.00166321 121.33599091]
[199.62046814 129.44560242]
[211.34698486 130.42147827]
[217.37088013 138.97416687]
[231.10293579 145.00991821]
[246.84996033 143.47961426]
[255.38804626 155.68412781]
[269.12011719 161.71989441]
[282.85217285 167.75564575]
[296.58425903 173.79139709]
[310.35906982 179.72894287]
[324.17593384 185.56800842]
[337.99276733 191.40705872]
[351.80963135 197.24610901]
[365.62649536 203.08515930]
[379.44332886 208.92420959]
[393.26019287 214.76325989]
[407.07705688 220.60231018]
[420.93524170 226.34255981]
[434.83407593 231.98371887]
[448.73287964 237.62487793]
[462.63171387 243.26603699]
[476.53054810 248.90719604]
[481.68750000 248.18968201]
[486.15899658 249.39724731]
[489.32757568 251.94789124]
[490.89541626 255.09909058]
[504.53988647 261.33032227]
[512.84674072 256.89410400]
[522.12573242 256.77511597]
[530.29772949 260.87371826]
[535.58972168 268.15933228]
[536.91894531 276.92639160]
[550.28399658 283.73623657]
[563.64910889 290.54611206]
[577.01422119 297.35595703]
[590.37933350 304.16580200]
[605.33074951 299.04428101]
[619.48754883 306.06997681]
[624.45074463 321.07473755]
[617.27569580 335.15646362]
[602.21936035 339.96072388]
[588.21429443 332.63723755]
[583.56945801 317.53091431]
[570.20434570 310.72106934]
[556.83923340 303.91119385]
[543.47418213 297.10134888]
[530.10906982 290.29147339]
[509.66583252 293.15197754]
[498.30868530 274.97479248]
[484.66418457 268.74356079]
[470.88937378 262.80603027]
[456.99057007 257.16485596]
[443.09173584 251.52369690]
[429.19290161 245.88253784]
[415.29409790 240.24139404]
[407.91909790 240.63818359]
[401.23800659 234.41915894]
[387.42114258 228.58010864]
[373.60427856 222.74105835]
[359.78744507 216.90200806]
[345.97058105 211.06295776]
[332.15371704 205.22390747]
[318.33688354 199.38485718]
[304.52001953 193.54580688]
[297.14013672 193.83724976]
[290.54849243 187.52346802]
[276.81643677 181.48770142]
[263.08435059 175.45195007]
[249.35229492 169.41619873]
[234.58747864 171.37823486]
[225.06718445 158.74198914]
[211.33511353 152.70623779]
[218.96632385 165.61997986]
[220.47662354 180.54374695]
[215.58741760 194.72456360]
[205.20060730 205.54649353]
[191.23225403 211.01321411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 143]
[8 142]
[9 141]
[10 140]
[11 139]
[12 138]
[19 65]
[20 64]
[21 63]
[22 62]
[24 61]
[25 60]
[28 54]
[29 53]
[30 52]
[31 51]
[32 45]
[33 44]
[34 43]
[35 42]
[70 99]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[107 137]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[115 129]
[116 128]
[117 127]
[119 125]
[120 124]
[145 214]
[146 213]
[148 211]
[149 210]
[150 209]
[151 208]
[152 206]
[153 205]
[154 204]
[155 203]
[156 202]
[157 201]
[158 200]
[159 199]
[160 197]
[161 196]
[162 195]
[163 194]
[164 193]
[168 192]
[169 191]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
