%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAAAGCCGUCCCAGCUGGCUUUGGGGUAAUGCUGGCCUUAGUUAUGCUGAGCGAUGCAGCCCUCCUGAGGUCAUUCGGAACGCCCGGGAGAGUGGCCACUCCCGCCCCAGAGGGGGAAGGGUGGCCGGUUUCCAAGUCCGACUUGGUCAGGUGACCGCGGCGCGGCAUACUCAGCGGCAGAGACGGAAGAACAGCGCUCCCGAGGCCGCGGGAGCCUGCAGAGAGGACAGCCGGCCUGCGCCGGGAC\
) } def
/len { sequence length } bind def

/coor [
[84.17229462 164.73666382]
[84.83181763 149.75117493]
[77.33907318 149.42141724]
[72.16942596 163.50242615]
[66.99978638 177.58341980]
[61.83013916 191.66442871]
[56.66049576 205.74543762]
[51.49085236 219.82644653]
[46.32120895 233.90745544]
[41.15156555 247.98846436]
[49.08893204 261.46185303]
[46.45780563 276.87649536]
[34.50052261 286.95407104]
[18.86294937 286.93624878]
[6.92866802 276.83145142]
[4.33268118 261.41085815]
[12.30073452 247.95558167]
[27.07055664 242.81881714]
[32.24020004 228.73780823]
[37.40984344 214.65681458]
[42.57948685 200.57580566]
[47.74913406 186.49479675]
[52.91877747 172.41378784]
[58.08842087 158.33277893]
[63.25806427 144.25177002]
[53.76951218 132.63421631]
[38.93973541 134.88760376]
[24.10995865 137.14099121]
[9.28018284 139.39437866]
[-1.38610828 155.07522583]
[-19.81463814 157.90504456]
[-34.19184494 146.54374695]
[-48.96031189 149.16909790]
[-62.78687286 161.34852600]
[-79.03914642 154.69960022]
[-93.77346039 157.51031494]
[-108.50776672 160.32102966]
[-123.24207306 163.13175964]
[-137.97637939 165.94247437]
[-152.71069336 168.75318909]
[-167.44500732 171.56391907]
[-182.17930603 174.37463379]
[-196.91362000 177.18534851]
[-202.04060364 191.59580994]
[-213.61578369 201.44020081]
[-228.46563721 204.15097046]
[-242.58404541 199.09860229]
[-252.21305847 187.73428345]
[-266.94735718 190.54499817]
[-281.68167114 193.35572815]
[-296.41598511 196.16644287]
[-303.88647461 209.90419006]
[-318.45849609 215.57783508]
[-333.25158691 210.50843811]
[-341.28088379 197.08964539]
[-338.75521851 181.65736389]
[-326.86712646 171.49827576]
[-311.22979736 171.40917969]
[-299.22671509 181.43212891]
[-284.49240112 178.62141418]
[-269.75808716 175.81069946]
[-255.02377319 172.99996948]
[-250.25444031 158.88902283]
[-238.98736572 148.99412537]
[-224.18241882 146.04792786]
[-209.79612732 150.93991089]
[-199.72433472 162.45104980]
[-184.99003601 159.64031982]
[-170.25572205 156.82960510]
[-155.52140808 154.01889038]
[-140.78710938 151.20816040]
[-126.05279541 148.39744568]
[-111.31848907 145.58673096]
[-96.58417511 142.77600098]
[-81.84986877 139.96528625]
[-74.80643463 130.15040588]
[-62.57297134 127.67651367]
[-51.58565903 134.40063477]
[-36.81719208 131.77528381]
[-32.48412323 121.25312805]
[-23.52411461 114.04562378]
[-12.08212757 112.02616882]
[-0.96949750 115.80805206]
[7.02679873 124.56459808]
[21.85657501 122.31121063]
[36.68635178 120.05783081]
[51.51612854 117.80444336]
[59.14323425 85.64055634]
[81.93658447 70.06379700]
[77.12242889 55.85732651]
[72.30827332 41.65085220]
[67.49411774 27.44437599]
[62.67996597 13.23790169]
[50.92290497 2.65101933]
[54.16615295 -11.88619518]
[49.35199738 -26.09267044]
[44.53784561 -40.29914474]
[39.72369003 -54.50561905]
[34.90953445 -68.71209717]
[30.09538078 -82.91857147]
[25.28122711 -97.12504578]
[19.57731819 -104.22643280]
[20.49705696 -111.54038239]
[15.86180115 -125.80622864]
[2.06014109 -133.02786255]
[-2.43744421 -147.56149292]
[4.53233004 -160.67475891]
[-0.10292470 -174.94061279]
[-4.73817968 -189.20645142]
[-9.37343407 -203.47230530]
[-21.91579628 -214.03739929]
[-18.77135277 -230.13224792]
[-3.17483735 -235.19987488]
[8.82939243 -224.02711487]
[4.89241314 -208.10755920]
[9.52766800 -193.84170532]
[14.16292286 -179.57586670]
[18.79817772 -165.31001282]
[32.14463043 -158.79788208]
[37.04866028 -144.39631653]
[30.12764931 -130.44148254]
[34.76290512 -116.17563629]
[39.48770142 -101.93919373]
[44.30185699 -87.73271942]
[49.11600876 -73.52624512]
[53.93016434 -59.31977463]
[58.74431992 -45.11330032]
[63.55847168 -30.90682411]
[68.37262726 -16.70034981]
[79.78534698 -7.12960911]
[76.88644409 8.42374802]
[81.70059204 22.63022232]
[86.51474762 36.83669662]
[91.32890320 51.04317093]
[96.14305878 65.24964905]
[111.94046021 67.13834381]
[125.26544952 75.83142853]
[133.35894775 89.52889252]
[148.30094910 88.21112061]
[163.24295044 86.89335632]
[178.18495178 85.57558441]
[187.03797913 76.21829987]
[199.49322510 75.41555023]
[208.85296631 83.05343628]
[223.81034851 81.92353821]
[238.76773071 80.79363251]
[246.30216980 69.64745331]
[258.69659424 64.93688202]
[271.35537720 68.16923523]
[279.72122192 77.94996643]
[294.69161987 77.00811005]
[309.66201782 76.06625366]
[324.63241577 75.12438965]
[339.60281372 74.18253326]
[350.02990723 62.61042404]
[365.22543335 61.86850739]
[376.19342041 71.88044739]
[391.16381836 70.93859100]
[406.13421631 69.99673462]
[421.10461426 69.05487823]
[436.07501221 68.11302185]
[451.04541016 67.17115784]
[466.01580811 66.22930145]
[480.63372803 62.86524200]
[494.50988770 57.16855621]
[504.33764648 44.76993942]
[519.04980469 47.09398651]
[532.92596436 41.39730072]
[537.50238037 26.44436646]
[550.64776611 17.97484398]
[566.15527344 19.98777962]
[576.70269775 31.53273010]
[577.30987549 47.15851974]
[567.69012451 59.48713303]
[552.38562012 62.69736862]
[538.62268066 55.27345657]
[524.74652100 60.97014618]
[515.91125488 72.96129608]
[500.20657349 71.04471588]
[486.33041382 76.74140167]
[487.41049194 84.16322327]
[490.65072632 106.42868042]
[505.57498169 107.93411255]
[520.49926758 109.43953705]
[529.32580566 107.19101715]
[535.60119629 111.05879974]
[550.50537109 112.75164032]
[560.17755127 100.73279572]
[574.81939697 95.87274933]
[589.75872803 99.72232819]
[600.22851562 111.05313873]
[602.88781738 126.24957275]
[596.88812256 140.46249390]
[584.14385986 149.15661621]
[568.72174072 149.55766296]
[555.54284668 141.53768921]
[548.81250000 127.65581512]
[533.90832520 125.96296692]
[518.99383545 124.36380005]
[504.06958008 122.85837555]
[489.14529419 121.35295105]
[479.59701538 116.49790192]
[472.26147461 110.00063324]
[467.36779785 102.54187775]
[464.96478271 94.81949615]
[464.92474365 87.50452423]
[466.95767212 81.19970703]
[451.98727417 82.14156342]
[437.01687622 83.08341980]
[422.04647827 84.02527618]
[407.07608032 84.96713257]
[392.10565186 85.90899658]
[377.13525391 86.85085297]
[367.50860596 98.15850067]
[352.33990479 99.32693481]
[340.54467773 89.15293884]
[325.57427979 90.09479523]
[310.60388184 91.03665161]
[295.63348389 91.97850800]
[280.66305542 92.92036438]
[270.07736206 106.00339508]
[252.96672058 107.39755249]
[239.89762878 95.75101471]
[224.94024658 96.88092041]
[209.98286438 98.01081848]
[196.02752686 108.66884613]
[179.50271606 100.51759338]
[164.56071472 101.83535767]
[149.61871338 103.15312958]
[134.67671204 104.47089386]
[136.24267578 118.13288116]
[132.12341309 133.04782104]
[121.79078674 146.82783508]
[125.70340729 161.30856323]
[129.61602783 175.78927612]
[133.52865601 190.27000427]
[137.44126892 204.75073242]
[149.43696594 215.93266296]
[145.48780823 231.84919739]
[129.65637207 236.12678528]
[118.22867584 224.36499023]
[122.96054840 208.66336060]
[119.04792786 194.18263245]
[115.13530731 179.70190430]
[111.22267914 165.22117615]
[107.31005859 150.74044800]
[99.81731415 150.41069031]
[99.15779114 165.39619446]
[98.49802399 180.38166809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[26 87]
[27 86]
[28 85]
[29 84]
[32 79]
[33 78]
[35 75]
[36 74]
[37 73]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[48 62]
[49 61]
[50 60]
[51 59]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[101 123]
[103 122]
[104 121]
[107 118]
[108 117]
[109 116]
[110 115]
[138 230]
[139 229]
[140 228]
[141 227]
[144 225]
[145 224]
[146 223]
[150 220]
[151 219]
[152 218]
[153 217]
[154 216]
[157 213]
[158 212]
[159 211]
[160 210]
[161 209]
[162 208]
[163 207]
[164 180]
[165 179]
[167 177]
[168 176]
[182 201]
[183 200]
[184 199]
[186 198]
[187 197]
[233 246]
[234 245]
[235 244]
[236 243]
[237 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
