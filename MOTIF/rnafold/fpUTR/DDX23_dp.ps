%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DDX23)
} def

/sequence { (\
GGGGGGUGUUCAUCUCCGCGACCAGGAAACGGGAAAGAUGGCGACGGCUCCGCGACGUUGAGGCCGCGUUGGGCGGUUCAGACUCAGGGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.010698736 ubox
1 50 0.009054138 ubox
1 51 0.228177905 ubox
1 85 0.006405723 ubox
2 16 0.010766518 ubox
2 17 0.024022469 ubox
2 23 0.004360545 ubox
2 49 0.009574780 ubox
2 50 0.223321940 ubox
2 51 0.957383694 ubox
3 15 0.010683126 ubox
3 16 0.024416944 ubox
3 17 0.004915936 ubox
3 22 0.004372104 ubox
3 48 0.013453370 ubox
3 49 0.217564898 ubox
3 50 0.959416403 ubox
3 51 0.168181617 ubox
4 14 0.010624867 ubox
4 15 0.024469896 ubox
4 16 0.004985058 ubox
4 48 0.212243417 ubox
4 49 0.960020915 ubox
4 50 0.168490249 ubox
4 51 0.007264038 ubox
5 13 0.010032302 ubox
5 14 0.024631174 ubox
5 15 0.005028170 ubox
5 48 0.962377973 ubox
5 49 0.165041782 ubox
5 50 0.007248491 ubox
6 13 0.023860662 ubox
6 14 0.005061061 ubox
6 19 0.004719419 ubox
6 45 0.192191043 ubox
6 48 0.165264940 ubox
6 49 0.003626932 ubox
7 12 0.022770750 ubox
7 18 0.004718067 ubox
7 43 0.082381028 ubox
7 44 0.185179025 ubox
7 46 0.965528948 ubox
7 47 0.124333111 ubox
8 17 0.004705433 ubox
8 42 0.114754226 ubox
8 45 0.975758519 ubox
9 41 0.081796446 ubox
9 44 0.958172083 ubox
10 38 0.005839541 ubox
10 40 0.015297490 ubox
10 41 0.614103022 ubox
10 43 0.714637852 ubox
10 44 0.024267877 ubox
11 37 0.006749033 ubox
11 40 0.994254025 ubox
11 43 0.026310139 ubox
12 39 0.998647192 ubox
13 34 0.012100867 ubox
13 38 0.998834228 ubox
13 41 0.019640631 ubox
13 44 0.003340940 ubox
14 33 0.013370450 ubox
14 37 0.996781056 ubox
14 40 0.019976385 ubox
14 41 0.004637881 ubox
14 43 0.004011839 ubox
15 27 0.089787766 ubox
15 32 0.004098101 ubox
15 33 0.260969199 ubox
15 34 0.641588533 ubox
15 36 0.679578553 ubox
15 38 0.011057983 ubox
15 40 0.003944512 ubox
16 20 0.004498744 ubox
16 26 0.114438273 ubox
16 31 0.004254580 ubox
16 32 0.504325219 ubox
16 33 0.837699922 ubox
16 37 0.011226338 ubox
16 41 0.005135333 ubox
16 47 0.009158118 ubox
17 25 0.114452095 ubox
17 31 0.506551144 ubox
17 32 0.836907154 ubox
17 40 0.005140177 ubox
17 46 0.009531015 ubox
17 54 0.004749344 ubox
18 30 0.501491319 ubox
18 39 0.004614443 ubox
18 42 0.003434715 ubox
18 45 0.010952615 ubox
18 53 0.015162681 ubox
19 31 0.779645493 ubox
19 41 0.003408083 ubox
19 43 0.013238066 ubox
19 52 0.015175472 ubox
20 30 0.771854360 ubox
20 42 0.013354325 ubox
20 51 0.013367134 ubox
21 90 0.013624814 ubox
22 32 0.120447859 ubox
22 33 0.050066826 ubox
22 41 0.013706226 ubox
22 89 0.014081438 ubox
23 31 0.121048265 ubox
23 32 0.050124983 ubox
23 40 0.013726688 ubox
23 88 0.014075783 ubox
24 39 0.013422951 ubox
25 51 0.014372814 ubox
26 50 0.014760422 ubox
26 85 0.012693014 ubox
27 49 0.014718942 ubox
27 84 0.012116384 ubox
30 46 0.014744353 ubox
30 52 0.009128948 ubox
30 54 0.010263522 ubox
31 45 0.014720938 ubox
31 51 0.009279745 ubox
31 53 0.010437151 ubox
32 50 0.009246098 ubox
32 51 0.011074382 ubox
32 79 0.003401251 ubox
33 49 0.005136247 ubox
33 50 0.011127818 ubox
33 78 0.003371041 ubox
34 49 0.009227632 ubox
34 77 0.003315376 ubox
37 48 0.003978945 ubox
37 50 0.003191722 ubox
39 46 0.005938270 ubox
39 71 0.003542746 ubox
40 45 0.006577680 ubox
40 49 0.015333086 ubox
40 70 0.003873817 ubox
41 48 0.018911973 ubox
41 53 0.005014652 ubox
41 69 0.004047815 ubox
42 47 0.018975271 ubox
42 52 0.005027336 ubox
42 68 0.004056865 ubox
43 51 0.004931805 ubox
43 67 0.004055939 ubox
45 66 0.004060821 ubox
46 65 0.004065445 ubox
47 64 0.004065373 ubox
47 90 0.007860294 ubox
48 63 0.003745531 ubox
48 89 0.008166600 ubox
49 62 0.003246220 ubox
49 88 0.004763971 ubox
49 89 0.005837802 ubox
50 87 0.004724453 ubox
50 88 0.012723670 ubox
50 89 0.010525668 ubox
51 87 0.013175129 ubox
51 88 0.012883922 ubox
51 91 0.007980536 ubox
52 56 0.004780889 ubox
52 58 0.004607700 ubox
52 90 0.058148538 ubox
53 57 0.005008970 ubox
53 89 0.059594956 ubox
53 91 0.193501738 ubox
54 85 0.187265657 ubox
54 90 0.119808871 ubox
55 84 0.186093419 ubox
55 90 0.942975205 ubox
56 89 0.974751800 ubox
56 91 0.008524801 ubox
57 83 0.206843183 ubox
57 90 0.007749842 ubox
58 81 0.078115036 ubox
58 82 0.199876876 ubox
58 87 0.963970639 ubox
58 88 0.004629038 ubox
59 80 0.099916010 ubox
59 81 0.192091959 ubox
59 86 0.974961059 ubox
60 79 0.109202897 ubox
60 85 0.975977822 ubox
61 78 0.103670656 ubox
61 84 0.975718630 ubox
62 77 0.073072689 ubox
62 78 0.251970675 ubox
62 79 0.055976659 ubox
62 83 0.958196188 ubox
62 84 0.003543509 ubox
63 74 0.019811873 ubox
63 77 0.991248610 ubox
63 78 0.072216849 ubox
63 83 0.006948139 ubox
64 73 0.019819264 ubox
64 76 0.999729656 ubox
65 72 0.019810725 ubox
65 75 0.999763729 ubox
66 74 0.999764176 ubox
67 73 0.999632470 ubox
68 74 0.003235215 ubox
82 90 0.019156955 ubox
83 89 0.019670404 ubox
84 88 0.017766314 ubox
85 91 0.006041624 ubox
86 90 0.005369710 ubox
2 51 0.9500000 lbox
3 50 0.9500000 lbox
4 49 0.9500000 lbox
5 48 0.9500000 lbox
7 46 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
55 90 0.9500000 lbox
56 89 0.9500000 lbox
58 87 0.9500000 lbox
59 86 0.9500000 lbox
60 85 0.9500000 lbox
61 84 0.9500000 lbox
62 83 0.9500000 lbox
63 77 0.9500000 lbox
64 76 0.9500000 lbox
65 75 0.9500000 lbox
66 74 0.9500000 lbox
67 73 0.9500000 lbox
showpage
end
%%EOF
