%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf189)
} def

/sequence { (\
UGAACUAAACAGAGGAGCCUGUCAGUCUCCUCAGACUGUAUCAAGCAAAUCUAUAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.020375856 ubox
1 11 0.074034327 ubox
1 33 0.004054804 ubox
1 40 0.004740053 ubox
1 43 0.241355806 ubox
1 47 0.072581301 ubox
1 53 0.007125750 ubox
1 55 0.007040997 ubox
2 6 0.018555121 ubox
2 10 0.085864014 ubox
2 27 0.003541667 ubox
2 29 0.003432066 ubox
2 32 0.004068815 ubox
2 39 0.004574537 ubox
2 42 0.267884462 ubox
2 46 0.080439948 ubox
2 51 0.030096070 ubox
2 52 0.005532298 ubox
2 54 0.006661629 ubox
3 28 0.003413083 ubox
3 31 0.003571628 ubox
3 41 0.263753101 ubox
3 50 0.028378781 ubox
4 26 0.005884524 ubox
4 39 0.214370336 ubox
5 12 0.035205322 ubox
5 14 0.045617507 ubox
5 15 0.017987975 ubox
5 25 0.006513459 ubox
5 34 0.043159433 ubox
5 38 0.216920242 ubox
5 45 0.031376148 ubox
5 56 0.628700886 ubox
6 11 0.034952432 ubox
6 13 0.044469735 ubox
6 14 0.017715961 ubox
6 24 0.006334445 ubox
6 33 0.043204448 ubox
6 38 0.053473997 ubox
6 40 0.028608610 ubox
6 44 0.030581753 ubox
6 53 0.014531426 ubox
6 55 0.631792329 ubox
7 37 0.065786697 ubox
7 39 0.027588556 ubox
7 52 0.010930913 ubox
7 54 0.622563931 ubox
9 22 0.095612342 ubox
9 39 0.152303146 ubox
10 21 0.101446865 ubox
10 38 0.157766717 ubox
11 20 0.101485741 ubox
11 37 0.156841969 ubox
11 52 0.736903889 ubox
12 19 0.101238219 ubox
12 32 0.609652041 ubox
12 36 0.097358655 ubox
12 42 0.003349739 ubox
12 51 0.754750940 ubox
13 20 0.005000517 ubox
13 31 0.618037327 ubox
13 41 0.003301589 ubox
13 50 0.751951540 ubox
13 52 0.094001725 ubox
14 19 0.005387955 ubox
14 30 0.618381890 ubox
14 51 0.096757053 ubox
14 52 0.102525047 ubox
15 29 0.618385504 ubox
15 42 0.007229051 ubox
15 50 0.093757103 ubox
15 51 0.106916156 ubox
16 28 0.618215453 ubox
16 41 0.007197044 ubox
16 50 0.106211585 ubox
16 52 0.003635485 ubox
17 26 0.045116085 ubox
17 27 0.615334469 ubox
17 46 0.774497991 ubox
17 51 0.003390110 ubox
18 25 0.313550459 ubox
18 45 0.772397199 ubox
19 25 0.516468889 ubox
19 45 0.073322697 ubox
19 56 0.007086871 ubox
20 24 0.466788479 ubox
20 40 0.042268710 ubox
20 43 0.734012474 ubox
20 44 0.086381305 ubox
20 47 0.026562469 ubox
20 55 0.007095045 ubox
21 39 0.045925054 ubox
21 41 0.163429618 ubox
21 42 0.736216408 ubox
21 46 0.027637218 ubox
21 54 0.007013498 ubox
22 38 0.004093510 ubox
22 40 0.398885737 ubox
22 45 0.027471782 ubox
22 53 0.006910840 ubox
23 38 0.783669464 ubox
24 37 0.785478440 ubox
25 36 0.785796327 ubox
25 58 0.005634679 ubox
26 35 0.785700140 ubox
26 57 0.005720794 ubox
27 34 0.785480375 ubox
27 56 0.005769281 ubox
28 33 0.717832270 ubox
28 35 0.003358000 ubox
28 55 0.005586399 ubox
29 34 0.004405057 ubox
33 52 0.304635471 ubox
34 42 0.050919704 ubox
34 51 0.319924119 ubox
35 41 0.048147483 ubox
35 50 0.313798899 ubox
36 45 0.134863894 ubox
36 56 0.308035865 ubox
37 43 0.022784437 ubox
37 44 0.134243978 ubox
37 47 0.345872945 ubox
37 53 0.004086416 ubox
37 55 0.309763767 ubox
38 42 0.025896241 ubox
38 46 0.361335796 ubox
38 50 0.005440616 ubox
38 52 0.004249563 ubox
38 54 0.309841074 ubox
38 58 0.010460806 ubox
39 45 0.356410634 ubox
39 49 0.006367038 ubox
39 53 0.309074619 ubox
39 55 0.012206210 ubox
39 57 0.010402997 ubox
40 50 0.019924165 ubox
40 52 0.294289346 ubox
40 54 0.013284460 ubox
41 49 0.029018704 ubox
41 53 0.012581871 ubox
41 57 0.028333357 ubox
42 56 0.030995674 ubox
44 52 0.059073057 ubox
45 51 0.065275744 ubox
50 57 0.080530962 ubox
51 56 0.087793280 ubox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
showpage
end
%%EOF
