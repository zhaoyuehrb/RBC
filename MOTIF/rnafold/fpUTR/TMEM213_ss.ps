%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUUGCUUUCCAGCUCCUGCAGGUGGGAGUCGACUCACCUGCAGCAGGCACUCGGCACAACUCCGCAGGACCGGCUCACCUGCACCGGGCACUCAGCACAGCCUCCAGC\
) } def
/len { sequence length } bind def

/coor [
[71.12088013 106.46457672]
[70.44667816 98.45225525]
[56.15505219 93.89710236]
[41.86342621 89.34194946]
[27.57179832 84.78679657]
[13.15803909 80.63426208]
[-1.36651349 76.88761902]
[-15.89106655 73.14096832]
[-30.41561890 69.39432526]
[-39.74361420 79.92228699]
[-52.64840317 85.34916687]
[-66.56426239 84.65840912]
[-78.75136566 78.04360199]
[-86.83517456 66.85903168]
[-89.26905060 53.34277725]
[-103.68281555 49.19024658]
[-118.09657288 45.03771210]
[-135.78083801 49.92533875]
[-147.53324890 36.97589111]
[-162.05780029 33.22924423]
[-176.58235168 29.48259544]
[-191.10690308 25.73594856]
[-205.63145447 21.98930168]
[-220.15600586 18.24265480]
[-234.68057251 14.49600697]
[-249.20512390 10.74936008]
[-263.72967529 7.00271273]
[-278.25421143 3.25606561]
[-292.77877808 -0.49058151]
[-306.26214600 7.75405169]
[-321.60638428 3.96852875]
[-329.70800781 -9.60126591]
[-325.76046753 -24.90461540]
[-312.10577393 -32.86231232]
[-296.84500122 -28.75319672]
[-289.03213501 -15.01513481]
[-274.50756836 -11.26848698]
[-259.98303223 -7.52184010]
[-245.45846558 -3.77519274]
[-230.93391418 -0.02854566]
[-216.40936279 3.71810150]
[-201.88481140 7.46474886]
[-187.36026001 11.21139622]
[-172.83570862 14.95804310]
[-158.31115723 18.70469093]
[-143.78660583 22.45133781]
[-133.12092590 16.55611992]
[-120.92150879 19.66462708]
[-113.94403839 30.62395287]
[-99.53028107 34.77648544]
[-85.11651611 38.92901993]
[-73.81999969 27.46781731]
[-58.20601654 23.20298767]
[-42.47113419 27.37798500]
[-30.89333153 38.95473480]
[-26.66897202 54.86977005]
[-12.14441872 58.61641693]
[2.38013363 62.36306381]
[16.90468597 66.10971069]
[21.51172256 64.41829681]
[27.23383522 65.70761108]
[32.12694931 70.49517059]
[46.41857529 75.05032349]
[60.71020508 79.60547638]
[75.00183105 84.16062164]
[97.92643738 70.47891235]
[122.53852081 80.82164764]
[136.05305481 74.31339264]
[149.56759644 67.80513763]
[163.08212280 61.29687881]
[176.59664917 54.78862381]
[178.37814331 39.46446609]
[188.17935181 27.55061340]
[202.87275696 22.84873772]
[217.76972961 26.85918808]
[228.11671448 38.30224228]
[230.61201477 53.52646637]
[224.45939636 67.67386627]
[211.62214661 76.23005676]
[196.19656372 76.46478271]
[183.10490417 68.30315399]
[169.59037781 74.81140900]
[156.07585144 81.31967163]
[142.56130981 87.82792664]
[129.04678345 94.33618164]
[129.58839417 99.43333435]
[129.24234009 104.54748535]
[128.01899719 109.52521515]
[125.95507812 114.21717834]
[136.85498047 124.52213287]
[147.75488281 134.82708740]
[158.65480042 145.13203430]
[173.34988403 140.66551208]
[188.30583191 144.16056824]
[199.49954224 154.67704773]
[203.91998291 169.38606262]
[200.37806702 184.33097839]
[189.82655334 195.49168396]
[175.10374451 199.86598206]
[160.17001343 196.27725220]
[149.04244995 185.69079590]
[144.71430969 170.95436096]
[148.34983826 156.03195190]
[137.44993591 145.72698975]
[126.55002594 135.42204285]
[115.65012360 125.11708069]
[108.31142426 128.40272522]
[100.35916901 129.59164429]
[92.38039398 128.59608459]
[84.96411133 125.48953247]
[78.65778351 120.50131989]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 65]
[3 64]
[4 63]
[5 62]
[6 59]
[7 58]
[8 57]
[9 56]
[15 51]
[16 50]
[17 49]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[89 106]
[90 105]
[91 104]
[92 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
