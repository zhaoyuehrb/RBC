%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAUUAUAAAUCUAGAGACUCCAGGAUUUUAACGUUCUGCUGGACUGAGCUGGUUGCCUCAUGUUAUUAUGCAGGCAACUCACUUUAUCCCAAUUUCUUGAUACUUUUCCUUCUGGAGGUCCUAUUUCUCUAACAUCUUCCAGAAAAGUCUUAAAGCUGCCUUAACCUUUUUUCCAGUCCACCUCUUAAAUUUUUUCCUCCUCUUCCUCUAUACUAAC\
) } def
/len { sequence length } bind def

/coor [
[119.64128113 450.35150146]
[105.33131409 455.16058350]
[90.25445557 455.92941284]
[75.52952576 452.60092163]
[62.24919891 445.42208862]
[51.39896774 434.92565918]
[43.78398895 421.89053345]
[39.96934891 407.28396606]
[40.23811722 392.18994141]
[44.57035065 377.72845459]
[52.64456558 364.97268677]
[63.86160278 354.86920166]
[77.38908386 348.16772461]
[92.22318268 345.36553955]
[93.50680542 330.42056274]
[94.79043579 315.47558594]
[96.07405853 300.53060913]
[97.35768127 285.58563232]
[90.74959564 282.03836060]
[83.65482330 295.25442505]
[70.43888092 288.15942383]
[77.53341675 274.94381714]
[70.92533112 271.39654541]
[59.17880630 280.72494507]
[47.43227768 290.05334473]
[35.68575287 299.38174438]
[23.93922424 308.71014404]
[12.19269848 318.03854370]
[10.64037132 333.76641846]
[-1.63139009 343.72531128]
[-17.34196663 342.00677490]
[-27.17055321 329.63040161]
[-25.28602219 313.93887329]
[-12.80643272 304.24169922]
[2.86429501 306.29202271]
[14.61082172 296.96362305]
[26.35734749 287.63522339]
[38.10387421 278.30682373]
[49.85040283 268.97842407]
[61.59692764 259.64999390]
[82.75573730 255.99293518]
[98.93225861 263.57025146]
[99.78858948 248.59472656]
[100.64492035 233.61918640]
[101.50125122 218.64364624]
[102.35758209 203.66812134]
[103.21391296 188.69258118]
[104.07025146 173.71704102]
[103.21391296 158.74150085]
[100.65608215 143.96119690]
[98.09825134 129.18089294]
[95.54042053 114.40058136]
[85.88038635 102.92523193]
[71.75271606 97.88449097]
[57.62505341 92.84375000]
[43.49738693 87.80300903]
[29.36972237 82.76226807]
[15.24205589 77.72152710]
[1.11439049 72.68078613]
[-13.01327515 67.64004517]
[-27.17657089 62.70030212]
[-41.37477493 57.86180878]
[-55.57297897 53.02331924]
[-69.77118683 48.18482971]
[-85.74533081 51.89408112]
[-96.74553680 39.73153687]
[-91.45572662 24.20897293]
[-75.31761169 21.29467583]
[-64.93269348 33.98662567]
[-50.73448944 38.82511520]
[-36.53628540 43.66360474]
[-22.33807945 48.50209808]
[-14.99778366 47.68491364]
[-7.97253418 53.51237869]
[6.15513134 58.55311966]
[20.28279686 63.59386063]
[34.41046143 68.63459778]
[48.53812790 73.67533875]
[62.66579437 78.71607971]
[76.79345703 83.75682068]
[90.92112732 88.79756165]
[80.93959045 77.60073090]
[70.95806122 66.40390778]
[56.99021149 60.93588257]
[45.93271637 50.80021286]
[39.27254868 37.35989380]
[37.90533447 22.42233467]
[42.01493454 7.99627495]
[51.04870605 -3.97832179]
[63.79182434 -11.89115906]
[78.53063965 -14.67814827]
[93.28313446 -11.96450615]
[106.06545258 -4.11515284]
[115.15867615 7.81436062]
[119.33998108 22.21979904]
[118.04708862 37.16397476]
[111.45364380 50.63753510]
[111.67085266 65.63596344]
[111.88806152 80.63439178]
[118.88807678 67.36789703]
[125.88808441 54.10140228]
[132.88809204 40.83490753]
[132.48506165 25.01883698]
[145.26757812 17.37316322]
[152.26759338 4.10666990]
[159.26760864 -9.15982437]
[166.26760864 -22.42631721]
[173.26762390 -35.69281006]
[172.95022583 -40.00824356]
[173.92121887 -43.81891251]
[175.86477661 -46.78256226]
[178.38650513 -48.69422913]
[181.06488037 -49.49995422]
[188.81083679 -62.34519196]
[196.55680847 -75.19042969]
[204.30276489 -88.03565979]
[212.04872131 -100.88089752]
[219.79469299 -113.72613525]
[227.54064941 -126.57136536]
[235.28660583 -139.41661072]
[225.54505920 -151.00888062]
[220.09767151 -165.13703918]
[219.53532410 -180.26853943]
[223.91903687 -194.76205444]
[232.77328491 -207.04541016]
[245.13761902 -215.78622437]
[259.67086792 -220.03634644]
[274.79656982 -219.33476257]
[288.87396240 -213.75756836]
[300.37609863 -203.90972900]
[308.05526733 -190.85948181]
[311.07852173 -176.02241516]
[309.11788940 -161.00793457]
[302.38604736 -147.44470215]
[291.61325073 -136.80395508]
[277.96801758 -130.23992920]
[262.93051147 -128.46463013]
[248.13185120 -131.67063904]
[240.38587952 -118.82540894]
[232.63992310 -105.98017120]
[224.89396667 -93.13493347]
[217.14799500 -80.28969574]
[209.40203857 -67.44446564]
[201.65608215 -54.59922791]
[193.91011047 -41.75399399]
[186.53411865 -28.69280243]
[179.53410339 -15.42630768]
[172.53410339 -2.15981412]
[165.53408813 11.10667992]
[158.53407288 24.37317467]
[159.43780518 39.24033737]
[146.15458679 47.83491898]
[139.15457153 61.10141373]
[132.15457153 74.36790466]
[125.15455627 87.63439941]
[110.32072449 111.84275055]
[112.87855530 126.62306213]
[115.43639374 141.40336609]
[117.99422455 156.18367004]
[122.81727600 141.98022461]
[132.15551758 130.24150085]
[144.91067505 122.34810638]
[159.58267212 119.22835541]
[174.44592285 121.24914551]
[187.75241089 128.17282104]
[197.93717957 139.18511963]
[203.80241394 152.99087524]
[204.65832520 167.96643066]
[200.40425110 182.35054016]
[191.54048157 194.45152283]
[179.10949707 202.84619141]
[164.57325745 206.54727173]
[149.64137268 205.11949158]
[136.06993103 198.73075867]
[125.45504761 188.13243103]
[119.04578400 174.57337952]
[118.18945312 189.54890442]
[117.33312225 204.52444458]
[116.47679138 219.49998474]
[115.62045288 234.47552490]
[114.76412201 249.45106506]
[113.90779114 264.42660522]
[119.15579224 250.37460327]
[127.44971466 237.87617493]
[138.35859680 227.58071899]
[151.31561279 220.02323914]
[165.64750671 215.59638977]
[180.60957336 214.53019714]
[195.42436218 216.88008118]
[209.32209778 222.52394104]
[221.58062744 231.16850281]
[231.56298828 242.36457825]
[238.75050354 255.53042603]
[242.76969910 269.98193359]
[243.41172791 284.96820068]
[240.64321899 299.71047974]
[234.60804749 313.44281006]
[225.61978149 325.45159912]
[214.14549255 335.11291504]
[200.78137207 341.92468262]
[186.22183228 345.53298950]
[171.22340393 345.75033569]
[156.56541443 342.56542969]
[143.00952148 336.14376831]
[131.26010132 326.81903076]
[121.92763519 315.07571411]
[115.49707794 301.52404785]
[112.30265808 286.86926270]
[111.01903534 301.81423950]
[109.73541260 316.75921631]
[108.45178223 331.70419312]
[107.16815948 346.64916992]
[121.30715942 351.93984985]
[133.49377441 360.84991455]
[142.82365417 372.71817017]
[148.60446167 386.66394043]
[150.40724182 401.65237427]
[148.09820557 416.57116699]
[141.84869385 430.31329346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 212]
[15 211]
[16 210]
[17 209]
[18 208]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 159]
[50 158]
[51 157]
[52 156]
[53 81]
[54 80]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 72]
[62 71]
[63 70]
[64 69]
[99 155]
[100 154]
[101 153]
[102 152]
[104 150]
[105 149]
[106 148]
[107 147]
[108 146]
[113 145]
[114 144]
[115 143]
[116 142]
[117 141]
[118 140]
[119 139]
[120 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
