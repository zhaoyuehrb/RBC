%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCGCCGCCGCCGCCGCCGCGCCGCGGCUUGAGGGCGGGAGGCUGGGGGAGGGUAGCGGAGCCGGCGCCGCCGCCAUGUUGGGUCUGAAGCGGCUGCUGUAGGCGCCGACGGAGCGAGCGGGCGUGCGGAGCGGGCGACAGUGGCGUGGGAUCUGCCUCUCUGCGAGCAGCUGGGAGCGGCGGCGGCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-23.17067909 740.37628174]
[-23.88802910 725.39343262]
[-24.60537720 710.41058350]
[-25.32272720 695.42773438]
[-26.04007530 680.44494629]
[-26.75742531 665.46209717]
[-27.47477341 650.47924805]
[-28.19212341 635.49639893]
[-28.90947151 620.51354980]
[-29.62681961 605.53076172]
[-30.34416962 590.54791260]
[-31.06151772 575.56506348]
[-31.77886772 560.58221436]
[-32.49621582 545.59936523]
[-46.22521973 539.55664062]
[-57.75848389 549.14746094]
[-69.29174805 558.73828125]
[-80.82501221 568.32910156]
[-91.96685028 578.37200928]
[-102.69954681 588.85101318]
[-113.43225098 599.32995605]
[-124.16494751 609.80895996]
[-134.89764404 620.28796387]
[-142.00679016 635.67938232]
[-158.76472473 633.10882568]
[-160.93371582 616.29418945]
[-145.37663269 609.55523682]
[-134.64393616 599.07629395]
[-123.91123199 588.59729004]
[-113.17853546 578.11828613]
[-102.44583893 567.63928223]
[-117.17218018 564.78717041]
[-124.26885986 551.57214355]
[-118.51266479 537.72052002]
[-104.14020538 533.42724609]
[-91.72968292 541.85217285]
[-90.41583252 556.79583740]
[-78.88256836 547.20501709]
[-67.34930420 537.61419678]
[-55.81604004 528.02337646]
[-47.47005844 515.55969238]
[-42.99433899 501.24295044]
[-50.11005783 488.20831299]
[-45.77499008 473.62539673]
[-32.05480194 466.25015259]
[-27.57908440 451.93344116]
[-23.10336494 437.61672974]
[-32.12559128 425.79568481]
[-32.46104050 410.75070190]
[-23.77154350 398.24685669]
[-9.21735859 393.19888306]
[-4.74163914 378.88220215]
[-0.26591954 364.56549072]
[4.20979977 350.24877930]
[8.68551922 335.93209839]
[13.16123867 321.61538696]
[11.77276421 317.03482056]
[13.25522041 311.53347778]
[18.01469803 306.91760254]
[22.94468498 292.75091553]
[27.87467194 278.58422852]
[32.80466080 264.41754150]
[37.73464966 250.25083923]
[34.61020279 235.68762207]
[46.45331192 225.19709778]
[51.38330078 211.03039551]
[48.25885391 196.46719360]
[60.10196304 185.97665405]
[65.03195190 171.80995178]
[69.96193695 157.64326477]
[74.89192963 143.47656250]
[79.82191467 129.30987549]
[84.75189972 115.14318085]
[89.68189240 100.97648621]
[91.82737732 86.13071442]
[91.11002350 71.14788055]
[90.39267731 56.16504288]
[78.97816467 45.56567001]
[78.46411133 30.36072350]
[88.63933563 19.54405212]
[87.92198944 4.56121492]
[87.20463562 -10.42162228]
[86.48728943 -25.40445900]
[85.76993561 -40.38729477]
[85.05258942 -55.37013245]
[84.21579742 -70.34677124]
[83.25962067 -85.31626892]
[82.30343628 -100.28575897]
[81.34725189 -115.25525665]
[80.39107513 -130.22474670]
[71.78981018 -143.50363159]
[78.70006561 -156.69824219]
[77.74388885 -171.66772461]
[76.78770447 -186.63722229]
[67.25404358 -199.98043823]
[74.28815460 -214.79438782]
[90.65395355 -215.83976746]
[99.51570129 -202.04116821]
[91.75720215 -187.59339905]
[92.71337891 -172.62391663]
[93.66956329 -157.65441895]
[102.20243073 -145.44624329]
[95.36056519 -131.18092346]
[96.31674957 -116.21143341]
[97.27292633 -101.24194336]
[98.22911072 -86.27244568]
[99.18529510 -71.30295563]
[102.75321198 -64.82062531]
[100.03543091 -56.08748245]
[100.75277710 -41.10464478]
[101.47012329 -26.12180901]
[102.18747711 -11.13897133]
[102.90482330 3.84386611]
[103.62216949 18.82670403]
[114.78424835 28.62178612]
[115.72518158 43.80629349]
[105.37551117 55.44769287]
[106.09286499 70.43053436]
[106.81021118 85.41336823]
[113.35466003 89.07672119]
[116.27826691 74.36439514]
[131.17398071 72.59873962]
[137.45608521 86.21987152]
[126.44356537 96.40343475]
[132.98800659 100.06678772]
[146.13491821 92.84467316]
[154.50491333 79.41881561]
[169.38516235 80.07239532]
[182.53207397 72.85028076]
[195.67897034 65.62817383]
[206.65019226 52.70266342]
[222.10769653 59.66698074]
[219.69461060 76.44831848]
[202.90109253 78.77507782]
[189.75418091 85.99718475]
[176.60728455 93.21929932]
[169.17764282 106.12858582]
[153.35702515 105.99157715]
[140.21012878 113.21369171]
[131.71821594 115.42584991]
[123.47931671 115.64675140]
[115.86655426 114.00000763]
[109.22235870 110.67217255]
[103.84858704 105.90647125]
[98.91859436 120.07316589]
[93.98860931 134.23986816]
[89.05862427 148.40655518]
[84.12863159 162.57325745]
[79.19864655 176.73994446]
[74.26866150 190.90664673]
[77.04048157 206.48315430]
[65.54999542 215.96038818]
[60.62000656 230.12707520]
[63.39182663 245.70358276]
[51.90134048 255.18083191]
[46.97135544 269.34753418]
[42.04136658 283.51422119]
[37.11137772 297.68090820]
[32.18139267 311.84759521]
[27.47793961 326.09112549]
[23.00222015 340.40780640]
[18.52650070 354.72451782]
[14.05078125 369.04122925]
[9.57506180 383.35791016]
[5.09934282 397.67462158]
[14.18676090 410.11346436]
[14.20706844 425.34017944]
[5.36205721 437.51516724]
[-8.78666306 442.09246826]
[-13.26238251 456.40914917]
[-17.73810196 470.72586060]
[-10.66174698 484.60256958]
[-15.40470982 499.05798340]
[-28.67763710 505.71868896]
[-33.15335846 520.03540039]
[-28.26653481 522.15087891]
[-23.78106880 525.86340332]
[-20.19448280 531.07617188]
[-17.97393227 537.54351807]
[-17.51338005 544.88201904]
[-16.79603004 559.86486816]
[-16.07868195 574.84771729]
[-15.36133194 589.83056641]
[-14.64398384 604.81335449]
[-13.92663479 619.79620361]
[-13.20928574 634.77905273]
[-12.49193668 649.76190186]
[-11.77458763 664.74475098]
[-11.05723858 679.72753906]
[-10.33988953 694.71038818]
[-9.62254047 709.69323730]
[-8.90519142 724.67608643]
[-8.18784237 739.65893555]
[1.13182878 753.15246582]
[-6.13762045 767.85235596]
[-22.51800346 768.63659668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[15 40]
[16 39]
[17 38]
[18 37]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[41 175]
[42 174]
[45 171]
[46 170]
[47 169]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[65 153]
[66 152]
[68 150]
[69 149]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
[75 119]
[76 118]
[77 117]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
[92 101]
[93 100]
[94 99]
[125 139]
[126 138]
[128 136]
[129 135]
[130 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
