%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FCRL6)
} def

/sequence { (\
CACACACCCACAGGACCUGCAGCUGAACGAAGUUGAAGACAACUCAGGAGAUCUGUUGGAAAGAGAACGAUAGAGGAAAAUAUAUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.007645917 ubox
1 58 0.006572954 ubox
1 86 0.059514277 ubox
2 18 0.007498932 ubox
2 57 0.006492836 ubox
2 85 0.052233050 ubox
3 19 0.018864256 ubox
3 58 0.013208391 ubox
3 86 0.058616256 ubox
4 18 0.018227452 ubox
4 57 0.013146919 ubox
4 85 0.051249907 ubox
5 19 0.014285647 ubox
5 25 0.005368290 ubox
5 58 0.025420600 ubox
5 86 0.060595858 ubox
6 18 0.014104878 ubox
6 24 0.005199736 ubox
6 57 0.025198412 ubox
6 85 0.053505254 ubox
7 14 0.207043270 ubox
7 48 0.112904898 ubox
7 59 0.509530755 ubox
7 76 0.100222017 ubox
8 13 0.207242139 ubox
8 14 0.150597047 ubox
8 47 0.112670766 ubox
8 48 0.323259624 ubox
8 58 0.510969006 ubox
8 59 0.661029441 ubox
8 75 0.099398141 ubox
8 76 0.203289039 ubox
9 13 0.150141472 ubox
9 19 0.005560383 ubox
9 25 0.004267697 ubox
9 47 0.324033615 ubox
9 58 0.662871875 ubox
9 75 0.203662729 ubox
9 86 0.028553531 ubox
10 18 0.005304757 ubox
10 24 0.004132883 ubox
10 56 0.686883411 ubox
10 57 0.471451588 ubox
10 85 0.024915484 ubox
11 19 0.093530029 ubox
11 25 0.060508395 ubox
11 55 0.834636674 ubox
11 86 0.021145325 ubox
12 18 0.093722220 ubox
12 24 0.060744996 ubox
12 44 0.320600659 ubox
12 54 0.834215619 ubox
12 85 0.019123004 ubox
13 17 0.091714178 ubox
13 23 0.060683253 ubox
13 24 0.004825514 ubox
13 43 0.326632568 ubox
13 44 0.038330824 ubox
13 45 0.021160202 ubox
13 53 0.833042837 ubox
13 54 0.088696683 ubox
14 23 0.005919852 ubox
14 43 0.041542897 ubox
14 44 0.017005673 ubox
14 45 0.018238135 ubox
14 52 0.806543746 ubox
14 53 0.099597131 ubox
15 44 0.018117653 ubox
15 52 0.108085817 ubox
16 48 0.912005662 ubox
16 59 0.019419980 ubox
16 76 0.047423244 ubox
17 38 0.347967437 ubox
17 47 0.913087896 ubox
17 48 0.006605796 ubox
17 50 0.020533302 ubox
17 58 0.019493717 ubox
17 75 0.047467508 ubox
17 76 0.006382276 ubox
18 37 0.310104355 ubox
18 41 0.020349919 ubox
18 46 0.912328200 ubox
18 47 0.004950440 ubox
18 49 0.017745280 ubox
18 74 0.039657989 ubox
18 75 0.005905870 ubox
19 28 0.007304049 ubox
19 40 0.023506826 ubox
19 45 0.909536454 ubox
19 56 0.019185084 ubox
20 35 0.938422068 ubox
20 55 0.019811138 ubox
20 86 0.004972578 ubox
21 34 0.939605732 ubox
21 44 0.124083444 ubox
21 54 0.019799120 ubox
21 85 0.004498413 ubox
22 33 0.940588568 ubox
22 43 0.122234493 ubox
22 53 0.019704415 ubox
23 32 0.941344421 ubox
23 38 0.042826417 ubox
23 47 0.068569474 ubox
23 48 0.006634569 ubox
23 50 0.021022515 ubox
24 31 0.935540249 ubox
24 37 0.042355298 ubox
24 41 0.106527301 ubox
24 46 0.069047675 ubox
24 47 0.005858110 ubox
24 49 0.021003388 ubox
25 34 0.004847580 ubox
25 40 0.107173959 ubox
25 45 0.069047887 ubox
26 33 0.005549902 ubox
26 34 0.051871259 ubox
26 44 0.054448696 ubox
27 33 0.053521675 ubox
28 32 0.053133139 ubox
28 35 0.050432184 ubox
29 34 0.038832428 ubox
29 45 0.062855914 ubox
30 44 0.046824667 ubox
31 44 0.301330832 ubox
32 40 0.011908000 ubox
32 43 0.313566165 ubox
33 39 0.012581693 ubox
33 42 0.314091872 ubox
33 47 0.004489994 ubox
34 38 0.011377958 ubox
34 41 0.313977350 ubox
34 46 0.008113553 ubox
35 40 0.312305163 ubox
35 45 0.010490482 ubox
36 44 0.016318309 ubox
37 44 0.146043751 ubox
38 43 0.153610465 ubox
38 45 0.064016365 ubox
39 44 0.059119063 ubox
39 56 0.003951787 ubox
40 55 0.004079766 ubox
40 58 0.011592556 ubox
40 86 0.056900159 ubox
41 54 0.004035221 ubox
41 57 0.011597185 ubox
41 85 0.054792752 ubox
42 56 0.011281492 ubox
43 50 0.039637697 ubox
43 55 0.010353973 ubox
43 75 0.016549270 ubox
43 76 0.012524207 ubox
44 49 0.036915566 ubox
44 51 0.071611222 ubox
44 74 0.015902438 ubox
44 75 0.012185071 ubox
44 76 0.008161754 ubox
44 77 0.009807885 ubox
44 87 0.031847993 ubox
45 50 0.077598976 ubox
45 55 0.007619034 ubox
45 73 0.015455834 ubox
45 75 0.010350330 ubox
45 76 0.010259869 ubox
45 86 0.039073189 ubox
46 54 0.009320955 ubox
46 85 0.038822126 ubox
47 53 0.009638558 ubox
47 54 0.003293806 ubox
48 52 0.006383353 ubox
48 53 0.003614842 ubox
51 71 0.018601475 ubox
51 81 0.010272618 ubox
51 83 0.006437298 ubox
51 85 0.005844328 ubox
52 64 0.007814368 ubox
52 66 0.015120041 ubox
52 70 0.019279931 ubox
52 74 0.506283498 ubox
52 76 0.005021830 ubox
52 77 0.009292979 ubox
52 80 0.004887065 ubox
53 63 0.008107612 ubox
53 65 0.015714132 ubox
53 69 0.019095790 ubox
53 73 0.542055638 ubox
53 75 0.006159083 ubox
53 76 0.009260146 ubox
54 62 0.008078854 ubox
54 64 0.015649590 ubox
54 69 0.010885486 ubox
54 72 0.542075981 ubox
54 74 0.005205910 ubox
54 75 0.007954812 ubox
55 68 0.024076556 ubox
55 71 0.542171194 ubox
56 62 0.013627563 ubox
56 63 0.003416594 ubox
56 67 0.024168910 ubox
56 70 0.542334811 ubox
57 61 0.011432830 ubox
57 62 0.004816890 ubox
57 64 0.004299673 ubox
57 66 0.024393346 ubox
57 69 0.542075898 ubox
58 68 0.542054044 ubox
68 86 0.194940938 ubox
69 85 0.170575130 ubox
70 81 0.053407240 ubox
70 83 0.323598015 ubox
70 85 0.135912582 ubox
71 80 0.054883491 ubox
71 82 0.332606614 ubox
71 84 0.143337955 ubox
71 86 0.016920420 ubox
72 81 0.333289992 ubox
72 83 0.142544631 ubox
72 85 0.020036224 ubox
7 59 0.9500000 lbox
8 58 0.9500000 lbox
10 56 0.9500000 lbox
11 55 0.9500000 lbox
12 54 0.9500000 lbox
13 53 0.9500000 lbox
14 52 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
showpage
end
%%EOF
