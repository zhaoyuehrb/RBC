%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACGGGUGAAGAAGGGGAGGCGGCAGGGAAGGGGGUGGGGGCCUGGCGGGGGCAUCCGGCGGAGCUGGGGUCCCCGGGCUCCGUCCGGAGGAAGCGACGCUGCGCUCGCUGGGCAGUCGGAGGGGACGGGACGCACCGGAGGGCAGGCGGACUCGCCCUGUCGGUGACUGCGCCGUCCGGGCCCGUCCUGCCUGGCCGCAGGUGCCCUGGAUGAGGCCGCCCCGCGCGCCCCAAACGAUUUUAUAAUCA\
) } def
/len { sequence length } bind def

/coor [
[135.31790161 636.64447021]
[129.62025452 625.78527832]
[127.51421356 613.67956543]
[129.21647644 601.48583984]
[134.57856750 590.37579346]
[143.09960938 581.42150879]
[153.97312927 575.49212646]
[151.74626160 560.65838623]
[149.51939392 545.82458496]
[147.29252625 530.99078369]
[145.06567383 516.15704346]
[133.61032104 512.23095703]
[124.85202026 503.76440430]
[120.48890686 492.31390381]
[121.40289307 480.02212524]
[127.48220825 469.21719360]
[137.63098145 461.97155762]
[135.77316284 447.08703613]
[133.91534424 432.20254517]
[132.05752563 417.31805420]
[122.80345917 405.64706421]
[128.77197266 390.99484253]
[126.91414642 376.11035156]
[125.05632782 361.22583008]
[113.17980194 352.31048584]
[111.08367157 337.24194336]
[120.51544952 324.84518433]
[118.65762329 309.96069336]
[106.43235016 304.63281250]
[98.36595154 293.87765503]
[96.64672089 280.43502808]
[101.82876587 267.79583740]
[112.65993500 259.29550171]
[110.98708344 244.38908386]
[109.31422424 229.48266602]
[107.64137268 214.57623291]
[92.66738129 204.01188660]
[90.15473175 185.53622437]
[102.16911316 170.86102295]
[100.12660980 156.00073242]
[90.72834778 144.44557190]
[96.51445770 129.72036743]
[94.47196198 114.86007690]
[85.52011108 102.82411194]
[71.87563324 96.59288788]
[58.23115540 90.36166382]
[44.58667374 84.13043976]
[30.94219398 77.89921570]
[17.29771423 71.66798401]
[3.65323472 65.43675995]
[-9.99124527 59.20553589]
[-23.63572502 52.97431183]
[-37.28020477 46.74308777]
[-53.04747391 48.04838562]
[-61.41041565 35.72318649]
[-75.05489349 29.49196243]
[-88.69937897 23.26073837]
[-102.73728180 17.97517204]
[-117.10316467 13.65990734]
[-131.46903992 9.34464264]
[-145.83491516 5.02937889]
[-160.20080566 0.71411484]
[-174.59320068 -3.51187348]
[-189.01155090 -7.64842319]
[-203.42990112 -11.78497314]
[-217.84826660 -15.92152214]
[-232.26661682 -20.05807304]
[-246.68496704 -24.19462204]
[-261.10333252 -28.33117104]
[-276.50210571 -24.69956970]
[-286.60214233 -35.64664459]
[-301.02047729 -39.78319550]
[-316.79357910 -35.29520416]
[-328.37686157 -46.90379715]
[-323.85446167 -62.66704559]
[-307.87863159 -66.36907196]
[-296.88394165 -54.20154953]
[-282.46557617 -50.06499863]
[-268.09811401 -53.99247742]
[-256.96676636 -42.74952698]
[-242.54841614 -38.61297607]
[-228.13006592 -34.47642899]
[-213.71171570 -30.33987808]
[-199.29335022 -26.20332718]
[-184.87500000 -22.06677818]
[-170.45664978 -17.93022919]
[-163.18028259 -19.10342407]
[-155.88554382 -13.65176487]
[-141.51965332 -9.33650017]
[-127.15377808 -5.02123642]
[-112.78789520 -0.70597237]
[-98.42201996 3.60929179]
[-108.07499695 -7.87199974]
[-111.36197662 -22.50742912]
[-107.54558563 -37.01381302]
[-97.48196411 -48.13692093]
[-83.42869568 -53.38149643]
[-68.53836060 -51.57101440]
[-56.15131760 -43.11162567]
[-49.04637527 -29.90103340]
[-48.81738281 -14.90278149]
[-55.51572037 -1.48144376]
[-67.63873291 7.35215759]
[-82.46815491 9.61625767]
[-68.82366943 15.84748268]
[-55.17919159 22.07870865]
[-40.38786697 20.32771301]
[-31.04898071 33.09860611]
[-17.40449905 39.32983398]
[-3.76002002 45.56105804]
[9.88445950 51.79228210]
[23.52894020 58.02350616]
[37.17341995 64.25473022]
[50.81790161 70.48595428]
[64.46237946 76.71718597]
[78.10685730 82.94841003]
[91.75134277 89.17963409]
[95.66546631 87.39059448]
[99.85821533 86.93943787]
[103.89395905 87.81818390]
[114.72853088 77.44455719]
[125.56309509 67.07092285]
[136.39765930 56.69729614]
[136.90475464 41.12871933]
[148.04032898 30.76272392]
[162.87945557 31.34211159]
[173.71401978 20.96848106]
[184.54858398 10.59485054]
[195.38314819 0.22122049]
[206.21771240 -10.15240955]
[217.05227661 -20.52603912]
[227.88684082 -30.89966965]
[229.33302307 -35.85938644]
[232.23550415 -39.42627716]
[235.82693481 -41.28010941]
[239.32345581 -41.44853973]
[250.53684998 -51.41145706]
[254.85800171 -59.42779160]
[261.95190430 -61.42740631]
[273.28814697 -71.25032043]
[284.62438965 -81.07322693]
[295.96063232 -90.89614105]
[307.29687500 -100.71904755]
[312.65948486 -115.60370636]
[327.34497070 -118.09083557]
[338.68121338 -127.91374207]
[350.01745605 -137.73664856]
[352.52059937 -143.80892944]
[357.02883911 -147.21315002]
[361.75933838 -147.65847778]
[373.33599854 -157.19685364]
[384.91268921 -166.73522949]
[396.48934937 -176.27360535]
[399.14251709 -182.28186035]
[403.73388672 -185.57307434]
[408.47399902 -185.90078735]
[420.28393555 -195.14875793]
[432.09390259 -204.39671326]
[443.90386963 -213.64468384]
[455.71383667 -222.89263916]
[459.07095337 -238.58052063]
[473.49307251 -245.60778809]
[487.91671753 -238.58374023]
[491.27737427 -222.89662170]
[480.99697876 -210.58024597]
[464.96179199 -211.08268738]
[453.15182495 -201.83471680]
[441.34185791 -192.58676147]
[429.53192139 -183.33879089]
[417.72195435 -174.09083557]
[406.02774048 -164.69692993]
[394.45104980 -155.15855408]
[382.87438965 -145.62017822]
[371.29772949 -136.08180237]
[359.84036255 -126.40041351]
[348.50411987 -116.57749939]
[337.16787720 -106.75458527]
[332.61611938 -92.57254028]
[317.11978149 -89.38280487]
[305.78353882 -79.55989838]
[294.44729614 -69.73698425]
[283.11105347 -59.91407394]
[271.77481079 -50.09116364]
[260.49975586 -40.19805908]
[249.28637695 -30.23514175]
[238.26048279 -20.06510544]
[227.42591858 -9.69147491]
[216.59135437 0.68215525]
[205.75677490 11.05578518]
[194.92221069 21.42941475]
[184.08764648 31.80304527]
[173.25308228 42.17667770]
[173.18721008 57.02696991]
[162.34719849 67.70165253]
[146.77128601 67.53186035]
[135.93672180 77.90549469]
[125.10215759 88.27912140]
[114.26759338 98.65274811]
[109.33224487 112.81758118]
[111.37474823 127.67787170]
[120.91910553 140.29594421]
[114.98690033 153.95823669]
[117.02940369 168.81852722]
[127.69168854 174.00382996]
[134.46797180 183.58660889]
[135.77601624 195.12963867]
[131.40676880 205.76428223]
[122.54779816 212.90338135]
[124.22064972 227.80979919]
[125.89350891 242.71623230]
[127.56636810 257.62265015]
[142.39466858 265.78677368]
[149.35661316 281.03332520]
[145.88407898 297.26040649]
[133.54212952 308.10287476]
[135.39994812 322.98736572]
[147.58950806 332.68542480]
[149.26156616 347.80688477]
[139.94082642 359.36801147]
[141.79866028 374.25253296]
[143.65647888 389.13702393]
[153.04341125 401.87265015]
[146.94203186 415.46020508]
[148.79985046 430.34472656]
[150.65766907 445.22921753]
[152.51548767 460.11373901]
[168.65934753 468.41671753]
[176.49954224 484.61541748]
[173.05645752 502.11862183]
[159.89945984 513.93017578]
[162.12631226 528.76391602]
[164.35317993 543.59771729]
[166.58004761 558.43151855]
[168.80690002 573.26525879]
[186.13305664 578.11376953]
[199.53781128 590.03454590]
[206.33621216 606.57751465]
[205.19398499 624.37310791]
[196.38909912 639.81878662]
[181.74603271 649.80810547]
[184.52381897 664.54864502]
[187.30158997 679.28924561]
[190.07937622 694.02978516]
[201.17170715 706.10833740]
[196.00004578 721.67065430]
[179.88455200 724.70758057]
[169.40345764 712.09490967]
[175.33882141 696.80755615]
[172.56103516 682.06701660]
[169.78326416 667.32647705]
[167.00547791 652.58587646]
[154.96115112 650.70715332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 234]
[8 233]
[9 232]
[10 231]
[11 230]
[17 226]
[18 225]
[19 224]
[20 223]
[22 221]
[23 220]
[24 219]
[27 216]
[28 215]
[33 211]
[34 210]
[35 209]
[36 208]
[39 203]
[40 202]
[42 200]
[43 199]
[44 117]
[45 116]
[46 115]
[47 114]
[48 113]
[49 112]
[50 111]
[51 110]
[52 109]
[53 108]
[55 106]
[56 105]
[57 104]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[71 78]
[72 77]
[120 198]
[121 197]
[122 196]
[123 195]
[126 192]
[127 191]
[128 190]
[129 189]
[130 188]
[131 187]
[132 186]
[136 185]
[137 184]
[139 183]
[140 182]
[141 181]
[142 180]
[143 179]
[145 177]
[146 176]
[147 175]
[150 174]
[151 173]
[152 172]
[153 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[240 251]
[241 250]
[242 249]
[243 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
