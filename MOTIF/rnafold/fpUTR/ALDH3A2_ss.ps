%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUCCCCCGGCGCCUCCGACUGGCAGUGGGACUCAGCGGGCGUGGAGGUCGCGGCUGAGCGAGCGAGCCCUGGGCGAGUGAAUUGUGGCUGUGGGUUGACGGUGGAGACACCCCCCGGAGGGAGGCGGAGGGAAGGGAGGCGAGGCCUGCACCUGCAUGCUUCCCGCCUCCCACUCCCCAGCGCCCCCGGACCGUGCAGUUCUCUGCAGGACCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[6.96441364 228.57901001]
[-0.53558618 241.56938171]
[-8.03558636 254.55976868]
[-15.53558636 267.55014038]
[-23.03558540 280.54052734]
[-30.53558540 293.53091431]
[-23.44619942 308.89212036]
[-26.87861443 325.28866577]
[-39.28539658 336.29580688]
[-55.64283371 337.72155762]
[-62.95825958 350.81677246]
[-70.27368164 363.91195679]
[-77.58910370 377.00717163]
[-84.81169128 390.15383911]
[-91.94107819 403.35125732]
[-90.93637848 419.71957397]
[-104.75696564 428.54702759]
[-119.18539429 420.75262451]
[-119.37893677 404.35461426]
[-105.13849640 396.22186279]
[-98.00910950 383.02444458]
[-97.59587097 375.65142822]
[-90.68431854 369.69177246]
[-83.36889648 356.59655762]
[-76.05346680 343.50134277]
[-68.73804474 330.40612793]
[-75.43919373 318.86410522]
[-75.56515503 305.41021729]
[-68.97615814 293.55557251]
[-57.29884338 286.44677734]
[-43.52596664 286.03091431]
[-36.02596664 273.04052734]
[-28.52596664 260.05014038]
[-21.02596664 247.05976868]
[-13.52596760 234.06938171]
[-6.02596712 221.07901001]
[-9.63211346 214.09448242]
[-10.19543362 206.16006470]
[-7.55061722 198.55879211]
[-2.05715322 192.54914856]
[5.44771433 189.15676880]
[13.77607727 188.99986267]
[21.99899673 176.45458984]
[30.22191620 163.90933228]
[30.72784042 149.02333069]
[44.76411819 141.72308350]
[52.98703766 129.17782593]
[61.20995712 116.63256073]
[57.84258270 102.01541901]
[44.95963669 94.33234406]
[29.14409065 93.90911102]
[22.17618752 80.74485779]
[9.29323864 73.06178284]
[-3.58971000 65.37870789]
[-16.47265816 57.69563675]
[-29.35560799 50.01256180]
[-42.23855591 42.32948685]
[-55.12150574 34.64641571]
[-68.00445557 26.96334076]
[-74.58586121 26.48906517]
[-79.24485016 23.25243378]
[-81.13888550 18.87614822]
[-93.79925537 10.83157921]
[-106.45962524 2.78700972]
[-119.11998749 -5.25755978]
[-131.94825745 -13.03159618]
[-144.93862915 -20.53159523]
[-160.02748108 -16.66319847]
[-173.09472656 -24.45431900]
[-176.68966675 -38.86306763]
[-189.68005371 -46.36306763]
[-202.67044067 -53.86306763]
[-219.41069031 -56.54634857]
[-221.46644592 -73.37519836]
[-205.86434937 -80.00930023]
[-195.17044067 -66.85344696]
[-182.18005371 -59.35344696]
[-169.18966675 -51.85344696]
[-154.91386414 -55.94451141]
[-141.63293457 -48.52349854]
[-137.43862915 -33.52197647]
[-124.44825745 -26.02197647]
[-120.97313690 -26.57193375]
[-117.05917358 -25.47103882]
[-113.48289490 -22.53137970]
[-111.07541656 -17.91792679]
[-98.41505432 -9.87335777]
[-85.75468445 -1.82878792]
[-73.09431458 6.21578169]
[-60.32138062 14.08039093]
[-47.43843079 21.76346397]
[-34.55548477 29.44653893]
[-21.67253494 37.12961197]
[-8.78958511 44.81268692]
[4.09336376 52.49576187]
[16.97631264 60.17883301]
[29.85926247 67.86190796]
[44.75333023 67.73559570]
[52.64270782 81.44939423]
[65.52565765 89.13246918]
[70.25413513 81.74888611]
[76.44206238 75.97095490]
[83.60432434 72.05149078]
[91.22339630 70.10702515]
[90.58677673 55.12054062]
[89.95016479 40.13405609]
[89.31354523 25.14757156]
[80.06670380 11.60401249]
[87.41524506 -3.05651259]
[103.79961395 -3.75251222]
[112.36498260 10.23199844]
[104.30002594 24.51095390]
[104.93664551 39.49743652]
[105.57326508 54.48392105]
[106.20988464 69.47040558]
[114.18063354 72.25962830]
[121.10951233 77.08696747]
[126.48744965 83.59775543]
[140.76635742 79.00289917]
[155.04527283 74.40803528]
[169.32418823 69.81317902]
[176.52763367 64.20983887]
[183.83776855 65.25587463]
[198.18026733 60.86352921]
[212.52276611 56.47118759]
[219.24720764 45.47079468]
[231.27738953 42.10482407]
[242.02160645 47.65154266]
[256.42483521 43.46260071]
[261.50555420 30.99380302]
[272.67541504 23.83019447]
[285.73825073 24.39691734]
[295.93756104 32.26346970]
[310.39862061 28.27876282]
[324.85968018 24.29405594]
[339.32073975 20.30935097]
[351.94635010 6.89993238]
[368.74426270 11.99081802]
[383.14749146 7.80187464]
[397.55068970 3.61293125]
[411.95391846 -0.57601196]
[426.35714722 -4.76495504]
[440.76034546 -8.95389843]
[455.16357422 -13.14284134]
[469.50607300 -17.53518295]
[483.78500366 -22.13004303]
[498.06390381 -26.72490311]
[512.34283447 -31.31976509]
[526.62170410 -35.91462326]
[537.38836670 -47.50729752]
[551.87390137 -44.04061890]
[566.15283203 -48.63547897]
[580.43176270 -53.23033905]
[591.03228760 -65.74275208]
[607.11816406 -62.55276489]
[612.14166260 -46.94196701]
[600.93493652 -34.96940994]
[585.02661133 -38.95142746]
[570.74768066 -34.35656738]
[556.46875000 -29.76170731]
[546.72344971 -18.49769211]
[531.21655273 -21.63571548]
[516.93768311 -17.04085541]
[502.65875244 -12.44599438]
[488.37985229 -7.85113382]
[474.10095215 -3.25627375]
[471.16528320 0.50154519]
[465.84106445 2.45977688]
[459.35250854 1.26037860]
[444.94931030 5.44932175]
[430.54608154 9.63826466]
[416.14285278 13.82720852]
[401.73965454 18.01615143]
[387.33642578 22.20509529]
[372.93319702 26.39403725]
[366.83953857 36.83778000]
[354.88061523 40.44865417]
[343.30545044 34.77040482]
[328.84439087 38.75511169]
[314.38333130 42.73981857]
[299.92227173 46.72452545]
[292.24526978 61.69197083]
[275.79339600 66.56829071]
[260.61376953 57.86582184]
[246.21054077 62.05476379]
[234.76295471 75.36039734]
[216.91510010 70.81369019]
[202.57260132 75.20603180]
[188.23010254 79.59837341]
[173.91903687 84.09208679]
[159.64013672 88.68694305]
[145.36122131 93.28180695]
[131.08230591 97.87666321]
[128.98962402 111.41141510]
[121.29478455 122.74095154]
[128.61021423 135.83616638]
[135.52175903 141.79583740]
[135.93499756 149.16885376]
[143.06437683 162.36627197]
[150.19377136 175.56369019]
[157.32315063 188.76110840]
[164.45252991 201.95852661]
[178.69297791 210.09129333]
[178.49943542 226.48928833]
[164.07099915 234.28367615]
[150.25042725 225.45625305]
[151.25511169 209.08790588]
[144.12573242 195.89048767]
[136.99635315 182.69306946]
[129.86695862 169.49565125]
[122.73757935 156.29823303]
[115.51499939 143.15158081]
[108.19956970 130.05638123]
[90.92293549 132.40336609]
[73.75521851 124.85547638]
[65.53229523 137.40074158]
[57.30937958 149.94599915]
[56.21529770 165.72933960]
[42.76717758 172.13224792]
[34.54425812 184.67752075]
[26.32134056 197.22277832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[10 26]
[11 25]
[12 24]
[13 23]
[14 21]
[15 20]
[42 221]
[43 220]
[44 219]
[46 217]
[47 216]
[48 215]
[49 100]
[50 99]
[52 97]
[53 96]
[54 95]
[55 94]
[56 93]
[57 92]
[58 91]
[59 90]
[62 89]
[63 88]
[64 87]
[65 86]
[66 82]
[67 81]
[70 78]
[71 77]
[72 76]
[104 115]
[105 114]
[106 113]
[107 112]
[118 193]
[119 192]
[120 191]
[121 190]
[123 189]
[124 188]
[125 187]
[128 185]
[129 184]
[133 181]
[134 180]
[135 179]
[136 178]
[138 175]
[139 174]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[151 160]
[152 159]
[153 158]
[195 213]
[196 212]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
