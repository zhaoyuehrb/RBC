%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUUCUCCAGCUACUCGUUUGAGAGCCGGUGGCGUUCCGGAGGUUUCUCCCUCGUUAUCCCCCUGCCUUUCACCUGAGGAGAGGCUCUGACUGUCUCUCUCUCUCUCUGGCGUCUGCGCAGCGGGGAAGUAGUGAGAAACAAUCAGAGUACAGAGUAUUUUAAUCUUUAGGGGAUCAAG\
) } def
/len { sequence length } bind def

/coor [
[137.95925903 178.92686462]
[138.38392639 193.92085266]
[134.46836853 208.40078735]
[126.54502106 221.13737488]
[115.28652954 231.04930115]
[101.64871216 237.29510498]
[86.78937531 239.34451294]
[71.97003174 237.02354431]
[58.44878006 230.52925110]
[47.37354660 220.41296387]
[39.68348694 207.53089905]
[42.52314377 192.80213928]
[32.96976471 204.36643982]
[23.41638756 215.93074036]
[20.35199356 224.56398010]
[13.59693909 227.61033630]
[3.84537745 239.00801086]
[-5.90618372 250.40568542]
[-8.37503242 266.61795044]
[-23.74606323 272.33312988]
[-36.20687485 261.67196655]
[-32.93885422 245.60176086]
[-17.30386162 240.65412903]
[-7.55229998 229.25645447]
[2.19926143 217.85877991]
[11.85209084 206.37736511]
[21.40546799 194.81306458]
[30.95884514 183.24876404]
[24.56718063 169.67796326]
[18.17609596 156.10836792]
[3.17609620 156.10836792]
[-11.82390404 156.10836792]
[-26.82390404 156.10836792]
[-41.82390213 156.10836792]
[-56.82390213 156.10836792]
[-71.82390594 156.10836792]
[-78.45304108 166.01425171]
[-88.93925476 171.42390442]
[-100.61384583 171.09115601]
[-110.56816101 165.21502686]
[-116.37828827 155.36112976]
[-131.36935425 154.84338379]
[-146.36041260 154.32565308]
[-161.35147095 153.80790710]
[-175.56602478 161.98585510]
[-189.61802673 153.53166199]
[-189.05198669 137.14228821]
[-174.45019531 129.67770386]
[-160.83372498 138.81684875]
[-145.84266663 139.33457947]
[-130.85160828 139.85232544]
[-115.86054230 140.37007141]
[-103.27877808 127.09871674]
[-84.67300415 127.21411896]
[-71.82390594 141.10836792]
[-56.82390213 141.10836792]
[-41.82390213 141.10836792]
[-26.82390404 141.10836792]
[-11.82390404 141.10836792]
[3.17609620 141.10836792]
[18.17609596 141.10836792]
[32.45786285 136.52238464]
[44.65370178 127.78961182]
[56.84954453 119.05683136]
[69.04538727 110.32405090]
[81.24122620 101.59127045]
[84.70513153 86.99670410]
[77.73428345 73.71485901]
[70.76343536 60.43302155]
[63.79258728 47.15118027]
[56.82173920 33.86933899]
[49.85089111 20.58749962]
[42.88004684 7.30565882]
[27.56431580 4.14932346]
[17.90123177 -8.14534283]
[18.45340538 -23.77317429]
[28.96011734 -35.35518646]
[44.46041870 -37.42271042]
[57.63554382 -28.99951935]
[62.26459885 -14.06278992]
[56.16188431 0.33481121]
[63.13273239 13.61665154]
[70.10358429 26.89849281]
[77.07442474 40.18033218]
[84.04527283 53.46217346]
[91.01612091 66.74401093]
[97.98696899 80.02585602]
[112.58153534 83.48975372]
[124.77738190 74.75697327]
[136.97322083 66.02419281]
[149.16906738 57.29141617]
[161.36489868 48.55863571]
[168.08067322 34.23352051]
[182.93319702 33.11474609]
[195.12904358 24.38196754]
[207.32489014 15.64918613]
[214.04066467 1.32406902]
[228.89318848 0.20529702]
[241.08903503 -8.52748299]
[253.28486633 -17.26026344]
[265.48071289 -25.99304390]
[272.19647217 -40.31816101]
[287.04901123 -41.43693161]
[299.24484253 -50.16971207]
[311.36486816 -59.00742722]
[323.40817261 -67.94941711]
[335.37384033 -76.99501038]
[347.26098633 -86.14353943]
[359.14813232 -95.29206848]
[371.03527832 -104.44059753]
[382.92245483 -113.58912659]
[394.64990234 -122.94147491]
[406.21420288 -132.49485779]
[417.77850342 -142.04823303]
[422.99526978 -157.59548950]
[439.11950684 -160.58564758]
[449.56399536 -147.94267273]
[443.58432007 -132.67257690]
[427.33187866 -130.48393250]
[415.76757812 -120.93055725]
[404.20327759 -111.37718201]
[402.86648560 -106.76765442]
[398.60449219 -102.95918274]
[392.07098389 -101.70197296]
[380.18380737 -92.55344391]
[368.29666138 -83.40491486]
[356.40951538 -74.25638580]
[344.52236938 -65.10785675]
[341.13043213 -58.51954269]
[332.35015869 -55.90612030]
[320.30685425 -46.96413422]
[316.80172729 -40.43534851]
[307.97763062 -37.97387314]
[295.78179932 -29.24109077]
[289.93835449 -15.54060078]
[274.21350098 -13.79720211]
[262.01763916 -5.06442213]
[249.82180786 3.66835833]
[237.62596130 12.40113831]
[231.78253174 26.10162926]
[216.05766296 27.84502792]
[203.86183167 36.57780838]
[191.66598511 45.31058884]
[185.82254028 59.01107788]
[170.09768677 60.75447845]
[157.90184021 69.48725891]
[145.70599365 78.22003937]
[133.51016235 86.95281982]
[121.31431580 95.68560028]
[121.18486023 110.68504333]
[133.22814941 119.62702942]
[145.27143860 128.56901550]
[157.31472778 137.51100159]
[173.63616943 142.09869385]
[173.74598694 159.05229187]
[157.48533630 163.85104370]
[148.37274170 149.55429077]
[136.32945251 140.61230469]
[124.28616333 131.67031860]
[112.24287415 122.72833252]
[118.52483368 136.34951782]
[123.59057617 150.46824646]
[120.64763641 165.17671204]
[110.53948975 176.25938416]
[96.16320038 180.53985596]
[81.63913727 176.79132080]
[71.12998962 166.08815002]
[67.64777374 151.49794006]
[72.19051361 137.20236206]
[83.45787048 127.29784393]
[89.97400665 113.78710938]
[77.77816772 122.51988983]
[65.58232117 131.25267029]
[53.38648224 139.98544312]
[41.19063950 148.71823120]
[56.08021545 146.90148926]
[69.21221161 139.65229797]
[83.87644196 136.49629211]
[98.82794952 137.70137024]
[112.79741669 143.16525269]
[124.59887695 152.42407227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 28]
[13 27]
[14 26]
[16 25]
[17 24]
[18 23]
[30 61]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[41 52]
[42 51]
[43 50]
[44 49]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[88 149]
[89 148]
[90 147]
[91 146]
[92 145]
[94 143]
[95 142]
[96 141]
[98 139]
[99 138]
[100 137]
[101 136]
[103 134]
[104 133]
[105 131]
[106 130]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 121]
[113 120]
[114 119]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
