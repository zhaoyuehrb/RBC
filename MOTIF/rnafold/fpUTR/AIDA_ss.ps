%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUCGGCGGGGCGGUCGCUUUGGAGCCGCAAAGUUUGGCUGUGGCGGCAAAUGGGCUUGGGCGGCUCCUCGGCGGGUGGCGGUGGUGGCCGUAGCGGUUCCUCCUGGCCCUGUUAAUGUCGGGGCCAGGCCGGGGGAGGAUGGCGCCCUAGAACCCGGCCUUGCUGGGGUAGGGGCGGGAGGGGACGGGGUGGGGACCGGCC\
) } def
/len { sequence length } bind def

/coor [
[88.47785950 260.51150513]
[99.31418610 249.00717163]
[98.62815094 234.02285767]
[97.94212341 219.03855896]
[97.25608826 204.05426025]
[96.57006073 189.06994629]
[95.88402557 174.08564758]
[87.57273865 161.72555542]
[94.67078400 147.58596802]
[93.98475647 132.60165405]
[84.95589447 130.75482178]
[76.51242065 126.38194275]
[69.36579895 119.67391968]
[64.16401672 111.02267456]
[61.43482590 100.99974823]
[46.52021408 102.59800720]
[33.62301636 111.76168060]
[20.14378357 105.42452240]
[5.22917414 107.02278137]
[-9.68543530 108.62103271]
[-24.60004425 110.21929169]
[-39.51465225 111.81755066]
[-49.42358017 123.83632660]
[-64.57188416 125.24472046]
[-75.96887970 115.72400665]
[-90.88349152 117.32226562]
[-105.79810333 118.92051697]
[-120.71270752 120.51877594]
[-135.62731934 122.11703491]
[-150.54193115 123.71529388]
[-165.45654297 125.31355286]
[-180.37115479 126.91180420]
[-194.98811340 138.10816956]
[-210.74545288 130.38713074]
[-225.63395691 132.21264648]
[-240.52244568 134.03816223]
[-255.41094971 135.86367798]
[-270.29946899 137.68920898]
[-285.18795776 139.51472473]
[-300.07644653 141.34024048]
[-309.80096436 153.50872803]
[-324.92602539 155.14796448]
[-336.46688843 145.80215454]
[-351.35537720 147.62767029]
[-366.24386597 149.45318604]
[-379.00979614 159.74703979]
[-394.20791626 153.58674622]
[-396.20370483 137.30949402]
[-382.94409180 127.65992737]
[-368.06939697 134.56469727]
[-353.18090820 132.73916626]
[-338.29238892 130.91365051]
[-329.35128784 119.05650330]
[-314.27822876 116.99308014]
[-301.90197754 126.45173645]
[-287.01348877 124.62622070]
[-272.12496948 122.80069733]
[-257.23648071 120.97518158]
[-242.34797668 119.14966583]
[-227.45947266 117.32415009]
[-212.57096863 115.49862671]
[-204.87530518 106.16250610]
[-192.48356628 104.52179718]
[-181.96940613 111.99720001]
[-167.05479431 110.39894104]
[-152.14018250 108.80068207]
[-137.22557068 107.20242310]
[-122.31096649 105.60417175]
[-107.39635468 104.00591278]
[-92.48175049 102.40765381]
[-77.56713867 100.80939484]
[-68.44624329 89.08997345]
[-53.34347916 87.25664520]
[-41.11291122 96.90293884]
[-26.19830132 95.30468750]
[-11.28369236 93.70642853]
[3.63091683 92.10816956]
[18.54552650 90.50991058]
[30.37593269 81.46056366]
[44.92195892 87.68339539]
[59.83656693 86.08514404]
[67.17087555 73.00049591]
[60.75108719 59.44371414]
[54.33129883 45.88693237]
[47.91151047 32.33015060]
[41.49172211 18.77337074]
[27.70240402 9.89718246]
[28.76490402 -6.46750879]
[43.58621597 -13.48611164]
[56.91944122 -3.93848968]
[55.04850388 12.35358334]
[61.46829224 25.91036415]
[67.88807678 39.46714401]
[74.30786896 53.02392578]
[80.72765350 66.58071136]
[99.70748138 63.23176193]
[116.98111725 69.44038391]
[128.28938293 82.71527100]
[142.52670288 77.99308014]
[149.66400146 64.14762878]
[164.16992188 59.56146622]
[177.32546997 66.45111847]
[191.56277466 61.72892761]
[205.80007935 57.00673294]
[220.03738403 52.28454208]
[234.27468872 47.56234741]
[248.51199341 42.84015656]
[262.74929810 38.11796570]
[274.20721436 28.43726349]
[281.24032593 15.18828011]
[288.27340698 1.93929577]
[295.30651855 -11.30968857]
[302.33959961 -24.55867195]
[309.37271118 -37.80765533]
[316.40579224 -51.05664062]
[310.37069702 -65.48271942]
[315.06979370 -80.39756012]
[328.28430176 -88.75883484]
[343.77474976 -86.61860657]
[354.22698975 -74.98741913]
[354.70581055 -59.35716629]
[344.98513794 -47.10797882]
[329.65478516 -44.02354431]
[322.62167358 -30.77456093]
[315.58859253 -17.52557755]
[308.55551147 -4.27659321]
[301.52239990 8.97239113]
[294.48931885 22.22137451]
[287.45620728 35.47035980]
[292.67800903 40.85391617]
[303.12164307 51.62103653]
[308.34344482 57.00459290]
[321.80075073 50.37881470]
[335.25805664 43.75303268]
[348.71536255 37.12725067]
[351.22009277 21.81366348]
[362.27120972 10.92089939]
[377.61935425 8.63745022]
[391.36282349 15.84134865]
[398.21701050 29.76254845]
[395.54632568 45.04806519]
[384.37768555 55.82030487]
[369.00567627 57.93712234]
[355.34115601 50.58455658]
[341.88385010 57.21033859]
[328.42654419 63.83611679]
[314.96923828 70.46189880]
[316.33984375 85.39914703]
[330.77822876 89.46524811]
[345.21661377 93.53134918]
[359.65499878 97.59745026]
[374.09338379 101.66355133]
[384.25137329 92.34328461]
[397.58267212 89.28459930]
[410.58026123 93.18238068]
[419.87887573 102.91577148]
[423.12637329 115.86775970]
[437.50106812 120.15357208]
[451.87576294 124.43938446]
[466.25045776 128.72520447]
[480.62515259 133.01101685]
[494.99984741 137.29682922]
[511.90625000 136.02810669]
[517.80554199 151.92259216]
[504.16531372 161.99137878]
[490.71401978 151.67152405]
[476.33935547 147.38571167]
[461.96466064 143.09989929]
[447.58996582 138.81408691]
[433.21527100 134.52827454]
[418.84057617 130.24246216]
[406.12725830 140.62466431]
[389.56491089 141.39241028]
[375.66989136 132.04537964]
[370.02728271 116.10193634]
[355.58889771 112.03583527]
[341.15051270 107.96972656]
[326.71212769 103.90362549]
[312.27374268 99.83752441]
[267.47149658 52.35527039]
[253.23419189 57.07746124]
[238.99688721 61.79965591]
[224.75958252 66.52185059]
[210.52226257 71.24404144]
[196.28495789 75.96623230]
[182.04765320 80.68842316]
[175.61706543 94.07435608]
[161.24568176 99.06614685]
[147.24888611 92.23038483]
[133.01158142 96.95258331]
[130.89753723 112.01640320]
[122.27848816 124.55036163]
[108.96906281 131.91563416]
[109.65509033 146.89993286]
[118.01544952 160.33180237]
[110.86833191 173.39961243]
[111.55436707 188.38392639]
[112.24039459 203.36822510]
[112.92642212 218.35252380]
[113.61245728 233.33683777]
[114.29848480 248.32113647]
[126.14068604 258.78717041]
[127.03038025 274.56640625]
[116.43972778 286.29727173]
[100.65197754 287.02011108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[9 194]
[10 193]
[15 81]
[16 80]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[25 71]
[26 70]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[32 64]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[43 52]
[44 51]
[45 50]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[98 190]
[99 189]
[102 186]
[103 185]
[104 184]
[105 183]
[106 182]
[107 181]
[108 180]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[132 147]
[133 146]
[134 145]
[135 144]
[148 179]
[149 178]
[150 177]
[151 176]
[152 175]
[157 171]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
