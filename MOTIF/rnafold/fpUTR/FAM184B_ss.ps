%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCAGCAGGAGAGGAAAAAGGGUGGGCGCGCGGGUGGGCCCGGGAGGCGGAGACCUUCGGGAAGCUGGGGCCACGCGGCGGUGCAGGCGACGGGACUGCAGUGCCACCUCUCCCGAGAAACCCACACGCUCGCACGCCCGCGCGCGCACGCACGUGCACACGGUGGGCAGGGAGAAAACGAGAGAGUCUGAGUGCUGGGCGCGUUUUAGCG\
) } def
/len { sequence length } bind def

/coor [
[96.68476868 300.89547729]
[95.01189423 291.89981079]
[97.70432281 283.01116943]
[104.27954865 276.25860596]
[102.08539581 261.41995239]
[99.89125061 246.58129883]
[97.69709778 231.74264526]
[95.50294495 216.90399170]
[93.30879974 202.06533813]
[79.38873291 192.62579346]
[76.54791260 175.70594788]
[87.02626038 161.69660950]
[84.61451721 146.89175415]
[82.20278168 132.08691406]
[68.03793335 137.02220154]
[53.51612473 133.26493835]
[43.52236938 122.07901001]
[41.41848373 107.22728729]
[47.91219711 93.70576477]
[60.81907654 86.06295776]
[75.79735565 86.86985779]
[87.80873871 95.85537720]
[77.59846497 84.86672974]
[67.38818359 73.87808990]
[57.17790985 62.88944626]
[46.96763611 51.90080261]
[31.90590286 47.05778885]
[28.91080093 32.46742630]
[18.70052528 21.47878456]
[8.49025059 10.49014187]
[-6.57148170 5.64712811]
[-9.56658363 -8.94323254]
[-19.77685928 -19.93187523]
[-29.98713303 -30.92051888]
[-45.04886627 -35.76353073]
[-48.04396820 -50.35389328]
[-58.25424194 -61.34253693]
[-68.46451569 -72.33117676]
[-78.67479706 -83.31982422]
[-88.88507080 -94.30846405]
[-108.97631073 -93.98290253]
[-122.61635590 -108.31929779]
[-121.33174133 -127.75993347]
[-132.01591492 -138.28839111]
[-142.70008850 -148.81686401]
[-153.38424683 -159.34532166]
[-164.06842041 -169.87377930]
[-174.75259399 -180.40225220]
[-187.65025330 -188.06059265]
[-202.00834656 -192.40170288]
[-216.36643982 -196.74279785]
[-225.24179077 -187.94332886]
[-236.94796753 -183.77566528]
[-249.24360657 -184.97265625]
[-259.80206299 -191.24617004]
[-266.65158081 -201.35328674]
[-268.54354858 -213.34217834]
[-282.76803589 -218.10292053]
[-296.99249268 -222.86364746]
[-311.21694946 -227.62437439]
[-325.44143677 -232.38510132]
[-339.66589355 -237.14582825]
[-355.61950684 -233.34922791]
[-366.68609619 -245.45140076]
[-361.48129272 -261.00268555]
[-345.35937500 -264.00524902]
[-334.90515137 -251.37030029]
[-320.68069458 -246.60957336]
[-306.45623779 -241.84884644]
[-292.23175049 -237.08810425]
[-278.00729370 -232.32737732]
[-263.78283691 -227.56665039]
[-249.89500427 -238.47825623]
[-232.08035278 -238.87062073]
[-217.46986389 -228.39779663]
[-212.02534485 -211.10089111]
[-197.66725159 -206.75979614]
[-183.30915833 -202.41868591]
[-173.34330750 -213.62948608]
[-179.33688354 -227.38002014]
[-185.33045959 -241.13055420]
[-191.32403564 -254.88107300]
[-203.93098450 -264.44012451]
[-201.92364502 -279.19885254]
[-207.91722107 -292.94937134]
[-213.91079712 -306.69989014]
[-219.90437317 -320.45043945]
[-225.89794922 -334.20095825]
[-241.14395142 -336.55950928]
[-252.67941284 -346.80337524]
[-256.82339478 -361.66375732]
[-252.25358582 -376.39877319]
[-240.42819214 -386.30651855]
[-225.12063599 -388.22546387]
[-211.21551514 -381.54330444]
[-203.14990234 -368.39227295]
[-203.49751282 -352.96884155]
[-212.14741516 -340.19451904]
[-206.15383911 -326.44400024]
[-200.16026306 -312.69348145]
[-194.16668701 -298.94293213]
[-188.17311096 -285.19241333]
[-175.99485779 -276.61691284]
[-177.57350159 -260.87466431]
[-171.57992554 -247.12413025]
[-165.58634949 -233.37359619]
[-159.59277344 -219.62306213]
[-157.26977539 -212.70483398]
[-156.84162903 -205.96894836]
[-158.08930969 -199.88714600]
[-160.68518066 -194.83850098]
[-164.22412109 -191.08641052]
[-153.53996277 -180.55795288]
[-142.85578918 -170.02949524]
[-132.17161560 -159.50102234]
[-121.48744965 -148.97256470]
[-110.80328369 -138.44410706]
[-100.94208527 -141.28089905]
[-90.71299744 -139.75770569]
[-81.97068787 -134.08294678]
[-76.32824707 -125.22386169]
[-74.85977173 -114.74212646]
[-77.89642334 -104.51873779]
[-67.68614960 -93.53009796]
[-57.47587585 -82.54145813]
[-47.26559830 -71.55281067]
[-37.05532455 -60.56417084]
[-22.72389984 -56.50713730]
[-18.99849129 -41.13079453]
[-8.78821564 -30.14215088]
[1.42206001 -19.15350914]
[15.75348568 -15.09647560]
[19.47889328 0.27986634]
[29.68916893 11.26850986]
[39.89944458 22.25715256]
[54.23086929 26.31418419]
[57.95627975 41.69052887]
[68.16655731 52.67916870]
[78.37683105 63.66781235]
[88.58710480 74.65645599]
[98.79737854 85.64510345]
[112.91357422 90.71788025]
[127.78283691 88.74179840]
[140.44343567 79.25390625]
[154.07908630 85.24709320]
[168.94834900 83.27101135]
[183.81761169 81.29492950]
[198.60435486 78.77458191]
[213.28866577 75.71336365]
[227.97297668 72.65215302]
[242.65728760 69.59094238]
[254.51995850 58.26799011]
[270.17901611 63.13891983]
[273.52575684 79.19293213]
[261.11737061 89.91503143]
[245.71850586 84.27525330]
[231.03419495 87.33646393]
[216.34988403 90.39767456]
[201.66557312 93.45889282]
[212.60081482 103.72634125]
[211.54170227 118.68891144]
[199.26922607 127.31363678]
[184.83270264 123.24092865]
[178.87721252 109.47386169]
[185.79370117 96.16419220]
[170.92443848 98.14028168]
[156.05516052 100.11636353]
[144.45812988 109.46290588]
[129.75892639 103.61106110]
[114.88965607 105.58714294]
[110.41915131 111.60915375]
[124.41554260 117.00368500]
[138.41194153 122.39820862]
[152.40834045 127.79273987]
[167.36778259 126.69050598]
[181.28082275 132.29650879]
[191.29711914 143.46224976]
[195.36465454 157.90022278]
[192.65010071 172.65255737]
[183.70959473 184.69694519]
[170.37477112 191.56590271]
[155.37750244 191.85215759]
[141.79026794 185.49710083]
[132.39663696 173.80267334]
[129.12110901 159.16183472]
[119.90678406 147.32562256]
[110.69245911 135.48939514]
[101.47813416 123.65316772]
[97.00762939 129.67517090]
[99.41936493 144.48002625]
[101.83110809 159.28486633]
[113.59461975 165.84213257]
[119.35033417 177.80232239]
[117.19921875 190.70271301]
[108.14745331 199.87118530]
[110.34160614 214.70983887]
[112.53575134 229.54849243]
[114.72990417 244.38714600]
[116.92405701 259.22579956]
[119.11820221 274.06445312]
[133.42701721 290.01855469]
[125.01484680 308.86663818]
[127.86016846 323.59429932]
[130.70549011 338.32196045]
[143.93647766 346.96582031]
[147.09826660 362.45062256]
[138.31498718 375.58947754]
[122.79763794 378.58737183]
[109.75237274 369.66567993]
[106.91871643 354.11749268]
[115.97782135 341.16729736]
[113.13250732 326.43963623]
[110.28718567 311.71194458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[12 191]
[13 190]
[14 189]
[22 141]
[23 140]
[24 139]
[25 138]
[26 137]
[28 135]
[29 134]
[30 133]
[32 131]
[33 130]
[34 129]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[43 117]
[44 116]
[45 115]
[46 114]
[47 113]
[48 112]
[49 78]
[50 77]
[51 76]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[79 107]
[80 106]
[81 105]
[82 104]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[142 170]
[143 169]
[145 167]
[146 166]
[147 165]
[148 159]
[149 158]
[150 157]
[151 156]
[202 213]
[203 212]
[204 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
