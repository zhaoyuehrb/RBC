%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRR9)
} def

/sequence { (\
AGUCCACAGCCUUUGUUGAGUCUUGUUGAAGAUCAGGCUCUGCAAAUCACCCUAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.050457505 ubox
1 39 0.003372675 ubox
1 41 0.007315551 ubox
1 53 0.031221007 ubox
2 10 0.179350579 ubox
2 11 0.072268547 ubox
2 12 0.004397068 ubox
2 13 0.003551688 ubox
2 38 0.003890666 ubox
2 40 0.007742686 ubox
2 43 0.034904634 ubox
2 47 0.020531535 ubox
2 50 0.032588151 ubox
2 52 0.032849513 ubox
3 9 0.176115132 ubox
3 19 0.003218525 ubox
3 37 0.003371955 ubox
3 42 0.029348223 ubox
3 46 0.020219554 ubox
3 49 0.031724098 ubox
3 56 0.057228737 ubox
4 18 0.003644055 ubox
4 36 0.003310759 ubox
4 55 0.091820349 ubox
4 56 0.229117790 ubox
5 42 0.094998819 ubox
5 55 0.233871555 ubox
6 16 0.016327065 ubox
6 41 0.095737855 ubox
7 15 0.017516046 ubox
7 18 0.007809512 ubox
7 42 0.013651372 ubox
8 14 0.017192818 ubox
8 17 0.010459247 ubox
8 39 0.109775322 ubox
8 41 0.011155340 ubox
8 53 0.154000819 ubox
9 13 0.011879501 ubox
9 16 0.011180097 ubox
9 38 0.113635893 ubox
9 40 0.008176902 ubox
9 43 0.023747330 ubox
9 52 0.159440325 ubox
10 15 0.011198188 ubox
10 37 0.113701653 ubox
10 42 0.023737548 ubox
10 56 0.289622409 ubox
11 36 0.113362994 ubox
11 55 0.295390433 ubox
11 56 0.024546045 ubox
12 19 0.003527745 ubox
12 35 0.084886115 ubox
12 37 0.003180656 ubox
12 45 0.028979481 ubox
12 46 0.814664928 ubox
12 54 0.256666077 ubox
12 55 0.022823600 ubox
13 18 0.003963137 ubox
13 32 0.007120407 ubox
13 35 0.006631380 ubox
13 36 0.004316670 ubox
13 44 0.023237084 ubox
13 45 0.961853056 ubox
13 46 0.036509434 ubox
13 54 0.015057314 ubox
14 19 0.003448149 ubox
14 31 0.007159000 ubox
14 35 0.022857629 ubox
14 44 0.987397413 ubox
14 45 0.028355706 ubox
14 49 0.003747960 ubox
15 33 0.010505242 ubox
15 34 0.033342434 ubox
15 38 0.020615830 ubox
15 43 0.992525869 ubox
15 48 0.003889884 ubox
15 50 0.003836671 ubox
16 29 0.009946719 ubox
16 30 0.007285808 ubox
16 31 0.004090872 ubox
16 32 0.010621471 ubox
16 36 0.016051498 ubox
16 37 0.020012824 ubox
16 42 0.962465947 ubox
16 46 0.003642549 ubox
16 49 0.003332990 ubox
17 28 0.010336054 ubox
17 29 0.007287190 ubox
17 30 0.004059994 ubox
17 31 0.010072864 ubox
17 35 0.071605880 ubox
17 36 0.019255801 ubox
17 42 0.015594052 ubox
17 44 0.003396183 ubox
17 45 0.003662050 ubox
17 49 0.004853877 ubox
18 27 0.010798042 ubox
18 34 0.100114691 ubox
18 40 0.991684523 ubox
18 48 0.005139094 ubox
19 26 0.010686946 ubox
19 27 0.006698696 ubox
19 33 0.085816073 ubox
19 39 0.992918451 ubox
19 41 0.003521903 ubox
19 47 0.005003885 ubox
20 26 0.005677834 ubox
20 33 0.075314378 ubox
20 38 0.993053029 ubox
20 40 0.003647955 ubox
21 29 0.013551959 ubox
21 32 0.114558952 ubox
21 37 0.910310495 ubox
22 28 0.013953929 ubox
22 31 0.118783721 ubox
22 36 0.907943885 ubox
22 37 0.395662631 ubox
23 29 0.003951021 ubox
23 30 0.119197703 ubox
23 31 0.013122442 ubox
23 32 0.025163554 ubox
23 35 0.799870862 ubox
23 36 0.398752892 ubox
23 45 0.004525662 ubox
24 28 0.005519188 ubox
24 29 0.119200519 ubox
24 30 0.032020346 ubox
24 31 0.040231811 ubox
24 35 0.561322251 ubox
24 44 0.005064107 ubox
25 33 0.661164298 ubox
25 34 0.687040175 ubox
25 43 0.005108338 ubox
26 32 0.680264590 ubox
26 36 0.028997115 ubox
26 42 0.004973590 ubox
27 31 0.613731049 ubox
27 35 0.093910244 ubox
28 34 0.129633485 ubox
28 40 0.004434300 ubox
29 33 0.113013729 ubox
29 39 0.003529109 ubox
31 38 0.003832164 ubox
35 53 0.003722625 ubox
36 52 0.003900317 ubox
37 51 0.003879544 ubox
39 56 0.003550301 ubox
40 55 0.013551278 ubox
41 49 0.006391915 ubox
41 54 0.013529031 ubox
42 48 0.007076388 ubox
42 53 0.012529253 ubox
47 56 0.105549018 ubox
48 55 0.162260766 ubox
50 56 0.238299260 ubox
51 55 0.239386302 ubox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
showpage
end
%%EOF
