%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPAG8)
} def

/sequence { (\
GCCCCGCAGAGGACUUGCCUCCACCGCCACCUGCAAGUCCGCCCAGCUGUACUUCUGCGCAGGCUCCAGGAGUUGUUUGCUGUCUCUAUGGCAACCCAGUAGCUGGAGUCUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.010187090 ubox
1 47 0.020086715 ubox
1 50 0.004431505 ubox
1 58 0.006497582 ubox
1 60 0.033798805 ubox
1 64 0.006671997 ubox
2 6 0.010127683 ubox
2 46 0.020096342 ubox
2 49 0.004588567 ubox
2 57 0.006443302 ubox
2 59 0.033981649 ubox
2 63 0.007453250 ubox
3 62 0.007536615 ubox
5 59 0.963557540 ubox
6 42 0.021457387 ubox
6 47 0.013838339 ubox
6 50 0.008479829 ubox
6 58 0.999387673 ubox
7 41 0.021471270 ubox
7 46 0.013842109 ubox
7 49 0.008702852 ubox
7 57 0.999468364 ubox
8 48 0.008685448 ubox
8 56 0.999188481 ubox
9 47 0.008461351 ubox
9 54 0.006764481 ubox
9 55 0.999097566 ubox
10 48 0.003267067 ubox
10 53 0.053269700 ubox
10 54 0.961848843 ubox
11 22 0.003846512 ubox
11 40 0.991723951 ubox
11 43 0.006069132 ubox
11 44 0.004845033 ubox
11 52 0.041159859 ubox
11 53 0.111630531 ubox
12 21 0.003859445 ubox
12 39 0.997582733 ubox
12 42 0.004978621 ubox
12 43 0.003958880 ubox
12 52 0.068462532 ubox
13 20 0.003613452 ubox
13 38 0.999520127 ubox
13 50 0.017813390 ubox
14 37 0.999772731 ubox
14 49 0.017521054 ubox
15 36 0.999246224 ubox
15 46 0.003817882 ubox
16 35 0.999243033 ubox
16 45 0.004771150 ubox
17 27 0.009028241 ubox
17 34 0.999719253 ubox
17 42 0.003189749 ubox
17 44 0.004740376 ubox
17 47 0.015951235 ubox
18 26 0.009936457 ubox
18 33 0.996246924 ubox
18 41 0.003218479 ubox
18 46 0.015527687 ubox
19 46 0.004148449 ubox
20 45 0.005292343 ubox
22 33 0.036737126 ubox
23 32 0.077144233 ubox
23 38 0.006640706 ubox
24 37 0.006830489 ubox
25 33 0.009483994 ubox
25 41 0.007577515 ubox
26 32 0.026938837 ubox
26 34 0.011605161 ubox
26 38 0.005801574 ubox
26 40 0.007524246 ubox
26 42 0.007904846 ubox
26 47 0.003373295 ubox
27 33 0.012085199 ubox
27 37 0.005949423 ubox
27 41 0.007905341 ubox
27 46 0.003372510 ubox
29 38 0.008942326 ubox
30 37 0.009133116 ubox
31 37 0.004308858 ubox
32 36 0.003955807 ubox
32 51 0.003438477 ubox
33 42 0.007200917 ubox
33 50 0.003722384 ubox
34 41 0.007272080 ubox
34 49 0.003738000 ubox
36 48 0.004037192 ubox
37 47 0.004899869 ubox
38 46 0.004813029 ubox
40 49 0.028309932 ubox
41 47 0.767846835 ubox
41 48 0.028663136 ubox
41 50 0.288513461 ubox
41 58 0.004116312 ubox
41 60 0.007970535 ubox
42 46 0.763242206 ubox
42 49 0.296816243 ubox
42 57 0.004008055 ubox
42 59 0.009020813 ubox
44 57 0.010680771 ubox
45 53 0.176504607 ubox
45 54 0.012455307 ubox
45 56 0.010963927 ubox
46 52 0.188064778 ubox
46 53 0.023515986 ubox
46 55 0.011031709 ubox
46 58 0.009328685 ubox
47 57 0.009336832 ubox
48 59 0.014785164 ubox
49 58 0.020301977 ubox
50 57 0.020175693 ubox
51 56 0.017564415 ubox
52 115 0.004587256 ubox
53 114 0.004653788 ubox
54 113 0.004647799 ubox
55 112 0.003668926 ubox
55 115 0.003463739 ubox
56 114 0.003425511 ubox
60 112 0.995760305 ubox
61 111 0.999321350 ubox
62 110 0.999885433 ubox
63 109 0.999625106 ubox
64 108 0.999961852 ubox
65 107 0.999846834 ubox
66 106 0.999992013 ubox
67 105 0.999986976 ubox
68 104 0.999578894 ubox
69 97 0.022756488 ubox
69 103 0.999014578 ubox
69 104 0.007928999 ubox
70 77 0.003473382 ubox
70 86 0.005751260 ubox
70 96 0.026096851 ubox
70 103 0.016025781 ubox
71 76 0.003861197 ubox
71 81 0.014202389 ubox
71 85 0.005822226 ubox
71 104 0.014734896 ubox
72 80 0.015447912 ubox
72 84 0.005815809 ubox
72 95 0.031972217 ubox
72 100 0.752092581 ubox
72 103 0.020983668 ubox
73 79 0.015342585 ubox
73 94 0.031735506 ubox
73 99 0.888047085 ubox
73 102 0.023458009 ubox
74 93 0.030544173 ubox
74 98 0.960390168 ubox
74 101 0.022756903 ubox
75 92 0.030171957 ubox
75 95 0.146090219 ubox
75 97 0.958931822 ubox
75 100 0.019739880 ubox
76 91 0.029926552 ubox
76 94 0.128082432 ubox
76 99 0.014856568 ubox
77 90 0.028207034 ubox
77 93 0.091911594 ubox
77 94 0.917648682 ubox
77 98 0.010943656 ubox
77 99 0.023683237 ubox
77 102 0.015676927 ubox
78 88 0.006127883 ubox
78 93 0.984754338 ubox
78 98 0.025847567 ubox
78 101 0.016418583 ubox
79 87 0.006294551 ubox
79 92 0.994890122 ubox
79 97 0.026274752 ubox
79 100 0.016958513 ubox
80 91 0.994891769 ubox
80 99 0.016996467 ubox
81 88 0.014552980 ubox
81 90 0.989291402 ubox
81 93 0.089973429 ubox
81 98 0.015066742 ubox
82 87 0.024282682 ubox
82 89 0.877065978 ubox
82 92 0.094120550 ubox
82 97 0.012828337 ubox
83 88 0.814832860 ubox
83 91 0.094269856 ubox
84 90 0.096927191 ubox
84 91 0.004203426 ubox
85 90 0.004362143 ubox
86 90 0.003213260 ubox
86 102 0.011012953 ubox
87 101 0.011338776 ubox
88 100 0.010908448 ubox
89 98 0.011332870 ubox
89 99 0.006711900 ubox
90 96 0.005900254 ubox
90 97 0.013323115 ubox
91 95 0.005825685 ubox
91 96 0.013186120 ubox
94 100 0.004714540 ubox
95 99 0.005055062 ubox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
17 34 0.9500000 lbox
18 33 0.9500000 lbox
41 47 0.9500000 lbox
42 46 0.9500000 lbox
60 112 0.9500000 lbox
61 111 0.9500000 lbox
62 110 0.9500000 lbox
63 109 0.9500000 lbox
64 108 0.9500000 lbox
65 107 0.9500000 lbox
66 106 0.9500000 lbox
67 105 0.9500000 lbox
68 104 0.9500000 lbox
69 103 0.9500000 lbox
72 100 0.9500000 lbox
73 99 0.9500000 lbox
74 98 0.9500000 lbox
75 97 0.9500000 lbox
77 94 0.9500000 lbox
78 93 0.9500000 lbox
79 92 0.9500000 lbox
80 91 0.9500000 lbox
81 90 0.9500000 lbox
82 89 0.9500000 lbox
83 88 0.9500000 lbox
showpage
end
%%EOF
