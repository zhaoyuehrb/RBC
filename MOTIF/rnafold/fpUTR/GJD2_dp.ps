%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GJD2)
} def

/sequence { (\
UCCCAUUCUGGAAGUGCGGCCCGGGGAGGGGCCAGGAGCGGGAACGUGCCCGGUGCUGCCCAGUCUUUGUCUGCUGCCUCCGGAUGCACAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.022244427 ubox
1 43 0.012091406 ubox
1 84 0.014065589 ubox
2 11 0.023643595 ubox
2 42 0.012925217 ubox
2 83 0.015267690 ubox
3 10 0.023450644 ubox
3 11 0.019636545 ubox
3 41 0.012928970 ubox
3 82 0.015074736 ubox
3 83 0.008598547 ubox
4 10 0.019842042 ubox
4 40 0.012922060 ubox
4 82 0.008578365 ubox
4 86 0.680998513 ubox
5 9 0.016213750 ubox
5 85 0.678550471 ubox
6 37 0.006680655 ubox
6 38 0.010871968 ubox
6 84 0.512952090 ubox
6 91 0.005812040 ubox
7 36 0.006734798 ubox
7 37 0.010981684 ubox
7 83 0.257325160 ubox
7 84 0.816584773 ubox
8 35 0.006844276 ubox
8 36 0.010930519 ubox
8 82 0.251925888 ubox
8 83 0.965035362 ubox
9 34 0.006872253 ubox
9 35 0.010391565 ubox
9 82 0.965902481 ubox
10 17 0.005772048 ubox
10 33 0.004190622 ubox
10 80 0.006838111 ubox
10 81 0.999306051 ubox
11 79 0.003708321 ubox
11 80 0.999288157 ubox
12 79 0.749689435 ubox
13 79 0.656757726 ubox
14 77 0.114384349 ubox
14 78 0.930201252 ubox
14 89 0.031303836 ubox
15 76 0.110165401 ubox
15 88 0.031349413 ubox
16 74 0.116830385 ubox
16 75 0.013527502 ubox
16 77 0.992190954 ubox
16 87 0.031371681 ubox
17 73 0.117654264 ubox
17 76 0.992360858 ubox
17 86 0.031368764 ubox
18 33 0.012610314 ubox
18 71 0.014653484 ubox
18 72 0.116582669 ubox
18 75 0.991697446 ubox
18 85 0.030327575 ubox
19 32 0.013037058 ubox
19 70 0.014817026 ubox
19 71 0.116266766 ubox
19 74 0.992446145 ubox
20 31 0.013308621 ubox
20 69 0.025310231 ubox
20 73 0.991887475 ubox
20 83 0.008318079 ubox
21 30 0.013302360 ubox
21 82 0.007955186 ubox
21 83 0.030093106 ubox
22 29 0.013292590 ubox
22 69 0.989756904 ubox
22 73 0.013411348 ubox
22 82 0.030235888 ubox
23 61 0.010199365 ubox
23 66 0.010455299 ubox
23 67 0.053489998 ubox
23 68 0.989650065 ubox
23 71 0.033951545 ubox
23 72 0.046325191 ubox
23 80 0.006720660 ubox
23 81 0.030154142 ubox
24 60 0.010213042 ubox
24 61 0.024978783 ubox
24 65 0.011000791 ubox
24 66 0.068054346 ubox
24 67 0.988842258 ubox
24 68 0.013599014 ubox
24 70 0.030790244 ubox
24 71 0.049633468 ubox
24 72 0.004676930 ubox
24 79 0.006724202 ubox
24 80 0.030022901 ubox
25 59 0.010186211 ubox
25 60 0.025341183 ubox
25 64 0.010390756 ubox
25 65 0.076513311 ubox
25 66 0.992447406 ubox
25 67 0.010203340 ubox
25 68 0.040197773 ubox
25 70 0.046557131 ubox
25 71 0.004667355 ubox
25 77 0.003467920 ubox
25 78 0.020479056 ubox
25 79 0.022337801 ubox
25 81 0.004317918 ubox
26 59 0.025244880 ubox
26 64 0.074637565 ubox
26 65 0.993575290 ubox
26 66 0.003371408 ubox
26 67 0.043394529 ubox
26 68 0.024075984 ubox
26 70 0.003663750 ubox
26 77 0.020511860 ubox
26 78 0.022116130 ubox
26 80 0.004527933 ubox
27 57 0.007954557 ubox
27 64 0.986341873 ubox
27 66 0.044189568 ubox
27 67 0.023333968 ubox
27 68 0.044887942 ubox
27 75 0.017060876 ubox
27 79 0.004885027 ubox
28 56 0.006651383 ubox
28 57 0.025606758 ubox
28 61 0.044845199 ubox
28 65 0.044549641 ubox
28 66 0.022108274 ubox
28 67 0.044777542 ubox
28 74 0.017214604 ubox
28 75 0.004502531 ubox
28 78 0.005061237 ubox
29 56 0.028073032 ubox
29 60 0.042331137 ubox
29 61 0.988471575 ubox
29 64 0.009083585 ubox
29 65 0.013775439 ubox
29 66 0.043414619 ubox
29 72 0.011997829 ubox
29 74 0.004205998 ubox
29 77 0.004966150 ubox
30 59 0.039312915 ubox
30 60 0.989445781 ubox
30 61 0.126396883 ubox
30 64 0.003715546 ubox
30 65 0.043461382 ubox
30 71 0.013100260 ubox
30 72 0.008744690 ubox
31 54 0.033309297 ubox
31 59 0.989557400 ubox
31 60 0.126004615 ubox
31 64 0.043453708 ubox
31 70 0.013146437 ubox
31 71 0.008742664 ubox
32 53 0.034146673 ubox
32 58 0.706139081 ubox
32 63 0.043451940 ubox
32 69 0.014272350 ubox
33 52 0.034937757 ubox
33 55 0.014734018 ubox
33 58 0.705712643 ubox
33 69 0.006576273 ubox
34 54 0.013600906 ubox
34 57 0.989073485 ubox
34 67 0.014044096 ubox
34 68 0.005660463 ubox
35 50 0.034264974 ubox
35 51 0.017288264 ubox
35 56 0.991456401 ubox
35 57 0.061291302 ubox
35 60 0.029855883 ubox
35 61 0.020985779 ubox
35 66 0.015013615 ubox
35 67 0.004323220 ubox
36 49 0.034168379 ubox
36 50 0.017290237 ubox
36 56 0.067344790 ubox
36 59 0.029840563 ubox
36 60 0.021006482 ubox
36 65 0.015436563 ubox
37 57 0.034206620 ubox
37 64 0.015355559 ubox
38 47 0.034759073 ubox
38 49 0.013325794 ubox
38 54 0.122093740 ubox
38 56 0.034438167 ubox
38 59 0.020991049 ubox
39 46 0.036310226 ubox
39 48 0.013319229 ubox
39 52 0.992799405 ubox
39 53 0.092214643 ubox
39 55 0.031605993 ubox
39 58 0.020990550 ubox
39 63 0.003860590 ubox
40 45 0.036231311 ubox
40 47 0.012285224 ubox
40 50 0.005616246 ubox
40 51 0.997924558 ubox
40 54 0.006479520 ubox
40 57 0.020910785 ubox
40 61 0.015463108 ubox
41 49 0.006903353 ubox
41 50 0.997968667 ubox
41 51 0.040470297 ubox
41 56 0.020887640 ubox
41 60 0.015471736 ubox
42 49 0.995214006 ubox
42 50 0.040423777 ubox
42 59 0.015436730 ubox
44 54 0.008020548 ubox
45 52 0.019457506 ubox
45 53 0.008093815 ubox
45 58 0.005528846 ubox
46 51 0.018927819 ubox
46 56 0.012455792 ubox
46 57 0.004300711 ubox
46 89 0.012887235 ubox
47 55 0.012528842 ubox
47 88 0.012908097 ubox
48 54 0.012526424 ubox
48 56 0.008088974 ubox
48 87 0.012925967 ubox
49 53 0.012478145 ubox
49 55 0.008076567 ubox
49 86 0.012868529 ubox
50 83 0.013003446 ubox
51 82 0.013115999 ubox
52 81 0.013116246 ubox
53 80 0.013108427 ubox
55 77 0.012801166 ubox
56 76 0.012777945 ubox
58 74 0.011912515 ubox
58 77 0.004737992 ubox
59 73 0.011567031 ubox
59 76 0.004709520 ubox
61 69 0.009124542 ubox
61 73 0.008815257 ubox
61 76 0.010017854 ubox
62 68 0.009020751 ubox
62 72 0.015446545 ubox
62 75 0.019650866 ubox
63 67 0.006152414 ubox
63 71 0.016014963 ubox
63 74 0.020404443 ubox
64 73 0.020205184 ubox
69 77 0.003785842 ubox
70 76 0.003683647 ubox
85 93 0.289772232 ubox
86 92 0.473308476 ubox
87 91 0.470636276 ubox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
9 82 0.9500000 lbox
10 81 0.9500000 lbox
11 80 0.9500000 lbox
13 79 0.9500000 lbox
14 78 0.9500000 lbox
16 77 0.9500000 lbox
17 76 0.9500000 lbox
18 75 0.9500000 lbox
19 74 0.9500000 lbox
20 73 0.9500000 lbox
22 69 0.9500000 lbox
23 68 0.9500000 lbox
24 67 0.9500000 lbox
25 66 0.9500000 lbox
26 65 0.9500000 lbox
27 64 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
34 57 0.9500000 lbox
35 56 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
showpage
end
%%EOF
