%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGAAAGAGGGAAAGGCUUCCCCGGCCAGCUGCGCGGCGACUCCGGGGACUCCAGGGCGCCCCUCUGCGGCCGACGCCCGGGGUGCAGCGGCCGCCGGGGCUGGGGCCGGCGGGAGUCCGCGGGACCCUCCAGAAGAGCGGCCGGCGCCGUGACUCAGCACUGGGGCGGAGCGGGGCGGGACCACCCUUAUAAGGCUCGGAGGCCGCGAGGCCUUCGCUGGAGUUUCGCCGCCGCAGUCUUCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[30.11006546 520.63909912]
[21.34796524 508.46429443]
[16.53380966 522.67077637]
[11.71965599 536.87725830]
[12.73002625 541.94702148]
[11.80311775 546.45391846]
[9.47240829 549.75842285]
[6.44704723 551.52246094]
[1.10086894 565.53741455]
[-4.24530935 579.55236816]
[-9.59148788 593.56726074]
[-2.90514112 607.88751221]
[-8.38154316 622.71258545]
[-22.77164078 629.24719238]
[-37.53804779 623.61437988]
[-43.92011261 609.15594482]
[-38.13146973 594.44995117]
[-23.60642242 588.22106934]
[-18.26024437 574.20617676]
[-12.91406536 560.19122314]
[-7.56788731 546.17626953]
[-2.48681831 532.06311035]
[2.32733583 517.85662842]
[7.14148998 503.65014648]
[11.50703239 489.29946899]
[15.41965485 474.81872559]
[19.33227730 460.33801270]
[13.92646599 443.63107300]
[27.11280251 430.76123047]
[30.84315109 416.23248291]
[34.48213959 401.68057251]
[38.02962494 387.10610962]
[41.57711029 372.53161621]
[45.12459564 357.95715332]
[48.67207718 343.38265991]
[52.12792206 328.78619385]
[55.49198151 314.16827393]
[58.85604477 299.55038452]
[62.22010422 284.93249512]
[65.58416748 270.31457520]
[68.94822693 255.69667053]
[72.12833405 241.03765869]
[75.12398529 226.33982849]
[78.11963654 211.64199829]
[81.11528015 196.94416809]
[84.11093140 182.24635315]
[87.10658264 167.54852295]
[65.38539886 87.93624878]
[52.52249908 80.21965790]
[39.65959930 72.50305939]
[26.79670143 64.78646851]
[13.93380070 57.06987762]
[1.07090092 49.35328293]
[-11.79199886 41.63669205]
[-30.00587273 46.92005157]
[-46.00909042 37.35367584]
[-49.84495926 19.43526840]
[-62.89771652 12.04435921]
[-75.95046997 4.65344858]
[-91.77153778 4.58659935]
[-99.03422546 -8.41734886]
[-112.08698273 -15.80825806]
[-125.23158264 -23.03456306]
[-138.46594238 -30.09512329]
[-151.70031738 -37.15568161]
[-164.93469238 -44.21623993]
[-180.75242615 -43.88548279]
[-188.33961487 -56.70281219]
[-201.57398987 -63.76337051]
[-214.80834961 -70.82392883]
[-228.04272461 -77.88449097]
[-241.27708435 -84.94504547]
[-254.51145935 -92.00560760]
[-267.74581909 -99.06616974]
[-287.86032104 -97.50632477]
[-297.31414795 -114.39050293]
[-310.72177124 -121.11625671]
[-324.12939453 -127.84200287]
[-337.53701782 -134.56774902]
[-354.40576172 -136.26528931]
[-357.44430542 -152.94471741]
[-342.25784302 -160.48184204]
[-330.81124878 -147.97537231]
[-317.40362549 -141.24961853]
[-303.99600220 -134.52388000]
[-290.58837891 -127.79812622]
[-281.24923706 -131.86756897]
[-270.99377441 -130.10089111]
[-263.23413086 -122.84176636]
[-260.68527222 -112.30053711]
[-247.45089722 -105.23997498]
[-234.21653748 -98.17942047]
[-220.98216248 -91.11885834]
[-207.74778748 -84.05829620]
[-194.51342773 -76.99774170]
[-181.27905273 -69.93717957]
[-166.40791321 -70.77295685]
[-157.87413025 -57.45060730]
[-144.63975525 -50.39004898]
[-131.40539551 -43.32949066]
[-118.17102051 -36.26893234]
[-113.44446564 -36.76847458]
[-108.35046387 -34.32160950]
[-104.69606781 -28.86101532]
[-91.64331055 -21.47010422]
[-76.75586700 -21.93190384]
[-68.55956268 -8.39930725]
[-55.50680542 -1.00839746]
[-42.45404816 6.38251257]
[-32.40828705 1.03705204]
[-20.91024208 1.19489574]
[-10.80679321 6.93227911]
[-4.65502691 16.92972755]
[-4.07540607 28.77379036]
[8.78749371 36.49038315]
[21.65039444 44.20697784]
[34.51329422 51.92356873]
[47.37619400 59.64016342]
[60.23909378 67.35675812]
[73.10198975 75.07334900]
[86.90547180 69.20274353]
[90.26953125 54.58484268]
[85.82430267 39.40095139]
[96.21886444 28.73313332]
[99.58292389 14.11523056]
[98.45839691 5.07643938]
[103.08219147 -0.66467047]
[106.62967682 -15.23914623]
[110.08551788 -29.83562469]
[113.44957733 -44.45352554]
[116.81364441 -59.07143021]
[109.55572510 -73.37884521]
[116.34729004 -87.91343689]
[131.97843933 -91.52549744]
[144.45828247 -81.44416809]
[144.21334839 -65.40298462]
[131.43154907 -55.70737076]
[128.06748962 -41.08946609]
[124.70342255 -26.47156334]
[126.26214600 -19.26668930]
[121.20415497 -11.69166183]
[117.65666962 2.88281441]
[114.20082855 17.47929192]
[110.83676910 32.09719467]
[115.52262115 46.23551559]
[104.88743591 57.94890213]
[101.52337646 72.56680298]
[113.98231506 80.91993713]
[126.22740173 72.25634766]
[138.47248840 63.59275818]
[145.26925659 49.30589294]
[160.12788391 48.27123260]
[172.37297058 39.60763931]
[177.55407715 32.11628723]
[184.82681274 30.91325760]
[197.17979431 22.40422440]
[209.53279114 13.89519024]
[216.50854492 -0.30513832]
[231.37899780 -1.15300548]
[243.73199463 -9.66203976]
[246.34898376 -25.24815369]
[259.26879883 -34.35054016]
[274.82638550 -31.56891632]
[283.79165649 -18.55356979]
[280.84570312 -3.02627420]
[267.73629761 5.80090094]
[252.24102783 2.69094920]
[239.88803101 11.19998360]
[233.79583740 24.79168892]
[218.04182434 26.24817848]
[205.68882751 34.75721359]
[193.33584595 43.26624680]
[181.03656006 51.85272980]
[168.79147339 60.51631927]
[162.87055969 74.18350983]
[147.13607788 75.83784485]
[134.89099121 84.50143433]
[122.64590454 93.16503143]
[127.90391541 107.21327972]
[142.82818604 105.70784760]
[157.75244141 104.20242310]
[170.73645020 94.18505096]
[185.79879761 100.67023468]
[187.44464111 116.98658752]
[173.98088074 126.34923553]
[159.25787354 119.12669373]
[144.33360291 120.63211823]
[129.40934753 122.13754272]
[127.81929016 129.46705627]
[142.47831726 132.64715576]
[157.13732910 135.82727051]
[171.79635620 139.00737000]
[186.45532227 142.18772888]
[183.27473450 156.84663391]
[168.61625671 153.66639709]
[153.95722961 150.48628235]
[139.29820251 147.30618286]
[124.63918304 144.12606812]
[123.04913330 151.45558167]
[136.00798035 159.00993347]
[148.96682739 166.56428528]
[161.92568970 174.11863708]
[174.88453674 181.67297363]
[187.84338379 189.22732544]
[200.80223083 196.78167725]
[213.76109314 204.33602905]
[230.15342712 203.86360168]
[238.52722168 217.96365356]
[230.26823425 232.13125610]
[213.87260437 231.79199219]
[206.20674133 217.29487610]
[193.24789429 209.74052429]
[180.28903198 202.18617249]
[167.33018494 194.63183594]
[154.37133789 187.07748413]
[141.41249084 179.52313232]
[128.45362854 171.96878052]
[115.49478149 164.41444397]
[101.80440521 170.54417419]
[98.80876160 185.24200439]
[95.81311035 199.93981934]
[92.81745911 214.63764954]
[89.82180786 229.33547974]
[86.82615662 244.03329468]
[88.54539490 250.37498474]
[87.04629517 255.82371521]
[83.56613159 259.06072998]
[80.20207214 273.67864990]
[76.83800507 288.29653931]
[73.47394562 302.91445923]
[70.10988617 317.53234863]
[66.74582672 332.15023804]
[67.87034607 341.18905640]
[63.24655533 346.93014526]
[59.69906998 361.50463867]
[56.15158463 376.07910156]
[52.60409927 390.65359497]
[49.05661392 405.22805786]
[50.06747055 414.28027344]
[45.37189865 419.96282959]
[41.64154816 434.49157715]
[47.51892471 445.95416260]
[44.13056183 457.96652222]
[33.81300354 464.25064087]
[29.90037918 478.73135376]
[25.98775673 493.21206665]
[40.04535294 487.97909546]
[52.96749878 495.59606934]
[55.19697189 510.42947388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[8 21]
[9 20]
[10 19]
[11 18]
[25 246]
[26 245]
[27 244]
[29 241]
[30 240]
[31 238]
[32 237]
[33 236]
[34 235]
[35 234]
[36 232]
[37 231]
[38 230]
[39 229]
[40 228]
[41 227]
[42 224]
[43 223]
[44 222]
[45 221]
[46 220]
[47 219]
[48 120]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
[57 109]
[58 108]
[59 107]
[61 105]
[62 104]
[63 101]
[64 100]
[65 99]
[66 98]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[76 86]
[77 85]
[78 84]
[79 83]
[121 147]
[122 146]
[124 144]
[125 143]
[127 142]
[128 141]
[129 139]
[130 138]
[131 137]
[148 178]
[149 177]
[150 176]
[152 174]
[153 173]
[155 172]
[156 171]
[157 170]
[159 168]
[160 167]
[179 188]
[180 187]
[181 186]
[199 218]
[200 217]
[201 216]
[202 215]
[203 214]
[204 213]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
