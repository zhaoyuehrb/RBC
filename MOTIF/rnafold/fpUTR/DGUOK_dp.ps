%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DGUOK)
} def

/sequence { (\
AACGGUGCGCUGGAGCGAGUGAGCAGCGAUACCUAGGGCGGAAGUGCUCUCGGCGGAAGUGAUCGCUGUGUGAAUCGUGGGUGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 20 0.008722490 ubox
2 60 0.003271798 ubox
2 69 0.014825987 ubox
2 71 0.035268474 ubox
2 78 0.218058267 ubox
2 82 0.040613517 ubox
3 9 0.030525762 ubox
3 12 0.074292281 ubox
3 19 0.009062195 ubox
3 21 0.004258840 ubox
3 28 0.038952053 ubox
3 59 0.003394989 ubox
3 68 0.015169099 ubox
3 70 0.036318832 ubox
3 72 0.008898249 ubox
3 77 0.224850525 ubox
3 79 0.013633412 ubox
3 81 0.041797419 ubox
3 83 0.022133630 ubox
4 8 0.029577908 ubox
4 11 0.074455774 ubox
4 20 0.004074387 ubox
4 27 0.039688924 ubox
4 33 0.138401130 ubox
4 67 0.012462831 ubox
4 76 0.222369570 ubox
4 82 0.010285380 ubox
5 10 0.073929307 ubox
5 24 0.005837047 ubox
5 30 0.005897374 ubox
5 32 0.139108936 ubox
5 66 0.012470316 ubox
5 75 0.220430543 ubox
6 17 0.013278038 ubox
6 23 0.005742460 ubox
6 25 0.039577025 ubox
6 29 0.006355065 ubox
6 31 0.139028159 ubox
6 65 0.012437797 ubox
6 72 0.008862486 ubox
6 74 0.208232686 ubox
6 79 0.004386531 ubox
6 81 0.005919666 ubox
6 83 0.046226901 ubox
7 16 0.029804536 ubox
7 24 0.039622861 ubox
7 30 0.138244171 ubox
7 64 0.012027079 ubox
7 71 0.033152352 ubox
7 78 0.005530618 ubox
7 82 0.074606451 ubox
8 15 0.029953052 ubox
8 17 0.041818078 ubox
8 21 0.076729361 ubox
8 23 0.038052538 ubox
8 28 0.141544567 ubox
8 55 0.005061262 ubox
8 61 0.011310799 ubox
8 70 0.033915708 ubox
8 72 0.195326070 ubox
8 77 0.005606638 ubox
8 79 0.008528111 ubox
8 81 0.076106603 ubox
8 83 0.939462832 ubox
9 16 0.043299136 ubox
9 20 0.086261191 ubox
9 24 0.003430086 ubox
9 27 0.141743109 ubox
9 54 0.005087892 ubox
9 60 0.011679910 ubox
9 69 0.032226593 ubox
9 71 0.198724320 ubox
9 76 0.005309088 ubox
9 78 0.007210200 ubox
9 82 0.947165289 ubox
10 15 0.043171885 ubox
10 19 0.087073563 ubox
10 23 0.003504531 ubox
10 26 0.141743898 ubox
10 53 0.005087843 ubox
10 59 0.011688932 ubox
10 68 0.032191019 ubox
10 70 0.198586367 ubox
10 77 0.006946225 ubox
10 80 0.078125626 ubox
10 81 0.947510709 ubox
10 84 0.118039692 ubox
10 85 0.027451791 ubox
11 17 0.005960205 ubox
11 18 0.086580717 ubox
11 22 0.003972987 ubox
11 25 0.141434334 ubox
11 28 0.006875953 ubox
11 52 0.005079199 ubox
11 58 0.011608605 ubox
11 68 0.008061687 ubox
11 70 0.008365474 ubox
11 79 0.082052271 ubox
11 80 0.897094918 ubox
11 83 0.117176024 ubox
11 84 0.027892743 ubox
12 16 0.009169907 ubox
12 24 0.131249572 ubox
12 27 0.008509783 ubox
12 51 0.005062558 ubox
12 69 0.157609946 ubox
12 76 0.003552525 ubox
12 78 0.013840535 ubox
12 82 0.100776021 ubox
13 49 0.005553465 ubox
13 76 0.011683687 ubox
14 48 0.005573032 ubox
14 67 0.187340271 ubox
14 75 0.011674891 ubox
15 24 0.055742474 ubox
15 47 0.005572948 ubox
15 54 0.010442372 ubox
15 66 0.188730958 ubox
15 69 0.035247266 ubox
15 71 0.007986084 ubox
15 78 0.936694721 ubox
16 23 0.062315942 ubox
16 46 0.005572265 ubox
16 52 0.004243171 ubox
16 53 0.009814608 ubox
16 55 0.004543439 ubox
16 65 0.188735645 ubox
16 68 0.035391075 ubox
16 70 0.008040305 ubox
16 72 0.003243981 ubox
16 77 0.962813585 ubox
17 45 0.005371240 ubox
17 51 0.005554628 ubox
17 54 0.004538073 ubox
17 64 0.188647662 ubox
17 67 0.017382467 ubox
17 69 0.006544891 ubox
17 76 0.963148659 ubox
18 50 0.005418549 ubox
18 63 0.186737736 ubox
18 67 0.034804694 ubox
18 75 0.957447973 ubox
19 27 0.011243135 ubox
19 30 0.004242945 ubox
19 49 0.003701598 ubox
19 54 0.014108780 ubox
19 63 0.017520190 ubox
19 66 0.039159544 ubox
19 71 0.011657252 ubox
19 75 0.054214080 ubox
20 26 0.011177094 ubox
20 29 0.004350888 ubox
20 52 0.018379595 ubox
20 53 0.010031321 ubox
20 59 0.003757211 ubox
20 61 0.030000105 ubox
20 62 0.033024003 ubox
20 65 0.039154069 ubox
20 70 0.006339754 ubox
20 72 0.279649205 ubox
20 74 0.102547786 ubox
20 77 0.004166026 ubox
21 27 0.003517053 ubox
21 49 0.011896835 ubox
21 51 0.024501792 ubox
21 60 0.046907384 ubox
21 64 0.039453732 ubox
21 71 0.184909861 ubox
21 76 0.006325710 ubox
22 48 0.012311708 ubox
22 50 0.024549772 ubox
22 63 0.037896136 ubox
22 75 0.006351968 ubox
23 39 0.004953868 ubox
23 47 0.012380211 ubox
23 49 0.024548158 ubox
23 54 0.004746964 ubox
23 60 0.134662347 ubox
23 69 0.965343547 ubox
23 71 0.026921158 ubox
24 38 0.004949466 ubox
24 46 0.012371629 ubox
24 53 0.004561818 ubox
24 59 0.134689690 ubox
24 61 0.033403204 ubox
24 68 0.969528286 ubox
24 70 0.024226216 ubox
25 45 0.011302828 ubox
25 48 0.024601687 ubox
25 60 0.032417893 ubox
25 67 0.969561760 ubox
25 69 0.016537575 ubox
26 39 0.004232454 ubox
26 45 0.004835219 ubox
26 47 0.024705921 ubox
26 54 0.019081977 ubox
26 60 0.046880771 ubox
26 66 0.969962100 ubox
27 38 0.004233218 ubox
27 44 0.008236490 ubox
27 46 0.024703532 ubox
27 52 0.008837526 ubox
27 53 0.015693888 ubox
27 55 0.173150069 ubox
27 59 0.048504597 ubox
27 65 0.969953927 ubox
27 77 0.003292817 ubox
28 45 0.023899534 ubox
28 51 0.010896979 ubox
28 54 0.172872871 ubox
28 64 0.969847242 ubox
28 76 0.003316027 ubox
29 50 0.008611627 ubox
29 60 0.012598675 ubox
29 63 0.966668477 ubox
29 75 0.003287632 ubox
30 59 0.022059125 ubox
30 61 0.368424442 ubox
30 62 0.863849746 ubox
30 83 0.037664093 ubox
31 60 0.520608144 ubox
31 82 0.042760853 ubox
32 38 0.007612095 ubox
32 41 0.026926929 ubox
32 53 0.759970904 ubox
32 56 0.102726864 ubox
32 59 0.456241904 ubox
32 81 0.043272309 ubox
32 84 0.003884166 ubox
32 85 0.006949063 ubox
33 37 0.007702275 ubox
33 40 0.026949464 ubox
33 52 0.783435854 ubox
33 53 0.344353363 ubox
33 55 0.106079936 ubox
33 56 0.217904347 ubox
33 59 0.340148362 ubox
33 80 0.043278999 ubox
33 83 0.003903380 ubox
33 84 0.007208541 ubox
34 52 0.342013024 ubox
34 55 0.218389981 ubox
34 58 0.338956596 ubox
34 61 0.007392659 ubox
34 70 0.005861480 ubox
34 79 0.042310689 ubox
34 83 0.007566299 ubox
35 48 0.026210430 ubox
35 50 0.929563209 ubox
35 60 0.006118378 ubox
35 69 0.006380319 ubox
35 78 0.030638158 ubox
35 82 0.006676976 ubox
36 47 0.027890408 ubox
36 49 0.949756548 ubox
36 50 0.029244428 ubox
36 51 0.012222931 ubox
36 76 0.003671218 ubox
37 47 0.003309869 ubox
37 48 0.949536463 ubox
37 49 0.030813202 ubox
37 50 0.007072015 ubox
37 67 0.006535369 ubox
37 76 0.017451295 ubox
38 45 0.028673671 ubox
38 47 0.950788573 ubox
38 48 0.003531160 ubox
38 49 0.005907348 ubox
38 54 0.305470317 ubox
38 66 0.006682660 ubox
38 75 0.007944094 ubox
38 78 0.011474639 ubox
39 44 0.029199900 ubox
39 46 0.950595031 ubox
39 52 0.032242980 ubox
39 53 0.304529761 ubox
39 55 0.005089574 ubox
39 61 0.003286828 ubox
39 65 0.006684971 ubox
39 70 0.003260314 ubox
39 72 0.004020230 ubox
39 77 0.012031566 ubox
40 45 0.842524097 ubox
40 48 0.007005869 ubox
40 49 0.004672180 ubox
40 50 0.030873961 ubox
40 51 0.039423192 ubox
40 54 0.005037021 ubox
40 60 0.003232398 ubox
40 64 0.006640793 ubox
40 71 0.003846588 ubox
40 76 0.011833166 ubox
41 47 0.007247436 ubox
41 48 0.003921055 ubox
41 49 0.044312982 ubox
41 50 0.024688110 ubox
41 51 0.300275030 ubox
41 63 0.005975534 ubox
41 75 0.009665317 ubox
42 48 0.043140488 ubox
42 50 0.248999067 ubox
42 75 0.003659701 ubox
43 50 0.163078199 ubox
43 67 0.004583027 ubox
44 49 0.229525462 ubox
44 66 0.004640120 ubox
45 55 0.006954631 ubox
45 61 0.006255885 ubox
45 65 0.004637033 ubox
45 72 0.009767290 ubox
45 74 0.003454695 ubox
46 54 0.008415371 ubox
46 60 0.008239963 ubox
46 64 0.004573972 ubox
46 71 0.012834605 ubox
47 53 0.008419078 ubox
47 59 0.008366564 ubox
47 70 0.012933407 ubox
48 52 0.007586367 ubox
48 57 0.006926379 ubox
48 58 0.007703917 ubox
48 62 0.003749825 ubox
48 73 0.010519808 ubox
49 56 0.009339439 ubox
49 59 0.003474720 ubox
49 61 0.004076992 ubox
49 72 0.011495782 ubox
50 55 0.008660820 ubox
50 56 0.006891889 ubox
50 57 0.081117904 ubox
50 58 0.003990969 ubox
50 62 0.015075685 ubox
50 73 0.005197746 ubox
50 81 0.008362853 ubox
50 85 0.010459324 ubox
51 55 0.013135363 ubox
51 56 0.105133570 ubox
51 61 0.048433396 ubox
51 68 0.134826494 ubox
51 70 0.004042623 ubox
51 72 0.006164619 ubox
51 80 0.019463282 ubox
51 83 0.003882173 ubox
51 84 0.038763172 ubox
52 60 0.037712978 ubox
52 67 0.138809706 ubox
52 71 0.003493888 ubox
53 60 0.120613947 ubox
53 66 0.139404137 ubox
53 69 0.003347317 ubox
53 78 0.019584612 ubox
53 82 0.039002833 ubox
54 59 0.268815749 ubox
54 61 0.369066604 ubox
54 65 0.139415400 ubox
54 68 0.003633394 ubox
54 77 0.019648502 ubox
54 81 0.039134928 ubox
54 83 0.007513376 ubox
55 60 0.330420356 ubox
55 64 0.138894017 ubox
55 67 0.003609041 ubox
55 76 0.019122745 ubox
55 82 0.007426704 ubox
56 63 0.093919422 ubox
56 64 0.013600076 ubox
56 66 0.003587507 ubox
56 75 0.015936742 ubox
57 63 0.016930454 ubox
57 75 0.003729496 ubox
58 67 0.006063387 ubox
59 66 0.006186799 ubox
59 75 0.006410691 ubox
59 78 0.027050751 ubox
60 65 0.005934838 ubox
60 74 0.007521471 ubox
60 77 0.036667700 ubox
61 76 0.040701087 ubox
62 69 0.004709534 ubox
62 75 0.040646509 ubox
63 68 0.004390160 ubox
63 73 0.034460513 ubox
63 74 0.028746101 ubox
63 80 0.005064695 ubox
63 84 0.007915984 ubox
64 72 0.045149481 ubox
64 79 0.006454052 ubox
64 83 0.010776843 ubox
65 71 0.044994133 ubox
65 78 0.006536968 ubox
65 82 0.010820984 ubox
66 70 0.044734239 ubox
66 77 0.006549606 ubox
66 81 0.010780975 ubox
67 80 0.010623307 ubox
68 75 0.007730003 ubox
68 76 0.004588241 ubox
69 74 0.010439010 ubox
69 77 0.020076115 ubox
70 76 0.028573849 ubox
70 78 0.004088584 ubox
71 77 0.007878417 ubox
71 79 0.003653763 ubox
72 76 0.010512804 ubox
72 78 0.003530828 ubox
74 82 0.024910555 ubox
75 81 0.025419217 ubox
75 84 0.022150716 ubox
75 85 0.016867408 ubox
76 80 0.025195135 ubox
76 83 0.030079546 ubox
76 84 0.026009261 ubox
77 82 0.019575449 ubox
8 83 0.9500000 lbox
9 82 0.9500000 lbox
10 81 0.9500000 lbox
11 80 0.9500000 lbox
15 78 0.9500000 lbox
16 77 0.9500000 lbox
17 76 0.9500000 lbox
18 75 0.9500000 lbox
23 69 0.9500000 lbox
24 68 0.9500000 lbox
25 67 0.9500000 lbox
26 66 0.9500000 lbox
27 65 0.9500000 lbox
28 64 0.9500000 lbox
29 63 0.9500000 lbox
30 62 0.9500000 lbox
32 53 0.9500000 lbox
33 52 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
