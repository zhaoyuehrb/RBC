%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPR20)
} def

/sequence { (\
GUCCGGGCUGCAUGCAGAGCUGAGAGCUGAGGACUCCCAUCUCCAGCCUGCCCGGGUGAAGCGCGGCCUGGGGUGUGCUGGCUGCCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.046013832 ubox
1 57 0.165259677 ubox
1 62 0.053857741 ubox
1 67 0.028689346 ubox
1 74 0.006633075 ubox
1 76 0.004118817 ubox
1 78 0.011977301 ubox
1 82 0.050577367 ubox
1 85 0.051629549 ubox
1 88 0.012889284 ubox
2 33 0.046116786 ubox
2 56 0.445029219 ubox
2 59 0.011525967 ubox
2 61 0.049748658 ubox
2 66 0.004520980 ubox
2 71 0.003342160 ubox
2 72 0.205329949 ubox
2 73 0.014626470 ubox
2 77 0.010929266 ubox
2 81 0.027530943 ubox
2 84 0.050762207 ubox
2 87 0.015758089 ubox
3 32 0.046143103 ubox
3 55 0.594002695 ubox
3 56 0.049789730 ubox
3 58 0.009293087 ubox
3 65 0.003233273 ubox
3 66 0.042022567 ubox
3 71 0.607596149 ubox
3 72 0.016601325 ubox
3 80 0.026335586 ubox
3 81 0.058692769 ubox
4 31 0.046107892 ubox
4 54 0.595078838 ubox
4 55 0.049183828 ubox
4 58 0.009521607 ubox
4 65 0.043142531 ubox
4 70 0.609249347 ubox
4 71 0.012606947 ubox
4 77 0.004180551 ubox
4 80 0.059092692 ubox
4 84 0.048836252 ubox
4 87 0.419465567 ubox
5 53 0.595029932 ubox
5 57 0.008955160 ubox
5 64 0.043642790 ubox
5 69 0.608956903 ubox
5 76 0.004343566 ubox
5 79 0.051877506 ubox
5 83 0.044192850 ubox
5 86 0.425920219 ubox
5 89 0.009617672 ubox
6 28 0.044686700 ubox
6 52 0.594815528 ubox
6 53 0.050131320 ubox
6 68 0.609446961 ubox
6 78 0.043254897 ubox
6 79 0.038852978 ubox
6 82 0.037313783 ubox
6 83 0.163742793 ubox
6 85 0.408675527 ubox
6 86 0.239537057 ubox
6 89 0.016104451 ubox
7 15 0.008821750 ubox
7 27 0.046099595 ubox
7 51 0.538633425 ubox
7 52 0.051937728 ubox
7 57 0.015992052 ubox
7 62 0.076706314 ubox
7 67 0.609449700 ubox
7 74 0.005461644 ubox
7 76 0.007721756 ubox
7 78 0.049759772 ubox
7 82 0.437884145 ubox
7 85 0.244323776 ubox
7 88 0.017001131 ubox
8 14 0.037407250 ubox
8 17 0.029987394 ubox
8 26 0.046106736 ubox
8 50 0.483365114 ubox
8 55 0.019002047 ubox
8 56 0.016118160 ubox
8 61 0.076761655 ubox
8 66 0.609194460 ubox
8 73 0.005478525 ubox
8 75 0.008140709 ubox
8 77 0.056742685 ubox
8 81 0.440200374 ubox
8 84 0.248253496 ubox
8 87 0.017091439 ubox
9 16 0.064692796 ubox
9 18 0.012982776 ubox
9 25 0.045817725 ubox
9 50 0.008116218 ubox
9 54 0.019436846 ubox
9 55 0.015847797 ubox
9 58 0.004456265 ubox
9 60 0.068340759 ubox
9 63 0.007211693 ubox
9 65 0.607713194 ubox
9 72 0.005054026 ubox
9 75 0.017357163 ubox
9 77 0.016921365 ubox
9 80 0.412347878 ubox
10 15 0.078763223 ubox
10 20 0.025599530 ubox
10 47 0.088966047 ubox
10 49 0.016141579 ubox
10 51 0.008770130 ubox
10 53 0.020512337 ubox
10 57 0.019399174 ubox
10 62 0.015482893 ubox
10 64 0.607521711 ubox
10 74 0.022124343 ubox
10 76 0.066648829 ubox
10 78 0.439593789 ubox
10 79 0.050156466 ubox
10 82 0.246547107 ubox
10 85 0.016700590 ubox
11 19 0.025647605 ubox
11 22 0.036621741 ubox
11 46 0.088839752 ubox
11 50 0.011165318 ubox
11 56 0.022204202 ubox
11 58 0.102532323 ubox
11 61 0.015497324 ubox
11 63 0.601471535 ubox
11 73 0.022277529 ubox
11 75 0.068687364 ubox
11 77 0.442711512 ubox
11 80 0.015882240 ubox
11 81 0.246696989 ubox
11 84 0.016730415 ubox
12 21 0.035891465 ubox
12 49 0.013784076 ubox
12 57 0.169120791 ubox
12 74 0.068035369 ubox
12 76 0.440672983 ubox
12 79 0.019592557 ubox
12 83 0.015092464 ubox
13 45 0.088076815 ubox
13 54 0.028369579 ubox
13 56 0.168037085 ubox
13 58 0.022502932 ubox
13 63 0.003308119 ubox
13 73 0.065774479 ubox
13 75 0.433622548 ubox
13 77 0.006635467 ubox
13 80 0.010449080 ubox
14 20 0.049504001 ubox
14 44 0.087885793 ubox
14 47 0.019161715 ubox
14 49 0.010432609 ubox
14 51 0.695546507 ubox
14 53 0.010284528 ubox
14 57 0.003387121 ubox
14 62 0.016589417 ubox
14 74 0.342236394 ubox
14 76 0.008883020 ubox
14 78 0.234391665 ubox
14 79 0.005784815 ubox
14 82 0.007680499 ubox
15 19 0.049170815 ubox
15 22 0.008279297 ubox
15 46 0.019112498 ubox
15 50 0.780808057 ubox
15 58 0.004833838 ubox
15 61 0.015785314 ubox
15 73 0.316527979 ubox
15 75 0.009026319 ubox
15 77 0.226485272 ubox
15 80 0.011499801 ubox
15 81 0.007109372 ubox
16 21 0.007506951 ubox
16 42 0.048158377 ubox
16 49 0.948834031 ubox
16 57 0.004397916 ubox
16 74 0.006763527 ubox
16 76 0.167268073 ubox
16 79 0.011685438 ubox
17 41 0.049238521 ubox
17 43 0.078898962 ubox
17 48 0.960772275 ubox
17 78 0.011629908 ubox
18 28 0.014917201 ubox
18 40 0.047661208 ubox
18 42 0.079393865 ubox
18 49 0.067781513 ubox
19 27 0.016351899 ubox
19 41 0.079230856 ubox
19 47 0.991758299 ubox
19 48 0.049024333 ubox
19 57 0.006965893 ubox
19 74 0.022597674 ubox
19 76 0.003948428 ubox
20 26 0.016360960 ubox
20 46 0.993195270 ubox
20 50 0.003505707 ubox
20 55 0.006546877 ubox
20 56 0.006553971 ubox
20 73 0.022722987 ubox
20 75 0.004330059 ubox
21 25 0.014743908 ubox
21 39 0.085206764 ubox
21 45 0.992939912 ubox
21 54 0.006968842 ubox
21 55 0.005831522 ubox
21 72 0.005142530 ubox
22 36 0.030185285 ubox
22 38 0.086579162 ubox
22 43 0.086088825 ubox
22 44 0.989227716 ubox
22 53 0.007350466 ubox
23 35 0.030238785 ubox
23 42 0.121213561 ubox
23 49 0.044094299 ubox
24 34 0.030109142 ubox
24 36 0.087713176 ubox
24 41 0.121424170 ubox
24 43 0.985605168 ubox
24 48 0.045290369 ubox
25 35 0.087836029 ubox
25 40 0.119067201 ubox
25 42 0.985590956 ubox
25 49 0.005385609 ubox
26 34 0.087575639 ubox
26 41 0.982933169 ubox
26 47 0.048132877 ubox
26 48 0.003884913 ubox
27 46 0.048305798 ubox
28 39 0.965307827 ubox
28 45 0.048261092 ubox
29 36 0.081296881 ubox
29 38 0.973800048 ubox
29 41 0.031850899 ubox
29 43 0.012853193 ubox
29 44 0.046835528 ubox
30 35 0.076655655 ubox
30 40 0.039660615 ubox
30 42 0.016771917 ubox
31 37 0.931574853 ubox
31 38 0.155132920 ubox
31 41 0.016362989 ubox
31 42 0.043289315 ubox
31 43 0.010285949 ubox
31 44 0.008286255 ubox
32 36 0.916645931 ubox
32 37 0.157386704 ubox
32 40 0.012289646 ubox
32 41 0.045317370 ubox
32 42 0.003893246 ubox
32 43 0.008552943 ubox
33 40 0.042024774 ubox
33 42 0.008438625 ubox
38 84 0.022250243 ubox
39 83 0.022178155 ubox
43 81 0.045231293 ubox
44 58 0.004742082 ubox
44 80 0.046623427 ubox
44 84 0.008711609 ubox
45 57 0.004699684 ubox
45 79 0.046628485 ubox
45 83 0.008787906 ubox
46 78 0.046640999 ubox
46 82 0.008798564 ubox
47 55 0.004715795 ubox
47 56 0.003275048 ubox
47 77 0.046602240 ubox
47 81 0.008798522 ubox
48 54 0.004844378 ubox
48 55 0.004375328 ubox
48 73 0.010827061 ubox
48 80 0.008787749 ubox
49 54 0.004102596 ubox
49 75 0.050771673 ubox
50 57 0.006258904 ubox
50 62 0.008429210 ubox
50 67 0.003447557 ubox
50 74 0.080792362 ubox
50 76 0.003962805 ubox
50 78 0.005481442 ubox
51 56 0.009232515 ubox
51 61 0.009105046 ubox
51 72 0.465509675 ubox
51 73 0.074199850 ubox
51 77 0.004042076 ubox
52 65 0.004078866 ubox
52 66 0.019384189 ubox
52 71 0.510491129 ubox
52 72 0.063655751 ubox
52 73 0.003425251 ubox
53 63 0.037114959 ubox
53 65 0.038589106 ubox
53 70 0.512386440 ubox
53 71 0.048021530 ubox
53 72 0.003284578 ubox
53 87 0.004885420 ubox
54 62 0.219793996 ubox
54 64 0.041826871 ubox
54 68 0.014344606 ubox
54 69 0.513581939 ubox
54 86 0.005246576 ubox
55 67 0.014505658 ubox
55 68 0.514423821 ubox
55 69 0.006342259 ubox
55 83 0.008170420 ubox
55 85 0.005214463 ubox
55 86 0.020789976 ubox
56 62 0.353549924 ubox
56 64 0.014729705 ubox
56 67 0.514405571 ubox
56 68 0.005629208 ubox
56 82 0.024293985 ubox
56 85 0.024273442 ubox
56 88 0.006104174 ubox
57 61 0.331006387 ubox
57 63 0.015791202 ubox
57 65 0.073723629 ubox
57 66 0.508339652 ubox
57 81 0.024003251 ubox
57 84 0.024001855 ubox
57 87 0.022003061 ubox
58 62 0.063571265 ubox
58 64 0.103114697 ubox
58 83 0.013822709 ubox
58 86 0.031147308 ubox
58 89 0.072341377 ubox
59 88 0.065293341 ubox
60 79 0.055086847 ubox
60 83 0.011723339 ubox
61 67 0.003342279 ubox
61 78 0.056631786 ubox
61 82 0.012136971 ubox
61 85 0.008066034 ubox
61 88 0.484926433 ubox
62 66 0.003512566 ubox
62 77 0.056638596 ubox
62 81 0.012111845 ubox
62 84 0.007849118 ubox
62 87 0.503241374 ubox
63 76 0.056602362 ubox
63 78 0.004032826 ubox
63 83 0.003667093 ubox
63 85 0.473705876 ubox
63 86 0.356448364 ubox
63 88 0.074420079 ubox
64 75 0.056463872 ubox
64 77 0.004052420 ubox
64 80 0.011499466 ubox
64 84 0.593245367 ubox
64 87 0.077650276 ubox
65 74 0.041410228 ubox
65 79 0.011582044 ubox
65 83 0.593034062 ubox
65 86 0.077968467 ubox
66 74 0.038434471 ubox
66 78 0.011596644 ubox
66 82 0.593561770 ubox
66 85 0.077957713 ubox
67 73 0.054511216 ubox
67 77 0.011558470 ubox
67 81 0.591800450 ubox
67 84 0.077632382 ubox
68 72 0.054146053 ubox
68 80 0.589431518 ubox
68 81 0.084904515 ubox
69 75 0.006558760 ubox
69 77 0.011931850 ubox
69 80 0.096688781 ubox
69 87 0.023920640 ubox
70 74 0.003546596 ubox
70 76 0.020206936 ubox
70 79 0.487776503 ubox
70 83 0.004888071 ubox
70 86 0.031656946 ubox
70 89 0.006167325 ubox
71 78 0.519377406 ubox
71 79 0.181970277 ubox
71 82 0.005223263 ubox
71 83 0.006217139 ubox
71 85 0.031584954 ubox
71 86 0.021937897 ubox
71 88 0.006594022 ubox
72 78 0.197699664 ubox
72 79 0.063287019 ubox
72 82 0.008339534 ubox
72 83 0.077871196 ubox
72 85 0.024574515 ubox
72 86 0.536593519 ubox
72 88 0.008003973 ubox
72 89 0.099137474 ubox
73 78 0.064603432 ubox
73 82 0.087401331 ubox
73 85 0.537768151 ubox
73 88 0.108155421 ubox
74 80 0.007483504 ubox
74 81 0.086861450 ubox
74 84 0.520228613 ubox
74 87 0.168352814 ubox
75 79 0.005531556 ubox
75 82 0.507652492 ubox
75 83 0.132026633 ubox
75 85 0.013862703 ubox
75 86 0.216351498 ubox
75 88 0.006972883 ubox
76 81 0.502220706 ubox
76 84 0.014012388 ubox
76 87 0.014381160 ubox
77 83 0.013376259 ubox
77 85 0.243991280 ubox
77 86 0.014847646 ubox
77 88 0.036174100 ubox
78 84 0.244564756 ubox
78 87 0.037971157 ubox
79 87 0.051209087 ubox
80 86 0.076689884 ubox
80 89 0.064922656 ubox
81 85 0.075489870 ubox
81 88 0.068596225 ubox
82 87 0.068916320 ubox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
14 51 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
17 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
72 86 0.9500000 lbox
73 85 0.9500000 lbox
74 84 0.9500000 lbox
75 82 0.9500000 lbox
76 81 0.9500000 lbox
showpage
end
%%EOF
