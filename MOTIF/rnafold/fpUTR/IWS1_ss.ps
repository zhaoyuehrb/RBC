%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUCCUUUGAGGGUCGUGGGCAGACGCCAUUUUGGCCCCAGCGGUGCUUCUAGGAAGUAGAACGCCGGCUCGCAUGCCUGCCCGCCCGCCAGCCUGCCGGGUACGGCCUUUUCCGCCGGGGCUUCCAGGUCAAAGAAUUCGCCUUUGCCGCUACCGCUUUCUUACCCUCCGCACCCGUUAAGUUCUCCGGUCGGGCGGCAGUCUCUGAACACUUAGCCGCGCCAUCCGGGGUCACACCGCCUGGAAGGAGGUGA\
CGGGGGCGGCGCGGGGCGCGGACACUCCCCGCUGAGAGUCCGCCUGCC\
) } def
/len { sequence length } bind def

/coor [
[88.10823059 234.73597717]
[85.03000641 249.41673279]
[81.95177460 264.09747314]
[88.08230591 281.48547363]
[75.81938171 294.06829834]
[72.89302063 308.78009033]
[69.96666718 323.49185181]
[75.74750519 338.83831787]
[65.13969421 351.34457397]
[49.05565262 348.14526367]
[44.04125977 332.53155518]
[55.25489044 320.56552124]
[58.18124390 305.85372925]
[61.10759735 291.14193726]
[54.65938950 280.94424438]
[56.94191360 268.68954468]
[67.27101898 261.01925659]
[70.34925079 246.33850098]
[73.42748260 231.65774536]
[76.42981720 216.96128845]
[79.35617065 202.24951172]
[82.28252411 187.53773499]
[85.20887756 172.82594299]
[88.13523102 158.11416626]
[81.31446075 154.99534607]
[67.67290497 148.75772095]
[60.85213089 145.63890076]
[51.63893890 157.47601318]
[42.42575073 169.31312561]
[33.21255875 181.15022278]
[28.25537300 197.36326599]
[11.30366039 197.08802795]
[6.87544298 180.72259521]
[21.37545013 171.93704224]
[30.58864212 160.09992981]
[39.80183411 148.26281738]
[49.01502228 136.42570496]
[45.66142273 121.82773590]
[46.10305786 107.79258728]
[49.87012482 95.23371124]
[56.28906631 84.87265015]
[43.09696198 77.73344421]
[29.90485382 70.59423065]
[16.71274757 63.45502090]
[3.52064157 56.31580734]
[-9.67146492 49.17659760]
[-22.90028381 42.10564804]
[-36.16546249 35.10314560]
[-39.12417984 46.83219528]
[-47.28239059 55.27003479]
[-58.21439743 58.42170715]
[-68.91370392 55.79215622]
[-76.61854553 48.42788315]
[-79.52439117 38.54759979]
[-93.85580444 34.11922073]
[-108.18721771 29.69083786]
[-122.51863098 25.26245689]
[-136.85005188 20.83407784]
[-151.18145752 16.40569687]
[-156.77738953 21.22114563]
[-163.62178040 23.80216217]
[-170.86848450 23.87928772]
[-177.63845825 21.48960114]
[-183.12638855 16.96660042]
[-186.69644165 10.89448643]
[-187.95579529 4.03299809]
[-202.03936768 -1.12966025]
[-216.12294006 -6.29231882]
[-230.20651245 -11.45497704]
[-244.29008484 -16.61763573]
[-255.12290955 -4.70525789]
[-269.66714478 2.11225796]
[-285.67593384 2.81449151]
[-300.68872070 -2.67678499]
[-312.40951538 -13.49014378]
[-319.05789185 -27.94264793]
[-319.63949585 -43.80173111]
[-333.77566528 -48.81857681]
[-347.91183472 -53.83541870]
[-362.07373047 -58.77915192]
[-376.26098633 -63.64964294]
[-390.44824219 -68.52013397]
[-404.63549805 -73.39062500]
[-418.82275391 -78.26112366]
[-433.01000977 -83.13161469]
[-438.03701782 -82.15295410]
[-442.50411987 -83.07747650]
[-445.78805542 -85.38349915]
[-447.55752563 -88.37921906]
[-461.58697510 -93.68714142]
[-475.88888550 -86.96175385]
[-490.72891235 -92.39768982]
[-497.30270386 -106.76990509]
[-491.71017456 -121.55162048]
[-477.26925659 -127.97311401]
[-462.54751587 -122.22460938]
[-456.27905273 -107.71661377]
[-442.24960327 -102.40869141]
[-428.13952637 -97.31887054]
[-413.95227051 -92.44837952]
[-399.76501465 -87.57788849]
[-385.57775879 -82.70739746]
[-371.39050293 -77.83690643]
[-357.20324707 -72.96640778]
[-349.89324951 -73.76256561]
[-342.89498901 -67.97158813]
[-328.75881958 -62.95474625]
[-314.62265015 -57.93790054]
[-305.64801025 -68.69350433]
[-293.51934814 -75.76170349]
[-279.67861938 -78.27870178]
[-265.77920532 -75.92312622]
[-253.48872375 -68.95697021]
[-244.28866577 -58.19659042]
[-239.29595947 -44.91707993]
[-239.12742615 -30.70120621]
[-225.04385376 -25.53854752]
[-210.96028137 -20.37588882]
[-196.87670898 -15.21323109]
[-182.79313660 -10.05057240]
[-161.17448425 -16.10440636]
[-146.75308228 2.07428169]
[-132.42166138 6.50266218]
[-118.09025574 10.93104267]
[-103.75883484 15.35942364]
[-89.42742157 19.78780365]
[-75.09600830 24.21618462]
[-66.21436310 15.91189098]
[-53.00015640 13.92905235]
[-56.83251190 -0.57312244]
[-62.02579498 -8.02568531]
[-60.62870789 -15.24497604]
[-64.31098938 -29.78598022]
[-67.99327087 -44.32698441]
[-71.67555237 -58.86798859]
[-75.35783386 -73.40898895]
[-89.51567078 -80.04900360]
[-96.04615021 -94.25769043]
[-91.86577606 -109.32615662]
[-78.94840240 -118.13951874]
[-63.39321136 -116.53638458]
[-52.54488754 -105.27370453]
[-51.52568436 -89.66937256]
[-60.81683350 -77.09127045]
[-57.13454819 -62.55027008]
[-53.45226669 -48.00926590]
[-49.76998520 -33.46826172]
[-46.08770370 -18.92725754]
[-42.33033371 -4.40547466]
[-38.49798203 10.09669971]
[-29.16296005 21.83796692]
[-15.89778137 28.84046936]
[-8.55250835 29.18247414]
[-2.53225374 35.98449326]
[10.65985203 43.12370300]
[23.85195923 50.26291275]
[37.04406357 57.40212631]
[50.23617172 64.54133606]
[63.42827606 71.68054962]
[73.55777740 62.04883194]
[86.10196686 55.88280487]
[99.91531372 53.74554062]
[113.73640442 55.83221054]
[126.30308533 61.95226669]
[136.46777344 71.54682159]
[143.30226135 83.73971558]
[158.01403809 80.81335449]
[172.72581482 77.88700104]
[187.43759155 74.96064758]
[202.10224915 71.80660248]
[216.71624756 68.42562103]
[231.33024597 65.04464722]
[245.94424438 61.66366577]
[257.64532471 51.01493454]
[271.78906250 55.68441772]
[286.40304565 52.30344009]
[301.01705933 48.92246246]
[315.63104248 45.54148483]
[330.24505615 42.16050720]
[327.71716309 37.20194244]
[326.51797485 31.19559288]
[326.94454956 24.49228668]
[329.20385742 17.51524734]
[333.39697266 10.73776150]
[339.50799561 4.65748549]
[347.39959717 -0.23136936]
[361.25778198 -5.97162104]
[375.11599731 -11.71187210]
[388.97418213 -17.45212364]
[402.83236694 -23.19237518]
[416.69055176 -28.93262672]
[422.80706787 -43.25834274]
[436.94302368 -48.88235855]
[450.56271362 -42.96292496]
[464.42089844 -48.70317841]
[478.24923706 -54.51495743]
[492.04736328 -60.39811325]
[505.84552002 -66.28127289]
[519.64361572 -72.16442871]
[533.44177246 -78.04758453]
[547.17840576 -84.07301331]
[560.85198975 -90.24007416]
[574.52557373 -96.40714264]
[577.54656982 -111.62730408]
[588.95959473 -122.14025116]
[604.37615967 -123.90354919]
[617.86822510 -116.23915863]
[624.24792480 -102.09420776]
[621.06201172 -86.90771484]
[609.53558350 -76.51919556]
[594.10083008 -74.92324066]
[580.69262695 -82.73354340]
[567.01904297 -76.56647491]
[553.34545898 -70.39941406]
[550.86071777 -66.37363434]
[545.84350586 -63.83985901]
[539.32495117 -64.24945068]
[525.52679443 -58.36629105]
[511.72866821 -52.48313522]
[497.93054199 -46.59997940]
[484.13238525 -40.71682739]
[479.23651123 -35.23044968]
[470.16113281 -34.84498596]
[456.30294800 -29.10473251]
[450.85806274 -15.28848839]
[436.88565063 -9.26964188]
[422.43081665 -15.07443333]
[408.57263184 -9.33418274]
[394.71441650 -3.59393072]
[380.85623169 2.14632058]
[366.99804688 7.88657236]
[353.13986206 13.62682343]
[353.29486084 21.12522125]
[366.43762207 28.35487747]
[353.60485840 36.12201691]
[353.75985718 43.62041473]
[367.84341431 48.78307343]
[381.92700195 53.94573212]
[396.01055908 59.10839081]
[411.63061523 56.59350967]
[420.91729736 68.23853302]
[435.00088501 73.40119171]
[449.08444214 78.56385040]
[466.03689575 78.33838654]
[470.94647217 94.56591034]
[456.71221924 103.77582550]
[443.92178345 92.64742279]
[429.83822632 87.48476410]
[415.75463867 82.32210541]
[401.14196777 85.20625305]
[390.84790039 73.19196320]
[376.76434326 68.02930450]
[362.68075562 62.86664581]
[348.59719849 57.70398712]
[333.62603760 56.77450562]
[319.01202393 60.15548325]
[304.39801025 63.53646088]
[289.78402710 66.91744232]
[275.17001343 70.29841614]
[264.51425171 80.70532227]
[249.32522583 76.27766418]
[234.71122742 79.65864563]
[220.09722900 83.03962708]
[205.48323059 86.42060089]
[203.32846069 89.15232849]
[199.76524353 90.99771881]
[195.21455383 91.31558228]
[190.36395264 89.67242432]
[175.65217590 92.59878540]
[160.94038391 95.52513885]
[146.22860718 98.45149231]
[147.70043945 126.27304077]
[131.69895935 154.05068970]
[137.29568481 167.96745300]
[142.89242554 181.88423157]
[148.48915100 195.80101013]
[154.08589172 209.71777344]
[159.68263245 223.63455200]
[172.01023865 233.55123901]
[169.58042908 248.24630737]
[175.17716980 262.16308594]
[180.77389526 276.07986450]
[195.40835571 282.04711914]
[201.45986938 296.64694214]
[195.33821106 311.21749878]
[180.67523193 317.11431885]
[166.17022705 310.83895874]
[160.42874146 296.11444092]
[166.85713196 281.67660522]
[161.26039124 267.75982666]
[155.66365051 253.84304810]
[143.73635864 244.92178345]
[145.76585388 229.23127747]
[140.16911316 215.31451416]
[134.57238770 201.39773560]
[128.97564697 187.48097229]
[123.37891388 173.56419373]
[117.78218079 159.64741516]
[102.84701538 161.04052734]
[99.92065430 175.75230408]
[96.99430084 190.46408081]
[94.06794739 205.17585754]
[91.14159393 219.88764954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[5 14]
[6 13]
[7 12]
[20 303]
[21 302]
[22 301]
[23 300]
[24 299]
[27 37]
[28 36]
[29 35]
[30 34]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 152]
[48 151]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[77 108]
[78 107]
[79 106]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[89 98]
[90 97]
[129 150]
[130 149]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
[166 271]
[167 270]
[168 269]
[169 268]
[170 264]
[171 263]
[172 262]
[173 261]
[175 259]
[176 258]
[177 257]
[178 256]
[179 255]
[186 232]
[187 231]
[188 230]
[189 229]
[190 228]
[191 227]
[194 224]
[195 223]
[196 221]
[197 220]
[198 219]
[199 218]
[200 217]
[201 214]
[202 213]
[203 212]
[236 254]
[237 253]
[238 252]
[239 251]
[241 249]
[242 248]
[243 247]
[273 298]
[274 297]
[275 296]
[276 295]
[277 294]
[278 293]
[280 291]
[281 290]
[282 289]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
