%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUAGAGGCUCCAGAAGAAGACUGGUCUCUCCCACCACACAGAGGCCUGGAGGAGGCAGAGGCCAGGAGGGAGAGGUCCCAAGAGCCUGUGAAAUGGGUCUGGCCUGGCUCCCAGCUGGGCAGGAACACAGGACUUCAGGACACUAAGGACCCUGUCAUGCCCAUGGCCAGCACCCACCAGUGCUGGUGCCUGCCUGUCCAGAGCUGACCAGGGAG\
) } def
/len { sequence length } bind def

/coor [
[293.15499878 259.74938965]
[292.85153198 250.33451843]
[280.64050293 241.62298584]
[268.42947388 232.91146851]
[256.45431519 234.59753418]
[246.21075439 227.44422913]
[243.49995422 214.83763123]
[231.41572571 205.95104980]
[216.77587891 208.44313049]
[204.39414978 199.60301208]
[201.87950134 184.23049927]
[189.79525757 175.34391785]
[177.71102905 166.45732117]
[162.87387085 165.15048218]
[156.34011841 150.74143982]
[144.25588989 141.85485840]
[132.17166138 132.96826172]
[120.08742523 124.08168793]
[110.60789490 129.51109314]
[99.84109497 131.35931396]
[89.09357452 129.40206909]
[79.66954803 123.87687683]
[72.71263885 115.45420074]
[58.27141953 119.51020050]
[43.83020020 123.56620026]
[29.38897896 127.62220764]
[14.94775867 131.67820740]
[0.50653797 135.73420715]
[-13.93468285 139.79020691]
[-28.37590408 143.84620667]
[-42.81712341 147.90220642]
[-54.01104736 159.08283997]
[-68.35636902 155.07522583]
[-82.79759216 159.13122559]
[-93.99151611 170.31187439]
[-108.33683777 166.30426025]
[-122.77805328 170.36026001]
[-127.97444916 182.78312683]
[-139.21197510 189.84332275]
[-152.27055359 189.15403748]
[-162.39640808 181.19046021]
[-176.89457703 185.03793335]
[-191.39274597 188.88540649]
[-202.62850952 200.83068848]
[-218.52713013 196.81002808]
[-222.73347473 180.95951843]
[-210.92042542 169.58480835]
[-195.24021912 174.38723755]
[-180.74205017 170.53976440]
[-166.24388123 166.69229126]
[-158.42672729 151.79901123]
[-141.93124390 147.07701111]
[-126.83406067 155.91903687]
[-112.39283752 151.86303711]
[-102.23184967 140.97250366]
[-86.85359192 144.69000244]
[-72.41236877 140.63400269]
[-62.25138092 129.74348450]
[-46.87312698 133.46098328]
[-32.43190384 129.40498352]
[-17.99068260 125.34898376]
[-3.54946280 121.29298401]
[10.89175797 117.23698425]
[25.33297920 113.18098450]
[39.77420044 109.12498474]
[54.21541977 105.06898499]
[68.65663910 101.01297760]
[65.22035217 96.44351196]
[62.50763702 90.97924042]
[60.69469452 84.74018860]
[48.35939026 76.20553589]
[36.02408600 67.67089081]
[23.68878174 59.13623810]
[7.30904675 58.33854675]
[0.05165390 43.63268661]
[9.38238716 30.14678955]
[25.70258713 31.75398636]
[32.22343445 46.80093384]
[44.55873871 55.33558273]
[56.89404297 63.87023544]
[69.22934723 72.40488434]
[75.92168427 69.01923370]
[65.34582520 58.38196945]
[72.19451141 45.03672791]
[87.00292206 47.42649078]
[89.30635071 62.24792099]
[95.99868774 58.86226654]
[96.43095398 43.86849976]
[96.86322784 28.87472725]
[97.29549408 13.88095760]
[97.72776031 -1.11281216]
[98.16003418 -16.10658264]
[92.36419678 -19.72367668]
[88.00019836 -24.91304016]
[85.46952057 -31.14792252]
[84.98962402 -37.80804825]
[86.57566833 -44.24131012]
[90.04205322 -49.82759857]
[95.02355957 -54.03859329]
[101.01359558 -56.48765945]
[102.73908997 -71.38808441]
[104.46457672 -86.28851318]
[98.36611176 -100.88711548]
[107.51609802 -112.63986206]
[109.24158478 -127.54028320]
[110.96707153 -142.44070435]
[112.69256592 -157.34114075]
[114.41805267 -172.24156189]
[116.14353943 -187.14198303]
[117.86903381 -202.04241943]
[119.59452057 -216.94284058]
[115.41033173 -233.37236023]
[130.03947449 -241.94116211]
[142.32316589 -230.25581360]
[134.49494934 -215.21734619]
[132.76945496 -200.31692505]
[131.04396057 -185.41650391]
[129.31848145 -170.51606750]
[127.59298706 -155.61564636]
[125.86750031 -140.71522522]
[124.14201355 -125.81479645]
[122.41652679 -110.91436768]
[128.63841248 -97.38154602]
[119.36500549 -84.56302643]
[117.63951111 -69.66259766]
[115.91402435 -54.76217270]
[127.47805786 -34.74124146]
[113.15380096 -15.67431259]
[112.72153473 -0.68054277]
[112.28926086 14.31322765]
[111.85699463 29.30699730]
[111.42472839 44.30076599]
[110.99245453 59.29453659]
[132.98547363 83.77108765]
[128.97401428 111.99745178]
[141.05824280 120.88404083]
[153.14247131 129.77062988]
[165.22669983 138.65721130]
[180.92820740 140.59968567]
[186.59762573 154.37309265]
[198.68185425 163.25968933]
[210.76608276 172.14627075]
[226.18945312 169.96514893]
[238.31799316 179.14955139]
[240.30230713 193.86682129]
[252.38653564 202.75340271]
[270.73281860 204.36090088]
[277.14099121 220.70043945]
[289.35202026 229.41195679]
[301.56304932 238.12347412]
[322.98205566 238.88674927]
[330.71463013 258.02532959]
[343.29077148 266.20095825]
[355.86688232 274.37658691]
[368.44302368 282.55221558]
[381.01916504 290.72781372]
[393.65386963 298.81262207]
[406.34652710 306.80618286]
[419.03915405 314.79974365]
[427.96331787 316.72323608]
[431.85595703 323.00103760]
[444.43206787 331.17666626]
[457.19573975 326.88488770]
[469.91555786 330.67095947]
[478.01361084 340.93853760]
[478.71044922 353.80187988]
[491.16744995 362.15789795]
[503.62448120 370.51391602]
[519.39526367 371.77593994]
[525.65466309 385.29147339]
[538.11163330 393.64749146]
[550.56866455 402.00347900]
[563.08557129 410.26953125]
[575.66168213 418.44515991]
[590.93377686 415.37908936]
[603.57135010 423.84948730]
[606.40020752 438.42797852]
[618.97637939 446.60360718]
[631.55249023 454.77923584]
[644.12866211 462.95486450]
[656.70477295 471.13049316]
[673.10070801 471.45581055]
[680.77886963 485.94644165]
[671.84063721 499.69561768]
[655.48089600 498.55941772]
[648.52911377 483.70663452]
[635.95300293 475.53100586]
[623.37689209 467.35537720]
[610.80072021 459.17974854]
[598.22460938 451.00411987]
[583.75262451 454.33547974]
[570.88220215 446.22338867]
[567.48608398 431.02127075]
[554.90997314 422.84564209]
[547.59259033 421.83593750]
[542.21264648 414.46051025]
[529.75567627 406.10449219]
[517.29864502 397.74847412]
[502.41885376 397.08410645]
[495.26846313 382.97091675]
[482.81146240 374.61489868]
[470.35443115 366.25891113]
[454.00524902 370.21130371]
[439.57324219 360.93142700]
[436.25643921 343.75280762]
[423.68032837 335.57717896]
[411.04559326 327.49237061]
[398.35296631 319.49880981]
[385.66030884 311.50527954]
[378.32916260 310.60110474]
[372.84353638 303.30395508]
[360.26739502 295.12832642]
[347.69125366 286.95269775]
[335.11514282 278.77706909]
[322.53900146 270.60144043]
[314.27798462 273.83062744]
[305.32055664 272.88488770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[7 146]
[8 145]
[11 142]
[12 141]
[13 140]
[15 138]
[16 137]
[17 136]
[18 135]
[23 67]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[31 59]
[33 57]
[34 56]
[36 54]
[37 53]
[41 50]
[42 49]
[43 48]
[70 81]
[71 80]
[72 79]
[73 78]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[100 126]
[101 125]
[102 124]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[111 115]
[152 215]
[153 214]
[154 213]
[155 212]
[156 211]
[157 209]
[158 208]
[159 207]
[161 206]
[162 205]
[166 202]
[167 201]
[168 200]
[170 198]
[171 197]
[172 196]
[173 194]
[174 193]
[177 190]
[178 189]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
