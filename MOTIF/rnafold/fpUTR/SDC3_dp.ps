%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SDC3)
} def

/sequence { (\
ACAAAGGCGCCCGCCCGCCGCCCGCCGCCCGCGCCCGCGCCGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
6 12 0.003875391 ubox
6 15 0.058914629 ubox
6 16 0.004798206 ubox
6 19 0.148565645 ubox
6 22 0.136197527 ubox
6 23 0.014588761 ubox
6 26 0.064625048 ubox
6 29 0.026964225 ubox
6 35 0.305654678 ubox
6 36 0.028159415 ubox
6 41 0.746597998 ubox
6 44 0.479336062 ubox
6 47 0.255600179 ubox
7 11 0.003818115 ubox
7 14 0.059138970 ubox
7 15 0.003592567 ubox
7 18 0.148764501 ubox
7 21 0.136779806 ubox
7 22 0.011886927 ubox
7 25 0.064717423 ubox
7 28 0.027067655 ubox
7 34 0.306984921 ubox
7 35 0.020493279 ubox
7 38 0.013612610 ubox
7 40 0.747525943 ubox
7 43 0.479910845 ubox
7 46 0.257798975 ubox
8 13 0.059140169 ubox
8 17 0.148762905 ubox
8 20 0.137012323 ubox
8 24 0.064716221 ubox
8 27 0.027102442 ubox
8 33 0.307593572 ubox
8 37 0.013650562 ubox
8 39 0.747526780 ubox
8 42 0.479849859 ubox
8 45 0.257781749 ubox
9 16 0.144270171 ubox
9 18 0.092597871 ubox
9 19 0.100796119 ubox
9 21 0.007857061 ubox
9 23 0.064476677 ubox
9 25 0.017503234 ubox
9 26 0.020880373 ubox
9 32 0.307583289 ubox
9 34 0.006905122 ubox
9 36 0.013754921 ubox
9 38 0.747500905 ubox
9 40 0.197146408 ubox
9 41 0.435397580 ubox
9 43 0.095449554 ubox
9 44 0.238116082 ubox
9 46 0.007477793 ubox
10 17 0.130540495 ubox
10 20 0.007919674 ubox
10 24 0.024536674 ubox
10 31 0.307122854 ubox
10 33 0.006874042 ubox
10 37 0.745827592 ubox
10 39 0.277816879 ubox
10 42 0.134617939 ubox
10 45 0.007484632 ubox
12 20 0.044565610 ubox
12 24 0.003617136 ubox
12 27 0.050131160 ubox
12 31 0.012625250 ubox
12 33 0.644360005 ubox
12 37 0.281998922 ubox
12 39 0.405332703 ubox
12 42 0.110943888 ubox
13 19 0.043720477 ubox
13 21 0.056612692 ubox
13 25 0.017878922 ubox
13 26 0.048172703 ubox
13 28 0.299362913 ubox
13 30 0.020684421 ubox
13 32 0.645853963 ubox
13 34 0.340754626 ubox
13 36 0.296860946 ubox
13 38 0.409608875 ubox
13 40 0.075978229 ubox
13 41 0.110907593 ubox
13 43 0.163253709 ubox
13 44 0.003489145 ubox
13 46 0.005826236 ubox
14 20 0.056607979 ubox
14 24 0.022121736 ubox
14 27 0.299264664 ubox
14 31 0.644972309 ubox
14 33 0.336607808 ubox
14 37 0.409289307 ubox
14 39 0.074505534 ubox
14 42 0.162662602 ubox
14 45 0.005828626 ubox
16 24 0.084568565 ubox
16 27 0.180914885 ubox
16 31 0.309381482 ubox
16 33 0.489736205 ubox
16 37 0.058874700 ubox
16 39 0.132760409 ubox
16 42 0.040751318 ubox
16 45 0.008065635 ubox
17 23 0.083460901 ubox
17 25 0.315760743 ubox
17 26 0.152267847 ubox
17 28 0.604687390 ubox
17 30 0.305888864 ubox
17 32 0.505106804 ubox
17 34 0.166663002 ubox
17 36 0.059578532 ubox
17 38 0.140039856 ubox
17 40 0.154606033 ubox
17 41 0.050230172 ubox
17 43 0.024256703 ubox
17 44 0.007267134 ubox
17 46 0.035195969 ubox
18 24 0.330833609 ubox
18 27 0.593906106 ubox
18 31 0.503631606 ubox
18 33 0.133040737 ubox
18 37 0.114973261 ubox
18 39 0.145775581 ubox
18 42 0.024492795 ubox
18 45 0.035131507 ubox
19 27 0.192551757 ubox
19 31 0.085510749 ubox
19 33 0.127286781 ubox
19 37 0.158917117 ubox
19 39 0.082672950 ubox
19 42 0.006263970 ubox
19 45 0.004100729 ubox
20 26 0.221265591 ubox
20 28 0.574769489 ubox
20 30 0.078331805 ubox
20 32 0.162549507 ubox
20 34 0.065280698 ubox
20 36 0.178761730 ubox
20 38 0.099680244 ubox
20 40 0.015441184 ubox
20 41 0.006603266 ubox
20 43 0.039917250 ubox
20 44 0.006620972 ubox
20 46 0.065274228 ubox
21 27 0.575170442 ubox
21 31 0.162048679 ubox
21 33 0.064172702 ubox
21 37 0.099645823 ubox
21 39 0.015314198 ubox
21 42 0.039793671 ubox
21 45 0.065250664 ubox
23 31 0.059134263 ubox
23 33 0.215748020 ubox
23 37 0.013846196 ubox
23 39 0.035078562 ubox
23 42 0.037743475 ubox
23 45 0.028650760 ubox
24 30 0.061976049 ubox
24 32 0.219315360 ubox
24 34 0.023251299 ubox
24 36 0.013827597 ubox
24 38 0.035910729 ubox
24 40 0.020672243 ubox
24 41 0.038789476 ubox
24 43 0.063897472 ubox
24 44 0.029214454 ubox
24 46 0.181270170 ubox
25 31 0.219069214 ubox
25 33 0.021473857 ubox
25 37 0.035679705 ubox
25 39 0.016285833 ubox
25 42 0.063544567 ubox
25 45 0.181336877 ubox
26 33 0.014575223 ubox
26 37 0.009994903 ubox
26 39 0.044861211 ubox
26 42 0.031697934 ubox
26 45 0.011947823 ubox
27 32 0.016817926 ubox
27 34 0.038468388 ubox
27 36 0.010195958 ubox
27 38 0.047085288 ubox
27 40 0.059442022 ubox
27 41 0.033350235 ubox
27 43 0.186377243 ubox
27 44 0.013881416 ubox
27 46 0.042191443 ubox
28 33 0.038438604 ubox
28 37 0.047044329 ubox
28 39 0.057916028 ubox
28 42 0.186321969 ubox
28 45 0.042209334 ubox
30 37 0.048586340 ubox
30 39 0.146103810 ubox
30 42 0.023565863 ubox
30 45 0.008646068 ubox
31 36 0.046447641 ubox
31 38 0.150688650 ubox
31 40 0.125199130 ubox
31 41 0.023405538 ubox
31 43 0.038686999 ubox
31 44 0.007893433 ubox
31 46 0.018847888 ubox
32 37 0.150505994 ubox
32 39 0.125774147 ubox
32 42 0.039011214 ubox
32 45 0.018883198 ubox
33 38 0.122524203 ubox
33 40 0.033204741 ubox
33 41 0.030150744 ubox
33 43 0.010688424 ubox
33 44 0.016616831 ubox
33 46 0.003456611 ubox
34 39 0.041174682 ubox
34 42 0.013667806 ubox
34 45 0.003467254 ubox
36 42 0.013021333 ubox
36 45 0.017907211 ubox
37 41 0.012482789 ubox
37 43 0.029431542 ubox
37 44 0.016950597 ubox
37 46 0.296105240 ubox
38 42 0.029967540 ubox
38 45 0.296670278 ubox
39 44 0.282488480 ubox
39 46 0.057835400 ubox
40 45 0.057808850 ubox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
14 31 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
showpage
end
%%EOF
