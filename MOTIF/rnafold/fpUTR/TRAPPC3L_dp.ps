%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRAPPC3L)
} def

/sequence { (\
UACAAAAACAAAACAAAAAGACAUGGACUGAUACACCUCUAAGAAACAGGCAAAAGAAGAGAAAUUGAAGAUCAUAUUCUUCAUCUAUCAAGCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.003998626 ubox
1 33 0.007594600 ubox
1 41 0.004917796 ubox
1 87 0.004970742 ubox
2 24 0.003996305 ubox
2 32 0.008176822 ubox
2 40 0.003662125 ubox
2 86 0.004711007 ubox
3 25 0.035238696 ubox
3 30 0.021507395 ubox
4 24 0.032278112 ubox
4 29 0.020642066 ubox
9 25 0.051426022 ubox
9 30 0.073125046 ubox
10 24 0.047095577 ubox
10 29 0.071169943 ubox
14 25 0.149072381 ubox
14 30 0.021589971 ubox
15 24 0.146057460 ubox
15 29 0.020211182 ubox
18 81 0.009039813 ubox
19 29 0.046145540 ubox
19 38 0.052251379 ubox
19 40 0.775765355 ubox
19 80 0.010040638 ubox
19 86 0.056720154 ubox
19 96 0.045978129 ubox
20 28 0.048661704 ubox
20 37 0.055414939 ubox
20 39 0.804146446 ubox
20 79 0.010169719 ubox
20 85 0.058762167 ubox
20 89 0.077157464 ubox
20 95 0.050845901 ubox
21 38 0.799664421 ubox
21 78 0.009862238 ubox
21 84 0.053646788 ubox
21 88 0.068579272 ubox
22 30 0.048193493 ubox
23 29 0.045315765 ubox
23 32 0.036208639 ubox
23 65 0.003409844 ubox
23 75 0.008177788 ubox
23 77 0.003857510 ubox
23 84 0.003923449 ubox
23 88 0.140488731 ubox
24 30 0.003267062 ubox
24 31 0.038029450 ubox
24 33 0.026332828 ubox
24 35 0.801094217 ubox
24 41 0.143306739 ubox
24 48 0.041121552 ubox
24 52 0.081108811 ubox
24 64 0.003625269 ubox
24 74 0.008590118 ubox
24 76 0.003926140 ubox
24 83 0.004515541 ubox
24 87 0.162041995 ubox
24 90 0.027935556 ubox
24 94 0.138693210 ubox
25 29 0.003532204 ubox
25 32 0.028122506 ubox
25 34 0.811563686 ubox
25 37 0.152481885 ubox
25 38 0.019049513 ubox
25 39 0.018240790 ubox
25 40 0.156699250 ubox
25 47 0.047298069 ubox
25 51 0.089747880 ubox
25 73 0.008584846 ubox
25 75 0.003695266 ubox
25 80 0.004058748 ubox
25 82 0.004215352 ubox
25 85 0.007842327 ubox
25 86 0.166898456 ubox
25 89 0.029766786 ubox
25 93 0.158125670 ubox
25 96 0.052149612 ubox
26 36 0.152237445 ubox
26 37 0.022577759 ubox
26 38 0.015745083 ubox
26 39 0.158190780 ubox
26 72 0.007576773 ubox
26 73 0.005962839 ubox
26 79 0.004130397 ubox
26 84 0.005088153 ubox
26 85 0.167242058 ubox
26 88 0.020806153 ubox
26 89 0.075225121 ubox
26 95 0.059331533 ubox
27 38 0.150827461 ubox
27 72 0.006014758 ubox
27 78 0.004086014 ubox
27 84 0.152883673 ubox
27 88 0.074976091 ubox
28 43 0.058256630 ubox
28 49 0.172789563 ubox
28 50 0.012684697 ubox
28 56 0.040700630 ubox
28 59 0.042038746 ubox
28 61 0.013826514 ubox
28 70 0.010237742 ubox
28 92 0.165790012 ubox
29 35 0.098901868 ubox
29 41 0.012197917 ubox
29 42 0.056923301 ubox
29 48 0.173183284 ubox
29 49 0.012075243 ubox
29 52 0.023807806 ubox
29 55 0.040832003 ubox
29 58 0.042069667 ubox
29 60 0.013826442 ubox
29 69 0.010153211 ubox
29 74 0.004315915 ubox
29 83 0.022577383 ubox
29 87 0.008111292 ubox
29 90 0.320634180 ubox
29 91 0.118607901 ubox
29 94 0.016680149 ubox
30 34 0.102885460 ubox
30 39 0.070538627 ubox
30 40 0.007550398 ubox
30 47 0.172560047 ubox
30 51 0.025796420 ubox
30 66 0.009326725 ubox
30 73 0.004389897 ubox
30 82 0.021112278 ubox
30 85 0.077040110 ubox
30 86 0.005884175 ubox
30 89 0.362245210 ubox
30 93 0.018673143 ubox
31 38 0.067007005 ubox
31 65 0.011616805 ubox
31 72 0.004384457 ubox
31 81 0.015596758 ubox
31 84 0.074365105 ubox
31 88 0.361610282 ubox
32 41 0.020735328 ubox
32 64 0.011369989 ubox
32 71 0.004280110 ubox
32 83 0.059139324 ubox
32 87 0.358003966 ubox
33 40 0.020564663 ubox
33 86 0.326674993 ubox
34 67 0.003663568 ubox
35 66 0.003928507 ubox
36 50 0.249721969 ubox
37 43 0.057629410 ubox
37 49 0.251141357 ubox
37 50 0.018727011 ubox
37 56 0.016983488 ubox
37 59 0.038721395 ubox
37 61 0.378217720 ubox
37 92 0.003264041 ubox
38 42 0.052125774 ubox
38 44 0.046532094 ubox
38 48 0.238142653 ubox
38 49 0.012540117 ubox
38 50 0.046145447 ubox
38 55 0.016341104 ubox
38 57 0.060872349 ubox
38 58 0.028257241 ubox
38 60 0.379688576 ubox
38 62 0.028594643 ubox
39 43 0.051088513 ubox
39 49 0.067014507 ubox
39 50 0.033012678 ubox
39 56 0.068810331 ubox
39 59 0.379887618 ubox
39 61 0.030034998 ubox
40 48 0.065678490 ubox
40 49 0.033900983 ubox
40 55 0.066875392 ubox
40 58 0.368360189 ubox
40 60 0.029135553 ubox
42 86 0.024315461 ubox
42 96 0.013520916 ubox
43 85 0.025627483 ubox
43 89 0.017429332 ubox
43 95 0.014765695 ubox
44 84 0.025399628 ubox
44 88 0.016983498 ubox
48 86 0.018980327 ubox
48 96 0.462301483 ubox
49 85 0.019685472 ubox
49 86 0.006792620 ubox
49 89 0.018895625 ubox
49 95 0.512472573 ubox
49 96 0.074207110 ubox
50 84 0.018882154 ubox
50 85 0.007057612 ubox
50 88 0.016943355 ubox
50 93 0.681046541 ubox
50 95 0.081927657 ubox
51 92 0.680875682 ubox
52 66 0.004091712 ubox
53 65 0.004546293 ubox
53 66 0.004172329 ubox
54 65 0.004734263 ubox
54 66 0.008635118 ubox
54 81 0.006107990 ubox
55 65 0.010655087 ubox
55 66 0.004905636 ubox
55 80 0.007232341 ubox
55 86 0.155184234 ubox
55 96 0.026171770 ubox
56 65 0.006194044 ubox
56 66 0.005057263 ubox
56 79 0.007363786 ubox
56 82 0.079099037 ubox
56 85 0.162004471 ubox
56 89 0.722548193 ubox
56 95 0.028868404 ubox
57 65 0.006529441 ubox
57 66 0.021458332 ubox
57 78 0.007344771 ubox
57 81 0.079042548 ubox
57 84 0.160147260 ubox
57 88 0.718251927 ubox
58 65 0.026062040 ubox
58 66 0.005266783 ubox
58 77 0.007168508 ubox
58 80 0.078767504 ubox
58 81 0.003363182 ubox
58 86 0.347303319 ubox
58 96 0.011125898 ubox
59 65 0.005600068 ubox
59 66 0.014922755 ubox
59 79 0.078693938 ubox
59 81 0.080010761 ubox
59 82 0.094135490 ubox
59 85 0.355982817 ubox
59 89 0.261318156 ubox
59 95 0.012253468 ubox
60 65 0.020049264 ubox
60 66 0.006558553 ubox
60 78 0.077873310 ubox
60 80 0.105769840 ubox
60 81 0.069211324 ubox
60 84 0.354502507 ubox
60 86 0.737899076 ubox
60 88 0.258474194 ubox
60 96 0.007165540 ubox
61 65 0.006307613 ubox
61 73 0.006862407 ubox
61 77 0.068312615 ubox
61 78 0.004591269 ubox
61 79 0.124188921 ubox
61 80 0.024295151 ubox
61 82 0.016813436 ubox
61 85 0.746627696 ubox
61 89 0.146260453 ubox
61 95 0.007771962 ubox
62 72 0.006567343 ubox
62 77 0.007784658 ubox
62 78 0.123875669 ubox
62 81 0.016524381 ubox
62 84 0.740971704 ubox
62 88 0.143814008 ubox
63 77 0.117849989 ubox
63 78 0.025110984 ubox
63 80 0.014379433 ubox
63 81 0.004905220 ubox
64 72 0.008707828 ubox
64 75 0.021515539 ubox
64 77 0.028986751 ubox
64 80 0.004058424 ubox
64 84 0.087197001 ubox
64 88 0.013320237 ubox
65 71 0.009117666 ubox
65 74 0.017339459 ubox
65 76 0.029412297 ubox
65 83 0.083672488 ubox
65 87 0.014735031 ubox
65 91 0.010273417 ubox
66 70 0.008261574 ubox
66 74 0.144689242 ubox
66 83 0.956896652 ubox
66 90 0.010862396 ubox
67 73 0.146941121 ubox
67 79 0.017882516 ubox
67 82 0.988147531 ubox
67 85 0.003340425 ubox
67 89 0.010907076 ubox
68 72 0.127846997 ubox
68 78 0.017864659 ubox
68 81 0.987940432 ubox
68 88 0.010747760 ubox
69 77 0.017539421 ubox
69 80 0.987814178 ubox
69 86 0.010413707 ubox
70 78 0.004114930 ubox
70 79 0.988347470 ubox
70 85 0.010577385 ubox
71 77 0.031238862 ubox
71 78 0.974260042 ubox
71 84 0.010493593 ubox
72 76 0.039100590 ubox
72 83 0.009908661 ubox
85 92 0.027226022 ubox
86 91 0.026738873 ubox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
50 93 0.9500000 lbox
51 92 0.9500000 lbox
56 89 0.9500000 lbox
57 88 0.9500000 lbox
60 86 0.9500000 lbox
61 85 0.9500000 lbox
62 84 0.9500000 lbox
66 83 0.9500000 lbox
67 82 0.9500000 lbox
68 81 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
showpage
end
%%EOF
