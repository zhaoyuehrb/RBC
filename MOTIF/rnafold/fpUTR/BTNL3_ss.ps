%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUACUCCUCAUUCAUACAGCCAUGUUUAGGGAGGCUCUAGGGAGAAAUGCACAGUUUGACAUCGUUCAUGAAGAGCCUCUCCACGGCUCCUGCGCCUGAGACAGCUGGCCUGACCUCCAAAUCAUCCAUCCACCCCUGCUGUCAUCUGUUUUCAUAGUGUGAGAUCAACCCACAGGAAUAUCC\
) } def
/len { sequence length } bind def

/coor [
[58.00302887 217.07560730]
[50.69772339 230.17646790]
[40.69919586 241.35812378]
[28.49344826 250.07704163]
[14.67378139 255.90943909]
[-0.08805619 258.57180786]
[-15.07452011 257.93469238]
[-29.55714798 254.02912903]
[-42.83196640 247.04492188]
[-54.25370789 237.32156372]
[-63.26718903 225.33168030]
[-69.43428040 211.65809631]
[-72.45520782 196.96543884]
[-72.18313599 181.96791077]
[-68.63127899 167.39450073]
[-61.97229767 153.95359802]
[-52.52986526 142.29852295]
[-40.76296616 132.99583435]
[-27.24356079 126.49771118]
[-12.63308048 123.12049866]
[-27.11645889 119.21772003]
[-41.59983826 115.31493378]
[-56.93784714 119.19513702]
[-67.21363831 108.41287231]
[-81.69702148 104.51008606]
[-85.89875031 105.79579163]
[-89.88619995 105.67559052]
[-93.24011993 104.39248657]
[-95.66470337 102.30155945]
[-97.01356506 99.81944275]
[-111.19864655 94.94261169]
[-125.38372803 90.06578064]
[-139.56880188 85.18894958]
[-153.75389099 80.31211853]
[-167.93896484 75.43528748]
[-182.12405396 70.55845642]
[-196.30912781 65.68162537]
[-210.49421692 60.80479050]
[-224.67929077 55.92795944]
[-238.38520813 65.82114410]
[-255.12124634 65.60621643]
[-268.30435181 55.56551361]
[-272.86679077 39.80739975]
[-287.13262939 35.17214203]
[-301.39849854 30.53688812]
[-315.35333252 37.45790100]
[-329.75488281 32.55387115]
[-336.26702881 19.20741844]
[-350.53286743 14.57216263]
[-364.79870605 9.93690777]
[-379.10339355 5.42294693]
[-393.44589233 1.03060520]
[-408.23205566 7.25551224]
[-422.24835205 -0.54979467]
[-424.74270630 -16.39775276]
[-413.80166626 -28.13116455]
[-397.81823730 -26.74916077]
[-389.05355835 -13.31189632]
[-374.71105957 -8.91955471]
[-367.37796021 -9.96958065]
[-360.16345215 -4.32893991]
[-345.89761353 0.30631486]
[-331.63177490 4.94156981]
[-318.51849365 -2.02820468]
[-303.98486328 2.46938062]
[-296.76324463 16.27104187]
[-282.49737549 20.90629578]
[-268.23153687 25.54155159]
[-258.19412231 16.71943474]
[-245.00123596 13.99286175]
[-232.08288574 18.18007469]
[-222.85191345 28.28746033]
[-219.80245972 41.74287796]
[-205.61738586 46.61970901]
[-191.43229675 51.49654388]
[-177.24722290 56.37337494]
[-163.06213379 61.25020599]
[-148.87705994 66.12703705]
[-134.69197083 71.00386810]
[-120.50689697 75.88069916]
[-106.32181549 80.75753021]
[-92.13673401 85.63436127]
[-77.79423523 90.02670288]
[-63.31085587 93.92948914]
[-49.00879288 89.77012634]
[-37.69705200 100.83155060]
[-23.21367455 104.73433685]
[-8.73029518 108.63712311]
[6.25618935 109.27374268]
[21.01837158 106.61328888]
[35.78055191 103.95284271]
[50.54273605 101.29239655]
[65.30491638 98.63194275]
[68.40836334 83.57273102]
[77.88061523 70.97496033]
[92.16840363 63.45157242]
[108.68637085 62.73557663]
[124.28355408 69.29273224]
[135.84445190 82.17005157]
[148.74908447 74.52346802]
[161.58834839 66.76759338]
[174.36128235 58.90298462]
[187.13421631 51.03837585]
[199.90715027 43.17376709]
[212.68008423 35.30915833]
[225.45303345 27.44454956]
[233.14755249 13.62048149]
[248.04191589 13.53601742]
[260.81484985 5.67140818]
[264.58294678 -9.44279957]
[277.64855957 -17.23667717]
[292.03442383 -13.55123806]
[304.80734253 -21.41584778]
[301.22686768 -36.11398315]
[302.36560059 -51.19902420]
[308.11199951 -65.19309235]
[317.90310669 -76.72518921]
[330.77969360 -84.66551971]
[345.48022461 -88.23616791]
[360.56451416 -87.08732605]
[374.55471802 -81.33153534]
[386.08026123 -71.53269196]
[394.01196289 -58.65079498]
[397.57275391 -43.94787216]
[396.41378784 -28.86437225]
[390.64865112 -14.87801838]
[380.84207153 -3.35905290]
[367.95486450 4.56401348]
[353.24957275 8.11495972]
[338.16683960 6.94589949]
[324.18435669 1.17136610]
[312.67196655 -8.64291000]
[299.89901733 -0.77830118]
[296.71328735 13.72640896]
[283.87173462 21.88419533]
[268.67947388 18.44434547]
[255.90652466 26.30895424]
[249.12561035 39.57049179]
[233.31764221 40.21748734]
[220.54469299 48.08209610]
[207.77175903 55.94670486]
[194.99882507 63.81131363]
[182.22589111 71.67592621]
[169.45295715 79.54053497]
[165.39637756 85.73901367]
[156.39567566 87.42811584]
[143.49102783 95.07469177]
[142.60002136 110.04821014]
[154.50677490 119.17120361]
[170.16696167 121.42272949]
[175.56384277 135.30519104]
[187.47059631 144.42819214]
[199.37734985 153.55119324]
[211.28410339 162.67419434]
[223.19087219 171.79719543]
[235.09762573 180.92019653]
[251.34785461 185.75405884]
[251.20140076 202.70738220]
[234.87008667 207.25979614]
[225.97462463 192.82695007]
[214.06787109 183.70394897]
[202.16111755 174.58094788]
[190.25434875 165.45794678]
[178.34759521 156.33494568]
[166.44084167 147.21195984]
[151.63230896 145.61297607]
[145.38377380 131.07795715]
[133.47702026 121.95496368]
[123.04807281 131.64511108]
[110.15572357 136.89108276]
[96.55799866 137.21926880]
[84.02615356 132.81091309]
[74.11396027 124.44993591]
[67.96536255 113.39412689]
[53.20318222 116.05457306]
[38.44100189 118.71502686]
[23.67881966 121.37547302]
[8.91663837 124.03592682]
[23.19200325 128.64178467]
[36.11114120 136.26385498]
[47.04608154 146.53161621]
[55.46529007 158.94599915]
[60.95953369 172.90354919]
[63.26173782 187.72583008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 88]
[21 87]
[22 86]
[24 84]
[25 83]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[37 75]
[38 74]
[39 73]
[43 68]
[44 67]
[45 66]
[48 63]
[49 62]
[50 61]
[51 59]
[52 58]
[89 178]
[90 177]
[91 176]
[92 175]
[93 174]
[99 147]
[100 146]
[101 144]
[102 143]
[103 142]
[104 141]
[105 140]
[106 139]
[108 137]
[109 136]
[112 133]
[113 132]
[148 168]
[149 167]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
