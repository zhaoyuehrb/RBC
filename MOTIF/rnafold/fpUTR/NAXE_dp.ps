%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NAXE)
} def

/sequence { (\
GGGCCGGGCCGGGCCGGGGGCGCGCGCUCUGCGAGCUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.023000622 ubox
1 15 0.235057481 ubox
1 28 0.004072165 ubox
1 29 0.304872616 ubox
1 30 0.027132651 ubox
1 37 0.095919331 ubox
2 9 0.022872210 ubox
2 10 0.055703862 ubox
2 14 0.233982035 ubox
2 15 0.491174746 ubox
2 27 0.004810402 ubox
2 28 0.307463253 ubox
2 29 0.028563550 ubox
2 36 0.100928344 ubox
2 37 0.210916218 ubox
3 9 0.055923874 ubox
3 14 0.492336115 ubox
3 21 0.027701833 ubox
3 25 0.052813036 ubox
3 27 0.309304024 ubox
3 28 0.003650853 ubox
3 32 0.695134665 ubox
3 36 0.221516579 ubox
4 8 0.055594899 ubox
4 12 0.234072068 ubox
4 13 0.492359298 ubox
4 17 0.158658291 ubox
4 18 0.183660231 ubox
4 19 0.009195448 ubox
4 20 0.027320192 ubox
4 24 0.037634667 ubox
4 26 0.309266179 ubox
4 31 0.694531012 ubox
4 35 0.221632780 ubox
4 39 0.024801562 ubox
5 11 0.235317592 ubox
5 12 0.491672019 ubox
5 16 0.159289714 ubox
5 17 0.184002735 ubox
5 18 0.009317968 ubox
5 19 0.026812484 ubox
5 22 0.004740513 ubox
5 24 0.312433307 ubox
5 26 0.004551320 ubox
5 31 0.116251450 ubox
5 33 0.184448626 ubox
5 38 0.025267449 ubox
6 10 0.221288908 ubox
6 15 0.158382661 ubox
6 21 0.004538039 ubox
6 23 0.314816697 ubox
6 25 0.006425713 ubox
6 28 0.005167651 ubox
6 29 0.706437552 ubox
6 30 0.109677790 ubox
6 32 0.150598246 ubox
6 37 0.023558037 ubox
7 14 0.157135807 ubox
7 15 0.186704208 ubox
7 27 0.007764875 ubox
7 28 0.722832035 ubox
7 29 0.115531639 ubox
7 30 0.007011312 ubox
7 36 0.022665841 ubox
7 37 0.004551219 ubox
8 14 0.187761016 ubox
8 21 0.314954145 ubox
8 23 0.005861176 ubox
8 25 0.011511875 ubox
8 27 0.732845011 ubox
8 28 0.014322637 ubox
8 29 0.004357240 ubox
8 32 0.028640266 ubox
8 36 0.006162467 ubox
9 13 0.187353604 ubox
9 17 0.011759114 ubox
9 18 0.006831855 ubox
9 19 0.009827412 ubox
9 20 0.314827276 ubox
9 22 0.005830351 ubox
9 24 0.008187397 ubox
9 26 0.732843141 ubox
9 31 0.028764413 ubox
9 35 0.007352778 ubox
9 39 0.032382546 ubox
10 16 0.011944243 ubox
10 17 0.007288989 ubox
10 18 0.013729723 ubox
10 19 0.314651794 ubox
10 24 0.732557116 ubox
10 26 0.010691945 ubox
10 31 0.004201598 ubox
10 33 0.008581058 ubox
10 38 0.033133738 ubox
11 15 0.011761776 ubox
11 23 0.732944882 ubox
11 25 0.014506735 ubox
11 29 0.029912255 ubox
11 30 0.004018238 ubox
11 32 0.007336540 ubox
11 37 0.032869256 ubox
12 28 0.030292156 ubox
12 29 0.004160493 ubox
12 36 0.031567470 ubox
12 37 0.055190040 ubox
13 21 0.733143362 ubox
13 23 0.014414035 ubox
13 25 0.005443029 ubox
13 27 0.030592371 ubox
13 32 0.007899819 ubox
13 36 0.059062752 ubox
14 20 0.733204619 ubox
14 22 0.011588814 ubox
14 24 0.005434721 ubox
14 26 0.030532486 ubox
14 31 0.007775585 ubox
14 35 0.059851372 ubox
14 39 0.005973435 ubox
15 19 0.727870666 ubox
15 22 0.010681139 ubox
15 24 0.030325012 ubox
15 31 0.005859573 ubox
15 33 0.067472612 ubox
15 38 0.007639987 ubox
16 21 0.020933346 ubox
16 23 0.030817739 ubox
16 25 0.005737461 ubox
16 29 0.004044588 ubox
16 30 0.010055024 ubox
16 32 0.075976218 ubox
16 37 0.012086562 ubox
17 28 0.004001136 ubox
17 29 0.009684694 ubox
17 30 0.089236232 ubox
17 36 0.010995335 ubox
17 37 0.038338821 ubox
18 27 0.003999742 ubox
18 28 0.008832995 ubox
18 29 0.096203082 ubox
18 30 0.041931751 ubox
18 36 0.039866329 ubox
18 37 0.037253633 ubox
19 27 0.007931495 ubox
19 28 0.096427710 ubox
19 29 0.041847925 ubox
19 36 0.029933403 ubox
19 37 0.554174885 ubox
20 27 0.105088418 ubox
20 28 0.005707248 ubox
20 36 0.582655706 ubox
21 26 0.105113850 ubox
21 33 0.044035945 ubox
21 35 0.582190575 ubox
21 38 0.024754820 ubox
22 32 0.044964762 ubox
22 36 0.083226236 ubox
22 37 0.006959166 ubox
23 31 0.044962655 ubox
23 33 0.581203871 ubox
23 35 0.083317348 ubox
23 38 0.020399524 ubox
24 30 0.036437290 ubox
24 32 0.583094170 ubox
24 36 0.003200283 ubox
24 37 0.020235487 ubox
25 31 0.582868294 ubox
25 33 0.087282664 ubox
25 38 0.012729730 ubox
26 30 0.359625936 ubox
26 32 0.087693462 ubox
26 36 0.070715679 ubox
27 31 0.087065394 ubox
27 35 0.070891493 ubox
28 34 0.070878177 ubox
29 33 0.070309026 ubox
29 35 0.003385463 ubox
29 38 0.009501717 ubox
29 39 0.003490264 ubox
30 34 0.005028929 ubox
30 38 0.007113630 ubox
31 37 0.006745488 ubox
32 38 0.042145386 ubox
33 37 0.027234502 ubox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
showpage
end
%%EOF
