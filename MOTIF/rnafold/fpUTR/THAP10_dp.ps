%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (THAP10)
} def

/sequence { (\
AGAUCGCCACUUCCGGUGACCAGAGGUAGGGAAGGAAACAAUCCCGACCCGGAGUGGACAGGUGAGGAGGGGAGGACUUGCCUCGCCGAGGCCGCUGCGAGGAGCGUGCCCAAGGGCGAAGGUCCAGGGAACCCGGCUCCCGCGCACCGAAGACGGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.004443217 ubox
3 12 0.004440891 ubox
4 19 0.069289907 ubox
4 58 0.005073794 ubox
4 89 0.022860057 ubox
4 100 0.004763771 ubox
4 156 0.042231757 ubox
5 18 0.076344664 ubox
5 57 0.003281416 ubox
5 64 0.003201212 ubox
5 88 0.024407252 ubox
5 99 0.005086934 ubox
5 155 0.057445545 ubox
5 159 0.263272315 ubox
6 17 0.076424068 ubox
6 63 0.003201058 ubox
6 87 0.004390395 ubox
6 98 0.005077369 ubox
6 145 0.004256629 ubox
6 154 0.057594960 ubox
6 157 0.960206506 ubox
6 158 0.195478836 ubox
6 160 0.022755094 ubox
7 16 0.076462028 ubox
7 52 0.003761183 ubox
7 57 0.159333710 ubox
7 97 0.005044994 ubox
7 144 0.004250691 ubox
7 156 0.981704450 ubox
7 159 0.020361826 ubox
8 15 0.076394608 ubox
8 18 0.006716399 ubox
8 51 0.003777306 ubox
8 56 0.160313477 ubox
8 155 0.980306240 ubox
9 17 0.006746651 ubox
9 27 0.014425427 ubox
9 55 0.160278535 ubox
10 16 0.006749110 ubox
10 26 0.015129517 ubox
10 54 0.159489582 ubox
10 152 0.958564744 ubox
10 156 0.010092333 ubox
11 15 0.006080519 ubox
11 25 0.015129706 ubox
11 53 0.122084239 ubox
11 54 0.015958394 ubox
11 150 0.005260412 ubox
11 151 0.960730274 ubox
11 152 0.087741901 ubox
11 153 0.027941524 ubox
11 155 0.009784347 ubox
12 24 0.015268033 ubox
12 52 0.066604480 ubox
12 53 0.103534535 ubox
12 58 0.003216837 ubox
12 150 0.957539606 ubox
12 151 0.097891396 ubox
12 152 0.027379044 ubox
12 153 0.077950199 ubox
13 23 0.015331330 ubox
13 51 0.065662961 ubox
13 52 0.145781151 ubox
13 57 0.003388603 ubox
13 149 0.677285455 ubox
13 152 0.078064639 ubox
14 51 0.146111567 ubox
14 56 0.003389237 ubox
14 149 0.712646652 ubox
15 21 0.024468786 ubox
15 49 0.063546743 ubox
15 50 0.143266193 ubox
15 55 0.003287069 ubox
15 148 0.983631489 ubox
15 161 0.005897898 ubox
16 20 0.024366268 ubox
16 48 0.066629242 ubox
16 49 0.121220319 ubox
16 145 0.003802770 ubox
16 147 0.983886870 ubox
16 160 0.005945149 ubox
17 28 0.013845168 ubox
17 46 0.006850680 ubox
17 47 0.067478358 ubox
17 144 0.003930674 ubox
17 146 0.983335400 ubox
17 159 0.005938451 ubox
18 27 0.011441649 ubox
18 45 0.007282515 ubox
18 145 0.980117644 ubox
18 158 0.005888537 ubox
19 27 0.571298531 ubox
19 55 0.004948065 ubox
20 26 0.589239582 ubox
20 30 0.012025755 ubox
20 31 0.010546409 ubox
20 52 0.714166080 ubox
20 54 0.005125957 ubox
20 57 0.021105457 ubox
20 156 0.003823460 ubox
21 25 0.585127640 ubox
21 29 0.012163752 ubox
21 30 0.010590216 ubox
21 51 0.716993965 ubox
21 56 0.021200359 ubox
21 155 0.003827864 ubox
22 55 0.021061605 ubox
25 49 0.783581840 ubox
25 50 0.073152019 ubox
25 158 0.007443175 ubox
25 161 0.010944369 ubox
26 48 0.787898347 ubox
26 49 0.068894793 ubox
26 157 0.007426891 ubox
26 160 0.010996712 ubox
27 47 0.729820494 ubox
27 156 0.003919651 ubox
27 159 0.010639049 ubox
29 44 0.011853253 ubox
29 45 0.798675634 ubox
29 49 0.034497615 ubox
29 50 0.596053124 ubox
30 43 0.011830986 ubox
30 44 0.800859550 ubox
30 45 0.011218632 ubox
30 48 0.034917861 ubox
30 49 0.596912595 ubox
30 50 0.013890474 ubox
31 42 0.008345078 ubox
31 43 0.800709530 ubox
31 44 0.010375211 ubox
31 48 0.596695421 ubox
31 49 0.013724222 ubox
32 42 0.762295079 ubox
34 43 0.006748044 ubox
34 44 0.143392075 ubox
34 45 0.580920754 ubox
35 42 0.009369124 ubox
35 43 0.156567858 ubox
35 44 0.577396707 ubox
36 42 0.161545064 ubox
43 52 0.004060281 ubox
44 51 0.004021398 ubox
44 52 0.010235358 ubox
45 51 0.011005425 ubox
46 50 0.011051097 ubox
50 94 0.003325295 ubox
50 99 0.112537491 ubox
50 144 0.004117572 ubox
50 149 0.004813986 ubox
50 159 0.027383700 ubox
51 93 0.003939434 ubox
51 96 0.007736326 ubox
51 98 0.123020885 ubox
51 148 0.005549255 ubox
51 158 0.029175312 ubox
51 161 0.004004295 ubox
52 92 0.003905016 ubox
52 95 0.005730198 ubox
52 147 0.005526107 ubox
52 157 0.029082084 ubox
52 160 0.003878824 ubox
53 96 0.934015953 ubox
54 95 0.986278903 ubox
54 160 0.003686996 ubox
55 94 0.986118982 ubox
55 159 0.003689573 ubox
56 93 0.986716105 ubox
56 158 0.003609931 ubox
57 92 0.986360546 ubox
57 157 0.003583309 ubox
61 87 0.999649165 ubox
62 86 0.999965131 ubox
63 85 0.999573736 ubox
64 84 0.999906476 ubox
65 83 0.999802302 ubox
66 82 0.999930648 ubox
67 79 0.009622364 ubox
67 81 0.997568034 ubox
67 84 0.005790198 ubox
68 78 0.049361411 ubox
68 79 0.596886357 ubox
68 83 0.006301982 ubox
69 77 0.053993886 ubox
69 78 0.604161605 ubox
69 79 0.599171109 ubox
69 82 0.007050796 ubox
69 87 0.006271051 ubox
70 77 0.604945591 ubox
70 78 0.783450879 ubox
70 79 0.101524153 ubox
70 81 0.007268882 ubox
70 86 0.006277523 ubox
71 77 0.786278980 ubox
71 78 0.103557178 ubox
71 79 0.004952593 ubox
72 77 0.104301368 ubox
72 78 0.005041237 ubox
72 79 0.007614612 ubox
72 84 0.006344111 ubox
73 78 0.007303221 ubox
73 83 0.006346525 ubox
74 82 0.006349519 ubox
75 81 0.006337562 ubox
89 96 0.005684400 ubox
90 95 0.005993031 ubox
90 110 0.003861459 ubox
90 158 0.161006433 ubox
90 161 0.011665929 ubox
91 109 0.003993195 ubox
91 157 0.161219290 ubox
91 160 0.011762256 ubox
92 108 0.004002339 ubox
92 156 0.161212849 ubox
92 159 0.011705474 ubox
93 106 0.004012045 ubox
93 155 0.161176936 ubox
94 105 0.004019912 ubox
94 145 0.031153156 ubox
94 148 0.005134236 ubox
94 154 0.158441746 ubox
94 157 0.006689112 ubox
95 104 0.004019981 ubox
95 144 0.033062384 ubox
95 152 0.151115423 ubox
95 156 0.006428129 ubox
96 103 0.003995012 ubox
96 144 0.245500076 ubox
96 146 0.052926044 ubox
96 151 0.125973029 ubox
96 155 0.005074410 ubox
97 143 0.988350666 ubox
97 145 0.075610245 ubox
98 142 0.989307459 ubox
98 144 0.076417451 ubox
98 149 0.004354760 ubox
99 141 0.989431443 ubox
99 143 0.076385806 ubox
99 148 0.004191075 ubox
101 125 0.007747778 ubox
101 139 0.004256165 ubox
101 140 0.999203931 ubox
101 141 0.033434726 ubox
101 148 0.004579976 ubox
102 124 0.007755818 ubox
102 139 0.999642249 ubox
102 140 0.023746058 ubox
102 147 0.004593657 ubox
103 123 0.007682380 ubox
103 138 0.999785430 ubox
104 137 0.999869219 ubox
104 145 0.004648525 ubox
105 135 0.196250304 ubox
105 136 0.979898659 ubox
105 144 0.004665310 ubox
106 132 0.742648293 ubox
106 134 0.267555250 ubox
106 143 0.004645297 ubox
107 118 0.018433008 ubox
107 131 0.675113569 ubox
107 135 0.174000414 ubox
107 142 0.004522430 ubox
108 117 0.023715995 ubox
108 134 0.195211394 ubox
108 141 0.003446915 ubox
109 116 0.023732764 ubox
109 128 0.039186999 ubox
109 129 0.968116245 ubox
110 115 0.023722079 ubox
110 127 0.039281120 ubox
110 128 0.970176047 ubox
110 129 0.236345377 ubox
111 127 0.968779471 ubox
111 128 0.237279522 ubox
114 124 0.012970169 ubox
114 125 0.997798493 ubox
115 123 0.009985841 ubox
115 124 0.999160205 ubox
115 125 0.028164368 ubox
116 123 0.998716634 ubox
116 124 0.028032218 ubox
117 122 0.999178400 ubox
121 133 0.017812998 ubox
121 134 0.004880849 ubox
122 132 0.017885378 ubox
122 133 0.004747239 ubox
123 130 0.010213292 ubox
123 131 0.014815743 ubox
124 129 0.014035077 ubox
125 135 0.005081447 ubox
127 133 0.005242447 ubox
127 134 0.015985544 ubox
127 141 0.008339456 ubox
128 132 0.005175279 ubox
128 133 0.015952692 ubox
128 134 0.006499057 ubox
128 140 0.008362039 ubox
129 133 0.006444155 ubox
129 139 0.008362093 ubox
130 138 0.008145888 ubox
142 160 0.033689711 ubox
143 159 0.033764473 ubox
144 148 0.009203300 ubox
144 157 0.004047300 ubox
144 158 0.033736147 ubox
144 160 0.055452761 ubox
145 156 0.003632332 ubox
145 159 0.055555661 ubox
147 156 0.075275753 ubox
148 155 0.075592774 ubox
149 154 0.073977747 ubox
155 161 0.006672773 ubox
156 160 0.006705430 ubox
6 157 0.9500000 lbox
7 156 0.9500000 lbox
8 155 0.9500000 lbox
10 152 0.9500000 lbox
11 151 0.9500000 lbox
12 150 0.9500000 lbox
13 149 0.9500000 lbox
15 148 0.9500000 lbox
16 147 0.9500000 lbox
17 146 0.9500000 lbox
18 145 0.9500000 lbox
20 52 0.9500000 lbox
21 51 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
53 96 0.9500000 lbox
54 95 0.9500000 lbox
55 94 0.9500000 lbox
56 93 0.9500000 lbox
57 92 0.9500000 lbox
61 87 0.9500000 lbox
62 86 0.9500000 lbox
63 85 0.9500000 lbox
64 84 0.9500000 lbox
65 83 0.9500000 lbox
66 82 0.9500000 lbox
67 81 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
97 143 0.9500000 lbox
98 142 0.9500000 lbox
99 141 0.9500000 lbox
101 140 0.9500000 lbox
102 139 0.9500000 lbox
103 138 0.9500000 lbox
104 137 0.9500000 lbox
105 136 0.9500000 lbox
106 132 0.9500000 lbox
107 131 0.9500000 lbox
109 129 0.9500000 lbox
110 128 0.9500000 lbox
111 127 0.9500000 lbox
114 125 0.9500000 lbox
115 124 0.9500000 lbox
116 123 0.9500000 lbox
117 122 0.9500000 lbox
showpage
end
%%EOF
