%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCCUGUUUUUCCCUCCGACCAACCCCGAGCGCAAAGAAAUUGACCUCGCAGCGGUCCUACAAUACUUUUAUAUCAUUGGCCAAGCUUUACCCCGCCCCUGCCUCAUGCAGCCUAUGGGCUAGGCUUUAGGGUCCGCGGUUGGUCAGACCGGAGCACUUGGCCUGAAGACCUGGAAUUGGCGACUUCGAUAUUAACAAGG\
) } def
/len { sequence length } bind def

/coor [
[266.92431641 309.27716064]
[257.30227661 297.76992798]
[247.68023682 286.26269531]
[240.97360229 283.14593506]
[238.00000000 274.50213623]
[228.55718994 262.84738159]
[214.53335571 257.82928467]
[211.85760498 242.23599243]
[202.41479492 230.58123779]
[192.97198486 218.92648315]
[183.52917480 207.27172852]
[182.91091919 222.25898743]
[173.69560242 234.09443665]
[159.31718445 238.36773682]
[145.13360596 233.48652649]
[136.43020630 221.26969910]
[136.45019531 206.26971436]
[145.18612671 194.07612610]
[159.38264465 189.23271179]
[173.74856567 193.54359436]
[165.81727600 180.81195068]
[157.88600159 168.08030701]
[149.95471191 155.34866333]
[142.02343750 142.61701965]
[134.09214783 129.88537598]
[126.16087341 117.15373993]
[118.22959137 104.42209625]
[105.05395508 116.39060974]
[89.57940674 111.53634644]
[75.40209961 116.43571472]
[61.22478485 121.33508301]
[47.04747391 126.23445892]
[40.08338928 140.16784668]
[25.63578415 144.93453979]
[12.39534760 138.20948792]
[-1.78196371 143.10885620]
[-15.95927525 148.00822449]
[-24.24077988 161.74853516]
[-40.16497421 163.69779968]
[-51.51617813 152.36070251]
[-49.58671951 136.43409729]
[-35.85671234 128.13551331]
[-20.85864639 133.83091736]
[-6.68133497 128.93154907]
[7.49597645 124.03217316]
[13.75913811 110.56709290]
[28.06715393 105.39646912]
[42.14810562 112.05714417]
[56.32541656 107.15777588]
[70.50272369 102.25840759]
[84.68003845 97.35903168]
[88.96327972 87.57801056]
[99.06752014 82.33710480]
[110.91336823 84.74316406]
[108.60124969 69.92242432]
[106.28913116 55.10169601]
[103.97701263 40.28096390]
[101.55028534 25.47856522]
[99.00908661 10.69538879]
[96.46789551 -4.08778858]
[93.92669678 -18.87096596]
[91.38549805 -33.65414429]
[86.92070770 -19.33402824]
[78.94844818 -6.62800789]
[67.99691772 3.62206554]
[54.79173279 10.73705864]
[40.20782089 14.24555683]
[25.21146202 13.91510010]
[10.79625797 9.76758289]
[-2.08269072 2.07780623]
[-12.57207203 -8.64473438]
[-19.97689629 -21.68960190]
[-23.80654907 -36.19248962]
[-23.80728722 -51.19248962]
[-19.97906494 -65.69575500]
[-12.57552624 -78.74135590]
[-2.08720231 -89.46492767]
[10.79098892 -97.15597534]
[25.20578384 -101.30490875]
[40.20211029 -101.63684845]
[54.78636551 -98.12978363]
[67.99224854 -91.01609802]
[78.94479370 -80.76709747]
[86.91831207 -68.06186676]
[91.38549805 -53.73653412]
[93.92669678 -68.51971436]
[96.46789551 -83.30288696]
[99.00908661 -98.08606720]
[101.55028534 -112.86923981]
[104.09147644 -127.65242004]
[95.24050140 -140.47029114]
[98.02822876 -155.42634583]
[110.30265808 -163.78540039]
[112.84385681 -178.56857300]
[115.38504791 -193.35176086]
[103.03376770 -202.25158691]
[95.80090332 -215.57723999]
[95.07398224 -230.66006470]
[100.94368744 -244.50592041]
[112.19647980 -254.38945007]
[126.56507874 -258.39056396]
[129.10627747 -273.17373657]
[131.64747620 -287.95690918]
[134.18865967 -302.74008179]
[126.14187622 -316.61917114]
[132.10987854 -331.51086426]
[147.51451111 -335.99151611]
[160.53868103 -326.62399292]
[161.19134521 -310.59423828]
[148.97184753 -300.19888306]
[146.43064880 -285.41571045]
[143.88945007 -270.63253784]
[141.34825134 -255.84934998]
[153.55598450 -247.27983093]
[160.86245728 -234.20600891]
[161.77171326 -219.19487000]
[156.04994202 -205.22055054]
[144.78244019 -195.07508850]
[130.16822815 -190.81056213]
[127.62702942 -176.02738953]
[125.08583832 -161.24420166]
[133.86436462 -149.26618958]
[131.49783325 -134.23774719]
[118.87465668 -125.11122131]
[116.33345795 -110.32804871]
[113.79226685 -95.54486847]
[111.25106812 -80.76169586]
[108.70986938 -65.97851562]
[106.16867828 -51.19533920]
[106.16867828 -36.19533920]
[108.70986938 -21.41216087]
[111.25106812 -6.62898445]
[113.79226685 8.15419292]
[116.33345795 22.93737030]
[120.56758118 29.00082397]
[118.79774475 37.96884537]
[121.10986328 52.78957748]
[123.42198181 67.61030579]
[125.73410034 82.43103790]
[130.96122742 96.49081421]
[138.89251709 109.22245789]
[146.82379150 121.95410156]
[154.75508118 134.68574524]
[162.68635559 147.41738892]
[170.61764526 160.14903259]
[178.54891968 172.88067627]
[186.48020935 185.61231995]
[195.18392944 197.82891846]
[204.62673950 209.48367310]
[214.06954956 221.13842773]
[223.51235962 232.79318237]
[238.21160889 238.64489746]
[240.21194458 253.40457153]
[249.65475464 265.05932617]
[259.18746948 276.64065552]
[268.80950928 288.14788818]
[278.43154907 299.65512085]
[295.86462402 305.57632446]
[298.21237183 322.96478271]
[308.01132202 334.32174683]
[317.81030273 345.67868042]
[327.60925293 357.03564453]
[347.40841675 354.30981445]
[364.71371460 364.01663208]
[372.59448242 382.06903076]
[368.01522827 401.07867432]
[378.49798584 411.80767822]
[388.98077393 422.53668213]
[399.46356201 433.26565552]
[409.94635010 443.99465942]
[429.57928467 448.54888916]
[433.56350708 467.46633911]
[444.37329102 477.86578369]
[459.90179443 476.02200317]
[472.95407104 484.63433838]
[477.36724854 499.63626099]
[471.05755615 513.94433594]
[457.00421143 520.80279541]
[441.84280396 516.97320557]
[432.73208618 504.26379395]
[433.97384644 488.67556763]
[423.16406250 478.27612305]
[412.99899292 479.39169312]
[403.70431519 474.62484741]
[398.46279907 465.33630371]
[399.21734619 454.47744751]
[388.73455811 443.74844360]
[378.25180054 433.01947021]
[367.76901245 422.29046631]
[357.28622437 411.56146240]
[347.62060547 415.27944946]
[337.23031616 415.56771851]
[327.30062866 412.36795044]
[318.97268677 406.02105713]
[313.21252441 397.23129272]
[310.69891357 386.98794556]
[311.74346924 376.45410156]
[316.25231934 366.83459473]
[306.45333862 355.47766113]
[296.65438843 344.12069702]
[286.85540771 332.76376343]
[274.81472778 331.56140137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[5 154]
[6 153]
[8 151]
[9 150]
[10 149]
[11 148]
[20 147]
[21 146]
[22 145]
[23 144]
[24 143]
[25 142]
[26 141]
[27 140]
[29 51]
[30 50]
[31 49]
[32 48]
[35 45]
[36 44]
[37 43]
[54 139]
[55 138]
[56 137]
[57 136]
[58 134]
[59 133]
[60 132]
[61 131]
[62 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[93 121]
[94 120]
[95 119]
[101 113]
[102 112]
[103 111]
[104 110]
[159 201]
[160 200]
[161 199]
[162 198]
[166 190]
[167 189]
[168 188]
[169 187]
[170 186]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
