%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OCM)
} def

/sequence { (\
CAGUGGGCCUGGGAAGAUGUGUUUCCCCUGGAUGUGCACAUUCCUGUUUGUGGCUUAUCGCCUCUCAUUUAUUCUGUGUGAGUAGGUAGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.006577390 ubox
1 30 0.019745336 ubox
1 50 0.003408362 ubox
1 52 0.013198525 ubox
2 10 0.007159985 ubox
2 29 0.019770897 ubox
2 49 0.003319138 ubox
2 51 0.013284302 ubox
2 55 0.016992816 ubox
2 56 0.004833577 ubox
2 63 0.004805035 ubox
2 65 0.007354557 ubox
3 9 0.007197226 ubox
3 28 0.019689869 ubox
3 39 0.012006941 ubox
3 51 0.003578454 ubox
3 54 0.018234169 ubox
3 58 0.898432790 ubox
3 61 0.035829822 ubox
3 62 0.005381866 ubox
3 64 0.009070855 ubox
4 30 0.006562168 ubox
4 38 0.012051262 ubox
4 50 0.012457379 ubox
4 53 0.018040292 ubox
4 57 0.970425203 ubox
4 60 0.035881251 ubox
5 27 0.011540418 ubox
5 28 0.003562771 ubox
5 29 0.010655915 ubox
5 37 0.012068339 ubox
5 49 0.021228019 ubox
5 55 0.006972763 ubox
5 56 0.987671917 ubox
5 59 0.037071873 ubox
5 62 0.003486013 ubox
5 63 0.019949260 ubox
5 64 0.004624203 ubox
6 26 0.011305443 ubox
6 27 0.003536177 ubox
6 28 0.011040211 ubox
6 29 0.004221289 ubox
6 48 0.023084798 ubox
6 54 0.005587688 ubox
6 55 0.996210697 ubox
6 56 0.007951877 ubox
6 58 0.019252772 ubox
6 61 0.003283060 ubox
6 62 0.026200657 ubox
7 25 0.010971929 ubox
7 27 0.010371609 ubox
7 28 0.004437990 ubox
7 35 0.010685209 ubox
7 47 0.024161377 ubox
7 51 0.013662449 ubox
7 54 0.998452211 ubox
7 61 0.026246402 ubox
7 87 0.007306083 ubox
8 31 0.015140838 ubox
8 34 0.009543515 ubox
8 46 0.024114381 ubox
8 50 0.013871343 ubox
8 53 0.998374273 ubox
8 60 0.026203080 ubox
8 86 0.007447793 ubox
9 16 0.003685685 ubox
9 30 0.021794301 ubox
9 31 0.010196541 ubox
9 52 0.997725194 ubox
9 53 0.013941254 ubox
9 85 0.007444219 ubox
9 89 0.003646905 ubox
10 15 0.004322457 ubox
10 30 0.009884518 ubox
10 46 0.837743715 ubox
10 50 0.268282735 ubox
10 52 0.019363717 ubox
10 84 0.006963485 ubox
10 88 0.003481475 ubox
11 26 0.014409278 ubox
11 27 0.084365024 ubox
11 28 0.017017180 ubox
11 29 0.005235390 ubox
11 44 0.047806836 ubox
11 45 0.946596739 ubox
11 48 0.047575793 ubox
11 49 0.124449860 ubox
11 51 0.106291739 ubox
11 83 0.003599602 ubox
12 25 0.014775412 ubox
12 26 0.084937484 ubox
12 27 0.016094747 ubox
12 28 0.005293362 ubox
12 43 0.047694469 ubox
12 44 0.965301405 ubox
12 45 0.063978481 ubox
12 47 0.037567497 ubox
12 48 0.103481701 ubox
12 49 0.124072730 ubox
13 24 0.016007692 ubox
13 25 0.085133607 ubox
13 26 0.015033719 ubox
13 27 0.005272447 ubox
13 42 0.036599129 ubox
13 43 0.964970136 ubox
13 44 0.064319186 ubox
13 47 0.096477557 ubox
13 48 0.128217795 ubox
13 49 0.121463308 ubox
14 23 0.016904657 ubox
14 24 0.084885885 ubox
14 41 0.028827941 ubox
14 42 0.889204566 ubox
14 47 0.122615432 ubox
14 48 0.122309919 ubox
14 49 0.017815458 ubox
15 22 0.017103090 ubox
15 23 0.083262493 ubox
15 24 0.010068134 ubox
15 41 0.657160491 ubox
15 42 0.075486499 ubox
15 45 0.124208335 ubox
15 47 0.119132206 ubox
15 48 0.017882848 ubox
15 49 0.004283660 ubox
16 22 0.072508944 ubox
16 23 0.011313591 ubox
16 24 0.003680095 ubox
16 25 0.009726186 ubox
16 41 0.074863093 ubox
16 42 0.381665653 ubox
16 43 0.089711398 ubox
16 44 0.116271913 ubox
16 47 0.008613277 ubox
17 22 0.010653922 ubox
17 23 0.004309003 ubox
17 24 0.009672655 ubox
17 41 0.695221070 ubox
17 42 0.068423687 ubox
18 38 0.436253202 ubox
18 40 0.877291166 ubox
19 37 0.440073990 ubox
19 39 0.893224937 ubox
19 41 0.003264380 ubox
20 36 0.437506267 ubox
20 38 0.893211190 ubox
20 40 0.003514442 ubox
21 33 0.014016930 ubox
21 35 0.360181794 ubox
21 37 0.893276951 ubox
21 39 0.003508987 ubox
22 32 0.014414475 ubox
22 34 0.203949639 ubox
22 36 0.878356558 ubox
22 38 0.003255712 ubox
23 30 0.006671758 ubox
23 31 0.014799768 ubox
23 32 0.098445838 ubox
24 30 0.012485302 ubox
24 31 0.095548885 ubox
24 32 0.968781748 ubox
25 30 0.094269644 ubox
25 31 0.984731367 ubox
26 30 0.977618417 ubox
29 38 0.005081343 ubox
29 40 0.004569558 ubox
29 46 0.004662756 ubox
30 35 0.003983740 ubox
30 37 0.007850839 ubox
30 39 0.005102989 ubox
30 43 0.048146195 ubox
30 44 0.055613809 ubox
31 42 0.049000854 ubox
31 43 0.055623634 ubox
31 59 0.039042673 ubox
32 41 0.058722807 ubox
32 42 0.044969404 ubox
32 51 0.006779629 ubox
32 58 0.039417042 ubox
33 40 0.067008537 ubox
33 50 0.006822900 ubox
33 57 0.039359954 ubox
34 39 0.067191062 ubox
34 41 0.006996748 ubox
34 49 0.006407411 ubox
34 54 0.007200549 ubox
34 56 0.036403379 ubox
35 40 0.007081596 ubox
35 53 0.006835654 ubox
36 47 0.008724462 ubox
36 51 0.007512379 ubox
36 54 0.038470853 ubox
37 46 0.008904961 ubox
37 50 0.007743449 ubox
37 52 0.028192096 ubox
37 53 0.032016961 ubox
38 45 0.008024141 ubox
38 47 0.005784312 ubox
38 49 0.007097837 ubox
38 51 0.036985690 ubox
39 46 0.006781263 ubox
39 50 0.037728599 ubox
39 52 0.023170668 ubox
40 45 0.005915861 ubox
40 47 0.006410845 ubox
40 49 0.037519518 ubox
40 51 0.023240938 ubox
41 46 0.006508509 ubox
41 50 0.023188203 ubox
43 53 0.004775390 ubox
44 52 0.004929345 ubox
46 51 0.010528291 ubox
50 61 0.003477564 ubox
51 60 0.003507723 ubox
52 59 0.003997562 ubox
52 62 0.024417680 ubox
53 61 0.024526306 ubox
54 60 0.024510027 ubox
54 89 0.003883968 ubox
55 88 0.003852200 ubox
55 89 0.007429610 ubox
55 90 0.005195422 ubox
55 91 0.005040171 ubox
55 92 0.004471388 ubox
56 88 0.014561575 ubox
56 89 0.007058939 ubox
56 90 0.007492536 ubox
56 91 0.012531551 ubox
57 87 0.015513012 ubox
58 86 0.015673778 ubox
58 90 0.300174262 ubox
59 85 0.018114243 ubox
59 89 0.455696619 ubox
60 83 0.003600466 ubox
60 87 0.951204679 ubox
61 86 0.988206944 ubox
62 82 0.020479302 ubox
62 85 0.988431896 ubox
62 86 0.005195683 ubox
62 89 0.012938513 ubox
63 81 0.021786183 ubox
63 84 0.974761768 ubox
63 85 0.004633325 ubox
63 86 0.003165853 ubox
63 88 0.012810839 ubox
63 90 0.130846443 ubox
64 80 0.022355417 ubox
64 82 0.987728432 ubox
64 85 0.004292453 ubox
64 86 0.006851595 ubox
64 89 0.137909087 ubox
65 81 0.987972769 ubox
65 84 0.004419818 ubox
65 85 0.006626306 ubox
65 86 0.003512036 ubox
65 88 0.136878962 ubox
65 90 0.047233108 ubox
66 78 0.025913245 ubox
66 80 0.988042207 ubox
66 85 0.004099407 ubox
66 89 0.049741808 ubox
67 77 0.029904624 ubox
67 79 0.985427869 ubox
67 83 0.025750079 ubox
67 87 0.147372655 ubox
68 76 0.034913163 ubox
68 78 0.973225102 ubox
68 82 0.025998046 ubox
68 86 0.148412043 ubox
69 81 0.026127198 ubox
69 85 0.148407262 ubox
70 76 0.458679179 ubox
70 78 0.073620806 ubox
70 80 0.026233811 ubox
70 84 0.149121747 ubox
71 75 0.387134483 ubox
71 77 0.124225681 ubox
71 79 0.028024372 ubox
71 83 0.149436332 ubox
72 76 0.119078937 ubox
72 78 0.030138402 ubox
72 82 0.149344497 ubox
73 81 0.149395904 ubox
74 80 0.149440501 ubox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
60 87 0.9500000 lbox
61 86 0.9500000 lbox
62 85 0.9500000 lbox
63 84 0.9500000 lbox
64 82 0.9500000 lbox
65 81 0.9500000 lbox
66 80 0.9500000 lbox
67 79 0.9500000 lbox
68 78 0.9500000 lbox
showpage
end
%%EOF
