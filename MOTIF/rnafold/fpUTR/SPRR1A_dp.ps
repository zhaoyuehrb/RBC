%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPRR1A)
} def

/sequence { (\
CCAAGGGACCACACAGCCCAUUCUGCUCCGUAUACCAGCUUUCUGUCUCUAGAAAAAAACACAUUUGAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.036653535 ubox
2 6 0.036556503 ubox
2 25 0.024182846 ubox
2 45 0.004501373 ubox
2 67 0.230596580 ubox
3 22 0.102540652 ubox
3 24 0.023544721 ubox
3 41 0.013415674 ubox
3 42 0.003705181 ubox
3 44 0.004056207 ubox
3 65 0.014325287 ubox
3 66 0.226945520 ubox
4 21 0.114524050 ubox
4 22 0.017334597 ubox
4 24 0.019792566 ubox
4 27 0.005971265 ubox
4 40 0.019399811 ubox
4 41 0.005081479 ubox
4 44 0.003680499 ubox
4 50 0.666946164 ubox
4 64 0.015123008 ubox
4 65 0.202266253 ubox
4 66 0.010239756 ubox
5 18 0.055906402 ubox
5 19 0.644233797 ubox
5 21 0.008315602 ubox
5 23 0.017507488 ubox
5 24 0.015080174 ubox
5 26 0.006140205 ubox
5 27 0.003313969 ubox
5 28 0.018003264 ubox
5 29 0.039138694 ubox
5 36 0.204484589 ubox
5 39 0.021558010 ubox
5 40 0.006449975 ubox
5 43 0.003935099 ubox
5 49 0.691991203 ubox
5 50 0.025196105 ubox
5 64 0.064927684 ubox
5 65 0.005281467 ubox
6 17 0.056143169 ubox
6 18 0.645009644 ubox
6 19 0.049951981 ubox
6 22 0.012546479 ubox
6 23 0.016488469 ubox
6 24 0.014765735 ubox
6 26 0.003602634 ubox
6 27 0.018204027 ubox
6 28 0.038756683 ubox
6 29 0.150489094 ubox
6 35 0.204492159 ubox
6 36 0.145657942 ubox
6 39 0.006881539 ubox
6 40 0.003644818 ubox
6 42 0.003497445 ubox
6 47 0.003829601 ubox
6 48 0.692236278 ubox
6 49 0.026048709 ubox
6 50 0.012638580 ubox
7 17 0.643502889 ubox
7 18 0.049968010 ubox
7 21 0.008426815 ubox
7 22 0.016114016 ubox
7 23 0.015760956 ubox
7 26 0.022255722 ubox
7 27 0.027982330 ubox
7 28 0.150758282 ubox
7 35 0.145792733 ubox
7 39 0.004043748 ubox
7 41 0.003420962 ubox
7 47 0.693202751 ubox
7 48 0.006538860 ubox
7 49 0.013021320 ubox
8 21 0.014982161 ubox
8 22 0.014752610 ubox
8 27 0.145958567 ubox
8 31 0.060132173 ubox
8 46 0.691899442 ubox
8 48 0.012731377 ubox
9 30 0.062410216 ubox
9 45 0.658091527 ubox
10 25 0.108448451 ubox
10 45 0.202290978 ubox
10 67 0.007465896 ubox
11 24 0.099157374 ubox
11 31 0.213806736 ubox
11 44 0.276550071 ubox
11 46 0.026723383 ubox
11 66 0.006423630 ubox
12 25 0.039705688 ubox
12 30 0.219379261 ubox
12 45 0.039060280 ubox
12 67 0.005159070 ubox
13 24 0.037431648 ubox
13 31 0.047691179 ubox
13 44 0.048883371 ubox
13 46 0.023853371 ubox
13 66 0.004516529 ubox
14 25 0.147612336 ubox
14 30 0.049162814 ubox
14 45 0.035488637 ubox
14 67 0.005078119 ubox
15 22 0.035968538 ubox
15 24 0.150342122 ubox
15 27 0.263665531 ubox
15 40 0.647153640 ubox
15 41 0.021565401 ubox
15 42 0.007726530 ubox
15 44 0.045209372 ubox
15 66 0.004679899 ubox
16 21 0.026891658 ubox
16 23 0.149182371 ubox
16 26 0.275758281 ubox
16 31 0.005323473 ubox
16 39 0.670498302 ubox
16 40 0.009284601 ubox
16 41 0.005138764 ubox
16 43 0.045087413 ubox
16 65 0.003501991 ubox
16 71 0.009008689 ubox
17 25 0.275236520 ubox
17 30 0.005522567 ubox
17 38 0.668920943 ubox
17 70 0.009071224 ubox
19 25 0.031203975 ubox
19 45 0.011174269 ubox
19 67 0.006269973 ubox
20 24 0.028667597 ubox
20 31 0.030650261 ubox
20 33 0.071760643 ubox
20 44 0.015663258 ubox
20 46 0.003650493 ubox
20 64 0.004747789 ubox
20 66 0.006145078 ubox
21 30 0.031467208 ubox
21 32 0.072009402 ubox
21 38 0.003822906 ubox
21 45 0.003844673 ubox
21 54 0.027755802 ubox
21 56 0.003451618 ubox
21 57 0.005492685 ubox
21 58 0.005309631 ubox
21 59 0.004547579 ubox
21 63 0.004749655 ubox
21 68 0.006474671 ubox
21 69 0.074126915 ubox
21 70 0.005387199 ubox
22 37 0.011591523 ubox
22 53 0.031973621 ubox
22 56 0.005732977 ubox
22 57 0.005499535 ubox
22 58 0.004923136 ubox
22 67 0.006214577 ubox
22 68 0.085192816 ubox
22 69 0.005769700 ubox
23 38 0.107360510 ubox
23 52 0.032435335 ubox
23 67 0.086162781 ubox
23 70 0.030283041 ubox
24 30 0.087339938 ubox
24 32 0.515025281 ubox
24 34 0.022810960 ubox
24 37 0.121080102 ubox
24 51 0.032122707 ubox
24 61 0.009008875 ubox
24 63 0.010877636 ubox
24 67 0.003272369 ubox
24 69 0.029892745 ubox
25 29 0.094143795 ubox
25 31 0.550518650 ubox
25 33 0.022350023 ubox
25 36 0.120766937 ubox
25 39 0.351371512 ubox
25 46 0.010515694 ubox
25 50 0.024419366 ubox
25 60 0.009608372 ubox
25 62 0.011212358 ubox
25 71 0.458542973 ubox
26 30 0.548888098 ubox
26 38 0.352166293 ubox
26 45 0.011496710 ubox
26 52 0.003184362 ubox
26 70 0.463962762 ubox
27 37 0.335344168 ubox
27 53 0.008270221 ubox
27 68 0.142279312 ubox
27 69 0.434578713 ubox
28 52 0.008688573 ubox
28 67 0.193778893 ubox
29 45 0.007892762 ubox
29 67 0.395375755 ubox
30 39 0.181203131 ubox
30 44 0.006207150 ubox
30 60 0.015568137 ubox
30 62 0.031729381 ubox
30 64 0.037486927 ubox
30 66 0.375286231 ubox
30 71 0.005782238 ubox
31 38 0.177980504 ubox
31 51 0.004202622 ubox
31 59 0.015127162 ubox
31 61 0.030794243 ubox
31 63 0.039335109 ubox
31 67 0.014120615 ubox
31 70 0.005690462 ubox
32 44 0.003441755 ubox
32 46 0.004095072 ubox
32 50 0.004392096 ubox
32 64 0.211616703 ubox
32 66 0.014538548 ubox
33 45 0.003858055 ubox
33 51 0.004249444 ubox
33 63 0.200876705 ubox
34 44 0.004261627 ubox
34 46 0.008783258 ubox
34 50 0.004317690 ubox
35 45 0.007095117 ubox
36 45 0.050499912 ubox
36 67 0.020025202 ubox
37 44 0.060259197 ubox
37 48 0.010577827 ubox
37 66 0.019785569 ubox
38 43 0.059834236 ubox
38 46 0.020655825 ubox
38 47 0.011149388 ubox
38 65 0.017408832 ubox
38 71 0.189411837 ubox
39 45 0.024044268 ubox
39 52 0.007786564 ubox
39 70 0.191081355 ubox
40 51 0.007717459 ubox
40 53 0.004921653 ubox
40 54 0.016646099 ubox
40 55 0.608974790 ubox
40 56 0.064278482 ubox
40 57 0.022229130 ubox
40 58 0.013359306 ubox
40 59 0.009673867 ubox
40 68 0.006994426 ubox
40 69 0.184324515 ubox
40 70 0.020474314 ubox
41 52 0.005068778 ubox
41 53 0.013410003 ubox
41 54 0.674895373 ubox
41 55 0.057059705 ubox
41 56 0.017775820 ubox
41 57 0.011242258 ubox
41 58 0.009786347 ubox
41 67 0.008361652 ubox
41 68 0.170258632 ubox
41 69 0.043137290 ubox
42 51 0.004945103 ubox
42 52 0.004251519 ubox
42 53 0.692504140 ubox
42 54 0.041201460 ubox
42 55 0.008559878 ubox
42 56 0.005664561 ubox
42 57 0.007988652 ubox
42 67 0.152902520 ubox
42 68 0.056115603 ubox
43 52 0.696221689 ubox
43 67 0.066113253 ubox
43 70 0.005577384 ubox
44 51 0.689544196 ubox
44 61 0.038015020 ubox
44 63 0.136636887 ubox
44 69 0.005611629 ubox
45 50 0.611421401 ubox
45 60 0.039342760 ubox
45 62 0.138352981 ubox
45 64 0.026454838 ubox
45 66 0.007511844 ubox
45 71 0.011618445 ubox
46 53 0.031119885 ubox
46 59 0.037608783 ubox
46 61 0.130085600 ubox
46 63 0.025652281 ubox
46 68 0.010880869 ubox
46 70 0.011014236 ubox
47 52 0.034024597 ubox
47 67 0.011739545 ubox
47 70 0.010057232 ubox
48 68 0.017656994 ubox
48 69 0.009555503 ubox
49 67 0.018660695 ubox
49 70 0.013980291 ubox
50 67 0.022697078 ubox
50 69 0.015691579 ubox
51 65 0.006787213 ubox
51 66 0.037262374 ubox
52 64 0.006060590 ubox
52 65 0.039937758 ubox
52 66 0.033128523 ubox
53 64 0.038040164 ubox
53 65 0.035242790 ubox
53 66 0.079406747 ubox
54 64 0.032214670 ubox
54 65 0.082932376 ubox
54 66 0.051988802 ubox
55 64 0.081599239 ubox
55 65 0.054595877 ubox
55 66 0.091917618 ubox
56 64 0.051744813 ubox
56 65 0.099347570 ubox
56 66 0.083057481 ubox
57 64 0.090097329 ubox
57 65 0.087285875 ubox
57 66 0.091112385 ubox
58 64 0.081172031 ubox
58 65 0.093434623 ubox
58 66 0.036966990 ubox
59 64 0.074904576 ubox
59 65 0.035421254 ubox
60 67 0.159363249 ubox
61 66 0.136454367 ubox
64 70 0.015185907 ubox
65 69 0.015222692 ubox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
showpage
end
%%EOF
