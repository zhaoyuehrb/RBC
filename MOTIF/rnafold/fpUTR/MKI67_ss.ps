%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACCGGGCGGAGGUGAGCGCGGCGCCGGCUCCUCCUGCGGCGGACUUUGGGUGCGACUUGACGAGCGGUGGUUCGACAAGUGGCCUUGCGGGCCGGAUCGUCCCAGUGGAAGAGUUGUAAAUUUGCUUCUGGCCUUCCCCUACGGAUUAUACCUGGCCUUCCCCUACGGAUUAUACUCAACUUACUGUUUAGAAA\
) } def
/len { sequence length } bind def

/coor [
[-2.88413811 339.78866577]
[-15.90354824 332.33917236]
[-23.73444939 319.54553223]
[-24.44614983 304.56359863]
[-33.60932922 316.43945312]
[-42.77250671 328.31533813]
[-51.93568802 340.19119263]
[-54.24010849 355.84368896]
[-68.14073944 361.19360352]
[-77.30391693 373.06948853]
[-86.46709442 384.94534302]
[-95.63027191 396.82119751]
[-97.93470001 412.47369385]
[-111.83532715 417.82363892]
[-120.99850464 429.69949341]
[-123.76832581 438.41723633]
[-130.40495300 441.69070435]
[-139.75730896 453.41818237]
[-149.10964966 465.14566040]
[-154.25796509 481.29901123]
[-171.20524597 480.82357788]
[-175.43988037 464.40701294]
[-160.83712769 455.79330444]
[-151.48477173 444.06582642]
[-142.13243103 432.33834839]
[-132.87437439 420.53631592]
[-123.71118927 408.66046143]
[-122.06217957 393.85742188]
[-107.50614166 387.65802002]
[-98.34295654 375.78216553]
[-89.17977905 363.90631104]
[-80.01660156 352.03042603]
[-78.36759186 337.22738647]
[-63.81155014 331.02801514]
[-54.64837265 319.15216064]
[-45.48519135 307.27627563]
[-36.32201385 295.40042114]
[-35.09914780 284.88439941]
[-25.09066582 278.44482422]
[-17.72990227 265.37506104]
[-10.36913872 252.30526733]
[-3.00837588 239.23548889]
[4.35238743 226.16571045]
[-2.95875502 211.47428894]
[-0.04767617 195.15571594]
[12.13415623 183.67059326]
[28.92565536 181.68544006]
[36.07599258 168.49935913]
[43.22632980 155.31327820]
[50.37666702 142.12719727]
[57.52700424 128.94111633]
[64.67734528 115.75504303]
[61.33952713 101.13112640]
[49.17607117 92.35329437]
[33.45777130 90.55174255]
[27.66504288 76.82972717]
[15.50158691 68.05189514]
[3.33813047 59.27406693]
[-8.82532597 50.49623489]
[-20.98878288 41.71840286]
[-36.70708466 39.91685104]
[-42.49980927 26.19484138]
[-54.66326523 17.41701126]
[-66.82672119 8.63917923]
[-78.99018097 -0.13865247]
[-91.15363312 -8.91648388]
[-107.51431274 -10.03916550]
[-114.47835541 -24.88619041]
[-104.88175964 -38.18421173]
[-88.59667206 -36.25336456]
[-82.37580109 -21.07994080]
[-70.21234894 -12.30210876]
[-58.04889297 -3.52427745]
[-45.88543701 5.25355387]
[-33.72197723 14.03138542]
[-18.87368965 15.20508766]
[-12.21095085 29.55494690]
[-0.04749454 38.33277893]
[12.11596203 47.11061096]
[24.27941895 55.88844299]
[36.44287491 64.66627502]
[51.29116440 65.83997345]
[57.95390320 80.18983459]
[70.11736298 88.96766663]
[75.51570129 79.32225037]
[83.92852020 72.05007172]
[94.37850189 68.05621338]
[105.63092804 67.86139679]
[116.33951569 71.53453827]
[125.20752716 78.67903900]
[136.47190857 68.77380371]
[147.73628235 58.86855698]
[159.00065613 48.96331787]
[170.26502991 39.05807495]
[181.44966125 29.06287575]
[192.55383301 18.97836304]
[203.57682800 8.80518246]
[214.51794434 -1.45601165]
[219.29095459 -16.54007149]
[233.86724854 -19.60289574]
[244.80836487 -29.86408806]
[255.74946594 -40.12528229]
[266.69058228 -50.38647842]
[271.60702515 -68.12621307]
[288.82995605 -71.46575928]
[299.60519409 -81.90100098]
[304.13583374 -97.05962372]
[318.66116333 -100.35567474]
[329.43640137 -110.79091644]
[340.21163940 -121.22615814]
[350.98687744 -131.66139221]
[361.76211548 -142.09663391]
[372.28338623 -152.78790283]
[382.54455566 -163.72900391]
[382.21395874 -179.30233765]
[392.77612305 -190.25199890]
[407.62493896 -190.47122192]
[417.88613892 -201.41233826]
[428.14733887 -212.35343933]
[431.35293579 -228.43623352]
[446.96862793 -233.44450378]
[458.93026733 -222.22618103]
[454.93280029 -206.32171631]
[439.08843994 -202.09225464]
[428.82723999 -191.15113831]
[418.56604004 -180.21003723]
[419.29864502 -165.37767029]
[409.04818726 -154.13565063]
[393.48568726 -153.46781921]
[383.22448730 -142.52670288]
[382.97595215 -138.99775696]
[380.99807739 -135.41535950]
[377.28521729 -132.59448242]
[372.19735718 -131.32139587]
[361.42211914 -120.88615417]
[350.64688110 -110.45091248]
[339.87164307 -100.01567841]
[329.09640503 -89.58043671]
[325.33645630 -75.16821289]
[310.04043579 -71.12575531]
[299.26516724 -60.69052124]
[298.75534058 -48.59690857]
[289.85281372 -39.81465149]
[276.95178223 -39.44536591]
[266.01068115 -29.18417168]
[255.06954956 -18.92297745]
[244.12844849 -8.66178417]
[240.13801575 5.68832636]
[224.77912903 9.48509884]
[213.83802795 19.74629211]
[211.10635376 26.62368774]
[202.63835144 30.08253288]
[191.53417969 40.16704559]
[188.69262695 46.99977493]
[180.17027283 50.32245255]
[168.90589905 60.22769165]
[157.64152527 70.13293457]
[146.37713623 80.03817749]
[135.11276245 89.94342041]
[136.19375610 104.90441895]
[148.76507568 113.08744049]
[161.33639526 121.27046204]
[177.26670837 119.37181854]
[188.58181763 130.74493408]
[186.60176086 146.66532898]
[172.84544373 154.92024231]
[157.86555481 149.17720032]
[153.15338135 133.84178162]
[140.58204651 125.65876007]
[128.01072693 117.47573853]
[120.01493835 125.96392822]
[109.63380432 131.09246826]
[98.19750214 132.26823425]
[87.14930725 129.40054321]
[77.86341858 122.90538025]
[70.71308136 136.09146118]
[63.56274414 149.27754211]
[56.41240692 162.46362305]
[49.26206970 175.64968872]
[42.11173248 188.83576965]
[48.96382141 200.80381775]
[49.00396729 214.48622131]
[42.32870483 226.30567932]
[30.77637482 233.22479248]
[17.42216873 233.52647400]
[10.06140518 246.59625244]
[2.70064139 259.66604614]
[-4.66012192 272.73580933]
[-12.02088547 285.80560303]
[2.05304480 280.61672974]
[16.88775253 282.83740234]
[28.82530403 291.92007446]
[34.92213821 305.62512207]
[33.67490387 320.57318115]
[25.39114189 333.07833862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 37]
[5 36]
[6 35]
[7 34]
[9 32]
[10 31]
[11 30]
[12 29]
[14 27]
[15 26]
[17 25]
[18 24]
[19 23]
[39 189]
[40 188]
[41 187]
[42 186]
[43 185]
[47 180]
[48 179]
[49 178]
[50 177]
[51 176]
[52 175]
[53 84]
[54 83]
[56 81]
[57 80]
[58 79]
[59 78]
[60 77]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[90 159]
[91 158]
[92 157]
[93 156]
[94 155]
[95 153]
[96 152]
[97 150]
[98 149]
[100 147]
[101 146]
[102 145]
[103 144]
[105 141]
[106 140]
[108 138]
[109 137]
[110 136]
[111 135]
[112 134]
[113 130]
[114 129]
[117 126]
[118 125]
[119 124]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
