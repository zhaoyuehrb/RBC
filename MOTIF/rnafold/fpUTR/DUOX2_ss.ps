%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUGUCCUGAGCCGACACCUGCACAGUGGCGAGACCAAGGACCCAGAGAGAAAGGUGAGAGUGCAGCCGGGGAGGCUGAGGAUCGGCGGAGCUGGAAGAGUGAGGGUGAAGGCAAGAAGUAGAGCACAGAAGCAAAGAUUUUAAGAGGAAAGAAGACAUCUGAACCCAACACCACCCUAAACCACAGGCUGCAGGGUUGGC\
) } def
/len { sequence length } bind def

/coor [
[-98.95910645 327.72155762]
[-107.43615723 340.09652710]
[-115.91320038 352.47146606]
[-124.39024353 364.84643555]
[-132.86729431 377.22140503]
[-141.24880981 389.66125488]
[-149.53427124 402.16531372]
[-157.81974792 414.66934204]
[-166.00869751 427.23678589]
[-174.10063171 439.86694336]
[-182.19258118 452.49710083]
[-183.12237549 468.29095459]
[-196.50314331 474.83346558]
[-204.59507751 487.46359253]
[-198.81991577 501.86593628]
[-202.64582825 516.90393066]
[-214.60166931 526.79522705]
[-230.09017944 527.73638916]
[-243.15570068 519.36547852]
[-248.77429199 504.90136719]
[-244.78546143 489.90573120]
[-232.72302246 480.14471436]
[-217.22521973 479.37164307]
[-209.13328552 466.74151611]
[-208.78227234 451.85104370]
[-194.82272339 444.40515137]
[-186.73078918 431.77499390]
[-178.63883972 419.14486694]
[-177.67691040 411.81283569]
[-170.32379150 406.38385010]
[-162.03831482 393.87982178]
[-153.75283813 381.37579346]
[-152.67811584 374.05944824]
[-145.24224854 368.74435425]
[-136.76521301 356.36938477]
[-128.28816223 343.99441528]
[-119.81111908 331.61947632]
[-111.33406830 319.24450684]
[-117.33032227 303.96578979]
[-112.99665070 287.96282959]
[-99.84921265 277.59179688]
[-82.94483185 277.09387207]
[-74.65936279 264.58984375]
[-66.37388611 252.08580017]
[-58.08840942 239.58177185]
[-49.80293655 227.07772827]
[-63.07012558 234.07641602]
[-77.88029480 236.45526123]
[-92.67186737 233.96340942]
[-105.88523102 226.86361694]
[-116.12716675 215.90447998]
[-122.31777191 202.24151611]
[-123.80432129 187.31535339]
[-120.43005371 172.69981384]
[-112.55076599 159.93591309]
[-100.99724579 150.36950684]
[-86.98768616 145.00926208]
[-71.99925232 144.42036438]
[-57.61231232 148.66490173]
[-45.34383011 157.29533386]
[-36.48738098 169.40165710]
[-31.97678566 183.70741272]
[-32.28763962 198.70419312]
[-37.38573837 212.80818176]
[-26.14630127 202.87464905]
[-14.90686417 192.94111633]
[-3.66742730 183.00758362]
[7.57200909 173.07405090]
[18.81144524 163.14051819]
[30.05088234 153.20698547]
[30.36630440 136.39463806]
[42.99028778 124.78167725]
[60.44454575 125.91083527]
[71.52967834 115.80539703]
[64.19853973 106.45038605]
[60.26047516 93.98282623]
[60.94171906 79.72505188]
[52.65624619 67.22101593]
[44.37076950 54.71697998]
[36.08529663 42.21294403]
[27.79981995 29.70890999]
[14.01059532 19.84515762]
[19.67163086 3.86426210]
[36.59511948 4.88011026]
[40.30385590 21.42343521]
[48.58933258 33.92747116]
[56.87480545 46.43150711]
[65.16027832 58.93554306]
[73.44575500 71.43957520]
[80.48018646 68.83827972]
[83.00901794 54.05298615]
[94.54905701 63.63569260]
[101.58348846 61.03439713]
[99.74016571 46.14809036]
[97.89684296 31.26178169]
[86.17960358 20.30340958]
[87.58522034 4.32205105]
[101.03541565 -4.42276144]
[116.21235657 0.77724302]
[121.47359467 15.93306637]
[112.78314972 29.41845703]
[114.62647247 44.30476379]
[116.46979523 59.19107437]
[124.64322662 70.70037842]
[127.66173553 82.81867218]
[141.88414001 78.05179596]
[156.10655212 73.28492737]
[170.32896423 68.51805115]
[184.55137634 63.75118256]
[198.77378845 58.98431015]
[198.50350952 43.03782654]
[203.12951660 27.79697800]
[212.19361877 14.72616673]
[224.81192017 5.07709503]
[239.76089478 -0.23110144]
[255.59606934 -0.69939369]
[270.79162598 3.70425344]
[283.88732910 12.54305553]
[295.57354736 3.13919878]
[307.25976562 -6.26465845]
[318.94595337 -15.66851521]
[330.63217163 -25.07237244]
[329.56823730 -41.95058441]
[338.68191528 -55.99885559]
[354.21676636 -61.79060745]
[369.98355103 -57.22967529]
[381.52355957 -66.81237793]
[382.73205566 -82.57039642]
[394.78341675 -92.79489899]
[410.52777100 -91.41987610]
[420.62429810 -79.26110077]
[419.08288574 -63.53215790]
[406.81805420 -53.56475067]
[391.10626221 -55.27236938]
[379.56625366 -45.68966675]
[381.66156006 -32.50125122]
[376.92724609 -19.89911270]
[366.50027466 -11.21391106]
[353.03680420 -8.79734039]
[340.03601074 -13.38616371]
[328.34982300 -3.98230672]
[316.66360474 5.42155027]
[304.97738647 14.82540703]
[293.29119873 24.22926521]
[295.85153198 29.21372032]
[297.84811401 34.44953918]
[299.25671387 39.87319183]
[300.06021118 45.41886520]
[300.24890137 51.01926804]
[315.03421021 53.54812622]
[329.12170410 43.18144608]
[346.01599121 46.14950943]
[355.35119629 60.13550186]
[370.17367554 62.43637848]
[384.99618530 64.73725128]
[398.74279785 56.46621704]
[413.72940063 62.19167709]
[418.45956421 77.52155304]
[409.30471802 90.69607544]
[393.28762817 91.60887909]
[382.69528198 79.55973816]
[367.87280273 77.25885773]
[353.05032349 74.95798492]
[343.81292725 83.94594574]
[330.89227295 86.00135803]
[318.97235107 80.15216064]
[312.50534058 68.33341980]
[297.72006226 65.80455780]
[289.83483887 80.91364288]
[277.38552856 92.59154510]
[261.75555420 99.51684570]
[244.68948364 100.89752197]
[228.09861755 96.56154633]
[213.84669495 86.97806549]
[203.54064941 73.20671844]
[189.31825256 77.97359467]
[175.09584045 82.74046326]
[160.87342834 87.50733185]
[146.65101624 92.27420807]
[132.42860413 97.04107666]
[128.96945190 114.87081146]
[116.49832153 128.07446289]
[98.89481354 132.54455566]
[81.63511658 126.89053345]
[70.54998016 136.99597168]
[71.48047638 150.43615723]
[64.59918976 161.79161072]
[52.61106491 167.03112793]
[39.98441315 164.44641113]
[28.74497795 174.37994385]
[17.50554085 184.31347656]
[6.26610518 194.24700928]
[-4.97333145 204.18054199]
[-16.21276855 214.11407471]
[-27.45220375 224.04760742]
[-37.29890060 235.36320496]
[-45.58437347 247.86723328]
[-53.86985016 260.37127686]
[-62.15532303 272.87530518]
[-70.44079590 285.37933350]
[-64.67198944 297.90127563]
[-65.83599854 311.53027344]
[-73.52207184 322.71411133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[5 34]
[6 32]
[7 31]
[8 30]
[9 28]
[10 27]
[11 26]
[13 24]
[14 23]
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[64 195]
[65 194]
[66 193]
[67 192]
[68 191]
[69 190]
[70 189]
[73 185]
[74 184]
[77 89]
[78 88]
[79 87]
[80 86]
[81 85]
[93 103]
[94 102]
[95 101]
[105 180]
[106 179]
[107 178]
[108 177]
[109 176]
[110 175]
[118 144]
[119 143]
[120 142]
[121 141]
[122 140]
[126 135]
[127 134]
[149 168]
[150 167]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
