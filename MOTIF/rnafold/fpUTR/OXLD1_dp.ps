%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OXLD1)
} def

/sequence { (\
GGGAUUGGCCGGAGCGCCCGCCGCUCACGGUCAGGGGUUGCCGGAUCCCGUCCGCGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.054519339 ubox
1 18 0.003869954 ubox
1 19 0.061784096 ubox
1 22 0.069244304 ubox
1 39 0.008897714 ubox
1 42 0.035359795 ubox
1 48 0.010486755 ubox
1 49 0.749943095 ubox
1 52 0.003485034 ubox
1 53 0.106097471 ubox
2 9 0.054587571 ubox
2 10 0.019016659 ubox
2 17 0.003895215 ubox
2 18 0.061752391 ubox
2 19 0.011166927 ubox
2 21 0.069596329 ubox
2 22 0.048041245 ubox
2 38 0.011107111 ubox
2 39 0.003644159 ubox
2 41 0.035354326 ubox
2 42 0.005930977 ubox
2 47 0.010046635 ubox
2 48 0.754286240 ubox
2 49 0.008009019 ubox
2 52 0.103776850 ubox
2 53 0.443157099 ubox
3 9 0.019050833 ubox
3 17 0.061326615 ubox
3 18 0.010497120 ubox
3 21 0.048338086 ubox
3 38 0.004305097 ubox
3 39 0.017853540 ubox
3 41 0.005903505 ubox
3 46 0.007903873 ubox
3 47 0.754302795 ubox
3 48 0.007626931 ubox
3 51 0.080137025 ubox
3 52 0.444101460 ubox
4 38 0.019780506 ubox
4 46 0.750330892 ubox
4 51 0.440832356 ubox
5 13 0.014106499 ubox
5 14 0.014437137 ubox
5 34 0.138664689 ubox
5 35 0.005945859 ubox
5 36 0.004611389 ubox
5 37 0.017772856 ubox
5 44 0.084753850 ubox
5 45 0.725620028 ubox
5 50 0.419567828 ubox
6 12 0.014681331 ubox
6 13 0.015692100 ubox
6 16 0.025758338 ubox
6 20 0.018719882 ubox
6 23 0.014328709 ubox
6 33 0.572583446 ubox
6 34 0.006082515 ubox
6 36 0.006771772 ubox
6 43 0.151188530 ubox
6 44 0.309072835 ubox
6 50 0.033866457 ubox
6 60 0.010179305 ubox
7 15 0.029867179 ubox
7 18 0.089396092 ubox
7 19 0.022006749 ubox
7 22 0.276679533 ubox
7 32 0.666669329 ubox
7 42 0.197117523 ubox
7 47 0.025037983 ubox
7 48 0.119411294 ubox
7 49 0.046204404 ubox
7 59 0.017093367 ubox
8 15 0.045575487 ubox
8 17 0.090088837 ubox
8 18 0.020838686 ubox
8 21 0.278981411 ubox
8 31 0.667459461 ubox
8 41 0.197520026 ubox
8 46 0.027282872 ubox
8 47 0.118839877 ubox
8 48 0.046079274 ubox
8 59 0.007074800 ubox
9 14 0.046861125 ubox
9 16 0.089387982 ubox
9 20 0.253149843 ubox
9 30 0.667795237 ubox
9 40 0.195888005 ubox
9 44 0.636512512 ubox
9 57 0.017180296 ubox
9 58 0.006770436 ubox
10 16 0.024477352 ubox
10 20 0.118347959 ubox
10 29 0.667826297 ubox
10 40 0.023312334 ubox
10 43 0.648184670 ubox
10 56 0.017263505 ubox
10 57 0.006547109 ubox
11 15 0.025765587 ubox
11 18 0.224755936 ubox
11 19 0.167586785 ubox
11 22 0.007446039 ubox
11 28 0.665291714 ubox
11 39 0.025065656 ubox
11 42 0.648232347 ubox
11 55 0.017129024 ubox
12 17 0.223982833 ubox
12 18 0.167244314 ubox
12 21 0.007448671 ubox
12 26 0.667349009 ubox
12 38 0.007839916 ubox
12 39 0.021232987 ubox
12 41 0.647147539 ubox
13 25 0.667946018 ubox
13 38 0.019553547 ubox
13 39 0.648487733 ubox
14 21 0.016400675 ubox
14 24 0.668087397 ubox
14 38 0.659405298 ubox
14 41 0.024005801 ubox
15 20 0.016461795 ubox
15 23 0.668065248 ubox
15 37 0.659990211 ubox
15 40 0.032269238 ubox
15 60 0.045118482 ubox
16 22 0.653275287 ubox
16 38 0.076336021 ubox
16 39 0.023349150 ubox
16 59 0.049074813 ubox
17 35 0.399838602 ubox
17 36 0.539971180 ubox
17 37 0.084650852 ubox
17 58 0.049083462 ubox
18 34 0.399043315 ubox
18 35 0.540454863 ubox
18 36 0.084575998 ubox
18 57 0.049079489 ubox
19 34 0.538767859 ubox
19 35 0.084349322 ubox
19 56 0.049073732 ubox
19 60 0.003921472 ubox
20 31 0.655535650 ubox
20 55 0.048931703 ubox
20 59 0.004770158 ubox
21 30 0.677006861 ubox
21 54 0.043724061 ubox
21 58 0.004495875 ubox
22 29 0.677112041 ubox
22 50 0.005210477 ubox
22 54 0.013712996 ubox
22 57 0.004177527 ubox
22 60 0.085125720 ubox
23 28 0.659606524 ubox
23 31 0.025508457 ubox
23 49 0.005178655 ubox
23 51 0.006378739 ubox
23 53 0.019115113 ubox
23 55 0.003404988 ubox
23 59 0.302651769 ubox
24 30 0.026007542 ubox
24 50 0.006486555 ubox
24 54 0.003296513 ubox
24 58 0.303251366 ubox
25 29 0.023433542 ubox
25 45 0.005126643 ubox
25 57 0.303040430 ubox
26 44 0.005187667 ubox
26 56 0.302936302 ubox
26 57 0.003349958 ubox
27 51 0.020975598 ubox
28 43 0.006282726 ubox
28 50 0.021278383 ubox
28 54 0.304232588 ubox
29 42 0.006418178 ubox
29 47 0.008992294 ubox
29 48 0.004113268 ubox
29 49 0.020647234 ubox
29 53 0.306632182 ubox
30 41 0.006418850 ubox
30 46 0.009731554 ubox
30 47 0.005223935 ubox
30 48 0.019988063 ubox
30 52 0.306328913 ubox
31 40 0.004709893 ubox
31 45 0.019327172 ubox
31 50 0.019460565 ubox
32 40 0.004833334 ubox
32 43 0.006951290 ubox
32 44 0.020507568 ubox
33 39 0.005055646 ubox
34 38 0.003541988 ubox
34 42 0.211517754 ubox
34 48 0.005307003 ubox
34 49 0.622810606 ubox
35 41 0.211449461 ubox
35 42 0.280730310 ubox
35 47 0.004762913 ubox
35 48 0.626783711 ubox
35 49 0.030434051 ubox
36 41 0.280874200 ubox
36 42 0.056272066 ubox
36 46 0.003880410 ubox
36 47 0.626807365 ubox
36 48 0.030451858 ubox
37 41 0.055472886 ubox
37 46 0.626292371 ubox
37 47 0.030335148 ubox
37 59 0.106392773 ubox
38 45 0.626026074 ubox
38 57 0.032810062 ubox
38 58 0.103745794 ubox
39 43 0.009376288 ubox
39 44 0.614318359 ubox
39 56 0.044238977 ubox
39 57 0.100084541 ubox
39 60 0.025714737 ubox
40 55 0.052772232 ubox
40 59 0.045195423 ubox
41 54 0.037478584 ubox
41 57 0.005595226 ubox
41 58 0.045074166 ubox
42 50 0.004772349 ubox
42 54 0.106819083 ubox
42 56 0.006200765 ubox
42 57 0.040533261 ubox
42 60 0.005363933 ubox
43 49 0.007529051 ubox
43 53 0.120659376 ubox
43 55 0.004447186 ubox
43 59 0.010818584 ubox
44 48 0.007420075 ubox
44 52 0.120707392 ubox
45 51 0.119655458 ubox
46 50 0.110740777 ubox
47 58 0.064624324 ubox
48 57 0.065673764 ubox
49 56 0.065872222 ubox
49 60 0.099036665 ubox
50 55 0.065862219 ubox
50 59 0.802000169 ubox
51 57 0.012886240 ubox
51 58 0.798593239 ubox
52 56 0.016687794 ubox
52 57 0.796766760 ubox
52 58 0.089245364 ubox
53 57 0.089296160 ubox
53 60 0.040531724 ubox
54 59 0.058024996 ubox
1 49 0.9500000 lbox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
