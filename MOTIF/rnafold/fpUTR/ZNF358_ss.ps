%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCGCCUGGCGGGGCCGCUGGGCCGAGGGGGCCGCCGGCGGGGCUGGCGGGCGGGGGGCUUCCUGCGGGCCCGGGGGGAGCCGGCGGCCGGCGCGGGCGCGGCGGGCCGGGCAGGGGCGAGGGGCGCCGGGUCUUGCCCCAGAAGCUGCGGGCACAUCCACGCCUGAA\
) } def
/len { sequence length } bind def

/coor [
[179.77404785 207.34941101]
[175.68261719 197.55181885]
[175.10182190 186.91174316]
[178.12417603 176.65345764]
[166.72256470 166.90649414]
[152.02079773 164.51753235]
[146.55885315 149.66903687]
[135.15724182 139.92208862]
[123.75563049 130.17512512]
[112.35401154 120.42816925]
[98.05160522 123.79360199]
[84.48723602 118.14623260]
[76.79895782 105.62523651]
[77.89902496 90.97344971]
[66.49741364 81.22648621]
[50.98012161 78.14035797]
[46.33370209 63.98902893]
[34.93208694 54.24206924]
[23.53047371 44.49511337]
[12.12885952 34.74815369]
[0.72724545 25.00119591]
[-10.67436886 15.25423717]
[-26.19165993 12.16810417]
[-30.83807945 -1.98322308]
[-42.23969269 -11.73018169]
[-53.64130783 -21.47714043]
[-68.46141052 -14.80509377]
[-84.64984131 -15.25307560]
[-98.97509003 -22.68101883]
[-108.59964752 -35.56058502]
[-111.64196777 -51.28935623]
[-107.54419708 -66.71659851]
[-119.12294006 -76.25245667]
[-130.70169067 -85.78830719]
[-142.28044128 -95.32416534]
[-153.85919189 -104.86002350]
[-165.43794250 -114.39588165]
[-177.01669312 -123.93173218]
[-188.59544373 -133.46759033]
[-200.17419434 -143.00344849]
[-211.75294495 -152.53930664]
[-235.55400085 -154.11940002]
[-243.39021301 -175.88825989]
[-255.94770813 -184.09248352]
[-268.50521851 -192.29670715]
[-281.06271362 -200.50093079]
[-293.62020874 -208.70515442]
[-309.40515137 -209.77572632]
[-315.82809448 -223.21427917]
[-328.38558960 -231.41850281]
[-340.94308472 -239.62272644]
[-353.50057983 -247.82695007]
[-366.05807495 -256.03118896]
[-381.84301758 -257.10174561]
[-388.26596069 -270.54031372]
[-400.82345581 -278.74453735]
[-417.21859741 -279.10717773]
[-424.86376953 -293.61520386]
[-415.89428711 -307.34402466]
[-399.53717041 -306.17059326]
[-392.61923218 -291.30203247]
[-380.06173706 -283.09780884]
[-365.17498779 -282.61407471]
[-357.85385132 -268.58868408]
[-345.29635620 -260.38446045]
[-332.73886108 -252.18022156]
[-320.18136597 -243.97599792]
[-307.62387085 -235.77178955]
[-292.73712158 -235.28804016]
[-285.41598511 -221.26264954]
[-272.85848999 -213.05842590]
[-260.30099487 -204.85420227]
[-247.74348450 -196.64997864]
[-235.18598938 -188.44575500]
[-229.36241150 -191.54614258]
[-222.81124878 -192.68354797]
[-216.18106079 -191.71263123]
[-210.13850403 -188.69841003]
[-205.30130005 -183.91297913]
[-202.17504883 -177.81114197]
[-201.10060120 -170.98742676]
[-202.21708679 -164.11805725]
[-190.63833618 -154.58219910]
[-179.05958557 -145.04634094]
[-167.48083496 -135.51048279]
[-155.90208435 -125.97462463]
[-144.32333374 -116.43877411]
[-132.74458313 -106.90291595]
[-121.16584015 -97.36705780]
[-109.58708954 -87.83119965]
[-98.00833893 -78.29534912]
[-85.69826508 -84.73580170]
[-71.81882477 -85.99490356]
[-58.46790695 -81.84912109]
[-47.67618179 -72.89436340]
[-41.09828186 -60.46061325]
[-39.75912094 -46.41442108]
[-43.89434814 -32.87875366]
[-32.49273682 -23.13179588]
[-21.09112167 -13.38483715]
[-6.38934946 -10.99587154]
[-0.92741001 3.85262275]
[10.47420406 13.59958172]
[21.87581825 23.34654045]
[33.27743149 33.09349823]
[44.67904663 42.84045792]
[56.08065796 52.58741379]
[70.78243256 54.97637939]
[76.24436951 69.82487488]
[87.64598846 79.57183075]
[101.94839478 76.20639801]
[115.51276398 81.85376740]
[123.20104218 94.37476349]
[122.10097504 109.02655029]
[133.50259399 118.77351379]
[144.90420532 128.52046204]
[156.30581665 138.26742554]
[171.82310486 141.35356140]
[176.46952820 155.50488281]
[187.87113953 165.25184631]
[206.98484802 159.54362488]
[225.55354309 166.43022156]
[236.16819763 182.98001099]
[234.70429993 202.44303894]
[246.79077148 211.32656860]
[258.87725830 220.21009827]
[270.96371460 229.09362793]
[283.05020142 237.97715759]
[295.92019653 236.80757141]
[305.81066895 244.48687744]
[307.73776245 256.45309448]
[319.65899658 265.55715942]
[331.58023071 274.66122437]
[343.50146484 283.76528931]
[356.39077759 282.83233643]
[366.13851929 290.69204712]
[367.84545898 302.69165039]
[379.59741211 312.01318359]
[391.34939575 321.33471680]
[403.10137939 330.65625000]
[414.85336304 339.97778320]
[426.69046021 349.19097900]
[438.61169434 358.29504395]
[450.53292847 367.39910889]
[466.79083252 372.20715332]
[466.67132568 389.16067505]
[450.34725952 393.73904419]
[441.42886353 379.32034302]
[429.50762939 370.21627808]
[417.58639526 361.11221313]
[410.33432007 359.54559326]
[405.53182983 351.72976685]
[393.77984619 342.40823364]
[382.02786255 333.08670044]
[370.27587891 323.76516724]
[358.52389526 314.44360352]
[341.06533813 312.83215332]
[334.39739990 295.68652344]
[322.47616577 286.58245850]
[310.55493164 277.47839355]
[298.63369751 268.37432861]
[281.14846802 267.08386230]
[274.16665649 250.06362915]
[262.08020020 241.18009949]
[249.99371338 232.29656982]
[237.90724182 223.41304016]
[225.82077026 214.52952576]
[216.82548523 219.80053711]
[206.54760742 221.76641846]
[196.16624451 220.17555237]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 120]
[5 119]
[7 117]
[8 116]
[9 115]
[10 114]
[14 110]
[15 109]
[17 107]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[24 100]
[25 99]
[26 98]
[32 91]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[38 85]
[39 84]
[40 83]
[41 82]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[55 62]
[56 61]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[131 161]
[132 160]
[133 159]
[134 158]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
