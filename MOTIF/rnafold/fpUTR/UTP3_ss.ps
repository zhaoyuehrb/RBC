%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGUACGCCACGCGGAGAGCAUGCUGGGGGCCGGAAGGAAGAGGAAAUUCCAGUAGCCGAUCAGGAGUCUGCAAACUCCGGUGGUAGGGGAGCGCGCUGCUGUUUAGAGCCACGAGUUACCGGAGCGCCUGAUUCCUGCGCCGAAGUCAGUGGUGGCCGAAAGUCCGGAGUCGCUGUAAAACCUGAGAUUGUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[229.69462585 331.48464966]
[228.83947754 319.73648071]
[233.81529236 308.92761230]
[225.97781372 296.13800049]
[218.14033508 283.34841919]
[203.64242554 280.13186646]
[195.51191711 267.27304077]
[198.98400879 252.08811951]
[191.14653015 239.29850769]
[183.30905151 226.50891113]
[175.47157288 213.71929932]
[167.63409424 200.92970276]
[159.79661560 188.14010620]
[151.17152405 175.86785889]
[141.79289246 164.16139221]
[132.41424561 152.45494080]
[118.41819763 147.35987854]
[115.82816315 131.75212097]
[106.44952393 120.04566193]
[93.96646118 120.17477417]
[83.60391235 113.21337891]
[69.33806610 117.84863281]
[62.13568878 123.48165131]
[54.81160355 122.44274902]
[40.47470856 126.85335541]
[26.13781548 131.26396179]
[11.80091953 135.67456055]
[-2.53597569 140.08517456]
[-16.87287140 144.49577332]
[-31.20976639 148.90637207]
[-45.54666138 153.31698608]
[-58.57781982 168.68955994]
[-77.22161102 163.58110046]
[-91.41288757 168.43986511]
[-94.29103851 183.52667236]
[-104.33913422 195.14266968]
[-118.85429382 200.16319275]
[-133.93200684 197.23777771]
[-145.51644897 187.15332031]
[-150.49145508 172.62249756]
[-147.51879883 157.55403137]
[-137.39807129 146.00125122]
[-122.85172272 141.07180786]
[-107.79264832 144.09169006]
[-96.27165222 154.24858093]
[-82.08037567 149.38981628]
[-78.42324829 139.83671570]
[-69.93046570 133.74971008]
[-59.26984787 133.33830261]
[-49.95726776 138.98008728]
[-35.62037277 134.56948853]
[-21.28347588 130.15887451]
[-6.94658041 125.74827576]
[7.39031458 121.33766937]
[21.72720909 116.92706299]
[36.06410599 112.51645660]
[50.40100098 108.10585022]
[64.70281219 103.58278656]
[78.96865845 98.94753265]
[82.67711639 88.02742004]
[91.58142090 80.69837952]
[90.87482452 65.71503448]
[90.16822815 50.73168564]
[89.46163177 35.74833679]
[88.75503540 20.76498795]
[88.04843903 5.78164053]
[87.34184265 -9.20170784]
[78.96305847 -22.62208366]
[86.09223175 -35.69970322]
[85.38563538 -50.68305206]
[84.56137848 -65.66038513]
[83.61952209 -80.63079071]
[82.67766571 -95.60118866]
[71.10555267 -106.02827454]
[70.36363220 -121.22380066]
[80.37557983 -132.19178772]
[79.43372345 -147.16218567]
[78.49186707 -162.13258362]
[77.55000305 -177.10298157]
[76.60814667 -192.07337952]
[73.26621246 -197.79476929]
[73.31484222 -203.48886108]
[75.87935638 -207.52743530]
[75.40819550 -222.52003479]
[74.93703461 -237.51263428]
[74.46586609 -252.50523376]
[73.99470520 -267.49783325]
[62.60554886 -284.12353516]
[72.45254517 -300.75854492]
[71.51068878 -315.72894287]
[70.56883240 -330.69937134]
[61.98027802 -343.98648071]
[68.90316010 -357.17446899]
[67.96130371 -372.14486694]
[67.01944733 -387.11526489]
[55.98468399 -398.76058960]
[58.35191345 -414.62802124]
[72.30519104 -422.54544067]
[87.14076233 -416.43927002]
[91.47804260 -400.99365234]
[81.98984528 -388.05712891]
[82.93170166 -373.08670044]
[83.87355804 -358.11630249]
[92.39474487 -345.89999390]
[85.53923035 -331.64120483]
[86.48108673 -316.67080688]
[87.42295074 -301.70040894]
[95.67245483 -295.65209961]
[99.30269623 -285.85412598]
[96.88647461 -275.46279907]
[88.98730469 -267.96899414]
[89.45846558 -252.97639465]
[89.92962646 -237.98379517]
[90.40078735 -222.99119568]
[90.87195587 -207.99859619]
[91.57855225 -193.01524353]
[92.52040863 -178.04484558]
[93.46226501 -163.07444763]
[94.40412140 -148.10403442]
[95.34597778 -133.13363647]
[106.65362549 -123.50697327]
[107.82206726 -108.33827972]
[97.64806366 -96.54304504]
[98.58992004 -81.57264709]
[99.53178406 -66.60224915]
[103.09249115 -60.11820221]
[100.36898041 -51.38964844]
[101.07557678 -36.40629959]
[109.40382385 -24.05763435]
[102.32518768 -9.90830421]
[103.03179169 5.07504368]
[103.73838806 20.05839157]
[104.44498444 35.04174042]
[105.15158081 50.02508926]
[105.85817719 65.00843811]
[106.56477356 79.99178314]
[119.69825745 92.55664825]
[118.15597534 110.66702271]
[127.53461456 122.37348175]
[142.20149231 128.30586243]
[144.12071228 143.07630920]
[153.49934387 154.78276062]
[162.87799072 166.48921204]
[163.59960938 151.50657654]
[172.89495850 139.73387146]
[187.30151367 135.55642700]
[201.45285034 140.53033447]
[210.07759094 152.80281067]
[209.96302795 167.80238342]
[201.15184021 179.94169617]
[186.92619324 184.69886780]
[172.58621216 180.30262756]
[180.42369080 193.09222412]
[188.26116943 205.88182068]
[196.09864807 218.67143250]
[203.93612671 231.46102905]
[211.77360535 244.25064087]
[226.87977600 248.05079651]
[234.64590454 261.13290405]
[230.92993164 275.51092529]
[238.76741028 288.30053711]
[246.60488892 301.09014893]
[265.17611694 304.79959106]
[274.97851562 320.62921143]
[270.18981934 338.29125977]
[278.42514038 350.82836914]
[292.46865845 358.11468506]
[292.98931885 373.00018311]
[301.22467041 385.53729248]
[315.26815796 392.82363892]
[315.78884888 407.70913696]
[324.02416992 420.24624634]
[332.25952148 432.78335571]
[340.49487305 445.32046509]
[355.41995239 442.43771362]
[370.31109619 445.49090576]
[382.89755249 454.01440430]
[391.25991821 466.70846558]
[394.12301636 481.63735962]
[391.05023193 496.52447510]
[382.51019287 509.09967041]
[369.80514526 517.44531250]
[354.87249756 520.28881836]
[339.98944092 517.19647217]
[327.42547607 508.63986206]
[319.09652710 495.92382812]
[316.27273560 480.98748779]
[319.38464355 466.10848999]
[327.95776367 453.55581665]
[319.72241211 441.01870728]
[311.48706055 428.48159790]
[303.25173950 415.94448853]
[289.79727173 409.55487061]
[288.68756104 393.77264404]
[280.45220947 381.23553467]
[266.99777222 374.84594727]
[265.88803101 359.06369019]
[257.65270996 346.52658081]
[246.23435974 346.68817139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[5 160]
[8 157]
[9 156]
[10 155]
[11 154]
[12 153]
[13 152]
[14 143]
[15 142]
[16 141]
[18 139]
[19 138]
[21 59]
[22 58]
[24 57]
[25 56]
[26 55]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[33 46]
[34 45]
[61 136]
[62 135]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[69 128]
[70 127]
[71 125]
[72 124]
[73 123]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
[89 107]
[90 106]
[91 105]
[93 103]
[94 102]
[95 101]
[165 198]
[166 197]
[168 195]
[169 194]
[171 192]
[172 191]
[173 190]
[174 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
