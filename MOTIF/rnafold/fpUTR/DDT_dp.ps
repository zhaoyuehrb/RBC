%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DDT)
} def

/sequence { (\
GAUCCCGGUGCCAGGGACCCUGCCCAGUUCCAGGCGUCGCCCUGACCCAGAAACGACUGGGCGCCGCCGUCCUGGAAAGGCCCCAGCGCACGGACAUCUGAGGAGCUGUUUCCGUUCCUCUGCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.004024437 ubox
1 98 0.750693795 ubox
2 70 0.004038430 ubox
2 97 0.749441058 ubox
3 17 0.006266647 ubox
3 51 0.005803033 ubox
3 69 0.003978563 ubox
3 94 0.208704958 ubox
3 96 0.703529962 ubox
4 16 0.006858497 ubox
4 50 0.006195560 ubox
4 93 0.214969226 ubox
5 15 0.006861434 ubox
5 92 0.195068226 ubox
5 93 0.961436166 ubox
6 14 0.006860811 ubox
6 66 0.006591276 ubox
6 88 0.004734454 ubox
6 92 0.967487928 ubox
6 126 0.010249639 ubox
7 47 0.007862259 ubox
7 65 0.006776391 ubox
7 83 0.005647711 ubox
7 84 0.007224361 ubox
7 87 0.004900955 ubox
7 91 0.967483708 ubox
7 125 0.010495934 ubox
7 128 0.005124940 ubox
8 46 0.007881266 ubox
8 64 0.006776949 ubox
8 82 0.005670483 ubox
8 83 0.007216274 ubox
8 89 0.995557723 ubox
8 91 0.064214659 ubox
8 124 0.008291416 ubox
8 127 0.004097015 ubox
9 45 0.007402219 ubox
9 63 0.006772062 ubox
9 85 0.004879688 ubox
9 88 0.996043484 ubox
9 90 0.078189382 ubox
10 62 0.006741289 ubox
10 81 0.009211037 ubox
10 84 0.004829015 ubox
10 87 0.996624854 ubox
10 89 0.079171500 ubox
10 123 0.008051931 ubox
11 61 0.005485051 ubox
11 80 0.009219765 ubox
11 86 0.995988549 ubox
11 88 0.079039016 ubox
11 122 0.007964541 ubox
12 22 0.004000698 ubox
12 44 0.013932719 ubox
12 79 0.009209042 ubox
13 21 0.006145866 ubox
13 43 0.014002908 ubox
13 119 0.004132910 ubox
14 20 0.006325065 ubox
14 25 0.010010152 ubox
14 31 0.003583958 ubox
14 42 0.013902140 ubox
14 82 0.011197877 ubox
14 83 0.858395417 ubox
14 84 0.501265504 ubox
14 118 0.004269549 ubox
15 19 0.006224086 ubox
15 24 0.010021245 ubox
15 30 0.003589858 ubox
15 40 0.003214813 ubox
15 41 0.013774890 ubox
15 81 0.011302029 ubox
15 82 0.858978284 ubox
15 83 0.501751366 ubox
15 84 0.098797665 ubox
15 117 0.004272200 ubox
16 23 0.009995841 ubox
16 29 0.003589784 ubox
16 38 0.006870612 ubox
16 40 0.012384752 ubox
16 81 0.855146687 ubox
16 82 0.500932926 ubox
16 83 0.098884888 ubox
16 116 0.004268747 ubox
17 28 0.003881461 ubox
17 37 0.010780583 ubox
17 115 0.004303561 ubox
18 27 0.004003244 ubox
18 36 0.011221217 ubox
18 80 0.427706940 ubox
18 114 0.004321760 ubox
19 34 0.011456038 ubox
19 79 0.343118879 ubox
19 80 0.872123042 ubox
20 27 0.022342095 ubox
20 33 0.011459965 ubox
20 79 0.912202655 ubox
20 80 0.015686316 ubox
21 26 0.021058388 ubox
21 32 0.011460279 ubox
21 36 0.007603357 ubox
21 63 0.006572565 ubox
21 78 0.944970692 ubox
21 79 0.015516244 ubox
22 28 0.007403416 ubox
22 31 0.011439854 ubox
22 35 0.008373966 ubox
22 62 0.010897970 ubox
22 81 0.218027480 ubox
23 27 0.008702611 ubox
23 34 0.008367556 ubox
23 61 0.010907332 ubox
23 75 0.054814426 ubox
23 80 0.219402897 ubox
24 33 0.008354943 ubox
24 60 0.010908365 ubox
24 74 0.039678639 ubox
24 75 0.966144411 ubox
24 79 0.218719591 ubox
24 80 0.025904645 ubox
25 59 0.010908469 ubox
25 74 0.967452195 ubox
25 79 0.027970835 ubox
25 108 0.004268105 ubox
26 58 0.010905776 ubox
26 73 0.967697495 ubox
26 107 0.004317127 ubox
27 57 0.010898389 ubox
27 72 0.964240530 ubox
27 106 0.004325073 ubox
28 56 0.010550123 ubox
28 69 0.018314876 ubox
28 76 0.005029902 ubox
28 77 0.241233230 ubox
28 78 0.011131131 ubox
28 105 0.004322658 ubox
29 51 0.004777114 ubox
29 55 0.009171353 ubox
29 76 0.248456122 ubox
29 77 0.008269260 ubox
29 104 0.004322039 ubox
30 50 0.005440587 ubox
30 75 0.249124506 ubox
30 103 0.004323354 ubox
31 44 0.004905832 ubox
31 74 0.249125269 ubox
31 102 0.004308200 ubox
32 43 0.004961142 ubox
32 73 0.248974657 ubox
33 42 0.004679502 ubox
33 48 0.010601769 ubox
33 65 0.019693473 ubox
33 68 0.968478934 ubox
33 71 0.036237658 ubox
33 72 0.243617413 ubox
34 40 0.003239695 ubox
34 41 0.004347783 ubox
34 47 0.010618041 ubox
34 64 0.019700717 ubox
34 67 0.969128812 ubox
34 70 0.044899424 ubox
34 71 0.240837836 ubox
35 39 0.003614348 ubox
35 63 0.019659742 ubox
35 66 0.969387675 ubox
35 69 0.241235546 ubox
36 46 0.011049945 ubox
36 62 0.019188034 ubox
36 64 0.049159937 ubox
36 65 0.966134262 ubox
36 67 0.028396782 ubox
36 68 0.238512451 ubox
36 70 0.007970608 ubox
37 45 0.014398823 ubox
37 61 0.006559054 ubox
37 63 0.015263849 ubox
37 66 0.032656573 ubox
37 69 0.005536347 ubox
38 44 0.015017734 ubox
38 63 0.965523947 ubox
38 66 0.206463043 ubox
38 69 0.018120132 ubox
39 43 0.009277394 ubox
39 62 0.967489438 ubox
39 64 0.084487613 ubox
39 65 0.201977422 ubox
39 67 0.118125428 ubox
39 68 0.014297560 ubox
40 61 0.963941855 ubox
40 63 0.093986575 ubox
40 66 0.118973920 ubox
41 60 0.959720958 ubox
41 61 0.011479470 ubox
42 50 0.027035363 ubox
42 59 0.954824184 ubox
42 60 0.012850603 ubox
42 61 0.004158116 ubox
43 49 0.054521129 ubox
43 55 0.105494655 ubox
43 59 0.011382599 ubox
43 63 0.216325841 ubox
44 48 0.054380946 ubox
44 54 0.108933640 ubox
44 58 0.043791992 ubox
44 62 0.242975445 ubox
44 65 0.004795977 ubox
46 60 0.008294188 ubox
46 61 0.265130241 ubox
47 59 0.008338064 ubox
47 60 0.280031385 ubox
48 59 0.294110743 ubox
49 58 0.333682041 ubox
50 57 0.332710424 ubox
54 88 0.009384496 ubox
55 87 0.010023965 ubox
57 86 0.010699896 ubox
58 85 0.010873519 ubox
59 84 0.010908096 ubox
60 83 0.010908404 ubox
61 82 0.010907317 ubox
63 81 0.012652181 ubox
64 75 0.007190808 ubox
64 80 0.012706798 ubox
64 93 0.004359365 ubox
65 74 0.007213611 ubox
65 79 0.012684117 ubox
65 92 0.004374464 ubox
66 73 0.005496281 ubox
66 81 0.003359036 ubox
66 91 0.004363136 ubox
67 75 0.013083638 ubox
67 80 0.003389553 ubox
67 93 0.004668340 ubox
68 74 0.013115472 ubox
68 79 0.003388652 ubox
68 92 0.004687686 ubox
69 73 0.008094969 ubox
69 89 0.006960160 ubox
69 91 0.004685811 ubox
70 88 0.006889606 ubox
70 90 0.004633686 ubox
72 86 0.009428722 ubox
73 85 0.009566971 ubox
74 84 0.009558760 ubox
75 83 0.009520561 ubox
86 127 0.008515730 ubox
87 126 0.008535326 ubox
88 125 0.008442515 ubox
88 127 0.004931610 ubox
89 126 0.004816819 ubox
91 100 0.004121415 ubox
91 126 0.145920086 ubox
92 99 0.005531048 ubox
92 124 0.035768960 ubox
92 125 0.151656281 ubox
92 128 0.028561583 ubox
93 98 0.006543689 ubox
93 123 0.037365527 ubox
93 124 0.151437097 ubox
93 127 0.031210763 ubox
95 122 0.217205084 ubox
96 121 0.214899290 ubox
99 122 0.061958771 ubox
99 126 0.012273423 ubox
100 120 0.997708676 ubox
100 121 0.010927934 ubox
100 125 0.006822061 ubox
101 119 0.999589448 ubox
102 113 0.003430280 ubox
102 118 0.999965309 ubox
103 112 0.003445764 ubox
103 117 0.999970167 ubox
104 111 0.003391647 ubox
104 116 0.999388925 ubox
105 115 0.999123815 ubox
106 114 0.999025973 ubox
107 114 0.013952198 ubox
108 113 0.306041156 ubox
1 98 0.9500000 lbox
2 97 0.9500000 lbox
3 96 0.9500000 lbox
5 93 0.9500000 lbox
6 92 0.9500000 lbox
7 91 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
10 87 0.9500000 lbox
11 86 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
16 81 0.9500000 lbox
19 80 0.9500000 lbox
20 79 0.9500000 lbox
21 78 0.9500000 lbox
24 75 0.9500000 lbox
25 74 0.9500000 lbox
26 73 0.9500000 lbox
27 72 0.9500000 lbox
33 68 0.9500000 lbox
34 67 0.9500000 lbox
35 66 0.9500000 lbox
36 65 0.9500000 lbox
38 63 0.9500000 lbox
39 62 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
100 120 0.9500000 lbox
101 119 0.9500000 lbox
102 118 0.9500000 lbox
103 117 0.9500000 lbox
104 116 0.9500000 lbox
105 115 0.9500000 lbox
106 114 0.9500000 lbox
showpage
end
%%EOF
