%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAACUUUAGGAAAUUAGUACCAGACUUUUAUAUUGGUCAACAGCAAAAUGAACAUUACUACUCAGCCUCCAACACAUGCAGUUUGCCUAUACCAGGGAUCCUGUCAAAAUAUACACCACUUAUAGCUUCUUAAGUGCAGUUAUCAUAGAGCACAGUCCCUGACAUCACACAGCUGCAGAG\
) } def
/len { sequence length } bind def

/coor [
[133.88504028 139.21075439]
[125.45434570 145.14151001]
[116.01661682 149.28637695]
[105.94524384 151.48138428]
[95.63867188 151.63969421]
[85.50463867 149.75503540]
[75.94406891 145.90197754]
[67.33519745 140.23294067]
[60.01860428 132.97221375]
[54.28375626 124.40705109]
[50.35752869 114.87629700]
[35.51694107 117.05735016]
[20.67635536 119.23841095]
[14.74571609 134.66012573]
[1.92513549 144.93357849]
[-14.23281860 147.33311462]
[-29.31139946 141.29840088]
[-39.23697662 128.56161499]
[-54.03793716 130.99711609]
[-68.83889771 133.43260193]
[-83.63985443 135.86808777]
[-86.47893524 149.83793640]
[-93.90388489 161.97201538]
[-105.00392914 170.82102966]
[-118.43080139 175.33625793]
[-132.56251526 174.99380493]
[-145.69924927 169.85528564]
[-156.26786804 160.55795288]
[-163.01025391 148.23579407]
[-177.85084534 150.41685486]
[-192.69143677 152.59790039]
[-207.53201294 154.77896118]
[-222.37260437 156.96002197]
[-234.90107727 166.62168884]
[-248.61813354 160.81719971]
[-263.45870972 162.99826050]
[-278.29928589 165.17932129]
[-285.37817383 178.98762512]
[-299.23660278 185.96786499]
[-314.54571533 183.43600464]
[-325.41888428 172.36558533]
[-327.67510986 157.01341248]
[-320.44686890 143.28271484]
[-306.51354980 136.45323181]
[-291.23278809 139.15101624]
[-280.48034668 150.33872986]
[-265.63977051 148.15766907]
[-250.79917908 145.97662354]
[-239.33219910 136.47096252]
[-224.55366516 142.11943054]
[-209.71307373 139.93836975]
[-194.87248230 137.75732422]
[-180.03190613 135.57626343]
[-165.19131470 133.39521790]
[-161.56231689 117.98111725]
[-152.27763367 105.10557556]
[-138.73272705 96.75426483]
[-122.98284149 94.22904205]
[-107.43110657 97.94512939]
[-94.46192169 107.36313629]
[-86.07534790 121.06713867]
[-71.27439117 118.63164520]
[-56.47343063 116.19615173]
[-41.67247009 113.76065826]
[-37.70159149 100.67967987]
[-28.43363380 90.54065704]
[-15.63823032 85.36418152]
[-1.79531038 86.21512604]
[10.38550758 92.98411560]
[18.49530029 104.39781952]
[33.33588409 102.21676636]
[48.17647171 100.03571320]
[52.00895691 80.44139862]
[62.96456909 63.75008774]
[79.41720581 52.43921661]
[98.92487335 48.18761444]
[118.59211731 51.62632370]
[135.49980164 62.24495316]
[147.13838196 78.46742249]
[161.54063416 74.27513885]
[175.94288635 70.08285522]
[190.34512329 65.89057159]
[204.74737549 61.69828415]
[219.14962769 57.50600052]
[233.55187988 53.31371689]
[233.62582397 38.21820068]
[237.94607544 23.76974869]
[246.15428162 11.13684368]
[257.57809448 1.33863246]
[271.28610229 -4.83730173]
[286.16390991 -6.89823914]
[301.00454712 -4.68562317]
[314.60659790 1.61277592]
[325.87130737 11.47876453]
[333.89138794 24.10634613]
[348.29364014 19.91406250]
[362.69589233 15.72177792]
[377.09811401 11.52949333]
[391.50036621 7.33720875]
[405.90261841 3.14492416]
[420.30487061 -1.04736030]
[427.94946289 -14.61931229]
[442.61511230 -18.66571999]
[455.50677490 -11.29412556]
[469.90902710 -15.48641014]
[484.31127930 -19.67869377]
[484.72799683 -35.48004532]
[489.99707031 -50.36224365]
[499.59219360 -62.87479019]
[512.56610107 -71.80207062]
[527.64392090 -76.28146362]
[543.34875488 -75.88666534]
[558.14587402 -70.66824341]
[570.59313965 -61.14754486]
[579.48126221 -48.26457977]
[593.80944824 -52.70348358]
[601.21990967 -66.40466309]
[615.81396484 -70.70223236]
[628.83026123 -63.55302429]
[643.15844727 -67.99192810]
[657.48657227 -72.43082428]
[671.81475830 -76.86972809]
[686.14288330 -81.30862427]
[700.47106934 -85.74752808]
[705.34063721 -100.48071289]
[717.95977783 -109.51049042]
[733.47619629 -109.36471558]
[745.92346191 -100.09944916]
[750.51538086 -85.27737427]
[745.48626709 -70.59787750]
[732.76989746 -61.70553207]
[717.25598145 -62.01961899]
[704.90997314 -71.41936493]
[690.58178711 -66.98046875]
[676.25366211 -62.54156494]
[661.92547607 -58.10266495]
[647.59729004 -53.66376495]
[633.26916504 -49.22486496]
[626.57434082 -35.96910477]
[612.10681152 -31.26331711]
[598.24835205 -38.37532043]
[583.92016602 -33.93642044]
[584.07513428 -19.67061996]
[580.19549561 -5.92506409]
[572.58764648 6.18146515]
[561.86187744 15.66096115]
[548.88336182 21.73681831]
[534.70220947 23.90744972]
[520.46887207 21.98768616]
[507.34045410 16.12453461]
[496.38690186 6.78596115]
[488.50357056 -5.27644634]
[474.10131836 -1.08416164]
[459.69906616 3.10812283]
[452.77770996 16.24700546]
[438.23150635 20.70374298]
[424.49716187 13.35488796]
[410.09490967 17.54717255]
[395.69265747 21.73945618]
[381.29040527 25.93174171]
[366.88815308 30.12402534]
[352.48590088 34.31631088]
[338.08367920 38.50859451]
[338.09371948 53.46778107]
[333.88385010 67.83818054]
[325.78710938 80.45278931]
[314.45242310 90.28466797]
[300.79281616 96.53054810]
[285.91171265 98.67649078]
[271.01391602 96.54011536]
[257.30801392 90.28609467]
[245.90826416 80.41349792]
[237.74415588 67.71596527]
[223.34190369 71.90824890]
[208.93966675 76.10053253]
[194.53741455 80.29281616]
[180.13516235 84.48509979]
[165.73292542 88.67738342]
[151.33067322 92.86966705]
[151.72650146 103.16986084]
[150.07594299 113.34464264]
[146.44427490 122.99148560]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 72]
[12 71]
[13 70]
[18 64]
[19 63]
[20 62]
[21 61]
[29 54]
[30 53]
[31 52]
[32 51]
[33 50]
[35 48]
[36 47]
[37 46]
[79 179]
[80 178]
[81 177]
[82 176]
[83 175]
[84 174]
[85 173]
[95 163]
[96 162]
[97 161]
[98 160]
[99 159]
[100 158]
[101 157]
[104 154]
[105 153]
[106 152]
[115 142]
[116 141]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
