%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CENPH)
} def

/sequence { (\
UUUCCCGGCGUCCAUUUAGUGGCGGGAAAAGCGACCUUUUCUGAGCGCGUUUGCCUGUUGAGUGGUAGCCUUUCCCCUCAACCAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.036485521 ubox
1 29 0.679104347 ubox
1 30 0.035623021 ubox
2 27 0.030039765 ubox
2 28 0.939611061 ubox
2 29 0.038237396 ubox
2 30 0.006430832 ubox
3 26 0.007160534 ubox
3 27 0.992498965 ubox
3 28 0.030648217 ubox
4 25 0.006639105 ubox
4 26 0.999087871 ubox
5 24 0.005694537 ubox
5 25 0.999111526 ubox
5 26 0.011613404 ubox
6 24 0.998185060 ubox
6 25 0.012425320 ubox
6 49 0.003594574 ubox
7 13 0.003247330 ubox
7 23 0.986723415 ubox
7 51 0.003331180 ubox
7 55 0.003417644 ubox
7 70 0.036644536 ubox
8 12 0.003525314 ubox
8 20 0.087400047 ubox
8 23 0.115438132 ubox
8 48 0.010782220 ubox
8 50 0.004102231 ubox
8 54 0.003434147 ubox
8 69 0.036690790 ubox
9 19 0.091040503 ubox
9 21 0.792069512 ubox
9 22 0.154461676 ubox
9 24 0.042390976 ubox
9 47 0.010999231 ubox
9 49 0.004159691 ubox
9 53 0.003423690 ubox
9 68 0.036659518 ubox
10 20 0.627400913 ubox
10 23 0.095809736 ubox
10 46 0.010972041 ubox
10 48 0.004142223 ubox
10 66 0.003758334 ubox
11 19 0.307856076 ubox
11 22 0.038875202 ubox
11 45 0.010545212 ubox
11 47 0.004050592 ubox
12 21 0.039033268 ubox
12 22 0.571149604 ubox
12 65 0.036620604 ubox
13 21 0.574240548 ubox
13 43 0.007441853 ubox
13 64 0.036693332 ubox
14 20 0.567088749 ubox
14 42 0.007144696 ubox
14 63 0.036683846 ubox
15 19 0.525231717 ubox
15 62 0.036640135 ubox
16 21 0.003301222 ubox
16 61 0.036556860 ubox
17 60 0.036066502 ubox
18 37 0.003919007 ubox
18 59 0.030507079 ubox
19 35 0.006210089 ubox
19 48 0.004550053 ubox
19 58 0.012418361 ubox
20 34 0.006808091 ubox
20 47 0.004535062 ubox
20 60 0.005371409 ubox
21 36 0.004161628 ubox
21 46 0.004407102 ubox
21 55 0.008980230 ubox
21 59 0.019419669 ubox
22 32 0.006880321 ubox
22 35 0.004165530 ubox
22 46 0.003609598 ubox
22 54 0.008988735 ubox
22 58 0.034229321 ubox
23 31 0.006880798 ubox
23 33 0.004191404 ubox
23 43 0.004881450 ubox
23 45 0.003866393 ubox
23 53 0.008991205 ubox
23 57 0.035504961 ubox
24 32 0.004186544 ubox
24 42 0.004597103 ubox
24 52 0.007947193 ubox
24 56 0.035478967 ubox
25 41 0.004254699 ubox
25 42 0.009643632 ubox
25 51 0.006038627 ubox
25 55 0.035532624 ubox
26 40 0.003854420 ubox
26 41 0.010453652 ubox
26 50 0.003622482 ubox
26 54 0.035482599 ubox
27 39 0.003662226 ubox
27 40 0.010842019 ubox
27 51 0.005117975 ubox
27 52 0.020588678 ubox
28 38 0.003434258 ubox
28 39 0.011457583 ubox
28 50 0.008320773 ubox
28 51 0.035843454 ubox
28 52 0.039742453 ubox
29 38 0.012121215 ubox
29 50 0.040311174 ubox
29 51 0.058920843 ubox
29 52 0.586954176 ubox
30 37 0.012618206 ubox
30 42 0.003659459 ubox
30 50 0.063041096 ubox
30 51 0.845132508 ubox
30 52 0.034754193 ubox
31 36 0.012535438 ubox
31 41 0.003748447 ubox
31 46 0.036336813 ubox
31 48 0.356151324 ubox
31 50 0.925505585 ubox
31 51 0.029637866 ubox
31 54 0.014622585 ubox
31 86 0.006461574 ubox
32 43 0.004875294 ubox
32 45 0.036337452 ubox
32 47 0.356583723 ubox
32 49 0.932299783 ubox
32 53 0.014702038 ubox
32 85 0.006426019 ubox
33 41 0.012063958 ubox
33 42 0.004558756 ubox
33 46 0.349298019 ubox
33 48 0.931690687 ubox
33 51 0.015356169 ubox
33 52 0.012516216 ubox
34 39 0.003489217 ubox
34 40 0.011817544 ubox
34 50 0.017840391 ubox
34 51 0.009877896 ubox
35 49 0.019371374 ubox
36 45 0.988121834 ubox
37 44 0.987872767 ubox
37 45 0.023015254 ubox
38 43 0.962653945 ubox
38 44 0.032304350 ubox
38 45 0.011333537 ubox
39 43 0.033919205 ubox
39 44 0.010172300 ubox
39 45 0.005395713 ubox
40 44 0.004534033 ubox
41 85 0.004742905 ubox
42 49 0.003329702 ubox
42 84 0.004844199 ubox
43 48 0.004391436 ubox
43 83 0.004848964 ubox
44 56 0.008776515 ubox
45 54 0.007572635 ubox
45 55 0.008963384 ubox
46 53 0.007657381 ubox
47 52 0.005213362 ubox
47 54 0.012378296 ubox
48 53 0.012375612 ubox
49 86 0.016185428 ubox
50 85 0.013752617 ubox
51 84 0.010480883 ubox
51 85 0.014359417 ubox
52 84 0.021879424 ubox
52 87 0.630448978 ubox
53 83 0.025001619 ubox
53 86 0.987756975 ubox
54 85 0.962160557 ubox
55 85 0.256604253 ubox
56 84 0.340072500 ubox
57 82 0.968060156 ubox
57 83 0.242594584 ubox
57 86 0.003706063 ubox
58 81 0.997955258 ubox
58 85 0.003519849 ubox
59 80 0.998702519 ubox
60 79 0.999299668 ubox
61 78 0.999136761 ubox
62 77 0.997482499 ubox
64 70 0.007299837 ubox
64 71 0.005216711 ubox
64 73 0.009776745 ubox
64 74 0.023307080 ubox
64 75 0.933419950 ubox
64 76 0.352109219 ubox
64 77 0.005494235 ubox
65 69 0.007258798 ubox
65 70 0.005925078 ubox
65 72 0.010319203 ubox
65 73 0.022748323 ubox
65 74 0.935334566 ubox
65 75 0.347979545 ubox
65 76 0.006218545 ubox
67 73 0.227610556 ubox
68 72 0.162873918 ubox
77 85 0.003925780 ubox
78 84 0.003809173 ubox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
53 86 0.9500000 lbox
54 85 0.9500000 lbox
57 82 0.9500000 lbox
58 81 0.9500000 lbox
59 80 0.9500000 lbox
60 79 0.9500000 lbox
61 78 0.9500000 lbox
62 77 0.9500000 lbox
64 75 0.9500000 lbox
65 74 0.9500000 lbox
showpage
end
%%EOF
