%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HMHB1)
} def

/sequence { (\
CCACAUCCCAGGAGGCCGAGGCGGCUUGCCCCGCAUCUCAGAAGCCGGGCAGGCCCUGAGCCUUCUGACCUCACAUCCUCUGCCACACCACAGUGGAGAAACCAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.006695955 ubox
1 96 0.014779144 ubox
2 11 0.007476804 ubox
2 67 0.004105793 ubox
2 95 0.014841061 ubox
3 94 0.014717568 ubox
4 67 0.004814179 ubox
4 93 0.014363117 ubox
5 66 0.003412851 ubox
5 76 0.005469905 ubox
6 68 0.037432791 ubox
6 75 0.005603669 ubox
6 97 0.004333338 ubox
6 99 0.027735695 ubox
6 106 0.082339067 ubox
7 67 0.033063564 ubox
7 96 0.004476546 ubox
7 98 0.029492460 ubox
7 105 0.087757672 ubox
8 95 0.004231140 ubox
9 67 0.996346027 ubox
10 66 0.999019738 ubox
10 71 0.003332501 ubox
11 65 0.999551822 ubox
11 70 0.003562950 ubox
12 64 0.998839092 ubox
12 65 0.003933130 ubox
12 69 0.003528881 ubox
12 72 0.024793921 ubox
13 63 0.999348130 ubox
13 64 0.003210806 ubox
13 71 0.024966483 ubox
14 62 0.999669646 ubox
14 70 0.025040586 ubox
15 61 0.999674446 ubox
15 69 0.025007439 ubox
16 60 0.998876208 ubox
17 58 0.295092918 ubox
17 67 0.020659809 ubox
18 57 0.148338605 ubox
18 64 0.018502503 ubox
18 65 0.011546833 ubox
18 66 0.010443593 ubox
19 57 0.679166002 ubox
19 63 0.023498905 ubox
19 64 0.008319749 ubox
20 55 0.011720714 ubox
20 56 0.667512682 ubox
20 57 0.705787788 ubox
20 62 0.025173521 ubox
21 54 0.010986377 ubox
21 55 0.471829140 ubox
21 56 0.735201999 ubox
21 61 0.025192117 ubox
22 53 0.010252011 ubox
22 58 0.003373524 ubox
22 60 0.025193298 ubox
23 55 0.880147642 ubox
23 56 0.007025828 ubox
24 54 0.998914905 ubox
24 55 0.005099603 ubox
25 52 0.005063750 ubox
25 53 0.999928353 ubox
26 51 0.003822007 ubox
26 52 0.999069765 ubox
27 51 0.999081011 ubox
28 50 0.999988943 ubox
29 49 0.999437949 ubox
30 48 0.998878536 ubox
30 49 0.033382768 ubox
31 47 0.997777555 ubox
31 48 0.047205123 ubox
32 47 0.057798243 ubox
33 45 0.997731646 ubox
33 46 0.050043506 ubox
34 44 0.998542439 ubox
36 42 0.862224121 ubox
37 41 0.866811275 ubox
37 44 0.021641720 ubox
38 43 0.025680515 ubox
64 106 0.007386518 ubox
65 105 0.008499739 ubox
66 73 0.005049011 ubox
66 75 0.004656189 ubox
66 104 0.008697534 ubox
67 72 0.009815413 ubox
67 74 0.008532108 ubox
67 77 0.007790398 ubox
67 103 0.009005643 ubox
68 76 0.011711520 ubox
70 98 0.048015149 ubox
70 105 0.164000091 ubox
71 96 0.004642492 ubox
71 97 0.045011741 ubox
71 99 0.101605503 ubox
71 104 0.158616380 ubox
71 106 0.237865460 ubox
72 82 0.010313442 ubox
72 95 0.007411605 ubox
72 96 0.041759204 ubox
72 98 0.106670099 ubox
72 105 0.249238643 ubox
73 81 0.009771735 ubox
73 94 0.008814141 ubox
74 82 0.024118346 ubox
74 93 0.008646755 ubox
74 95 0.038210753 ubox
75 81 0.022665835 ubox
75 94 0.037753010 ubox
76 93 0.020314549 ubox
76 97 0.302720691 ubox
76 99 0.033529740 ubox
76 106 0.076524183 ubox
77 95 0.005055505 ubox
77 96 0.317478635 ubox
77 98 0.028423690 ubox
77 105 0.081248187 ubox
78 93 0.011853814 ubox
78 95 0.317308529 ubox
78 96 0.013707066 ubox
78 98 0.128230840 ubox
78 105 0.059089705 ubox
79 92 0.012344184 ubox
79 95 0.012956870 ubox
79 97 0.129894486 ubox
79 99 0.806467255 ubox
79 104 0.038752326 ubox
79 106 0.366655390 ubox
80 93 0.318790027 ubox
80 96 0.123324679 ubox
80 98 0.845301650 ubox
80 105 0.385100495 ubox
81 87 0.007574260 ubox
81 90 0.016907149 ubox
81 92 0.319886331 ubox
81 95 0.118878596 ubox
81 97 0.842375696 ubox
81 104 0.385010772 ubox
82 86 0.007885867 ubox
82 89 0.017617248 ubox
82 91 0.319710794 ubox
82 94 0.118005998 ubox
82 103 0.384636988 ubox
83 93 0.118050107 ubox
83 96 0.936720715 ubox
84 95 0.938139920 ubox
85 94 0.937956572 ubox
86 93 0.936980899 ubox
86 95 0.025789585 ubox
87 94 0.026943982 ubox
88 93 0.027652048 ubox
88 96 0.041686368 ubox
89 95 0.041751612 ubox
90 94 0.033838055 ubox
93 102 0.003435559 ubox
94 101 0.003422854 ubox
94 104 0.009594848 ubox
95 103 0.010726237 ubox
96 102 0.010860123 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
36 42 0.9500000 lbox
37 41 0.9500000 lbox
79 99 0.9500000 lbox
80 98 0.9500000 lbox
81 97 0.9500000 lbox
83 96 0.9500000 lbox
84 95 0.9500000 lbox
85 94 0.9500000 lbox
86 93 0.9500000 lbox
showpage
end
%%EOF
