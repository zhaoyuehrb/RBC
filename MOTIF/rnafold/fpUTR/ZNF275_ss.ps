%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACGCGCCGCGGGGCUGUUAGCUCGGCUGGGCACGGGCGGCUCCGUGGCGCUUCCUGCCACGCCAGGCCUGCCUGGGCCGCGCCAGCGCCGCUCCACCGAGGGCCGCGCGUCGGCCGCCGCCGGGCCUGGAUGGGGCCUUACCUGCCAGGCUGAUCCCUUGGAGUAGUUCUGAGGC\
) } def
/len { sequence length } bind def

/coor [
[96.18960571 147.06993103]
[87.30324554 145.48504639]
[78.88076782 142.23831177]
[71.22991180 137.44834900]
[64.63021088 131.29017639]
[51.95961761 139.31863403]
[39.28902817 147.34709167]
[26.61843872 155.37554932]
[13.94784832 163.40400696]
[1.27725852 171.43246460]
[-11.39333153 179.46092224]
[-24.06392097 187.48937988]
[-36.73451233 195.51783752]
[-49.40510178 203.54629517]
[-62.07569122 211.57475281]
[-74.74628448 219.60321045]
[-87.41687012 227.63168335]
[-100.08746338 235.66014099]
[-112.75804901 243.68859863]
[-125.42864227 251.71705627]
[-133.92924500 269.97372437]
[-153.24789429 270.00469971]
[-165.62725830 278.47531128]
[-178.00660706 286.94595337]
[-190.38597107 295.41656494]
[-196.98469543 310.42953491]
[-213.31300354 311.95214844]
[-222.57373047 298.41809082]
[-215.24024963 283.75003052]
[-198.85659790 283.03720093]
[-186.47723389 274.56658936]
[-174.09786987 266.09597778]
[-161.71850586 257.62533569]
[-160.73809814 247.41722107]
[-154.14999390 239.27331543]
[-143.95249939 236.04933167]
[-133.45709229 239.04646301]
[-120.78650665 231.01800537]
[-108.11592102 222.98954773]
[-95.44532776 214.96109009]
[-82.77474213 206.93263245]
[-70.10414886 198.90417480]
[-57.43355942 190.87570190]
[-44.76296997 182.84724426]
[-32.09238052 174.81878662]
[-19.42179108 166.79032898]
[-6.75120020 158.76187134]
[5.91938972 150.73341370]
[18.58997917 142.70495605]
[31.26057053 134.67649841]
[43.93115997 126.64804077]
[56.60174942 118.61958313]
[52.83411407 102.34012604]
[54.97180939 85.76768494]
[62.74718094 70.97717285]
[75.18673706 59.82041931]
[90.73299408 53.69428253]
[107.43950653 53.36577988]
[112.12509155 39.11638260]
[116.81067657 24.86698341]
[113.77133942 9.34045792]
[125.09710693 -0.33302146]
[129.78268433 -14.58241844]
[134.34234619 -28.87260818]
[138.77572632 -43.20248032]
[143.20909119 -57.53235245]
[147.64247131 -71.86222076]
[152.07583618 -86.19209290]
[156.50921631 -100.52196503]
[160.94258118 -114.85183716]
[165.37596130 -129.18170166]
[169.68269348 -143.55014038]
[173.86248779 -157.95602417]
[164.52069092 -170.20498657]
[164.18666077 -185.42805481]
[172.77893066 -197.78268433]
[186.83033752 -202.65054321]
[191.01011658 -217.05642700]
[195.18989563 -231.46231079]
[199.36967468 -245.86819458]
[203.54946899 -260.27407837]
[207.60195923 -274.71627808]
[211.52684021 -289.19369507]
[215.45173645 -303.67108154]
[214.12138367 -310.19711304]
[216.02146912 -315.59338379]
[219.77905273 -318.58544922]
[224.21241760 -332.91531372]
[228.64579773 -347.24520874]
[232.95254517 -361.61364746]
[237.13232422 -376.01950073]
[236.51925659 -385.16430664]
[241.51507568 -390.64154053]
[245.94845581 -404.97140503]
[250.38182068 -419.30126953]
[246.22045898 -435.16366577]
[258.06573486 -446.50479126]
[273.73226929 -441.65789795]
[277.10363770 -425.60903931]
[264.71170044 -414.86791992]
[260.27832031 -400.53802490]
[255.84494019 -386.20816040]
[251.53820801 -371.83972168]
[247.35841370 -357.43383789]
[248.51779175 -350.11166382]
[242.97566223 -342.81182861]
[238.54229736 -328.48196411]
[234.10891724 -314.15206909]
[229.92913818 -299.74621582]
[226.00424194 -285.26879883]
[222.07936096 -270.79138184]
[223.36776733 -263.49081421]
[217.95533752 -256.09429932]
[213.77555847 -241.68841553]
[209.59577942 -227.28253174]
[205.41600037 -212.87664795]
[201.23622131 -198.47076416]
[210.50009155 -186.83811951]
[211.14546204 -171.80323792]
[202.71545410 -159.12301636]
[188.26835632 -153.77624512]
[184.08857727 -139.37036133]
[185.24795532 -132.04817200]
[179.70582581 -124.74833679]
[175.27246094 -110.41846466]
[170.83908081 -96.08859253]
[166.40571594 -81.75872040]
[161.97233582 -67.42884827]
[157.53895569 -53.09897995]
[153.10559082 -38.76910782]
[148.67221069 -24.43923569]
[149.70217896 -17.09773254]
[144.03208923 -9.89683628]
[139.34651184 4.35256100]
[142.72097778 18.85987473]
[131.06007385 29.55256653]
[126.37448883 43.80196381]
[121.68890381 58.05136108]
[135.40225220 68.74655151]
[144.31437683 83.68029785]
[147.21665955 100.82730103]
[143.71546936 117.86210632]
[134.28564453 132.47447205]
[143.39955139 144.38819885]
[152.51345825 156.30191040]
[158.50505066 159.21044922]
[161.63655090 163.99833679]
[161.72990417 168.80075073]
[170.41769409 181.02868652]
[179.10546875 193.25663757]
[187.79324341 205.48457336]
[196.58859253 217.63536072]
[205.49082947 229.70806885]
[214.39305115 241.78079224]
[228.81054688 248.29586792]
[230.13661194 263.13131714]
[239.03884888 275.20404053]
[247.94107056 287.27673340]
[262.20770264 296.43643188]
[257.35537720 312.68115234]
[240.40222168 312.51544189]
[235.86836243 296.17898560]
[226.96614075 284.10626221]
[218.06390381 272.03356934]
[204.28315735 266.38198853]
[202.32034302 250.68301392]
[193.41812134 238.61030579]
[184.51588440 226.53759766]
[177.99583435 223.00950623]
[175.56530762 214.17234802]
[166.87753296 201.94441223]
[158.18974304 189.71647644]
[149.50196838 177.48852539]
[140.59974670 165.41581726]
[131.48582458 153.50210571]
[122.37192535 141.58839417]
[114.05022430 145.08534241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[10 47]
[11 46]
[12 45]
[13 44]
[14 43]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[22 33]
[23 32]
[24 31]
[25 30]
[58 138]
[59 137]
[60 136]
[62 134]
[63 133]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 122]
[73 121]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 111]
[83 110]
[84 109]
[87 108]
[88 107]
[89 106]
[90 104]
[91 103]
[93 102]
[94 101]
[95 100]
[143 176]
[144 175]
[145 174]
[148 173]
[149 172]
[150 171]
[151 170]
[152 168]
[153 167]
[154 166]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
