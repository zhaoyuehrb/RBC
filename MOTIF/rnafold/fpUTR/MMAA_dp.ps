%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MMAA)
} def

/sequence { (\
ACUUCCGUGGCUUCGGGCGGGGAGGUCACAAUCACAUUGAGCCAAAACGCAUCCAGUGUUUUCUCCAGUUACAAAUAAAACGAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007932352 ubox
1 26 0.313608005 ubox
1 69 0.069323173 ubox
2 7 0.009212146 ubox
2 10 0.003875644 ubox
2 17 0.006213939 ubox
2 20 0.025996160 ubox
2 21 0.004162918 ubox
2 22 0.011141576 ubox
2 24 0.056024724 ubox
2 25 0.360823903 ubox
2 41 0.009631813 ubox
2 68 0.079769155 ubox
3 9 0.003879091 ubox
3 17 0.004366942 ubox
3 19 0.025392359 ubox
3 20 0.004041784 ubox
3 21 0.007999327 ubox
3 22 0.030086848 ubox
3 23 0.055147278 ubox
3 24 0.361054621 ubox
3 31 0.054379141 ubox
3 40 0.009316005 ubox
3 41 0.005821660 ubox
3 67 0.074383211 ubox
3 68 0.006864812 ubox
3 74 0.014926948 ubox
3 75 0.013709649 ubox
3 78 0.013779261 ubox
3 79 0.015502870 ubox
3 80 0.012231894 ubox
3 83 0.027120484 ubox
3 84 0.237130034 ubox
4 17 0.097273376 ubox
4 21 0.042805622 ubox
4 22 0.051251163 ubox
4 23 0.361897489 ubox
4 30 0.053414714 ubox
4 39 0.008555091 ubox
4 40 0.007661566 ubox
4 67 0.008191017 ubox
4 73 0.014610179 ubox
4 74 0.014234729 ubox
4 77 0.013321144 ubox
4 78 0.015453983 ubox
4 79 0.012902028 ubox
4 82 0.026050630 ubox
4 83 0.272295693 ubox
5 16 0.138537631 ubox
5 17 0.008862694 ubox
5 20 0.091830750 ubox
5 21 0.047925435 ubox
5 22 0.362202735 ubox
5 39 0.008007964 ubox
5 82 0.274263225 ubox
6 15 0.138999873 ubox
6 16 0.008606499 ubox
6 19 0.094010488 ubox
6 20 0.044163364 ubox
6 21 0.362104726 ubox
6 39 0.003175457 ubox
6 82 0.079050345 ubox
7 14 0.138017150 ubox
7 18 0.096281218 ubox
7 29 0.909481797 ubox
7 35 0.012306621 ubox
7 72 0.068120413 ubox
7 81 0.051767267 ubox
8 15 0.006151619 ubox
8 17 0.096030585 ubox
8 19 0.339538272 ubox
8 28 0.910759362 ubox
8 34 0.012024841 ubox
8 44 0.007801741 ubox
8 71 0.068173466 ubox
8 80 0.049090757 ubox
9 14 0.011387288 ubox
9 18 0.308467284 ubox
9 27 0.911856802 ubox
9 33 0.011679322 ubox
9 43 0.012576497 ubox
9 70 0.068031656 ubox
9 76 0.004076236 ubox
10 18 0.194301372 ubox
10 26 0.911416520 ubox
10 32 0.010110511 ubox
10 42 0.012584939 ubox
10 69 0.068015573 ubox
11 17 0.242805216 ubox
11 24 0.060972693 ubox
11 25 0.909897501 ubox
11 41 0.012543930 ubox
11 68 0.068048999 ubox
12 16 0.218855449 ubox
12 21 0.003417335 ubox
12 22 0.006609532 ubox
12 23 0.083779848 ubox
12 24 0.907185204 ubox
12 31 0.006557951 ubox
12 40 0.010416198 ubox
12 67 0.066986445 ubox
12 74 0.005786831 ubox
12 75 0.008625145 ubox
12 84 0.009088922 ubox
13 20 0.007445155 ubox
13 21 0.018141215 ubox
13 22 0.089147769 ubox
13 23 0.906702258 ubox
13 30 0.006308581 ubox
13 39 0.006983684 ubox
13 40 0.006889252 ubox
13 67 0.004729975 ubox
13 73 0.004653820 ubox
13 74 0.008122051 ubox
13 83 0.010445503 ubox
14 19 0.008896406 ubox
14 20 0.023639297 ubox
14 21 0.112303804 ubox
14 22 0.904496634 ubox
14 39 0.009701166 ubox
14 82 0.010580124 ubox
15 38 0.009579866 ubox
15 64 0.003670065 ubox
15 65 0.004354023 ubox
15 66 0.014278442 ubox
15 81 0.010500357 ubox
16 27 0.014925226 ubox
16 37 0.008459679 ubox
16 43 0.005473119 ubox
16 63 0.003665388 ubox
16 64 0.004032956 ubox
16 65 0.014109990 ubox
16 66 0.010168592 ubox
16 70 0.036939439 ubox
17 26 0.015134444 ubox
17 42 0.005565951 ubox
17 63 0.004297383 ubox
17 64 0.010944679 ubox
17 65 0.010089278 ubox
17 69 0.068321442 ubox
18 25 0.015169085 ubox
18 41 0.005567368 ubox
18 68 0.072386605 ubox
18 82 0.003996969 ubox
19 63 0.010083276 ubox
19 64 0.007748223 ubox
19 65 0.006259983 ubox
19 66 0.153141665 ubox
20 33 0.004633710 ubox
20 62 0.008176321 ubox
20 63 0.008429156 ubox
20 64 0.007864279 ubox
20 65 0.153377887 ubox
20 66 0.010436113 ubox
21 32 0.004334739 ubox
21 61 0.006709011 ubox
21 62 0.007431554 ubox
21 63 0.009723552 ubox
21 64 0.153239144 ubox
21 65 0.010286051 ubox
21 66 0.088637164 ubox
22 33 0.011730840 ubox
22 60 0.005543489 ubox
22 61 0.006746389 ubox
22 62 0.008828581 ubox
22 63 0.153436708 ubox
22 64 0.006110866 ubox
22 65 0.088960483 ubox
23 32 0.011750704 ubox
23 59 0.003507636 ubox
23 60 0.006343766 ubox
23 61 0.009124497 ubox
23 62 0.141569890 ubox
23 64 0.088620015 ubox
24 33 0.021987474 ubox
24 43 0.119576240 ubox
24 60 0.008107114 ubox
24 61 0.103600872 ubox
24 63 0.085114546 ubox
24 66 0.008556897 ubox
25 32 0.021827432 ubox
25 35 0.011102179 ubox
25 42 0.120568830 ubox
25 59 0.004631041 ubox
25 60 0.098867543 ubox
25 62 0.074865724 ubox
25 65 0.008596179 ubox
25 72 0.006965012 ubox
25 81 0.012698803 ubox
26 31 0.020856876 ubox
26 34 0.010842271 ubox
26 40 0.046086785 ubox
26 41 0.110866573 ubox
26 71 0.006949757 ubox
26 80 0.012386943 ubox
26 83 0.014163306 ubox
27 39 0.053925722 ubox
27 58 0.030814241 ubox
27 82 0.017552432 ubox
28 38 0.049224534 ubox
28 57 0.030767358 ubox
28 59 0.009686771 ubox
28 69 0.011323465 ubox
29 39 0.112707671 ubox
29 56 0.030615493 ubox
29 58 0.009432795 ubox
29 68 0.011905958 ubox
30 38 0.122799477 ubox
30 57 0.008172444 ubox
30 60 0.015568804 ubox
30 61 0.043712276 ubox
30 62 0.048316141 ubox
30 70 0.036516487 ubox
31 37 0.121647040 ubox
31 52 0.003473543 ubox
31 59 0.012743090 ubox
31 60 0.042668225 ubox
31 61 0.055108671 ubox
31 69 0.036723930 ubox
31 76 0.042092850 ubox
31 85 0.009357543 ubox
32 36 0.108224179 ubox
32 40 0.091586476 ubox
32 51 0.003336031 ubox
32 58 0.003478947 ubox
32 68 0.034712598 ubox
32 75 0.041505679 ubox
32 83 0.066789893 ubox
32 84 0.008572156 ubox
33 39 0.098280286 ubox
33 58 0.035362834 ubox
33 82 0.071489702 ubox
34 38 0.080092327 ubox
34 57 0.035654300 ubox
34 59 0.287083761 ubox
34 69 0.215008040 ubox
35 56 0.035559844 ubox
35 58 0.303778405 ubox
35 68 0.228906802 ubox
36 57 0.303950409 ubox
36 69 0.554131484 ubox
36 76 0.032692608 ubox
36 85 0.016285673 ubox
37 45 0.008550960 ubox
37 46 0.003724575 ubox
37 56 0.303736327 ubox
37 68 0.581622909 ubox
37 74 0.087614965 ubox
37 75 0.032739557 ubox
37 78 0.011571581 ubox
37 79 0.008904971 ubox
37 80 0.007926922 ubox
37 83 0.012979247 ubox
37 84 0.018187841 ubox
38 44 0.012696585 ubox
38 45 0.004776485 ubox
38 49 0.003645445 ubox
38 51 0.003190861 ubox
38 55 0.302890774 ubox
38 67 0.607688281 ubox
38 71 0.019582508 ubox
38 73 0.100913888 ubox
38 74 0.030779146 ubox
38 77 0.012490991 ubox
38 78 0.009760514 ubox
38 79 0.008690811 ubox
38 82 0.013667783 ubox
38 83 0.018122558 ubox
39 43 0.014410566 ubox
39 48 0.004114857 ubox
39 53 0.134142791 ubox
39 54 0.274982664 ubox
39 63 0.034729931 ubox
39 65 0.796508368 ubox
39 66 0.455511141 ubox
39 70 0.019547789 ubox
39 72 0.102404188 ubox
39 76 0.004205869 ubox
39 81 0.006791709 ubox
40 52 0.184127954 ubox
40 62 0.032901983 ubox
40 64 0.898052797 ubox
40 69 0.019560617 ubox
40 70 0.105264824 ubox
41 50 0.304195986 ubox
41 61 0.020314771 ubox
41 63 0.893388476 ubox
41 69 0.107738933 ubox
42 49 0.303931068 ubox
42 68 0.107785433 ubox
44 60 0.017052880 ubox
44 61 0.040010039 ubox
44 62 0.804380006 ubox
45 59 0.010485172 ubox
45 60 0.034885428 ubox
45 61 0.938506667 ubox
45 62 0.024007039 ubox
46 59 0.024964145 ubox
46 60 0.947266317 ubox
46 61 0.020775073 ubox
46 62 0.007039912 ubox
47 57 0.016792797 ubox
47 59 0.949997696 ubox
47 60 0.015345438 ubox
47 61 0.006719850 ubox
48 56 0.017040757 ubox
48 58 0.951001005 ubox
49 57 0.950423900 ubox
49 59 0.014139388 ubox
50 56 0.950280557 ubox
50 58 0.014673274 ubox
51 57 0.014665532 ubox
52 56 0.013680186 ubox
56 72 0.004104090 ubox
57 71 0.004101652 ubox
57 73 0.003359152 ubox
57 82 0.005812332 ubox
58 70 0.004029890 ubox
58 72 0.004020399 ubox
58 81 0.010289685 ubox
59 71 0.004058402 ubox
59 79 0.003551662 ubox
59 80 0.010829614 ubox
60 67 0.006386095 ubox
60 68 0.005258974 ubox
60 74 0.004850008 ubox
60 75 0.007460906 ubox
60 78 0.006497697 ubox
60 79 0.012469392 ubox
60 80 0.005405923 ubox
60 83 0.005499077 ubox
60 84 0.011906011 ubox
61 67 0.006724481 ubox
61 68 0.005965435 ubox
61 73 0.004751107 ubox
61 74 0.008483057 ubox
61 75 0.003602344 ubox
61 77 0.006849886 ubox
61 78 0.012570732 ubox
61 79 0.006276764 ubox
61 82 0.005547622 ubox
61 83 0.013114258 ubox
61 84 0.060446038 ubox
62 67 0.007311166 ubox
62 73 0.008012794 ubox
62 74 0.003890771 ubox
62 77 0.011325849 ubox
62 78 0.006007189 ubox
62 82 0.012611607 ubox
62 83 0.070277089 ubox
63 82 0.071482272 ubox
64 83 0.074187759 ubox
65 82 0.077678201 ubox
68 76 0.066265103 ubox
68 81 0.449469190 ubox
68 85 0.022051387 ubox
69 75 0.067665967 ubox
69 78 0.084550350 ubox
69 79 0.027274208 ubox
69 80 0.449226413 ubox
69 83 0.014068419 ubox
69 84 0.023875566 ubox
70 74 0.057628501 ubox
70 77 0.101298604 ubox
70 78 0.033910912 ubox
70 79 0.443201331 ubox
70 82 0.015616580 ubox
70 83 0.024145685 ubox
71 76 0.093773561 ubox
75 85 0.020898325 ubox
76 84 0.023059663 ubox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
39 65 0.9500000 lbox
40 64 0.9500000 lbox
41 63 0.9500000 lbox
44 62 0.9500000 lbox
45 61 0.9500000 lbox
46 60 0.9500000 lbox
47 59 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
showpage
end
%%EOF
