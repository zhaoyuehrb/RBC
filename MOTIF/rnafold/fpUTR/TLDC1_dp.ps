%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TLDC1)
} def

/sequence { (\
CUGGCAACAGGGAAGGGGCGGCUCUCGAGAGGAGCCCGUGGGCUGCUGGACCGGACCGGACAGCACCAGGAAGCCCGGCAGGAGAAUUCUGCCAGAUAUCAGGACAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.931101773 ubox
1 11 0.059545678 ubox
1 12 0.051675632 ubox
1 15 0.033506949 ubox
1 69 0.003596565 ubox
1 95 0.044404909 ubox
1 102 0.291740730 ubox
1 103 0.018245303 ubox
1 107 0.077570218 ubox
2 9 0.936547113 ubox
2 10 0.041342275 ubox
2 11 0.050753334 ubox
2 14 0.033199726 ubox
2 68 0.003635064 ubox
2 94 0.044155913 ubox
2 101 0.293097620 ubox
2 102 0.012584735 ubox
2 106 0.080337706 ubox
3 8 0.937422145 ubox
3 67 0.003634583 ubox
3 75 0.033403519 ubox
3 76 0.004328820 ubox
3 93 0.042056558 ubox
3 100 0.293008026 ubox
3 105 0.080608678 ubox
4 19 0.011944217 ubox
4 66 0.003611451 ubox
4 74 0.033872249 ubox
4 75 0.003362275 ubox
4 92 0.041315068 ubox
4 99 0.215272432 ubox
5 18 0.011961381 ubox
5 73 0.033948457 ubox
5 91 0.040786335 ubox
6 90 0.031481833 ubox
7 39 0.003617586 ubox
8 38 0.003928924 ubox
8 91 0.003176253 ubox
9 88 0.003191981 ubox
9 90 0.006824314 ubox
10 75 0.005588238 ubox
10 76 0.103532745 ubox
10 87 0.003368820 ubox
10 89 0.009128304 ubox
10 90 0.007826978 ubox
10 93 0.003398699 ubox
10 100 0.017599861 ubox
11 67 0.004257687 ubox
11 74 0.005710921 ubox
11 75 0.104676543 ubox
11 76 0.030005473 ubox
11 88 0.008637087 ubox
11 89 0.011117637 ubox
11 90 0.006624663 ubox
11 93 0.004633985 ubox
11 99 0.014330431 ubox
11 100 0.064493467 ubox
12 26 0.004421624 ubox
12 66 0.004234921 ubox
12 74 0.104344830 ubox
12 75 0.029772533 ubox
12 87 0.006969876 ubox
12 88 0.010957595 ubox
12 89 0.009401649 ubox
12 99 0.041884963 ubox
12 100 0.137311048 ubox
13 25 0.003184824 ubox
13 87 0.010430332 ubox
13 88 0.009292754 ubox
13 99 0.128780940 ubox
14 25 0.004553836 ubox
14 87 0.007562668 ubox
15 24 0.005671341 ubox
15 37 0.012852022 ubox
15 75 0.003866735 ubox
15 76 0.096158942 ubox
15 100 0.052397442 ubox
16 23 0.005682468 ubox
16 36 0.010788982 ubox
16 37 0.176613158 ubox
16 74 0.003676557 ubox
16 75 0.088400290 ubox
16 76 0.977572049 ubox
16 99 0.004374838 ubox
16 100 0.004929700 ubox
17 22 0.005690918 ubox
17 35 0.008196105 ubox
17 36 0.176925916 ubox
17 37 0.004828139 ubox
17 74 0.079600989 ubox
17 75 0.979186782 ubox
17 76 0.005143566 ubox
17 93 0.007198460 ubox
17 99 0.003307161 ubox
17 100 0.003697251 ubox
18 35 0.177299859 ubox
18 36 0.003436285 ubox
18 39 0.049043994 ubox
18 74 0.979921104 ubox
18 75 0.004075524 ubox
18 92 0.007210286 ubox
19 34 0.177377269 ubox
19 38 0.059016041 ubox
19 73 0.979242812 ubox
19 91 0.007216308 ubox
20 36 0.879010410 ubox
20 37 0.082939254 ubox
20 90 0.007174091 ubox
21 35 0.981565705 ubox
21 36 0.059202784 ubox
21 89 0.007167419 ubox
22 29 0.003691006 ubox
22 31 0.177495429 ubox
22 32 0.005372439 ubox
22 34 0.983746464 ubox
22 70 0.006157469 ubox
23 28 0.003425051 ubox
23 30 0.177556085 ubox
23 31 0.003394707 ubox
23 32 0.020446483 ubox
23 33 0.983315943 ubox
23 69 0.005649703 ubox
23 85 0.007059309 ubox
24 29 0.176925832 ubox
24 31 0.046684127 ubox
24 32 0.980957760 ubox
24 34 0.021092104 ubox
24 84 0.007117016 ubox
25 30 0.057912050 ubox
25 31 0.775624545 ubox
25 32 0.053852402 ubox
25 33 0.023890525 ubox
25 83 0.007111047 ubox
26 31 0.563355114 ubox
26 32 0.025501760 ubox
26 82 0.007086095 ubox
31 76 0.009567179 ubox
32 75 0.009572164 ubox
34 74 0.009544896 ubox
35 70 0.008750434 ubox
35 73 0.009509485 ubox
36 69 0.012011906 ubox
36 70 0.430921897 ubox
37 69 0.634050736 ubox
38 66 0.012302317 ubox
38 74 0.004148713 ubox
38 79 0.007435356 ubox
38 105 0.015281885 ubox
39 65 0.011707453 ubox
39 68 0.917105963 ubox
39 73 0.003412396 ubox
39 77 0.009100710 ubox
39 78 0.005266293 ubox
39 104 0.014319771 ubox
40 64 0.005529306 ubox
40 67 0.992361159 ubox
40 76 0.085536743 ubox
41 66 0.991580898 ubox
41 67 0.073014624 ubox
41 75 0.085631223 ubox
42 64 0.990864871 ubox
42 66 0.073751939 ubox
42 74 0.085631938 ubox
43 63 0.991626100 ubox
43 73 0.085606082 ubox
44 62 0.991383835 ubox
44 65 0.108970170 ubox
44 72 0.063615899 ubox
45 61 0.991382362 ubox
45 64 0.125473600 ubox
46 59 0.991325334 ubox
46 63 0.125500652 ubox
46 69 0.029572741 ubox
46 70 0.003193751 ubox
47 58 0.990814581 ubox
47 62 0.125469808 ubox
47 68 0.029777604 ubox
48 57 0.991569266 ubox
48 61 0.125444063 ubox
48 67 0.029828600 ubox
49 56 0.987813545 ubox
49 66 0.029776914 ubox
51 59 0.128347987 ubox
52 58 0.128522504 ubox
53 57 0.120235257 ubox
66 103 0.004006224 ubox
67 102 0.004027808 ubox
69 75 0.025117742 ubox
69 76 0.097859453 ubox
69 89 0.005371667 ubox
69 90 0.008885243 ubox
69 100 0.005474045 ubox
70 74 0.024902898 ubox
70 75 0.097652068 ubox
70 88 0.005358257 ubox
70 89 0.013089069 ubox
70 99 0.004974441 ubox
70 100 0.017122763 ubox
71 87 0.005173244 ubox
71 88 0.013102735 ubox
71 99 0.016792224 ubox
72 87 0.012899403 ubox
73 79 0.003403388 ubox
74 78 0.003382274 ubox
74 82 0.004485526 ubox
74 103 0.005323170 ubox
75 81 0.004449043 ubox
75 82 0.019191698 ubox
75 102 0.005314764 ubox
75 103 0.011074527 ubox
76 81 0.019264731 ubox
76 102 0.011170239 ubox
77 89 0.003826126 ubox
77 93 0.997953257 ubox
78 92 0.999067259 ubox
79 91 0.999097387 ubox
80 90 0.998402541 ubox
81 87 0.003654388 ubox
81 88 0.003511951 ubox
81 89 0.996962673 ubox
81 90 0.033575434 ubox
82 87 0.014340455 ubox
82 88 0.959790577 ubox
82 89 0.066247294 ubox
83 87 0.818320590 ubox
83 88 0.080803113 ubox
83 90 0.007665630 ubox
84 89 0.009293254 ubox
89 107 0.005707848 ubox
90 106 0.005913454 ubox
91 105 0.005981219 ubox
92 103 0.007806058 ubox
93 102 0.009705762 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
3 8 0.9500000 lbox
16 76 0.9500000 lbox
17 75 0.9500000 lbox
18 74 0.9500000 lbox
19 73 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
44 62 0.9500000 lbox
45 61 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
77 93 0.9500000 lbox
78 92 0.9500000 lbox
79 91 0.9500000 lbox
80 90 0.9500000 lbox
81 89 0.9500000 lbox
82 88 0.9500000 lbox
83 87 0.9500000 lbox
showpage
end
%%EOF
