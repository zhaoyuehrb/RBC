%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCACCAGAAACCAGGGGGAGAAGGCGGCCGAGCCCCAGCUCUCCGAGCACCGGGUCGGAAGCCGCGACCCGAGCCGCGCAGGAAGCUGGGACCGGAACCUCGGCGGACCCGGCCCCACCCAACUCACCUGCGCAGGUCACCAGCACCCUCGGAACCCAGAGGCCCGCGCUCUGAAGGUGACCCCCCUGGGGAGGAAGGCG\
) } def
/len { sequence length } bind def

/coor [
[94.28923035 409.06295776]
[100.33557129 393.22381592]
[100.33557129 378.22381592]
[100.33557129 363.22381592]
[100.33557129 348.22381592]
[92.00516510 339.44869995]
[91.88521576 326.94885254]
[100.58563232 317.42279053]
[100.81549072 302.42456055]
[90.12752533 296.65631104]
[82.86478424 286.83203125]
[80.45587921 274.78088379]
[83.41847992 262.77935791]
[91.24958801 253.12136841]
[102.50974274 247.67962646]
[103.19911957 232.69548035]
[103.88849640 217.71131897]
[104.57786560 202.72717285]
[105.26724243 187.74302673]
[105.95661926 172.75886536]
[106.64599609 157.77471924]
[107.33537292 142.79057312]
[101.02733612 147.37922668]
[93.52385712 150.95610046]
[84.99827576 153.26951599]
[75.67179871 154.09872437]
[65.80789948 153.26240540]
[52.97346878 161.02626038]
[47.24707413 168.14912415]
[39.88233566 168.80900574]
[26.93043518 176.37525940]
[13.97853470 183.94152832]
[3.35195661 197.15182495]
[-12.28381443 190.59751892]
[-10.31406116 173.75839233]
[6.41227436 170.98962402]
[19.36417389 163.42337036]
[32.31607437 155.85710144]
[45.20961761 148.19181824]
[58.04404831 140.42797852]
[55.56308365 133.35020447]
[48.12018204 112.11690521]
[33.24726105 114.06529999]
[18.37434006 116.01369476]
[3.50142050 117.96208954]
[-11.41814518 126.01460266]
[-23.28610611 113.90725708]
[-14.93729687 99.15145111]
[1.55302417 103.08917236]
[16.42594337 101.14077759]
[31.29886436 99.19238281]
[46.17178345 97.24398041]
[47.25982666 89.82332611]
[49.43590927 74.98200989]
[50.52395248 67.56134796]
[36.83639908 61.42532349]
[23.14884377 55.28929138]
[9.46128941 49.15326309]
[-4.22626495 43.01723480]
[-17.91381836 36.88120270]
[-31.60137367 30.74517441]
[-45.59396362 37.72668457]
[-60.78839874 34.03031921]
[-70.01033020 21.40138626]
[-68.90545654 5.80288458]
[-57.99544525 -5.40005159]
[-42.43168640 -6.91773844]
[-29.56290436 1.96642947]
[-25.46534348 17.05761909]
[-11.77778912 23.19364929]
[1.90976465 29.32967949]
[15.59731865 35.46570969]
[29.28487396 41.60173798]
[42.97242737 47.73776627]
[56.65998077 53.87379837]
[66.75325012 51.96271896]
[76.39344788 51.93666840]
[85.25849915 53.61085892]
[93.07217407 56.74881744]
[99.61196136 61.07201385]
[102.35491180 46.32493973]
[105.09785461 31.57786369]
[107.84080505 16.83078766]
[110.58375549 2.08371258]
[113.32670593 -12.66336250]
[116.06965637 -27.41043854]
[109.53157806 -44.62247086]
[121.44354248 -57.50660706]
[123.96018982 -72.29398346]
[118.64789581 -87.19667053]
[128.41085815 -98.44540405]
[130.92749023 -113.23278046]
[133.44413757 -128.02015686]
[135.96076965 -142.80754089]
[126.64521027 -163.18537903]
[141.07475281 -179.31474304]
[142.68078613 -194.22851562]
[144.28680420 -209.14228821]
[145.89283752 -224.05606079]
[136.25291443 -236.29165649]
[138.09410095 -251.39346313]
[149.81826782 -260.50823975]
[151.42428589 -275.42202759]
[142.52020264 -288.76730347]
[147.53939819 -304.00500488]
[162.63160706 -309.44604492]
[176.21936035 -300.91653442]
[177.87930298 -284.95959473]
[166.33807373 -273.81600952]
[164.73204041 -258.90222168]
[174.24682617 -247.50027466]
[172.83053589 -232.35270691]
[160.80661011 -222.45004272]
[159.20057678 -207.53627014]
[157.59455872 -192.62249756]
[155.98854065 -177.70870972]
[162.13259888 -172.76112366]
[165.86245728 -165.70367432]
[166.50405884 -157.65277100]
[163.87870789 -149.91567993]
[158.34425354 -143.77813721]
[150.74815369 -140.29089355]
[148.23150635 -125.50351715]
[145.71487427 -110.71614075]
[143.19822693 -95.92876434]
[148.69052124 -82.08376312]
[138.74755859 -69.77734375]
[136.23092651 -54.98996735]
[142.97099304 -44.94157028]
[140.99206543 -32.59880447]
[130.81672668 -24.66748810]
[128.07377625 -9.92041206]
[125.33083344 4.82666254]
[122.58788300 19.57373810]
[119.84493256 34.32081223]
[117.10198212 49.06788635]
[114.35903168 63.81496429]
[132.56784058 76.05201721]
[141.80178833 96.85667419]
[138.42950439 120.19936371]
[152.89329529 124.17408752]
[167.35710144 128.14880371]
[181.82090759 132.12353516]
[196.28471375 136.09825134]
[210.74850464 140.07298279]
[225.35394287 143.49078369]
[240.07955933 146.34664917]
[254.80519104 149.20251465]
[270.83129883 137.09190369]
[290.29821777 140.60992432]
[300.74441528 157.04876709]
[315.58575439 159.22485352]
[330.42706299 161.40093994]
[345.26837158 163.57701111]
[356.01705933 152.38569641]
[371.29690552 149.68280029]
[385.23251343 156.50761414]
[392.46536255 170.23590088]
[390.21426392 185.58882141]
[379.34481812 196.66287231]
[364.03652954 199.19985962]
[350.17578125 192.22425842]
[343.09228516 178.41833496]
[328.25097656 176.24224854]
[313.40966797 174.06616211]
[298.56832886 171.89007568]
[292.28341675 180.01649475]
[283.11965942 184.83628845]
[272.70117188 185.41941833]
[262.90628052 181.59359741]
[255.52873230 173.98741150]
[251.94932556 163.92813110]
[237.22369385 161.07226562]
[222.49807739 158.21640015]
[228.57453918 171.93051147]
[221.78088379 185.30384827]
[207.12196350 188.48439026]
[195.39688110 179.12904358]
[195.24342346 164.12983704]
[206.77378845 154.53677368]
[192.30998230 150.56205750]
[177.84617615 146.58734131]
[163.38238525 142.61260986]
[148.91857910 138.63789368]
[134.45477295 134.66316223]
[122.31951904 143.47994995]
[121.63014221 158.46409607]
[120.94077301 173.44824219]
[120.25139618 188.43240356]
[119.56201935 203.41654968]
[118.87264252 218.40069580]
[118.18327332 233.38484192]
[117.49389648 248.36900330]
[131.98687744 259.25790405]
[137.00183105 276.51452637]
[130.71311951 293.18087769]
[115.81373596 302.65441895]
[115.58386993 317.65264893]
[124.91703796 333.52377319]
[115.33557129 348.22381592]
[115.33557129 363.22381592]
[115.33557129 378.22381592]
[115.33557129 393.22381592]
[121.38191223 409.06295776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[8 198]
[9 197]
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[27 40]
[28 39]
[30 38]
[31 37]
[32 36]
[42 52]
[43 51]
[44 50]
[45 49]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[88 128]
[89 127]
[91 125]
[92 124]
[93 123]
[94 122]
[96 116]
[97 115]
[98 114]
[99 113]
[102 110]
[103 109]
[140 185]
[141 184]
[142 183]
[143 182]
[144 181]
[145 180]
[146 174]
[147 173]
[148 172]
[151 166]
[152 165]
[153 164]
[154 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
