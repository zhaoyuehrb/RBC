%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C12orf10)
} def

/sequence { (\
UGGCGCUUCCUCUUCCGGGUCGGCGCUCCUGCCUCCCUGCAGGGAGCUGCUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.005595332 ubox
1 49 0.004842098 ubox
2 10 0.003207131 ubox
2 21 0.014198276 ubox
2 24 0.017270418 ubox
2 27 0.164833008 ubox
2 28 0.033985845 ubox
2 29 0.010059804 ubox
2 48 0.007392268 ubox
2 51 0.902715961 ubox
2 52 0.032910700 ubox
3 9 0.003193188 ubox
3 20 0.014230142 ubox
3 24 0.015841640 ubox
3 26 0.187527744 ubox
3 27 0.003868052 ubox
3 28 0.006977554 ubox
3 47 0.006839528 ubox
3 50 0.976058708 ubox
3 51 0.007651919 ubox
4 19 0.014067471 ubox
4 22 0.019817247 ubox
4 23 0.015727615 ubox
4 25 0.187850595 ubox
4 46 0.006545000 ubox
4 49 0.975980936 ubox
5 20 0.003911099 ubox
5 21 0.020254192 ubox
5 24 0.191462538 ubox
5 47 0.955835366 ubox
5 48 0.217819201 ubox
5 50 0.007004587 ubox
6 18 0.007062911 ubox
6 19 0.006400875 ubox
6 23 0.191463228 ubox
6 46 0.977596590 ubox
6 49 0.006985723 ubox
7 17 0.006670995 ubox
7 18 0.005594525 ubox
7 22 0.187560668 ubox
7 45 0.973027691 ubox
7 46 0.076867661 ubox
8 17 0.005273338 ubox
8 19 0.079099311 ubox
8 22 0.003449392 ubox
8 44 0.967800475 ubox
8 45 0.120678459 ubox
9 17 0.003267856 ubox
9 18 0.090011616 ubox
9 19 0.131222059 ubox
9 43 0.968240696 ubox
9 44 0.150572091 ubox
10 17 0.090008698 ubox
10 18 0.131156776 ubox
10 19 0.109922872 ubox
10 42 0.967781844 ubox
10 43 0.150232554 ubox
10 44 0.033729489 ubox
10 46 0.005750713 ubox
11 17 0.118239930 ubox
11 18 0.109833222 ubox
11 19 0.005814197 ubox
11 41 0.924416836 ubox
11 42 0.086726621 ubox
11 43 0.036313520 ubox
11 44 0.015264970 ubox
11 45 0.005973942 ubox
12 17 0.117827551 ubox
12 18 0.008907026 ubox
12 19 0.004706885 ubox
12 42 0.127420307 ubox
12 43 0.026738629 ubox
12 44 0.006001118 ubox
13 17 0.008139090 ubox
13 18 0.004362982 ubox
13 41 0.128822408 ubox
13 42 0.031991883 ubox
13 43 0.005809779 ubox
14 41 0.109213569 ubox
14 42 0.005342947 ubox
16 39 0.793707142 ubox
17 34 0.032412768 ubox
17 35 0.014854350 ubox
17 36 0.063198327 ubox
17 37 0.573167786 ubox
17 38 0.790738432 ubox
17 52 0.003291081 ubox
18 33 0.035806910 ubox
18 34 0.008428538 ubox
18 35 0.063261408 ubox
18 36 0.574598874 ubox
18 37 0.791610306 ubox
18 38 0.003888423 ubox
18 51 0.004638915 ubox
19 32 0.035859234 ubox
19 33 0.007824272 ubox
19 34 0.052632472 ubox
19 35 0.574791007 ubox
19 36 0.790738809 ubox
19 37 0.003973681 ubox
19 50 0.005068082 ubox
20 31 0.033834733 ubox
21 31 0.015827086 ubox
21 49 0.005981830 ubox
22 29 0.034352503 ubox
22 30 0.015425317 ubox
22 33 0.976945939 ubox
22 34 0.062193531 ubox
22 35 0.021223920 ubox
22 48 0.006291548 ubox
22 51 0.017346624 ubox
23 28 0.033828679 ubox
23 29 0.015325835 ubox
23 32 0.977651706 ubox
23 33 0.065639292 ubox
23 34 0.020171618 ubox
23 47 0.006373302 ubox
23 50 0.021395926 ubox
24 31 0.977162261 ubox
24 46 0.006365836 ubox
24 49 0.021407407 ubox
25 30 0.662421454 ubox
25 32 0.070602287 ubox
25 47 0.048585894 ubox
25 48 0.004548800 ubox
26 31 0.070878732 ubox
26 44 0.004583953 ubox
26 46 0.049125607 ubox
27 44 0.048653012 ubox
27 45 0.048141003 ubox
28 43 0.100420070 ubox
28 44 0.040727972 ubox
29 42 0.104059464 ubox
29 43 0.030851524 ubox
29 46 0.005283335 ubox
30 41 0.107383804 ubox
30 42 0.015374754 ubox
30 45 0.005316231 ubox
30 49 0.013532816 ubox
31 40 0.108505432 ubox
31 47 0.079390663 ubox
31 48 0.017387313 ubox
31 50 0.127786170 ubox
32 39 0.108215711 ubox
32 43 0.005348133 ubox
32 46 0.056395535 ubox
32 49 0.127441304 ubox
33 42 0.005357410 ubox
33 46 0.148813787 ubox
34 41 0.005061351 ubox
34 45 0.160402818 ubox
35 44 0.160534998 ubox
36 43 0.160529580 ubox
37 42 0.160005231 ubox
39 50 0.012201399 ubox
40 49 0.012222934 ubox
41 48 0.012217944 ubox
42 47 0.012202952 ubox
44 50 0.005299143 ubox
44 52 0.015274299 ubox
45 51 0.017129391 ubox
46 50 0.016971595 ubox
2 51 0.9500000 lbox
3 50 0.9500000 lbox
4 49 0.9500000 lbox
5 47 0.9500000 lbox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
showpage
end
%%EOF
