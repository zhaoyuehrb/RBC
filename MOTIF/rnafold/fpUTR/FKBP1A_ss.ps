%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCGGGACGUCGCGCGCCGUGUGGGGCGCGCACGCAGGGCUGGGCGUGAGGGGGCGUGCGCGUGCGCAGGCGACGCGCCGAGGUACUAGGCAGAGCCGUGGAACCGCCGCCAGGUCGCUGUUGGUCCACGCCGCCCGUCGCGCCGCCCGCCCGCUCAGCGUCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[106.60192108 206.52593994]
[92.11858368 200.62959290]
[84.85955048 186.77893066]
[88.25231171 171.51383972]
[100.69491577 162.04200745]
[101.23336029 147.05168152]
[101.77180481 132.06134033]
[94.95721436 128.92903137]
[81.32802582 122.66442871]
[74.51343536 119.53212738]
[63.48717880 129.70176697]
[52.46092606 139.87141418]
[48.25552368 148.01878357]
[41.14426041 150.12246704]
[29.93722725 160.09254456]
[18.73019409 170.06262207]
[7.52316141 180.03268433]
[-3.68387222 190.00276184]
[-14.89090538 199.97283936]
[-26.09793854 209.94291687]
[-26.76917648 225.73294067]
[-38.46540070 236.36186218]
[-54.24745178 235.52371216]
[-64.75211334 223.71577454]
[-63.74716187 207.94346619]
[-51.82881165 197.56422424]
[-36.06801605 198.73588562]
[-24.86098099 188.76580811]
[-13.65394783 178.79573059]
[-2.44691396 168.82565308]
[8.76011944 158.85557556]
[19.96715355 148.88551331]
[31.17418671 138.91543579]
[42.29127884 128.84516907]
[53.31753159 118.67551422]
[64.34378815 108.50587463]
[68.14961243 90.81781006]
[79.25605774 78.83110809]
[93.27250671 74.75171661]
[105.69382477 78.10832214]
[114.06931305 65.66439819]
[122.44479370 53.22047424]
[124.65201569 44.32142258]
[131.08399963 40.63019943]
[139.68151855 28.33862877]
[148.27903748 16.04705811]
[156.87655640 3.75548959]
[165.47406006 -8.53608036]
[173.96090698 -20.90432358]
[182.33639526 -33.34824753]
[190.71188354 -45.79217148]
[199.08737183 -58.23609161]
[200.37409973 -74.00489044]
[213.89938354 -80.24312592]
[222.27487183 -92.68704987]
[230.65036011 -105.13097382]
[239.02584839 -117.57489014]
[247.40133667 -130.01881409]
[244.69464111 -140.59713745]
[248.20257568 -150.70483398]
[256.53103638 -157.06474304]
[266.76675415 -157.75737000]
[275.58352661 -169.89262390]
[284.40032959 -182.02787781]
[286.92556763 -190.84196472]
[293.48590088 -194.29992676]
[302.51910400 -206.27494812]
[311.55227661 -218.24998474]
[320.58547974 -230.22500610]
[323.26852417 -238.99234009]
[329.88989258 -242.33198547]
[339.13659668 -254.14292908]
[348.38330078 -265.95388794]
[357.63000488 -277.76483154]
[356.85162354 -290.66140747]
[364.82412720 -300.31326294]
[376.83996582 -301.87973022]
[386.29721069 -313.52276611]
[395.75442505 -325.16583252]
[398.44946289 -340.75579834]
[412.47952271 -345.75653076]
[421.93673706 -357.39956665]
[424.63180542 -372.98956299]
[438.66183472 -377.99026489]
[448.11907959 -389.63333130]
[451.11511230 -398.29870605]
[457.85208130 -401.39849854]
[467.51678467 -412.86993408]
[477.18148804 -424.34133911]
[486.84622192 -435.81274414]
[496.51092529 -447.28414917]
[499.66204834 -455.89434814]
[506.45355225 -458.87271118]
[516.32263184 -470.16879272]
[526.19171143 -481.46487427]
[529.31335449 -499.59680176]
[546.10455322 -504.64886475]
[555.76928711 -516.12030029]
[565.43395996 -527.59167480]
[574.89123535 -539.23474121]
[584.13793945 -551.04571533]
[593.38464355 -562.85662842]
[602.63134766 -574.66760254]
[602.12719727 -590.70269775]
[614.44250488 -600.98443604]
[630.12994385 -597.62542725]
[637.15551758 -583.20251465]
[630.12982178 -568.77966309]
[614.44226074 -565.42089844]
[605.19555664 -553.60992432]
[595.94885254 -541.79901123]
[586.70214844 -529.98803711]
[586.38635254 -525.19207764]
[583.03222656 -520.55230713]
[576.90539551 -517.92700195]
[567.24066162 -506.45556641]
[557.57598877 -494.98416138]
[558.28881836 -482.88763428]
[550.30181885 -473.24777222]
[537.48779297 -471.59579468]
[527.61871338 -460.29971313]
[517.74963379 -449.00363159]
[507.98233032 -437.61944580]
[498.31762695 -426.14804077]
[488.65292358 -414.67663574]
[478.98818970 -403.20520020]
[469.32348633 -391.73379517]
[459.76211548 -380.17608643]
[450.30490112 -368.53305054]
[448.28628540 -353.77584839]
[433.57980347 -347.94235229]
[424.12255859 -336.29928589]
[422.10397339 -321.54211426]
[407.39749146 -315.70858765]
[397.94024658 -304.06555176]
[388.48300171 -292.42248535]
[386.66677856 -274.98205566]
[369.44094849 -268.51812744]
[360.19424438 -256.70715332]
[350.94754028 -244.89622498]
[341.70083618 -233.08528137]
[332.56051636 -221.19181824]
[323.52731323 -209.21678162]
[314.49411011 -197.24174500]
[305.46090698 -185.26672363]
[296.53558350 -173.21109009]
[287.71878052 -161.07583618]
[278.90200806 -148.94058228]
[278.32916260 -129.63233948]
[259.84527588 -121.64332581]
[251.46977234 -109.19940948]
[243.09428406 -96.75548553]
[234.71879578 -84.31156158]
[226.34330750 -71.86763763]
[225.65567017 -56.98891449]
[211.53129578 -49.86060715]
[203.15580750 -37.41668320]
[194.78031921 -24.97276115]
[186.40483093 -12.52883720]
[185.27476501 -5.19954967]
[177.76564026 0.06143829]
[169.16812134 12.35300732]
[160.57060242 24.64457703]
[151.97308350 36.93614578]
[143.37556458 49.22771454]
[134.88871765 61.59596252]
[126.51322937 74.03988647]
[118.13774872 86.48380280]
[128.87318420 106.69120789]
[116.76213837 132.59979248]
[116.22369385 147.59011841]
[115.68524933 162.58044434]
[127.41622162 172.92057800]
[129.70503235 188.38975525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 172]
[6 171]
[7 170]
[10 36]
[11 35]
[12 34]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[40 168]
[41 167]
[42 166]
[44 165]
[45 164]
[46 163]
[47 162]
[48 161]
[49 159]
[50 158]
[51 157]
[52 156]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[62 148]
[63 147]
[64 146]
[66 145]
[67 144]
[68 143]
[69 142]
[71 141]
[72 140]
[73 139]
[74 138]
[77 136]
[78 135]
[79 134]
[81 132]
[82 131]
[84 129]
[85 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[93 122]
[94 121]
[95 120]
[97 117]
[98 116]
[99 115]
[100 112]
[101 111]
[102 110]
[103 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
