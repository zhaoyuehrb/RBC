%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (B2M)
} def

/sequence { (\
AAUAUAAGUGGAGGCGUCGCGCUGGCGGGCAUUCCUGAAGCUGACAGCAUUCGGGCCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.008352461 ubox
2 9 0.069430441 ubox
2 17 0.003341306 ubox
2 32 0.010475529 ubox
3 8 0.068874743 ubox
3 10 0.021776814 ubox
3 16 0.003439626 ubox
3 24 0.008268263 ubox
3 31 0.010423323 ubox
4 9 0.022200755 ubox
4 17 0.005037528 ubox
4 23 0.006493554 ubox
4 32 0.009582057 ubox
4 36 0.004051698 ubox
5 16 0.005016137 ubox
5 24 0.025496706 ubox
5 31 0.010072501 ubox
5 37 0.006113133 ubox
6 23 0.020754054 ubox
6 33 0.008904443 ubox
6 36 0.008020452 ubox
7 23 0.256109145 ubox
7 32 0.008333466 ubox
7 33 0.114031760 ubox
7 36 0.041460077 ubox
7 42 0.033278378 ubox
7 51 0.009143095 ubox
8 15 0.079150788 ubox
8 17 0.008507857 ubox
8 20 0.050840831 ubox
8 22 0.265198154 ubox
8 26 0.041076391 ubox
8 30 0.028944893 ubox
8 32 0.133903934 ubox
8 35 0.042899580 ubox
8 41 0.034471357 ubox
8 45 0.003935682 ubox
8 48 0.003952892 ubox
8 50 0.011929689 ubox
8 56 0.176815140 ubox
9 14 0.078339402 ubox
9 16 0.024119446 ubox
9 19 0.050778719 ubox
9 21 0.265104513 ubox
9 24 0.006658549 ubox
9 25 0.040238802 ubox
9 27 0.081303006 ubox
9 29 0.028177914 ubox
9 31 0.135627053 ubox
9 37 0.010769659 ubox
9 40 0.034309909 ubox
9 44 0.003895848 ubox
9 46 0.003465650 ubox
9 47 0.003537988 ubox
9 49 0.012214332 ubox
9 53 0.201469849 ubox
9 55 0.172670372 ubox
9 58 0.354835806 ubox
10 15 0.036582556 ubox
10 18 0.050190782 ubox
10 20 0.263884889 ubox
10 23 0.009190740 ubox
10 26 0.110711469 ubox
10 30 0.131531746 ubox
10 33 0.046768109 ubox
10 34 0.163932902 ubox
10 35 0.319770680 ubox
10 36 0.003982611 ubox
10 45 0.003942630 ubox
10 48 0.011446931 ubox
10 51 0.005301013 ubox
10 52 0.271002816 ubox
10 57 0.466305798 ubox
11 17 0.042241138 ubox
11 18 0.256714317 ubox
11 22 0.009610420 ubox
11 32 0.056123894 ubox
11 33 0.247104424 ubox
11 34 0.358321304 ubox
11 35 0.003564315 ubox
11 50 0.007284358 ubox
11 51 0.270287310 ubox
11 52 0.219924871 ubox
11 56 0.464401933 ubox
12 17 0.250489114 ubox
12 23 0.019906025 ubox
12 32 0.252073584 ubox
12 33 0.374289575 ubox
12 36 0.010846040 ubox
12 50 0.258174714 ubox
12 51 0.220420378 ubox
13 22 0.018826208 ubox
13 23 0.142803726 ubox
13 32 0.340250375 ubox
13 33 0.037004254 ubox
13 34 0.006890819 ubox
13 35 0.011271935 ubox
13 42 0.004003751 ubox
13 50 0.195829014 ubox
13 52 0.013019712 ubox
13 57 0.337511545 ubox
14 20 0.026190915 ubox
14 22 0.147709284 ubox
14 26 0.029120293 ubox
14 30 0.766873956 ubox
14 32 0.039982950 ubox
14 33 0.005854980 ubox
14 34 0.011289801 ubox
14 41 0.004005594 ubox
14 48 0.359539368 ubox
14 56 0.337240188 ubox
15 19 0.026056415 ubox
15 21 0.147922765 ubox
15 24 0.003265991 ubox
15 25 0.029040415 ubox
15 27 0.152130118 ubox
15 29 0.767484781 ubox
15 40 0.003999257 ubox
15 47 0.360537308 ubox
15 53 0.008677559 ubox
15 55 0.333685033 ubox
15 58 0.012898088 ubox
16 20 0.138398182 ubox
16 22 0.005847714 ubox
16 26 0.153881631 ubox
16 30 0.177579015 ubox
16 32 0.006716552 ubox
16 45 0.361825590 ubox
16 52 0.010152723 ubox
16 56 0.004612273 ubox
16 57 0.011698646 ubox
17 21 0.005498500 ubox
17 25 0.153836336 ubox
17 28 0.714024643 ubox
17 29 0.146246806 ubox
17 31 0.006139724 ubox
17 44 0.364001596 ubox
17 54 0.255991865 ubox
17 55 0.004173561 ubox
17 59 0.007409203 ubox
18 24 0.153609422 ubox
18 27 0.806357678 ubox
18 28 0.106446979 ubox
18 43 0.364087165 ubox
18 53 0.284051978 ubox
18 54 0.005034724 ubox
18 58 0.007872578 ubox
19 23 0.094794701 ubox
19 26 0.813418676 ubox
19 30 0.014747321 ubox
19 41 0.022644787 ubox
19 42 0.356502393 ubox
19 48 0.003861916 ubox
19 52 0.283545662 ubox
19 57 0.006926080 ubox
20 25 0.813206109 ubox
20 27 0.033389086 ubox
20 29 0.014759110 ubox
20 40 0.023140491 ubox
20 43 0.006193989 ubox
20 47 0.003951621 ubox
21 26 0.032681234 ubox
21 30 0.044061691 ubox
21 41 0.363507826 ubox
21 48 0.288171555 ubox
22 28 0.005828681 ubox
22 29 0.044101481 ubox
22 40 0.363589433 ubox
22 47 0.288313100 ubox
22 60 0.006807255 ubox
23 27 0.005313043 ubox
23 28 0.043266796 ubox
23 31 0.005490359 ubox
23 39 0.361647655 ubox
23 43 0.003521076 ubox
23 46 0.288190247 ubox
23 58 0.017053101 ubox
23 59 0.006915103 ubox
24 30 0.009673876 ubox
24 35 0.006228596 ubox
24 36 0.006133997 ubox
24 42 0.016089619 ubox
24 45 0.286525626 ubox
24 57 0.045547764 ubox
25 34 0.006222908 ubox
25 35 0.006312043 ubox
25 41 0.038377893 ubox
25 56 0.045577827 ubox
26 37 0.355102036 ubox
26 40 0.037394548 ubox
26 43 0.165456155 ubox
26 55 0.037612420 ubox
26 58 0.254125295 ubox
27 34 0.015043502 ubox
27 35 0.071597120 ubox
27 36 0.359368552 ubox
27 42 0.164862990 ubox
27 57 0.258698286 ubox
28 33 0.012413620 ubox
28 34 0.073097423 ubox
28 35 0.359999880 ubox
28 36 0.006562184 ubox
28 41 0.148318017 ubox
28 42 0.229496059 ubox
28 56 0.257412875 ubox
28 57 0.199868592 ubox
29 33 0.047496610 ubox
29 34 0.354273263 ubox
29 35 0.007449369 ubox
29 41 0.242872163 ubox
29 56 0.201651178 ubox
30 37 0.060063013 ubox
30 40 0.253075473 ubox
30 55 0.154626127 ubox
31 36 0.053108791 ubox
32 38 0.113071918 ubox
32 39 0.084893169 ubox
32 40 0.004685638 ubox
32 54 0.005334434 ubox
32 55 0.003629754 ubox
32 59 0.080688182 ubox
32 60 0.025699527 ubox
33 37 0.103060468 ubox
33 38 0.075003422 ubox
33 39 0.009927964 ubox
33 53 0.003560691 ubox
33 54 0.005066020 ubox
33 55 0.039392167 ubox
33 58 0.080082082 ubox
33 59 0.037243077 ubox
34 53 0.005470181 ubox
34 54 0.090272910 ubox
34 55 0.749216664 ubox
34 58 0.022715247 ubox
35 47 0.003850395 ubox
35 53 0.089373118 ubox
35 54 0.818343242 ubox
35 55 0.008873890 ubox
35 60 0.008771133 ubox
36 46 0.006647598 ubox
36 49 0.003287271 ubox
36 53 0.847671333 ubox
36 54 0.012225954 ubox
36 58 0.036783879 ubox
36 59 0.023117928 ubox
37 45 0.007004838 ubox
37 48 0.003283797 ubox
37 51 0.032766124 ubox
37 52 0.868106939 ubox
37 57 0.044527400 ubox
38 50 0.044397135 ubox
38 51 0.866962507 ubox
39 50 0.855116541 ubox
39 51 0.006723997 ubox
40 48 0.868094237 ubox
40 50 0.005571195 ubox
40 56 0.097531019 ubox
41 47 0.869101431 ubox
41 54 0.116825032 ubox
41 55 0.083137436 ubox
41 60 0.006417201 ubox
42 46 0.782966483 ubox
42 49 0.037816716 ubox
42 53 0.127875185 ubox
42 54 0.064249262 ubox
42 58 0.003789543 ubox
42 59 0.006512042 ubox
43 48 0.039691482 ubox
43 51 0.005271162 ubox
43 52 0.138502662 ubox
43 57 0.005361722 ubox
44 50 0.006792680 ubox
44 51 0.129643277 ubox
47 56 0.035301354 ubox
48 55 0.035359841 ubox
50 59 0.004249043 ubox
50 60 0.059000740 ubox
51 58 0.003523211 ubox
51 59 0.087755393 ubox
52 58 0.090648900 ubox
53 57 0.085688561 ubox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
42 46 0.9500000 lbox
showpage
end
%%EOF
