%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGUCAGCCGGCCGGAGACAGAGACUUCACGACUCCCAGUCUCCUCCUCGCCGCGGCCGCCGCCUCCUCCUUCUCUCCUCCUCCUCUUCCUCCUCCUCCCUCGCUCCCACAGCCAUGUCUGCUUAGACCAGAGCAGCCCCACAGCCAACUAGGGCAGCUGCCGCCGCCACAACAGCAAGGACAGCCGCUGCCGCCGCCCGUGAGCG\
) } def
/len { sequence length } bind def

/coor [
[-75.83371735 308.28564453]
[-80.89597321 315.11239624]
[-87.62183380 320.25524902]
[-95.47688293 323.32788086]
[-103.84311676 324.10766602]
[-108.06910706 338.50006104]
[-112.29509735 352.89245605]
[-107.90512085 368.69308472]
[-119.58540344 380.20410156]
[-135.32026672 375.58392334]
[-138.92303467 359.58541870]
[-126.68748474 348.66647339]
[-122.46150208 334.27407837]
[-118.23551178 319.88168335]
[-120.02835846 318.72421265]
[-121.73456573 317.44247437]
[-133.77638245 326.38647461]
[-145.81819153 335.33044434]
[-157.86001587 344.27441406]
[-169.90182495 353.21838379]
[-181.94363403 362.16235352]
[-189.10359192 381.00531006]
[-208.38874817 382.39633179]
[-220.15628052 391.69824219]
[-231.92381287 401.00012207]
[-230.31657410 416.34353638]
[-237.28015137 430.10989380]
[-250.59249878 437.90637207]
[-266.00567627 437.24514771]
[-278.60140991 428.33724976]
[-284.36044312 414.02511597]
[-281.44509888 398.87570190]
[-270.78564453 387.72317505]
[-255.78346252 384.12619019]
[-241.22570801 389.23260498]
[-229.45817566 379.93069458]
[-217.69064331 370.62881470]
[-217.42034912 360.41223145]
[-211.44500732 351.85162354]
[-201.54014587 347.91265869]
[-190.88761902 350.12054443]
[-178.84579468 341.17657471]
[-166.80398560 332.23260498]
[-154.76217651 323.28863525]
[-142.72035217 314.34463501]
[-130.67854309 305.40066528]
[-130.62986755 281.82720947]
[-113.48683929 265.29895020]
[-89.44831085 266.12725830]
[-79.88347626 254.57243347]
[-70.31864166 243.01760864]
[-60.75381088 231.46278381]
[-51.18897629 219.90795898]
[-49.19456482 202.47334290]
[-31.88195229 196.20210266]
[-22.49187851 184.50480652]
[-13.10180473 172.80752563]
[-3.71173191 161.11022949]
[5.67834139 149.41294861]
[7.61198044 134.64439392]
[22.28465080 128.72633362]
[31.67472458 117.02905273]
[33.60836411 102.26049805]
[48.28103256 96.34244537]
[57.67110825 84.64515686]
[43.82256317 90.40865326]
[33.86533737 101.62709808]
[22.31155396 111.19319153]
[9.43231201 118.88247681]
[-4.47020292 124.51454163]
[-19.06978798 127.95722198]
[-34.02389145 129.12976074]
[-48.98163223 128.00463867]
[-63.59206009 124.60825348]
[-77.51235962 119.02029419]
[-90.41591644 111.37187958]
[-101.99996185 101.84246063]
[-111.99270630 90.65563202]
[-120.15967560 78.07387543]
[-126.30925751 64.39240265]
[-130.29714966 49.93222809]
[-132.02978516 35.03263092]
[-131.46652222 20.04321098]
[-128.62055969 5.31566906]
[-123.55868530 -8.80443764]
[-116.39965820 -21.98580170]
[-107.31146240 -33.91914749]
[-96.50733185 -44.32447433]
[-84.24077606 -52.95763779]
[-70.79960632 -59.61608124]
[-56.49918747 -64.14356232]
[-41.67506790 -66.43386841]
[-26.67506790 -66.43324280]
[-11.85113811 -64.14171600]
[2.44890165 -59.61304855]
[15.88952446 -52.95349503]
[28.15536880 -44.31931305]
[38.95863342 -33.91308975]
[48.04584122 -21.97899437]
[55.20377350 -8.79703617]
[60.26448059 5.32348967]
[63.10922241 20.05126762]
[63.67124939 35.04073334]
[61.93723679 49.94090271]
[66.86386108 64.10876465]
[69.33277893 49.31334686]
[71.80169678 34.51792908]
[63.68717575 20.67834282]
[69.58232117 5.75765991]
[84.96488953 1.20175028]
[98.03468323 10.50551796]
[98.76567078 26.53190804]
[86.59711456 36.98684692]
[84.12819672 51.78226852]
[81.65927887 66.57768250]
[88.38478088 69.89695740]
[95.02333069 56.44594574]
[107.49781036 48.11603928]
[108.47434235 63.08448792]
[101.83580017 76.53549957]
[108.56130219 79.85477448]
[118.80318451 68.89557648]
[129.04505920 57.93638611]
[139.28694153 46.97719193]
[149.52882385 36.01799774]
[159.77069092 25.05880547]
[158.98585510 9.27401638]
[169.65422058 -2.38624477]
[185.44642639 -3.00415158]
[196.99324036 7.78688908]
[197.44415283 23.58474541]
[186.53163147 35.01682663]
[170.72988892 35.30068588]
[160.48800659 46.25987625]
[150.24613953 57.21907043]
[140.00425720 68.17826080]
[129.76237488 79.13745880]
[119.52050018 90.09664917]
[123.04042816 96.71934509]
[136.28581238 89.67948151]
[146.70751953 78.89114380]
[160.18830872 85.46900940]
[158.09815979 100.32266998]
[143.32568359 102.92487335]
[130.08029175 109.96473694]
[133.60021973 116.58743286]
[148.41377258 114.22978210]
[163.22734070 111.87213135]
[172.30320740 98.93365479]
[187.88392639 96.28471375]
[200.72570801 105.49687195]
[203.20977783 121.10472107]
[193.86236572 133.84840393]
[178.22912598 136.16731262]
[165.58499146 126.68568420]
[150.77142334 129.04333496]
[135.95787048 131.40098572]
[134.72340393 138.79869080]
[131.02003479 160.99182129]
[144.26542664 168.03169250]
[157.51081848 175.07154846]
[170.75621033 182.11140442]
[184.05412292 189.05152893]
[197.40383911 195.89149475]
[209.66290283 190.30982971]
[222.70785522 192.77235413]
[231.81733704 202.15975952]
[233.82600403 214.88838196]
[247.07139587 221.92825317]
[261.50054932 215.90052795]
[276.41299438 220.60723877]
[284.76751709 233.82601929]
[282.61938477 249.31535339]
[270.98284912 259.76165771]
[255.35235596 260.23251343]
[243.10813904 250.50558472]
[240.03152466 235.17364502]
[226.78613281 228.13377380]
[210.92971802 233.73638916]
[195.62568665 225.98550415]
[190.56385803 209.24121094]
[177.21415710 202.40122986]
[169.82662964 202.14880371]
[163.71633911 195.35679626]
[150.47094727 188.31694031]
[137.22555542 181.27708435]
[123.98017120 174.23721313]
[63.77200699 140.86375427]
[69.36839294 94.03523254]
[59.97832108 105.73252106]
[57.37303925 121.33774567]
[43.37200928 126.41912842]
[33.98193741 138.11640930]
[31.37665749 153.72163391]
[17.37562752 158.80302429]
[7.98555517 170.50030518]
[-1.40451801 182.19760132]
[-10.79459095 193.89488220]
[-20.18466377 205.59217834]
[-19.56035233 218.47624207]
[-27.62347031 228.02583313]
[-39.63415146 229.47279358]
[-49.19898605 241.02761841]
[-58.76382065 252.58244324]
[-68.32865143 264.13726807]
[-77.89348602 275.69207764]
[-73.89675903 283.33789062]
[-72.17450714 291.75888062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[7 12]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[23 37]
[24 36]
[25 35]
[49 206]
[50 205]
[51 204]
[52 203]
[53 202]
[55 199]
[56 198]
[57 197]
[58 196]
[59 195]
[61 193]
[62 192]
[64 190]
[65 189]
[105 115]
[106 114]
[107 113]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[146 157]
[147 156]
[148 155]
[159 187]
[160 186]
[161 185]
[162 184]
[163 182]
[164 181]
[168 178]
[169 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
