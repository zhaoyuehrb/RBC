%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGGCGCAAUGGAGACAGGGGGCUCCCUGGGUUUGGAACAAAGAAUUCACAGGCAGGUCCCCUGAAACUGGGUCGGCAGGACGGUGGUGGAGCCCGAGAGAGGGCACAGGCAGGAUGGCCGAUGCUGACAGGAACCAGCGGUGACUCUGGGGCCCCUGGCAGCAGCUCUGUCUCCUGAAGAUGAAGUGGCCCAGGUGAAGCCCAGGCCAGCCCCA\
) } def
/len { sequence length } bind def

/coor [
[92.61685944 239.70774841]
[78.40242767 232.26936340]
[75.49702454 216.49159241]
[86.12942505 204.47778320]
[86.56169128 189.48400879]
[86.99395752 174.49023438]
[84.04620361 167.71717834]
[87.54203796 159.28395081]
[88.19033051 144.29797363]
[67.10545349 129.89764404]
[57.52838898 107.07884216]
[61.74631882 83.49192810]
[77.56717682 66.55709839]
[71.67748260 52.76175690]
[65.78778076 38.96641541]
[59.89808655 25.17107201]
[54.00839233 11.37572956]
[48.11869812 -2.41961312]
[42.22900009 -16.21495628]
[36.33930588 -30.01029778]
[29.37582016 -43.29600143]
[21.38226891 -55.98864365]
[13.38871861 -68.68128204]
[5.39516783 -81.37392426]
[-2.59838271 -94.06656647]
[-10.59193325 -106.75920868]
[-18.58548355 -119.45185089]
[-32.83791351 -124.12820435]
[-46.79725647 -118.63850403]
[-60.75659561 -113.14881134]
[-74.71594238 -107.65911102]
[-88.63536072 -102.06897736]
[-102.51414490 -96.37869263]
[-116.35157013 -90.58854675]
[-130.14691162 -84.69885254]
[-143.94226074 -78.80915833]
[-147.26995850 -63.65309906]
[-158.89295959 -53.37275696]
[-174.34197998 -51.92112732]
[-187.67655945 -59.85639572]
[-193.76928711 -74.12728882]
[-190.27737427 -89.24635315]
[-178.54353333 -99.40000916]
[-163.07966614 -100.68395233]
[-149.83195496 -92.60449982]
[-136.03660583 -98.49419403]
[-122.24126434 -104.38388824]
[-117.32644653 -109.89826202]
[-108.20443726 -110.25747681]
[-94.32565308 -115.94776154]
[-89.33187866 -121.39073181]
[-80.20563507 -121.61845398]
[-66.24629211 -127.10815430]
[-52.28695297 -132.59785461]
[-38.32761002 -138.08753967]
[-30.89009666 -151.11380005]
[-33.25796127 -165.92573547]
[-35.62582779 -180.73765564]
[-38.10035706 -195.53213501]
[-40.68142319 -210.30841064]
[-43.26248932 -225.08467102]
[-45.94995499 -239.84196472]
[-48.74368668 -254.57949829]
[-51.64353561 -269.29653931]
[-54.64935303 -283.99227905]
[-57.65516663 -298.68801880]
[-71.62462616 -305.18112183]
[-79.00587463 -318.49917603]
[-77.15155029 -333.43322754]
[-66.98076630 -344.28189087]
[-69.98658752 -358.97763062]
[-80.29748535 -366.72100830]
[-82.50071716 -379.01922607]
[-75.95234680 -389.18612671]
[-78.74607849 -403.92367554]
[-81.53980255 -418.66122437]
[-84.33353424 -433.39874268]
[-87.12726593 -448.13629150]
[-89.92099762 -462.87384033]
[-92.71472931 -477.61138916]
[-102.03736115 -483.20190430]
[-106.65187073 -492.80126953]
[-105.25356293 -503.13851929]
[-98.54280853 -510.83581543]
[-100.91066742 -525.64776611]
[-103.27853394 -540.45965576]
[-105.64640045 -555.27160645]
[-115.46514893 -567.67736816]
[-109.83396149 -581.46643066]
[-112.20182800 -596.27838135]
[-131.88769531 -604.62158203]
[-142.44667053 -623.05749512]
[-139.71711731 -643.99060059]
[-124.97388458 -658.91003418]
[-128.61203003 -673.46209717]
[-132.25018311 -688.01422119]
[-135.88833618 -702.56634521]
[-149.56770325 -710.48150635]
[-153.56282043 -725.77252197]
[-145.50343323 -739.36743164]
[-130.17106628 -743.20068359]
[-116.66210175 -734.99798584]
[-112.99119568 -719.62597656]
[-121.33621979 -706.20446777]
[-117.69807434 -691.65234375]
[-114.05992126 -677.10028076]
[-110.42177582 -662.54815674]
[-101.42113495 -661.50488281]
[-93.02799988 -658.02917480]
[-85.88813782 -652.37469482]
[-80.55467224 -644.96301270]
[-77.44523621 -636.35266113]
[-76.80931854 -627.19671631]
[-78.70825958 -618.19335938]
[-83.00960541 -610.03265381]
[-89.39627838 -603.34375000]
[-97.38990021 -598.64624023]
[-95.02203369 -583.83428955]
[-85.37264252 -572.48797607]
[-90.83447266 -557.63946533]
[-88.46660614 -542.82751465]
[-86.09873962 -528.01562500]
[-83.73088074 -513.20367432]
[-70.47732544 -499.12011719]
[-77.97718811 -480.40512085]
[-75.18345642 -465.66757202]
[-72.38973236 -450.93002319]
[-69.59600067 -436.19247437]
[-66.80226898 -421.45495605]
[-64.00853729 -406.71740723]
[-61.21480560 -391.97985840]
[-49.06357956 -379.31524658]
[-55.29083633 -361.98342896]
[-52.28501892 -347.28768921]
[-38.67137527 -341.30383301]
[-31.10217857 -328.29724121]
[-32.66134262 -313.15054321]
[-42.95941544 -301.69384766]
[-39.95360184 -286.99810791]
[-36.94778442 -272.30233765]
[-32.53013611 -266.38220215]
[-34.00614929 -257.37322998]
[-31.21241570 -242.63569641]
[-26.88053894 -236.65251160]
[-28.48621941 -227.66574097]
[-25.90515327 -212.88948059]
[-23.32408714 -198.11320496]
[-19.07888031 -192.06822205]
[-20.81389809 -183.10552979]
[-18.44603348 -168.29359436]
[-16.07816887 -153.48167419]
[-5.89284229 -127.44540405]
[2.10070825 -114.75276184]
[10.09425831 -102.06011963]
[18.08780861 -89.36747742]
[26.08135986 -76.67483521]
[34.07490921 -63.98219299]
[42.06846237 -51.28955078]
[49.74740982 -58.20439911]
[59.01246643 -63.29024506]
[74.00623322 -62.85797501]
[89.00000763 -62.42570496]
[103.16769409 -70.68455505]
[117.26766968 -62.31061554]
[116.79507446 -45.91827774]
[102.23608398 -38.37057495]
[88.56773376 -47.43193436]
[73.57396698 -47.86420441]
[58.58019638 -48.29647446]
[50.13464737 -35.89999390]
[56.02434158 -22.10465240]
[61.91403961 -8.30930901]
[67.80373383 5.48603392]
[73.69342804 19.28137589]
[79.58312988 33.07672119]
[85.47282410 46.87206268]
[91.36251831 60.66740417]
[100.09378052 59.26566696]
[109.02197266 59.80092621]
[117.71777344 62.29136658]
[125.75354004 66.66014099]
[132.72436523 72.73702240]
[138.26835632 80.26473236]
[142.08535767 88.90966797]
[143.95294189 98.27658844]
[143.73886108 107.92668152]
[141.40950012 117.39810944]
[137.03350830 126.22810364]
[130.78051758 133.97554016]
[138.21803284 147.00180054]
[145.65554810 160.02806091]
[153.09306335 173.05432129]
[160.53056335 186.08058167]
[175.51176453 190.34689331]
[182.86889648 203.66331482]
[178.70930481 217.91931152]
[186.14682007 230.94557190]
[193.58433533 243.97183228]
[206.68865967 254.72882080]
[199.97969055 270.29885864]
[183.16090393 268.16229248]
[180.55807495 251.40933228]
[173.12055969 238.38308716]
[165.68304443 225.35682678]
[151.29173279 221.69270325]
[143.56347656 208.58818054]
[147.50431824 193.51809692]
[140.06680298 180.49183655]
[132.62928772 167.46557617]
[125.19177246 154.43931580]
[117.75426483 141.41305542]
[103.17631531 144.94625854]
[102.52802277 159.93225098]
[101.98773193 174.92251587]
[101.55545807 189.91627502]
[101.12319183 204.91004944]
[111.04579163 217.51646423]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 216]
[5 215]
[6 214]
[8 213]
[9 212]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[28 55]
[29 54]
[30 53]
[31 52]
[32 50]
[33 49]
[34 47]
[35 46]
[36 45]
[56 151]
[57 150]
[58 149]
[59 147]
[60 146]
[61 145]
[62 143]
[63 142]
[64 140]
[65 139]
[66 138]
[70 134]
[71 133]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[84 123]
[85 122]
[86 121]
[87 120]
[89 118]
[90 117]
[94 107]
[95 106]
[96 105]
[97 104]
[160 169]
[161 168]
[162 167]
[189 211]
[190 210]
[191 209]
[192 208]
[193 207]
[196 204]
[197 203]
[198 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
