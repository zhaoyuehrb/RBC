%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TBL3)
} def

/sequence { (\
GGGAGUGUGGCGUUCUGUGAAGAGUUCGGUGCUAACCUCCCUCACGCGGCGGUGGCUGCCGGGACCCUAGCAGGUUUCAGCUGGAGCGGCGGCGGCGGCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.003357826 ubox
1 38 0.003840906 ubox
1 39 0.003554554 ubox
1 40 0.006256705 ubox
1 41 0.998044247 ubox
1 42 0.008318495 ubox
1 43 0.011763900 ubox
2 36 0.003360527 ubox
2 37 0.004595645 ubox
2 38 0.003395025 ubox
2 39 0.005848223 ubox
2 40 0.999833182 ubox
2 41 0.009087219 ubox
3 36 0.004601571 ubox
3 37 0.003837179 ubox
3 38 0.004808760 ubox
3 39 0.999862751 ubox
3 40 0.006599472 ubox
4 38 0.999584112 ubox
5 36 0.122961257 ubox
5 37 0.989589955 ubox
5 47 0.007587208 ubox
6 34 0.077616710 ubox
6 35 0.165978226 ubox
6 46 0.007592097 ubox
6 51 0.005026515 ubox
7 32 0.245886238 ubox
7 33 0.011238678 ubox
7 36 0.745533678 ubox
7 45 0.007602412 ubox
7 50 0.006607813 ubox
8 31 0.246371098 ubox
8 34 0.779605240 ubox
8 35 0.548624836 ubox
8 44 0.007596305 ubox
8 49 0.006600673 ubox
9 26 0.004958923 ubox
9 27 0.004725669 ubox
9 30 0.248317466 ubox
9 33 0.939800079 ubox
9 43 0.007543776 ubox
10 25 0.005660653 ubox
10 26 0.004264205 ubox
10 30 0.018629854 ubox
10 32 0.959650589 ubox
10 42 0.005490108 ubox
10 47 0.007271649 ubox
11 24 0.005881071 ubox
11 28 0.273604383 ubox
11 29 0.017419867 ubox
11 31 0.956704532 ubox
11 46 0.007275491 ubox
12 25 0.119168814 ubox
12 27 0.317843083 ubox
12 30 0.857123321 ubox
12 32 0.091391403 ubox
12 45 0.007248203 ubox
13 20 0.005345563 ubox
13 21 0.031355945 ubox
13 22 0.005654806 ubox
13 23 0.015383297 ubox
13 24 0.691779774 ubox
13 29 0.225153496 ubox
13 31 0.090025055 ubox
13 44 0.007029864 ubox
14 19 0.004878582 ubox
14 20 0.032441876 ubox
14 21 0.005092861 ubox
14 22 0.006075703 ubox
14 23 0.727426651 ubox
14 28 0.148325244 ubox
14 29 0.066941356 ubox
15 19 0.032304188 ubox
15 22 0.730563112 ubox
15 24 0.345205650 ubox
15 28 0.074251933 ubox
15 29 0.550039184 ubox
16 21 0.723273885 ubox
16 23 0.343328326 ubox
16 28 0.549587444 ubox
17 25 0.022678612 ubox
17 27 0.541393080 ubox
17 47 0.003509448 ubox
18 24 0.044697809 ubox
18 28 0.142785288 ubox
18 29 0.007914407 ubox
18 46 0.003507879 ubox
19 26 0.169199174 ubox
19 27 0.191542732 ubox
19 45 0.003463346 ubox
20 25 0.162844594 ubox
20 26 0.193196999 ubox
21 25 0.148443134 ubox
22 43 0.007698328 ubox
23 33 0.003431912 ubox
23 42 0.007737568 ubox
24 32 0.004079528 ubox
24 41 0.007763344 ubox
25 29 0.003874737 ubox
25 31 0.004066549 ubox
28 37 0.012486016 ubox
29 36 0.013259499 ubox
30 35 0.013134325 ubox
41 48 0.006762973 ubox
42 48 0.013793665 ubox
42 49 0.010217763 ubox
42 64 0.003664963 ubox
42 98 0.013571839 ubox
43 48 0.105273530 ubox
43 51 0.004966921 ubox
43 54 0.052749559 ubox
43 62 0.003585544 ubox
43 63 0.003871678 ubox
43 97 0.011215271 ubox
44 53 0.052854487 ubox
45 51 0.019437164 ubox
45 52 0.052800581 ubox
45 54 0.035061696 ubox
45 61 0.004450891 ubox
45 91 0.005936678 ubox
45 94 0.010181712 ubox
45 97 0.469320221 ubox
46 50 0.018497630 ubox
46 53 0.035266645 ubox
46 59 0.016671168 ubox
46 60 0.003319403 ubox
46 90 0.005986926 ubox
46 93 0.010247022 ubox
46 96 0.473461962 ubox
46 99 0.115664238 ubox
47 52 0.035292187 ubox
47 58 0.017031251 ubox
47 61 0.005418337 ubox
47 89 0.005984488 ubox
47 92 0.010240458 ubox
47 94 0.004758051 ubox
47 95 0.473269073 ubox
47 97 0.003778546 ubox
47 98 0.115609347 ubox
48 57 0.017035453 ubox
48 60 0.007019457 ubox
48 93 0.005850515 ubox
48 96 0.004095581 ubox
49 56 0.017053205 ubox
49 59 0.007023023 ubox
49 87 0.005980125 ubox
49 90 0.010222204 ubox
49 93 0.473246387 ubox
49 96 0.113667430 ubox
49 99 0.867289563 ubox
50 55 0.017048153 ubox
50 58 0.007022798 ubox
50 86 0.005978507 ubox
50 89 0.010219350 ubox
50 91 0.006151167 ubox
50 92 0.473242420 ubox
50 94 0.004152257 ubox
50 95 0.113428821 ubox
50 97 0.019147997 ubox
50 98 0.868025298 ubox
51 57 0.006969870 ubox
51 90 0.005716511 ubox
51 96 0.015788321 ubox
52 56 0.006820840 ubox
52 87 0.010187410 ubox
52 90 0.473301439 ubox
52 93 0.109299097 ubox
52 96 0.868578989 ubox
52 99 0.056037256 ubox
52 102 0.004053135 ubox
53 83 0.004411499 ubox
53 86 0.010133277 ubox
53 88 0.003902666 ubox
53 89 0.472626047 ubox
53 92 0.108758479 ubox
53 94 0.011831247 ubox
53 95 0.867429373 ubox
53 98 0.056005874 ubox
53 101 0.003810982 ubox
54 82 0.007172688 ubox
54 87 0.003706372 ubox
54 93 0.009660347 ubox
55 81 0.007281516 ubox
55 87 0.473411099 ubox
55 90 0.108787633 ubox
55 93 0.869485714 ubox
55 96 0.063735708 ubox
55 99 0.055314169 ubox
56 80 0.007282574 ubox
56 84 0.008519253 ubox
56 86 0.473387397 ubox
56 89 0.108791506 ubox
56 92 0.869656596 ubox
56 95 0.063768822 ubox
56 98 0.055450397 ubox
57 79 0.007257699 ubox
57 83 0.013192112 ubox
57 85 0.469656037 ubox
57 88 0.108616005 ubox
57 91 0.869023656 ubox
57 94 0.063723882 ubox
57 97 0.055410052 ubox
58 78 0.006286313 ubox
58 81 0.292950948 ubox
58 82 0.006719018 ubox
58 87 0.106928642 ubox
58 90 0.869659235 ubox
58 93 0.063773448 ubox
58 96 0.055450261 ubox
59 80 0.293104585 ubox
59 84 0.374232301 ubox
59 86 0.095095898 ubox
59 89 0.869682709 ubox
59 92 0.063775200 ubox
59 95 0.055451516 ubox
60 83 0.378242856 ubox
60 88 0.869659509 ubox
60 91 0.063770443 ubox
60 94 0.055428733 ubox
61 67 0.009954028 ubox
61 68 0.003286227 ubox
61 78 0.336783917 ubox
61 82 0.350348762 ubox
61 87 0.866078535 ubox
61 90 0.061959098 ubox
61 93 0.043694738 ubox
62 66 0.015445350 ubox
62 67 0.004627152 ubox
62 77 0.343423591 ubox
62 78 0.046691905 ubox
62 81 0.343193221 ubox
62 82 0.007328101 ubox
63 75 0.005201441 ubox
63 76 0.468459484 ubox
63 77 0.072709928 ubox
63 78 0.074437065 ubox
63 81 0.008232210 ubox
64 75 0.472627844 ubox
64 76 0.069345020 ubox
64 77 0.068870936 ubox
65 74 0.473397942 ubox
65 84 0.151643722 ubox
65 89 0.045598475 ubox
65 92 0.005398370 ubox
66 73 0.470870689 ubox
66 74 0.119192941 ubox
66 83 0.148287352 ubox
66 84 0.404796071 ubox
66 88 0.045619765 ubox
66 89 0.003995403 ubox
66 91 0.005390305 ubox
66 92 0.004427092 ubox
67 73 0.125497766 ubox
67 74 0.025171875 ubox
67 80 0.004003255 ubox
67 83 0.401385546 ubox
67 84 0.753423704 ubox
67 86 0.023255044 ubox
67 88 0.003817177 ubox
67 91 0.004413622 ubox
68 72 0.118362107 ubox
68 73 0.024047291 ubox
68 79 0.003903570 ubox
68 83 0.758304318 ubox
68 85 0.021942390 ubox
69 76 0.003584443 ubox
69 82 0.865205166 ubox
70 81 0.871428490 ubox
70 90 0.007239793 ubox
71 80 0.871263154 ubox
71 83 0.025114214 ubox
71 89 0.007252547 ubox
72 82 0.025761994 ubox
73 81 0.025649092 ubox
73 82 0.010417543 ubox
74 81 0.010845244 ubox
74 87 0.009176589 ubox
75 80 0.010640495 ubox
75 86 0.009853645 ubox
76 85 0.011321047 ubox
76 86 0.004103975 ubox
77 84 0.012358120 ubox
77 85 0.009648763 ubox
78 83 0.013516461 ubox
78 84 0.010755082 ubox
80 87 0.062377627 ubox
80 90 0.016903360 ubox
80 93 0.033465782 ubox
80 99 0.016441474 ubox
81 86 0.062328016 ubox
81 89 0.016939065 ubox
81 92 0.033546424 ubox
81 98 0.016458588 ubox
82 88 0.016880637 ubox
82 91 0.033521052 ubox
82 97 0.016444429 ubox
83 87 0.016248502 ubox
83 90 0.033481473 ubox
83 96 0.016422502 ubox
86 93 0.016724538 ubox
86 99 0.007901897 ubox
87 92 0.016741029 ubox
87 98 0.007906908 ubox
89 96 0.007912221 ubox
90 95 0.007913090 ubox
92 99 0.005732808 ubox
93 98 0.005739035 ubox
1 41 0.9500000 lbox
2 40 0.9500000 lbox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
5 37 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
49 99 0.9500000 lbox
50 98 0.9500000 lbox
52 96 0.9500000 lbox
53 95 0.9500000 lbox
55 93 0.9500000 lbox
56 92 0.9500000 lbox
57 91 0.9500000 lbox
58 90 0.9500000 lbox
59 89 0.9500000 lbox
60 88 0.9500000 lbox
61 87 0.9500000 lbox
67 84 0.9500000 lbox
68 83 0.9500000 lbox
69 82 0.9500000 lbox
70 81 0.9500000 lbox
71 80 0.9500000 lbox
showpage
end
%%EOF
