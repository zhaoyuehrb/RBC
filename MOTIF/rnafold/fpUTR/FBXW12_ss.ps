%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUUUCUCCUCCACUGCAAAGUUAAAUGCGAGAAGGUAGAAACCCAGAGGCCAUGCUGGCGCUGAGAGAUGAGCCCCACUCACCAGAUUCAAGAUCCCAAGUGCUGCAGACUUUGGCAAAGCCUAUAAAUUCAGAGCAGCCCGGAGAGGAGAAAGGAAAGUGGAUGUGGGUUCAGGCCGCAUGAA\
) } def
/len { sequence length } bind def

/coor [
[186.03944397 285.76062012]
[179.24082947 272.38980103]
[172.44219971 259.01898193]
[165.64356995 245.64817810]
[158.84494019 232.27737427]
[152.04631042 218.90655518]
[145.24768066 205.53573608]
[138.44905090 192.16493225]
[131.65042114 178.79411316]
[124.85179901 165.42330933]
[118.05316925 152.05249023]
[111.25453949 138.68167114]
[104.05400085 144.60227966]
[94.98884583 149.03117371]
[84.39579773 151.47383118]
[72.73127747 151.51551819]
[62.08022308 162.07748413]
[51.42916489 172.63945007]
[40.77811050 183.20140076]
[43.27413177 198.51641846]
[36.26146698 212.35845947]
[22.43663406 219.40498352]
[7.11556053 216.94647217]
[-3.81048870 205.92825317]
[-6.14022398 190.58706665]
[1.02218533 176.82191467]
[14.92264652 169.92578125]
[30.21615028 172.55035400]
[40.86720657 161.98838806]
[51.51826096 151.42642212]
[62.16931534 140.86447144]
[58.60262680 134.26683044]
[45.40724945 141.39999390]
[38.27430725 128.20449829]
[51.46924973 121.07157898]
[47.90256119 114.47394562]
[33.23209381 117.60083771]
[18.56163025 120.72772980]
[6.74974918 132.10365295]
[-8.93094826 127.30284119]
[-12.34950542 111.26396179]
[0.01079703 100.48644257]
[15.43473911 106.05726624]
[30.10520363 102.93037415]
[44.77566910 99.80348206]
[45.40548325 84.81671143]
[31.04909325 80.46997833]
[16.69270515 76.12323761]
[4.95973635 81.51327515]
[-6.91735458 77.58229065]
[-12.73180294 66.95989227]
[-27.01314545 62.37259293]
[-41.29448700 57.78529739]
[-55.57582855 53.19800186]
[-72.50518799 54.11074066]
[-78.06877136 38.09565735]
[-64.21971130 28.31608582]
[-50.98853302 38.91666031]
[-36.70719147 43.50395584]
[-22.42584801 48.09125137]
[-8.14450741 52.67854691]
[8.77283478 48.04618073]
[21.03943825 61.76685333]
[35.39582825 66.11358643]
[49.75221634 70.46031952]
[54.86480713 64.99537659]
[60.53492355 60.34111786]
[51.59627151 48.29534912]
[42.65761948 36.24958038]
[35.01402283 31.20933342]
[33.67200089 23.92553520]
[24.93697166 11.73130703]
[9.40682888 7.70710039]
[3.00204420 -7.00202227]
[10.63581944 -21.11248016]
[26.45217514 -23.79993820]
[38.31815720 -13.00280857]
[37.13119888 2.99627542]
[45.86623001 15.19050407]
[54.70338440 27.31093025]
[63.64203644 39.35669708]
[72.58068848 51.40246582]
[79.64027405 48.87023163]
[74.57604218 34.75096893]
[88.69538879 29.68696976]
[93.75945282 43.80576324]
[100.81904602 41.27352905]
[100.06336212 26.29257393]
[99.30768585 11.31162167]
[98.55200958 -3.66933107]
[91.71539307 -19.18374443]
[104.73093414 -30.04799843]
[118.77367401 -20.54863548]
[113.53295898 -4.42500925]
[114.28864288 10.55594349]
[115.04431915 25.53689575]
[115.79999542 40.51784897]
[129.33787537 46.97741318]
[141.45829773 38.14025879]
[140.97848511 26.23653412]
[146.25926208 15.69151402]
[155.88079834 9.08138752]
[167.37945557 7.95801735]
[177.87802124 12.48595715]
[190.28848267 4.06096029]
[202.69894409 -4.36403656]
[215.10939026 -12.78903294]
[227.51985168 -21.21402931]
[235.45002747 -39.73225784]
[254.76419067 -40.35117340]
[266.88461304 -49.18832779]
[273.47717285 -63.57056808]
[288.31954956 -64.81680298]
[300.43997192 -73.65395355]
[312.56039429 -82.49111176]
[324.45428467 -91.63085938]
[336.11413574 -101.06739807]
[347.77395630 -110.50393677]
[356.28228760 -125.16833496]
[372.72894287 -121.05201721]
[373.32638550 -104.10859680]
[357.21051025 -98.84410858]
[345.55065918 -89.40756989]
[333.89083862 -79.97102356]
[333.16436768 -76.50060272]
[330.70843506 -73.21387482]
[326.62979126 -70.92553711]
[321.39755249 -70.37068176]
[309.27713013 -61.53352737]
[297.15670776 -52.69637680]
[291.43109131 -38.94622803]
[275.72177124 -37.06790161]
[263.60134888 -28.23074913]
[262.92907715 -18.00907135]
[256.59976196 -9.67679024]
[246.51818848 -6.14165640]
[235.94485474 -8.80357361]
[223.53439331 -0.37857696]
[211.12393188 8.04642010]
[198.71348572 16.47141647]
[186.30302429 24.89641380]
[183.96821594 43.03786469]
[168.86810303 53.91517639]
[150.29545593 50.26068497]
[138.17501831 59.09783554]
[148.06517029 102.24297333]
[124.62535095 131.88304138]
[131.42398071 145.25386047]
[138.22261047 158.62467957]
[145.02124023 171.99548340]
[151.81987000 185.36630249]
[158.61849976 198.73710632]
[165.41712952 212.10792542]
[172.21574402 225.47874451]
[179.01437378 238.84954834]
[185.81300354 252.22036743]
[192.61163330 265.59118652]
[199.41026306 278.96200562]
[212.33634949 278.42187500]
[224.46009827 282.80163574]
[233.98725891 291.41540527]
[239.52215576 302.95358276]
[240.27209473 315.68179321]
[236.16072083 327.70159912]
[227.83407593 337.23367310]
[234.17968750 350.82531738]
[240.52529907 364.41699219]
[246.87092590 378.00863647]
[253.21653748 391.60031128]
[259.56216431 405.19195557]
[274.71453857 409.05715942]
[283.79537964 421.78790283]
[282.51699829 437.37313843]
[271.48303223 448.45401001]
[255.90335083 449.79843140]
[243.13421631 440.77163696]
[239.20481873 425.63577271]
[245.97050476 411.53756714]
[239.62487793 397.94592285]
[233.27926636 384.35424805]
[226.93365479 370.76260376]
[220.58802795 357.17092896]
[214.24241638 343.57928467]
[197.06370544 342.71911621]
[182.60566711 333.23861694]
[174.88993835 317.66735840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[16 31]
[17 30]
[18 29]
[19 28]
[36 45]
[37 44]
[38 43]
[46 65]
[47 64]
[48 63]
[51 61]
[52 60]
[53 59]
[54 58]
[67 82]
[68 81]
[69 80]
[71 79]
[72 78]
[87 97]
[88 96]
[89 95]
[90 94]
[98 145]
[99 144]
[104 141]
[105 140]
[106 139]
[107 138]
[108 137]
[110 133]
[111 132]
[113 130]
[114 129]
[115 128]
[116 124]
[117 123]
[118 122]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
