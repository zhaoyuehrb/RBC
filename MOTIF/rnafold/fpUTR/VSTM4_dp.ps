%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VSTM4)
} def

/sequence { (\
AGGCGGCGGCGCUCUCCCGCGUCACAGCGCCGGGCGGCGGCGGGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.064745964 ubox
1 15 0.057001369 ubox
2 12 0.070305132 ubox
2 13 0.814984338 ubox
2 14 0.088946323 ubox
2 15 0.003892162 ubox
2 23 0.034843372 ubox
2 31 0.008978534 ubox
3 10 0.146949988 ubox
3 12 0.872350257 ubox
3 13 0.010471679 ubox
3 14 0.004344554 ubox
3 20 0.016225344 ubox
3 22 0.035019350 ubox
3 28 0.017283205 ubox
3 30 0.008995610 ubox
3 38 0.004735531 ubox
3 41 0.027079880 ubox
4 9 0.147040418 ubox
4 11 0.873441125 ubox
4 19 0.016241093 ubox
4 21 0.034993971 ubox
4 27 0.017915030 ubox
4 29 0.008997582 ubox
4 32 0.003218148 ubox
4 37 0.004686874 ubox
4 40 0.027056187 ubox
4 42 0.345217067 ubox
5 10 0.869560020 ubox
5 13 0.021742454 ubox
5 18 0.016227332 ubox
5 20 0.025293146 ubox
5 23 0.004075850 ubox
5 28 0.008605723 ubox
5 31 0.003263498 ubox
5 41 0.349194819 ubox
6 12 0.023505685 ubox
6 17 0.016186909 ubox
6 20 0.024687501 ubox
6 22 0.004082041 ubox
6 28 0.003922464 ubox
6 30 0.003263638 ubox
6 35 0.004189170 ubox
6 38 0.022008879 ubox
6 41 0.020805423 ubox
7 11 0.023356675 ubox
7 19 0.034555503 ubox
7 21 0.004077743 ubox
7 27 0.004784274 ubox
7 29 0.003263162 ubox
7 32 0.003935960 ubox
7 34 0.003819434 ubox
7 37 0.021946145 ubox
7 39 0.349599827 ubox
7 40 0.020352237 ubox
7 42 0.293669016 ubox
8 14 0.003354630 ubox
8 15 0.011223772 ubox
8 16 0.010589575 ubox
8 17 0.007528148 ubox
8 18 0.034537904 ubox
8 23 0.025079254 ubox
8 31 0.005673438 ubox
8 38 0.349655809 ubox
8 41 0.297111091 ubox
9 14 0.011470238 ubox
9 15 0.008599946 ubox
9 16 0.007793103 ubox
9 17 0.034314352 ubox
9 22 0.025397630 ubox
9 30 0.005688033 ubox
9 35 0.014437539 ubox
9 38 0.013682913 ubox
9 41 0.008404402 ubox
10 19 0.004093343 ubox
10 21 0.025419798 ubox
10 29 0.005688000 ubox
10 34 0.013426913 ubox
10 36 0.350084706 ubox
10 37 0.011537017 ubox
10 39 0.297578806 ubox
10 40 0.006377373 ubox
10 42 0.006472699 ubox
11 18 0.003977120 ubox
11 20 0.025425920 ubox
11 28 0.005687914 ubox
11 35 0.350232895 ubox
11 38 0.297756705 ubox
11 41 0.007808253 ubox
12 19 0.025399854 ubox
12 27 0.005686668 ubox
12 33 0.004726863 ubox
12 34 0.346120475 ubox
12 37 0.296788718 ubox
12 40 0.007808893 ubox
12 45 0.003578271 ubox
12 47 0.109960377 ubox
13 26 0.005413794 ubox
13 32 0.004494824 ubox
13 33 0.305393111 ubox
13 34 0.012444806 ubox
13 36 0.203740901 ubox
13 37 0.024073326 ubox
13 39 0.007329794 ubox
13 44 0.003626118 ubox
13 45 0.006840103 ubox
13 46 0.143900837 ubox
14 32 0.300148819 ubox
14 33 0.108714087 ubox
14 34 0.022430288 ubox
14 36 0.212931297 ubox
14 37 0.006741850 ubox
14 43 0.004295826 ubox
14 44 0.014738631 ubox
14 45 0.167554072 ubox
14 47 0.807096634 ubox
15 32 0.106856597 ubox
15 33 0.012673813 ubox
15 34 0.130688634 ubox
15 36 0.007464941 ubox
15 42 0.004114748 ubox
15 43 0.014750208 ubox
15 44 0.044976416 ubox
15 45 0.196244021 ubox
15 46 0.832577665 ubox
16 32 0.020972173 ubox
16 33 0.176126073 ubox
16 34 0.268598504 ubox
16 42 0.014829013 ubox
16 43 0.042704796 ubox
16 44 0.298160280 ubox
16 45 0.832193887 ubox
17 32 0.178243213 ubox
17 33 0.274096580 ubox
17 40 0.015885907 ubox
17 42 0.039986743 ubox
17 43 0.307631913 ubox
17 44 0.828641155 ubox
17 45 0.046733080 ubox
18 29 0.290952074 ubox
18 32 0.274423022 ubox
18 39 0.016374184 ubox
18 42 0.316648932 ubox
18 43 0.824625683 ubox
18 44 0.051757120 ubox
19 28 0.356813528 ubox
19 30 0.296494453 ubox
19 31 0.195148810 ubox
19 38 0.016385909 ubox
19 41 0.323082103 ubox
20 27 0.361687538 ubox
20 29 0.354055782 ubox
20 36 0.011499233 ubox
20 37 0.011897747 ubox
20 39 0.132994989 ubox
20 40 0.296229451 ubox
20 42 0.785278614 ubox
21 28 0.355346973 ubox
21 30 0.027210261 ubox
21 35 0.016723069 ubox
21 38 0.185009620 ubox
21 41 0.788012722 ubox
22 27 0.338455038 ubox
22 29 0.026252985 ubox
22 34 0.016657358 ubox
22 37 0.185067471 ubox
22 40 0.786845047 ubox
22 46 0.011245393 ubox
23 33 0.016514738 ubox
23 36 0.182680925 ubox
23 39 0.643834032 ubox
23 42 0.005153645 ubox
23 45 0.012092922 ubox
27 35 0.522718106 ubox
27 38 0.144481264 ubox
27 41 0.012575469 ubox
28 34 0.522800029 ubox
28 36 0.251178349 ubox
28 37 0.122892783 ubox
28 39 0.517599170 ubox
28 40 0.009422135 ubox
28 42 0.132781432 ubox
29 35 0.263225503 ubox
29 38 0.611859733 ubox
29 41 0.243885617 ubox
30 34 0.261386874 ubox
30 37 0.611941776 ubox
30 40 0.244219485 ubox
31 36 0.611073865 ubox
31 39 0.244298053 ubox
31 42 0.007181325 ubox
32 38 0.243819063 ubox
32 41 0.007039225 ubox
34 41 0.020059393 ubox
35 40 0.020088932 ubox
35 42 0.006687962 ubox
36 41 0.006761654 ubox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
14 47 0.9500000 lbox
15 46 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
