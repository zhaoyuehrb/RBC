%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPL3)
} def

/sequence { (\
CCAGAUUUGGCUUUAUAUAGCGGACCCGUAAGGCCGACCGGCCUCUACCGGCGGGAUUUGAUGGCGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.137728917 ubox
1 23 0.093096297 ubox
1 33 0.013572093 ubox
1 54 0.037084544 ubox
1 55 0.029430943 ubox
1 64 0.241934921 ubox
2 9 0.192572998 ubox
2 22 0.093388082 ubox
2 32 0.014174898 ubox
2 40 0.005339137 ubox
2 53 0.037192631 ubox
2 54 0.029395027 ubox
2 60 0.500112908 ubox
2 63 0.244776615 ubox
2 68 0.029051584 ubox
3 8 0.173757426 ubox
3 12 0.015226468 ubox
3 14 0.007139708 ubox
3 58 0.004824685 ubox
3 59 0.501297222 ubox
3 62 0.220679949 ubox
3 67 0.024313783 ubox
4 11 0.016272193 ubox
4 13 0.008219926 ubox
4 14 0.006298346 ubox
4 57 0.005431513 ubox
4 58 0.503732370 ubox
4 59 0.032555364 ubox
5 12 0.007818268 ubox
5 13 0.006467785 ubox
5 16 0.008026003 ubox
5 18 0.008545042 ubox
5 29 0.014285757 ubox
5 57 0.499900480 ubox
5 58 0.032034499 ubox
5 62 0.015562287 ubox
5 67 0.015637914 ubox
6 15 0.008229577 ubox
6 17 0.008324651 ubox
6 20 0.003478720 ubox
6 23 0.012482542 ubox
6 24 0.053498653 ubox
6 28 0.014209349 ubox
6 37 0.015458179 ubox
6 55 0.021520865 ubox
6 56 0.480689595 ubox
6 61 0.021460499 ubox
6 64 0.005674993 ubox
6 66 0.015070886 ubox
7 19 0.003537346 ubox
7 20 0.008361537 ubox
7 22 0.014847459 ubox
7 23 0.079198557 ubox
7 24 0.502427170 ubox
7 36 0.012821212 ubox
7 37 0.336720806 ubox
7 54 0.036038175 ubox
7 55 0.317819289 ubox
7 56 0.014295771 ubox
7 60 0.017305829 ubox
7 61 0.009234925 ubox
7 63 0.003414369 ubox
8 15 0.008760365 ubox
8 17 0.010876049 ubox
8 19 0.010820376 ubox
8 22 0.073733260 ubox
8 23 0.723858097 ubox
8 28 0.003200879 ubox
8 36 0.375709756 ubox
8 53 0.046585745 ubox
8 54 0.261565591 ubox
8 55 0.009818634 ubox
8 60 0.008727430 ubox
8 66 0.009346872 ubox
8 68 0.006494446 ubox
9 14 0.008406562 ubox
9 16 0.011167672 ubox
9 18 0.011104295 ubox
9 21 0.056620973 ubox
9 26 0.004146922 ubox
9 27 0.004897412 ubox
9 35 0.400219132 ubox
9 52 0.055684659 ubox
9 58 0.004549568 ubox
9 59 0.005174312 ubox
9 65 0.011665727 ubox
9 67 0.009767656 ubox
10 21 0.860211330 ubox
10 25 0.004216997 ubox
10 26 0.004685791 ubox
10 34 0.400547257 ubox
10 52 0.242482191 ubox
10 65 0.104610029 ubox
10 67 0.018084128 ubox
11 20 0.863573672 ubox
11 23 0.013272313 ubox
11 32 0.005454240 ubox
11 33 0.400610942 ubox
11 51 0.238571498 ubox
11 64 0.105169720 ubox
11 66 0.020490479 ubox
12 19 0.849145206 ubox
12 20 0.010039735 ubox
12 22 0.012684584 ubox
12 23 0.005142915 ubox
12 24 0.008802795 ubox
12 31 0.006951937 ubox
12 32 0.400165383 ubox
12 50 0.214825465 ubox
12 63 0.100106895 ubox
13 19 0.035855581 ubox
13 20 0.010958220 ubox
13 22 0.007189199 ubox
13 23 0.010949826 ubox
13 24 0.016375585 ubox
13 30 0.007961716 ubox
13 31 0.399315577 ubox
13 32 0.003301856 ubox
13 50 0.011099904 ubox
13 61 0.051605116 ubox
13 63 0.005077155 ubox
13 64 0.020793625 ubox
14 19 0.015211408 ubox
14 22 0.010806655 ubox
14 23 0.018015869 ubox
14 30 0.398158649 ubox
14 31 0.004352823 ubox
14 47 0.034509114 ubox
14 50 0.003403308 ubox
14 60 0.054898699 ubox
14 63 0.024606439 ubox
14 68 0.021952351 ubox
15 29 0.345164445 ubox
15 46 0.033769996 ubox
15 57 0.004075789 ubox
15 59 0.052997294 ubox
15 62 0.030097113 ubox
15 67 0.026947283 ubox
16 28 0.318514464 ubox
16 30 0.017868262 ubox
16 47 0.027881551 ubox
16 56 0.004257338 ubox
16 60 0.005101548 ubox
16 61 0.030474821 ubox
16 63 0.017415561 ubox
16 66 0.026407091 ubox
16 68 0.010145574 ubox
17 29 0.016005268 ubox
17 46 0.027531096 ubox
17 57 0.046246583 ubox
17 59 0.005507186 ubox
17 62 0.025594871 ubox
17 67 0.011937476 ubox
18 28 0.014990296 ubox
18 30 0.031959564 ubox
18 47 0.041702744 ubox
18 56 0.048842128 ubox
18 60 0.007684832 ubox
18 61 0.023285058 ubox
18 63 0.037440092 ubox
18 66 0.011315802 ubox
18 68 0.005590719 ubox
19 29 0.025745563 ubox
19 44 0.005083567 ubox
19 46 0.043172315 ubox
19 58 0.006609372 ubox
19 59 0.008040320 ubox
19 62 0.038361077 ubox
19 67 0.006101237 ubox
20 29 0.283026581 ubox
20 42 0.007862738 ubox
20 43 0.003785809 ubox
20 45 0.041961240 ubox
20 52 0.003507909 ubox
20 57 0.005809045 ubox
20 58 0.006883303 ubox
20 65 0.020065561 ubox
20 67 0.059013944 ubox
21 28 0.308969245 ubox
21 36 0.038071226 ubox
21 40 0.010912887 ubox
21 41 0.005848305 ubox
21 50 0.051685440 ubox
21 53 0.059418066 ubox
21 60 0.121330622 ubox
21 63 0.006052536 ubox
21 64 0.019359320 ubox
21 66 0.062540231 ubox
21 68 0.010003811 ubox
22 27 0.310006445 ubox
22 35 0.047891683 ubox
22 39 0.012235599 ubox
22 43 0.028319866 ubox
22 46 0.004869941 ubox
22 49 0.058402542 ubox
22 52 0.060212949 ubox
22 58 0.013867133 ubox
22 59 0.131985424 ubox
22 62 0.005862890 ubox
22 65 0.064053707 ubox
22 67 0.013997633 ubox
23 34 0.047971048 ubox
23 38 0.012227788 ubox
23 42 0.028314064 ubox
23 45 0.005197562 ubox
23 48 0.055248076 ubox
23 57 0.015601812 ubox
23 58 0.135928308 ubox
23 59 0.010219255 ubox
24 44 0.004138034 ubox
24 57 0.136377665 ubox
24 58 0.010307142 ubox
24 67 0.614887346 ubox
25 33 0.079044092 ubox
25 41 0.027404325 ubox
25 51 0.157937050 ubox
25 54 0.020717317 ubox
25 55 0.385369616 ubox
25 64 0.077315069 ubox
25 66 0.676517791 ubox
26 32 0.078414933 ubox
26 33 0.148083107 ubox
26 40 0.027291529 ubox
26 41 0.006816842 ubox
26 50 0.161367783 ubox
26 51 0.085333345 ubox
26 53 0.016662263 ubox
26 54 0.388130693 ubox
26 55 0.007411192 ubox
26 63 0.074722080 ubox
26 64 0.745210574 ubox
27 32 0.149855317 ubox
27 36 0.010061792 ubox
27 40 0.007187863 ubox
27 50 0.089578491 ubox
27 53 0.388110863 ubox
27 54 0.007183605 ubox
27 60 0.029065847 ubox
27 63 0.746609894 ubox
27 66 0.031023575 ubox
28 35 0.009873586 ubox
28 38 0.024374505 ubox
28 39 0.006965936 ubox
28 48 0.219519556 ubox
28 49 0.068594640 ubox
28 52 0.375209174 ubox
28 59 0.028227651 ubox
28 62 0.741357279 ubox
28 65 0.031729895 ubox
29 37 0.024012552 ubox
29 47 0.242403795 ubox
29 51 0.362176590 ubox
29 60 0.089811926 ubox
29 61 0.728722060 ubox
29 63 0.003448634 ubox
29 64 0.030654120 ubox
30 46 0.274519591 ubox
30 58 0.234584167 ubox
30 59 0.412734421 ubox
30 62 0.004259984 ubox
30 67 0.003569510 ubox
31 44 0.461421389 ubox
31 46 0.013595955 ubox
31 57 0.258607275 ubox
31 58 0.441259816 ubox
31 59 0.257375593 ubox
32 39 0.008237123 ubox
32 43 0.491365609 ubox
32 44 0.004582139 ubox
32 45 0.007943667 ubox
32 49 0.013347186 ubox
32 57 0.387969470 ubox
32 58 0.291503076 ubox
32 59 0.037803270 ubox
33 38 0.008242269 ubox
33 42 0.491569767 ubox
33 43 0.004027011 ubox
33 48 0.012576743 ubox
33 57 0.265376115 ubox
33 58 0.036125754 ubox
33 65 0.029931958 ubox
34 41 0.491606778 ubox
34 54 0.678117891 ubox
34 55 0.362909209 ubox
34 64 0.030056233 ubox
35 40 0.490896363 ubox
35 53 0.681576701 ubox
35 54 0.358281504 ubox
35 60 0.011070515 ubox
35 63 0.029963828 ubox
36 45 0.011651156 ubox
36 52 0.685337589 ubox
36 58 0.031768198 ubox
36 59 0.015312265 ubox
36 62 0.021861178 ubox
37 44 0.010910107 ubox
37 57 0.038114607 ubox
37 58 0.015146025 ubox
37 67 0.006617877 ubox
38 51 0.774947186 ubox
38 54 0.110086291 ubox
38 55 0.372137950 ubox
38 64 0.004045717 ubox
38 66 0.007078188 ubox
39 50 0.775447545 ubox
39 53 0.110239183 ubox
39 54 0.374985854 ubox
39 63 0.004050005 ubox
39 66 0.012321916 ubox
39 68 0.013475386 ubox
40 49 0.775496199 ubox
40 52 0.078087172 ubox
40 62 0.003911313 ubox
40 65 0.008994012 ubox
40 67 0.012547557 ubox
41 48 0.772545965 ubox
41 52 0.383628326 ubox
41 65 0.047536607 ubox
42 51 0.391586437 ubox
42 64 0.048429300 ubox
43 50 0.391181759 ubox
43 63 0.048416150 ubox
44 50 0.004210226 ubox
44 51 0.005129056 ubox
44 61 0.046101792 ubox
45 50 0.065806478 ubox
45 51 0.008778495 ubox
45 54 0.003376807 ubox
45 55 0.003253713 ubox
45 60 0.046822742 ubox
46 50 0.010789976 ubox
46 53 0.003255634 ubox
46 60 0.007295659 ubox
46 68 0.003486826 ubox
47 59 0.008741190 ubox
47 67 0.004435877 ubox
48 54 0.012015949 ubox
48 55 0.051793406 ubox
48 64 0.004766702 ubox
48 66 0.003281843 ubox
49 53 0.012010704 ubox
49 54 0.052182089 ubox
49 60 0.003933204 ubox
49 63 0.004988096 ubox
49 66 0.039880876 ubox
49 68 0.003401432 ubox
50 59 0.003894067 ubox
50 62 0.003970321 ubox
50 65 0.040867574 ubox
51 65 0.014694825 ubox
51 67 0.014492072 ubox
52 60 0.019528106 ubox
52 63 0.043201263 ubox
52 64 0.015378937 ubox
52 66 0.030882557 ubox
53 59 0.018106103 ubox
53 62 0.042351956 ubox
53 65 0.031281615 ubox
54 58 0.011823869 ubox
56 62 0.016700680 ubox
56 67 0.021527915 ubox
57 61 0.015822516 ubox
57 64 0.012113487 ubox
57 66 0.021527203 ubox
58 63 0.015119395 ubox
58 64 0.006444590 ubox
59 63 0.006156154 ubox
59 66 0.032007552 ubox
59 68 0.004678787 ubox
60 65 0.045143119 ubox
60 67 0.006957102 ubox
61 67 0.029330268 ubox
62 66 0.027666057 ubox
62 68 0.007106763 ubox
63 67 0.007112624 ubox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
24 67 0.9500000 lbox
25 66 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
showpage
end
%%EOF
