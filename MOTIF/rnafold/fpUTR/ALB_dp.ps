%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALB)
} def

/sequence { (\
AAUUAUUGGUUAAAGAAGUAUAUUAGUGCUAAUUUCCCUCCGUUUGUCCUAGCUUUUCUCUUCUGUCAACCCCACACGCCUUUGGCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.026477356 ubox
1 11 0.008873183 ubox
1 24 0.003686221 ubox
1 44 0.004983539 ubox
1 45 0.004106529 ubox
2 6 0.022424188 ubox
2 10 0.009821984 ubox
2 21 0.003454016 ubox
2 23 0.004066371 ubox
2 43 0.006326540 ubox
2 44 0.004408993 ubox
2 47 0.011710287 ubox
3 9 0.009782451 ubox
3 13 0.013078780 ubox
3 20 0.003460617 ubox
3 22 0.003860308 ubox
3 42 0.006183028 ubox
3 46 0.012048082 ubox
3 85 0.007057210 ubox
4 8 0.007323888 ubox
4 12 0.015095330 ubox
4 20 0.007600260 ubox
4 46 0.004271828 ubox
4 84 0.009558245 ubox
5 11 0.015146573 ubox
5 19 0.008065596 ubox
5 33 0.004989309 ubox
5 43 0.005340191 ubox
5 45 0.004747618 ubox
5 66 0.005174134 ubox
5 83 0.009825153 ubox
6 14 0.003301254 ubox
6 17 0.004003654 ubox
6 18 0.008040768 ubox
6 32 0.005455363 ubox
6 42 0.004566256 ubox
6 65 0.005085553 ubox
6 69 0.040578451 ubox
7 13 0.004661874 ubox
7 14 0.003393809 ubox
7 16 0.004267025 ubox
7 17 0.007879438 ubox
7 20 0.004009907 ubox
7 25 0.004390040 ubox
7 31 0.005650171 ubox
7 42 0.025142033 ubox
7 65 0.006174417 ubox
7 68 0.048736233 ubox
7 74 0.113135861 ubox
7 76 0.024948519 ubox
7 87 0.007875382 ubox
7 89 0.021849692 ubox
8 19 0.004493744 ubox
8 24 0.004556261 ubox
8 30 0.005675553 ubox
8 37 0.017645793 ubox
8 38 0.028997910 ubox
8 39 0.010958837 ubox
8 40 0.003873869 ubox
8 41 0.039194553 ubox
8 49 0.005841472 ubox
8 54 0.004642594 ubox
8 59 0.003255300 ubox
8 60 0.003528001 ubox
8 61 0.007497149 ubox
8 63 0.014257873 ubox
8 64 0.012223296 ubox
8 67 0.049946590 ubox
8 71 0.980106484 ubox
8 72 0.079631148 ubox
8 73 0.118326899 ubox
8 75 0.014533201 ubox
8 77 0.004873734 ubox
8 80 0.011001424 ubox
8 86 0.003325803 ubox
8 88 0.027077554 ubox
9 23 0.004584094 ubox
9 29 0.005679156 ubox
9 36 0.017696980 ubox
9 37 0.028986973 ubox
9 38 0.012212893 ubox
9 40 0.039185729 ubox
9 48 0.005849830 ubox
9 53 0.005027094 ubox
9 58 0.003673358 ubox
9 60 0.008073055 ubox
9 62 0.013824612 ubox
9 63 0.013206041 ubox
9 66 0.042070517 ubox
9 70 0.984763962 ubox
9 71 0.067142036 ubox
9 72 0.114695444 ubox
9 75 0.004906573 ubox
9 77 0.004103042 ubox
9 79 0.010997828 ubox
9 86 0.033021701 ubox
9 88 0.006830295 ubox
10 17 0.004591158 ubox
10 22 0.004455170 ubox
10 28 0.005544178 ubox
10 52 0.005021936 ubox
10 65 0.027643634 ubox
10 69 0.982555676 ubox
10 74 0.004750018 ubox
10 76 0.003930996 ubox
10 78 0.010685968 ubox
10 85 0.033107949 ubox
10 87 0.006348170 ubox
11 16 0.004267177 ubox
11 46 0.004912285 ubox
11 51 0.004929771 ubox
11 65 0.014018416 ubox
11 68 0.910082671 ubox
11 84 0.033077015 ubox
12 34 0.009642648 ubox
12 35 0.044479687 ubox
12 45 0.005624438 ubox
12 50 0.004431823 ubox
12 62 0.013314741 ubox
12 64 0.014314608 ubox
12 83 0.033096236 ubox
13 33 0.008525793 ubox
13 34 0.048046709 ubox
13 35 0.008416896 ubox
13 44 0.005592763 ubox
13 61 0.013192553 ubox
13 62 0.042002534 ubox
13 82 0.033054137 ubox
14 33 0.048542005 ubox
14 34 0.008666296 ubox
14 35 0.012336024 ubox
14 43 0.005195522 ubox
14 54 0.003167805 ubox
14 57 0.026575787 ubox
14 59 0.028817402 ubox
14 61 0.044768291 ubox
14 64 0.987968697 ubox
14 81 0.032728808 ubox
15 33 0.007936504 ubox
15 34 0.013874282 ubox
15 35 0.003456832 ubox
15 36 0.009320423 ubox
15 40 0.003649885 ubox
15 56 0.030677741 ubox
15 58 0.030058309 ubox
15 60 0.045018882 ubox
15 63 0.995257247 ubox
15 67 0.013451878 ubox
15 80 0.032460127 ubox
16 33 0.013252023 ubox
16 34 0.003733749 ubox
16 35 0.009338255 ubox
16 39 0.003614847 ubox
16 55 0.032688301 ubox
16 57 0.029904331 ubox
16 59 0.040382521 ubox
16 61 0.005258830 ubox
16 62 0.994768855 ubox
16 66 0.012944808 ubox
17 30 0.073502086 ubox
17 34 0.006302072 ubox
17 54 0.037831097 ubox
17 56 0.029055338 ubox
17 57 0.009499154 ubox
17 59 0.049432775 ubox
17 61 0.992481489 ubox
17 62 0.003420791 ubox
17 64 0.019279566 ubox
18 29 0.077923975 ubox
18 33 0.004874123 ubox
18 53 0.038899027 ubox
18 55 0.027803786 ubox
18 56 0.011337255 ubox
18 58 0.060063587 ubox
18 60 0.991022733 ubox
18 61 0.003952620 ubox
18 63 0.019455435 ubox
18 77 0.007995030 ubox
19 25 0.007237532 ubox
19 26 0.004132008 ubox
19 28 0.078314816 ubox
19 32 0.004721031 ubox
19 52 0.037301166 ubox
19 76 0.007546511 ubox
20 24 0.006873468 ubox
20 27 0.078811614 ubox
21 26 0.076143758 ubox
21 51 0.006312894 ubox
22 27 0.003759736 ubox
22 33 0.018869401 ubox
22 50 0.004810474 ubox
23 32 0.020049560 ubox
23 52 0.562307139 ubox
24 31 0.020393227 ubox
24 46 0.004067632 ubox
24 51 0.634846351 ubox
25 30 0.019313034 ubox
25 34 0.011453464 ubox
25 39 0.004213680 ubox
25 45 0.004157934 ubox
25 50 0.642134354 ubox
25 54 0.332587225 ubox
25 55 0.281144930 ubox
25 56 0.339063241 ubox
25 57 0.050109828 ubox
25 59 0.041360991 ubox
26 33 0.014100939 ubox
26 38 0.004491462 ubox
26 44 0.003595458 ubox
26 49 0.641761307 ubox
26 53 0.330712245 ubox
26 54 0.273193959 ubox
26 55 0.296325250 ubox
26 56 0.053492827 ubox
26 58 0.041155445 ubox
26 88 0.022405663 ubox
27 32 0.014359755 ubox
27 42 0.003167727 ubox
27 46 0.003259566 ubox
27 51 0.027879628 ubox
27 52 0.326538234 ubox
27 68 0.004413952 ubox
27 87 0.022434548 ubox
28 41 0.004751284 ubox
28 43 0.033967775 ubox
28 45 0.003927960 ubox
28 47 0.678935742 ubox
28 50 0.021290216 ubox
28 53 0.682593371 ubox
28 67 0.004496157 ubox
28 86 0.022452849 ubox
29 42 0.034158714 ubox
29 46 0.685689297 ubox
29 52 0.683776591 ubox
29 65 0.003196433 ubox
29 85 0.022451710 ubox
30 46 0.066559149 ubox
30 51 0.681841889 ubox
30 84 0.022414128 ubox
31 44 0.501856635 ubox
31 45 0.130835844 ubox
31 50 0.654973810 ubox
31 83 0.022234138 ubox
32 43 0.616828065 ubox
32 44 0.134211083 ubox
32 47 0.210091830 ubox
32 82 0.021253163 ubox
33 42 0.612311161 ubox
33 46 0.218242141 ubox
34 51 0.003836585 ubox
38 52 0.003658820 ubox
39 51 0.003704292 ubox
41 78 0.019549861 ubox
42 53 0.065721569 ubox
42 70 0.010079161 ubox
42 75 0.004216430 ubox
42 77 0.020572810 ubox
42 79 0.007891238 ubox
43 52 0.065688614 ubox
43 69 0.008932510 ubox
43 74 0.004112308 ubox
43 76 0.020044679 ubox
43 78 0.007809333 ubox
44 51 0.062781731 ubox
44 52 0.004055428 ubox
44 68 0.007234733 ubox
44 69 0.013713496 ubox
45 51 0.006594213 ubox
45 68 0.015718270 ubox
45 74 0.018831493 ubox
45 76 0.008680460 ubox
45 87 0.009546992 ubox
45 89 0.006443253 ubox
46 50 0.006366200 ubox
46 53 0.017328208 ubox
46 67 0.016541272 ubox
46 70 0.004034857 ubox
46 73 0.018904556 ubox
46 75 0.009181382 ubox
46 86 0.010906240 ubox
46 88 0.008207519 ubox
47 52 0.016528367 ubox
47 69 0.003973491 ubox
47 74 0.008752397 ubox
47 85 0.010299490 ubox
47 87 0.008085802 ubox
48 84 0.010241118 ubox
48 85 0.007896253 ubox
49 84 0.007903324 ubox
50 65 0.009465944 ubox
51 59 0.007508905 ubox
51 61 0.010053789 ubox
51 62 0.003422897 ubox
51 64 0.010133692 ubox
51 81 0.008832527 ubox
52 58 0.009758218 ubox
52 60 0.010257313 ubox
52 61 0.003710765 ubox
52 63 0.010082650 ubox
52 66 0.019947790 ubox
52 79 0.011531110 ubox
52 80 0.006948660 ubox
52 86 0.005936648 ubox
53 65 0.020388056 ubox
53 78 0.012787064 ubox
53 85 0.005940950 ubox
54 84 0.005830072 ubox
64 74 0.007821317 ubox
64 76 0.021071834 ubox
64 78 0.006406929 ubox
64 87 0.044696741 ubox
64 89 0.003861923 ubox
65 73 0.009218379 ubox
65 75 0.025473167 ubox
65 77 0.012077909 ubox
65 79 0.003702163 ubox
65 86 0.057507908 ubox
65 88 0.006340902 ubox
66 74 0.024586228 ubox
66 76 0.011510628 ubox
66 78 0.003599827 ubox
66 85 0.057500361 ubox
66 87 0.006247479 ubox
67 84 0.057529644 ubox
68 83 0.056581059 ubox
69 81 0.003556799 ubox
69 82 0.050126362 ubox
72 84 0.004341636 ubox
72 85 0.193075318 ubox
73 84 0.194736700 ubox
74 83 0.189687839 ubox
75 84 0.032726113 ubox
76 83 0.029655971 ubox
77 84 0.020948659 ubox
78 83 0.014340712 ubox
78 86 0.971248972 ubox
79 85 0.972244451 ubox
80 84 0.965180250 ubox
83 89 0.005458072 ubox
84 88 0.006825482 ubox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
14 64 0.9500000 lbox
15 63 0.9500000 lbox
16 62 0.9500000 lbox
17 61 0.9500000 lbox
18 60 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
78 86 0.9500000 lbox
79 85 0.9500000 lbox
80 84 0.9500000 lbox
showpage
end
%%EOF
