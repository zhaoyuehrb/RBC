%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCGCCGCGAGGCGGGGCCGGGGAGGCGCGCGCCCGGCUUGCGGGACUGCGGGGCGCGAGAGCGCGGCCGGGUAGCGUCGCGCGCGUGGAUCUGCCGCCGGGUUGCUGUGCGACUAUUCUCCGGGAGCCGUCCGUGUCACCGCCGGAACCUGGCGCAGGUUAAUUAUAGAAA\
) } def
/len { sequence length } bind def

/coor [
[123.40102386 144.68888855]
[128.90719604 130.73603821]
[138.96261597 119.60552216]
[152.28411865 112.71585846]
[137.35717773 111.23722839]
[122.43023682 109.75859833]
[107.50329590 108.27996826]
[92.56367493 106.93537903]
[77.61259460 105.72493744]
[62.66151428 104.51449585]
[47.71043396 103.30406189]
[32.75935364 102.09362030]
[18.37981606 108.69207001]
[6.31841993 99.95296478]
[-8.63266087 98.74252319]
[-16.81863594 109.85569763]
[-29.33118248 115.42072296]
[-42.85064316 114.07846832]
[-53.84783173 106.28701019]
[-59.50532150 94.17385101]
[-74.43226624 92.69522095]
[-89.35920715 91.21658325]
[-104.28615570 89.73795319]
[-111.86588287 98.94849396]
[-122.84423065 103.29727936]
[-134.43696594 101.80636597]
[-143.76402283 94.96327209]
[-148.56492615 84.57052612]
[-163.42918396 82.55702972]
[-178.29342651 80.54352570]
[-193.15766907 78.53002930]
[-208.08460999 77.05139923]
[-223.05502319 76.10954285]
[-238.02542114 75.16768646]
[-252.99581909 74.22582245]
[-267.96621704 73.28396606]
[-282.93661499 72.34210968]
[-297.19540405 79.19762421]
[-309.41171265 70.67643738]
[-324.38211060 69.73458099]
[-332.81466675 82.57155609]
[-346.54312134 89.45809937]
[-361.87466431 88.54175568]
[-374.68515015 80.06902313]
[-381.52862549 66.31903076]
[-380.56423950 50.99044418]
[-372.05139160 38.20658493]
[-358.27999878 31.40624237]
[-342.95452881 32.41867828]
[-330.19741821 40.97154999]
[-323.44027710 54.76417923]
[-308.46984863 55.70603561]
[-295.28186035 48.78315735]
[-281.99475098 57.37170792]
[-267.02435303 58.31356812]
[-252.05395508 59.25542450]
[-237.08355713 60.19728088]
[-222.11315918 61.13914108]
[-207.14276123 62.08099747]
[-204.94042969 60.29572296]
[-201.88656616 59.29034424]
[-198.28024292 59.39802933]
[-194.53695679 60.83554459]
[-191.14418030 63.66578293]
[-176.27992249 65.67928314]
[-161.41567993 67.69277954]
[-146.55143738 69.70628357]
[-132.71368408 57.75863266]
[-114.21690369 59.71955872]
[-102.80752563 74.81101227]
[-87.88057709 76.28964233]
[-72.95363617 77.76827240]
[-58.02669144 79.24690247]
[-47.52938080 66.64606476]
[-31.43143272 62.73419571]
[-16.01624680 69.24156952]
[-7.42222166 83.79144287]
[7.52885962 85.00187683]
[20.83899307 78.31684875]
[33.96979141 87.14253998]
[48.92087173 88.35297394]
[63.87195587 89.56341553]
[78.82303619 90.77385712]
[93.77411652 91.98429871]
[101.45251465 89.43766022]
[108.98192596 93.35301971]
[123.90886688 94.83165741]
[138.83581543 96.31028748]
[153.76275635 97.78891754]
[163.68267822 93.53737640]
[172.49595642 97.28434753]
[187.32167053 95.00434875]
[202.14738464 92.72434235]
[216.97308350 90.44434357]
[231.79879761 88.16433716]
[246.62449646 85.88433838]
[261.45019531 83.60433197]
[269.48818970 79.19347382]
[276.56228638 81.41896057]
[291.42654419 79.40545654]
[306.29077148 77.39196014]
[321.15502930 75.37845612]
[336.01925659 73.36495972]
[350.88351440 71.35146332]
[365.74777222 69.33795929]
[380.61199951 67.32446289]
[388.72787476 63.05860519]
[395.76089478 65.41071320]
[410.65887451 63.66437149]
[425.55688477 61.91802216]
[433.74801636 57.79854202]
[440.73767090 60.27651978]
[455.66461182 58.79788971]
[470.59155273 57.31925964]
[473.34210205 44.82004547]
[479.49624634 33.61899948]
[488.54586792 24.61993027]
[499.74966431 18.54571533]
[512.19390869 15.88023376]
[524.86700439 16.82983208]
[536.74145508 21.30738831]
[546.85766602 28.94019318]
[554.40100098 39.10096359]
[558.76757812 50.95937347]
[573.75250244 50.28639984]
[588.73736572 49.61343002]
[603.72229004 48.94045639]
[615.56384277 38.11651993]
[631.38623047 40.76820374]
[639.05187988 54.86136246]
[632.68035889 69.58493042]
[617.15936279 73.64424896]
[604.39526367 63.92535400]
[589.41033936 64.59832764]
[574.42547607 65.27129364]
[559.44055176 65.94426727]
[554.04919434 82.40889740]
[542.74206543 95.58149719]
[527.22180176 103.43720245]
[509.84146118 104.75487518]
[493.24755859 99.30690002]
[479.97717285 87.89794159]
[472.07019043 72.24620056]
[457.14321899 73.72483063]
[442.21627808 75.20346832]
[427.30322266 76.81601715]
[412.40521240 78.56236267]
[397.50723267 80.30870819]
[382.62551880 82.18871307]
[367.76126099 84.20220947]
[352.89700317 86.21570587]
[338.03277588 88.22920990]
[323.16851807 90.24270630]
[308.30429077 92.25620270]
[293.44003296 94.26970673]
[278.57577515 96.28320312]
[263.73019409 98.43003845]
[248.90449524 100.71004486]
[234.07879639 102.99004364]
[219.25308228 105.27005005]
[204.42738342 107.55004883]
[189.60166931 109.83005524]
[174.77597046 112.11005402]
[188.45098877 118.27397919]
[199.09037781 128.84768677]
[205.33888245 142.48425293]
[206.40052795 157.44664001]
[202.14010620 171.82887268]
[193.10029602 183.79891968]
[180.43261719 191.83197021]
[165.75073242 194.90478516]
[150.92485046 192.62591553]
[137.84353638 185.28565979]
[128.17314148 173.81904602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 89]
[5 88]
[6 87]
[7 86]
[8 84]
[9 83]
[10 82]
[11 81]
[12 80]
[14 78]
[15 77]
[20 73]
[21 72]
[22 71]
[23 70]
[28 67]
[29 66]
[30 65]
[31 64]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[39 52]
[40 51]
[91 163]
[92 162]
[93 161]
[94 160]
[95 159]
[96 158]
[97 157]
[99 156]
[100 155]
[101 154]
[102 153]
[103 152]
[104 151]
[105 150]
[106 149]
[108 148]
[109 147]
[110 146]
[112 145]
[113 144]
[114 143]
[124 136]
[125 135]
[126 134]
[127 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
