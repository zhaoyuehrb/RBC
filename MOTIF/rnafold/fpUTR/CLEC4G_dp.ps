%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLEC4G)
} def

/sequence { (\
AGUGCGUAGGUCCAGUGAGAACAGGCGUGAAAUUUAUAUCUCUGCCCAGGACUGGGUGCCUGCAUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 61 0.004924397 ubox
2 59 0.009177800 ubox
2 60 0.005057303 ubox
2 63 0.005991861 ubox
2 65 0.170406861 ubox
2 68 0.869493700 ubox
3 14 0.007728391 ubox
3 58 0.009263972 ubox
3 62 0.005712866 ubox
3 64 0.177402396 ubox
3 67 0.870484657 ubox
4 11 0.028038039 ubox
4 13 0.008359383 ubox
4 57 0.009330514 ubox
4 59 0.005601717 ubox
4 61 0.003418388 ubox
4 63 0.177694987 ubox
4 66 0.863778157 ubox
4 68 0.278572156 ubox
5 10 0.029588985 ubox
5 56 0.009351649 ubox
5 58 0.005606862 ubox
5 62 0.176196366 ubox
5 67 0.279337220 ubox
6 57 0.005175684 ubox
6 59 0.015608667 ubox
6 61 0.086807502 ubox
6 63 0.968817770 ubox
6 65 0.010911743 ubox
6 66 0.150301864 ubox
7 54 0.007900344 ubox
7 58 0.015906200 ubox
7 62 0.981022409 ubox
7 64 0.019286556 ubox
8 53 0.007669793 ubox
8 57 0.014581610 ubox
8 61 0.991872843 ubox
9 52 0.005492793 ubox
9 53 0.007988421 ubox
9 60 0.997338837 ubox
9 61 0.004905083 ubox
9 69 0.006034689 ubox
10 52 0.009745751 ubox
10 57 0.027484949 ubox
10 59 0.996712945 ubox
10 60 0.005092988 ubox
10 68 0.006002331 ubox
11 51 0.011161066 ubox
11 56 0.389059631 ubox
11 58 0.881670221 ubox
11 67 0.005827299 ubox
12 25 0.018638915 ubox
12 50 0.011268183 ubox
12 55 0.985406577 ubox
12 56 0.135075200 ubox
13 24 0.018835563 ubox
13 29 0.006313700 ubox
13 44 0.006370823 ubox
13 49 0.011252877 ubox
13 54 0.992675811 ubox
13 55 0.098634965 ubox
14 28 0.006109794 ubox
14 43 0.007204520 ubox
14 53 0.996729061 ubox
15 22 0.027124046 ubox
15 26 0.008460840 ubox
15 37 0.003917214 ubox
15 42 0.007113321 ubox
15 45 0.003790714 ubox
15 52 0.997212997 ubox
15 65 0.005343762 ubox
15 68 0.057811369 ubox
16 21 0.027322516 ubox
16 23 0.022236748 ubox
16 25 0.008448635 ubox
16 36 0.004070581 ubox
16 44 0.003728709 ubox
16 48 0.035978667 ubox
16 51 0.990115247 ubox
16 64 0.005411543 ubox
16 67 0.057918936 ubox
17 22 0.051050454 ubox
17 35 0.004132301 ubox
17 40 0.007120889 ubox
17 42 0.032629209 ubox
17 47 0.053077765 ubox
17 63 0.005413596 ubox
17 66 0.058144791 ubox
18 34 0.004066610 ubox
18 39 0.007066601 ubox
18 41 0.032708358 ubox
18 43 0.005303505 ubox
18 53 0.005673992 ubox
18 65 0.057887224 ubox
19 33 0.003339455 ubox
19 40 0.032713098 ubox
19 42 0.005578004 ubox
19 52 0.006661914 ubox
20 39 0.031362061 ubox
20 41 0.004652827 ubox
21 28 0.012293829 ubox
22 27 0.012393417 ubox
22 29 0.008461630 ubox
22 44 0.193098528 ubox
22 62 0.058326218 ubox
23 28 0.008156553 ubox
23 34 0.007092737 ubox
23 35 0.006375973 ubox
23 41 0.020161848 ubox
23 43 0.193710653 ubox
23 61 0.058545675 ubox
24 33 0.007798184 ubox
24 34 0.006966798 ubox
24 35 0.008603181 ubox
24 40 0.022428785 ubox
24 41 0.006120156 ubox
24 42 0.193566905 ubox
24 43 0.017631400 ubox
24 46 0.974630963 ubox
24 47 0.056866487 ubox
24 60 0.058575693 ubox
25 33 0.005998277 ubox
25 34 0.009108175 ubox
25 39 0.023418369 ubox
25 40 0.044536579 ubox
25 41 0.178195993 ubox
25 42 0.017906677 ubox
25 45 0.976751172 ubox
25 46 0.048434377 ubox
25 59 0.058575552 ubox
26 44 0.977077531 ubox
26 58 0.058488256 ubox
27 33 0.006435946 ubox
27 37 0.126849616 ubox
27 39 0.127636603 ubox
27 43 0.916600315 ubox
27 45 0.035478760 ubox
27 57 0.016645264 ubox
28 32 0.006480660 ubox
28 36 0.130911681 ubox
28 38 0.128719064 ubox
28 44 0.034477731 ubox
29 35 0.130135348 ubox
29 37 0.115779364 ubox
29 40 0.529272494 ubox
29 42 0.803839338 ubox
29 43 0.011352158 ubox
30 34 0.111219500 ubox
30 39 0.521969173 ubox
30 41 0.783896351 ubox
32 39 0.660501943 ubox
33 38 0.664344997 ubox
36 43 0.003235918 ubox
41 50 0.003530489 ubox
42 49 0.005071110 ubox
42 50 0.005244155 ubox
43 48 0.004815200 ubox
43 49 0.005314732 ubox
43 58 0.007616092 ubox
44 57 0.064029933 ubox
45 56 0.068263774 ubox
46 55 0.068306323 ubox
47 54 0.068579693 ubox
48 53 0.061784094 ubox
62 68 0.004942621 ubox
63 67 0.004944357 ubox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
8 61 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
12 55 0.9500000 lbox
13 54 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
showpage
end
%%EOF
