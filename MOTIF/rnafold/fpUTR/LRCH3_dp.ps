%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LRCH3)
} def

/sequence { (\
GGUCCGGCCGCGCAUGCGCUGAGCUGGCGGGCCCGAGUGUUGUCGGCUGGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.009485598 ubox
1 48 0.004162217 ubox
2 28 0.003781588 ubox
2 32 0.013718663 ubox
2 47 0.004406268 ubox
3 31 0.013507150 ubox
3 36 0.004840461 ubox
3 50 0.003525081 ubox
3 51 0.778109954 ubox
3 52 0.135003647 ubox
4 27 0.004521843 ubox
4 30 0.013513821 ubox
4 31 0.003730988 ubox
4 35 0.005447395 ubox
4 46 0.003184497 ubox
4 49 0.003202368 ubox
4 50 0.991461330 ubox
4 51 0.120688402 ubox
5 21 0.003241836 ubox
5 26 0.004565548 ubox
5 29 0.013485876 ubox
5 30 0.003763544 ubox
5 45 0.003185513 ubox
5 49 0.995482463 ubox
5 50 0.091096330 ubox
6 20 0.003426294 ubox
6 25 0.004659812 ubox
6 28 0.009615383 ubox
6 33 0.024001366 ubox
6 48 0.997875699 ubox
7 19 0.003454389 ubox
7 24 0.004936581 ubox
7 28 0.010177065 ubox
7 32 0.028324427 ubox
7 47 0.999460224 ubox
8 23 0.004935802 ubox
8 27 0.013863824 ubox
8 30 0.005002555 ubox
8 31 0.028572302 ubox
8 46 0.999451546 ubox
9 21 0.003999948 ubox
9 26 0.013861203 ubox
9 29 0.005223264 ubox
9 30 0.028527759 ubox
9 45 0.999410157 ubox
10 17 0.004310615 ubox
10 19 0.005105503 ubox
10 24 0.011721596 ubox
10 25 0.007046301 ubox
10 28 0.005406988 ubox
10 40 0.006838938 ubox
10 43 0.031127388 ubox
10 44 0.995582749 ubox
11 16 0.004324243 ubox
11 18 0.005187173 ubox
11 23 0.011969998 ubox
11 27 0.005404779 ubox
11 29 0.030283551 ubox
11 39 0.011023515 ubox
11 42 0.148469037 ubox
11 45 0.005010651 ubox
12 17 0.005057208 ubox
12 19 0.005804477 ubox
12 24 0.006312094 ubox
12 28 0.030467644 ubox
12 38 0.011205722 ubox
12 40 0.030335114 ubox
12 41 0.142043424 ubox
12 43 0.974391538 ubox
12 44 0.011333047 ubox
13 18 0.005804498 ubox
13 21 0.010028616 ubox
13 23 0.006307772 ubox
13 26 0.005376354 ubox
13 27 0.030438101 ubox
13 37 0.011236984 ubox
13 39 0.038441426 ubox
13 42 0.982775281 ubox
14 20 0.009410905 ubox
14 25 0.005425261 ubox
14 38 0.038081800 ubox
14 40 0.036538156 ubox
14 41 0.914064065 ubox
14 43 0.016653861 ubox
15 35 0.011228894 ubox
15 37 0.035319873 ubox
15 39 0.043205329 ubox
15 42 0.014835351 ubox
16 24 0.031071781 ubox
16 32 0.017690643 ubox
16 34 0.012455518 ubox
16 38 0.046977014 ubox
16 40 0.961824334 ubox
16 41 0.012649504 ubox
17 23 0.031071009 ubox
17 29 0.009431019 ubox
17 31 0.017535470 ubox
17 35 0.028839441 ubox
17 37 0.047158181 ubox
17 39 0.997018482 ubox
18 28 0.011002308 ubox
18 32 0.015610798 ubox
18 34 0.028011087 ubox
18 38 0.996993552 ubox
19 27 0.011027202 ubox
19 30 0.021156129 ubox
19 31 0.014984737 ubox
19 37 0.997321236 ubox
20 26 0.010755004 ubox
20 29 0.021756389 ubox
20 30 0.013971344 ubox
20 35 0.433427023 ubox
20 36 0.891836213 ubox
21 25 0.005010198 ubox
21 28 0.022192197 ubox
21 34 0.876714593 ubox
22 48 0.004142439 ubox
23 32 0.996215633 ubox
23 47 0.004219795 ubox
24 30 0.022226402 ubox
24 31 0.997201819 ubox
24 46 0.004220341 ubox
25 29 0.024672301 ubox
25 30 0.978235505 ubox
25 35 0.031982122 ubox
25 45 0.004217795 ubox
26 33 0.036041496 ubox
26 34 0.032723874 ubox
26 44 0.004323533 ubox
27 32 0.035937286 ubox
27 33 0.032488719 ubox
27 43 0.004326367 ubox
28 35 0.006976407 ubox
28 42 0.004325265 ubox
29 34 0.006929454 ubox
29 41 0.004028632 ubox
30 41 0.004510446 ubox
30 44 0.003788886 ubox
31 38 0.004249516 ubox
31 40 0.005454960 ubox
31 43 0.003950088 ubox
31 47 0.003599012 ubox
32 37 0.004382206 ubox
32 39 0.005638402 ubox
32 42 0.003944298 ubox
32 51 0.003567221 ubox
33 46 0.012524551 ubox
33 50 0.003835252 ubox
33 51 0.014340298 ubox
34 45 0.023263834 ubox
34 49 0.004867831 ubox
34 50 0.019982847 ubox
35 44 0.023806266 ubox
36 43 0.023427013 ubox
36 48 0.021219413 ubox
37 47 0.021474585 ubox
38 45 0.006122714 ubox
38 46 0.020550362 ubox
39 44 0.008528152 ubox
44 51 0.003195108 ubox
3 51 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
