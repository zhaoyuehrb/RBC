%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCCGGGGGCUUUUGCCAGCGGCGCCGCGGGCCUGCGUGCUGGGGCAGCGGGCACUUCUUCGACCUCGUCCUCCUCGUCCUGUGCGGCCGGCCGGGUGAGGCCGGGCCCGCGUAGGGGGCAGUCGGCGGCUGCCUCCGGCGGAGGUGCCUCGCGGCGCCCGGGCCGGCCCGCGCCUCGGCGGCGUGCUCC\
) } def
/len { sequence length } bind def

/coor [
[166.48051453 606.92034912]
[164.78379822 592.01660156]
[163.08709717 577.11285400]
[161.39038086 562.20916748]
[159.69367981 547.30541992]
[157.99696350 532.40167236]
[155.81854248 517.56072998]
[153.16067505 502.79806519]
[143.29064941 491.64315796]
[148.46025085 476.69039917]
[145.80238342 461.92773438]
[143.14453125 447.16510010]
[140.48666382 432.40243530]
[137.82879639 417.63980103]
[128.93304443 412.57672119]
[124.20014954 403.25387573]
[125.41244507 392.64776611]
[132.40902710 384.29626465]
[130.23060608 369.45529175]
[128.05216980 354.61431885]
[116.73355103 348.43927002]
[110.95592499 336.69534302]
[113.03215790 323.57571411]
[122.42495728 313.91033936]
[120.48713684 299.03601074]
[118.54930878 284.16171265]
[116.61148834 269.28741455]
[114.67366791 254.41311646]
[112.73584747 239.53881836]
[110.79802704 224.66452026]
[108.86019897 209.79020691]
[106.92237854 194.91590881]
[104.86418915 180.05778503]
[102.68576050 165.21681213]
[100.50733185 150.37583923]
[98.20880890 135.55299377]
[95.79034424 120.74924469]
[84.68643951 114.62010193]
[79.07807159 103.24428558]
[80.97789764 90.70419312]
[89.70412445 81.50006866]
[87.52569580 66.65909576]
[85.34726715 51.81812668]
[83.16883850 36.97715378]
[80.99040985 22.13618088]
[78.81198120 7.29520941]
[76.51345825 -7.52763796]
[74.09500122 -22.33138847]
[71.67653656 -37.13513947]
[69.25807190 -51.93888855]
[66.83960724 -66.74263763]
[64.42114258 -81.54639435]
[54.41842270 -89.70413971]
[52.71531677 -102.09411621]
[59.68506622 -111.99185944]
[57.50663757 -126.83283234]
[48.53742981 -114.80979919]
[33.97029495 -111.23228455]
[20.45196342 -117.73264313]
[14.15061474 -131.34487915]
[17.94144440 -145.85797119]
[30.09476280 -154.64982605]
[45.06521988 -153.70889282]
[56.02125549 -143.46607971]
[55.53552628 -158.45820618]
[55.04979706 -173.45034790]
[54.56406784 -188.44247437]
[46.19838333 -195.42207336]
[43.12596130 -205.64555359]
[46.13204956 -215.65950012]
[53.98989868 -222.21871948]
[53.98989868 -237.21871948]
[53.98989868 -252.21871948]
[53.98989868 -267.21871948]
[43.36969376 -256.62573242]
[28.43744087 -255.20172119]
[16.00646782 -263.59640503]
[11.74880981 -277.97946167]
[17.60716248 -291.78814697]
[30.90846252 -298.72180176]
[45.58355713 -295.61669922]
[54.93588638 -283.89132690]
[56.63259125 -298.79507446]
[58.32929993 -313.69879150]
[60.02600861 -328.60253906]
[61.72271347 -343.50625610]
[63.41942215 -358.41000366]
[65.11612701 -373.31372070]
[66.81283569 -388.21746826]
[68.50954437 -403.12118530]
[69.96469116 -418.05044556]
[71.17789459 -433.00128174]
[72.39110565 -447.95214844]
[73.60430908 -462.90301514]
[74.81752014 -477.85385132]
[76.03072357 -492.80471802]
[65.60619354 -504.68347168]
[66.71783447 -520.44860840]
[78.70613098 -530.74694824]
[94.45864105 -529.46868896]
[104.62967682 -517.37219238]
[103.18495178 -501.63409424]
[90.98158264 -491.59152222]
[89.76837158 -476.64065552]
[88.55516815 -461.68978882]
[87.34196472 -446.73895264]
[86.12875366 -431.78808594]
[84.91555023 -416.83721924]
[87.28041840 -412.67306519]
[87.04460907 -406.97695923]
[83.41327667 -401.42446899]
[81.71656799 -386.52075195]
[80.01985931 -371.61700439]
[78.32315063 -356.71328735]
[76.62644196 -341.80957031]
[74.92974091 -326.90582275]
[73.23303223 -312.00210571]
[71.53632355 -297.09835815]
[69.83961487 -282.19464111]
[68.98989868 -267.21871948]
[68.98989868 -252.21871948]
[68.98989868 -237.21871948]
[68.98989868 -222.21871948]
[79.86493683 -206.24055481]
[69.55620575 -188.92820740]
[70.04193115 -173.93606567]
[70.52765656 -158.94393921]
[71.01338959 -143.95179749]
[72.34761047 -129.01126099]
[74.52603912 -114.17028809]
[86.14147186 -101.02358246]
[79.22489166 -83.96485138]
[81.64335632 -69.16110229]
[84.06182098 -54.35735321]
[86.48028564 -39.55360413]
[88.89875031 -24.74985313]
[91.31721497 -9.94610214]
[95.50437164 -3.84295297]
[93.65295410 5.11678076]
[95.83138275 19.95775223]
[98.00981140 34.79872513]
[100.18824005 49.63969803]
[102.36666870 64.48066711]
[104.54509735 79.32164001]
[118.00477600 88.86085510]
[120.53273010 105.16328430]
[110.59409332 118.33078003]
[113.01255798 133.13453674]
[117.49048615 141.11280823]
[115.34830475 148.19741821]
[117.52673340 163.03839111]
[119.70516205 177.87936401]
[124.05330658 185.92909241]
[121.79668427 192.97808838]
[123.73450470 207.85238647]
[125.67232513 222.72669983]
[127.61014557 237.60099792]
[129.54797363 252.47529602]
[131.48579407 267.34960938]
[133.42361450 282.22390747]
[135.36143494 297.09820557]
[137.29925537 311.97250366]
[151.35327148 322.37759399]
[153.49862671 339.39187622]
[142.89314270 352.43591309]
[145.07157898 367.27688599]
[147.25000000 382.11782837]
[160.46321106 397.32962036]
[152.59144592 414.98193359]
[155.24931335 429.74456787]
[157.90716553 444.50723267]
[160.56503296 459.26986694]
[163.22290039 474.03253174]
[173.28303528 486.24334717]
[167.92332458 500.14019775]
[170.58119202 514.90283203]
[173.52413940 518.13934326]
[175.11518860 521.77941895]
[175.39421082 525.34576416]
[174.55282593 528.42364502]
[172.90069580 530.70495605]
[174.59741211 545.60870361]
[176.29411316 560.51245117]
[177.99082947 575.41619873]
[179.68753052 590.31988525]
[181.38423157 605.22363281]
[194.95474243 612.74835205]
[201.48007202 626.82666016]
[198.45111084 642.04522705]
[187.03254700 652.55218506]
[171.61505127 654.30737305]
[158.12698364 646.63592529]
[151.75476074 632.48760986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[7 176]
[8 175]
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[18 167]
[19 166]
[20 165]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 152]
[34 151]
[35 150]
[36 148]
[37 147]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[55 130]
[56 129]
[64 128]
[65 127]
[66 126]
[67 125]
[71 123]
[72 122]
[73 121]
[74 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
