%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRAP1)
} def

/sequence { (\
GAGGAAGCCCCGCCCCGCGCAGCCCCGUCCCGCCCCUUCCCAUCGUGUACGGUCCCGCGUGGCUGCGCGCGGCGCUCUGGGAGUACGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 77 0.073023460 ubox
2 76 0.072959705 ubox
2 78 0.034806495 ubox
3 9 0.041552154 ubox
3 10 0.116262328 ubox
3 11 0.093444092 ubox
3 75 0.071983185 ubox
3 76 0.005735301 ubox
3 77 0.034784394 ubox
3 78 0.096926043 ubox
4 8 0.041414286 ubox
4 9 0.116423573 ubox
4 10 0.093674162 ubox
4 75 0.008762692 ubox
4 76 0.018308248 ubox
4 77 0.106380552 ubox
5 76 0.076409544 ubox
6 76 0.092801220 ubox
6 78 0.029365607 ubox
7 73 0.004610380 ubox
7 75 0.121952362 ubox
7 77 0.030301485 ubox
7 84 0.389598241 ubox
8 72 0.004358262 ubox
8 74 0.116795672 ubox
8 80 0.055028199 ubox
8 81 0.865508370 ubox
8 83 0.397090280 ubox
9 71 0.004053520 ubox
9 72 0.005953673 ubox
9 79 0.055050342 ubox
9 80 0.868657421 ubox
9 81 0.431511735 ubox
10 71 0.004450912 ubox
10 72 0.086196985 ubox
10 79 0.868141131 ubox
10 80 0.431709681 ubox
10 81 0.024763938 ubox
11 71 0.086359435 ubox
11 74 0.859847199 ubox
11 79 0.413909794 ubox
11 80 0.023730236 ubox
11 87 0.005412922 ubox
12 70 0.086450557 ubox
12 73 0.912170441 ubox
12 75 0.395779458 ubox
12 78 0.057631957 ubox
13 69 0.078965553 ubox
13 72 0.911902688 ubox
13 74 0.398241257 ubox
14 71 0.910007710 ubox
14 72 0.400697470 ubox
15 71 0.402860347 ubox
15 72 0.016698304 ubox
16 69 0.995617861 ubox
16 71 0.016152113 ubox
17 68 0.999880426 ubox
17 70 0.013516393 ubox
18 67 0.999896312 ubox
18 69 0.012904420 ubox
19 66 0.999936191 ubox
19 68 0.009352637 ubox
20 65 0.999952554 ubox
20 67 0.008461353 ubox
21 64 0.999746618 ubox
22 63 0.999985039 ubox
23 62 0.998786100 ubox
24 61 0.996358290 ubox
24 62 0.048892815 ubox
25 52 0.150443105 ubox
25 61 0.069116807 ubox
26 32 0.006506987 ubox
26 45 0.003495817 ubox
26 51 0.150581493 ubox
26 57 0.057428820 ubox
26 59 0.984178554 ubox
27 31 0.006370905 ubox
27 33 0.006956961 ubox
27 44 0.003590391 ubox
27 50 0.150518920 ubox
27 56 0.057207046 ubox
27 58 0.985551585 ubox
27 60 0.007099475 ubox
28 32 0.006542036 ubox
28 49 0.146500834 ubox
28 52 0.008269890 ubox
28 57 0.968343403 ubox
29 51 0.018634950 ubox
29 52 0.175015317 ubox
29 61 0.003663516 ubox
30 51 0.173813616 ubox
30 52 0.315522372 ubox
30 61 0.003347304 ubox
31 45 0.027120514 ubox
31 47 0.217120891 ubox
31 51 0.316679942 ubox
31 57 0.040209626 ubox
31 59 0.030430721 ubox
32 44 0.026365624 ubox
32 46 0.219320677 ubox
32 48 0.047547883 ubox
32 50 0.310872381 ubox
32 53 0.888915245 ubox
32 56 0.048563955 ubox
32 58 0.031262688 ubox
33 45 0.220626109 ubox
33 47 0.057904493 ubox
33 52 0.902343915 ubox
33 57 0.031340203 ubox
34 51 0.899234982 ubox
34 52 0.116611060 ubox
35 51 0.125258053 ubox
35 52 0.086341717 ubox
36 51 0.087231280 ubox
36 52 0.015554515 ubox
37 51 0.015193107 ubox
38 52 0.008117615 ubox
39 51 0.009435402 ubox
39 52 0.035541750 ubox
40 51 0.035512302 ubox
40 52 0.023919057 ubox
41 47 0.208658312 ubox
41 51 0.024251258 ubox
41 61 0.003848007 ubox
42 46 0.169748870 ubox
42 48 0.024444428 ubox
42 53 0.074372769 ubox
42 60 0.005788792 ubox
43 47 0.023440779 ubox
43 52 0.077626618 ubox
44 51 0.082414832 ubox
44 59 0.014862866 ubox
45 50 0.095742130 ubox
45 58 0.015359361 ubox
46 57 0.015396787 ubox
47 56 0.015668887 ubox
49 60 0.014560704 ubox
50 57 0.010391036 ubox
50 59 0.015085427 ubox
51 56 0.012427840 ubox
51 58 0.015089649 ubox
52 58 0.004015230 ubox
53 57 0.004039543 ubox
74 78 0.003836253 ubox
74 84 0.127174734 ubox
74 86 0.006631083 ubox
75 81 0.011274987 ubox
75 83 0.156529278 ubox
76 80 0.010208998 ubox
76 82 0.156772723 ubox
76 88 0.025547492 ubox
77 81 0.155504025 ubox
77 83 0.009186741 ubox
77 87 0.027866048 ubox
78 82 0.008412253 ubox
78 85 0.013905585 ubox
78 87 0.052455232 ubox
79 84 0.014466791 ubox
79 86 0.075713773 ubox
83 89 0.058298498 ubox
84 88 0.053156584 ubox
8 81 0.9500000 lbox
9 80 0.9500000 lbox
10 79 0.9500000 lbox
11 74 0.9500000 lbox
12 73 0.9500000 lbox
13 72 0.9500000 lbox
14 71 0.9500000 lbox
16 69 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
20 65 0.9500000 lbox
21 64 0.9500000 lbox
22 63 0.9500000 lbox
23 62 0.9500000 lbox
24 61 0.9500000 lbox
26 59 0.9500000 lbox
27 58 0.9500000 lbox
28 57 0.9500000 lbox
32 53 0.9500000 lbox
33 52 0.9500000 lbox
34 51 0.9500000 lbox
showpage
end
%%EOF
