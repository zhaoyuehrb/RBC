%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCGGAGCCGGGUCCCUGUCCCCGGGCCGGGCGCCGCCGCCGCCCCCUGCCCAGCGCCCGCGUCUCCGCGGCGCCACCCCAGCGCCAAUAUUCCGGAGAUCAAGCGUUACGCGGCGGCGGCGGCGGCGGCGGCGGGGCCCGGAGCGGGAGGCGCCGGGGACCGGGGCGAGGCGGCCCCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[188.10594177 385.76364136]
[186.56045532 382.53253174]
[186.11682129 378.57937622]
[187.04934692 374.29901123]
[181.97059631 360.18496704]
[176.89184570 346.07092285]
[171.81311035 331.95687866]
[158.26968384 325.86495972]
[152.91806030 311.62365723]
[159.39965820 297.45938110]
[154.32090759 283.34533691]
[142.73135376 273.98950195]
[145.33915710 258.38467407]
[140.26040649 244.27064514]
[135.18165588 230.15660095]
[123.59211731 220.80076599]
[126.19992065 205.19595337]
[121.12117004 191.08190918]
[116.04241943 176.96786499]
[113.00769806 175.14131165]
[110.71350861 171.74565125]
[109.89149475 167.14814758]
[111.08008575 162.03047180]
[106.70368195 147.68309021]
[102.32728577 133.33572388]
[97.95088959 118.98834991]
[85.21141815 112.08528900]
[80.98395538 98.22618103]
[87.70174408 85.38805389]
[83.32534027 71.04067993]
[78.94894409 56.69330215]
[74.57254028 42.34592819]
[70.19614410 27.99855614]
[65.81974792 13.65118217]
[54.39274597 2.70886779]
[58.08009720 -11.72209454]
[53.70370102 -26.06946754]
[49.32730103 -40.41684341]
[44.95090103 -54.76421738]
[40.57450104 -69.11158752]
[36.19810486 -83.45896149]
[31.82170296 -97.80633545]
[27.44530487 -112.15370941]
[23.06890488 -126.50108337]
[18.69250679 -140.84846497]
[14.31610680 -155.19583130]
[9.82186317 -169.50672913]
[5.21007967 -183.78018188]
[0.48106703 -198.01522827]
[-4.36485434 -212.21089172]
[-9.21077538 -226.40657043]
[-14.05669689 -240.60223389]
[-18.90261841 -254.79789734]
[-34.73842621 -262.21151733]
[-40.21330261 -278.46173096]
[-32.40556717 -293.34863281]
[-37.48431396 -307.46270752]
[-42.56306076 -321.57675171]
[-58.51866150 -328.72891235]
[-64.26007080 -344.88687134]
[-56.69824219 -359.90017700]
[-62.00844193 -373.92877197]
[-67.31864166 -387.95739746]
[-72.97330475 -401.85073853]
[-78.96899414 -415.60034180]
[-84.96468353 -429.34994507]
[-90.96036530 -443.09954834]
[-96.95605469 -456.84915161]
[-102.95174408 -470.59875488]
[-108.94743347 -484.34838867]
[-129.39970398 -496.61968994]
[-126.33193970 -519.54443359]
[-133.65318298 -532.63641357]
[-140.97442627 -545.72833252]
[-148.29568481 -558.82031250]
[-155.61692810 -571.91229248]
[-171.01109314 -574.66058350]
[-180.99740601 -586.69421387]
[-180.86061096 -602.33117676]
[-170.66529846 -614.18823242]
[-155.22540283 -616.66680908]
[-141.83114624 -608.59661865]
[-136.80690002 -593.78814697]
[-142.52496338 -579.23352051]
[-135.20372009 -566.14154053]
[-127.88247681 -553.04962158]
[-120.56123352 -539.95764160]
[-113.23998260 -526.86566162]
[-106.70405579 -526.90991211]
[-100.42790985 -524.90802002]
[-95.04098511 -521.02709961]
[-91.09388733 -515.62438965]
[-89.00218964 -509.21450806]
[-89.00286865 -502.42031860]
[-91.12786865 -495.91268921]
[-95.19782257 -490.34405518]
[-89.20214081 -476.59445190]
[-83.20645142 -462.84484863]
[-77.21076202 -449.09524536]
[-71.21507263 -435.34564209]
[-65.21938324 -421.59600830]
[-59.22369766 -407.84640503]
[-56.07545090 -406.22332764]
[-53.56298065 -402.98587036]
[-52.44047546 -398.45233154]
[-53.29003525 -393.26757812]
[-47.97983551 -379.23898315]
[-42.66963577 -365.21038818]
[-30.28870010 -361.60525513]
[-22.12712479 -351.37139893]
[-21.34381104 -338.10998535]
[-28.44901276 -326.65548706]
[-23.37026596 -312.54144287]
[-18.29151917 -298.42739868]
[-5.97155428 -294.61914062]
[2.02059770 -284.25241089]
[2.58569074 -270.97991943]
[-4.70694780 -259.64382935]
[0.13897352 -245.44815063]
[4.98489475 -231.25248718]
[9.83081627 -217.05680847]
[14.67673683 -202.86114502]
[19.82177162 -197.53758240]
[19.48353195 -188.39196777]
[24.09531593 -174.11851501]
[29.15209770 -168.71104431]
[28.66348076 -159.57223511]
[33.03987885 -145.22485352]
[37.41627884 -130.87748718]
[41.79267883 -116.53011322]
[46.16907883 -102.18273926]
[50.54547501 -87.83536530]
[54.92187500 -73.48799133]
[59.29827499 -59.14061356]
[63.67467499 -44.79323959]
[68.05107117 -30.44586754]
[72.42747498 -16.09849358]
[83.54144287 -6.18239975]
[80.16712189 9.27478313]
[84.54351807 23.62215614]
[88.91991425 37.96953201]
[93.29631805 52.31690216]
[97.67271423 66.66427612]
[102.04911041 81.01165009]
[114.78858185 87.91471100]
[119.01604462 101.77381897]
[112.29825592 114.61194611]
[116.67465973 128.95932007]
[121.05105591 143.30670166]
[125.42745972 157.65406799]
[130.15646362 171.88911438]
[135.23521423 186.00315857]
[140.31396484 200.11720276]
[152.26678467 210.48257446]
[149.29571533 225.07785034]
[154.37445068 239.19189453]
[159.45320129 253.30593872]
[171.40602112 263.67129517]
[168.43495178 278.26657104]
[173.51370239 292.38061523]
[187.53427124 299.16748047]
[192.48377991 313.55346680]
[185.92715454 326.87811279]
[191.00590515 340.99218750]
[196.08464050 355.10623169]
[201.16339111 369.22027588]
[206.70361328 383.15963745]
[212.69929504 396.90924072]
[218.69499207 410.65884399]
[223.79933167 414.90405273]
[225.69580078 420.28405762]
[224.65347290 424.96069336]
[230.19369507 438.90005493]
[235.73390198 452.83941650]
[241.27412415 466.77880859]
[246.81434631 480.71817017]
[252.35455322 494.65753174]
[265.54837036 504.39688110]
[263.44213867 520.66021729]
[248.20256042 526.71722412]
[235.50680542 516.33691406]
[238.41519165 500.19775391]
[232.87496948 486.25839233]
[227.33476257 472.31900024]
[221.79454041 458.37963867]
[216.25431824 444.44027710]
[210.71411133 430.50091553]
[204.94537354 416.65454102]
[198.94969177 402.90493774]
[192.95399475 389.15533447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 166]
[5 165]
[6 164]
[7 163]
[10 160]
[11 159]
[13 157]
[14 156]
[15 155]
[17 153]
[18 152]
[19 151]
[23 150]
[24 149]
[25 148]
[26 147]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[36 137]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[47 125]
[48 124]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[56 114]
[57 113]
[58 112]
[61 108]
[62 107]
[63 106]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[70 96]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[167 190]
[168 189]
[169 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
