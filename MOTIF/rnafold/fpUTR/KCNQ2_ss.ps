%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCGGCGCGGCCGCGGGCCAGGCGCCGAGGUGCGCGCGGAGCGAGGUGGCCGCAGCGUCUCCGCGCGCGGCCCAAGCCCGGCAGGAGUGCGGAACCGCCGCCUCGGCCAUGCGGCUCCCGGCCGGGGGGCCUGGGCUGGGGCCCGCGCCGCCCCCCGCGCUCCGCCCCCGCUGAGCCUGAGCCCGACCCGGGGCGCCUCCCGCCAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[373.14700317 413.13491821]
[363.46792603 401.67562866]
[353.78884888 390.21630859]
[344.10977173 378.75701904]
[334.43069458 367.29772949]
[324.66815186 355.90945435]
[314.82269287 344.59280396]
[304.97720337 333.27615356]
[286.28012085 328.33914185]
[282.73791504 308.49237061]
[272.56597900 297.46823120]
[262.39404297 286.44412231]
[252.22209167 275.41998291]
[242.05014038 264.39584351]
[235.20610046 261.61245728]
[231.81155396 253.13552856]
[221.80177307 241.96394348]
[211.79199219 230.79235840]
[201.78221130 219.62077332]
[191.77243042 208.44918823]
[181.76263428 197.27761841]
[171.75285339 186.10603333]
[154.80499268 181.54733276]
[151.17385864 163.49330139]
[141.00190735 152.46917725]
[130.82997131 141.44503784]
[123.98593140 138.66165161]
[120.59137726 130.18472290]
[110.58159637 119.01314545]
[100.57181549 107.84156036]
[98.50889587 110.71276093]
[95.28624725 112.93773651]
[91.10989380 114.16461945]
[86.27984619 114.10468292]
[81.17167664 112.55551910]
[66.17527771 112.88426971]
[51.17887878 113.21301270]
[36.18248367 113.54175568]
[21.18608475 113.87050629]
[6.18968773 114.19924927]
[-8.80670929 114.52799225]
[-23.80310631 114.85673523]
[-38.79950333 115.18548584]
[-53.79590225 115.51422882]
[-68.78949738 115.95252991]
[-83.77948761 116.50035858]
[-94.50729370 127.79424286]
[-109.71707916 128.13629150]
[-120.41796875 117.83936310]
[-135.40795898 118.38719177]
[-149.00605774 127.55364227]
[-163.62280273 120.11838531]
[-164.22172546 103.73017883]
[-150.18672180 95.24780273]
[-135.95579529 103.39720154]
[-120.96579742 102.84937286]
[-111.04508972 91.79879761]
[-95.85090637 91.02968597]
[-84.32731628 101.51036835]
[-69.33732605 100.96253204]
[-62.76977921 97.57794952]
[-54.12464523 100.51782990]
[-39.12825012 100.18908691]
[-24.13185120 99.86034393]
[-9.13545418 99.53159332]
[5.86094284 99.20285034]
[20.85733986 98.87410736]
[35.85373688 98.54535675]
[50.85013580 98.21661377]
[65.84653473 97.88787079]
[80.84292603 97.55912781]
[90.60546875 86.17084503]
[88.63851929 71.30036926]
[86.67156982 56.42989349]
[84.70462799 41.55941391]
[82.73767853 26.68893623]
[79.56002045 22.55533028]
[78.39964294 18.06523323]
[79.05489349 14.04601479]
[81.02519989 11.12537575]
[79.71179962 -3.81701326]
[78.39839935 -18.75940132]
[77.08499908 -33.70178986]
[75.77159882 -48.64418030]
[74.45819092 -63.58656693]
[63.54325104 -78.41886139]
[71.57192993 -94.02503204]
[70.04033661 -108.94663239]
[68.50874329 -123.86823273]
[66.97714996 -138.78984070]
[65.44555664 -153.71144104]
[63.80498886 -168.62145996]
[62.05553436 -183.51908875]
[60.30607605 -198.41671753]
[50.55401230 -202.73045349]
[43.52474594 -210.64154053]
[40.43564987 -220.67901611]
[41.77970505 -231.01330566]
[47.24812698 -239.78962708]
[55.79802704 -245.46092224]
[54.70309830 -260.42089844]
[53.60816956 -275.38088989]
[52.51324081 -290.34088135]
[45.32684708 -305.69641113]
[58.09288025 -316.85278320]
[72.34725189 -307.67404175]
[67.47322083 -291.43582153]
[68.56815338 -276.47583008]
[69.66308594 -261.51583862]
[70.75801086 -246.55584717]
[86.39672852 -234.93502808]
[88.47436523 -215.25527954]
[75.20370483 -200.16616821]
[76.95316315 -185.26853943]
[78.70262146 -170.37091064]
[82.60352325 -164.09626770]
[80.36715698 -155.24302673]
[81.89875031 -140.32142639]
[83.43034363 -125.39982605]
[84.96193695 -110.47822571]
[86.49353027 -95.55661774]
[95.67357635 -87.68214417]
[97.07327271 -75.26537323]
[89.40058136 -64.89997101]
[90.71398163 -49.95758057]
[92.02738190 -35.01519012]
[93.34078979 -20.07280350]
[94.65419006 -5.13041449]
[95.96759033 9.81197453]
[97.60815430 24.72198868]
[99.57510376 39.59246826]
[101.54205322 54.46294403]
[103.50899506 69.33341980]
[105.47594452 84.20390320]
[111.74340057 97.83177948]
[121.75318146 109.00336456]
[131.76295471 120.17494202]
[141.85409546 131.27310181]
[152.02604675 142.29722595]
[162.19799805 153.32136536]
[175.02885437 154.61776733]
[183.27410889 164.00665283]
[182.92443848 176.09625244]
[192.93421936 187.26783752]
[202.94400024 198.43940735]
[212.95378113 209.61099243]
[222.96357727 220.78257751]
[232.97335815 231.95416260]
[242.98313904 243.12574768]
[253.07426453 254.22389221]
[263.24621582 265.24801636]
[273.41815186 276.27215576]
[283.59011841 287.29629517]
[293.76205444 298.32043457]
[304.63351440 298.12826538]
[313.63168335 303.83206177]
[317.91644287 313.34579468]
[316.29385376 323.43066406]
[326.13934326 334.74731445]
[335.98480225 346.06396484]
[343.97592163 350.48251343]
[345.89001465 357.61865234]
[355.56909180 369.07794189]
[365.24813843 380.53723145]
[374.92721558 391.99655151]
[384.60629272 403.45584106]
[395.70446777 413.54696655]
[408.03002930 422.09567261]
[420.35559082 430.64437866]
[432.68118286 439.19308472]
[445.00674438 447.74176025]
[460.89904785 441.94702148]
[476.95410156 446.72033691]
[486.89978027 459.99029541]
[486.97421265 476.40728760]
[499.42337036 484.77496338]
[515.19299316 486.05181885]
[521.43969727 499.57321167]
[533.88885498 507.94088745]
[550.27783203 508.51785278]
[557.73266602 523.12457275]
[548.58447266 536.73498535]
[532.24414062 535.34777832]
[525.52117920 520.39007568]
[513.07196045 512.02233887]
[498.19284058 511.34402466]
[491.05569458 497.22412109]
[478.60650635 488.85644531]
[466.54971313 494.58624268]
[453.12835693 493.60317993]
[441.85525513 486.05728149]
[435.73373413 473.83029175]
[436.45803833 460.06735229]
[424.13247681 451.51864624]
[411.80688477 442.96994019]
[399.48132324 434.42123413]
[387.15576172 425.87255859]
[375.08523560 434.77774048]
[379.61614990 449.07708740]
[384.14706421 463.37640381]
[388.67794800 477.67575073]
[402.82052612 484.73004150]
[407.75338745 499.74478149]
[400.54998779 513.81195068]
[385.48391724 518.58581543]
[371.49368286 511.23406982]
[366.87936401 496.11840820]
[374.37863159 482.20663452]
[369.84771729 467.90731812]
[365.31680298 453.60797119]
[360.78591919 439.30865479]
[360.57022095 431.92422485]
[362.05895996 425.31015015]
[364.92297363 419.82330322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[6 160]
[7 159]
[8 158]
[10 154]
[11 153]
[12 152]
[13 151]
[14 150]
[16 149]
[17 148]
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[24 140]
[25 139]
[26 138]
[28 137]
[29 136]
[30 135]
[35 71]
[36 70]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 60]
[46 59]
[49 56]
[50 55]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 115]
[93 114]
[94 113]
[100 110]
[101 109]
[102 108]
[103 107]
[167 197]
[168 196]
[169 195]
[170 194]
[171 193]
[175 188]
[176 187]
[178 185]
[179 184]
[198 211]
[199 210]
[200 209]
[201 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
