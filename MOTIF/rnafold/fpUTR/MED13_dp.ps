%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED13)
} def

/sequence { (\
GUUUCUCUCUCUGGUCGGAGGCGGCGGUAAUGGCGGAUGGUGGGUUGUGGCGCCGGCGGCGGCUGCUGUGAGGGACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 76 0.992030725 ubox
2 75 0.992590154 ubox
3 72 0.003248412 ubox
3 74 0.991466621 ubox
3 75 0.008973515 ubox
4 71 0.004220822 ubox
4 73 0.990020368 ubox
4 74 0.009171412 ubox
4 75 0.077787714 ubox
5 13 0.003907509 ubox
5 20 0.006267683 ubox
5 70 0.004338180 ubox
5 72 0.992965994 ubox
5 73 0.010136596 ubox
5 74 0.085394032 ubox
6 19 0.006475954 ubox
6 21 0.006990195 ubox
6 71 0.992415364 ubox
6 72 0.005891061 ubox
6 73 0.085531391 ubox
6 75 0.053094105 ubox
7 13 0.005292582 ubox
7 18 0.006647969 ubox
7 20 0.063945549 ubox
7 21 0.005027337 ubox
7 70 0.988815857 ubox
7 72 0.085998890 ubox
7 74 0.057580777 ubox
8 14 0.005398180 ubox
8 17 0.006616358 ubox
8 18 0.011254304 ubox
8 19 0.101765645 ubox
8 20 0.006710442 ubox
8 21 0.291614582 ubox
8 71 0.085322215 ubox
8 73 0.057587359 ubox
8 75 0.042362353 ubox
9 13 0.006861840 ubox
9 17 0.013627191 ubox
9 18 0.104868128 ubox
9 20 0.964442706 ubox
9 21 0.008085206 ubox
9 70 0.080070975 ubox
9 72 0.057680170 ubox
9 74 0.045825670 ubox
10 17 0.095914219 ubox
10 18 0.018428263 ubox
10 19 0.968171655 ubox
10 20 0.003577537 ubox
10 21 0.024896056 ubox
10 37 0.006452796 ubox
10 71 0.057600421 ubox
10 73 0.045804763 ubox
10 75 0.003533298 ubox
11 17 0.037802771 ubox
11 18 0.968273538 ubox
11 20 0.082307348 ubox
11 21 0.003668555 ubox
11 27 0.006461791 ubox
11 36 0.008274723 ubox
11 62 0.005684674 ubox
11 70 0.057406959 ubox
11 72 0.045884277 ubox
11 74 0.003818788 ubox
12 17 0.905818870 ubox
12 19 0.082117864 ubox
12 20 0.004438385 ubox
12 26 0.006201557 ubox
12 35 0.007908661 ubox
12 61 0.005397319 ubox
12 65 0.116546259 ubox
12 68 0.019057710 ubox
12 71 0.045464360 ubox
12 73 0.003758087 ubox
13 25 0.004575963 ubox
13 34 0.006339450 ubox
13 60 0.003967859 ubox
13 64 0.170496938 ubox
13 67 0.023584227 ubox
13 69 0.005969612 ubox
14 22 0.006970457 ubox
14 25 0.016651414 ubox
14 34 0.007106324 ubox
14 57 0.003642129 ubox
14 60 0.014172534 ubox
14 63 0.174181814 ubox
14 66 0.023837556 ubox
14 69 0.046335021 ubox
14 76 0.027970244 ubox
15 21 0.007121310 ubox
15 24 0.017247803 ubox
15 33 0.008515188 ubox
15 56 0.003769614 ubox
15 59 0.014678397 ubox
15 62 0.174138932 ubox
15 65 0.019926941 ubox
15 68 0.003400886 ubox
15 71 0.007739185 ubox
15 75 0.028031861 ubox
16 20 0.008275507 ubox
16 23 0.017927574 ubox
16 32 0.008667263 ubox
16 55 0.004549581 ubox
16 58 0.014922584 ubox
16 61 0.174175259 ubox
16 65 0.013179555 ubox
16 68 0.055338659 ubox
16 70 0.009338380 ubox
16 74 0.028015128 ubox
17 22 0.017892674 ubox
17 31 0.008360562 ubox
17 54 0.004544788 ubox
17 57 0.014980131 ubox
17 60 0.173830268 ubox
17 64 0.012646987 ubox
17 67 0.055584374 ubox
17 69 0.011151352 ubox
18 53 0.004538294 ubox
18 63 0.012462410 ubox
18 66 0.055334976 ubox
19 64 0.006138689 ubox
19 67 0.008462031 ubox
20 54 0.029004012 ubox
20 63 0.005818869 ubox
20 64 0.054505638 ubox
20 66 0.006073087 ubox
20 67 0.059427593 ubox
21 28 0.009780627 ubox
21 34 0.006826110 ubox
21 51 0.005723173 ubox
21 53 0.029384705 ubox
21 57 0.076730101 ubox
21 60 0.011943159 ubox
21 63 0.059424780 ubox
21 66 0.124483232 ubox
21 69 0.894555071 ubox
22 27 0.009940558 ubox
22 33 0.006820627 ubox
22 35 0.059085377 ubox
22 50 0.005728395 ubox
22 52 0.029378770 ubox
22 55 0.219403228 ubox
22 56 0.054422618 ubox
22 58 0.006574884 ubox
22 59 0.010991392 ubox
22 61 0.005517050 ubox
22 62 0.059452728 ubox
22 65 0.125165085 ubox
22 68 0.958564340 ubox
23 34 0.059638580 ubox
23 51 0.027743298 ubox
23 54 0.227380280 ubox
23 57 0.008108989 ubox
23 60 0.005190048 ubox
23 64 0.125090447 ubox
23 67 0.959629285 ubox
24 34 0.015995830 ubox
24 48 0.005813682 ubox
24 51 0.009848826 ubox
24 53 0.227441210 ubox
24 57 0.009740184 ubox
24 60 0.059492324 ubox
24 63 0.125184765 ubox
24 66 0.960531040 ubox
24 69 0.030555122 ubox
25 32 0.059439615 ubox
25 33 0.016506052 ubox
25 35 0.005177666 ubox
25 47 0.005829040 ubox
25 49 0.025876429 ubox
25 50 0.013791762 ubox
25 52 0.227425207 ubox
25 55 0.009712042 ubox
25 56 0.008358269 ubox
25 58 0.004818318 ubox
25 59 0.059522883 ubox
25 61 0.004779518 ubox
25 62 0.125045746 ubox
25 65 0.960511648 ubox
25 68 0.031580950 ubox
26 31 0.051760507 ubox
26 34 0.005839824 ubox
26 46 0.005654841 ubox
26 48 0.024242657 ubox
26 51 0.225388056 ubox
26 54 0.010951465 ubox
26 57 0.004414647 ubox
26 60 0.006676973 ubox
26 64 0.959731143 ubox
26 67 0.031846551 ubox
27 34 0.009202236 ubox
27 45 0.005004043 ubox
27 48 0.015323062 ubox
27 51 0.029486779 ubox
27 53 0.010956765 ubox
27 57 0.059034565 ubox
27 60 0.123883379 ubox
27 63 0.960176306 ubox
27 66 0.031900091 ubox
28 33 0.009008678 ubox
28 44 0.003422751 ubox
28 47 0.033220804 ubox
28 49 0.191066996 ubox
28 50 0.039604229 ubox
28 52 0.010639163 ubox
28 56 0.057682580 ubox
28 59 0.122525306 ubox
28 62 0.937309214 ubox
28 65 0.031820197 ubox
29 46 0.043301849 ubox
29 48 0.147455815 ubox
29 64 0.029854943 ubox
30 38 0.003381768 ubox
30 41 0.003942168 ubox
30 45 0.050002507 ubox
30 48 0.161801580 ubox
30 69 0.008796363 ubox
31 37 0.003479625 ubox
31 40 0.003977553 ubox
31 44 0.049868573 ubox
31 47 0.199509185 ubox
31 55 0.123695575 ubox
31 58 0.192899765 ubox
31 61 0.778951353 ubox
31 68 0.008966005 ubox
32 46 0.204557685 ubox
32 51 0.003957841 ubox
32 54 0.130990468 ubox
32 57 0.200918705 ubox
32 60 0.906767862 ubox
32 64 0.004160390 ubox
32 67 0.009396083 ubox
33 41 0.078003276 ubox
33 45 0.209692344 ubox
33 48 0.022174043 ubox
33 51 0.003599949 ubox
33 53 0.131022800 ubox
33 57 0.162732003 ubox
33 60 0.142220971 ubox
33 63 0.004857731 ubox
33 66 0.009475789 ubox
34 40 0.078494492 ubox
34 42 0.042563787 ubox
34 44 0.210075596 ubox
34 47 0.023404241 ubox
34 49 0.004087207 ubox
34 50 0.003615827 ubox
34 52 0.131018783 ubox
34 55 0.201934886 ubox
34 56 0.161970360 ubox
34 58 0.913688779 ubox
34 59 0.146583053 ubox
34 61 0.029157356 ubox
34 62 0.004750833 ubox
34 65 0.009475006 ubox
35 41 0.041277234 ubox
35 46 0.021401226 ubox
35 48 0.003345528 ubox
35 51 0.130526932 ubox
35 54 0.200820097 ubox
35 57 0.908626040 ubox
35 60 0.029171325 ubox
35 64 0.008729895 ubox
36 45 0.018743789 ubox
36 46 0.035536576 ubox
36 53 0.200262728 ubox
36 63 0.008474561 ubox
37 45 0.037069633 ubox
37 48 0.073471898 ubox
37 69 0.057063561 ubox
38 44 0.037003551 ubox
38 47 0.074284985 ubox
38 49 0.022170334 ubox
38 52 0.181136498 ubox
38 55 0.895931830 ubox
38 58 0.012083190 ubox
38 61 0.003241597 ubox
38 68 0.057986175 ubox
39 46 0.061884304 ubox
39 48 0.026445679 ubox
39 51 0.181282932 ubox
39 54 0.940278006 ubox
39 57 0.013285089 ubox
39 60 0.004058603 ubox
39 67 0.060444081 ubox
40 45 0.043001435 ubox
40 48 0.011119375 ubox
40 51 0.078501477 ubox
40 53 0.940691665 ubox
40 57 0.024354361 ubox
40 66 0.060907539 ubox
41 47 0.008430648 ubox
41 49 0.161858255 ubox
41 50 0.082146062 ubox
41 52 0.940419325 ubox
41 55 0.013798247 ubox
41 56 0.025398460 ubox
41 65 0.055934804 ubox
42 46 0.006481332 ubox
42 48 0.148830602 ubox
42 51 0.939873805 ubox
42 54 0.014226359 ubox
42 64 0.044980876 ubox
43 53 0.014189732 ubox
43 54 0.026159197 ubox
43 63 0.033235942 ubox
43 64 0.039871138 ubox
44 51 0.034134332 ubox
44 53 0.026181065 ubox
44 63 0.052215465 ubox
45 50 0.034694811 ubox
45 52 0.025070372 ubox
45 62 0.060512065 ubox
46 52 0.003742681 ubox
46 61 0.062026730 ubox
47 51 0.005095862 ubox
47 60 0.062674751 ubox
48 59 0.062572043 ubox
49 67 0.006001410 ubox
50 57 0.062679138 ubox
50 66 0.006234710 ubox
51 56 0.062663286 ubox
51 61 0.008541205 ubox
51 65 0.006233287 ubox
52 60 0.008917737 ubox
52 63 0.008132314 ubox
53 59 0.008919252 ubox
53 62 0.008280871 ubox
54 58 0.008854441 ubox
54 61 0.008318814 ubox
54 68 0.004296641 ubox
55 60 0.008564612 ubox
55 64 0.003261213 ubox
55 67 0.008192085 ubox
56 63 0.005378037 ubox
56 66 0.014526257 ubox
56 69 0.144230013 ubox
57 62 0.005413851 ubox
57 65 0.014549248 ubox
57 68 0.148738487 ubox
58 64 0.014439419 ubox
58 67 0.148861624 ubox
59 63 0.014130440 ubox
59 66 0.148996968 ubox
59 69 0.004683013 ubox
60 65 0.148782611 ubox
60 68 0.004841069 ubox
61 67 0.004867885 ubox
62 66 0.004770259 ubox
62 69 0.005025415 ubox
63 68 0.005223588 ubox
1 76 0.9500000 lbox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
21 69 0.9500000 lbox
22 68 0.9500000 lbox
23 67 0.9500000 lbox
24 66 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 61 0.9500000 lbox
32 60 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
showpage
end
%%EOF
