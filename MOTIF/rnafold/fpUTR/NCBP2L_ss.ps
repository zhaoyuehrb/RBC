%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCUGUGGGUCCUAUAUGUGCCCUGCAACUUGGGGAAAAUGGAGGUGGGGUUGUGGUCUCUAUGCUGUAGCAGCCGGAAAGCCAAAAACAAGCCGUACUUCUCGCUCUUGACAGGAUCCCAAGGUUUUCAGUGGUGGUGUCACUGCUGCCAAGCUGGACCGAAAACGGCCAUCGGCAUGCUGCCCAACCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[325.22470093 249.47302246]
[323.24563599 232.67953491]
[310.06243896 225.52388000]
[296.87924194 218.36824036]
[283.69604492 211.21258545]
[268.81927490 211.94128418]
[260.38159180 198.55786133]
[247.19839478 191.40220642]
[239.81275940 190.97390747]
[233.86486816 184.02812195]
[220.79627991 176.66525269]
[207.72767639 169.30238342]
[194.65908813 161.93951416]
[181.59049988 154.57664490]
[168.52189636 147.21377563]
[155.45330811 139.85090637]
[145.16059875 151.22190857]
[132.58970642 160.00895691]
[118.37478638 165.76876831]
[103.23292542 168.21078491]
[87.92797852 167.21183777]
[73.23201752 162.82228088]
[59.88640213 155.26358032]
[48.56436920 144.91703796]
[36.25073624 153.48292542]
[23.93710327 162.04881287]
[23.75331879 177.56478882]
[14.45758533 189.98933411]
[-0.37569535 194.54492188]
[-15.04282570 189.47984314]
[-23.90399361 176.74174500]
[-23.55190086 161.22866821]
[-14.12193394 148.90570068]
[0.75989389 144.51129150]
[15.37121487 149.73516846]
[27.68484879 141.16928101]
[39.99848175 132.60339355]
[35.41328049 122.17475128]
[32.62559891 111.12896729]
[31.71301270 99.77344513]
[32.70092773 88.42422485]
[35.56184006 77.39717865]
[40.21613693 66.99918365]
[46.53428268 57.51964188]
[35.88590240 46.95498276]
[25.23752213 36.39032364]
[14.58914089 25.82566643]
[3.94076061 15.26100922]
[-6.70761967 4.69635153]
[-17.35600090 -5.86830664]
[-32.60209274 -10.09526539]
[-36.18762207 -24.55186462]
[-46.83600235 -35.11652374]
[-57.48438263 -45.68117905]
[-68.13275909 -56.24583817]
[-78.86420441 -66.72611237]
[-89.67803192 -77.12136078]
[-100.81463623 -87.17004395]
[-112.26290894 -96.86215210]
[-123.71118164 -106.55426788]
[-141.89874268 -109.40509033]
[-147.18894958 -126.13333893]
[-158.78880310 -135.64352417]
[-170.38865662 -145.15370178]
[-183.28392029 -144.66316223]
[-192.75093079 -152.83117676]
[-194.06687927 -164.86212158]
[-205.51515198 -174.55422974]
[-216.96343994 -184.24633789]
[-228.41171265 -193.93844604]
[-244.40721130 -199.55807495]
[-243.43519592 -216.48414612]
[-226.90151978 -220.23571777]
[-218.71958923 -205.38671875]
[-207.27131653 -195.69461060]
[-195.82304382 -186.00250244]
[-184.37477112 -176.31039429]
[-166.96627808 -174.12747192]
[-160.87847900 -156.75354004]
[-149.27862549 -147.24336243]
[-137.67877197 -137.73318481]
[-125.60796356 -138.61108398]
[-115.86488342 -130.77442932]
[-114.01907349 -118.00254059]
[-102.57080078 -108.31043243]
[-91.12252045 -98.61831665]
[-88.31187439 -98.72157288]
[-85.29089355 -97.71218109]
[-82.48519897 -95.50437927]
[-80.34355927 -92.16864777]
[-79.28279114 -87.93518829]
[-68.46895599 -77.53994751]
[-61.46127701 -75.16854858]
[-57.56810379 -66.89421844]
[-46.91972351 -56.32955933]
[-36.27134323 -45.76490402]
[-25.62296295 -35.20024490]
[-11.13851261 -31.72894096]
[-6.79134226 -16.51668739]
[3.85703802 -5.95202875]
[14.50541878 4.61262894]
[25.15379906 15.17728710]
[35.80217743 25.74194527]
[46.45055771 36.30660248]
[57.09893799 46.87126160]
[71.03109741 38.16176987]
[86.64032745 33.03222275]
[103.02297974 31.77958107]
[119.23062134 34.47636032]
[134.32496643 40.96644211]
[147.43215942 50.87409973]
[157.79341125 63.62575531]
[164.80888367 78.48319244]
[168.07243347 94.58628845]
[167.39512634 111.00278473]
[162.81617737 126.78231812]
[175.88476562 134.14518738]
[188.95336914 141.50805664]
[202.02195740 148.87092590]
[215.09054565 156.23379517]
[228.15914917 163.59666443]
[241.22773743 170.95953369]
[254.35404968 178.21900940]
[267.53723145 185.37466431]
[283.35696411 185.15777588]
[290.85168457 198.02938843]
[304.03488159 205.18504333]
[317.21807861 212.34068298]
[330.40127563 219.49633789]
[342.37063599 212.64958191]
[356.05157471 212.61399841]
[367.86785889 219.29188538]
[374.78350830 230.84457397]
[375.08273315 244.19738770]
[388.15130615 251.56025696]
[401.21990967 258.92312622]
[417.04107666 258.95599365]
[424.33166504 271.94433594]
[437.40026855 279.30718994]
[450.46887207 286.67007446]
[463.53744507 294.03292847]
[475.51922607 284.72094727]
[490.11398315 280.71649170]
[505.08953857 282.59979248]
[518.16766357 290.05294800]
[527.37097168 301.91314697]
[531.32153320 316.35400391]
[529.44744873 331.16674805]
[542.51605225 338.52960205]
[555.64233398 345.78909302]
[568.82556152 352.94473267]
[582.00872803 360.10037231]
[595.19195557 367.25604248]
[605.72583008 361.71957397]
[617.50366211 361.95767212]
[627.59753418 367.79528809]
[633.55389404 377.67974854]
[633.98999023 389.09191895]
[646.94073486 396.66015625]
[659.89147949 404.22842407]
[668.88934326 405.85922241]
[672.98559570 412.01974487]
[685.81518555 419.79150391]
[698.64483643 427.56326294]
[715.04284668 427.36727905]
[723.17773438 441.60650635]
[714.68103027 455.63284302]
[698.29345703 455.01721191]
[690.87310791 440.39291382]
[678.04345703 432.62115479]
[665.21380615 424.84939575]
[652.32324219 417.17916870]
[639.37249756 409.61090088]
[626.42175293 402.04263306]
[609.03515625 407.74905396]
[592.71429443 398.78973389]
[588.03631592 380.43923950]
[574.85308838 373.28356934]
[561.66992188 366.12792969]
[548.48669434 358.97229004]
[541.10107422 358.54397583]
[535.15319824 351.59820557]
[522.08459473 344.23532104]
[510.38610840 353.51300049]
[495.98785400 357.61608887]
[481.07531738 355.88940430]
[467.92456055 348.56512451]
[458.55465698 336.73217773]
[454.41790771 322.17434692]
[456.17459106 307.10153198]
[443.10598755 299.73864746]
[430.03738403 292.37579346]
[416.96881104 285.01290894]
[402.08239746 285.50668335]
[393.85705566 271.99169922]
[380.78845215 264.62884521]
[367.71984863 257.26599121]
[353.02590942 264.57476807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[5 126]
[7 124]
[8 123]
[10 122]
[11 121]
[12 120]
[13 119]
[14 118]
[15 117]
[16 116]
[24 37]
[25 36]
[26 35]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[52 97]
[53 96]
[54 95]
[55 94]
[56 92]
[57 91]
[58 86]
[59 85]
[60 84]
[62 81]
[63 80]
[64 79]
[67 77]
[68 76]
[69 75]
[70 74]
[134 197]
[135 196]
[136 195]
[138 193]
[139 192]
[140 191]
[141 190]
[148 183]
[149 182]
[150 180]
[151 179]
[152 178]
[153 177]
[158 174]
[159 173]
[160 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
