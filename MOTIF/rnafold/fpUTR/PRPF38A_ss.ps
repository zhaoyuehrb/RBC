%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUGCAGCCGCCAUCAUUGAUUCGAUAGGCGACGCGGGGAGCGGAAGCCCUUUACACUACGGUGUUUCCGGCUUCAAGAUGGUCGCCUAAGCUGUUUAGUGAAACUUCUUCCACCUUUCUCCAUUCCUCUAGGUGCUUUUUCUGAACCUGGAUGUGAGGCAUUAAAGGAUCCGACGGAAAUAGAAUUGAAGGCAUUCUAAA\
) } def
/len { sequence length } bind def

/coor [
[192.24539185 149.76957703]
[178.33361816 155.37873840]
[164.03137207 150.85705566]
[155.87229919 138.27017212]
[157.58370972 123.36812592]
[168.38479614 112.95813751]
[153.38658142 112.72714233]
[138.38835144 112.49615479]
[123.39013672 112.26516724]
[108.39191437 112.03417206]
[94.81361389 118.40831757]
[85.40975189 130.09452820]
[76.00589752 141.78073120]
[66.60204315 153.46694946]
[57.28844452 165.22521973]
[48.06566238 177.05485535]
[38.84288025 188.88449097]
[43.26452637 203.75825500]
[38.06740189 218.37910461]
[25.24991035 227.12504578]
[9.74063683 226.63308716]
[-2.49678731 217.09237671]
[-6.75682116 202.17152405]
[-1.40139544 187.60791016]
[11.51021957 179.00152588]
[27.01324463 179.66171265]
[36.23602676 167.83207703]
[45.45880890 156.00244141]
[47.09314728 148.79043579]
[54.91583252 144.06309509]
[64.31968689 132.37687683]
[73.72354889 120.69067383]
[83.12740326 109.00446320]
[81.24209595 101.74528503]
[66.72368622 105.51565552]
[62.95355988 90.99717712]
[77.47148895 87.22693634]
[75.58618927 79.96775818]
[61.68420792 74.33438873]
[45.98841476 76.32254028]
[37.09860229 64.37178802]
[23.19662285 58.73841095]
[7.50083208 60.72656250]
[-1.38898063 48.77581024]
[-15.29096222 43.14243317]
[-29.35983086 37.93984222]
[-43.58224106 33.17297363]
[-57.80464935 28.40610123]
[-72.02706146 23.63922882]
[-86.24946594 18.87235832]
[-100.47187805 14.10548687]
[-112.00035095 24.15743637]
[-126.91387177 27.07007599]
[-141.18806458 22.15946579]
[-151.02194214 10.83910370]
[-153.85011292 -3.78509164]
[-168.07250977 -8.55196285]
[-182.29492188 -13.31883430]
[-196.51733398 -18.08570480]
[-212.47259521 -14.29598904]
[-223.53395081 -26.40294075]
[-218.32244873 -41.95196533]
[-202.19921875 -44.94756317]
[-191.75045776 -32.30811691]
[-177.52806091 -27.54124451]
[-163.30564880 -22.77437210]
[-149.08323669 -18.00750160]
[-138.01327515 -27.97351456]
[-123.34361267 -31.08111572]
[-108.99326324 -26.39775085]
[-98.84727478 -15.08600521]
[-95.70500946 -0.11692265]
[-81.48259735 4.64994860]
[-67.26018524 9.41681957]
[-53.03777695 14.18369102]
[-38.81536865 18.95056343]
[-24.59295845 23.71743393]
[-22.02281380 22.58509254]
[-18.84806824 22.40549469]
[-15.43041611 23.41448593]
[-12.21032047 25.71236420]
[-9.65758801 29.24045181]
[4.24439383 34.87382507]
[18.94582176 32.48273849]
[28.82999611 44.83642960]
[42.73197937 50.46980286]
[57.43340683 48.07871628]
[67.31758118 60.43240356]
[81.21955872 66.06578064]
[97.83165741 68.70714569]
[108.59670258 77.64465332]
[111.90050507 88.52069092]
[108.62290192 97.03595734]
[123.62112427 97.26694489]
[138.61933899 97.49793243]
[153.61756897 97.72892761]
[168.61578369 97.95991516]
[183.60467529 97.38256073]
[198.54067993 95.99853516]
[213.47669983 94.61450958]
[228.41270447 93.23048401]
[233.80067444 78.99211121]
[244.79153442 68.54759216]
[259.16842651 63.92972183]
[274.06341553 66.00342560]
[286.52954102 74.30433655]
[294.12390137 87.14144135]
[309.05990601 85.75741577]
[323.99594116 84.37339020]
[338.93194580 82.98936462]
[353.84487915 81.37550354]
[368.73117065 79.53217316]
[383.61749268 77.68885040]
[389.37341309 65.16099548]
[400.48065186 57.17767715]
[413.97442627 55.73810196]
[426.31738281 61.11205292]
[434.32690430 71.79718781]
[449.23983765 70.18331909]
[464.15277100 68.56945038]
[479.06567383 66.95558929]
[493.96575928 65.22693634]
[508.85205078 63.38361359]
[516.42138672 49.96676636]
[530.27758789 43.65339661]
[545.02001953 46.67392349]
[555.03710938 57.66466522]
[569.92340088 55.82134247]
[584.80975342 53.97801590]
[599.69604492 52.13469315]
[606.70196533 40.62723160]
[618.87933350 35.33477783]
[631.69122314 37.98472214]
[640.50372314 47.38970566]
[655.41662598 45.77583694]
[670.32958984 44.16197205]
[685.24249268 42.54810715]
[700.15539551 40.93423843]
[715.06835938 39.32037354]
[729.98126221 37.70650482]
[744.89422607 36.09263992]
[760.60614014 23.46924973]
[777.94213867 32.02644730]
[792.79833984 29.95409966]
[807.65447998 27.88175392]
[816.97747803 15.12020588]
[832.60626221 12.77137470]
[845.26849365 22.22878075]
[847.45196533 37.88151550]
[837.86120605 50.44308472]
[822.18627930 52.46093369]
[809.72680664 42.73791122]
[794.87066650 44.81025696]
[780.01452637 46.88260269]
[774.61065674 55.56307983]
[765.12036133 59.92504120]
[754.57940674 58.30726242]
[746.50805664 51.00556946]
[731.59515381 52.61943436]
[716.68218994 54.23330307]
[701.76928711 55.84716797]
[686.85638428 57.46103287]
[671.94342041 59.07490158]
[657.03051758 60.68876648]
[642.11755371 62.30263138]
[632.14642334 75.84256744]
[615.13305664 78.02722931]
[601.53936768 67.02100372]
[586.65307617 68.86432648]
[571.76672363 70.70764923]
[556.88043213 72.55097198]
[549.84667969 85.65306091]
[536.28625488 92.17825317]
[521.30859375 89.43528748]
[510.69537354 78.26992035]
[495.80908203 80.11325073]
[489.55377197 84.05725098]
[480.67956543 81.86851501]
[465.76663208 83.48238373]
[450.85369873 85.09624481]
[435.94076538 86.71011353]
[428.23931885 101.20429993]
[413.26702881 108.32511902]
[396.83724976 105.08847046]
[385.46081543 92.57515717]
[370.57449341 94.41848755]
[355.68820190 96.26181030]
[352.09448242 99.41502380]
[346.48019409 100.34055328]
[340.31597900 97.92537689]
[325.37994385 99.30940247]
[310.44393921 100.69342804]
[295.50793457 102.07745361]
[290.40170288 116.09144592]
[279.67312622 126.54166412]
[265.41278076 131.31700134]
[250.43214417 129.41950989]
[237.70924377 121.17240143]
[229.79673767 108.16649628]
[214.86071777 109.55052185]
[199.92471313 110.93454742]
[184.98869324 112.31857300]
[196.55798340 121.86590576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 97]
[7 96]
[8 95]
[9 94]
[10 93]
[11 33]
[12 32]
[13 31]
[14 30]
[15 28]
[16 27]
[17 26]
[38 89]
[39 88]
[41 86]
[42 85]
[44 83]
[45 82]
[46 77]
[47 76]
[48 75]
[49 74]
[50 73]
[51 72]
[56 67]
[57 66]
[58 65]
[59 64]
[98 202]
[99 201]
[100 200]
[101 199]
[107 193]
[108 192]
[109 191]
[110 190]
[111 187]
[112 186]
[113 185]
[118 181]
[119 180]
[120 179]
[121 178]
[122 176]
[123 175]
[127 171]
[128 170]
[129 169]
[130 168]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[139 160]
[140 159]
[141 158]
[143 154]
[144 153]
[145 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
