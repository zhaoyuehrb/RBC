%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATG2A)
} def

/sequence { (\
GCCUGGCGCCUAGAGAAGCGGCGGGGCGAGCCGGGGGCUCUAGUGAACAGCGGAGCCGGACGGGGAUCGCCGGCGGGCGGCAAGCGGAGGCGGCCCAGGCCCGGCGGUCUCCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.432850105 ubox
1 31 0.004319921 ubox
1 51 0.012524981 ubox
1 56 0.007101273 ubox
2 25 0.139973422 ubox
2 26 0.422897671 ubox
2 30 0.003240626 ubox
2 34 0.017226495 ubox
2 35 0.883244603 ubox
2 50 0.009299312 ubox
2 55 0.007082112 ubox
2 59 0.029736291 ubox
3 13 0.003643285 ubox
3 24 0.168904873 ubox
3 25 0.412338266 ubox
3 30 0.004812482 ubox
3 33 0.017047746 ubox
3 34 0.885700061 ubox
3 35 0.005025384 ubox
3 50 0.011698581 ubox
3 53 0.004614401 ubox
3 58 0.029348333 ubox
3 59 0.123329867 ubox
4 12 0.003674632 ubox
4 23 0.193110846 ubox
4 24 0.398960761 ubox
4 29 0.005425195 ubox
4 33 0.885067953 ubox
4 34 0.003581739 ubox
4 49 0.014539982 ubox
4 52 0.004445249 ubox
4 58 0.123731314 ubox
5 11 0.003673585 ubox
5 22 0.215501524 ubox
5 32 0.885857891 ubox
5 48 0.014595845 ubox
5 51 0.004013005 ubox
5 57 0.127309022 ubox
6 10 0.003594547 ubox
6 22 0.382450516 ubox
6 27 0.006797337 ubox
6 31 0.885119639 ubox
6 56 0.127310726 ubox
7 20 0.315674867 ubox
7 21 0.305877587 ubox
7 23 0.080465010 ubox
7 26 0.007680891 ubox
7 28 0.355844069 ubox
7 30 0.806920813 ubox
7 45 0.013858364 ubox
7 52 0.026797972 ubox
7 55 0.124279456 ubox
8 19 0.390683723 ubox
8 22 0.114697767 ubox
8 27 0.875674260 ubox
8 44 0.017914633 ubox
8 51 0.065477329 ubox
9 18 0.386937860 ubox
9 21 0.114776944 ubox
9 24 0.008826441 ubox
9 25 0.039701085 ubox
9 26 0.878257105 ubox
9 43 0.012753121 ubox
9 50 0.065486090 ubox
9 53 0.101419311 ubox
10 18 0.203346196 ubox
10 20 0.114643818 ubox
10 21 0.007182927 ubox
10 23 0.009111046 ubox
10 24 0.052749389 ubox
10 25 0.877471533 ubox
10 26 0.009564720 ubox
10 43 0.086958234 ubox
10 52 0.093100153 ubox
10 53 0.003201789 ubox
11 17 0.206496790 ubox
11 20 0.013867127 ubox
11 23 0.060866975 ubox
11 24 0.857327328 ubox
11 25 0.009664642 ubox
11 42 0.126196322 ubox
12 41 0.127820186 ubox
13 40 0.128007421 ubox
14 39 0.127980899 ubox
15 38 0.127877982 ubox
18 27 0.058402072 ubox
18 38 0.003168015 ubox
19 26 0.058409317 ubox
19 28 0.005388988 ubox
19 33 0.127817731 ubox
19 37 0.003241115 ubox
20 27 0.007084577 ubox
20 32 0.127982631 ubox
21 27 0.015340915 ubox
21 31 0.127988933 ubox
22 26 0.015267092 ubox
22 28 0.005691495 ubox
22 30 0.127962057 ubox
22 33 0.006526813 ubox
23 27 0.009493591 ubox
23 32 0.007182612 ubox
24 31 0.007231906 ubox
24 32 0.004723047 ubox
25 31 0.004834230 ubox
25 32 0.007804748 ubox
26 31 0.008788685 ubox
26 56 0.003542830 ubox
27 33 0.020637581 ubox
27 55 0.003540797 ubox
28 32 0.023236423 ubox
28 40 0.034859681 ubox
28 61 0.011554542 ubox
29 39 0.034925895 ubox
30 38 0.034954327 ubox
31 37 0.034956312 ubox
31 59 0.318951472 ubox
31 63 0.023542670 ubox
32 36 0.034706314 ubox
32 58 0.319791533 ubox
32 62 0.026982278 ubox
32 113 0.004628957 ubox
33 57 0.185422786 ubox
33 61 0.040974116 ubox
34 56 0.136581918 ubox
34 57 0.011625161 ubox
35 56 0.010817947 ubox
35 57 0.030937950 ubox
36 56 0.023543768 ubox
36 57 0.972206195 ubox
37 51 0.072510270 ubox
37 56 0.981326636 ubox
38 50 0.072508317 ubox
38 53 0.004626393 ubox
38 55 0.988400207 ubox
39 46 0.034095859 ubox
39 49 0.061361911 ubox
39 52 0.004442581 ubox
39 53 0.003972772 ubox
39 54 0.988257970 ubox
40 45 0.043495940 ubox
40 50 0.006207751 ubox
40 52 0.008071189 ubox
40 53 0.988027367 ubox
41 49 0.007049987 ubox
41 52 0.881172717 ubox
43 51 0.953506456 ubox
43 56 0.004472617 ubox
44 50 0.947397502 ubox
44 52 0.031632826 ubox
44 55 0.004436541 ubox
45 51 0.063844571 ubox
50 56 0.010406259 ubox
51 55 0.010358163 ubox
51 58 0.018621063 ubox
52 57 0.018695637 ubox
58 112 0.003458076 ubox
59 111 0.003383693 ubox
61 113 0.980090247 ubox
62 112 0.999529907 ubox
63 111 0.999609305 ubox
63 112 0.011603222 ubox
64 110 0.999210314 ubox
64 111 0.012635737 ubox
64 112 0.007087872 ubox
65 109 0.999951838 ubox
65 111 0.006988983 ubox
66 108 0.999790945 ubox
66 110 0.006644777 ubox
67 107 0.999286248 ubox
68 106 0.999825284 ubox
69 105 0.999937145 ubox
69 108 0.007813536 ubox
70 104 0.999950765 ubox
70 107 0.009136087 ubox
71 103 0.999703214 ubox
71 106 0.009190632 ubox
72 101 0.544927207 ubox
72 102 0.837758229 ubox
72 105 0.009216325 ubox
73 100 0.770644762 ubox
73 101 0.636054927 ubox
74 99 0.939526149 ubox
74 103 0.015196618 ubox
75 95 0.004867568 ubox
75 96 0.993198630 ubox
75 102 0.029322205 ubox
76 94 0.004343063 ubox
76 95 0.998072376 ubox
76 96 0.020230305 ubox
76 100 0.003586314 ubox
76 101 0.031727839 ubox
77 94 0.998174461 ubox
77 95 0.014349099 ubox
77 100 0.033959865 ubox
78 92 0.009290943 ubox
78 93 0.997820356 ubox
78 99 0.033953113 ubox
79 91 0.010325846 ubox
79 95 0.057991200 ubox
79 96 0.005357218 ubox
80 91 0.997498812 ubox
80 94 0.058622788 ubox
80 95 0.004711854 ubox
81 90 0.997650307 ubox
81 93 0.058637668 ubox
84 91 0.061630240 ubox
85 90 0.062076349 ubox
85 92 0.008263924 ubox
86 91 0.008267022 ubox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
36 57 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
61 113 0.9500000 lbox
62 112 0.9500000 lbox
63 111 0.9500000 lbox
64 110 0.9500000 lbox
65 109 0.9500000 lbox
66 108 0.9500000 lbox
67 107 0.9500000 lbox
68 106 0.9500000 lbox
69 105 0.9500000 lbox
70 104 0.9500000 lbox
71 103 0.9500000 lbox
72 102 0.9500000 lbox
73 100 0.9500000 lbox
74 99 0.9500000 lbox
75 96 0.9500000 lbox
76 95 0.9500000 lbox
77 94 0.9500000 lbox
78 93 0.9500000 lbox
80 91 0.9500000 lbox
81 90 0.9500000 lbox
showpage
end
%%EOF
