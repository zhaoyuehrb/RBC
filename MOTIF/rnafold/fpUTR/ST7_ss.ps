%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACCUUUAGAGAGUUAGCAAUAAGGCUGGAGAAGGAAAAGCCGGCGCGCCCGCGGCCCGCGCGAUUUCCCGCCGAGCCCGCGUCCCCGGCGGCGGGCGGGCUCCGGGGGCGCCCGGGCCGCGGCGGCGGCGGCGGCGCGAGCUGCGCCUCCGGGCCGGUGAAUCAUCCCGGCAGACACCAAGAGCCGCGGCAGCAGAGAGGAGCGCUGAAAC\
) } def
/len { sequence length } bind def

/coor [
[106.43169403 169.74299622]
[95.76445770 159.19738770]
[92.13740540 144.64250183]
[96.60832977 130.32485962]
[98.31025696 115.42173004]
[89.67173004 127.68451691]
[81.03321075 139.94729614]
[72.39468384 152.21008301]
[63.75616455 164.47286987]
[69.16458893 177.14933777]
[67.61618042 190.73515320]
[59.62153625 201.69459534]
[47.35480499 207.22868347]
[34.06336594 205.98966980]
[25.24658775 218.12492371]
[16.42980957 230.26017761]
[7.61303091 242.39543152]
[12.53596497 257.11087036]
[7.83708286 271.89938354]
[-4.67679930 281.07449341]
[-20.19383812 281.10815430]
[-32.74741745 271.98745728]
[-37.51042557 257.21945190]
[-32.65139389 242.48278809]
[-20.03871536 233.44398499]
[-4.52222395 233.57865906]
[4.29455471 221.44340515]
[13.11133385 209.30815125]
[21.92811203 197.17288208]
[16.35804558 181.72953796]
[21.13955688 165.85044861]
[34.57757187 155.85200500]
[51.49337769 155.83435059]
[60.13190079 143.57156372]
[68.77042389 131.30877686]
[77.40894318 119.04599762]
[86.04747009 106.78321075]
[71.74511719 111.30458069]
[59.77592087 102.26366425]
[60.21418381 87.27006531]
[72.69102478 78.94370270]
[86.70491791 84.29281616]
[78.79747772 71.54634857]
[70.89003754 58.79988480]
[62.98259354 46.05342102]
[49.13277435 38.40534210]
[48.99831390 23.51134491]
[41.09087372 10.76488018]
[33.18342972 -1.98158526]
[18.05665970 -5.69891500]
[10.21896744 -18.73828697]
[13.85609436 -33.13644409]
[5.94865322 -45.88290787]
[-1.95878828 -58.62937546]
[-9.86623001 -71.37583923]
[-17.77367020 -84.12230682]
[-25.68111229 -96.86876678]
[-33.58855438 -109.61523438]
[-41.49599457 -122.36170197]
[-49.40343475 -135.10816956]
[-57.31087875 -147.85462952]
[-71.16069794 -155.50270081]
[-71.29515839 -170.39669800]
[-79.20259857 -183.14317322]
[-87.11003876 -195.88963318]
[-92.74327850 -199.34124756]
[-95.39231873 -204.36483765]
[-95.05600739 -209.12611389]
[-102.58761597 -222.09819031]
[-110.11923218 -235.07026672]
[-117.65084839 -248.04234314]
[-125.18245697 -261.01440430]
[-132.71408081 -273.98648071]
[-138.24404907 -277.60122681]
[-140.74516296 -282.70007324]
[-140.26988220 -287.44949341]
[-147.41923523 -300.63610840]
[-154.56858826 -313.82272339]
[-161.71794128 -327.00933838]
[-168.86729431 -340.19595337]
[-176.01664734 -353.38256836]
[-183.16600037 -366.56915283]
[-190.31535339 -379.75576782]
[-194.08853149 -381.89068604]
[-196.72282410 -384.81970215]
[-198.10845947 -388.08795166]
[-198.29447937 -391.25146484]
[-197.47145081 -393.92816162]
[-203.83830261 -407.50988770]
[-210.20515442 -421.09161377]
[-223.95974731 -430.02154541]
[-222.83340454 -446.38195801]
[-207.98483276 -453.34268188]
[-194.68894958 -443.74310303]
[-196.62342834 -427.45846558]
[-190.25657654 -413.87673950]
[-183.88973999 -400.29501343]
[-177.12873840 -386.90512085]
[-169.97938538 -373.71850586]
[-162.83003235 -360.53192139]
[-155.68067932 -347.34530640]
[-148.53132629 -334.15869141]
[-141.38197327 -320.97207642]
[-134.23262024 -307.78546143]
[-127.08326721 -294.59884644]
[-119.74199677 -281.51809692]
[-112.21038055 -268.54602051]
[-104.67877197 -255.57395935]
[-97.14715576 -242.60188293]
[-89.61553955 -229.62979126]
[-82.08393097 -216.65771484]
[-74.36357880 -203.79707336]
[-66.45613861 -191.05061340]
[-58.54869461 -178.30415344]
[-45.26446915 -171.56777954]
[-44.56441116 -155.76206970]
[-36.65697098 -143.01560974]
[-28.74953079 -130.26913452]
[-20.84208870 -117.52267456]
[-12.93464756 -104.77620697]
[-5.02720594 -92.02974701]
[2.88023543 -79.28327942]
[10.78767681 -66.53681183]
[18.69511795 -53.79035187]
[26.60256004 -41.04388428]
[41.11788177 -37.90684509]
[49.31872940 -25.09276199]
[45.92989731 -9.88902664]
[53.83733749 2.85743833]
[61.74477768 15.60390377]
[75.02900696 22.34026909]
[75.72905731 38.14598083]
[83.63649750 50.89244461]
[91.54394531 63.63890839]
[99.45138550 76.38537598]
[124.55223083 94.27225494]
[138.74882507 99.11545563]
[152.94541931 103.95866394]
[167.14202881 108.80187225]
[181.33862305 113.64507294]
[196.50747681 101.96759033]
[215.49955750 101.79692078]
[230.63446045 113.02096558]
[235.90077209 130.95616150]
[250.29595947 135.17259216]
[264.69116211 139.38902283]
[279.08636475 143.60545349]
[293.51199341 147.71659851]
[307.96725464 151.72224426]
[322.42251587 155.72787476]
[334.00915527 150.06556702]
[345.96514893 153.69731140]
[352.04119873 164.15495300]
[366.43640137 168.37138367]
[380.83157349 172.58781433]
[395.54067993 175.52760315]
[410.45071411 177.16816711]
[425.36071777 178.80873108]
[440.27072144 180.44931030]
[455.18075562 182.08987427]
[464.05007935 179.91824341]
[470.29605103 183.86489868]
[485.18051147 185.72314453]
[500.07034302 178.85110474]
[513.30871582 188.52981567]
[511.27713013 204.80262756]
[496.06552124 210.92948914]
[483.32226562 200.60758972]
[468.43780518 198.74934387]
[453.54019165 196.99989319]
[438.63015747 195.35931396]
[423.72015381 193.71875000]
[408.81011963 192.07818604]
[393.90011597 190.43762207]
[405.56338501 199.86991882]
[412.05578613 213.39207458]
[412.12313843 228.39192200]
[405.75244141 241.97183228]
[394.17437744 251.50849915]
[379.62551880 255.15965271]
[364.91641235 252.21997070]
[352.88845825 243.25733948]
[345.86523438 230.00311279]
[345.20346069 215.01773071]
[351.03091431 201.19598389]
[362.22195435 191.20793152]
[376.61517334 186.98301697]
[362.21997070 182.76658630]
[347.82476807 178.55015564]
[331.01989746 183.61062622]
[318.41687012 170.18315125]
[303.96160889 166.17750549]
[289.50634766 162.17187500]
[282.22320557 163.41456604]
[274.86993408 158.00065613]
[260.47473145 153.78422546]
[246.07952881 149.56779480]
[231.68434143 145.35136414]
[224.30505371 153.71101379]
[214.29409790 158.73739624]
[203.07958984 159.67062378]
[192.27746582 156.33784485]
[183.45857239 149.18365479]
[177.92019653 139.21121216]
[176.49540710 127.84167480]
[162.29881287 122.99846649]
[148.10221863 118.15525818]
[133.90562439 113.31205750]
[119.70903015 108.46884918]
[129.84574890 119.52537537]
[141.87884521 128.48107910]
[147.49935913 142.38825989]
[145.06764221 157.18984985]
[135.29310608 168.56781006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[14 29]
[15 28]
[16 27]
[17 26]
[42 135]
[43 134]
[44 133]
[45 132]
[47 130]
[48 129]
[49 128]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
[60 117]
[61 116]
[63 114]
[64 113]
[65 112]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[73 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[88 97]
[89 96]
[90 95]
[136 209]
[137 208]
[138 207]
[139 206]
[140 205]
[144 198]
[145 197]
[146 196]
[147 195]
[148 193]
[149 192]
[150 191]
[153 189]
[154 188]
[155 187]
[156 174]
[157 173]
[158 172]
[159 171]
[160 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
