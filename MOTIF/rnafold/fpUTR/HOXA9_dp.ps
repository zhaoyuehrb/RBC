%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HOXA9)
} def

/sequence { (\
AGUUGUUACAUGAAAUCUGCAGUUUCAUAAUUUCCGUGGGUCGGGCCGGGCGGGCCAGGCGCUGGGCACGGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.019567096 ubox
1 18 0.007332737 ubox
1 24 0.012022509 ubox
1 32 0.129726352 ubox
1 33 0.024206413 ubox
2 6 0.015593435 ubox
2 9 0.377858059 ubox
2 11 0.007103849 ubox
2 16 0.006689258 ubox
2 17 0.007734307 ubox
2 20 0.015698839 ubox
2 23 0.015953420 ubox
2 28 0.012182764 ubox
2 31 0.183035377 ubox
2 32 0.028697502 ubox
2 67 0.004383450 ubox
2 69 0.032731817 ubox
2 72 0.017361821 ubox
3 8 0.368604968 ubox
3 10 0.008204357 ubox
3 13 0.004626873 ubox
3 14 0.005515720 ubox
3 15 0.007680321 ubox
3 19 0.015596727 ubox
3 22 0.032024002 ubox
3 27 0.008907564 ubox
3 30 0.187006350 ubox
3 44 0.005737103 ubox
3 66 0.003947449 ubox
3 68 0.030192012 ubox
3 71 0.050392314 ubox
4 10 0.009560285 ubox
4 12 0.004974159 ubox
4 13 0.006405689 ubox
4 14 0.007767905 ubox
4 21 0.040634172 ubox
4 27 0.047068796 ubox
4 29 0.187523493 ubox
4 36 0.007421220 ubox
4 43 0.007561028 ubox
4 68 0.010416745 ubox
4 70 0.067069097 ubox
4 73 0.005384310 ubox
5 9 0.013243054 ubox
5 11 0.007394990 ubox
5 16 0.013974665 ubox
5 20 0.041931258 ubox
5 26 0.052818796 ubox
5 28 0.147088933 ubox
5 31 0.312046962 ubox
5 35 0.010369042 ubox
5 42 0.008672587 ubox
5 67 0.012425394 ubox
5 69 0.074208544 ubox
5 72 0.006574654 ubox
6 10 0.007433905 ubox
6 13 0.005679539 ubox
6 14 0.003522532 ubox
6 15 0.014347691 ubox
6 19 0.041288422 ubox
6 27 0.100128462 ubox
6 30 0.329920319 ubox
6 39 0.031557638 ubox
6 40 0.004148923 ubox
6 66 0.011278545 ubox
6 68 0.069369308 ubox
6 71 0.003786970 ubox
7 12 0.005562137 ubox
7 13 0.003850353 ubox
7 14 0.013837002 ubox
7 19 0.004242195 ubox
7 29 0.321737990 ubox
7 38 0.040061847 ubox
7 39 0.004324784 ubox
7 65 0.005597001 ubox
7 70 0.004106908 ubox
7 73 0.049701917 ubox
8 18 0.005586480 ubox
8 23 0.062096995 ubox
8 28 0.242164672 ubox
8 37 0.041208149 ubox
8 41 0.003343673 ubox
8 72 0.061103302 ubox
9 19 0.007328833 ubox
9 22 0.062290668 ubox
9 36 0.041289130 ubox
9 38 0.040759138 ubox
9 40 0.003839423 ubox
9 71 0.061411715 ubox
9 73 0.026829864 ubox
10 16 0.006418219 ubox
10 18 0.007156647 ubox
10 23 0.007943148 ubox
10 28 0.885696259 ubox
10 31 0.012026249 ubox
10 37 0.040667103 ubox
10 72 0.017114537 ubox
11 15 0.006189759 ubox
11 21 0.062203952 ubox
11 22 0.007563263 ubox
11 27 0.971387135 ubox
11 29 0.004602406 ubox
11 30 0.007264004 ubox
11 36 0.039972350 ubox
11 71 0.010009426 ubox
12 18 0.003172348 ubox
12 20 0.062629380 ubox
12 25 0.006049266 ubox
12 26 0.993771108 ubox
12 34 0.031698984 ubox
12 35 0.029980233 ubox
12 42 0.003204528 ubox
13 24 0.011065255 ubox
13 25 0.993162142 ubox
13 32 0.003266781 ubox
13 33 0.041242387 ubox
14 23 0.013866334 ubox
14 24 0.991102632 ubox
14 25 0.018568981 ubox
14 32 0.041290854 ubox
14 33 0.010323965 ubox
15 23 0.986037440 ubox
15 24 0.025935839 ubox
15 31 0.040842929 ubox
15 32 0.010862524 ubox
15 41 0.024124861 ubox
15 72 0.004452109 ubox
16 22 0.961043127 ubox
16 30 0.038909836 ubox
16 40 0.026295057 ubox
16 71 0.004458908 ubox
17 39 0.028468598 ubox
17 70 0.004526385 ubox
17 71 0.003402323 ubox
18 27 0.028973952 ubox
18 29 0.016211530 ubox
18 38 0.028367581 ubox
18 68 0.003862016 ubox
18 70 0.003432852 ubox
19 26 0.029732775 ubox
19 28 0.016189608 ubox
19 37 0.028403954 ubox
19 67 0.003913134 ubox
19 69 0.003456789 ubox
20 36 0.028441261 ubox
20 66 0.003839812 ubox
21 32 0.023598082 ubox
21 33 0.003765464 ubox
22 31 0.026490672 ubox
22 32 0.004144712 ubox
23 30 0.026748165 ubox
24 29 0.025611424 ubox
24 30 0.003336589 ubox
24 40 0.006332964 ubox
25 39 0.009363015 ubox
26 38 0.010467488 ubox
26 73 0.005827650 ubox
27 37 0.010461776 ubox
27 72 0.006731636 ubox
28 36 0.010275822 ubox
28 71 0.004966748 ubox
28 73 0.013496572 ubox
29 72 0.026611779 ubox
30 37 0.006939977 ubox
30 41 0.009211497 ubox
30 72 0.044124227 ubox
31 36 0.006650010 ubox
31 39 0.003856508 ubox
31 40 0.009875546 ubox
31 71 0.017473831 ubox
32 38 0.005174104 ubox
32 39 0.009840584 ubox
32 40 0.007580783 ubox
32 70 0.014033822 ubox
32 71 0.003823601 ubox
33 38 0.007479511 ubox
33 39 0.010842979 ubox
33 40 0.009394262 ubox
33 45 0.012981033 ubox
33 54 0.008167001 ubox
33 65 0.003770084 ubox
33 66 0.031418427 ubox
33 71 0.009090234 ubox
34 38 0.011655591 ubox
34 39 0.013343059 ubox
34 40 0.034095144 ubox
34 44 0.192049124 ubox
34 53 0.016840483 ubox
34 59 0.013661891 ubox
34 64 0.004260635 ubox
34 65 0.042106541 ubox
34 66 0.028591923 ubox
34 70 0.008802698 ubox
34 71 0.960676918 ubox
35 39 0.034219773 ubox
35 43 0.192579372 ubox
35 44 0.004592702 ubox
35 52 0.016871817 ubox
35 58 0.013805236 ubox
35 64 0.042119022 ubox
35 65 0.028896996 ubox
35 70 0.969225797 ubox
35 73 0.007123679 ubox
36 42 0.191585739 ubox
36 51 0.016863693 ubox
36 62 0.016682872 ubox
36 63 0.028720861 ubox
36 67 0.006650160 ubox
36 69 0.969399727 ubox
36 72 0.007089526 ubox
37 50 0.016507251 ubox
37 57 0.013606311 ubox
37 61 0.016281495 ubox
37 64 0.023003966 ubox
37 66 0.006901470 ubox
37 68 0.968706807 ubox
37 73 0.003678034 ubox
38 42 0.004407238 ubox
38 47 0.006292518 ubox
38 56 0.014259959 ubox
38 60 0.010371291 ubox
38 63 0.088518254 ubox
38 67 0.960192880 ubox
38 72 0.005219328 ubox
39 46 0.006373706 ubox
39 47 0.015911053 ubox
39 55 0.014254328 ubox
39 62 0.202906105 ubox
39 63 0.069120853 ubox
40 46 0.015942332 ubox
40 60 0.228810853 ubox
40 62 0.067830423 ubox
40 67 0.041008303 ubox
40 69 0.005710306 ubox
40 72 0.036145815 ubox
41 45 0.014925332 ubox
41 53 0.014095941 ubox
41 59 0.229596070 ubox
41 61 0.058049676 ubox
41 65 0.894932320 ubox
41 66 0.043488278 ubox
41 68 0.005812590 ubox
41 71 0.095062324 ubox
42 52 0.014243397 ubox
42 58 0.227464287 ubox
42 61 0.036366560 ubox
42 64 0.933399100 ubox
42 65 0.038859344 ubox
42 70 0.128912615 ubox
43 51 0.014196358 ubox
43 56 0.024905482 ubox
43 60 0.036806078 ubox
43 63 0.934756333 ubox
43 69 0.128487847 ubox
44 55 0.024470858 ubox
44 56 0.238900100 ubox
44 62 0.933988831 ubox
44 63 0.019488470 ubox
45 55 0.239927879 ubox
45 60 0.937388604 ubox
45 62 0.016567645 ubox
45 67 0.241641575 ubox
45 72 0.018039443 ubox
46 53 0.024638539 ubox
46 54 0.239917274 ubox
46 59 0.938109581 ubox
46 61 0.015517212 ubox
46 65 0.004860206 ubox
46 66 0.246157252 ubox
46 71 0.019355325 ubox
47 52 0.025268867 ubox
47 53 0.239814500 ubox
47 58 0.936221491 ubox
47 64 0.005140670 ubox
47 65 0.246144501 ubox
47 70 0.019367258 ubox
48 56 0.681653501 ubox
48 63 0.005056795 ubox
48 69 0.019213647 ubox
49 55 0.683807536 ubox
49 56 0.634146074 ubox
49 62 0.004779291 ubox
49 63 0.245386902 ubox
50 55 0.632767711 ubox
50 60 0.010750203 ubox
50 62 0.246193192 ubox
50 67 0.018496864 ubox
51 59 0.010767825 ubox
51 61 0.246192882 ubox
51 66 0.018775280 ubox
52 60 0.245276274 ubox
52 63 0.003389955 ubox
53 62 0.003439187 ubox
53 63 0.013517328 ubox
54 60 0.016150165 ubox
54 62 0.013746633 ubox
54 67 0.005290247 ubox
54 72 0.011968323 ubox
55 59 0.017521630 ubox
55 61 0.013736963 ubox
55 65 0.014393333 ubox
55 66 0.004935090 ubox
55 71 0.012839358 ubox
56 64 0.014595919 ubox
56 65 0.004518835 ubox
56 70 0.012839130 ubox
57 63 0.014794258 ubox
58 62 0.014497456 ubox
59 67 0.013727735 ubox
60 66 0.014128404 ubox
60 73 0.020170638 ubox
61 67 0.014701091 ubox
61 72 0.053439948 ubox
62 66 0.016826315 ubox
62 71 0.054893866 ubox
63 70 0.054871859 ubox
64 69 0.054835269 ubox
66 72 0.003248221 ubox
67 71 0.003551555 ubox
67 73 0.003217410 ubox
68 72 0.003187147 ubox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
38 67 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
44 62 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
showpage
end
%%EOF
