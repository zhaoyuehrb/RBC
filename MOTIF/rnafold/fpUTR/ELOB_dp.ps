%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ELOB)
} def

/sequence { (\
GGGAACGGGGCGGAGCGCGGCUGCGCCGGCGCGUCGAGGGGAGAGGCAGCAGCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.015257126 ubox
2 27 0.004227031 ubox
2 35 0.003318180 ubox
2 53 0.015210366 ubox
2 54 0.012967958 ubox
3 26 0.004267900 ubox
3 34 0.003229439 ubox
3 53 0.012950758 ubox
6 12 0.310794384 ubox
6 17 0.018876970 ubox
6 25 0.006904301 ubox
6 28 0.016132077 ubox
6 31 0.005772914 ubox
6 36 0.018724923 ubox
6 55 0.053754561 ubox
6 57 0.040431261 ubox
7 11 0.293248806 ubox
7 16 0.081975185 ubox
7 24 0.007315429 ubox
7 27 0.017352785 ubox
7 30 0.006442659 ubox
7 35 0.019083022 ubox
7 54 0.054705559 ubox
7 56 0.041773693 ubox
8 26 0.017338332 ubox
8 27 0.005093527 ubox
8 34 0.018894083 ubox
8 53 0.054548976 ubox
9 22 0.007300878 ubox
9 26 0.003720006 ubox
9 27 0.094535625 ubox
9 35 0.003891672 ubox
9 54 0.039740963 ubox
10 16 0.250200445 ubox
10 18 0.017353175 ubox
10 21 0.007329586 ubox
10 24 0.017331511 ubox
10 26 0.095377690 ubox
10 32 0.019091847 ubox
10 34 0.003932684 ubox
10 53 0.039723821 ubox
10 56 0.014308881 ubox
11 15 0.249916383 ubox
11 17 0.017748445 ubox
11 20 0.007148258 ubox
11 23 0.017330749 ubox
11 25 0.095456711 ubox
11 28 0.003320628 ubox
11 31 0.019091543 ubox
11 33 0.003945755 ubox
11 36 0.013127216 ubox
11 52 0.039505842 ubox
11 55 0.014300014 ubox
11 57 0.005120779 ubox
12 16 0.022088762 ubox
12 18 0.003503407 ubox
12 22 0.016925393 ubox
12 24 0.095453272 ubox
12 27 0.009826884 ubox
12 30 0.018846116 ubox
12 32 0.003798121 ubox
12 35 0.014220957 ubox
12 54 0.014018814 ubox
13 21 0.016792531 ubox
13 26 0.009067227 ubox
13 34 0.013882204 ubox
13 53 0.013935259 ubox
14 22 0.095229324 ubox
15 21 0.095562189 ubox
15 24 0.008352698 ubox
15 26 0.030882208 ubox
15 30 0.025299351 ubox
15 32 0.020585400 ubox
15 50 0.009127915 ubox
15 56 0.005952188 ubox
16 20 0.094872765 ubox
16 23 0.008366005 ubox
16 25 0.031154261 ubox
16 29 0.025349792 ubox
16 31 0.020614545 ubox
16 49 0.009133352 ubox
16 55 0.005521989 ubox
16 57 0.886591898 ubox
17 22 0.005671432 ubox
17 24 0.031165063 ubox
17 26 0.004598086 ubox
17 30 0.021695231 ubox
17 56 0.993471951 ubox
18 23 0.031120536 ubox
18 25 0.004806613 ubox
18 28 0.032037707 ubox
18 29 0.015374185 ubox
18 55 0.993867578 ubox
19 24 0.004786436 ubox
19 27 0.035639266 ubox
19 54 0.994039924 ubox
20 26 0.035663968 ubox
20 53 0.994060970 ubox
21 25 0.035404532 ubox
21 52 0.994055754 ubox
22 51 0.993815521 ubox
23 30 0.005444807 ubox
23 50 0.993984727 ubox
24 29 0.005967195 ubox
24 49 0.993485870 ubox
25 30 0.023013956 ubox
25 32 0.020547382 ubox
25 47 0.984467699 ubox
25 50 0.008370521 ubox
25 56 0.003251647 ubox
26 31 0.020526808 ubox
26 39 0.003271823 ubox
26 40 0.008793272 ubox
26 41 0.003172387 ubox
26 46 0.987651911 ubox
26 49 0.009306166 ubox
27 33 0.004111019 ubox
27 36 0.013040353 ubox
27 38 0.003802447 ubox
27 39 0.010392194 ubox
27 40 0.003855892 ubox
27 45 0.987237824 ubox
27 55 0.012992312 ubox
28 32 0.014158509 ubox
28 35 0.029513131 ubox
28 54 0.075056611 ubox
29 34 0.020144210 ubox
29 47 0.064470043 ubox
29 50 0.065858433 ubox
29 53 0.075168168 ubox
30 36 0.105984126 ubox
30 46 0.064988087 ubox
30 49 0.065990620 ubox
30 52 0.075130119 ubox
30 57 0.003481306 ubox
31 35 0.099345212 ubox
31 47 0.119791271 ubox
31 50 0.064228360 ubox
31 56 0.003785753 ubox
32 46 0.120335218 ubox
32 49 0.064397730 ubox
32 55 0.003784409 ubox
33 47 0.068859884 ubox
34 40 0.141480703 ubox
34 41 0.461920869 ubox
34 42 0.695199936 ubox
34 44 0.190857705 ubox
34 46 0.069032627 ubox
35 39 0.139170422 ubox
35 40 0.474666058 ubox
35 41 0.697368646 ubox
35 43 0.191631982 ubox
35 45 0.068995132 ubox
45 54 0.024699433 ubox
46 53 0.024766098 ubox
47 52 0.024738616 ubox
49 56 0.007282280 ubox
50 55 0.007281756 ubox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
