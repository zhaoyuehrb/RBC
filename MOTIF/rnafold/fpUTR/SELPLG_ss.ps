%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAUCCGAGAACCUUGGAGGGUGGACAGUGCCCCUUUUACAGAUGAGAAAACUGAGGCUUGAAGGGGAGAAGCAGCUGCCUCUGGCGGCAUGGCUUCUGGCUGCAGGAUGCCCAUGGAGUUCGUGGUGACCCUAGGCCUGUGUCUCGGCUUCCUUUGCUGAACUUGAACAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[98.64994812 351.03631592]
[86.06432343 359.19729614]
[71.66154480 363.38775635]
[56.66215134 363.25256348]
[42.33724976 358.80316162]
[29.90078163 350.41659546]
[20.40665436 338.80361938]
[14.65943336 324.94830322]
[13.14615822 310.02484131]
[15.99506950 295.29785156]
[22.96474075 282.01541138]
[33.46453857 271.30307007]
[46.60466766 264.06863403]
[61.27159882 260.92520142]
[76.22239685 262.13912964]
[90.19007874 267.60757446]
[101.99098206 276.86709595]
[110.62681580 289.13650513]
[109.30482483 274.19488525]
[107.98284149 259.25323486]
[106.66085052 244.31161499]
[105.33886719 229.36997986]
[96.50998688 217.37413025]
[103.00093079 202.94575500]
[101.67894745 188.00411987]
[100.22515869 173.07473755]
[98.63967896 158.15876770]
[97.05419922 143.24279785]
[95.46871948 128.32682800]
[80.17911530 123.83512115]
[68.61693573 111.17228699]
[65.03682709 93.16428375]
[71.68318176 74.75242615]
[57.07627869 71.34091187]
[42.46937943 67.92939758]
[27.86247635 64.51788330]
[13.25557613 61.10636902]
[-1.35132527 57.69485474]
[-15.95822620 54.28334045]
[-24.88269806 60.56744766]
[-35.57315445 60.87892151]
[-44.47437668 55.35671234]
[-48.75955200 46.03983688]
[-63.23695755 42.11494827]
[-76.25260925 52.89466476]
[-92.96236420 53.79465103]
[-106.78356171 44.65833664]
[-112.38919830 29.24402046]
[-126.93361664 25.57524681]
[-142.55352783 30.57026291]
[-154.50566101 19.34179115]
[-150.49467468 3.44071960]
[-134.64674377 -0.77529109]
[-123.26483917 11.03082848]
[-108.72042084 14.69960213]
[-99.29337311 5.22236967]
[-86.30825806 1.61929214]
[-73.13549805 4.93679047]
[-63.24945831 14.41036510]
[-59.31206894 27.63754272]
[-44.83466339 31.56243324]
[-26.58189201 25.23411942]
[-12.54671192 39.67643738]
[2.06018972 43.08795166]
[16.66709137 46.49946976]
[31.27399254 49.91098404]
[45.88089371 53.32249832]
[60.48779297 56.73401260]
[75.09469604 60.14552689]
[86.15882111 50.01709747]
[84.04792786 35.16637039]
[81.93702698 20.31564331]
[79.82613373 5.46491528]
[77.71523285 -9.38581276]
[75.60433960 -24.23653984]
[62.45517349 -39.48994446]
[70.36752319 -57.11396027]
[67.73383331 -71.88093567]
[65.10015106 -86.64791870]
[62.46646118 -101.41490173]
[59.83277512 -116.18187714]
[57.19908905 -130.94885254]
[48.46565628 -145.48033142]
[60.01157379 -157.89515686]
[75.13745880 -150.23722839]
[71.96607208 -133.58255005]
[74.59975433 -118.81556702]
[77.23344421 -104.04858398]
[79.86712646 -89.28160858]
[82.50081635 -74.51462555]
[85.13449860 -59.74764633]
[94.03746033 -54.65802383]
[98.75369263 -45.30475616]
[97.50125122 -34.68334579]
[90.45506287 -26.34743690]
[92.56596375 -11.49670982]
[94.67685699 3.35401773]
[96.78775787 18.20474625]
[98.89865112 33.05547333]
[101.00955200 47.90620041]
[114.27716827 54.90408325]
[127.72537994 48.25986099]
[141.17358398 41.61563873]
[154.62179565 34.97141647]
[159.50160217 23.01068687]
[170.86387634 17.76041412]
[182.37265015 21.54622841]
[195.93601990 15.14038181]
[209.49938965 8.73453522]
[210.86004639 -6.50015736]
[219.60585022 -18.92625618]
[233.30609131 -25.26421738]
[248.23934937 -23.90277672]
[260.40420532 -15.30729389]
[273.96755981 -21.71314049]
[287.53094482 -28.11898613]
[301.09432983 -34.52483368]
[314.65768433 -40.93067932]
[321.40252686 -55.48700714]
[337.02197266 -59.14926910]
[349.53414917 -49.10808563]
[349.34075928 -33.06620026]
[336.59017944 -23.32956886]
[321.06353760 -27.36730576]
[307.50015259 -20.96145821]
[293.93679810 -14.55561256]
[280.37341309 -8.14976597]
[266.81002808 -1.74391913]
[265.72076416 13.11135101]
[257.28591919 25.50931358]
[243.68803406 32.06399155]
[228.53550720 30.92482758]
[215.90524292 22.29790878]
[202.34185791 28.70375633]
[188.77848816 35.10960388]
[179.59402466 50.04821777]
[161.26602173 48.41962433]
[147.81781006 55.06384659]
[134.36959839 61.70806885]
[120.92138672 68.35228729]
[133.70367432 91.11859131]
[128.30601501 114.42705536]
[110.38469696 126.74134064]
[111.97017670 141.65731812]
[113.55564880 156.57328796]
[115.14112854 171.48925781]
[119.17080688 179.72119141]
[116.62057495 186.68214417]
[117.94256592 201.62376404]
[126.86600494 214.68833923]
[120.28049469 228.04798889]
[121.60248566 242.98962402]
[122.92446899 257.93124390]
[124.24645996 272.87289429]
[125.56844330 287.81451416]
[131.31190491 296.14828491]
[129.91096497 305.02993774]
[135.83415222 318.81094360]
[148.39207458 328.43432617]
[146.30928040 343.18258667]
[152.23246765 356.96359253]
[158.15565491 370.74456787]
[173.31974792 374.03546143]
[183.62829590 385.63345337]
[185.11744690 401.07891846]
[177.21458435 414.43270874]
[162.95852661 420.56008911]
[147.83102417 417.10491943]
[137.64891052 405.39575195]
[136.32740784 389.93505859]
[144.37466431 376.66775513]
[138.45147705 362.88677979]
[132.52828979 349.10577393]
[120.39404297 340.46810913]
[122.05316162 324.73413086]
[116.12997437 310.95312500]
[114.34792328 325.84689331]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[24 149]
[25 148]
[26 146]
[27 145]
[28 144]
[29 143]
[33 69]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[39 63]
[43 61]
[44 60]
[48 55]
[49 54]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[101 140]
[102 139]
[103 138]
[104 137]
[107 135]
[108 134]
[109 133]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[157 176]
[158 175]
[160 173]
[161 172]
[162 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
