%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAL)
} def

/sequence { (\
UCUUCUGCCCCGGGCUCCCCUGCUCUUAACCCGCGCGCGGGGGCGCCCAGGCCACUGGGCUCCGCGGAGCCAGCGAGAGGUCUGCGCGGAGUCUGAGCGGCGCUCGUCCCGUCCCAAGGCCGACGCCAGCACGCCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 58 0.017668475 ubox
1 59 0.012466605 ubox
1 96 0.077626033 ubox
2 50 0.005012658 ubox
2 57 0.087892116 ubox
2 58 0.049320358 ubox
2 59 0.003924454 ubox
2 95 0.082683446 ubox
2 97 0.025064105 ubox
2 129 0.005507354 ubox
3 49 0.004988602 ubox
3 57 0.054235229 ubox
3 58 0.004699243 ubox
3 96 0.029165326 ubox
3 97 0.030691907 ubox
3 128 0.005240258 ubox
4 51 0.007268445 ubox
4 57 0.010722982 ubox
4 58 0.007703019 ubox
4 59 0.003448652 ubox
4 95 0.025236972 ubox
4 96 0.096343206 ubox
5 50 0.010846450 ubox
5 57 0.031059111 ubox
5 58 0.011746518 ubox
5 95 0.100607476 ubox
5 97 0.015022041 ubox
5 129 0.008182490 ubox
6 49 0.010860493 ubox
6 54 0.497905591 ubox
6 57 0.012566680 ubox
6 95 0.005494343 ubox
6 96 0.017623920 ubox
6 128 0.008090659 ubox
6 131 0.035698574 ubox
6 133 0.006348095 ubox
6 136 0.008888875 ubox
7 11 0.003986111 ubox
7 48 0.005401365 ubox
7 52 0.800332255 ubox
7 53 0.543596961 ubox
7 56 0.004195158 ubox
7 98 0.008389353 ubox
7 101 0.003348771 ubox
7 120 0.004462804 ubox
7 127 0.005969679 ubox
7 130 0.040182150 ubox
7 132 0.007586630 ubox
7 134 0.046778423 ubox
7 135 0.008704549 ubox
7 137 0.015169582 ubox
8 51 0.799566511 ubox
8 58 0.003486167 ubox
8 59 0.003249161 ubox
8 97 0.008471586 ubox
8 100 0.003337109 ubox
8 119 0.004483511 ubox
8 129 0.040087596 ubox
8 133 0.047187721 ubox
8 136 0.015882022 ubox
9 50 0.783328914 ubox
9 51 0.579414579 ubox
9 57 0.003840459 ubox
9 58 0.003280829 ubox
9 99 0.003294614 ubox
9 118 0.004464928 ubox
10 50 0.601081532 ubox
10 51 0.112345303 ubox
11 50 0.115190304 ubox
11 95 0.007272223 ubox
11 133 0.004117684 ubox
11 136 0.005437239 ubox
12 47 0.011545989 ubox
12 48 0.998576671 ubox
12 94 0.006938282 ubox
12 135 0.004085346 ubox
13 46 0.010335799 ubox
13 47 0.999872676 ubox
13 48 0.004056598 ubox
13 93 0.006930325 ubox
13 134 0.003827413 ubox
14 44 0.009465638 ubox
14 46 0.999897922 ubox
14 92 0.006727185 ubox
15 43 0.009482323 ubox
15 45 0.999523258 ubox
15 91 0.006718615 ubox
16 42 0.008995274 ubox
16 43 0.050815236 ubox
16 90 0.004826193 ubox
17 41 0.009047845 ubox
17 42 0.051687253 ubox
17 43 0.998210647 ubox
18 40 0.009046545 ubox
18 41 0.051691906 ubox
18 42 0.998602487 ubox
19 39 0.009039810 ubox
19 40 0.051692249 ubox
19 41 0.998604068 ubox
20 39 0.051673693 ubox
20 40 0.998596040 ubox
21 35 0.014312726 ubox
21 37 0.049763127 ubox
21 39 0.997643525 ubox
22 34 0.021853044 ubox
22 36 0.057843843 ubox
22 38 0.998018059 ubox
23 33 0.022347008 ubox
23 35 0.058338645 ubox
23 37 0.996961956 ubox
32 39 0.003532394 ubox
33 38 0.003484411 ubox
45 60 0.008275865 ubox
46 59 0.008730482 ubox
47 58 0.009118788 ubox
48 57 0.010117581 ubox
49 56 0.021017363 ubox
49 104 0.008102108 ubox
50 55 0.022309910 ubox
50 103 0.008687949 ubox
50 121 0.006607789 ubox
50 135 0.073139287 ubox
50 138 0.003805585 ubox
51 98 0.018591853 ubox
51 101 0.052091624 ubox
51 120 0.006621068 ubox
51 134 0.073266725 ubox
51 137 0.003941333 ubox
52 58 0.005475535 ubox
52 59 0.003300400 ubox
52 97 0.020129469 ubox
52 100 0.053102732 ubox
52 119 0.006622364 ubox
52 133 0.073129978 ubox
52 136 0.004312312 ubox
53 57 0.010204592 ubox
53 58 0.004925544 ubox
53 95 0.102917260 ubox
53 99 0.053483962 ubox
53 118 0.006612618 ubox
54 94 0.072731789 ubox
54 137 0.022600585 ubox
55 97 0.239034759 ubox
55 129 0.005903739 ubox
55 136 0.024540717 ubox
56 95 0.613099162 ubox
56 96 0.245722703 ubox
56 116 0.003829193 ubox
56 128 0.005648637 ubox
56 131 0.003345229 ubox
56 133 0.003602747 ubox
56 136 0.009420051 ubox
57 93 0.018900779 ubox
57 94 0.953262788 ubox
57 115 0.003950946 ubox
57 127 0.003725244 ubox
57 132 0.004679789 ubox
57 135 0.012967938 ubox
57 138 0.003583525 ubox
58 92 0.013475059 ubox
58 93 0.991761965 ubox
58 94 0.104026501 ubox
58 114 0.003855904 ubox
58 126 0.003267482 ubox
58 134 0.011588226 ubox
58 135 0.004169567 ubox
59 92 0.993817260 ubox
59 93 0.104067461 ubox
59 113 0.003299021 ubox
59 134 0.004133628 ubox
60 91 0.999930409 ubox
60 133 0.003766618 ubox
61 90 0.999832437 ubox
62 89 0.999987334 ubox
63 86 0.003338043 ubox
63 88 0.999968379 ubox
64 85 0.007424369 ubox
64 87 0.999952703 ubox
65 84 0.007980575 ubox
65 86 0.999948023 ubox
66 83 0.012547638 ubox
66 85 0.999597975 ubox
67 82 0.022674595 ubox
68 81 0.019398577 ubox
68 83 0.993481611 ubox
69 81 0.158069036 ubox
69 82 0.986568761 ubox
69 85 0.005013178 ubox
70 80 0.994956530 ubox
70 84 0.004695650 ubox
71 79 0.994517796 ubox
71 84 0.018376757 ubox
72 83 0.018604251 ubox
73 81 0.093689775 ubox
73 82 0.018465729 ubox
74 80 0.095968846 ubox
76 81 0.003303251 ubox
94 106 0.003887209 ubox
94 133 0.029106433 ubox
94 136 0.032732670 ubox
95 105 0.007055602 ubox
95 130 0.005045887 ubox
95 132 0.086325301 ubox
95 135 0.088238446 ubox
95 138 0.167494648 ubox
96 104 0.007077231 ubox
96 137 0.146301766 ubox
97 103 0.007080827 ubox
97 112 0.004011675 ubox
97 130 0.244353148 ubox
97 134 0.142395955 ubox
97 137 0.881291150 ubox
98 102 0.007029374 ubox
98 111 0.004396398 ubox
98 129 0.244708454 ubox
98 133 0.142786866 ubox
98 136 0.952055753 ubox
99 110 0.004394727 ubox
99 127 0.256106003 ubox
99 132 0.140608575 ubox
99 135 0.954472293 ubox
100 109 0.004369806 ubox
100 126 0.257279930 ubox
100 130 0.122937335 ubox
100 134 0.954492370 ubox
101 125 0.257283665 ubox
101 129 0.122955981 ubox
101 133 0.951238328 ubox
102 124 0.257020166 ubox
102 126 0.067059595 ubox
102 130 0.834740754 ubox
102 132 0.459986741 ubox
103 111 0.004194677 ubox
103 125 0.070616673 ubox
103 129 0.915334029 ubox
104 123 0.267364347 ubox
104 128 0.853748875 ubox
105 111 0.010722591 ubox
105 122 0.268774809 ubox
105 125 0.900769731 ubox
106 110 0.010427614 ubox
106 120 0.019973743 ubox
106 121 0.267399847 ubox
106 124 0.913414359 ubox
106 126 0.222338667 ubox
106 130 0.154825741 ubox
107 119 0.020780439 ubox
107 123 0.912937124 ubox
107 125 0.207867580 ubox
107 129 0.151510577 ubox
107 131 0.003201149 ubox
108 118 0.020540629 ubox
108 119 0.243670423 ubox
108 122 0.907064565 ubox
109 118 0.243329080 ubox
109 119 0.551000376 ubox
110 118 0.554132103 ubox
110 122 0.209758883 ubox
110 125 0.217372234 ubox
111 120 0.716622646 ubox
111 121 0.225132400 ubox
111 124 0.225665330 ubox
112 119 0.703172046 ubox
112 123 0.225657604 ubox
113 118 0.692149673 ubox
113 119 0.282193443 ubox
113 122 0.225342218 ubox
114 118 0.280993782 ubox
118 127 0.026237249 ubox
119 126 0.026275610 ubox
120 125 0.026205471 ubox
122 138 0.008157403 ubox
123 137 0.008314931 ubox
124 136 0.008360450 ubox
125 134 0.006289668 ubox
125 135 0.006153475 ubox
126 133 0.008440109 ubox
129 137 0.017495735 ubox
130 136 0.018179995 ubox
131 137 0.018475990 ubox
132 136 0.019584269 ubox
7 52 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
57 94 0.9500000 lbox
58 93 0.9500000 lbox
59 92 0.9500000 lbox
60 91 0.9500000 lbox
61 90 0.9500000 lbox
62 89 0.9500000 lbox
63 88 0.9500000 lbox
64 87 0.9500000 lbox
65 86 0.9500000 lbox
66 85 0.9500000 lbox
68 83 0.9500000 lbox
69 82 0.9500000 lbox
70 80 0.9500000 lbox
71 79 0.9500000 lbox
97 137 0.9500000 lbox
98 136 0.9500000 lbox
99 135 0.9500000 lbox
100 134 0.9500000 lbox
101 133 0.9500000 lbox
102 130 0.9500000 lbox
103 129 0.9500000 lbox
104 128 0.9500000 lbox
105 125 0.9500000 lbox
106 124 0.9500000 lbox
107 123 0.9500000 lbox
108 122 0.9500000 lbox
111 120 0.9500000 lbox
112 119 0.9500000 lbox
113 118 0.9500000 lbox
showpage
end
%%EOF
