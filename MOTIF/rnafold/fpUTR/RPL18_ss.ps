%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAGCUAUCGAGAACACGGCCUGGGUAGGGCCAGAGAGGCCCCCGACGUGCUGGCCCUUCCCUCUUGGACGUUGCGCUUGUUCCUGCGCUCUAUGCUCUCUGCCGUUAUCGCCCGGCUAGUCAGUCGUCCAACUCACCACAGAGAAGUCCGGAUCGUGGUAGAGCGCCGCGUCGCACCCAUGUGACGUCACGGCGGCGCCACUCGCUUGAGGCUUUCCCCGCCCACCCCAGCCCGUUCUCUCUUUCCGGACCUG\
GCCGAGCAGGAGGCGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[349.21737671 254.62776184]
[339.93597412 249.42147827]
[332.52026367 241.95748901]
[327.49078369 232.85307312]
[325.17462158 222.83642578]
[325.68481445 212.68861389]
[311.60900879 207.50486755]
[297.53317261 202.32112122]
[283.45733643 197.13737488]
[269.38153076 191.95362854]
[255.30570984 186.76988220]
[240.68870544 189.63214111]
[230.41267395 177.60244751]
[216.33683777 172.41870117]
[205.53059387 179.39590454]
[192.48347473 178.87928772]
[181.95378113 170.83358765]
[177.91014099 158.00994873]
[163.89422607 152.66633606]
[149.87832642 147.32270813]
[135.22969055 150.01840210]
[125.09123993 137.87252808]
[111.07533264 132.52890015]
[96.16294861 134.14775085]
[83.62021637 142.37452698]
[71.07748413 150.60131836]
[63.78156281 164.63983154]
[48.89570999 165.15034485]
[36.35297775 173.37712097]
[23.81024551 181.60389709]
[11.26751423 189.83067322]
[-1.27521801 198.05744934]
[-13.81795025 206.28422546]
[-26.36068153 214.51100159]
[-38.90341187 222.73777771]
[-39.03579712 241.91737366]
[-50.64603806 256.99414062]
[-68.86398315 261.94299316]
[-86.22679138 254.92578125]
[-98.48133850 263.57598877]
[-107.93462372 277.64978027]
[-124.07534027 272.46194458]
[-123.55844116 255.51588440]
[-107.13154602 251.32144165]
[-94.87699127 242.67123413]
[-96.82820129 231.75283813]
[-94.57128906 220.84123230]
[-88.39236450 211.50740051]
[-79.14492798 205.10952759]
[-68.13216400 202.59548950]
[-56.92333984 204.36251831]
[-47.13019180 210.19505310]
[-34.58745956 201.96827698]
[-22.04472733 193.74150085]
[-9.50199604 185.51472473]
[3.04073572 177.28793335]
[15.58346748 169.06115723]
[28.12619972 160.83438110]
[40.66893005 152.60760498]
[47.06771088 139.15751648]
[62.85070419 138.05857849]
[75.39344025 129.83180237]
[87.93617249 121.60502625]
[78.27131653 114.63431549]
[72.56229401 103.41698456]
[72.61206055 90.15989685]
[61.08489609 80.56174469]
[49.55772781 70.96360016]
[38.03056335 61.36545181]
[26.50339508 51.76730728]
[14.97622871 42.16915894]
[3.44906235 32.57101059]
[-1.33246982 44.71583939]
[-13.60094070 54.10486603]
[-31.63713074 57.18074417]
[-45.93430328 52.64302826]
[-60.23147583 48.10530853]
[-74.52864838 43.56758881]
[-86.93927002 52.88187790]
[-102.45497131 53.08884430]
[-115.10962677 44.10891342]
[-120.03727722 29.39504623]
[-115.34313965 14.60502720]
[-102.83219910 5.42592001]
[-87.31517029 5.38727903]
[-74.75867462 14.50396156]
[-69.99092865 29.27041817]
[-55.69375610 33.80813599]
[-41.39658356 38.34585571]
[-27.09941292 42.88357544]
[-22.67033005 36.83103561]
[-36.92020798 32.14691544]
[-36.86861038 17.14700317]
[-22.58684731 12.56102467]
[-13.81216335 24.72595787]
[-9.38307953 18.67341995]
[-18.03328514 6.41887140]
[-26.68348885 -5.83567715]
[-42.00426483 -8.64843082]
[-50.60223389 -21.19951057]
[-47.82628632 -35.78819656]
[-56.47649002 -48.04274368]
[-65.19629669 -60.24786377]
[-73.98542786 -72.40316010]
[-82.77455902 -84.55844879]
[-91.56369019 -96.71374512]
[-107.08044434 -96.61440277]
[-119.67251587 -105.68190002]
[-124.49798584 -120.42959595]
[-119.70137024 -135.18669128]
[-107.12705994 -144.27880859]
[-91.61013794 -144.20980835]
[-79.11717224 -135.00625610]
[-74.45197296 -120.20707703]
[-79.40839386 -105.50287628]
[-70.61926270 -93.34757996]
[-61.83013153 -81.19228363]
[-53.04100418 -69.03699493]
[-46.60004044 -65.47180176]
[-44.22194290 -56.69294739]
[-35.57173538 -44.43840027]
[-20.89578247 -42.16861343]
[-11.94867325 -29.86398315]
[-14.42894077 -14.48588181]
[-5.77873611 -2.23133349]
[2.87146854 10.02321529]
[13.04720974 21.04384613]
[24.57437515 30.64199257]
[36.10154343 40.24013901]
[47.62870789 49.83828735]
[59.15587616 59.43643570]
[70.68304443 69.03458405]
[82.21021271 78.63272858]
[95.89946747 72.50049591]
[96.41158295 57.50924301]
[96.92369843 42.51798630]
[85.95462036 31.14016724]
[86.32717133 15.34027100]
[97.82032776 4.49209499]
[113.61540222 5.03167105]
[124.34145355 16.63887787]
[123.63491821 32.42736435]
[111.91495514 43.03010559]
[111.40283966 58.02135849]
[110.89072418 73.01261139]
[126.53089142 95.41899109]
[116.41896057 118.51299286]
[130.43487549 123.85661316]
[146.08601379 121.54312897]
[155.22195435 133.30679321]
[169.23785400 138.65042114]
[183.25376892 143.99404907]
[199.10601807 136.55332947]
[215.11268616 142.77507019]
[221.52058411 158.34288025]
[235.59640503 163.52662659]
[251.22021484 161.03514099]
[260.48944092 172.69406128]
[274.56527710 177.87780762]
[288.64108276 183.06155396]
[302.71691895 188.24530029]
[316.79275513 193.42904663]
[330.86856079 198.61279297]
[344.14483643 184.79383850]
[363.08953857 179.30198669]
[382.78942871 184.14436340]
[397.84133911 198.56932068]
[410.28964233 190.20031738]
[422.73791504 181.83129883]
[435.18618774 173.46229553]
[447.48977661 164.88197327]
[459.64505005 156.09283447]
[471.80035400 147.30371094]
[483.95565796 138.51458740]
[496.11096191 129.72544861]
[508.26623535 120.93631744]
[520.42150879 112.14719391]
[526.62829590 96.96799469]
[542.91156006 95.02201843]
[552.52050781 108.31111145]
[545.57031250 123.16460419]
[529.21069336 124.30248260]
[517.05535889 133.09161377]
[504.90008545 141.88075256]
[492.74478149 150.66987610]
[480.58947754 159.45899963]
[468.43420410 168.24813843]
[456.27890015 177.03726196]
[455.35534668 180.40283203]
[452.77774048 183.49716187]
[448.68698120 185.55743408]
[443.55520630 185.91056824]
[431.10693359 194.27958679]
[418.65863037 202.64859009]
[406.21035767 211.01760864]
[406.03961182 226.01663208]
[418.29415894 234.66683960]
[430.54873657 243.31704712]
[442.80328369 251.96723938]
[455.05783081 260.61746216]
[467.31237793 269.26766968]
[483.04864502 270.90481567]
[488.98449707 284.56552124]
[501.23904419 293.21572876]
[516.97534180 294.85287476]
[522.91113281 308.51358032]
[535.16571045 317.16378784]
[547.42028809 325.81396484]
[559.67480469 334.46417236]
[571.92938232 343.11437988]
[588.06567383 333.63189697]
[610.87799072 342.14169312]
[625.41015625 345.85882568]
[639.94226074 349.57592773]
[652.54260254 340.31494141]
[668.14447021 341.37155151]
[679.38110352 352.24682617]
[680.94696045 367.80581665]
[672.10266113 380.70202637]
[657.02423096 384.84628296]
[642.83123779 378.28176880]
[636.22515869 364.10806274]
[621.69305420 360.39096069]
[607.16088867 356.67382812]
[603.37396240 363.14758301]
[616.32135010 370.72158813]
[608.74713135 383.66885376]
[595.80017090 376.09506226]
[592.01324463 382.56881714]
[602.37567139 393.41409302]
[612.73809814 404.25939941]
[623.10052490 415.10467529]
[640.90209961 419.88317871]
[644.34936523 437.10681152]
[654.83453369 447.83346558]
[665.31970215 458.56008911]
[679.96466064 454.11221313]
[694.99700928 456.99105835]
[706.96240234 466.53506470]
[713.11126709 480.55114746]
[712.03063965 495.81845093]
[703.96887207 508.82870483]
[690.77850342 516.59222412]
[675.49053955 517.32501221]
[661.61804199 510.85870361]
[652.34887695 498.67916870]
[649.81298828 483.58520508]
[654.59307861 469.04528809]
[644.10791016 458.31863403]
[633.62268066 447.59201050]
[621.55834961 447.14840698]
[612.73632812 438.33120728]
[612.25518799 425.46710205]
[601.89282227 414.62179565]
[591.53039551 403.77651978]
[581.16796875 392.93121338]
[561.08477783 375.54348755]
[563.27917480 355.36892700]
[551.02459717 346.71871948]
[538.77008057 338.06854248]
[526.51550293 329.41833496]
[514.26098633 320.76812744]
[499.40121460 319.74969482]
[492.58883667 305.47027588]
[480.33428955 296.82006836]
[465.47454834 295.80163574]
[458.66217041 281.52221680]
[446.40762329 272.87200928]
[434.15307617 264.22180176]
[421.89852905 255.57159424]
[409.64398193 246.92138672]
[397.38943481 238.27117920]
[390.18972778 246.90722656]
[380.99969482 253.17373657]
[370.55905151 256.64593506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[13 156]
[14 155]
[18 152]
[19 151]
[20 150]
[22 148]
[23 147]
[24 63]
[25 62]
[26 61]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[39 45]
[40 44]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[75 90]
[76 89]
[77 88]
[78 87]
[96 126]
[97 125]
[98 124]
[101 121]
[102 120]
[103 118]
[104 117]
[105 116]
[106 115]
[134 145]
[135 144]
[136 143]
[167 195]
[168 194]
[169 193]
[170 192]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
[196 272]
[197 271]
[198 270]
[199 269]
[200 268]
[201 267]
[203 265]
[204 264]
[206 262]
[207 261]
[208 260]
[209 259]
[210 258]
[212 224]
[213 223]
[214 222]
[229 256]
[230 255]
[231 254]
[232 253]
[234 250]
[235 249]
[236 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
