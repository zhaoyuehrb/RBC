%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCUCGCGCCCCAGGCCGGUGUACCCCCGCACUCCGCGCCCCGGCCUAGAAGCUCUCUCUCCCCGCUCCCCGGCCCGGCCCCCGCCCCGCCCCGCCCCAGCCCGCUGGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[111.38267517 170.81004333]
[93.54843140 171.42831421]
[76.11360168 167.62445068]
[60.15758896 159.63395691]
[46.66822052 147.95152283]
[36.48062515 133.30038452]
[30.22552490 116.58763123]
[28.29017067 98.84793854]
[13.39953709 97.03988647]
[5.53882885 108.69577026]
[-6.53400087 115.76923370]
[-20.41259003 116.91700745]
[-33.35931015 111.97035217]
[-42.84527969 101.95703888]
[-47.04429245 88.88835907]
[-61.88101578 86.68117523]
[-76.71773529 84.47399139]
[-91.55445862 82.26680756]
[-106.39118195 80.05963135]
[-121.22790527 77.85244751]
[-136.06463623 75.64526367]
[-150.85308838 81.26770782]
[-162.30331421 71.74186707]
[-177.14004517 69.53469086]
[-169.84825134 82.64307404]
[-173.72235107 97.13414764]
[-186.58271790 104.85497284]
[-201.19386292 101.46166229]
[-209.33528137 88.86335754]
[-206.42646790 74.14810181]
[-194.10244751 65.59461212]
[-208.39297485 61.03603745]
[-223.25041199 67.08884430]
[-237.17514038 59.12131500]
[-239.48530579 43.24546432]
[-228.40875244 31.63988304]
[-212.44245911 33.20737839]
[-203.83439636 46.74550247]
[-189.54386902 51.30408096]
[-174.93286133 54.69796371]
[-160.09613037 56.90514755]
[-146.36889648 51.12482834]
[-133.85745239 60.80854034]
[-119.02072144 63.01572418]
[-104.18399811 65.22290802]
[-89.34728241 67.43008423]
[-74.51055908 69.63726807]
[-59.67383194 71.84445190]
[-44.83710861 74.05163574]
[-35.15245819 61.19185638]
[-20.23280716 54.89999771]
[-4.07874250 56.96502686]
[8.92677307 66.92127228]
[15.20758724 82.14925385]
[30.09822083 83.95730591]
[33.91253281 72.14189911]
[39.70746613 61.16139603]
[47.30934525 51.34486771]
[56.49034500 42.98652267]
[66.97531128 36.33684921]
[78.45001984 31.59513664]
[90.57057190 28.90349579]
[102.97372437 28.34259415]
[115.28775024 29.92923927]
[127.14360809 33.61587906]
[138.18598938 39.29203033]
[148.08393860 46.78757858]
[156.54083252 55.87788773]
[163.30322266 66.29051971]
[168.16842651 77.71340942]
[170.99066162 89.80422211]
[171.68531799 102.20059967]
[170.23158264 114.53102875]
[184.52212524 119.08960724]
[198.81265259 123.64817810]
[213.10319519 128.20675659]
[227.39372253 132.76533508]
[241.68426514 137.32391357]
[255.97479248 141.88249207]
[270.26531982 146.44107056]
[284.55587769 150.99964905]
[293.98733521 143.50932312]
[305.75396729 141.58314514]
[316.85440063 145.59329224]
[324.51489258 154.41271973]
[326.88250732 165.72883606]
[340.90774536 171.04791260]
[354.86184692 161.59991455]
[371.53454590 162.27557373]
[384.42041016 172.61477661]
[388.60821533 188.42521667]
[402.77120972 193.36582947]
[419.71801758 192.87387085]
[424.88208008 209.02220154]
[410.79440308 218.45477295]
[397.83059692 207.52882385]
[383.66760254 202.58821106]
[373.38958740 211.22146606]
[360.07519531 213.63542175]
[347.21557617 209.08753967]
[338.23712158 198.67518616]
[335.58868408 185.07315063]
[321.56344604 179.75407410]
[305.47857666 188.29174805]
[287.91909790 182.38581848]
[279.99728394 165.29017639]
[265.70675659 160.73159790]
[251.41621399 156.17301941]
[237.12568665 151.61444092]
[222.83514404 147.05587769]
[208.54461670 142.49729919]
[194.25407410 137.93872070]
[179.96354675 133.38014221]
[165.67301941 128.82156372]
[156.52450562 144.14303589]
[143.87655640 156.73159790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 55]
[9 54]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[20 44]
[21 43]
[23 41]
[24 40]
[31 39]
[32 38]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[86 103]
[87 102]
[91 97]
[92 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
