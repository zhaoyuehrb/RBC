%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCUGUGUCAAGUUCCAGAGAAAAGCUUCUGUUCGUCCAAGUUACUAACCAGGCUAAACCACAUAGACGUGAAGGAAGGGGCUAGAAGGAAGGGAGUGCCCCACUGUUGAUGGGGUAAGAGGAUCCUGUACUGAGAAGUUGACCAGAGAGGGUCUCACCAUGCGCACAGUUCCUUCUGUACCUGUGUGGAGGAAAAGUACUGAGUGAAGGGCAGAAAAAGAGAAAACAGAA\
) } def
/len { sequence length } bind def

/coor [
[-36.22020721 788.79504395]
[-48.30124664 779.90411377]
[-55.78537369 766.90454102]
[-57.40811920 751.99182129]
[-63.65599442 765.62866211]
[-69.90386963 779.26556396]
[-61.40376663 793.89776611]
[-63.28730392 810.54724121]
[-74.61433411 822.66772461]
[-90.77119446 825.61279297]
[-96.83542633 839.33227539]
[-88.92468262 852.68145752]
[-90.40470886 868.12774658]
[-100.70640564 879.73187256]
[-115.86855316 883.03167725]
[-130.06100464 876.75842285]
[-137.82646179 863.32421875]
[-136.17895508 847.89483643]
[-125.75199127 836.40319824]
[-110.55493927 833.26806641]
[-104.49070740 819.54852295]
[-112.23570251 808.68475342]
[-113.61638641 795.30572510]
[-108.16625977 782.89111328]
[-97.20944977 774.72283936]
[-83.54073334 773.01763916]
[-77.29285431 759.38079834]
[-71.04498291 745.74395752]
[-66.00941467 731.61444092]
[-62.22447968 717.09979248]
[-58.43954086 702.58520508]
[-54.65460205 688.07055664]
[-60.21028900 671.41705322]
[-47.14919281 658.42626953]
[-43.55945969 643.86212158]
[-39.96972275 629.29797363]
[-36.47783279 614.71008301]
[-33.08395004 600.09912109]
[-29.69006538 585.48809814]
[-26.29617882 570.87707520]
[-32.44797516 562.74261475]
[-33.12966919 552.34686279]
[-27.87642097 543.09704590]
[-18.20831680 538.15753174]
[-14.42337990 523.64288330]
[-10.63844204 509.12826538]
[-6.85350370 494.61364746]
[-3.06856608 480.09902954]
[-4.51463461 476.89974976]
[-4.49244499 472.84408569]
[-2.61759782 468.62545776]
[1.17206156 465.08218384]
[5.53837490 450.73175049]
[9.90468788 436.38128662]
[14.17457199 422.00186157]
[18.34783363 407.59408569]
[22.52109528 393.18630981]
[10.21862316 379.09606934]
[8.90259838 360.28631592]
[19.28760529 344.36813354]
[37.31665421 337.89248657]
[40.90639114 323.32836914]
[44.49612427 308.76425171]
[48.08586121 294.20010376]
[51.67559433 279.63598633]
[55.26532745 265.07186890]
[58.85506439 250.50773621]
[62.44479752 235.94360352]
[65.83868408 221.33259583]
[69.03610992 206.67735291]
[72.23352814 192.02209473]
[70.59111023 184.82859802]
[75.57350922 177.19216919]
[78.96739197 162.58116150]
[82.36127472 147.97015381]
[85.75516510 133.35914612]
[89.14904785 118.74813843]
[92.54293060 104.13713074]
[82.67221069 102.97232056]
[73.73552704 95.57927704]
[64.40569305 83.83389282]
[55.07585526 72.08850098]
[45.74601746 60.34311295]
[36.41617966 48.59772491]
[21.93261528 53.13543701]
[6.78814316 52.13075638]
[-6.96907282 45.71955872]
[-17.47848129 34.76890564]
[-23.31877136 20.75978661]
[-23.70009041 5.58681536]
[-18.57087135 -8.69798565]
[-8.62479496 -20.16271400]
[4.79301023 -27.25686264]
[19.86789894 -29.02100182]
[34.56111526 -25.21654892]
[46.88552094 -16.35802650]
[55.17434311 -3.64347243]
[58.30658340 11.20757103]
[55.85863876 26.18662262]
[48.16156769 39.26789093]
[57.49140549 51.01327896]
[66.82124329 62.75866699]
[76.15107727 74.50405121]
[85.48091888 86.24944305]
[100.46435547 85.54485321]
[108.65082550 72.97577667]
[116.83729553 60.40669632]
[125.02376556 47.83761978]
[133.21023560 35.26853943]
[141.31213379 22.64479065]
[149.32913208 9.96693897]
[157.26083374 -2.76444244]
[165.10688782 -15.54878139]
[172.95295715 -28.33312035]
[180.79901123 -41.11745834]
[176.08006287 -48.63402557]
[174.05822754 -57.23119736]
[174.92385864 -65.97679901]
[178.55583191 -73.93186951]
[184.53750610 -80.25144958]
[192.20436096 -84.27435303]
[200.71778870 -85.59224701]
[209.15673828 -84.09095001]
[217.84266663 -96.32020569]
[226.52859497 -108.54945374]
[235.21453857 -120.77870178]
[243.90046692 -133.00794983]
[252.58641052 -145.23719788]
[261.27233887 -157.46644592]
[257.50973511 -170.38928223]
[261.80923462 -182.93811035]
[272.39141846 -190.60978699]
[285.26611328 -190.78811646]
[294.11544800 -202.89965820]
[302.96478271 -215.01118469]
[296.68215942 -229.02633667]
[298.26477051 -244.30346680]
[307.28692627 -256.73312378]
[321.32168579 -262.97180176]
[336.59378052 -261.34130859]
[348.99511719 -252.28024292]
[355.18975830 -238.22599792]
[353.51138306 -222.95907593]
[344.41149902 -210.58621216]
[330.33792114 -204.43565369]
[315.07632446 -206.16186523]
[306.22698975 -194.05032349]
[297.37765503 -181.93878174]
[300.66836548 -165.43872070]
[290.80673218 -151.39175415]
[273.50158691 -148.78051758]
[264.81564331 -136.55126953]
[256.12973022 -124.32202148]
[247.44378662 -112.09276581]
[238.75784302 -99.86351776]
[230.07191467 -87.63426971]
[221.38598633 -75.40502167]
[226.83760071 -54.86125565]
[215.12500000 -36.78350449]
[193.58335876 -33.27139664]
[185.73728943 -20.48705673]
[177.89123535 -7.70271873]
[170.04516602 5.08161974]
[169.22659302 12.41469002]
[162.00697327 17.98392677]
[153.98999023 30.66177750]
[153.07304382 37.98319626]
[145.77931213 43.45500946]
[137.59283447 56.02408600]
[129.40637207 68.59316254]
[121.21990967 81.16224670]
[113.03343964 93.73132324]
[107.15393829 107.53101349]
[103.76005554 122.14202118]
[100.36617279 136.75303650]
[96.97228241 151.36404419]
[93.57839966 165.97505188]
[90.18451691 180.58605957]
[86.88878632 195.21951294]
[83.69136047 209.87477112]
[80.49394226 224.53002930]
[82.12962341 230.90936279]
[80.54661560 236.34657288]
[77.00892639 239.53334045]
[73.41918945 254.09747314]
[69.82946014 268.66159058]
[66.23972321 283.22573853]
[62.64998627 297.78985596]
[59.06025314 312.35397339]
[55.47051620 326.91812134]
[51.88078308 341.48223877]
[60.66468430 348.80581665]
[66.06369019 358.82940674]
[67.33415985 370.09188843]
[64.33111572 380.96752930]
[57.52371216 389.90081787]
[47.92234802 395.62878418]
[36.92886734 397.35958862]
[32.75560379 411.76736450]
[28.58234406 426.17510986]
[29.20120239 435.27218628]
[24.25513458 440.74761963]
[19.88882065 455.09805298]
[15.52250767 469.44848633]
[11.44605541 483.88397217]
[7.66111803 498.39859009]
[3.87617993 512.91320801]
[0.09124213 527.42785645]
[-3.69369578 541.94244385]
[2.51395440 561.13220215]
[-11.68517208 574.27093506]
[-15.07905674 588.88195801]
[-18.47294235 603.49298096]
[-21.86682701 618.10400391]
[-20.76056099 627.15472412]
[-25.40559578 632.88775635]
[-28.99533081 647.45184326]
[-32.58506775 662.01599121]
[-26.59542084 673.42724609]
[-29.87403488 685.47625732]
[-40.13998032 691.85552979]
[-43.92491913 706.37011719]
[-47.70985794 720.88476562]
[-51.49479294 735.39935303]
[-40.80697632 724.87463379]
[-26.78835678 719.53808594]
[-11.80728531 720.29144287]
[1.60528588 727.00732422]
[11.18339157 738.55114746]
[15.30887508 752.97265625]
[13.28476238 767.83544922]
[5.45301533 780.62854004]
[-6.86324549 789.19067383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 28]
[5 27]
[6 26]
[10 21]
[11 20]
[29 224]
[30 223]
[31 222]
[32 221]
[34 218]
[35 217]
[36 216]
[37 214]
[38 213]
[39 212]
[40 211]
[44 209]
[45 208]
[46 207]
[47 206]
[48 205]
[52 204]
[53 203]
[54 202]
[55 200]
[56 199]
[57 198]
[61 191]
[62 190]
[63 189]
[64 188]
[65 187]
[66 186]
[67 185]
[68 184]
[69 181]
[70 180]
[71 179]
[73 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 173]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[105 172]
[106 171]
[107 170]
[108 169]
[109 168]
[110 166]
[111 165]
[112 163]
[113 162]
[114 161]
[115 160]
[123 157]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[133 148]
[134 147]
[135 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
