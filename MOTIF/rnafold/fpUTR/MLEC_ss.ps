%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:28:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCUGAGGUGGGAGGCGGUACCCGUGGCUGAGAAGAAGGAGGCCUGAGAGCGACAUGUCCCCGGCGGCUCAGGCGGAGCGGCCCGUGGCGCUGUUUUUCUGAGUCCGGGGUGGCCUGGCAGCCGGCCGAGGACGAGGGUCGGCGGGGGCUGCCCCCGUGGUGGUGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[72.10731506 192.49275208]
[57.13603973 193.42057800]
[43.04758072 188.27125549]
[32.20322800 177.90786743]
[26.42052841 164.06733704]
[26.66868973 149.06938171]
[32.90611649 135.42773438]
[44.08739090 125.42878723]
[58.33849335 120.74839020]
[73.27088165 122.17099762]
[86.38182831 129.45819092]
[95.47486115 141.39062500]
[94.39249420 126.42971802]
[93.31012726 111.46881866]
[87.38274384 97.68962860]
[77.26554871 86.61523438]
[67.14834595 75.54084015]
[57.03113937 64.46644592]
[43.46636963 67.02131653]
[30.51616669 62.56677246]
[21.53664017 52.37056732]
[18.79863167 39.17340469]
[22.91413879 26.45274353]
[12.99852467 15.19749641]
[3.08291030 3.94224930]
[-6.83270407 -7.31299782]
[-14.88302612 -11.70371532]
[-16.82349205 -18.86211967]
[-26.53428650 -30.29454994]
[-36.24507904 -41.72698212]
[-45.95587540 -53.15941238]
[-60.78699493 -58.66835785]
[-63.12937927 -73.37762451]
[-72.84017181 -84.81005096]
[-82.55096436 -96.24248505]
[-92.26176453 -107.67491913]
[-101.97255707 -119.10734558]
[-111.68334961 -130.53977966]
[-121.39414215 -141.97221375]
[-133.15136719 -139.94555664]
[-144.50276184 -143.28489685]
[-153.14494324 -151.22233582]
[-157.36422729 -162.06629944]
[-156.37612915 -173.56156921]
[-168.79145813 -181.97938538]
[-181.20680237 -190.39718628]
[-193.62213135 -198.81498718]
[-206.03746033 -207.23280334]
[-218.45280457 -215.65060425]
[-230.86813354 -224.06840515]
[-249.24493408 -224.95498657]
[-256.30804443 -241.00375366]
[-268.87332153 -249.19602966]
[-281.90454102 -241.24932861]
[-297.09405518 -239.75219727]
[-311.42596436 -245.00186157]
[-322.05468750 -255.95600891]
[-326.86984253 -270.43969727]
[-324.91537476 -285.57714844]
[-316.57940674 -298.36285400]
[-303.51699829 -306.25817871]
[-288.32168579 -307.69549561]
[-274.01055908 -302.38943481]
[-263.42507935 -291.39349365]
[-258.66699219 -276.89096069]
[-260.68103027 -261.76132202]
[-248.11575317 -253.56903076]
[-236.19593811 -255.75294495]
[-225.65303040 -249.00129700]
[-222.45033264 -236.48374939]
[-210.03500366 -228.06593323]
[-197.61965942 -219.64813232]
[-185.20433044 -211.23033142]
[-172.78898621 -202.81251526]
[-160.37365723 -194.39471436]
[-147.95832825 -185.97691345]
[-145.49583435 -187.71803284]
[-142.84414673 -189.15467834]
[-140.04074097 -190.26655579]
[-140.31155396 -205.26411438]
[-140.58236694 -220.26167297]
[-140.85317993 -235.25921631]
[-144.14633179 -243.81733704]
[-140.99102783 -250.52941895]
[-140.99102783 -265.52941895]
[-147.03736877 -281.36856079]
[-133.49102783 -291.56332397]
[-119.94469452 -281.36856079]
[-125.99102783 -265.52941895]
[-125.99102783 -250.52941895]
[-125.85562134 -235.53002930]
[-125.58480835 -220.53248596]
[-125.31399536 -205.53492737]
[-125.04318237 -190.53736877]
[-107.80216980 -175.16882324]
[-109.96171570 -151.68299866]
[-100.25091553 -140.25056458]
[-90.54012299 -128.81814575]
[-80.82933044 -117.38571167]
[-71.11853790 -105.95327759]
[-61.40774155 -94.52085114]
[-51.69694901 -83.08841705]
[-37.56040955 -78.39719391]
[-34.52344513 -62.87020493]
[-24.81264877 -51.43777466]
[-15.10185528 -40.00534439]
[-5.39106083 -28.57291412]
[4.42254305 -17.22861290]
[14.33815765 -5.97336483]
[24.25377274 5.28188229]
[34.16938782 16.53713036]
[50.43852997 14.47008228]
[64.88474274 22.57787514]
[71.73116302 37.84491730]
[68.10553741 54.34923935]
[78.22274017 65.42363739]
[88.33994293 76.49803162]
[98.45714569 87.57242584]
[123.19196320 86.08695984]
[137.78067017 89.57546997]
[152.36936951 93.06398010]
[166.95808411 96.55249023]
[181.54678345 100.04100037]
[196.13548279 103.52951813]
[210.72419739 107.01802826]
[222.12597656 100.93972015]
[234.22164917 104.16962433]
[240.64895630 114.44293976]
[255.17230225 118.19426727]
[269.69564819 121.94559479]
[283.19958496 114.18151093]
[297.87487793 118.19277954]
[305.19354248 131.11457825]
[319.71688843 134.86590576]
[334.24023438 138.61724854]
[349.88827515 133.71102905]
[361.77642822 145.00721741]
[357.67517090 160.88523865]
[341.80355835 165.01116943]
[330.48889160 153.14057922]
[315.96554565 149.38925171]
[301.44219971 145.63792419]
[288.78121948 153.39906311]
[273.99905396 149.80155945]
[265.94430542 136.46893311]
[251.42095947 132.71760559]
[236.89762878 128.96627808]
[220.28501892 134.57621765]
[207.23567200 121.60672760]
[192.64697266 118.11821747]
[178.05827332 114.62970734]
[163.46957397 111.14119720]
[148.88085938 107.65268707]
[134.29216003 104.16416931]
[119.70345306 100.67565918]
[108.27102661 110.38645172]
[109.35339355 125.34735107]
[110.43575287 140.30825806]
[113.26243591 155.03950500]
[117.79454041 169.33845520]
[122.32665253 183.63740540]
[126.85875702 197.93635559]
[131.39085388 212.23530579]
[143.85659790 222.89071655]
[140.59599304 238.96244812]
[124.96328735 243.91728210]
[113.04006195 232.65812683]
[117.09191132 216.76742554]
[112.55980682 202.46846008]
[108.02769470 188.16950989]
[103.49559021 173.87055969]
[98.96348572 159.57160950]
[94.93395233 174.02024841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 158]
[13 157]
[14 156]
[15 118]
[16 117]
[17 116]
[18 115]
[23 111]
[24 110]
[25 109]
[26 108]
[28 107]
[29 106]
[30 105]
[31 104]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[39 96]
[44 76]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[50 70]
[52 67]
[53 66]
[79 94]
[80 93]
[81 92]
[82 91]
[84 90]
[85 89]
[119 155]
[120 154]
[121 153]
[122 152]
[123 151]
[124 150]
[125 149]
[128 147]
[129 146]
[130 145]
[133 142]
[134 141]
[135 140]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
