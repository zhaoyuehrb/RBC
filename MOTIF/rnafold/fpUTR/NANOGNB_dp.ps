%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NANOGNB)
} def

/sequence { (\
AUCUACCUUAUCUGGUCGGUCAUCUCUGUAACCUCCCUACCAAGGACUAAUUGGUCUUUAAAACUCCUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.009458688 ubox
1 16 0.017868807 ubox
1 20 0.400054698 ubox
1 23 0.013301173 ubox
1 29 0.005532687 ubox
1 51 0.006052921 ubox
1 55 0.011059528 ubox
2 10 0.010549144 ubox
2 15 0.019563844 ubox
2 19 0.443437107 ubox
2 22 0.013467690 ubox
2 28 0.005251370 ubox
2 46 0.005821961 ubox
2 50 0.006790797 ubox
2 54 0.012048237 ubox
3 14 0.021293057 ubox
3 15 0.017309979 ubox
3 18 0.477005534 ubox
3 19 0.141172304 ubox
3 44 0.016821413 ubox
3 45 0.005699091 ubox
3 53 0.012920295 ubox
3 54 0.018004015 ubox
4 10 0.022829555 ubox
4 14 0.017457939 ubox
4 18 0.141192958 ubox
4 30 0.009643276 ubox
4 39 0.009666988 ubox
4 43 0.016790131 ubox
4 44 0.005105512 ubox
4 49 0.016458944 ubox
4 53 0.018132643 ubox
4 60 0.016987685 ubox
5 9 0.021433289 ubox
5 13 0.017776023 ubox
5 16 0.693709508 ubox
5 20 0.032665019 ubox
5 29 0.009777812 ubox
5 38 0.009476229 ubox
5 48 0.015676978 ubox
5 52 0.017444755 ubox
5 55 0.048983132 ubox
5 59 0.013007189 ubox
6 15 0.726584485 ubox
6 19 0.035271273 ubox
6 28 0.009539046 ubox
6 45 0.133413826 ubox
6 54 0.052934710 ubox
7 14 0.726635796 ubox
7 15 0.022172701 ubox
7 18 0.035234209 ubox
7 44 0.148320880 ubox
7 45 0.010454615 ubox
7 53 0.052856842 ubox
7 54 0.006300892 ubox
8 14 0.022494813 ubox
8 15 0.004599744 ubox
8 31 0.014007352 ubox
8 43 0.148255111 ubox
8 44 0.011241677 ubox
8 50 0.025546024 ubox
8 53 0.005888383 ubox
8 54 0.006598118 ubox
8 61 0.027940415 ubox
8 62 0.015680132 ubox
8 63 0.012240234 ubox
9 14 0.004978656 ubox
9 30 0.016429356 ubox
9 39 0.049191049 ubox
9 42 0.131964317 ubox
9 43 0.013337379 ubox
9 44 0.003522600 ubox
9 49 0.029725515 ubox
9 53 0.008733875 ubox
9 60 0.030414481 ubox
9 61 0.016237322 ubox
9 62 0.013412568 ubox
10 16 0.006095306 ubox
10 20 0.007751368 ubox
10 29 0.016585676 ubox
10 38 0.051405662 ubox
10 48 0.029174287 ubox
10 51 0.020357844 ubox
10 52 0.013473858 ubox
10 55 0.006531417 ubox
10 59 0.027368646 ubox
11 15 0.005827931 ubox
11 19 0.008174683 ubox
11 28 0.015922653 ubox
11 45 0.022232558 ubox
11 46 0.027237619 ubox
11 50 0.020164454 ubox
11 54 0.006302312 ubox
12 18 0.008517232 ubox
12 19 0.003870605 ubox
12 44 0.057435629 ubox
12 45 0.027298995 ubox
12 53 0.006540450 ubox
12 54 0.017604656 ubox
13 18 0.003656120 ubox
13 22 0.012045283 ubox
13 28 0.003356563 ubox
13 30 0.005275158 ubox
13 39 0.054108305 ubox
13 42 0.358496775 ubox
13 43 0.041846487 ubox
13 44 0.019417431 ubox
13 49 0.036349488 ubox
13 53 0.017731351 ubox
13 60 0.005233918 ubox
13 70 0.009635268 ubox
14 21 0.013003360 ubox
14 24 0.009505681 ubox
14 25 0.014462330 ubox
14 26 0.004908421 ubox
14 27 0.006851620 ubox
14 29 0.005004127 ubox
14 33 0.292960930 ubox
14 34 0.005637252 ubox
14 35 0.012284910 ubox
14 36 0.157757803 ubox
14 37 0.345439573 ubox
14 38 0.044599086 ubox
14 41 0.474475952 ubox
14 48 0.038132720 ubox
14 52 0.018608137 ubox
14 56 0.003241648 ubox
14 65 0.015309853 ubox
14 66 0.005411981 ubox
14 67 0.026423937 ubox
14 68 0.004806273 ubox
14 69 0.012208783 ubox
15 20 0.008824495 ubox
15 23 0.009457451 ubox
15 24 0.015203330 ubox
15 26 0.007104457 ubox
15 29 0.009916597 ubox
15 32 0.293451687 ubox
15 33 0.005682482 ubox
15 34 0.010316909 ubox
15 35 0.158560320 ubox
15 36 0.345673651 ubox
15 37 0.044439077 ubox
15 40 0.474680091 ubox
15 47 0.038285614 ubox
15 51 0.019224062 ubox
15 64 0.017019480 ubox
15 65 0.003181346 ubox
15 66 0.026206932 ubox
15 67 0.005975316 ubox
15 68 0.009202351 ubox
16 22 0.009271029 ubox
16 31 0.275541629 ubox
16 39 0.466858720 ubox
16 46 0.037983595 ubox
16 50 0.019209246 ubox
16 54 0.004214707 ubox
16 63 0.016174907 ubox
17 28 0.354472746 ubox
17 45 0.035900322 ubox
17 53 0.006794332 ubox
18 24 0.020630215 ubox
18 25 0.037376912 ubox
18 26 0.028294237 ubox
18 27 0.362597900 ubox
18 33 0.604787283 ubox
18 34 0.014492635 ubox
18 35 0.020605018 ubox
18 36 0.178647077 ubox
18 37 0.405678935 ubox
18 38 0.038759404 ubox
18 41 0.139013735 ubox
18 48 0.030190946 ubox
18 52 0.006194893 ubox
18 56 0.008913605 ubox
18 57 0.005250188 ubox
18 65 0.015498131 ubox
18 66 0.005808974 ubox
18 67 0.032932914 ubox
18 68 0.004307886 ubox
18 69 0.006107761 ubox
19 23 0.013574238 ubox
19 24 0.044802473 ubox
19 25 0.021689939 ubox
19 26 0.362913191 ubox
19 29 0.021552650 ubox
19 32 0.606112747 ubox
19 33 0.016541205 ubox
19 34 0.015227884 ubox
19 35 0.181589796 ubox
19 36 0.402818178 ubox
19 37 0.039018241 ubox
19 40 0.139281966 ubox
19 47 0.032771387 ubox
19 51 0.006054241 ubox
19 55 0.008544131 ubox
19 56 0.006078962 ubox
19 64 0.018170715 ubox
19 65 0.003405660 ubox
19 66 0.032834544 ubox
19 67 0.005201901 ubox
19 68 0.004560525 ubox
20 28 0.008402310 ubox
20 31 0.585160923 ubox
20 39 0.131019423 ubox
20 46 0.032722856 ubox
20 50 0.005841049 ubox
20 54 0.011342865 ubox
20 63 0.017307242 ubox
21 28 0.340174426 ubox
21 45 0.032002094 ubox
21 53 0.014021561 ubox
22 27 0.298173024 ubox
22 29 0.397689454 ubox
22 52 0.013819272 ubox
22 55 0.012879494 ubox
23 28 0.374090901 ubox
23 45 0.009754533 ubox
23 46 0.010140653 ubox
23 54 0.013495848 ubox
24 44 0.050800565 ubox
24 45 0.010948532 ubox
24 53 0.013960531 ubox
24 54 0.004427462 ubox
25 43 0.051504426 ubox
25 44 0.009478927 ubox
25 45 0.004970653 ubox
25 46 0.004935437 ubox
25 53 0.004128036 ubox
25 54 0.004754264 ubox
26 44 0.017660891 ubox
26 45 0.005261727 ubox
26 53 0.006179603 ubox
26 54 0.008148772 ubox
27 39 0.009857209 ubox
27 42 0.032236078 ubox
27 43 0.016903549 ubox
27 44 0.005208353 ubox
27 49 0.003284040 ubox
27 53 0.008104466 ubox
27 60 0.006961351 ubox
27 70 0.014058658 ubox
28 38 0.010674152 ubox
28 40 0.191219842 ubox
28 41 0.034318468 ubox
28 47 0.016463007 ubox
28 51 0.004988853 ubox
28 52 0.006843690 ubox
28 59 0.006186969 ubox
28 64 0.025189623 ubox
28 69 0.018423427 ubox
29 39 0.193276445 ubox
29 46 0.015461242 ubox
29 49 0.007655258 ubox
29 50 0.005051643 ubox
29 53 0.003538498 ubox
29 60 0.010003075 ubox
29 63 0.024394979 ubox
30 38 0.189269764 ubox
30 48 0.007717381 ubox
30 52 0.004029540 ubox
30 59 0.009990215 ubox
31 51 0.003861280 ubox
31 55 0.030594323 ubox
31 58 0.007913781 ubox
32 45 0.030963823 ubox
32 54 0.032334773 ubox
33 44 0.033069765 ubox
33 53 0.032332101 ubox
34 43 0.032917040 ubox
34 46 0.037423033 ubox
35 44 0.007371209 ubox
35 45 0.038415377 ubox
36 44 0.037644230 ubox
36 45 0.062367028 ubox
36 54 0.005547348 ubox
37 44 0.067948027 ubox
37 45 0.004157742 ubox
37 53 0.005576038 ubox
38 43 0.065454019 ubox
38 44 0.004496361 ubox
38 60 0.049823236 ubox
39 55 0.185505129 ubox
39 59 0.042058807 ubox
40 54 0.200522384 ubox
41 53 0.200659869 ubox
42 52 0.199816424 ubox
42 58 0.033395112 ubox
42 59 0.785224798 ubox
43 51 0.195894062 ubox
43 52 0.010575485 ubox
43 57 0.035897865 ubox
43 58 0.907388465 ubox
43 59 0.038149324 ubox
43 65 0.008077966 ubox
43 68 0.055173819 ubox
44 51 0.014051555 ubox
44 56 0.028054056 ubox
44 57 0.950913662 ubox
44 58 0.029753297 ubox
44 59 0.004606901 ubox
44 64 0.007944118 ubox
44 67 0.058389313 ubox
45 55 0.014948205 ubox
45 56 0.962417641 ubox
45 57 0.003631601 ubox
45 66 0.058145635 ubox
46 51 0.003289632 ubox
46 55 0.964257777 ubox
46 65 0.055182081 ubox
46 68 0.003211112 ubox
47 54 0.964387979 ubox
48 53 0.902188143 ubox
48 60 0.025758326 ubox
49 58 0.005717197 ubox
49 59 0.026885305 ubox
50 57 0.005599372 ubox
50 58 0.026573945 ubox
51 61 0.033274460 ubox
51 62 0.021090238 ubox
51 63 0.007127178 ubox
52 60 0.035865973 ubox
52 61 0.022938610 ubox
52 62 0.007984971 ubox
52 70 0.010515427 ubox
53 59 0.035370842 ubox
53 65 0.032983289 ubox
53 66 0.009306347 ubox
53 67 0.081816270 ubox
53 68 0.005851043 ubox
53 69 0.013149971 ubox
54 58 0.023048306 ubox
54 64 0.037342768 ubox
54 65 0.004706478 ubox
54 66 0.081861752 ubox
54 67 0.007340832 ubox
54 68 0.010086171 ubox
55 63 0.036332154 ubox
57 63 0.041518627 ubox
58 62 0.035494853 ubox
1 20 0.9500000 lbox
2 19 0.9500000 lbox
3 18 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
