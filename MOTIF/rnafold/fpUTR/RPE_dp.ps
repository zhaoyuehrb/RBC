%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPE)
} def

/sequence { (\
ACGGAGAAGGGGCGGGGCCAAAACUGCGCGCCCAAUCGGGGUGACGCUCUAGCCUUGCCGGGGACUCGUGGGUAACUUGCUUUUGGGAGCCAGCGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.181762613 ubox
1 73 0.008653945 ubox
1 97 0.054022331 ubox
2 14 0.005618957 ubox
2 38 0.004979662 ubox
2 60 0.037902159 ubox
2 68 0.192861368 ubox
2 70 0.118688311 ubox
2 72 0.008871884 ubox
2 85 0.004236168 ubox
2 95 0.209320564 ubox
2 96 0.062121043 ubox
3 13 0.005759428 ubox
3 37 0.004880020 ubox
3 54 0.006121422 ubox
3 59 0.033412022 ubox
3 66 0.090344779 ubox
3 67 0.173225091 ubox
3 69 0.105992777 ubox
3 84 0.003895790 ubox
3 91 0.018109252 ubox
3 94 0.207848725 ubox
4 36 0.004262570 ubox
4 37 0.010028889 ubox
4 53 0.006114324 ubox
4 58 0.032115099 ubox
4 65 0.109226083 ubox
4 66 0.133892437 ubox
4 67 0.413750117 ubox
4 82 0.004128577 ubox
4 83 0.003446213 ubox
4 90 0.017838422 ubox
5 25 0.003516268 ubox
5 36 0.010134721 ubox
5 66 0.438791464 ubox
5 81 0.004351722 ubox
5 82 0.003217481 ubox
5 84 0.005917154 ubox
6 24 0.003577392 ubox
6 37 0.006639331 ubox
6 56 0.007257939 ubox
6 65 0.444061899 ubox
6 67 0.014517011 ubox
6 80 0.004446720 ubox
6 83 0.006761263 ubox
6 84 0.003659745 ubox
7 36 0.006589793 ubox
7 55 0.005437748 ubox
7 56 0.022299613 ubox
7 66 0.014714836 ubox
7 82 0.006939943 ubox
7 83 0.004129464 ubox
8 55 0.022575059 ubox
8 56 0.014857807 ubox
8 66 0.016988227 ubox
8 81 0.007008279 ubox
8 82 0.004295044 ubox
9 32 0.008259347 ubox
9 33 0.011654204 ubox
9 49 0.003304567 ubox
9 50 0.004414900 ubox
9 54 0.022748196 ubox
9 55 0.016344549 ubox
9 56 0.032362728 ubox
9 59 0.007977953 ubox
9 65 0.019243274 ubox
9 66 0.022573621 ubox
9 67 0.003415781 ubox
9 80 0.006995963 ubox
9 81 0.004385507 ubox
9 91 0.023777424 ubox
10 31 0.008281688 ubox
10 32 0.011664695 ubox
10 33 0.006385863 ubox
10 49 0.004584279 ubox
10 53 0.022590325 ubox
10 54 0.016242860 ubox
10 55 0.043379718 ubox
10 58 0.005458054 ubox
10 59 0.061416958 ubox
10 65 0.025908640 ubox
10 66 0.003894781 ubox
10 80 0.004398521 ubox
10 90 0.023592719 ubox
10 91 0.003168829 ubox
11 19 0.021799794 ubox
11 31 0.011653720 ubox
11 32 0.006396175 ubox
11 48 0.004642332 ubox
11 53 0.015879508 ubox
11 54 0.044885774 ubox
11 58 0.043633857 ubox
11 59 0.994885089 ubox
12 18 0.021833380 ubox
12 27 0.005572060 ubox
12 29 0.014388369 ubox
12 31 0.006394490 ubox
12 47 0.004659304 ubox
12 53 0.045053711 ubox
12 58 0.997100620 ubox
13 17 0.021676237 ubox
13 26 0.005635353 ubox
13 28 0.014404600 ubox
13 30 0.006393002 ubox
13 46 0.004648803 ubox
13 52 0.045190336 ubox
13 57 0.998305614 ubox
14 25 0.008429343 ubox
14 27 0.014444237 ubox
14 29 0.006324373 ubox
14 45 0.004453680 ubox
14 50 0.033092324 ubox
14 55 0.003387438 ubox
14 56 0.995079661 ubox
15 24 0.008718444 ubox
15 25 0.004870358 ubox
15 49 0.036470740 ubox
15 50 0.027052604 ubox
15 54 0.004247234 ubox
15 55 0.997315320 ubox
16 24 0.005333701 ubox
16 25 0.014718647 ubox
16 48 0.036293178 ubox
16 49 0.029187328 ubox
16 50 0.003789615 ubox
16 53 0.003728234 ubox
16 54 0.998417526 ubox
17 24 0.014865590 ubox
17 27 0.006726945 ubox
17 47 0.034568515 ubox
17 48 0.028264753 ubox
17 49 0.003878693 ubox
17 53 0.998421795 ubox
18 26 0.006462077 ubox
18 46 0.033925889 ubox
18 52 0.996921300 ubox
19 26 0.011237357 ubox
20 25 0.016264511 ubox
23 42 0.010743415 ubox
24 41 0.010805126 ubox
24 52 0.012121423 ubox
25 40 0.010714434 ubox
25 46 0.022706891 ubox
25 51 0.023764202 ubox
26 45 0.028719685 ubox
26 47 0.997462570 ubox
26 50 0.003747601 ubox
27 38 0.010735403 ubox
27 43 0.050792998 ubox
27 46 0.998036155 ubox
28 37 0.010628400 ubox
28 42 0.050973172 ubox
28 45 0.997693352 ubox
29 41 0.051090965 ubox
29 43 0.997637252 ubox
30 42 0.997809514 ubox
31 39 0.019403983 ubox
31 40 0.075204719 ubox
31 41 0.996777349 ubox
32 38 0.019341849 ubox
32 39 0.092385288 ubox
32 40 0.995325817 ubox
32 41 0.004178756 ubox
33 38 0.106671172 ubox
33 39 0.993136425 ubox
33 40 0.005775144 ubox
37 57 0.005387883 ubox
38 50 0.005935264 ubox
38 55 0.006688371 ubox
38 56 0.009015526 ubox
39 49 0.006367175 ubox
39 54 0.007472086 ubox
39 55 0.010677262 ubox
40 48 0.006377478 ubox
40 53 0.007472880 ubox
40 54 0.010905083 ubox
40 59 0.003967532 ubox
41 47 0.006394061 ubox
41 53 0.010906807 ubox
41 58 0.003983462 ubox
42 46 0.005982770 ubox
42 51 0.007433257 ubox
42 52 0.010664291 ubox
42 57 0.003985560 ubox
43 49 0.005142145 ubox
43 50 0.006625325 ubox
43 56 0.003977217 ubox
44 48 0.004507556 ubox
44 55 0.003972598 ubox
46 53 0.004307447 ubox
47 52 0.004334771 ubox
52 97 0.003551397 ubox
53 96 0.003794984 ubox
54 95 0.003739683 ubox
55 96 0.004108056 ubox
56 95 0.008404741 ubox
57 94 0.012377046 ubox
57 97 0.042537934 ubox
58 93 0.012394760 ubox
58 96 0.051076259 ubox
59 95 0.059406475 ubox
60 66 0.025328981 ubox
60 67 0.012539910 ubox
60 77 0.036159773 ubox
60 78 0.007652570 ubox
60 91 0.108780176 ubox
60 94 0.117486925 ubox
61 65 0.028965593 ubox
61 66 0.011614820 ubox
61 67 0.008549471 ubox
61 76 0.039208911 ubox
61 77 0.008859734 ubox
61 90 0.105813461 ubox
61 91 0.514678462 ubox
62 66 0.006431739 ubox
62 76 0.009053649 ubox
62 90 0.515843634 ubox
62 91 0.229737609 ubox
63 90 0.230144798 ubox
64 73 0.041211482 ubox
64 97 0.360637355 ubox
65 71 0.003528256 ubox
65 72 0.041333539 ubox
65 86 0.022942419 ubox
65 87 0.531330664 ubox
65 89 0.221489787 ubox
65 96 0.391783351 ubox
66 70 0.003397111 ubox
66 71 0.037996701 ubox
66 85 0.011624800 ubox
66 86 0.531538913 ubox
66 87 0.009996712 ubox
66 88 0.221480057 ubox
66 95 0.078794026 ubox
66 96 0.419984680 ubox
67 71 0.004860751 ubox
67 85 0.531958304 ubox
67 86 0.013247045 ubox
67 87 0.221221829 ubox
67 95 0.673725662 ubox
68 76 0.036314418 ubox
68 80 0.030315522 ubox
68 84 0.522909809 ubox
68 94 0.765663496 ubox
69 75 0.036318963 ubox
69 79 0.030258161 ubox
69 85 0.170730290 ubox
69 92 0.068407645 ubox
69 93 0.728489689 ubox
69 95 0.016817494 ubox
70 77 0.040822815 ubox
70 78 0.031367396 ubox
70 81 0.055948736 ubox
70 82 0.546085442 ubox
70 83 0.016104353 ubox
70 84 0.086179096 ubox
70 91 0.072328933 ubox
70 94 0.026941333 ubox
71 76 0.045824953 ubox
71 77 0.032128477 ubox
71 78 0.003902254 ubox
71 80 0.057117846 ubox
71 81 0.568581449 ubox
71 82 0.015452952 ubox
71 83 0.052756120 ubox
71 90 0.064927813 ubox
71 91 0.789833523 ubox
72 76 0.031631089 ubox
72 77 0.003439349 ubox
72 80 0.572278514 ubox
72 81 0.007605313 ubox
72 82 0.042667629 ubox
72 83 0.003295381 ubox
72 90 0.794650770 ubox
72 94 0.019949363 ubox
72 97 0.005016226 ubox
73 79 0.568853236 ubox
73 89 0.793238664 ubox
73 93 0.016343506 ubox
73 96 0.008370162 ubox
74 78 0.473461364 ubox
74 82 0.005022768 ubox
74 83 0.005390078 ubox
74 84 0.004518991 ubox
75 81 0.005120027 ubox
75 82 0.004916252 ubox
75 83 0.004200859 ubox
75 97 0.044312729 ubox
76 86 0.775079314 ubox
76 87 0.171456043 ubox
76 89 0.041498839 ubox
76 93 0.101923425 ubox
76 96 0.048931689 ubox
77 85 0.766214689 ubox
77 86 0.171018291 ubox
77 87 0.010918352 ubox
77 88 0.046364262 ubox
77 89 0.011511432 ubox
77 92 0.101207760 ubox
77 93 0.015746447 ubox
77 95 0.036415985 ubox
77 96 0.045734402 ubox
78 85 0.159112981 ubox
78 86 0.012129890 ubox
78 87 0.045890932 ubox
78 88 0.031305768 ubox
78 92 0.023852689 ubox
78 95 0.068154378 ubox
79 84 0.087910359 ubox
79 90 0.117069372 ubox
79 91 0.017847507 ubox
79 94 0.080733248 ubox
79 97 0.084550742 ubox
80 86 0.035793408 ubox
80 87 0.008768533 ubox
80 89 0.118741206 ubox
80 93 0.080548724 ubox
80 96 0.091394241 ubox
81 85 0.032437987 ubox
81 86 0.008229529 ubox
81 88 0.117815101 ubox
81 89 0.003176776 ubox
81 92 0.060585529 ubox
81 95 0.090584017 ubox
82 86 0.003995113 ubox
82 87 0.108979921 ubox
82 88 0.007265181 ubox
82 89 0.006811549 ubox
82 92 0.003673615 ubox
82 95 0.003443378 ubox
83 87 0.007402706 ubox
83 88 0.006620730 ubox
83 89 0.005102226 ubox
83 92 0.004052465 ubox
83 93 0.091625907 ubox
83 96 0.004781863 ubox
84 88 0.004372471 ubox
84 92 0.111731526 ubox
84 95 0.006517959 ubox
85 91 0.123832706 ubox
85 94 0.007385234 ubox
86 90 0.121848408 ubox
89 97 0.031642879 ubox
90 96 0.034536194 ubox
91 95 0.034383732 ubox
11 59 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
61 91 0.9500000 lbox
62 90 0.9500000 lbox
65 87 0.9500000 lbox
66 86 0.9500000 lbox
67 85 0.9500000 lbox
68 84 0.9500000 lbox
70 82 0.9500000 lbox
71 81 0.9500000 lbox
72 80 0.9500000 lbox
73 79 0.9500000 lbox
74 78 0.9500000 lbox
showpage
end
%%EOF
