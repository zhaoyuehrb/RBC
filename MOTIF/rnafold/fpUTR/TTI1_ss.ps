%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUAGCGCGUCACUUCCGGCGAGGCAGAGGAGGCGGGAGAGUGAGAGAAAGGCUGGAAGACGAGACCUGCUCACUCUGUCACCGAGGCUAGAGUACAGUGGCACAAUCACAGCUCAUUGCAGCCUCAACCUCCCAGGCUCAAUCGAUCCUUCCAACUGAGCCUCCCUAGCAGCUGGGACUAUUAGUGCACACCACCACACCUAGCCUGCAGGAUGUUUCCUCAAUGAGGGGAAGGCUGCUGCACA\
) } def
/len { sequence length } bind def

/coor [
[62.96994019 361.25598145]
[48.28633499 356.52362061]
[38.50987625 344.58944702]
[36.76019287 329.26162720]
[43.59560776 315.43118286]
[56.83496475 307.51141357]
[57.21649170 292.51626587]
[57.50265121 277.51898193]
[57.69343185 262.52020264]
[57.88421249 247.52140808]
[47.69607544 239.65524292]
[43.83411407 227.17311096]
[47.91944504 214.55773926]
[58.67613983 206.47531128]
[59.05766678 191.48016357]
[59.43919754 176.48501587]
[59.82072449 161.48986816]
[60.20225525 146.49472046]
[76.48718262 75.21719360]
[62.60176468 69.54310608]
[53.49815369 69.19718933]
[48.57657242 63.70753479]
[34.76444626 57.85730362]
[20.95232201 52.00706863]
[7.14019823 46.15683746]
[0.76049054 53.26326370]
[-7.62687635 58.21520615]
[-17.30129242 60.45475006]
[-27.39068222 59.66294098]
[-36.95008087 55.79950333]
[-45.05010986 49.11700058]
[-50.86708069 40.14706421]
[-53.76601410 29.65914536]
[-68.71478271 30.89783669]
[-81.82888031 39.74831772]
[-95.15161896 33.08845520]
[-110.10038757 34.32714462]
[-123.21448517 43.17762756]
[-136.53723145 36.51776505]
[-151.48599243 37.75645447]
[-166.43476868 38.99514389]
[-181.38352966 40.23383331]
[-196.33229065 41.47252655]
[-211.28106689 42.71121597]
[-226.22982788 43.94990540]
[-241.17860413 45.18859482]
[-246.23750305 53.09564590]
[-254.24118042 57.73200226]
[-263.34274292 58.17329025]
[-271.50750732 54.44688034]
[-276.96783447 47.49790192]
[-291.95297241 48.16542816]
[-306.93811035 48.83295441]
[-321.91870117 49.59576797]
[-336.89413452 50.45383072]
[-345.16818237 63.58089447]
[-359.59036255 69.30627441]
[-374.61508179 65.42844391]
[-384.46499634 53.43851089]
[-385.35266113 37.94684601]
[-376.93667603 24.91031075]
[-362.45324707 19.34172058]
[-347.47146606 23.38231087]
[-337.75219727 35.47839355]
[-322.77676392 34.62033081]
[-316.29415894 31.10832024]
[-307.60562134 33.84781647]
[-292.62048340 33.18029022]
[-277.63534546 32.51276398]
[-261.23709106 19.96008301]
[-242.41729736 30.23982811]
[-227.46852112 29.00113869]
[-212.51976013 27.76244736]
[-197.57098389 26.52375793]
[-182.62222290 25.28506851]
[-167.67344666 24.04637718]
[-152.72468567 22.80768776]
[-137.77592468 21.56899643]
[-125.73105621 12.80711365]
[-111.33908081 19.37837791]
[-96.39031219 18.13968849]
[-84.34545135 9.37780476]
[-69.95346832 15.94906902]
[-55.00470352 14.71037865]
[-47.53225708 1.70412827]
[-53.99135971 -11.83396626]
[-60.45046234 -25.37206078]
[-66.90956116 -38.91015625]
[-73.36866760 -52.44824982]
[-79.82776642 -65.98634338]
[-99.15655518 -77.34580994]
[-96.49420166 -98.83232117]
[-103.63341522 -112.02442169]
[-110.77262115 -125.21652985]
[-117.91183472 -138.40863037]
[-128.47006226 -140.89537048]
[-135.77587891 -148.61390686]
[-137.60198975 -158.86103821]
[-133.58479309 -168.22502136]
[-140.38615417 -181.59445190]
[-147.18751526 -194.96386719]
[-153.98887634 -208.33329773]
[-168.73696899 -214.64779663]
[-172.85630798 -230.15298462]
[-163.18685913 -242.95460510]
[-147.14620972 -243.23234558]
[-137.03936768 -230.77314758]
[-140.61944580 -215.13465881]
[-133.81808472 -201.76522827]
[-127.01673126 -188.39579773]
[-120.21537018 -175.02638245]
[-103.27804565 -165.67008972]
[-104.71972656 -145.54785156]
[-97.58051300 -132.35574341]
[-90.44130707 -119.16363525]
[-83.30209351 -105.97152710]
[-75.49734497 -105.38933563]
[-68.46867371 -101.73873138]
[-63.38492584 -95.54371643]
[-61.12389374 -87.75773621]
[-62.12142563 -79.61724854]
[-66.28967285 -72.44544983]
[-59.83057022 -58.90735245]
[-53.37146759 -45.36925888]
[-46.91236496 -31.83116341]
[-40.45326614 -18.29306793]
[-33.99416351 -4.75497293]
[-8.72308445 -5.76108170]
[9.78245258 9.67052555]
[12.99043083 32.34471130]
[26.80255508 38.19494629]
[40.61468124 44.04517746]
[54.42680359 49.89541245]
[68.27585602 55.65768814]
[82.16127014 61.33177567]
[96.67855835 57.55709457]
[106.04155731 45.83812714]
[115.40455627 34.11915588]
[124.76755524 22.40018463]
[134.13055420 10.68121338]
[143.49354553 -1.03775787]
[152.85655212 -12.75672817]
[148.15159607 -29.01531029]
[154.01469421 -44.71557999]
[167.94566345 -53.72968674]
[184.33778381 -52.66609573]
[193.55097961 -64.50320435]
[195.26628113 -80.81240082]
[210.35609436 -87.23339844]
[223.29733276 -77.16083527]
[220.77714539 -60.95649338]
[205.38809204 -55.29001236]
[196.17489624 -43.45290756]
[201.05036926 -31.03831863]
[199.14550781 -17.72814178]
[190.85130310 -7.00826025]
[178.24606323 -1.73931170]
[164.57551575 -3.39373112]
[155.21252441 8.32524014]
[145.84951782 20.04421043]
[136.48652649 31.76318169]
[127.12352753 43.48215103]
[117.76052856 55.20112228]
[108.39752960 66.92009735]
[111.27867126 73.84461975]
[119.92208099 94.61819458]
[134.83450317 96.23670959]
[149.74693298 97.85522461]
[158.59199524 95.67343903]
[164.83830261 99.59033203]
[179.72892761 101.39838409]
[194.61956787 103.20642853]
[209.51019287 105.01448059]
[224.41203308 106.72779846]
[239.32444763 108.34631348]
[254.23687744 109.96482849]
[269.14929199 111.58334351]
[284.06173706 113.20185852]
[289.83688354 102.70657349]
[298.78012085 94.78851318]
[309.83361816 90.35313416]
[321.70046997 89.89583588]
[332.99661255 93.44667816]
[342.41247559 100.56964111]
[348.86456299 110.41597748]
[351.62036133 121.82533264]
[366.46020508 124.01154327]
[381.30001831 126.19775391]
[394.98226929 117.82068634]
[410.01272583 123.43011475]
[414.86123657 138.72296143]
[405.80850220 151.96786499]
[389.79898071 153.00447083]
[379.11380005 141.03758240]
[364.27398682 138.85136414]
[349.43414307 136.66516113]
[338.82086182 151.38452148]
[322.11755371 158.69248962]
[303.93457031 156.47712708]
[289.33914185 145.26829529]
[282.44320679 128.11428833]
[267.53079224 126.49576569]
[252.61836243 124.87725067]
[237.70593262 123.25873566]
[222.79351807 121.64022064]
[215.82127380 124.03733063]
[207.70214844 119.90511322]
[192.81150818 118.09706116]
[177.92088318 116.28901672]
[163.03024292 114.48096466]
[148.12841797 112.76764679]
[133.21598816 111.14913177]
[118.30356598 109.53061676]
[114.32198334 115.88648224]
[127.03371429 123.84964752]
[139.74530029 131.81301880]
[131.78172302 144.52449036]
[119.07054901 136.56137085]
[106.35881805 128.59820557]
[102.37723541 134.95407104]
[110.34040070 147.66580200]
[118.30356598 160.37751770]
[126.26673126 173.08924866]
[139.79933167 183.30223083]
[133.73168945 199.13320923]
[116.83969116 197.68513489]
[113.55500793 181.05241394]
[105.59184265 168.34068298]
[97.62867737 155.62896729]
[89.66551208 142.91723633]
[75.19740295 146.87625122]
[74.81587219 161.87139893]
[74.43434143 176.86654663]
[74.05281830 191.86169434]
[73.67128754 206.85684204]
[85.95573425 219.32710266]
[85.41912079 236.48530579]
[72.88299561 247.71218872]
[72.69221497 262.71096802]
[72.50144196 277.70977783]
[75.51577759 286.30679321]
[72.21163940 292.89779663]
[71.83010864 307.89294434]
[84.64958191 316.47573853]
[90.77281952 330.63589478]
[88.24591827 345.85488892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 243]
[7 242]
[8 240]
[9 239]
[10 238]
[14 235]
[15 234]
[16 233]
[17 232]
[18 231]
[19 135]
[20 134]
[22 133]
[23 132]
[24 131]
[25 130]
[33 84]
[34 83]
[36 81]
[37 80]
[39 78]
[40 77]
[41 76]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[51 69]
[52 68]
[53 67]
[54 65]
[55 64]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[92 116]
[93 115]
[94 114]
[95 113]
[99 111]
[100 110]
[101 109]
[102 108]
[136 164]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
[146 153]
[147 152]
[166 213]
[167 212]
[168 211]
[170 210]
[171 209]
[172 208]
[173 207]
[174 205]
[175 204]
[176 203]
[177 202]
[178 201]
[186 196]
[187 195]
[188 194]
[220 230]
[221 229]
[222 228]
[223 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
