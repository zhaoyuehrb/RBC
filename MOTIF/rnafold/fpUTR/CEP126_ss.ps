%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGGUUGUUGUCAAGAUGGCGGCUGCAGGGUUGCUGCCGCCCCAUCUGCUAUUGCCCGGCGAGGUCGCCGCUGCCUCAGCUGCCAUCGCCGCUACAGGCACCAGUGCCGCUGCGCGGGAGCUAGGGCUGUCGAGGCCAACCCUUCCGCGCCCGUGACGCGGGGCCUGAGAGACGGAGUGUAGGGAGGGGCCGAGCAGGAGGAGGAGGAAGCCGGAGCUGCCAUGAGGGAGGUUCUGGGGGCGAGCAGACAGGCG\
GCGCUGAAGUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[47.32309341 480.30880737]
[60.00347519 471.64257812]
[58.78758621 456.69195557]
[57.57170105 441.74130249]
[56.35581207 426.79067993]
[55.13992691 411.84002686]
[51.47875977 405.45114136]
[53.99762726 396.70919800]
[52.95513535 381.74545288]
[51.91264343 366.78173828]
[50.87015152 351.81799316]
[49.82765961 336.85427856]
[48.78516769 321.89053345]
[41.66306686 319.53985596]
[41.59332275 334.53970337]
[27.30602074 339.10839844]
[18.54606438 326.93206787]
[27.41886520 314.83850098]
[20.29676437 312.48782349]
[10.55173874 323.89111328]
[0.80671287 335.29437256]
[-8.93831348 346.69763184]
[-18.68333817 358.10089111]
[-28.42836571 369.50415039]
[-31.51186752 385.02197266]
[-45.66240692 389.67080688]
[-55.40743256 401.07406616]
[-65.15245819 412.47732544]
[-67.61201477 428.69097900]
[-82.97976685 434.41497803]
[-95.44668579 423.76098633]
[-92.18788147 407.68890381]
[-76.55572510 402.73229980]
[-66.81069946 391.32904053]
[-57.06567383 379.92578125]
[-54.67919922 365.22360229]
[-39.83163071 359.75912476]
[-30.08660507 348.35586548]
[-20.34157944 336.95260620]
[-10.59655285 325.54934692]
[-0.85152686 314.14608765]
[8.89349937 302.74279785]
[8.59101772 284.07269287]
[16.76117325 268.88427734]
[30.12346077 260.40866089]
[44.51036453 259.68496704]
[48.63006592 245.26177979]
[52.74976730 230.83860779]
[56.86946487 216.41542053]
[60.98916626 201.99224854]
[65.10886383 187.56906128]
[63.63206863 183.06156921]
[64.94594574 177.57891846]
[69.49487305 172.86134338]
[73.94783783 158.53755188]
[78.40080261 144.21376038]
[82.85377502 129.88996887]
[87.30673981 115.56616974]
[77.96410370 103.83095551]
[63.00667191 104.96016693]
[48.04923630 106.08937073]
[33.09180069 107.21858215]
[19.85971451 116.90589142]
[4.96541500 110.04354095]
[3.73087788 93.69093323]
[17.42609024 84.67021942]
[31.96259117 92.26114655]
[46.92002869 91.13193512]
[61.87746429 90.00273132]
[76.83489990 88.87351990]
[86.77673340 77.64142609]
[86.08142853 62.65755081]
[85.38611603 47.67367554]
[84.51715851 32.69886398]
[83.47467041 17.73513412]
[82.43217468 2.77140498]
[81.38968658 -12.19232464]
[80.34719086 -27.15605545]
[68.70523834 -37.50509262]
[67.86116791 -52.69529343]
[77.79913330 -63.73034286]
[76.75664520 -78.69406891]
[65.11468506 -89.04311371]
[64.27061462 -104.23331451]
[74.20858765 -115.26836395]
[73.16609955 -130.23208618]
[72.12360382 -145.19581604]
[62.93483734 -154.21369934]
[62.35602188 -166.67454529]
[70.15304565 -175.89338684]
[69.28408813 -190.86819458]
[68.41513062 -205.84300232]
[67.45938873 -220.81253052]
[66.41689301 -235.77626038]
[55.77521896 -250.82443237]
[64.12490082 -266.27713013]
[62.90901184 -281.22775269]
[61.69312286 -296.17840576]
[60.47723770 -311.12902832]
[59.26134872 -326.07968140]
[55.45856857 -334.34436035]
[58.11905289 -341.21051025]
[57.07655716 -356.17425537]
[48.39886093 -369.40332031]
[55.23291397 -382.63754272]
[54.19042206 -397.60125732]
[53.14793015 -412.56500244]
[44.47023392 -425.79406738]
[51.30428696 -439.02828979]
[50.26179504 -453.99203491]
[49.21930313 -468.95574951]
[38.57762909 -484.00393677]
[46.92730331 -499.45663452]
[45.71141815 -514.40728760]
[44.49553299 -529.35791016]
[43.27964401 -544.30853271]
[42.06375885 -559.25915527]
[40.84786987 -574.20983887]
[39.63198471 -589.16046143]
[38.41609573 -604.11108398]
[37.20021057 -619.06176758]
[23.42201233 -625.70318604]
[14.87447262 -638.26647949]
[13.77034473 -653.32128906]
[20.30628967 -666.81707764]
[32.63685608 -675.17309570]
[31.42097092 -690.12371826]
[30.20508385 -705.07440186]
[28.98919678 -720.02502441]
[17.74300003 -731.46630859]
[19.81921577 -747.37445068]
[33.62514877 -755.54608154]
[48.57006454 -749.71264648]
[53.18951035 -734.34906006]
[43.93983459 -721.24090576]
[45.15572357 -706.29028320]
[46.37160873 -691.33959961]
[47.58749771 -676.38897705]
[61.10622787 -670.13525391]
[69.73699951 -657.87286377]
[71.08000946 -642.83746338]
[64.67483521 -629.05810547]
[52.15084839 -620.27764893]
[53.36673737 -605.32696533]
[54.58262253 -590.37634277]
[55.79851151 -575.42572021]
[57.01439667 -560.47509766]
[58.23028564 -545.52441406]
[59.44617081 -530.57379150]
[60.66205597 -515.62316895]
[61.87794495 -500.67251587]
[70.87796021 -492.62387085]
[72.03258514 -480.20315552]
[64.18302917 -469.99826050]
[65.22552490 -455.03451538]
[66.26801300 -440.07080078]
[74.87114716 -427.91204834]
[68.11166382 -413.60748291]
[69.15415192 -398.64376831]
[70.19664764 -383.68002319]
[78.79977417 -371.52127075]
[72.04029083 -357.21673584]
[73.08277893 -342.25299072]
[74.21199036 -327.29556274]
[75.42787933 -312.34494019]
[76.64376068 -297.39428711]
[77.85964966 -282.44363403]
[79.07553864 -267.49301147]
[88.07554626 -259.44436646]
[89.23017883 -247.02365112]
[81.38062286 -236.81875610]
[82.42311859 -221.85502625]
[86.00997162 -215.42411804]
[83.38993835 -206.71195984]
[84.25889587 -191.73715210]
[85.12785339 -176.76234436]
[95.53958130 -162.61671448]
[87.08733368 -146.23831177]
[88.12982941 -131.27458191]
[89.17231750 -116.31085205]
[100.54444122 -106.76043701]
[101.81483459 -91.59993744]
[91.72037506 -79.73656464]
[92.76286316 -64.77283478]
[104.13498688 -55.22241592]
[105.40538788 -40.06191635]
[95.31092072 -28.19854736]
[96.35341644 -13.23481750]
[97.39590454 1.72891271]
[98.43840027 16.69264221]
[99.48088837 31.65637207]
[102.40547180 35.39071274]
[103.03879547 40.99290466]
[100.36999512 46.97836685]
[101.06529999 61.96224213]
[101.76060486 76.94612122]
[108.33407593 63.46318436]
[110.31124115 48.59406281]
[117.41692352 35.38386536]
[128.73358154 25.53839111]
[142.79991150 20.32895851]
[157.79959106 20.42824554]
[171.79573059 25.82343483]
[182.98104858 35.81785583]
[189.91123962 49.12096024]
[191.69139099 64.01495361]
[188.09165955 78.57661438]
[179.57687378 90.92563629]
[167.24650574 99.46742249]
[152.69276428 103.09899902]
[137.79373169 101.35105896]
[122.79386902 101.28689575]
[135.92672729 108.53452301]
[149.05958557 115.78215027]
[162.19242859 123.02977753]
[175.32528687 130.27740479]
[188.45814514 137.52503967]
[201.59100342 144.77267456]
[214.72384644 152.02029419]
[230.54470825 151.91400146]
[237.94926453 164.83770752]
[251.08210754 172.08532715]
[266.83227539 169.03381348]
[278.94412231 179.55439758]
[278.12646484 195.57659912]
[265.00656128 204.80955505]
[249.64886475 200.17053223]
[243.83448792 185.21818542]
[230.70162964 177.97055054]
[215.82012939 178.59524536]
[207.47622681 165.15315247]
[194.34336853 157.90551758]
[181.21051025 150.65789795]
[168.07765198 143.41026306]
[154.94480896 136.16262817]
[141.81195068 128.91500854]
[128.67909241 121.66738129]
[115.54624176 114.41974640]
[101.63053131 120.01913452]
[97.17756653 134.34292603]
[92.72460175 148.66673279]
[88.27163696 162.99052429]
[83.81866455 177.31431580]
[79.53204346 191.68876648]
[75.41234589 206.11193848]
[71.29264832 220.53512573]
[67.17294312 234.95829773]
[63.05324554 249.38148499]
[58.93354416 263.80465698]
[74.06519318 277.00717163]
[77.28324127 299.46688843]
[63.74889755 320.84805298]
[64.79138947 335.81179810]
[65.83387756 350.77551270]
[66.87637329 365.73925781]
[67.91886139 380.70297241]
[68.96135712 395.66671753]
[70.09056854 410.62414551]
[71.30644989 425.57476807]
[72.52233887 440.52542114]
[73.73822784 455.47604370]
[74.95410919 470.42669678]
[88.86818695 476.93008423]
[97.65327454 489.52841187]
[98.94622803 504.83279419]
[92.39926147 518.72637939]
[79.77346039 527.47198486]
[64.46510315 528.71691895]
[50.59207535 522.12646484]
[41.88613892 509.47329712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 262]
[3 261]
[4 260]
[5 259]
[6 258]
[8 257]
[9 256]
[10 255]
[11 254]
[12 253]
[13 252]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[26 35]
[27 34]
[28 33]
[46 249]
[47 248]
[48 247]
[49 246]
[50 245]
[51 244]
[54 243]
[55 242]
[56 241]
[57 240]
[58 239]
[59 70]
[60 69]
[61 68]
[62 67]
[71 196]
[72 195]
[73 194]
[74 191]
[75 190]
[76 189]
[77 188]
[78 187]
[81 184]
[82 183]
[85 180]
[86 179]
[87 178]
[90 176]
[91 175]
[92 174]
[93 172]
[94 171]
[96 168]
[97 167]
[98 166]
[99 165]
[100 164]
[102 163]
[103 162]
[105 160]
[106 159]
[107 158]
[109 156]
[110 155]
[111 154]
[113 151]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[119 145]
[120 144]
[121 143]
[126 138]
[127 137]
[128 136]
[129 135]
[212 238]
[213 237]
[214 236]
[215 235]
[216 234]
[217 233]
[218 232]
[219 231]
[221 229]
[222 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
