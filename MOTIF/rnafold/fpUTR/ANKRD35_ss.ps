%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUUGACAGCUGUCUCUUGCACAGCCGCAGCCAAGUCCGGUGGGUUCGGGAACCUGUGGCCCGGCUCUCUGCGCGUCCCCAUCCCCCGUGGCCCCGACCCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[109.68354034 148.35269165]
[98.67348480 158.53987122]
[83.84176636 160.78044128]
[70.31381989 154.30012512]
[62.76453018 141.33831787]
[63.80272293 126.37429047]
[73.06962585 114.57918549]
[87.36321259 110.02906799]
[72.62567139 112.82279968]
[57.88813019 115.61653137]
[43.40107727 129.48727417]
[25.39041519 122.70365143]
[10.83830643 126.34180450]
[-3.71380234 129.97994995]
[-18.26591110 133.61810303]
[-32.81801987 137.25625610]
[-40.97631454 150.52577209]
[-55.78604889 154.00807190]
[-68.38622284 146.14860535]
[-82.93833160 149.78675842]
[-92.39205933 162.74848938]
[-108.42581177 163.29479980]
[-118.73986053 151.00659180]
[-115.42215729 135.31034851]
[-101.01776123 128.24685669]
[-86.57648468 135.23464966]
[-72.02437592 131.59649658]
[-64.60534668 118.73206329]
[-49.89926529 114.83515930]
[-36.45616913 122.70413971]
[-21.90406036 119.06599426]
[-7.35195208 115.42784119]
[7.20015669 111.78969574]
[21.75226593 108.15154266]
[26.30451393 98.79633331]
[35.48773575 93.45130920]
[46.31273270 94.14151764]
[55.09439850 100.87899017]
[69.83193970 98.08525848]
[84.56948090 95.29152679]
[97.37599182 87.48171234]
[106.60713196 75.65859985]
[115.83826447 63.83547974]
[118.71641541 55.00194168]
[125.50975037 51.80973053]
[135.07777405 40.25754547]
[144.64579773 28.70535851]
[140.95088196 13.75030041]
[146.70323181 -0.34806445]
[159.50280762 -8.26228333]
[174.33076477 -7.13551664]
[183.89878845 -18.68770218]
[193.46679688 -30.23988724]
[196.59832764 -38.98681259]
[203.48083496 -41.98192978]
[213.37779236 -53.25358582]
[216.66896057 -68.72869110]
[230.88052368 -73.18746948]
[240.77748108 -84.45912170]
[250.67443848 -95.73078156]
[260.57138062 -107.00244141]
[270.46835327 -118.27409363]
[266.12026978 -133.07603455]
[270.48687744 -147.87254333]
[282.17480469 -157.94207764]
[297.45449829 -160.07148743]
[311.45025635 -153.58131409]
[319.69607544 -140.54252625]
[319.56076050 -125.11575317]
[311.08746338 -112.22362518]
[296.97998047 -105.97998047]
[281.74002075 -108.37713623]
[271.84304810 -97.10548401]
[261.94610596 -85.83382416]
[252.04913330 -74.56216431]
[242.15217590 -63.29051208]
[239.56890869 -48.62163544]
[224.64944458 -43.35662842]
[214.75248718 -32.08497238]
[205.01898193 -20.67186737]
[195.45097351 -9.11968136]
[185.88294983 2.43250370]
[189.75169373 16.79115486]
[184.35984802 30.84078407]
[171.57954407 39.11828232]
[156.19798279 38.27338028]
[146.62995911 49.82556534]
[137.06193542 61.37775040]
[127.66138458 73.06661224]
[118.43024445 84.88973236]
[109.19911194 96.71285248]
[117.01804352 101.73085785]
[120.89024353 112.69066620]
[127.94927979 125.92584991]
[135.00831604 139.16102600]
[142.06735229 152.39620972]
[157.45416260 154.40263367]
[168.69982910 165.09442139]
[171.48019409 180.36036682]
[164.72612000 194.33041382]
[151.03469849 201.63278198]
[135.67056274 199.45956421]
[124.54152679 188.64640808]
[121.92694092 173.35119629]
[128.83216858 159.45524597]
[121.77313232 146.22006226]
[114.71409607 132.98487854]
[107.65506744 119.74969482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 40]
[9 39]
[10 38]
[12 34]
[13 33]
[14 32]
[15 31]
[16 30]
[19 27]
[20 26]
[41 91]
[42 90]
[43 89]
[45 88]
[46 87]
[47 86]
[51 82]
[52 81]
[53 80]
[55 79]
[56 78]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[93 108]
[94 107]
[95 106]
[96 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
