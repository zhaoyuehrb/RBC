%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS25)
} def

/sequence { (\
CUUCCUUUUUGUCCGACAUCUUGACGAGGCUGCGGUGUCUGCUGCUAUUCUCCGAGCUUCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.003622343 ubox
1 56 0.004477859 ubox
2 16 0.015995356 ubox
2 24 0.014433635 ubox
2 28 0.003764177 ubox
2 55 0.004457259 ubox
2 56 0.005313487 ubox
3 15 0.016124543 ubox
3 16 0.087950051 ubox
3 23 0.014350562 ubox
3 24 0.095656554 ubox
3 27 0.004106632 ubox
3 54 0.004073625 ubox
3 55 0.007359465 ubox
4 15 0.094968222 ubox
4 23 0.103210918 ubox
4 26 0.004163801 ubox
4 29 0.017637131 ubox
4 54 0.007581392 ubox
5 28 0.018099965 ubox
5 29 0.004674054 ubox
5 56 0.005107078 ubox
6 16 0.024944282 ubox
6 24 0.033013066 ubox
6 27 0.016491846 ubox
6 28 0.004475080 ubox
6 55 0.005143077 ubox
7 15 0.026254989 ubox
7 16 0.041395393 ubox
7 23 0.035571433 ubox
7 24 0.014997763 ubox
7 26 0.013371541 ubox
7 27 0.003489889 ubox
7 29 0.018939202 ubox
7 54 0.004788448 ubox
8 15 0.042782291 ubox
8 16 0.032055529 ubox
8 23 0.015651924 ubox
8 24 0.017558643 ubox
8 27 0.003400055 ubox
8 28 0.030779506 ubox
9 15 0.033604136 ubox
9 16 0.042013041 ubox
9 23 0.018843939 ubox
9 24 0.017455825 ubox
9 27 0.050960365 ubox
10 15 0.043023527 ubox
10 18 0.345085595 ubox
10 23 0.018352235 ubox
10 26 0.055239805 ubox
10 37 0.003478479 ubox
10 63 0.059336459 ubox
11 17 0.379858335 ubox
11 19 0.030068626 ubox
11 22 0.018080474 ubox
11 25 0.180063125 ubox
11 30 0.013563695 ubox
11 36 0.005438489 ubox
11 57 0.005158328 ubox
11 62 0.074905981 ubox
12 16 0.342300284 ubox
12 18 0.030834610 ubox
12 24 0.185892787 ubox
12 29 0.013538310 ubox
12 56 0.004819185 ubox
12 61 0.047440154 ubox
13 23 0.167098285 ubox
13 28 0.013571275 ubox
13 35 0.019893767 ubox
14 23 0.218451100 ubox
14 26 0.014686869 ubox
14 34 0.020207387 ubox
14 54 0.005288518 ubox
14 61 0.173946656 ubox
15 22 0.225666189 ubox
15 25 0.017742316 ubox
15 33 0.020204551 ubox
15 39 0.019847200 ubox
15 53 0.005282909 ubox
15 59 0.016669987 ubox
15 60 0.184035773 ubox
16 21 0.201117397 ubox
16 38 0.019874696 ubox
16 58 0.020133778 ubox
16 59 0.179055179 ubox
17 23 0.065325376 ubox
17 32 0.019663500 ubox
17 37 0.019880233 ubox
18 22 0.053563575 ubox
18 31 0.019485207 ubox
18 36 0.019859958 ubox
19 29 0.010304236 ubox
19 35 0.019625348 ubox
19 55 0.022755000 ubox
20 28 0.010690011 ubox
20 29 0.017502135 ubox
20 34 0.018860160 ubox
20 54 0.022827210 ubox
20 56 0.188425957 ubox
21 27 0.010624376 ubox
21 28 0.017558524 ubox
21 55 0.189383996 ubox
22 26 0.009576787 ubox
22 27 0.017067803 ubox
22 32 0.006385795 ubox
22 34 0.003349969 ubox
22 54 0.189126205 ubox
22 61 0.003486020 ubox
22 63 0.620578096 ubox
23 31 0.005670088 ubox
23 33 0.007526907 ubox
23 50 0.007242646 ubox
23 52 0.036601341 ubox
23 53 0.183549774 ubox
23 60 0.004183320 ubox
23 62 0.788733612 ubox
24 49 0.007164436 ubox
24 51 0.045836689 ubox
24 59 0.004019119 ubox
25 32 0.008135430 ubox
25 54 0.007637084 ubox
25 61 0.957585513 ubox
26 31 0.006228311 ubox
26 39 0.011384146 ubox
26 49 0.020383902 ubox
26 50 0.131809995 ubox
26 52 0.137718178 ubox
26 53 0.005994093 ubox
26 60 0.978502437 ubox
27 38 0.011408853 ubox
27 40 0.006986095 ubox
27 48 0.022073065 ubox
27 49 0.129545024 ubox
27 51 0.138729379 ubox
27 59 0.978094532 ubox
28 39 0.008918480 ubox
28 46 0.097519254 ubox
28 48 0.091833478 ubox
28 49 0.004683362 ubox
28 50 0.138217497 ubox
28 51 0.003500932 ubox
28 53 0.004154318 ubox
28 58 0.978019116 ubox
29 36 0.011720297 ubox
29 38 0.009044784 ubox
29 45 0.112913678 ubox
29 48 0.017208121 ubox
29 49 0.117971204 ubox
29 50 0.004352362 ubox
29 52 0.004162416 ubox
29 57 0.979010147 ubox
29 62 0.004190236 ubox
30 35 0.011807547 ubox
30 37 0.009080585 ubox
30 44 0.112793592 ubox
30 56 0.978969598 ubox
30 61 0.004187758 ubox
31 47 0.074531330 ubox
31 54 0.035805855 ubox
31 55 0.970787152 ubox
31 63 0.016697087 ubox
32 42 0.129227606 ubox
32 45 0.660417652 ubox
32 46 0.017805910 ubox
32 53 0.034779457 ubox
32 62 0.021916171 ubox
33 41 0.129488404 ubox
33 44 0.661203333 ubox
33 54 0.732917842 ubox
33 61 0.021925158 ubox
34 40 0.128508692 ubox
34 43 0.660738152 ubox
34 46 0.009559957 ubox
34 49 0.012182676 ubox
34 50 0.009499939 ubox
34 51 0.029989950 ubox
34 52 0.029324753 ubox
34 53 0.736126009 ubox
34 60 0.021861366 ubox
35 39 0.125761699 ubox
35 42 0.660998918 ubox
35 45 0.013862325 ubox
35 48 0.021837196 ubox
35 49 0.008571599 ubox
35 50 0.036557670 ubox
35 51 0.020426584 ubox
35 52 0.734656949 ubox
35 59 0.018418713 ubox
35 62 0.005641979 ubox
36 41 0.633862202 ubox
36 44 0.018039905 ubox
36 47 0.077132598 ubox
36 61 0.005712864 ubox
36 63 0.005300618 ubox
37 43 0.013633161 ubox
37 45 0.075978152 ubox
37 46 0.066836363 ubox
37 48 0.171467439 ubox
37 57 0.016377846 ubox
37 60 0.005732834 ubox
37 62 0.006826470 ubox
38 44 0.073948176 ubox
38 47 0.174567984 ubox
38 55 0.005861971 ubox
38 56 0.011280674 ubox
38 61 0.006491175 ubox
39 54 0.006548875 ubox
39 56 0.011104528 ubox
40 47 0.243553065 ubox
40 54 0.008901753 ubox
40 55 0.011068001 ubox
40 61 0.006477913 ubox
40 63 0.021437126 ubox
41 46 0.226678555 ubox
41 53 0.009230063 ubox
41 57 0.015460354 ubox
41 60 0.009555466 ubox
41 62 0.028772044 ubox
42 56 0.015525707 ubox
42 61 0.028749239 ubox
43 54 0.012740696 ubox
43 55 0.015242873 ubox
44 53 0.016190690 ubox
44 57 0.032980068 ubox
44 62 0.003375286 ubox
45 56 0.033012412 ubox
45 61 0.003370294 ubox
46 55 0.033324636 ubox
48 55 0.011478287 ubox
48 56 0.005798590 ubox
49 54 0.021157245 ubox
49 55 0.033088254 ubox
50 54 0.055602602 ubox
50 56 0.003197193 ubox
51 55 0.004211876 ubox
53 61 0.030471192 ubox
54 60 0.031599751 ubox
55 59 0.027495167 ubox
56 62 0.026127231 ubox
57 61 0.026000982 ubox
22 63 0.9500000 lbox
23 62 0.9500000 lbox
25 61 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
30 56 0.9500000 lbox
31 55 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
showpage
end
%%EOF
