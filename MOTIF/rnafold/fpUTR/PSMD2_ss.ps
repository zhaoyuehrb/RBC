%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCGAGGGGGUGGGUGGGUCGCCGAGCGCCCCGGCUCGCCCCGGCGUUUCCGGUCGCAGGCGGGCUCUGGAGGAGGAGGGGCGCCGCGACCGACGCGCGCGAGUUGGUCUGGGAAAAAGGGCGGUGCGAGCGGGUGCGCGCGCAGCGGGCCGGCAGUGGCGGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[81.14341736 197.24900818]
[83.41589355 181.77743530]
[95.13593292 171.42491150]
[94.58166504 156.43516541]
[94.02738953 141.44540405]
[93.47312164 126.45565033]
[89.51979065 125.15287018]
[85.81101227 123.26315308]
[82.43333435 120.83059692]
[69.98057556 129.19293213]
[57.52781296 137.55528259]
[45.07505417 145.91761780]
[32.62229538 154.27996826]
[20.16953278 162.64230347]
[7.71677303 171.00465393]
[-4.73598766 179.36698914]
[-17.18874741 187.72932434]
[-29.56370926 196.20637512]
[-41.85981750 204.79740906]
[-54.15592575 213.38842773]
[-61.03705978 227.63485718]
[-75.90154266 228.58163452]
[-88.19765472 237.17265320]
[-100.49375916 245.76368713]
[-110.01478577 259.79174805]
[-126.13030243 254.52615356]
[-125.53171539 237.58277893]
[-109.08478546 233.46757507]
[-96.78868103 224.87655640]
[-84.49256897 216.28552246]
[-78.49093628 202.65359497]
[-62.74695206 201.09233093]
[-50.45084381 192.50129700]
[-38.15473557 183.91026306]
[-34.45805740 177.47639465]
[-25.55109024 175.27656555]
[-13.09832954 166.91423035]
[-0.64556873 158.55187988]
[11.80719185 150.18954468]
[24.25995255 141.82720947]
[36.71271133 133.46485901]
[49.16547394 125.10252380]
[61.61823273 116.74018097]
[74.07099152 108.37783813]
[73.59471130 93.27226257]
[81.24111938 80.23625183]
[74.30805969 66.93464661]
[67.37500000 53.63303757]
[60.44194412 40.33143234]
[55.96865845 37.49187088]
[53.32210922 33.59945297]
[52.59621811 29.53717422]
[53.51648712 26.09506416]
[47.33114243 12.42972469]
[41.14579773 -1.23561478]
[34.96045303 -14.90095425]
[28.77510834 -28.56629372]
[22.58976364 -42.23163223]
[16.40441895 -55.89697266]
[9.98961926 -62.45621872]
[10.23363781 -69.87245941]
[4.30186987 -83.64976501]
[-1.62989819 -97.42707062]
[-7.56166601 -111.20437622]
[-23.91676903 -117.35854340]
[-30.64653778 -133.11924744]
[-24.04556084 -148.56823730]
[-30.23090553 -162.23356628]
[-36.41624832 -175.89891052]
[-42.60159302 -189.56425476]
[-57.47729492 -194.90177917]
[-64.14615631 -209.23013306]
[-58.65165710 -224.04856873]
[-44.25358963 -230.56556702]
[-29.49407387 -224.91470337]
[-23.12966537 -210.44854736]
[-28.93625450 -195.74960327]
[-22.75090981 -182.08425903]
[-16.56556511 -168.41891479]
[-10.38022041 -154.75358582]
[2.21552444 -151.93156433]
[11.00820446 -142.21697998]
[12.61161041 -129.01634216]
[6.21563864 -117.13613892]
[12.14740658 -103.35883331]
[18.07917404 -89.58152771]
[24.01094246 -75.80422974]
[30.06975746 -62.08231735]
[36.25510406 -48.41697693]
[42.44044876 -34.75164032]
[48.62579346 -21.08629990]
[54.81113815 -7.42095947]
[60.99648285 6.24438000]
[67.18182373 19.90971947]
[73.74354553 33.39837265]
[80.67660522 46.69997787]
[87.60966492 60.00158691]
[94.54272461 73.30319214]
[115.19096375 77.37841797]
[126.77666473 94.94908905]
[141.71267700 96.33311462]
[156.64869690 97.71714020]
[167.07589722 90.08180237]
[179.51004028 91.56631470]
[187.32806396 100.82915497]
[202.23596191 102.48894501]
[217.14384460 104.14873505]
[232.05172729 105.80852509]
[246.95960999 107.46831512]
[261.86749268 109.12810516]
[276.77539062 110.78789520]
[265.43334961 100.97168732]
[259.37554932 87.24932098]
[259.76464844 72.25436401]
[266.52590942 58.86462021]
[278.36175537 49.64980698]
[293.00067139 46.37841415]
[307.63317871 49.67827606]
[319.45108032 58.91609573]
[326.18627930 72.31896973]
[326.54620361 87.31465149]
[320.46173096 101.02520752]
[309.10061646 110.81933594]
[294.64636230 114.81722260]
[308.82412720 119.71530151]
[324.39434814 116.90841675]
[333.89743042 128.37753296]
[348.07519531 133.27561951]
[362.25292969 138.17370605]
[376.43069458 143.07177734]
[392.00091553 140.26489258]
[401.50402832 151.73402405]
[415.68176270 156.63209534]
[429.85952759 161.53018188]
[445.84912109 157.88804626]
[456.79812622 170.09669495]
[451.44317627 185.59689331]
[435.29296875 188.44338989]
[424.96145630 175.70793152]
[410.78369141 170.80986023]
[396.60592651 165.91177368]
[382.04980469 169.06900024]
[371.53262329 157.24954224]
[357.35485840 152.35145569]
[343.17709351 147.45336914]
[328.99935913 142.55529785]
[314.44320679 145.71252441]
[303.92602539 133.89305115]
[289.74829102 128.99497986]
[275.11560059 125.69577789]
[260.20770264 124.03598785]
[245.29981995 122.37619781]
[230.39193726 120.71640778]
[215.48405457 119.05661774]
[200.57617188 117.39682770]
[185.66827393 115.73703766]
[170.01870728 123.64095306]
[155.26466370 112.65315247]
[140.32865906 111.26913452]
[125.39263916 109.88510895]
[118.72643280 119.79450226]
[108.46287537 125.90137482]
[109.01714325 140.89112854]
[109.57141876 155.88088989]
[110.12569427 170.87063599]
[122.57829285 180.32933044]
[125.98717499 195.59083557]
[118.74277496 209.44914246]
[104.26567078 215.36077881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[6 162]
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[14 39]
[15 38]
[16 37]
[17 36]
[18 34]
[19 33]
[20 32]
[22 30]
[23 29]
[24 28]
[46 98]
[47 97]
[48 96]
[49 95]
[53 94]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[61 87]
[62 86]
[63 85]
[64 84]
[67 80]
[68 79]
[69 78]
[70 77]
[100 160]
[101 159]
[102 158]
[105 156]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[111 150]
[124 149]
[125 148]
[127 146]
[128 145]
[129 144]
[130 143]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
