%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HABP4)
} def

/sequence { (\
GGGCCGGACAGGGUAGGGCCCGGAGGGCGGUGGCGGCGGAGCGGGCGGCAUGGGUCCUGGCCGCCGGCUUCGCUGAGACGCGCUCGCGUGGGCUGCCCUCCCGGGCCCGCAGUGGUCGCGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 107 0.005155078 ubox
1 108 0.006876721 ubox
2 106 0.006027018 ubox
2 107 0.006988918 ubox
2 117 0.004889718 ubox
3 106 0.007017238 ubox
3 116 0.004916496 ubox
3 122 0.998749756 ubox
3 125 0.023604729 ubox
4 104 0.007207497 ubox
4 105 0.005898340 ubox
4 115 0.004925946 ubox
4 121 0.999637687 ubox
4 124 0.023841299 ubox
5 103 0.008149720 ubox
5 104 0.004504849 ubox
5 114 0.004912880 ubox
5 118 0.003930012 ubox
5 120 0.999618666 ubox
5 123 0.023796172 ubox
6 102 0.008978286 ubox
6 113 0.004448744 ubox
6 117 0.008280839 ubox
6 119 0.995818396 ubox
6 122 0.023531309 ubox
7 101 0.008956080 ubox
7 116 0.007297853 ubox
7 117 0.995714422 ubox
8 116 0.995025032 ubox
9 112 0.003683816 ubox
9 114 0.278437660 ubox
9 115 0.959441439 ubox
10 99 0.008925716 ubox
10 113 0.379659631 ubox
11 98 0.009313024 ubox
11 117 0.005902794 ubox
12 97 0.009314968 ubox
12 116 0.005892841 ubox
13 96 0.009314221 ubox
13 110 0.741608364 ubox
13 113 0.012084807 ubox
14 95 0.009149959 ubox
14 109 0.694149888 ubox
14 112 0.010476622 ubox
14 114 0.006789374 ubox
15 94 0.006490086 ubox
15 113 0.006714938 ubox
16 93 0.004445544 ubox
16 107 0.009384924 ubox
16 108 0.999311806 ubox
17 93 0.003254132 ubox
17 94 0.006183590 ubox
17 106 0.007319139 ubox
17 107 0.999902720 ubox
18 93 0.007503607 ubox
18 106 0.999924180 ubox
19 91 0.005106073 ubox
19 92 0.007780865 ubox
19 104 0.005755325 ubox
19 105 0.999935535 ubox
20 90 0.005110941 ubox
20 91 0.007781020 ubox
20 103 0.006875827 ubox
20 104 0.999926982 ubox
21 88 0.005147101 ubox
21 90 0.007752942 ubox
21 103 0.999734933 ubox
22 87 0.005292165 ubox
22 89 0.007368948 ubox
22 101 0.576582009 ubox
22 102 0.816752347 ubox
23 85 0.005981306 ubox
23 100 0.815383599 ubox
23 101 0.578732094 ubox
24 84 0.005993614 ubox
24 99 0.998364422 ubox
25 83 0.005994069 ubox
25 85 0.007437399 ubox
25 98 0.999734605 ubox
25 99 0.003821871 ubox
25 100 0.019806843 ubox
26 84 0.007469934 ubox
26 97 0.999747841 ubox
26 98 0.003310848 ubox
26 99 0.019734501 ubox
27 81 0.007845988 ubox
27 83 0.007704999 ubox
27 96 0.999735708 ubox
27 98 0.019741646 ubox
28 80 0.008133494 ubox
28 82 0.007814230 ubox
28 95 0.999695046 ubox
29 79 0.011450269 ubox
29 81 0.044560675 ubox
29 94 0.992733542 ubox
29 97 0.019765476 ubox
30 79 0.129239432 ubox
30 81 0.113851698 ubox
30 83 0.003463260 ubox
30 93 0.983628853 ubox
30 96 0.019781184 ubox
31 78 0.131329808 ubox
31 80 0.113913216 ubox
31 82 0.003450554 ubox
31 90 0.008344612 ubox
31 92 0.953782527 ubox
31 95 0.019751141 ubox
32 74 0.003392735 ubox
32 79 0.113460136 ubox
32 81 0.003312473 ubox
32 84 0.012416397 ubox
32 85 0.003610636 ubox
32 89 0.011626061 ubox
32 94 0.024115911 ubox
33 73 0.003299010 ubox
33 81 0.010382240 ubox
33 83 0.012976331 ubox
33 87 0.015863127 ubox
33 89 0.090012749 ubox
33 93 0.025519157 ubox
34 72 0.003224428 ubox
34 75 0.981645919 ubox
34 80 0.010414931 ubox
34 82 0.012862685 ubox
34 86 0.015950392 ubox
34 88 0.088222460 ubox
34 90 0.075514192 ubox
34 92 0.024864933 ubox
35 74 0.994335463 ubox
35 79 0.009229413 ubox
35 81 0.011359866 ubox
35 85 0.005483006 ubox
35 87 0.081764158 ubox
35 89 0.007191588 ubox
36 73 0.999950527 ubox
37 72 0.999966114 ubox
38 71 0.999857714 ubox
39 70 0.999195580 ubox
40 69 0.999675221 ubox
41 68 0.999989062 ubox
42 66 0.008204076 ubox
42 67 0.999569174 ubox
43 65 0.009471826 ubox
44 64 0.006721038 ubox
44 65 0.999488670 ubox
45 64 0.999972731 ubox
46 63 0.999981373 ubox
47 62 0.999977320 ubox
48 61 0.999982953 ubox
49 59 0.099624048 ubox
49 60 0.994198571 ubox
50 58 0.132523636 ubox
51 59 0.535134754 ubox
52 58 0.773974492 ubox
53 57 0.763132280 ubox
72 81 0.003568779 ubox
73 80 0.003572639 ubox
74 86 0.060598738 ubox
75 85 0.088813787 ubox
76 84 0.088978059 ubox
76 94 0.008894848 ubox
77 83 0.088769597 ubox
77 85 0.007919395 ubox
77 93 0.009535933 ubox
78 84 0.007557111 ubox
78 89 0.889955302 ubox
79 86 0.008012177 ubox
79 88 0.913982583 ubox
79 90 0.344347056 ubox
80 85 0.007806295 ubox
80 87 0.915065964 ubox
80 89 0.346469095 ubox
80 93 0.010687061 ubox
80 94 0.007430352 ubox
81 86 0.913759687 ubox
81 88 0.346729404 ubox
81 90 0.053703017 ubox
81 92 0.010648826 ubox
82 87 0.337762533 ubox
82 89 0.054259855 ubox
82 93 0.172440644 ubox
83 88 0.054248545 ubox
83 91 0.008741500 ubox
83 92 0.172915996 ubox
84 90 0.007708862 ubox
84 91 0.172340397 ubox
85 90 0.171262805 ubox
85 91 0.013516318 ubox
86 93 0.020020573 ubox
87 92 0.020122840 ubox
108 123 0.005840876 ubox
109 122 0.007462769 ubox
110 121 0.007439921 ubox
112 119 0.007114366 ubox
112 125 0.003203138 ubox
113 118 0.006837672 ubox
113 124 0.003220357 ubox
115 122 0.003256658 ubox
118 125 0.004690848 ubox
119 124 0.004727346 ubox
3 122 0.9500000 lbox
4 121 0.9500000 lbox
5 120 0.9500000 lbox
6 119 0.9500000 lbox
7 117 0.9500000 lbox
8 116 0.9500000 lbox
9 115 0.9500000 lbox
16 108 0.9500000 lbox
17 107 0.9500000 lbox
18 106 0.9500000 lbox
19 105 0.9500000 lbox
20 104 0.9500000 lbox
21 103 0.9500000 lbox
22 102 0.9500000 lbox
23 101 0.9500000 lbox
24 99 0.9500000 lbox
25 98 0.9500000 lbox
26 97 0.9500000 lbox
27 96 0.9500000 lbox
28 95 0.9500000 lbox
29 94 0.9500000 lbox
30 93 0.9500000 lbox
31 92 0.9500000 lbox
34 75 0.9500000 lbox
35 74 0.9500000 lbox
36 73 0.9500000 lbox
37 72 0.9500000 lbox
38 71 0.9500000 lbox
39 70 0.9500000 lbox
40 69 0.9500000 lbox
41 68 0.9500000 lbox
42 67 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
78 89 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
