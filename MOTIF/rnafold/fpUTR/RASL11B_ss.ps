%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCUGAGCCCUGCGGAACCUCGGCGCUCGGCCCCACCCCGCCCGUACCUGCACUUAUUUAUUGUUGUUAUUUCUUACCGCGGAGCCCCGCAGUCGGGUCCUCCCGCCCGCUCCCGCGCAGCGCUAGCAUUCUCCAGUCCCUCAGUCCCUUCCCGCGCGGUGCGCCGCAGCCGAGGCG\
) } def
/len { sequence length } bind def

/coor [
[-54.10140228 235.65119934]
[-63.29294968 247.50511169]
[-65.63478851 263.15203857]
[-79.54817200 268.46871948]
[-88.73971558 280.32266235]
[-97.93126678 292.17657471]
[-100.72791290 300.90133667]
[-107.38665771 304.15463257]
[-116.78255463 315.84722900]
[-126.17845917 327.53985596]
[-135.57435608 339.23245239]
[-136.37522888 344.44506836]
[-138.86035156 348.41867065]
[-142.26863098 350.71697998]
[-145.77633667 351.27233887]
[-155.76806641 362.46005249]
[-159.18972778 377.90682983]
[-173.43841553 382.24551392]
[-183.43014526 393.43325806]
[-189.47117615 409.27441406]
[-206.36558533 407.85470581]
[-209.67820740 391.22753906]
[-194.61787415 383.44152832]
[-184.62614441 372.25378418]
[-181.91915894 357.60723877]
[-166.95579529 352.46832275]
[-156.96406555 341.28060913]
[-147.26696777 329.83654785]
[-137.87106323 318.14395142]
[-128.47515869 306.45132446]
[-119.07926178 294.75872803]
[-109.78518677 282.98501587]
[-100.59364319 271.13110352]
[-91.40209198 259.27719116]
[-89.71768951 244.47811890]
[-75.14687347 238.31356812]
[-65.95532227 226.45964050]
[-68.49990082 217.90438843]
[-66.78096771 209.00538635]
[-61.06200409 201.79718018]
[-52.53532410 197.98719788]
[-43.07515335 198.55215454]
[-33.27910233 187.19268799]
[-23.48304939 175.83323669]
[-13.68699741 164.47377014]
[-3.98989534 153.02972412]
[5.60752678 141.50195312]
[3.76472735 131.41775513]
[7.87628460 121.78765106]
[16.80105782 115.90155029]
[27.71198082 115.91426849]
[37.70371246 104.72653961]
[47.69544220 93.53881073]
[57.68717575 82.35108185]
[43.55492020 87.37894440]
[29.42266846 92.40681458]
[17.86744308 101.97116089]
[4.47714806 108.73133850]
[-10.07984066 112.34990692]
[-25.07691383 112.64626312]
[-39.76549149 109.60559845]
[-53.41239929 103.37969208]
[-65.33645630 94.27931213]
[-74.94246674 82.75869751]
[-81.75094604 69.39289856]
[-85.42206573 54.84907150]
[-85.77256775 39.85316467]
[-82.78496552 25.15370178]
[-76.60837555 11.48440170]
[-67.55110931 -0.47243428]
[-56.06525803 -10.11998272]
[-42.72413254 -16.97668839]
[-28.19365883 -20.70029640]
[-13.19911766 -21.10494804]
[1.51103806 -18.17044258]
[15.20255280 -12.04325485]
[27.19201660 -3.02922416]
[36.88097763 8.42171669]
[43.78581238 21.73799515]
[47.56124115 36.25056458]
[56.08207321 48.59542084]
[64.60290527 60.94027328]
[63.04360962 46.02153778]
[61.48431396 31.10280609]
[59.92501831 16.18407440]
[49.86083221 3.23632503]
[56.29159927 -11.84933853]
[72.60189819 -13.55408001]
[82.01309204 -0.12420741]
[74.84375000 14.62477779]
[76.40304565 29.54351044]
[77.96234131 44.46224213]
[79.52163696 59.38097763]
[94.27322388 62.09957504]
[101.04826355 48.71679306]
[102.13841248 39.61984634]
[108.05878448 35.16205978]
[115.06507874 21.89888191]
[122.07136536 8.63570213]
[129.07765198 -4.62747669]
[136.08393860 -17.89065552]
[131.18353271 -32.91601562]
[138.41732788 -46.96762466]
[153.49366760 -51.70890427]
[167.46800232 -44.32694626]
[172.04962158 -29.20132637]
[164.52033997 -15.30581379]
[149.34712219 -10.88436699]
[142.34083557 2.37881231]
[135.33454895 15.64199162]
[128.32824707 28.90517044]
[121.32196808 42.16835022]
[114.43104553 55.49183273]
[107.65600586 68.87461090]
[115.47264862 74.64144135]
[120.63591003 82.03643799]
[122.94326019 90.03884125]
[122.54544067 97.67094421]
[137.13554382 101.15363312]
[151.72563171 104.63632202]
[166.31573486 108.11901093]
[180.90582275 111.60169983]
[196.12532043 107.27995300]
[206.70835876 117.76082611]
[221.29844666 121.24352264]
[235.88853455 124.72621155]
[242.36602783 123.19915771]
[247.81440735 124.93099976]
[250.92027283 128.59126282]
[265.38070679 132.57823181]
[272.51016235 119.30726624]
[282.41433716 107.95584106]
[294.59643555 99.09331512]
[308.44540405 93.16425323]
[323.26660156 90.46604156]
[338.31655884 91.13401794]
[352.84042358 95.13468933]
[366.10964966 102.26737213]
[377.45867920 112.17430115]
[386.31823730 124.35854340]
[392.24395752 138.20895386]
[394.93859863 153.03077698]
[394.26696777 168.08058167]
[390.26275635 182.60346985]
[383.12686157 195.87097168]
[373.21719360 207.21760559]
[361.03079224 216.07421875]
[347.17895508 221.99658203]
[332.35647583 224.68760681]
[317.30682373 224.01232910]
[302.78491211 220.00462341]
[289.51913452 212.86550903]
[278.17492676 202.95309448]
[269.32125854 190.76455688]
[263.40225220 176.91128540]
[260.71481323 162.08813477]
[261.39373779 147.03866577]
[246.93330383 143.05169678]
[232.40585327 139.31629944]
[217.81575012 135.83361816]
[203.22566223 132.35092163]
[189.04974365 136.92178345]
[177.42312622 126.19179535]
[162.83303833 122.70910645]
[148.24295044 119.22641754]
[133.65284729 115.74372864]
[119.06275177 112.26103210]
[89.18475342 125.13087463]
[68.87490845 92.34281158]
[58.88317490 103.53054047]
[48.89144135 114.71826935]
[38.89971161 125.90599823]
[35.71287155 145.79307556]
[17.13529778 151.09938049]
[7.53787518 162.62715149]
[4.44010544 171.24960327]
[-2.32753658 174.26982117]
[-12.12358856 185.62928772]
[-21.91964149 196.98873901]
[-31.71569443 208.34820557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 37]
[2 36]
[4 34]
[5 33]
[6 32]
[8 31]
[9 30]
[10 29]
[11 28]
[15 27]
[16 26]
[18 24]
[19 23]
[42 180]
[43 179]
[44 178]
[45 177]
[46 175]
[47 174]
[51 172]
[52 171]
[53 170]
[54 169]
[82 93]
[83 92]
[84 91]
[85 90]
[94 114]
[95 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[118 167]
[119 166]
[120 165]
[121 164]
[122 163]
[124 161]
[125 160]
[126 159]
[129 158]
[130 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
