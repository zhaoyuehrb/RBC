%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ETHE1)
} def

/sequence { (\
CUUCCCGGGGUCAGUGCCGUAGCGCCCGGCUCCUGCAGGCGCUCGGCCUCCGCUCAUUCCUGACCCCGCAGUGGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.150307193 ubox
1 74 0.302768398 ubox
1 75 0.104271134 ubox
2 70 0.150682840 ubox
2 71 0.038882811 ubox
2 73 0.300468443 ubox
2 74 0.102519692 ubox
2 75 0.057546692 ubox
3 70 0.046194197 ubox
3 73 0.091215887 ubox
3 74 0.067612082 ubox
3 75 0.570271007 ubox
4 73 0.073432478 ubox
4 74 0.749222830 ubox
4 75 0.360897385 ubox
5 73 0.749579908 ubox
5 74 0.365046407 ubox
5 75 0.020959051 ubox
6 52 0.004426397 ubox
6 62 0.005342936 ubox
6 68 0.916791933 ubox
6 73 0.329456387 ubox
6 74 0.019021967 ubox
6 77 0.004212074 ubox
6 79 0.005294293 ubox
7 50 0.007752381 ubox
7 51 0.011681787 ubox
7 60 0.007076817 ubox
7 61 0.005261370 ubox
7 67 0.998192166 ubox
7 72 0.046821686 ubox
7 78 0.003721217 ubox
8 49 0.007823503 ubox
8 50 0.011830384 ubox
8 51 0.003575137 ubox
8 59 0.007089892 ubox
8 60 0.005271740 ubox
8 66 0.999790438 ubox
8 67 0.005574398 ubox
9 48 0.008002981 ubox
9 49 0.011522990 ubox
9 50 0.003617624 ubox
9 51 0.004592525 ubox
9 58 0.007056950 ubox
9 59 0.005259870 ubox
9 65 0.999800334 ubox
9 66 0.004565242 ubox
10 47 0.007869803 ubox
10 48 0.011456519 ubox
10 50 0.004645245 ubox
10 57 0.007389127 ubox
10 58 0.004471574 ubox
10 64 0.999802063 ubox
10 65 0.003241294 ubox
11 46 0.007751732 ubox
11 56 0.007685364 ubox
11 63 0.999682316 ubox
12 45 0.007726078 ubox
12 62 0.999763282 ubox
13 43 0.007686084 ubox
13 49 0.137429949 ubox
13 54 0.088691669 ubox
13 58 0.015090183 ubox
13 61 0.985455147 ubox
14 42 0.007741641 ubox
14 48 0.194971368 ubox
14 53 0.125733318 ubox
14 57 0.036866316 ubox
14 60 0.967249354 ubox
15 41 0.007740540 ubox
15 52 0.140322990 ubox
15 56 0.095171963 ubox
16 40 0.007745349 ubox
16 47 0.996283240 ubox
16 51 0.040147040 ubox
16 53 0.004952278 ubox
16 55 0.044891243 ubox
17 39 0.007745543 ubox
17 46 0.999751835 ubox
17 52 0.003759506 ubox
18 38 0.007741313 ubox
18 45 0.999871842 ubox
18 52 0.003732780 ubox
19 36 0.007647480 ubox
19 44 0.999133241 ubox
19 51 0.003835028 ubox
20 35 0.007670072 ubox
21 34 0.007221029 ubox
21 43 0.986119465 ubox
21 49 0.003812857 ubox
22 30 0.003183551 ubox
22 33 0.007036848 ubox
22 42 0.999932317 ubox
22 48 0.003902601 ubox
23 29 0.003288238 ubox
23 41 0.999938546 ubox
24 30 0.006847655 ubox
24 40 0.999936459 ubox
24 47 0.004255930 ubox
25 29 0.006802249 ubox
25 39 0.997160636 ubox
25 46 0.004269668 ubox
26 38 0.993908778 ubox
26 39 0.074635032 ubox
26 45 0.004214445 ubox
27 35 0.060012938 ubox
27 38 0.105131794 ubox
28 34 0.061715445 ubox
28 43 0.004078953 ubox
29 33 0.060440514 ubox
29 36 0.997395820 ubox
29 42 0.004756379 ubox
30 35 0.997065321 ubox
30 41 0.004761470 ubox
32 39 0.004751060 ubox
33 38 0.004738548 ubox
44 52 0.004699604 ubox
45 51 0.005223123 ubox
45 54 0.008409603 ubox
45 55 0.003162900 ubox
46 50 0.005164268 ubox
46 53 0.018441452 ubox
47 52 0.021662727 ubox
51 77 0.009715965 ubox
52 61 0.004938478 ubox
52 76 0.015783271 ubox
53 75 0.015895690 ubox
54 63 0.003649075 ubox
54 74 0.015884682 ubox
55 62 0.005663136 ubox
55 73 0.015888929 ubox
56 61 0.006924347 ubox
56 72 0.015763749 ubox
57 71 0.010773612 ubox
58 70 0.008772272 ubox
60 71 0.011742978 ubox
61 68 0.006735151 ubox
61 70 0.012527871 ubox
62 67 0.007341749 ubox
62 69 0.012657570 ubox
62 76 0.004207716 ubox
62 78 0.005388041 ubox
64 75 0.006040697 ubox
65 74 0.006036331 ubox
65 75 0.007762108 ubox
66 73 0.006000596 ubox
66 74 0.007837747 ubox
67 73 0.007877542 ubox
67 77 0.024520916 ubox
67 79 0.014922516 ubox
68 72 0.006954022 ubox
68 76 0.145519775 ubox
68 78 0.122792435 ubox
69 75 0.147528582 ubox
69 77 0.124533502 ubox
71 78 0.112418138 ubox
72 77 0.107926583 ubox
72 79 0.057072349 ubox
73 78 0.097103155 ubox
3 75 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
showpage
end
%%EOF
