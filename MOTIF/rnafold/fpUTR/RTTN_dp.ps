%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RTTN)
} def

/sequence { (\
AUUAAUUGUGGCUGGACGCAGUGGCGCGGCAGUUUAAUUCUCCGGCGGCUGCAGAUUGACGGGACGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.022237544 ubox
1 38 0.003790952 ubox
1 56 0.009125605 ubox
2 8 0.023101034 ubox
2 11 0.015934515 ubox
2 15 0.011123709 ubox
2 16 0.005678950 ubox
2 37 0.004526223 ubox
2 55 0.010824476 ubox
2 59 0.129044098 ubox
2 62 0.004002653 ubox
2 63 0.005734028 ubox
2 64 0.022980509 ubox
2 67 0.059898870 ubox
2 68 0.085870077 ubox
3 10 0.020939931 ubox
3 14 0.017162534 ubox
3 15 0.006010529 ubox
3 36 0.004756533 ubox
3 53 0.003175743 ubox
3 54 0.010706585 ubox
3 58 0.143150481 ubox
3 61 0.003862779 ubox
3 62 0.006974969 ubox
3 63 0.024381140 ubox
3 66 0.061905434 ubox
3 67 0.122695614 ubox
4 9 0.019275308 ubox
4 13 0.017682979 ubox
4 34 0.004767985 ubox
4 35 0.004135772 ubox
4 39 0.005951338 ubox
4 57 0.144908201 ubox
5 22 0.012243510 ubox
5 33 0.005835766 ubox
5 34 0.003241903 ubox
5 38 0.007533533 ubox
5 56 0.144680816 ubox
6 15 0.006005678 ubox
6 16 0.013020095 ubox
6 21 0.012666903 ubox
6 32 0.006340909 ubox
6 37 0.007746825 ubox
6 54 0.045608750 ubox
6 55 0.137215265 ubox
6 59 0.007918995 ubox
6 62 0.126473835 ubox
6 63 0.011084092 ubox
6 64 0.259399400 ubox
6 67 0.757859651 ubox
6 68 0.043699094 ubox
7 14 0.008506012 ubox
7 15 0.014390174 ubox
7 18 0.009738306 ubox
7 20 0.016929503 ubox
7 26 0.014217800 ubox
7 31 0.006412179 ubox
7 36 0.007788856 ubox
7 53 0.065034624 ubox
7 54 0.121486140 ubox
7 58 0.008459516 ubox
7 61 0.165992881 ubox
7 62 0.013202171 ubox
7 63 0.281721634 ubox
7 66 0.818401763 ubox
7 67 0.060356614 ubox
8 13 0.006476226 ubox
8 17 0.215348388 ubox
8 19 0.019622062 ubox
8 25 0.067657471 ubox
8 30 0.006394630 ubox
8 35 0.007143338 ubox
8 49 0.030835245 ubox
8 52 0.072983517 ubox
8 56 0.005056434 ubox
8 57 0.004287468 ubox
8 60 0.183640647 ubox
8 65 0.849299653 ubox
9 16 0.214330129 ubox
9 18 0.020019983 ubox
9 24 0.067653947 ubox
9 29 0.006343156 ubox
9 48 0.030919372 ubox
9 51 0.072831618 ubox
9 53 0.010972747 ubox
9 55 0.005250072 ubox
9 58 0.018572599 ubox
9 59 0.181658447 ubox
9 61 0.287342301 ubox
9 64 0.837519922 ubox
9 66 0.085850390 ubox
10 17 0.097167681 ubox
10 34 0.007375363 ubox
10 50 0.072698367 ubox
10 52 0.005438842 ubox
10 57 0.042206901 ubox
10 60 0.295177046 ubox
10 65 0.111647499 ubox
11 19 0.003732936 ubox
11 22 0.067780252 ubox
11 27 0.006290199 ubox
11 30 0.003172876 ubox
11 33 0.009343818 ubox
11 46 0.031360698 ubox
11 49 0.072930183 ubox
11 56 0.050478078 ubox
12 18 0.003952946 ubox
12 21 0.067892905 ubox
12 26 0.006017433 ubox
12 29 0.003214858 ubox
12 32 0.009429109 ubox
12 45 0.031397785 ubox
12 48 0.072890010 ubox
12 54 0.137120617 ubox
12 62 0.848304009 ubox
12 63 0.045622986 ubox
12 68 0.006250413 ubox
13 20 0.067937153 ubox
13 28 0.003211663 ubox
13 31 0.009428520 ubox
13 44 0.031490483 ubox
13 47 0.072628082 ubox
13 53 0.136287520 ubox
13 58 0.040285891 ubox
13 61 0.848853290 ubox
13 62 0.042052748 ubox
13 66 0.008374533 ubox
13 67 0.006040584 ubox
14 19 0.067947712 ubox
14 30 0.009405855 ubox
14 43 0.031885716 ubox
14 46 0.071418009 ubox
14 52 0.063242252 ubox
14 57 0.056206091 ubox
14 60 0.845458174 ubox
14 65 0.010657720 ubox
15 42 0.031919051 ubox
15 56 0.078134134 ubox
15 57 0.348561427 ubox
16 22 0.004010495 ubox
16 41 0.031259627 ubox
16 56 0.369122742 ubox
17 21 0.004019532 ubox
17 26 0.071049297 ubox
17 28 0.020718172 ubox
17 44 0.008904581 ubox
17 58 0.277936839 ubox
17 61 0.011169992 ubox
18 25 0.072539837 ubox
18 27 0.020986107 ubox
18 43 0.008767406 ubox
18 52 0.990213247 ubox
18 57 0.036694728 ubox
18 60 0.005639909 ubox
19 24 0.072421647 ubox
19 26 0.020983275 ubox
19 51 0.994196922 ubox
19 58 0.003813201 ubox
20 39 0.009556436 ubox
20 41 0.007323394 ubox
20 50 0.994028021 ubox
20 57 0.003795800 ubox
21 38 0.009955459 ubox
21 40 0.007465142 ubox
21 49 0.994283130 ubox
21 52 0.011690029 ubox
21 56 0.003622757 ubox
22 36 0.004984775 ubox
22 37 0.009847336 ubox
22 47 0.003618989 ubox
22 48 0.992587572 ubox
22 51 0.011690616 ubox
22 55 0.003572324 ubox
23 34 0.020224154 ubox
23 35 0.004595658 ubox
23 46 0.004211901 ubox
23 50 0.012216622 ubox
24 33 0.021832659 ubox
24 34 0.003790536 ubox
24 46 0.994097935 ubox
24 49 0.012316928 ubox
25 32 0.022031010 ubox
25 44 0.005471622 ubox
25 45 0.993422693 ubox
25 47 0.018277527 ubox
25 48 0.009143300 ubox
26 33 0.010682684 ubox
26 43 0.007027687 ubox
26 46 0.020669614 ubox
26 49 0.003926079 ubox
26 52 0.065353627 ubox
27 32 0.011372360 ubox
27 44 0.992946425 ubox
27 45 0.015023084 ubox
27 48 0.003986183 ubox
27 51 0.065486759 ubox
27 61 0.003290334 ubox
27 66 0.006628517 ubox
28 41 0.006269762 ubox
28 42 0.015567154 ubox
28 43 0.996876458 ubox
28 50 0.065443095 ubox
28 60 0.003293589 ubox
28 65 0.006712092 ubox
29 40 0.008056975 ubox
29 41 0.013624250 ubox
29 42 0.996560440 ubox
29 46 0.004132581 ubox
29 49 0.065492074 ubox
29 52 0.011740393 ubox
30 45 0.004150678 ubox
30 48 0.065249729 ubox
30 51 0.011755885 ubox
31 39 0.082784791 ubox
31 41 0.980511668 ubox
31 50 0.011753449 ubox
32 38 0.089227543 ubox
32 40 0.982829409 ubox
32 46 0.064113571 ubox
32 49 0.011754500 ubox
32 60 0.006260406 ubox
33 37 0.085696916 ubox
33 45 0.063459710 ubox
33 48 0.011602030 ubox
33 59 0.005738490 ubox
34 44 0.053849447 ubox
34 45 0.006960559 ubox
34 47 0.009804593 ubox
34 58 0.005103322 ubox
34 59 0.003880119 ubox
35 44 0.009457587 ubox
35 58 0.004758380 ubox
36 57 0.005393117 ubox
37 56 0.005322144 ubox
38 55 0.003871935 ubox
38 68 0.003196127 ubox
39 55 0.006075950 ubox
39 64 0.006171009 ubox
39 67 0.005242452 ubox
40 54 0.007131083 ubox
40 63 0.006920090 ubox
40 66 0.005491431 ubox
41 53 0.006994545 ubox
41 63 0.007921669 ubox
41 64 0.003904853 ubox
42 62 0.011797434 ubox
42 63 0.003725492 ubox
43 51 0.006818658 ubox
43 61 0.011898908 ubox
43 62 0.003453588 ubox
44 50 0.006794697 ubox
44 60 0.011903120 ubox
45 49 0.006650941 ubox
45 52 0.006278323 ubox
46 51 0.006275183 ubox
46 58 0.008433055 ubox
46 66 0.011161744 ubox
47 57 0.008689612 ubox
47 65 0.011694089 ubox
48 56 0.007270086 ubox
49 62 0.015046482 ubox
50 61 0.015584422 ubox
51 60 0.015915411 ubox
52 58 0.015803232 ubox
53 57 0.017621356 ubox
56 62 0.005992676 ubox
56 63 0.011465224 ubox
56 64 0.021456393 ubox
56 67 0.098913224 ubox
56 68 0.008765600 ubox
57 61 0.006047975 ubox
57 62 0.016629216 ubox
57 63 0.024232586 ubox
57 66 0.106821507 ubox
57 67 0.012204344 ubox
58 65 0.109710795 ubox
60 66 0.072475531 ubox
61 65 0.069216585 ubox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
showpage
end
%%EOF
