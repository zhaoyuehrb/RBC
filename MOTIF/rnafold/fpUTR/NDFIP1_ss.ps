%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUCCCCGCCUCUUCCCCAGGGGCCGCGUCGGAGCCUCGGCGGCGGCGGCGGUGCUUACAGCCUGAGAAGAGCGUCUCGCCCGGGAGCGGCGGCGGCCAUCGAGACCCACCCAAGGCGCGUCCCCCUCGGCCUCCCAGCGCUCCCAAGCCGCAGCGGCCGCGCCCCUUCAGCUAGCUCGCUCGCUCGCUCUGCUUCCCUGCUGCCGGCUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[133.54672241 195.10119629]
[132.89544678 180.11534119]
[132.24415588 165.12948608]
[131.59288025 150.14363098]
[130.94160461 135.15777588]
[130.29032898 120.17192078]
[123.00329590 118.39733887]
[112.64281464 129.24447632]
[108.42922974 114.84816742]
[101.14219666 113.07357788]
[93.67356873 126.08201599]
[86.20493317 139.09045410]
[78.73629761 152.09889221]
[71.26766205 165.10734558]
[63.79903030 178.11578369]
[66.58382416 193.91528320]
[55.85995865 205.84751892]
[39.85386658 204.75909424]
[30.84405708 191.48495483]
[35.74207687 176.20788574]
[50.79059219 170.64714050]
[58.25922394 157.63870239]
[65.72785950 144.63026428]
[73.19649506 131.62182617]
[80.66512299 118.61338806]
[88.13375854 105.60494232]
[82.84968567 100.28248596]
[68.34685516 104.11233521]
[72.28154755 89.63756561]
[66.99747467 84.31510162]
[53.93531036 91.68937683]
[40.87314987 99.06365204]
[27.81098747 106.43792725]
[14.74882507 113.81220245]
[6.88306236 128.20184326]
[-9.51570034 128.31416321]
[-17.57782173 114.03359985]
[-9.00968266 100.05078888]
[7.37455034 100.75003815]
[20.43671227 93.37576294]
[33.49887466 86.00148773]
[46.56103516 78.62721252]
[59.62319946 71.25293732]
[70.11400604 60.53179932]
[77.20291138 47.31259155]
[84.29180908 34.09337997]
[91.38070679 20.87417030]
[98.46960449 7.65496111]
[105.55850983 -5.56424904]
[112.64740753 -18.78345871]
[119.73630524 -32.00266647]
[121.03292084 -41.03995514]
[127.02471924 -45.36084747]
[134.30424500 -58.47604752]
[133.56790161 -76.87756348]
[148.96035767 -85.31000519]
[156.04925537 -98.52922058]
[150.46611023 -109.01910400]
[150.63603210 -120.78118134]
[156.40122986 -130.89715576]
[166.22999573 -136.91291809]
[177.62190247 -137.43357849]
[185.09053040 -150.44201660]
[192.55917358 -163.45045471]
[192.92466736 -170.04455566]
[196.08810425 -174.75892639]
[200.43701172 -176.72288513]
[208.27911377 -189.50964355]
[216.12123108 -202.29641724]
[213.87910461 -214.99522400]
[220.67042542 -225.48281860]
[232.39819336 -228.43547058]
[240.42459106 -241.10736084]
[248.45098877 -253.77925110]
[256.47738647 -266.45114136]
[264.50378418 -279.12304688]
[264.83367920 -297.53634644]
[280.68838501 -305.06378174]
[288.53048706 -317.85055542]
[289.14965820 -333.65963745]
[302.39923096 -340.46389771]
[310.24133301 -353.25064087]
[304.53262329 -372.51867676]
[314.68426514 -389.50701904]
[333.75918579 -393.48294067]
[341.03872681 -406.59814453]
[348.31826782 -419.71334839]
[348.25042725 -435.53439331]
[361.19207764 -442.90753174]
[368.47158813 -456.02270508]
[375.75112915 -469.13790894]
[383.03067017 -482.25311279]
[390.31018066 -495.36831665]
[388.65298462 -516.73626709]
[406.79626465 -526.57922363]
[413.49948120 -539.99816895]
[420.20269775 -553.41705322]
[426.90591431 -566.83593750]
[433.60916138 -580.25482178]
[425.26269531 -593.07214355]
[424.45776367 -608.24615479]
[431.31054688 -621.69622803]
[443.89138794 -629.85577393]
[458.76705933 -630.61743164]
[465.47027588 -644.03631592]
[472.17349243 -657.45520020]
[462.37567139 -666.90875244]
[455.64422607 -678.72387695]
[452.51556396 -691.93994141]
[453.23364258 -705.48547363]
[457.73089600 -718.26501465]
[465.63452148 -729.24768066]
[476.29736328 -737.55041504]
[488.85089111 -742.50891113]
[502.27590942 -743.73077393]
[515.48535156 -741.12658691]
[522.57427979 -754.34576416]
[529.66314697 -767.56500244]
[536.75207520 -780.78417969]
[538.04864502 -789.82147217]
[544.04046631 -794.14239502]
[551.32000732 -807.25756836]
[545.55566406 -821.79394531]
[550.53271484 -836.61834717]
[563.90118408 -844.73114014]
[579.34893799 -842.30169678]
[589.58190918 -830.47717285]
[589.76849365 -814.84069824]
[579.82055664 -802.77539062]
[564.43518066 -799.97802734]
[557.15563965 -786.86285400]
[549.97125244 -773.69531250]
[542.88238525 -760.47607422]
[535.79345703 -747.25689697]
[528.70458984 -734.03765869]
[539.91418457 -721.98083496]
[546.32702637 -706.79064941]
[547.15148926 -690.29711914]
[542.27020264 -674.49401855]
[532.25665283 -661.29760742]
[518.30786133 -652.31445312]
[502.10110474 -648.64562988]
[485.59240723 -650.75195312]
[478.88919067 -637.33306885]
[472.18594360 -623.91418457]
[480.51123047 -611.56286621]
[481.54324341 -596.60321045]
[474.90484619 -583.04595947]
[462.28903198 -574.57617188]
[447.02804565 -573.55163574]
[440.32482910 -560.13275146]
[433.62161255 -546.71380615]
[426.91836548 -533.29492188]
[420.21514893 -519.87603760]
[424.35705566 -512.03137207]
[424.42834473 -503.02313232]
[420.28671265 -494.86859131]
[412.74734497 -489.45178223]
[403.42538452 -488.08877563]
[396.14587402 -474.97360229]
[388.86633301 -461.85839844]
[381.58679199 -448.74319458]
[374.30728149 -435.62799072]
[374.89578247 -420.74502563]
[361.43344116 -412.43380737]
[354.15393066 -399.31860352]
[346.87438965 -386.20339966]
[352.24874878 -377.46676636]
[353.52398682 -367.20767212]
[350.40377808 -357.26708984]
[343.38662720 -349.45687866]
[333.68759155 -345.22958374]
[323.02810669 -345.40853882]
[315.18600464 -332.62176514]
[315.12777710 -317.72729492]
[301.31726074 -310.00842285]
[293.47515869 -297.22167969]
[295.98910522 -285.39212036]
[289.56414795 -274.67614746]
[277.17568970 -271.09664917]
[269.14929199 -258.42474365]
[261.12289429 -245.75285339]
[253.09648132 -233.08096313]
[245.07008362 -220.40907288]
[245.29423523 -202.85960388]
[228.90798950 -194.45429993]
[221.06588745 -181.66754150]
[213.22378540 -168.88078308]
[205.56761169 -155.98182678]
[198.09896851 -142.97338867]
[190.63034058 -129.96493530]
[196.46408081 -112.60977936]
[187.60348511 -96.22295380]
[169.26846313 -91.44031525]
[162.17956543 -78.22110748]
[165.37394714 -66.55687714]
[159.57997131 -55.48702621]
[147.41944885 -51.19651794]
[140.13992310 -38.08131790]
[132.95552063 -24.91376877]
[125.86661530 -11.69455910]
[118.77771759 1.52465057]
[111.68881989 14.74386024]
[104.59991455 27.96306992]
[97.51101685 41.18228149]
[90.42211914 54.40148926]
[83.33322144 67.62069702]
[145.27618408 119.52064514]
[145.92745972 134.50650024]
[146.57873535 149.49235535]
[147.23001099 164.47821045]
[147.88128662 179.46406555]
[148.53257751 194.44992065]
[157.79264832 207.98442078]
[150.45846558 222.65213013]
[134.07478333 223.36416626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[3 211]
[4 210]
[5 209]
[6 208]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[44 207]
[45 206]
[46 205]
[47 204]
[48 203]
[49 202]
[50 201]
[51 200]
[53 199]
[54 198]
[56 195]
[57 194]
[62 191]
[63 190]
[64 189]
[67 188]
[68 187]
[69 186]
[72 184]
[73 183]
[74 182]
[75 181]
[76 180]
[78 177]
[79 176]
[81 174]
[82 173]
[85 167]
[86 166]
[87 165]
[89 163]
[90 162]
[91 161]
[92 160]
[93 159]
[95 154]
[96 153]
[97 152]
[98 151]
[99 150]
[104 145]
[105 144]
[106 143]
[116 135]
[117 134]
[118 133]
[119 132]
[121 131]
[122 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
