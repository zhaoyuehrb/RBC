%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMED9)
} def

/sequence { (\
AGGCACCGCGGCGGCGGCAGGGCGACGUGGCGCGGCCGGCUGCGGCUGCGCAGGCAGGUGGAGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 37 0.974968120 ubox
3 9 0.021532238 ubox
3 18 0.003727871 ubox
3 23 0.007070816 ubox
3 33 0.019463186 ubox
3 36 0.976151800 ubox
3 43 0.008921111 ubox
3 49 0.016595859 ubox
3 51 0.005097355 ubox
3 55 0.050325180 ubox
3 59 0.004289241 ubox
3 64 0.045798591 ubox
4 8 0.022166445 ubox
4 22 0.007068720 ubox
4 32 0.019507928 ubox
4 35 0.974712695 ubox
4 42 0.008942401 ubox
4 48 0.016642575 ubox
4 50 0.004666577 ubox
4 54 0.050348832 ubox
4 58 0.004419855 ubox
4 60 0.040056805 ubox
4 63 0.045701413 ubox
5 41 0.008455237 ubox
5 47 0.016556320 ubox
5 59 0.040539214 ubox
6 17 0.019838628 ubox
6 21 0.004054051 ubox
6 30 0.021178077 ubox
6 35 0.059333685 ubox
6 39 0.004453614 ubox
6 45 0.039405980 ubox
6 58 0.040487652 ubox
6 61 0.039686507 ubox
7 16 0.020207751 ubox
7 20 0.004040749 ubox
7 29 0.021605822 ubox
7 32 0.972426391 ubox
7 34 0.082326191 ubox
7 38 0.005411193 ubox
7 44 0.043360955 ubox
7 50 0.054334566 ubox
7 57 0.038015642 ubox
7 60 0.039654810 ubox
8 15 0.020298790 ubox
8 18 0.003466323 ubox
8 28 0.022197373 ubox
8 31 0.972947441 ubox
8 33 0.083208212 ubox
8 40 0.004669148 ubox
8 43 0.043569525 ubox
8 46 0.008193682 ubox
8 49 0.062522508 ubox
8 51 0.004547773 ubox
8 55 0.017880501 ubox
8 59 0.038427069 ubox
9 14 0.020293312 ubox
9 17 0.003276262 ubox
9 27 0.022252898 ubox
9 29 0.003332950 ubox
9 30 0.972885779 ubox
9 32 0.083103282 ubox
9 38 0.190700251 ubox
9 39 0.003355501 ubox
9 42 0.043566862 ubox
9 45 0.008337361 ubox
9 48 0.062543128 ubox
9 50 0.004535503 ubox
9 54 0.017734846 ubox
9 58 0.038218725 ubox
10 26 0.022448015 ubox
10 28 0.003485005 ubox
10 31 0.064770542 ubox
10 37 0.194977301 ubox
10 41 0.043518473 ubox
10 47 0.063613458 ubox
10 49 0.003428493 ubox
11 18 0.006405904 ubox
11 28 0.971582118 ubox
11 31 0.052318572 ubox
11 36 0.195003589 ubox
11 40 0.043523916 ubox
11 43 0.015391878 ubox
11 46 0.064431660 ubox
11 49 0.004431547 ubox
11 55 0.021871847 ubox
12 17 0.006415479 ubox
12 24 0.011607287 ubox
12 27 0.973211842 ubox
12 29 0.035455270 ubox
12 30 0.073755115 ubox
12 35 0.194915081 ubox
12 38 0.028716027 ubox
12 39 0.032938405 ubox
12 42 0.015415285 ubox
12 45 0.064784376 ubox
12 48 0.005233183 ubox
12 54 0.021836248 ubox
13 23 0.009183261 ubox
13 26 0.960473763 ubox
13 28 0.027537423 ubox
13 37 0.040421123 ubox
13 41 0.015404780 ubox
13 47 0.005276232 ubox
14 23 0.342197859 ubox
14 28 0.077561075 ubox
14 31 0.004039900 ubox
14 33 0.194904426 ubox
14 36 0.040497118 ubox
14 40 0.015405984 ubox
14 43 0.064885284 ubox
14 46 0.005413714 ubox
14 55 0.003195566 ubox
15 22 0.343696937 ubox
15 24 0.839340343 ubox
15 27 0.080649163 ubox
15 30 0.004317028 ubox
15 32 0.194982498 ubox
15 35 0.040475929 ubox
15 38 0.019831357 ubox
15 39 0.010914640 ubox
15 42 0.064917298 ubox
15 45 0.005412977 ubox
15 54 0.003188036 ubox
16 23 0.860600482 ubox
16 26 0.080230933 ubox
16 31 0.194923357 ubox
16 37 0.022891114 ubox
16 41 0.064870150 ubox
17 23 0.284863923 ubox
17 28 0.006183938 ubox
17 33 0.040422466 ubox
17 36 0.022913183 ubox
17 40 0.064918324 ubox
17 43 0.005412109 ubox
18 22 0.301311867 ubox
18 27 0.006366441 ubox
18 29 0.194826465 ubox
18 30 0.003772553 ubox
18 32 0.040405926 ubox
18 35 0.022895832 ubox
18 39 0.064703405 ubox
18 42 0.005414635 ubox
19 28 0.193567905 ubox
19 41 0.005392435 ubox
20 37 0.060020000 ubox
20 40 0.005256424 ubox
21 36 0.060207841 ubox
21 37 0.025514865 ubox
22 28 0.011269672 ubox
22 31 0.044008330 ubox
22 33 0.014019762 ubox
22 36 0.025597296 ubox
22 55 0.004220671 ubox
22 59 0.003312679 ubox
22 64 0.014861975 ubox
23 27 0.012040466 ubox
23 30 0.044020033 ubox
23 32 0.014055633 ubox
23 34 0.059873495 ubox
23 35 0.025298588 ubox
23 54 0.004224239 ubox
23 58 0.003385662 ubox
23 60 0.003436226 ubox
23 63 0.014857630 ubox
24 31 0.013915588 ubox
24 33 0.059976031 ubox
25 59 0.014727695 ubox
26 32 0.058440700 ubox
26 34 0.008713340 ubox
26 58 0.015450876 ubox
26 60 0.008467471 ubox
27 31 0.054700807 ubox
27 33 0.008909938 ubox
27 55 0.010692962 ubox
27 59 0.005314751 ubox
28 32 0.008342970 ubox
28 52 0.003200855 ubox
28 54 0.010696604 ubox
28 56 0.015962438 ubox
29 55 0.016076620 ubox
30 51 0.037493250 ubox
31 50 0.037709477 ubox
32 49 0.038076196 ubox
33 48 0.038081120 ubox
34 47 0.038061932 ubox
35 46 0.038094113 ubox
36 45 0.038096940 ubox
37 44 0.038097459 ubox
38 43 0.037938108 ubox
39 55 0.015783150 ubox
39 64 0.994474494 ubox
40 53 0.020159375 ubox
40 54 0.011951191 ubox
40 57 0.003262134 ubox
40 63 0.995693680 ubox
41 52 0.022720466 ubox
41 53 0.005887652 ubox
41 56 0.003275910 ubox
41 62 0.992481699 ubox
41 65 0.004523557 ubox
42 51 0.023508160 ubox
42 55 0.003277777 ubox
42 64 0.004988072 ubox
43 50 0.023514528 ubox
43 54 0.003275984 ubox
43 60 0.994873616 ubox
43 63 0.004916252 ubox
44 49 0.023409825 ubox
44 59 0.991130386 ubox
45 59 0.008152898 ubox
45 64 0.019956543 ubox
46 57 0.996294099 ubox
46 58 0.008678004 ubox
46 63 0.021980652 ubox
47 56 0.996283390 ubox
47 57 0.004292231 ubox
47 62 0.021949120 ubox
48 55 0.996607240 ubox
49 54 0.996281535 ubox
49 60 0.022052239 ubox
50 59 0.022996425 ubox
50 64 0.007575628 ubox
51 58 0.023073684 ubox
51 60 0.008631264 ubox
51 63 0.007577137 ubox
52 59 0.008486016 ubox
54 64 0.017718927 ubox
55 63 0.017732497 ubox
58 64 0.012166561 ubox
59 63 0.011393579 ubox
59 65 0.005146840 ubox
60 64 0.005638208 ubox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
9 30 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
39 64 0.9500000 lbox
40 63 0.9500000 lbox
41 62 0.9500000 lbox
43 60 0.9500000 lbox
44 59 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
