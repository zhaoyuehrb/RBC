%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGCCCGGGCCAGGUGUGCGCCCUCCUCGCUGCGAGGGGGAGCGGGCGGCUGCGGGGAGCGAUUUUCCAGCCCGGUUUGUGCUCUGUGUGUUUGUCUGCCUCUGGAGGGCUGGGUCCUCCUUAUUCACAGGUGAGUCACACCCUGAAACACAGGCUCUCUUCCUGUCAGGACUGAGUCAGGUAGAAGAGUCGAUAAAACCACCUGAUCAAGGAAAAGGAAGGCACAGCGGAGCGCAGAGUGAGAACCACCAAC\
CGAGGCGCCGGGCAGCGACCCCUGCAGCGGAGACAGAGACUGAGCGGCCCGGCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-114.71089935 1081.54992676]
[-117.15418243 1066.31726074]
[-110.95327759 1052.19091797]
[-98.08687592 1043.67871094]
[-98.38605499 1028.68164062]
[-98.68523407 1013.68463135]
[-98.98441315 998.68762207]
[-102.24170685 992.09851074]
[-99.21103668 983.53973389]
[-99.36063385 968.54046631]
[-99.51023102 953.54119873]
[-99.65982819 938.54193115]
[-99.80942535 923.54272461]
[-106.90688324 921.11865234]
[-118.20293427 930.98773193]
[-121.10179138 916.27050781]
[-128.19924927 913.84643555]
[-137.49299622 925.62036133]
[-146.78674316 937.39434814]
[-149.26385498 953.02044678]
[-163.22271729 958.21655273]
[-172.51646423 969.99053955]
[-181.81021118 981.76446533]
[-191.04513550 993.58465576]
[-200.22099304 1005.45068359]
[-209.39686584 1017.31677246]
[-218.57272339 1029.18286133]
[-227.74859619 1041.04895020]
[-236.92445374 1052.91491699]
[-246.10032654 1064.78100586]
[-255.27618408 1076.64709473]
[-260.18228149 1092.87561035]
[-277.13476562 1092.65380859]
[-281.61453247 1076.30236816]
[-267.14224243 1067.47119141]
[-257.96640015 1055.60522461]
[-248.79052734 1043.73913574]
[-239.61465454 1031.87304688]
[-230.43879700 1020.00695801]
[-221.26292419 1008.14093018]
[-212.08706665 996.27484131]
[-202.91119385 984.40875244]
[-201.31381226 977.23419189]
[-193.58418274 972.47070312]
[-184.29042053 960.69677734]
[-174.99667358 948.92279053]
[-173.18431091 934.13885498]
[-158.56071472 928.10058594]
[-149.26696777 916.32659912]
[-139.97322083 904.55267334]
[-59.51279831 885.19354248]
[-56.68738556 870.46203613]
[-53.86197281 855.73052979]
[-51.03656006 840.99902344]
[-48.21114731 826.26751709]
[-45.38573456 811.53607178]
[-42.56032181 796.80456543]
[-39.73490524 782.07305908]
[-36.90949249 767.34155273]
[-45.45573044 755.19671631]
[-42.80021286 740.21661377]
[-30.00362968 731.33489990]
[-27.17821693 716.60339355]
[-28.99438095 709.48101807]
[-24.25046730 701.73937988]
[-21.27827454 687.03680420]
[-26.34030342 673.02874756]
[-16.02196503 661.03533936]
[-13.04977226 646.33270264]
[-10.07757950 631.63012695]
[-17.51901817 613.75006104]
[-3.81996322 598.91436768]
[-1.14160979 584.15545654]
[1.53674364 569.39648438]
[4.14146614 554.62438965]
[6.67249346 539.83947754]
[9.20352077 525.05450439]
[11.73454762 510.26962280]
[14.26557446 495.48468018]
[8.78675461 481.63436890]
[18.74168777 469.33761597]
[21.27271461 454.55270386]
[23.80374146 439.76776123]
[25.81723976 424.90353394]
[27.31075859 409.97805786]
[28.80427551 395.05261230]
[30.29779243 380.12713623]
[31.79131126 365.20169067]
[33.28482819 350.27621460]
[34.77834702 335.35073853]
[36.27186584 320.42529297]
[33.82456589 313.49441528]
[37.85542679 305.35867310]
[39.49772644 290.44885254]
[41.14002228 275.53903198]
[42.78231812 260.62921143]
[44.42461777 245.71939087]
[36.52368546 230.02413940]
[47.61337662 215.29284668]
[49.10689545 200.36738586]
[50.60041428 185.44192505]
[52.09393311 170.51646423]
[53.58744812 155.59100342]
[55.00651932 140.65827942]
[56.35110855 125.71866608]
[50.66272736 111.83910370]
[39.22028351 102.14010620]
[27.77784157 92.44111633]
[16.33539772 82.74211884]
[4.89295387 73.04312897]
[-6.54948997 63.34413147]
[-17.99193382 53.64513779]
[-33.98405457 48.01588821]
[-33.00185394 31.09041405]
[-16.46593666 27.34879112]
[-8.29293919 42.20269394]
[3.14950418 51.90168762]
[14.59194756 61.60068130]
[26.03439140 71.29967499]
[37.47683334 80.99867249]
[48.91927719 90.69766235]
[60.36172104 100.39665985]
[66.40728760 95.95806885]
[64.76496124 81.04824829]
[78.49842834 87.08087921]
[84.54399872 82.64228821]
[78.71747589 68.82014465]
[72.89095306 54.99800491]
[67.06443024 41.17586136]
[55.46218109 35.62201691]
[50.87917709 24.03233147]
[55.25583649 12.79144478]
[49.56745529 -1.08811998]
[43.87907410 -14.96768475]
[38.19069290 -28.84724998]
[24.00667953 -36.34347153]
[21.16557121 -52.13294983]
[31.84682083 -64.10334778]
[47.85668945 -63.07200241]
[56.91377640 -49.83007050]
[52.07025528 -34.53562927]
[57.75864029 -20.65606689]
[63.44702148 -6.77650213]
[69.13540649 7.10306263]
[83.58049011 17.10831642]
[80.88657379 35.34933853]
[86.71309662 49.17148209]
[92.53961945 62.99362564]
[98.36614227 76.81577301]
[105.86157227 76.55402374]
[100.73144531 62.45856857]
[112.55184174 53.22394180]
[124.98709106 61.61230087]
[120.85243225 76.03053284]
[128.34786987 75.76878357]
[133.19601440 61.57387543]
[138.04415894 47.37896347]
[142.89230347 33.18405151]
[147.74044800 18.98914146]
[152.58859253 4.79423046]
[157.36589050 -9.42467976]
[162.07221985 -23.66723633]
[159.05551147 -39.19817352]
[170.39537048 -48.85514450]
[175.10169983 -63.09769821]
[179.80802917 -77.34025574]
[184.51437378 -91.58280945]
[189.07843018 -105.87159729]
[193.49975586 -120.20518494]
[197.92108154 -134.53877258]
[193.74639893 -150.39765930]
[205.58215332 -161.74874878]
[221.25273132 -156.91500854]
[224.63758850 -140.86898804]
[212.25468445 -130.11744690]
[207.83334351 -115.78385925]
[203.41201782 -101.45027161]
[204.78514099 -96.92680359]
[203.36871338 -91.49259186]
[198.75692749 -86.87647247]
[194.05059814 -72.63391876]
[189.34425354 -58.39136505]
[184.63792419 -44.14880753]
[187.99125671 -29.63659286]
[176.31478882 -18.96089935]
[171.60844421 -4.71834373]
[172.48851013 2.57905078]
[166.78350830 9.64237595]
[161.93536377 23.83728600]
[157.08720398 38.03219604]
[152.23905945 52.22710800]
[147.39091492 66.42201996]
[142.54277039 80.61692810]
[148.38311768 85.32228851]
[157.79383850 73.64159393]
[167.20454407 61.96090698]
[176.61524963 50.28021622]
[186.02615356 38.59967041]
[197.70654297 48.01074219]
[188.29594421 59.69092560]
[178.88523865 71.37162018]
[169.47451782 83.05230713]
[160.06381226 94.73299408]
[165.90415955 99.43835449]
[178.74237061 91.68074799]
[191.58056641 83.92314148]
[196.80346680 68.75406647]
[211.96722412 63.51570892]
[225.43948364 72.22649384]
[226.88549805 88.20424652]
[215.19599915 99.19220734]
[199.33818054 96.76135254]
[186.49996948 104.51895142]
[173.66175842 112.27655792]
[155.46418762 138.70344543]
[129.96997070 152.65693665]
[103.92228699 153.39984131]
[83.15093231 143.33895874]
[71.29072571 127.06325531]
[69.94613647 142.00286865]
[72.28501129 150.77597046]
[68.51290894 157.08451843]
[67.01939392 172.00997925]
[65.52587891 186.93544006]
[64.03235626 201.86090088]
[62.53884125 216.78636169]
[70.07203674 227.21269226]
[68.55412292 239.58285522]
[59.33444214 247.36167908]
[57.69214249 262.27151489]
[56.04984665 277.18133545]
[54.40755081 292.09115601]
[52.76525116 307.00097656]
[51.19732666 321.91882324]
[49.70380783 336.84426880]
[48.21028900 351.76974487]
[46.71677399 366.69519043]
[45.22325516 381.62066650]
[43.72973633 396.54611206]
[42.23622131 411.47158813]
[40.74270248 426.39703369]
[52.03608322 416.52487183]
[67.03107452 416.13723755]
[78.81945038 425.41271973]
[81.97028351 440.07803345]
[75.03197479 453.37692261]
[61.20101929 459.18249512]
[46.84936905 454.82012939]
[38.58866119 442.29879761]
[36.05763626 457.08370972]
[33.52660751 471.86865234]
[38.82439423 486.77648926]
[29.05049706 498.01571655]
[26.51946831 512.80065918]
[23.98844147 527.58557129]
[21.45741463 542.37048340]
[18.92638779 557.15539551]
[20.55859184 566.08703613]
[16.29568672 572.07482910]
[13.61733437 586.83380127]
[10.93898106 601.59271240]
[17.60217476 610.10406494]
[18.49309158 620.65698242]
[13.55914402 629.77972412]
[4.62500763 634.60235596]
[1.65281534 649.30493164]
[-1.31937683 664.00750732]
[3.53006124 679.06719971]
[-6.57568741 690.00897217]
[-9.54788017 704.71154785]
[-12.44671822 719.42877197]
[-15.27213192 734.16027832]
[-6.66963768 747.14624023]
[-9.74486446 762.04583740]
[-22.17799568 770.16693115]
[-25.00340843 784.89843750]
[-27.82882309 799.62994385]
[-30.65423584 814.36145020]
[-33.47964859 829.09295654]
[-36.30506134 843.82446289]
[-39.13047409 858.55596924]
[-41.95588684 873.28747559]
[-44.78130341 888.01892090]
[-32.66286087 879.17907715]
[-17.96282578 882.16387939]
[-10.25172043 895.03002930]
[-14.54989529 909.40106201]
[-28.05900383 915.92053223]
[-41.98357010 910.34429932]
[-35.61042023 923.92309570]
[-29.23726845 937.50189209]
[-17.03413391 949.27130127]
[-24.96546173 964.25567627]
[-41.55981445 960.78234863]
[-42.81603622 943.87500000]
[-49.18918610 930.29626465]
[-55.56233597 916.71746826]
[-62.87429810 918.38641357]
[-67.29532623 932.72009277]
[-77.49821472 921.72418213]
[-84.81017303 923.39312744]
[-84.66057587 938.39233398]
[-84.51097870 953.39160156]
[-84.36138153 968.39086914]
[-84.21178436 983.39013672]
[-83.98739624 998.38842773]
[-83.68821716 1013.38543701]
[-83.38903809 1028.38244629]
[-83.08985901 1043.37951660]
[-69.89419556 1051.37182617]
[-63.13483047 1065.23962402]
[-64.96865082 1080.55761719]
[-74.81050110 1092.43786621]
[-89.51987457 1097.08959961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 309]
[5 308]
[6 307]
[7 306]
[9 305]
[10 304]
[11 303]
[12 302]
[13 301]
[17 50]
[18 49]
[19 48]
[21 46]
[22 45]
[23 44]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[51 283]
[52 282]
[53 281]
[54 280]
[55 279]
[56 278]
[57 277]
[58 276]
[59 275]
[62 272]
[63 271]
[65 270]
[66 269]
[68 267]
[69 266]
[70 265]
[72 261]
[73 260]
[74 259]
[75 257]
[76 256]
[77 255]
[78 254]
[79 253]
[81 251]
[82 250]
[83 249]
[84 241]
[85 240]
[86 239]
[87 238]
[88 237]
[89 236]
[90 235]
[91 234]
[93 233]
[94 232]
[95 231]
[96 230]
[97 229]
[99 226]
[100 225]
[101 224]
[102 223]
[103 222]
[104 220]
[105 219]
[106 122]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[126 149]
[127 148]
[128 147]
[129 146]
[132 144]
[133 143]
[134 142]
[135 141]
[155 193]
[156 192]
[157 191]
[158 190]
[159 189]
[160 188]
[161 186]
[162 185]
[164 183]
[165 182]
[166 181]
[167 180]
[168 177]
[169 176]
[170 175]
[204 214]
[205 213]
[206 212]
[289 297]
[290 296]
[291 295]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
