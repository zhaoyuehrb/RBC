%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GML)
} def

/sequence { (\
GUCGGCGCGGGAGGCUCAGAUGGCUGGAGGCGGCGGGCACGCACACUGCGGGGCUCCGAGGGGCACAGGUCCAGGCUCCUGCGUGAAGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.012834765 ubox
1 89 0.054156129 ubox
2 36 0.013837259 ubox
2 37 0.011653586 ubox
2 86 0.773530242 ubox
2 88 0.034742083 ubox
3 35 0.017946755 ubox
3 36 0.010316285 ubox
3 85 0.823844680 ubox
3 90 0.035228351 ubox
4 34 0.018825109 ubox
4 84 0.581240712 ubox
4 89 0.036795688 ubox
5 34 0.008709763 ubox
5 84 0.797161088 ubox
5 89 0.003559005 ubox
6 32 0.019792441 ubox
6 33 0.006364796 ubox
6 83 0.998055117 ubox
7 31 0.020672106 ubox
7 82 0.999757141 ubox
8 30 0.020672144 ubox
8 81 0.999747274 ubox
9 80 0.999017978 ubox
10 79 0.999767753 ubox
11 78 0.999768976 ubox
12 77 0.997291443 ubox
13 25 0.020966858 ubox
13 76 0.987335778 ubox
13 77 0.067066580 ubox
14 24 0.033094184 ubox
14 31 0.101801943 ubox
14 34 0.010866882 ubox
14 38 0.045538853 ubox
14 54 0.006273344 ubox
14 64 0.004759978 ubox
14 76 0.154875437 ubox
15 23 0.033362056 ubox
15 27 0.008315148 ubox
15 29 0.044342041 ubox
15 30 0.098573053 ubox
15 33 0.010971638 ubox
15 37 0.045593433 ubox
15 53 0.006298111 ubox
15 60 0.091834015 ubox
15 63 0.004757204 ubox
15 74 0.962310183 ubox
15 75 0.207843313 ubox
16 22 0.030818183 ubox
16 23 0.017877473 ubox
16 27 0.114645386 ubox
16 28 0.050830950 ubox
16 29 0.077287865 ubox
16 32 0.009606527 ubox
16 36 0.045525775 ubox
16 52 0.006258809 ubox
16 59 0.099784146 ubox
16 62 0.004745859 ubox
16 69 0.003341842 ubox
16 73 0.893200313 ubox
16 74 0.190554162 ubox
16 75 0.019077076 ubox
17 22 0.223079405 ubox
17 26 0.241323977 ubox
17 27 0.040139388 ubox
17 29 0.004791553 ubox
17 32 0.006362668 ubox
17 35 0.045622014 ubox
17 48 0.009953741 ubox
17 51 0.005771621 ubox
17 58 0.105540909 ubox
17 60 0.024933981 ubox
17 61 0.004936281 ubox
17 68 0.006319218 ubox
17 74 0.060883765 ubox
18 25 0.244982603 ubox
18 47 0.010073516 ubox
18 55 0.014670900 ubox
19 24 0.243991661 ubox
19 46 0.010076122 ubox
19 54 0.015708649 ubox
19 56 0.083814952 ubox
19 71 0.193623064 ubox
20 55 0.081627793 ubox
20 70 0.192286646 ubox
21 32 0.014871522 ubox
21 35 0.007699295 ubox
21 39 0.030631012 ubox
21 45 0.009360181 ubox
21 58 0.020660731 ubox
21 65 0.017822369 ubox
21 67 0.111215472 ubox
21 69 0.173305352 ubox
21 73 0.122107962 ubox
22 31 0.018898643 ubox
22 34 0.037105328 ubox
22 38 0.036014311 ubox
22 44 0.009447395 ubox
22 55 0.022328838 ubox
22 56 0.005212826 ubox
22 57 0.032387519 ubox
22 64 0.022114830 ubox
22 66 0.119846481 ubox
22 71 0.127067390 ubox
22 72 0.151638409 ubox
23 31 0.152962583 ubox
23 34 0.887489925 ubox
23 38 0.005375774 ubox
23 42 0.006081751 ubox
23 49 0.006295237 ubox
23 54 0.026935576 ubox
23 56 0.022326240 ubox
23 64 0.115148961 ubox
23 70 0.129233371 ubox
23 71 0.150593392 ubox
24 30 0.153371031 ubox
24 33 0.898472362 ubox
24 36 0.035120585 ubox
24 37 0.004992802 ubox
24 41 0.006044816 ubox
24 48 0.006327351 ubox
24 51 0.123869414 ubox
24 52 0.007244271 ubox
24 53 0.026309249 ubox
24 60 0.057404230 ubox
24 62 0.022423795 ubox
24 63 0.115125957 ubox
24 68 0.175576212 ubox
24 69 0.183400682 ubox
24 74 0.009294768 ubox
25 29 0.138173106 ubox
25 32 0.897701360 ubox
25 35 0.035155873 ubox
25 36 0.004480106 ubox
25 50 0.125309241 ubox
25 51 0.005527330 ubox
25 52 0.022861865 ubox
25 58 0.069555429 ubox
25 59 0.050076728 ubox
25 60 0.003164894 ubox
25 61 0.021679283 ubox
25 62 0.110818361 ubox
25 65 0.019688378 ubox
25 67 0.179205164 ubox
25 68 0.179942562 ubox
25 73 0.011586292 ubox
26 31 0.895562157 ubox
26 34 0.035292347 ubox
26 40 0.003266905 ubox
26 49 0.127961322 ubox
26 57 0.108986381 ubox
26 64 0.020288469 ubox
26 66 0.179487895 ubox
26 72 0.012858527 ubox
27 56 0.109626434 ubox
27 71 0.012894761 ubox
28 47 0.133468481 ubox
28 55 0.109114912 ubox
28 70 0.012169955 ubox
29 46 0.134087091 ubox
29 47 0.006100881 ubox
29 54 0.107008464 ubox
29 55 0.010990400 ubox
29 57 0.038495406 ubox
30 38 0.033417244 ubox
30 42 0.026346199 ubox
30 46 0.006547978 ubox
30 49 0.022612457 ubox
30 54 0.023652496 ubox
30 56 0.038284163 ubox
30 64 0.241694063 ubox
31 37 0.033455317 ubox
31 41 0.026376415 ubox
31 48 0.022662109 ubox
31 50 0.013684933 ubox
31 53 0.031415901 ubox
31 58 0.150422012 ubox
31 63 0.241927623 ubox
32 40 0.026352615 ubox
32 47 0.022129332 ubox
32 49 0.010342355 ubox
32 55 0.036373636 ubox
32 57 0.152750999 ubox
33 42 0.144262018 ubox
33 46 0.010735674 ubox
33 49 0.106632929 ubox
33 54 0.037115940 ubox
33 56 0.145758598 ubox
33 64 0.004716712 ubox
34 41 0.144683519 ubox
34 48 0.107085373 ubox
34 50 0.003468652 ubox
34 53 0.037144306 ubox
34 58 0.377834594 ubox
34 63 0.004577610 ubox
35 40 0.144570777 ubox
35 47 0.106976518 ubox
35 49 0.003281550 ubox
35 55 0.050504434 ubox
35 56 0.706178857 ubox
35 57 0.637888764 ubox
35 72 0.122625743 ubox
36 46 0.106962892 ubox
36 47 0.004474929 ubox
36 54 0.049793088 ubox
36 55 0.726593468 ubox
36 56 0.635857122 ubox
36 57 0.014666591 ubox
36 71 0.122752386 ubox
36 72 0.004413912 ubox
37 46 0.005702708 ubox
37 49 0.015245464 ubox
37 54 0.964167524 ubox
37 55 0.084567083 ubox
37 56 0.013427868 ubox
37 70 0.122623062 ubox
37 71 0.004398400 ubox
38 48 0.015303746 ubox
38 53 0.965724096 ubox
38 69 0.122591094 ubox
38 85 0.009119429 ubox
38 90 0.011840147 ubox
39 47 0.014316031 ubox
39 84 0.009270340 ubox
39 89 0.012942660 ubox
40 50 0.979011912 ubox
40 83 0.009286949 ubox
40 88 0.013044819 ubox
40 90 0.010907330 ubox
41 49 0.981158709 ubox
41 64 0.048316435 ubox
41 82 0.009284582 ubox
41 89 0.011300825 ubox
42 48 0.980965872 ubox
42 63 0.048333637 ubox
42 81 0.009282769 ubox
42 88 0.011303364 ubox
43 47 0.795006637 ubox
43 80 0.009000870 ubox
44 85 0.017837730 ubox
45 84 0.017922917 ubox
46 60 0.065848678 ubox
46 61 0.032722127 ubox
46 62 0.008822320 ubox
46 68 0.006199297 ubox
46 83 0.017452419 ubox
47 59 0.065751073 ubox
47 60 0.030512625 ubox
47 61 0.008748879 ubox
47 67 0.006208429 ubox
47 83 0.005075882 ubox
48 66 0.006115535 ubox
48 70 0.003279365 ubox
48 76 0.004608076 ubox
48 82 0.018590257 ubox
49 58 0.086261477 ubox
49 69 0.003602014 ubox
49 75 0.004711073 ubox
49 81 0.018596917 ubox
50 57 0.087743437 ubox
50 72 0.017571954 ubox
50 79 0.010854968 ubox
50 80 0.017087632 ubox
51 56 0.087476920 ubox
51 57 0.018557743 ubox
51 71 0.017741486 ubox
51 72 0.086589521 ubox
51 78 0.010933043 ubox
51 79 0.017050350 ubox
52 56 0.018366872 ubox
52 70 0.017525770 ubox
52 71 0.086971427 ubox
52 72 0.006286946 ubox
52 77 0.011012679 ubox
52 78 0.016994259 ubox
53 64 0.144697673 ubox
53 70 0.086624055 ubox
53 71 0.006221299 ubox
53 76 0.017793054 ubox
53 77 0.008982750 ubox
54 60 0.007997296 ubox
54 63 0.144862652 ubox
54 68 0.017156480 ubox
54 69 0.086582035 ubox
54 75 0.017635327 ubox
55 59 0.007296321 ubox
55 62 0.143827737 ubox
55 63 0.007235658 ubox
55 67 0.017710210 ubox
55 68 0.085208013 ubox
55 74 0.014932963 ubox
56 60 0.010386285 ubox
56 61 0.143566455 ubox
56 62 0.021327030 ubox
56 63 0.087601188 ubox
56 69 0.005603224 ubox
56 74 0.005740753 ubox
56 75 0.016727046 ubox
57 61 0.021669665 ubox
57 62 0.088707272 ubox
57 68 0.007744439 ubox
57 74 0.021068647 ubox
58 71 0.005109802 ubox
59 70 0.005026585 ubox
60 71 0.005439567 ubox
60 72 0.111602040 ubox
61 70 0.005339510 ubox
61 71 0.101743020 ubox
61 72 0.933070655 ubox
62 70 0.087787655 ubox
62 71 0.935359610 ubox
62 72 0.029479594 ubox
63 70 0.935272718 ubox
63 71 0.029368366 ubox
64 69 0.935760283 ubox
85 89 0.005988850 ubox
5 84 0.9500000 lbox
6 83 0.9500000 lbox
7 82 0.9500000 lbox
8 81 0.9500000 lbox
9 80 0.9500000 lbox
10 79 0.9500000 lbox
11 78 0.9500000 lbox
12 77 0.9500000 lbox
13 76 0.9500000 lbox
15 74 0.9500000 lbox
16 73 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
35 56 0.9500000 lbox
36 55 0.9500000 lbox
37 54 0.9500000 lbox
38 53 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
61 72 0.9500000 lbox
62 71 0.9500000 lbox
63 70 0.9500000 lbox
64 69 0.9500000 lbox
showpage
end
%%EOF
