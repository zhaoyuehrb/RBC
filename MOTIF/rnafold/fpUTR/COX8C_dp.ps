%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COX8C)
} def

/sequence { (\
ACGAGCACUGGAGCUUGCGUUACUUGGCCUCACCUCACCUGUGCUGUCCACGCCUGGCUUUGUCUCACCUGACGCGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.004709582 ubox
1 47 0.073350220 ubox
1 63 0.003588256 ubox
2 10 0.043015700 ubox
2 17 0.060937240 ubox
2 19 0.005323954 ubox
2 46 0.084120748 ubox
2 52 0.013036771 ubox
2 56 0.013142687 ubox
2 62 0.004242414 ubox
2 71 0.035421283 ubox
2 74 0.024201935 ubox
2 76 0.097066947 ubox
3 9 0.037904638 ubox
3 16 0.120077057 ubox
3 18 0.004953418 ubox
3 36 0.008927042 ubox
3 45 0.041579597 ubox
3 48 0.012118133 ubox
3 51 0.013320932 ubox
3 55 0.012623350 ubox
3 60 0.014532705 ubox
3 61 0.004619773 ubox
3 64 0.021396044 ubox
3 66 0.887604326 ubox
3 70 0.007722845 ubox
3 73 0.014255119 ubox
3 75 0.094998922 ubox
4 15 0.132218125 ubox
4 35 0.008940974 ubox
4 45 0.172158636 ubox
4 47 0.009309810 ubox
4 55 0.003237901 ubox
4 59 0.015674042 ubox
4 60 0.003486312 ubox
4 61 0.003172973 ubox
4 63 0.018850945 ubox
4 65 0.888685926 ubox
4 70 0.008009375 ubox
5 14 0.138791147 ubox
5 34 0.008926310 ubox
5 44 0.181236309 ubox
5 53 0.014176681 ubox
5 58 0.015816110 ubox
5 63 0.041929660 ubox
5 64 0.887947307 ubox
5 69 0.008349904 ubox
5 75 0.211724333 ubox
6 13 0.138699475 ubox
6 43 0.181257901 ubox
6 52 0.014250382 ubox
6 57 0.015555665 ubox
6 62 0.232894633 ubox
6 71 0.005111066 ubox
6 74 0.211831230 ubox
7 42 0.181207448 ubox
7 61 0.214037562 ubox
7 63 0.832472921 ubox
7 70 0.004778577 ubox
8 41 0.180749543 ubox
8 57 0.004287292 ubox
8 62 0.829664994 ubox
9 32 0.023172404 ubox
9 37 0.021648629 ubox
9 50 0.017883733 ubox
9 56 0.005776342 ubox
9 62 0.188154905 ubox
9 67 0.006451856 ubox
9 76 0.015118819 ubox
10 30 0.005004288 ubox
10 31 0.023154072 ubox
10 34 0.006430835 ubox
10 35 0.003250160 ubox
10 36 0.020431016 ubox
10 39 0.102661795 ubox
10 40 0.007021629 ubox
10 49 0.018560707 ubox
10 54 0.006441859 ubox
10 55 0.008464308 ubox
10 59 0.005253329 ubox
10 60 0.067667914 ubox
10 61 0.746156900 ubox
10 64 0.003773706 ubox
10 66 0.006695635 ubox
10 69 0.009713483 ubox
10 75 0.018325057 ubox
11 23 0.003440845 ubox
11 29 0.009180309 ubox
11 30 0.020578134 ubox
11 31 0.035497143 ubox
11 33 0.006349510 ubox
11 34 0.007273402 ubox
11 35 0.011272736 ubox
11 36 0.149964112 ubox
11 38 0.090497618 ubox
11 39 0.005478588 ubox
11 48 0.018560124 ubox
11 53 0.006250626 ubox
11 54 0.008674130 ubox
11 58 0.003908466 ubox
11 59 0.036699316 ubox
11 60 0.958895615 ubox
11 61 0.019813293 ubox
11 64 0.003541070 ubox
11 65 0.003819487 ubox
11 68 0.009528048 ubox
12 21 0.018493969 ubox
12 30 0.041520877 ubox
12 35 0.163300522 ubox
12 45 0.003522125 ubox
12 47 0.017525649 ubox
12 59 0.970520678 ubox
12 60 0.015432621 ubox
13 20 0.020042099 ubox
13 28 0.037059201 ubox
13 29 0.038546152 ubox
13 34 0.164676443 ubox
13 44 0.005655062 ubox
13 47 0.004656195 ubox
13 53 0.006435203 ubox
13 58 0.972828586 ubox
14 19 0.020164723 ubox
14 27 0.040427189 ubox
14 43 0.005650246 ubox
14 46 0.008831489 ubox
14 52 0.006427726 ubox
14 57 0.972804598 ubox
15 26 0.039666636 ubox
15 56 0.964306392 ubox
15 57 0.003169926 ubox
15 77 0.045192025 ubox
16 32 0.038109958 ubox
16 37 0.004137077 ubox
16 43 0.004646869 ubox
16 50 0.005025109 ubox
16 56 0.018447980 ubox
16 76 0.065620954 ubox
17 28 0.161600890 ubox
17 31 0.036817534 ubox
17 36 0.003905331 ubox
17 42 0.007539815 ubox
17 44 0.016373942 ubox
17 47 0.006816806 ubox
17 49 0.004836928 ubox
17 53 0.972626222 ubox
17 58 0.009566838 ubox
17 75 0.123587266 ubox
18 26 0.014490480 ubox
18 27 0.161850119 ubox
18 41 0.007738908 ubox
18 43 0.016382437 ubox
18 46 0.007844779 ubox
18 52 0.973251865 ubox
18 56 0.004651290 ubox
18 57 0.010053921 ubox
18 74 0.126591748 ubox
18 76 0.023033601 ubox
19 25 0.015298967 ubox
19 28 0.064309650 ubox
19 33 0.003990095 ubox
19 38 0.003882920 ubox
19 40 0.006908787 ubox
19 42 0.014300170 ubox
19 44 0.004857462 ubox
19 45 0.007539586 ubox
19 51 0.972796909 ubox
19 53 0.011602836 ubox
19 55 0.004312292 ubox
19 58 0.022160853 ubox
19 73 0.126583206 ubox
19 75 0.023244086 ubox
20 27 0.063723235 ubox
20 32 0.003765380 ubox
20 37 0.003834170 ubox
20 41 0.008337368 ubox
20 43 0.003831688 ubox
20 50 0.890392976 ubox
20 52 0.011404085 ubox
20 57 0.022094279 ubox
20 72 0.126497242 ubox
20 74 0.021348302 ubox
21 26 0.051764546 ubox
21 41 0.006475675 ubox
21 43 0.073177242 ubox
21 46 0.012395978 ubox
21 56 0.021650945 ubox
21 71 0.125895297 ubox
22 40 0.006503691 ubox
22 42 0.074304772 ubox
22 45 0.008406544 ubox
22 47 0.250211492 ubox
22 55 0.020677659 ubox
22 63 0.045370790 ubox
22 70 0.113308233 ubox
23 41 0.074359415 ubox
23 46 0.254697740 ubox
23 57 0.024916397 ubox
23 62 0.052211342 ubox
24 56 0.023718488 ubox
25 32 0.008436749 ubox
25 37 0.024817988 ubox
25 41 0.003964867 ubox
25 43 0.005237723 ubox
25 46 0.496736831 ubox
25 50 0.342428648 ubox
25 67 0.083340952 ubox
26 31 0.009327039 ubox
26 34 0.045317345 ubox
26 35 0.008061106 ubox
26 36 0.025534484 ubox
26 39 0.068530584 ubox
26 40 0.006528796 ubox
26 42 0.003497526 ubox
26 45 0.624332023 ubox
26 48 0.521175850 ubox
26 49 0.502539711 ubox
26 54 0.031910074 ubox
26 59 0.061388944 ubox
26 64 0.058362644 ubox
26 65 0.011131458 ubox
26 66 0.083155403 ubox
26 69 0.032738465 ubox
27 33 0.045293527 ubox
27 34 0.012807467 ubox
27 35 0.020098918 ubox
27 38 0.068353305 ubox
27 39 0.006741469 ubox
27 42 0.058692031 ubox
27 44 0.638131079 ubox
27 47 0.528030316 ubox
27 48 0.499796886 ubox
27 53 0.031957027 ubox
27 58 0.064647141 ubox
27 63 0.060782842 ubox
27 64 0.028761361 ubox
27 65 0.066347966 ubox
27 68 0.032685012 ubox
27 75 0.004866805 ubox
28 41 0.058772365 ubox
28 43 0.632425708 ubox
28 46 0.700935685 ubox
28 52 0.031847421 ubox
28 57 0.064684485 ubox
28 62 0.063436628 ubox
28 74 0.004913374 ubox
29 56 0.064461744 ubox
31 41 0.559287274 ubox
31 43 0.729866310 ubox
31 46 0.027138985 ubox
31 62 0.049702266 ubox
32 40 0.523682523 ubox
32 42 0.746754179 ubox
32 45 0.026000240 ubox
32 47 0.030623833 ubox
32 61 0.048277617 ubox
32 63 0.028134985 ubox
33 41 0.745594437 ubox
33 46 0.031120531 ubox
33 57 0.061496782 ubox
33 62 0.028902000 ubox
34 56 0.061420402 ubox
34 57 0.027105069 ubox
35 56 0.013588107 ubox
35 57 0.061638815 ubox
36 43 0.038417611 ubox
36 46 0.011531499 ubox
36 56 0.072667256 ubox
36 62 0.005512805 ubox
37 42 0.032593840 ubox
37 45 0.010840898 ubox
37 47 0.013903835 ubox
37 55 0.071943813 ubox
37 61 0.005490164 ubox
37 63 0.003371560 ubox
38 46 0.014316930 ubox
38 57 0.042594231 ubox
38 62 0.003474130 ubox
39 56 0.042666205 ubox
39 57 0.008439892 ubox
40 50 0.007236715 ubox
40 52 0.099539241 ubox
40 56 0.008393327 ubox
40 67 0.003464790 ubox
41 49 0.007894514 ubox
41 51 0.110517146 ubox
41 53 0.041406548 ubox
41 55 0.010073516 ubox
41 66 0.003668333 ubox
42 50 0.110545886 ubox
42 52 0.041417117 ubox
42 76 0.004214235 ubox
43 49 0.110030251 ubox
43 51 0.041134810 ubox
43 53 0.024849690 ubox
43 58 0.010963294 ubox
43 63 0.004936112 ubox
43 75 0.005697686 ubox
44 52 0.024865516 ubox
44 57 0.010983916 ubox
44 62 0.005390367 ubox
44 74 0.005622325 ubox
45 52 0.003882130 ubox
45 56 0.010697255 ubox
45 74 0.003745496 ubox
46 51 0.011240578 ubox
46 53 0.012612331 ubox
46 55 0.008482068 ubox
46 58 0.112027847 ubox
46 61 0.003928907 ubox
46 73 0.015411592 ubox
46 75 0.007772861 ubox
46 78 0.008784044 ubox
47 52 0.011952234 ubox
47 57 0.047918062 ubox
47 72 0.015428576 ubox
47 74 0.007165275 ubox
47 77 0.009714111 ubox
48 56 0.046323698 ubox
48 57 0.141296268 ubox
48 71 0.014770295 ubox
48 76 0.009501054 ubox
49 56 0.143097259 ubox
49 71 0.005424590 ubox
50 55 0.122306980 ubox
50 63 0.003815354 ubox
50 70 0.006688269 ubox
51 62 0.004296946 ubox
51 74 0.005303131 ubox
51 76 0.064596958 ubox
52 58 0.039215676 ubox
52 61 0.003859634 ubox
52 63 0.003374364 ubox
52 73 0.005186177 ubox
52 75 0.065959479 ubox
53 57 0.038983937 ubox
53 62 0.003541376 ubox
53 74 0.065435811 ubox
55 67 0.005846365 ubox
55 71 0.004629874 ubox
55 76 0.007391591 ubox
56 64 0.025245873 ubox
56 66 0.006423864 ubox
56 69 0.024742179 ubox
56 70 0.005641687 ubox
56 73 0.003165768 ubox
56 75 0.008386208 ubox
57 63 0.025408989 ubox
57 64 0.003891400 ubox
57 65 0.005040721 ubox
57 68 0.024683792 ubox
57 69 0.005753491 ubox
57 75 0.052121596 ubox
58 62 0.025389912 ubox
58 74 0.051925852 ubox
59 77 0.026027790 ubox
60 76 0.027646965 ubox
60 77 0.056993712 ubox
61 67 0.009187199 ubox
61 74 0.205490234 ubox
61 76 0.067634503 ubox
62 66 0.009574809 ubox
62 68 0.007537299 ubox
62 73 0.426294420 ubox
62 75 0.079286894 ubox
62 78 0.009817517 ubox
63 67 0.006841679 ubox
63 72 0.427010189 ubox
63 74 0.078127313 ubox
63 77 0.011177696 ubox
64 71 0.427180764 ubox
64 76 0.011594020 ubox
65 72 0.080278063 ubox
65 77 0.009081634 ubox
66 71 0.081659131 ubox
66 76 0.010092429 ubox
70 76 0.054462970 ubox
71 75 0.064002521 ubox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
15 56 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
showpage
end
%%EOF
