%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYBPC2)
} def

/sequence { (\
GGCCUAGCGGGACGCGGCUGCGGUCAGAGGAGCAGGAGGAGGUCCCCCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.069780166 ubox
1 25 0.784886480 ubox
1 44 0.037709330 ubox
1 45 0.015732366 ubox
1 46 0.003511233 ubox
1 47 0.015377608 ubox
1 48 0.280300431 ubox
2 8 0.307438414 ubox
2 18 0.086842344 ubox
2 21 0.006538780 ubox
2 24 0.787686763 ubox
2 33 0.040948371 ubox
2 43 0.038380009 ubox
2 44 0.015703050 ubox
2 46 0.009330067 ubox
2 47 0.279636736 ubox
3 7 0.305555330 ubox
3 10 0.011855588 ubox
3 11 0.008373297 ubox
3 17 0.087052321 ubox
3 20 0.006494794 ubox
3 23 0.788175065 ubox
3 30 0.057061694 ubox
3 32 0.039883483 ubox
3 36 0.020672272 ubox
3 39 0.006496881 ubox
3 42 0.041608692 ubox
4 9 0.012360685 ubox
4 10 0.008509256 ubox
4 16 0.086574731 ubox
4 17 0.003877569 ubox
4 22 0.787584829 ubox
4 23 0.007272780 ubox
4 29 0.057653531 ubox
4 30 0.035020661 ubox
4 32 0.008861976 ubox
4 35 0.020753640 ubox
4 38 0.006520698 ubox
4 41 0.041599896 ubox
5 9 0.007677504 ubox
5 16 0.004196963 ubox
5 20 0.744323308 ubox
5 22 0.008518650 ubox
5 28 0.057124162 ubox
5 29 0.033794746 ubox
5 31 0.011190794 ubox
5 34 0.020652497 ubox
5 37 0.006404362 ubox
5 40 0.040355878 ubox
6 19 0.752879457 ubox
7 15 0.096965257 ubox
7 18 0.753693111 ubox
7 21 0.229066787 ubox
7 33 0.023931096 ubox
8 14 0.097401081 ubox
8 16 0.167435893 ubox
8 17 0.735010684 ubox
8 20 0.230079759 ubox
8 32 0.023937751 ubox
8 49 0.114391558 ubox
9 13 0.091497109 ubox
9 15 0.235762305 ubox
9 19 0.229716901 ubox
9 25 0.011934803 ubox
9 45 0.003367878 ubox
9 46 0.591105747 ubox
9 47 0.043383272 ubox
9 48 0.103732880 ubox
10 18 0.229618135 ubox
10 19 0.008566367 ubox
10 24 0.011019732 ubox
10 25 0.046852658 ubox
10 45 0.593222735 ubox
10 46 0.037187508 ubox
10 47 0.100079023 ubox
11 18 0.011985771 ubox
11 24 0.026074727 ubox
11 25 0.055396480 ubox
11 44 0.594337975 ubox
11 45 0.027627586 ubox
11 46 0.096072128 ubox
12 24 0.055593689 ubox
12 43 0.595867147 ubox
13 22 0.068074703 ubox
13 23 0.049420688 ubox
13 42 0.595697822 ubox
14 21 0.072988608 ubox
14 33 0.033081042 ubox
14 43 0.067367787 ubox
15 20 0.072913900 ubox
15 22 0.041996558 ubox
15 32 0.033104318 ubox
15 42 0.067841589 ubox
15 49 0.003576915 ubox
16 21 0.042055836 ubox
16 25 0.025180201 ubox
16 44 0.003693502 ubox
16 45 0.006092971 ubox
16 48 0.003746076 ubox
17 24 0.025322197 ubox
17 33 0.011769547 ubox
17 43 0.003735616 ubox
17 44 0.006079424 ubox
17 47 0.003672047 ubox
18 23 0.025342352 ubox
18 27 0.016576844 ubox
18 29 0.027802317 ubox
18 32 0.011778149 ubox
18 35 0.598074524 ubox
18 36 0.049039970 ubox
18 38 0.030311435 ubox
18 39 0.015046285 ubox
18 42 0.004010646 ubox
19 26 0.016640961 ubox
19 28 0.027777178 ubox
19 31 0.011684034 ubox
19 34 0.601777422 ubox
19 35 0.026377543 ubox
19 37 0.027539245 ubox
19 38 0.013174027 ubox
19 41 0.003761289 ubox
20 25 0.016479221 ubox
20 33 0.605266759 ubox
21 32 0.604834119 ubox
21 49 0.025702205 ubox
22 47 0.004426236 ubox
22 48 0.026044872 ubox
23 33 0.029479543 ubox
23 46 0.004566854 ubox
23 47 0.025839391 ubox
23 51 0.024153556 ubox
24 30 0.147477642 ubox
24 31 0.254397665 ubox
24 32 0.022785983 ubox
24 37 0.003798371 ubox
24 50 0.024682574 ubox
25 29 0.153861887 ubox
25 30 0.266791126 ubox
25 36 0.003921736 ubox
25 49 0.025130967 ubox
27 44 0.004856527 ubox
28 43 0.004738128 ubox
29 45 0.107997665 ubox
29 46 0.098041908 ubox
29 47 0.124356326 ubox
29 48 0.157105215 ubox
30 44 0.108348195 ubox
30 45 0.097974934 ubox
30 46 0.124717296 ubox
30 47 0.155872993 ubox
31 43 0.099953590 ubox
32 43 0.110456198 ubox
33 42 0.129255047 ubox
35 44 0.008812179 ubox
35 45 0.247653928 ubox
35 46 0.067279252 ubox
35 47 0.320945370 ubox
35 48 0.659502100 ubox
36 43 0.007183284 ubox
36 44 0.248487344 ubox
36 45 0.066434451 ubox
36 46 0.322750698 ubox
36 47 0.659641020 ubox
37 43 0.245797744 ubox
38 44 0.050905029 ubox
38 45 0.611687430 ubox
38 46 0.407902803 ubox
38 47 0.040110979 ubox
38 48 0.033888496 ubox
39 43 0.033095109 ubox
39 44 0.610412643 ubox
39 45 0.406886061 ubox
39 46 0.040574136 ubox
39 47 0.033750091 ubox
41 47 0.012132923 ubox
41 48 0.031465442 ubox
42 46 0.012125187 ubox
42 47 0.031266616 ubox
42 51 0.031778906 ubox
43 50 0.032277796 ubox
44 49 0.032292016 ubox
1 25 0.9500000 lbox
2 24 0.9500000 lbox
3 23 0.9500000 lbox
4 22 0.9500000 lbox
5 20 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
showpage
end
%%EOF
