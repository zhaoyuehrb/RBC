%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGCGGAGGACCAGGAACCAGAGAGAGAGAGAGAGAAAAGAGAGAGGAGAGACAGAGCGCUUGGGGGCGAAAGGAGAGAGGGAGGGAAGGGUGGGUAAGGAGGAGAGAGCGGUCUGCUGCAAACCCCAGGAGGAGAGCUUGGAGCCCAAGCCAGAACUCGAGCCCUAGCCGGAGCCGUUCACAGGGAGGCGGCUGCCGGGACCGUCAGCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[135.74548340 213.96769714]
[135.53938293 204.68644714]
[139.68489075 196.22647095]
[132.98165894 182.80757141]
[126.27844238 169.38867188]
[119.57521820 155.96977234]
[112.87199402 142.55087280]
[106.16877747 129.13198853]
[84.36952209 130.39418030]
[64.65284729 115.45328522]
[58.14458847 128.96781921]
[65.61595154 142.56774902]
[63.63317490 157.95762634]
[52.95867538 169.21971130]
[37.69701004 172.02351379]
[23.71660995 165.29090881]
[16.39321899 151.61071777]
[18.54283142 136.24327087]
[29.33887672 125.09763336]
[44.63005829 122.45956421]
[51.13831329 108.94503021]
[48.23060989 102.03161621]
[36.03986740 110.77150726]
[23.84912300 119.51140594]
[11.65837860 128.25129700]
[-0.53236616 136.99119568]
[-12.72311020 145.73109436]
[-24.91385460 154.47097778]
[-37.10459900 163.21087646]
[-49.29534531 171.95077515]
[-61.48608780 180.69065857]
[-73.67683411 189.43055725]
[-81.73816681 202.08026123]
[-92.90165710 212.09906006]
[-106.34642792 218.75024414]
[-121.08382416 221.54473877]
[-136.03015137 220.27703857]
[-150.08638000 215.04035950]
[-162.21887207 206.21978760]
[-171.53550720 194.46392822]
[-177.35119629 180.63722229]
[-179.23828125 165.75639343]
[-177.05801392 150.91569519]
[-170.97070312 137.20640564]
[-161.42398071 125.63661194]
[-149.11984253 117.05709076]
[-134.96305847 112.09871674]
[-119.99462128 111.12610626]
[-105.31308746 114.21152496]
[-90.54026031 111.61085510]
[-75.76743317 109.01017761]
[-60.99459839 106.40950775]
[-46.22177124 103.80883026]
[-31.44894028 101.20816040]
[-16.67611122 98.60748291]
[-1.90328085 96.00681305]
[12.86954880 93.40613556]
[27.64237785 90.80546570]
[42.41520691 88.20478821]
[39.50750732 81.29138184]
[25.29629898 76.49121094]
[11.08509254 71.69104767]
[-3.12611437 66.89087677]
[-19.09019852 70.64321899]
[-30.12317848 58.51039886]
[-24.87526894 42.97361755]
[-8.74507046 40.01578903]
[1.67405164 52.67967224]
[15.88525867 57.47983932]
[30.09646606 62.28000641]
[44.30767441 67.08016968]
[34.13748932 56.05441284]
[20.13425064 50.67766953]
[9.41596889 40.18393707]
[3.74398756 26.29766273]
[4.05039167 11.30079269]
[10.28482819 -2.34221959]
[21.42278671 -12.38940334]
[35.63395309 -17.18969154]
[50.58298874 -15.95425034]
[63.81330109 -8.88609791]
[73.15074158 2.85324621]
[77.06087494 17.33464241]
[74.90114594 32.17834854]
[67.02603149 44.94554520]
[65.62448120 59.87992096]
[74.01437378 47.44570923]
[71.21041107 32.12332153]
[79.89608765 19.63277626]
[94.52091980 17.05405235]
[102.91081238 4.61983776]
[111.30071259 -7.81437635]
[119.69060516 -20.24859047]
[128.08049011 -32.68280411]
[133.08589172 -46.82303238]
[134.38722229 -61.76647568]
[135.68855286 -76.70992279]
[136.98986816 -91.65336609]
[124.51628876 -100.50530243]
[118.18997955 -114.32104492]
[119.61891174 -129.34849548]
[128.31964111 -141.56134033]
[141.87388611 -147.73771667]
[143.17521667 -162.68116760]
[136.66432190 -177.10055542]
[145.47660828 -189.10858154]
[146.77793884 -204.05203247]
[148.07926941 -218.99548340]
[137.72494507 -230.93547058]
[138.92950439 -246.69380188]
[150.97831726 -256.92129517]
[166.72300720 -255.55020142]
[176.82255554 -243.39393616]
[175.28506470 -227.66461182]
[163.02270508 -217.69415283]
[161.72138977 -202.75070190]
[160.42005920 -187.80726624]
[167.02403259 -174.45672607]
[158.11866760 -161.37983704]
[156.81733704 -146.43638611]
[169.09994507 -138.01004028]
[175.55863953 -124.47708130]
[174.36846924 -109.42882538]
[165.74925232 -96.91459656]
[151.93331909 -90.35203552]
[150.63198853 -75.40859222]
[149.33067322 -60.46514893]
[148.02934265 -45.52170563]
[154.24644470 -41.32675552]
[167.72940063 -47.90018463]
[166.68066406 -32.93686295]
[172.89776611 -28.74191666]
[186.26779175 -35.54209900]
[199.63781738 -42.34227753]
[200.34570312 -58.86381531]
[209.23901367 -72.69399261]
[223.81007385 -80.10817719]
[240.03771973 -79.16657257]
[253.49702454 -70.22082520]
[266.76721191 -77.21385193]
[280.03738403 -84.20687866]
[293.30755615 -91.19990540]
[306.57772827 -98.19292450]
[319.84790039 -105.18595123]
[331.04162598 -117.91925049]
[346.37603760 -110.68790436]
[343.67230225 -93.95093536]
[326.84094238 -91.91577148]
[313.57077026 -84.92275238]
[300.30059814 -77.92972565]
[287.03039551 -70.93669891]
[273.76022339 -63.94367599]
[260.49005127 -56.95064926]
[260.86404419 -43.30104828]
[255.29464722 -30.76133728]
[244.81629944 -21.80105591]
[231.43621826 -18.21159554]
[217.74996948 -20.74827766]
[206.43800354 -28.97225571]
[193.06797791 -22.17207336]
[179.69795227 -15.37189293]
[162.83927917 -11.67028809]
[148.84954834 -15.55034637]
[140.51470947 -24.29291153]
[132.12481689 -11.85869694]
[123.73492432 0.57551759]
[115.34503174 13.00973129]
[106.95513916 25.44394493]
[110.03807068 39.97085571]
[101.70665741 52.70043564]
[86.44859314 55.83560181]
[78.05870056 68.26981354]
[100.02744293 63.18240356]
[119.98233032 71.19464874]
[131.18003845 88.31467438]
[130.57936096 107.71616364]
[119.58766937 122.42875671]
[126.29089355 135.84765625]
[132.99411011 149.26655579]
[139.69734192 162.68545532]
[146.40055847 176.10435486]
[153.10379028 189.52325439]
[171.66656494 200.23583984]
[169.52920532 220.76614380]
[176.80873108 233.88134766]
[184.08825684 246.99655151]
[191.36778259 260.11175537]
[198.64732361 273.22692871]
[214.65315247 282.33578491]
[213.66725159 299.85897827]
[221.13587952 312.86740112]
[228.60452271 325.87585449]
[236.07315063 338.88427734]
[243.54177856 351.89273071]
[251.10438538 364.84677124]
[258.76055908 377.74572754]
[273.31759644 385.29714966]
[273.78598022 401.68960571]
[259.68386841 410.05993652]
[245.51829529 401.79745483]
[245.86160278 385.40188599]
[238.20542908 372.50292969]
[232.09104919 368.35733032]
[230.53334045 359.36135864]
[223.06471252 346.35290527]
[215.59608459 333.34448242]
[208.12744141 320.33602905]
[200.65881348 307.32760620]
[189.07031250 303.86853027]
[182.74075317 293.09594727]
[185.53211975 280.50646973]
[178.25259399 267.39126587]
[170.97305298 254.27607727]
[163.69352722 241.16087341]
[156.41400146 228.04566956]
[147.60163879 227.02752686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[10 21]
[11 20]
[60 71]
[61 70]
[62 69]
[63 68]
[86 172]
[87 171]
[90 168]
[91 167]
[92 166]
[93 165]
[94 164]
[95 128]
[96 127]
[97 126]
[98 125]
[103 120]
[104 119]
[106 117]
[107 116]
[108 115]
[132 161]
[133 160]
[134 159]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
[184 215]
[185 214]
[186 213]
[187 212]
[188 211]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
