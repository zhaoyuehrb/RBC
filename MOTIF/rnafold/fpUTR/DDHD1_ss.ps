%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCACCGCCUACGUCGGGCUGCGUGACAAUGGGGCCGGCGGCAGAACGCAGCUGCGGCGGCUGCGGGUCUCGUGGGGGCGGAGCGGUCGCCGCUGCCGCCGCAGCUCGGGUCGGGAUUUGAAAGAUUAGAAACUUCGGGUGGAGAGGGCGGCGGCGUUGAAUGUGUGGCGGAAGCGCUGGGGGUCACGGCUCCGCGCGCCGCCGGACAGCCGGCGGCGUCUCCACAGC\
) } def
/len { sequence length } bind def

/coor [
[10.93926430 163.03379822]
[-1.73439229 171.05741882]
[-9.25555897 184.97656250]
[-24.14770508 185.24716187]
[-36.82136154 193.27078247]
[-42.38816833 200.49473572]
[-49.72238159 201.31597900]
[-62.50398636 209.16648865]
[-75.28558350 217.01701355]
[-88.06718445 224.86753845]
[-89.39118958 240.21527100]
[-99.38177490 251.70620728]
[-114.04946136 255.07115173]
[-127.72235107 249.22392273]
[-140.50395203 257.07443237]
[-153.28555298 264.92495728]
[-166.06715393 272.77548218]
[-178.84875488 280.62600708]
[-191.57667542 288.56326294]
[-204.25033569 296.58688354]
[-216.92399597 304.61050415]
[-229.59765625 312.63409424]
[-242.27130127 320.65771484]
[-254.94496155 328.68133545]
[-267.61862183 336.70495605]
[-280.29226685 344.72857666]
[-278.53207397 353.80288696]
[-279.31549072 362.98956299]
[-282.57022095 371.59100342]
[-288.03677368 378.95748901]
[-295.28903198 384.53634644]
[-303.76766968 387.91336060]
[-312.82302856 388.84359741]
[-321.76504517 387.26901245]
[-329.91583252 383.32192993]
[-336.66101074 377.31411743]
[-349.94647217 384.27801514]
[-363.23196411 391.24191284]
[-374.45358276 403.95062256]
[-389.77209473 396.68566895]
[-387.03164673 379.95468140]
[-370.19586182 377.95642090]
[-356.91036987 370.99252319]
[-343.62490845 364.02862549]
[-342.27517700 343.08782959]
[-328.42468262 327.14370728]
[-307.61276245 322.82360840]
[-288.31588745 332.05493164]
[-275.64224243 324.03131104]
[-262.96856689 316.00769043]
[-250.29492188 307.98406982]
[-237.62126160 299.96044922]
[-224.94761658 291.93682861]
[-212.27395630 283.91320801]
[-199.60029602 275.88958740]
[-195.63577271 269.66482544]
[-186.69927979 267.84439087]
[-173.91767883 259.99386597]
[-161.13607788 252.14335632]
[-148.35447693 244.29284668]
[-135.57287598 236.44232178]
[-134.60569763 221.60310364]
[-124.97209167 210.04206848]
[-110.20550537 206.32702637]
[-95.91770935 212.08593750]
[-83.13610840 204.23541260]
[-70.35450745 196.38488770]
[-57.57290268 188.53437805]
[-44.84497833 180.59712219]
[-32.17132187 172.57350159]
[-25.55666161 159.22825623]
[-9.75800991 158.38375854]
[2.91564608 150.36015320]
[15.36639881 141.99481201]
[27.58503914 133.29396057]
[39.80367661 124.59310913]
[52.02231598 115.89225769]
[64.24095917 107.19140625]
[76.45959473 98.49054718]
[100.56247711 81.38665009]
[109.34621429 69.22745514]
[118.12995148 57.06826401]
[126.91369629 44.90907288]
[135.69743347 32.74988174]
[144.48117065 20.59068871]
[153.26490784 8.43149757]
[155.07409668 -7.28592682]
[168.79891968 -13.07198811]
[177.58265686 -25.23118019]
[179.39184570 -40.94860458]
[193.11666870 -46.73466492]
[201.90040588 -58.89385605]
[210.68414307 -71.05304718]
[212.49333191 -86.77046967]
[226.21815491 -92.55653381]
[235.00189209 -104.71572113]
[229.63366699 -146.69421387]
[234.24952698 -160.96635437]
[238.86537170 -175.23849487]
[243.48121643 -189.51063538]
[248.09707642 -203.78276062]
[252.71292114 -218.05490112]
[257.32876587 -232.32704163]
[261.94461060 -246.59918213]
[253.69802856 -262.03448486]
[259.06719971 -278.33511353]
[274.26220703 -285.55755615]
[278.68353271 -299.89114380]
[283.10485840 -314.22473145]
[273.97027588 -326.62899780]
[273.89215088 -341.85552979]
[282.69088745 -354.06399536]
[296.82211304 -358.69497681]
[301.24343872 -373.02856445]
[305.66476440 -387.36215210]
[310.08609009 -401.69577026]
[314.50744629 -416.02935791]
[309.15054321 -435.47247314]
[323.91137695 -447.97518921]
[327.94125366 -462.42373657]
[331.97109985 -476.87225342]
[336.00097656 -491.32080078]
[340.03085327 -505.76934814]
[335.42639160 -521.50878906]
[346.94906616 -533.17761230]
[362.74530029 -528.77185059]
[366.56530762 -512.82379150]
[354.47937012 -501.73947144]
[350.44952393 -487.29092407]
[346.41964722 -472.84240723]
[342.38977051 -458.39385986]
[338.35989380 -443.94531250]
[344.15097046 -435.54739380]
[344.37588501 -425.12939453]
[338.71963501 -416.11755371]
[328.84103394 -411.60803223]
[324.41970825 -397.27444458]
[319.99838257 -382.94082642]
[315.57702637 -368.60723877]
[311.15570068 -354.27365112]
[320.22274780 -342.48693848]
[320.61532593 -327.44332886]
[311.97335815 -314.90658569]
[297.43844604 -309.80340576]
[293.01712036 -295.46981812]
[288.59579468 -281.13623047]
[296.14813232 -270.70639038]
[296.32122803 -257.63598633]
[288.82812500 -246.68870544]
[276.21676636 -241.98333740]
[271.60092163 -227.71119690]
[266.98504639 -213.43905640]
[262.36920166 -199.16691589]
[257.75335693 -184.89477539]
[253.13751221 -170.62263489]
[248.52166748 -156.35050964]
[243.90580750 -142.07836914]
[248.21459961 -135.93960571]
[259.10781860 -146.25163269]
[270.00103760 -156.56364441]
[276.92813110 -169.86834717]
[291.38092041 -173.88294983]
[304.17758179 -166.05697632]
[307.18838501 -151.36224365]
[298.50064087 -139.13429260]
[283.63333130 -137.14157104]
[270.23275757 -130.40182495]
[256.83215332 -123.66207886]
[261.14093018 -117.52332306]
[276.13226318 -117.01342010]
[291.12359619 -116.50351715]
[306.11492920 -115.99362183]
[320.32519531 -124.17900085]
[334.38162231 -115.73216248]
[333.82415771 -99.34249115]
[319.22628784 -91.87027740]
[305.60504150 -101.00228882]
[290.61370850 -101.51219177]
[275.62237549 -102.02208710]
[260.63104248 -102.53199005]
[247.16108704 -95.93198395]
[238.37733459 -83.77279663]
[237.19642639 -68.92507935]
[222.84333801 -62.26931000]
[214.05960083 -50.11011887]
[205.27584839 -37.95092773]
[204.09494019 -23.10320854]
[189.74185181 -16.44744110]
[180.95811462 -4.28824949]
[179.77719116 10.55946827]
[165.42410278 17.21523476]
[156.64036560 29.37442780]
[147.85662842 41.53361893]
[139.07289124 53.69281006]
[130.28913879 65.85200500]
[121.50540924 78.01119232]
[112.72167206 90.17038727]
[112.41569519 105.16726685]
[120.69616699 117.67461395]
[128.97663879 130.18196106]
[137.25711060 142.68931580]
[145.53758240 155.19665527]
[153.81805420 167.70401001]
[162.09852600 180.21136475]
[170.37899780 192.71870422]
[178.65946960 205.22605896]
[186.93994141 217.73339844]
[201.85031128 224.56076050]
[203.12324524 240.91043091]
[189.44926453 249.96327209]
[174.89497375 242.40650940]
[174.43258667 226.01387024]
[166.15211487 213.50653076]
[157.87164307 200.99917603]
[149.59117126 188.49183655]
[141.31069946 175.98448181]
[133.03022766 163.47712708]
[124.74975586 150.96978760]
[116.46928406 138.46243286]
[108.18881226 125.95508575]
[99.90834045 113.44773865]
[85.16044617 110.70919037]
[72.94181061 119.41004181]
[60.72317123 128.11090088]
[48.50453186 136.81175232]
[36.28589249 145.51260376]
[24.06725311 154.21345520]
[22.41509438 158.19461060]
[19.84552002 161.15261841]
[16.79010582 162.92520142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 73]
[2 72]
[4 70]
[5 69]
[7 68]
[8 67]
[9 66]
[10 65]
[14 61]
[15 60]
[16 59]
[17 58]
[18 57]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[36 44]
[37 43]
[38 42]
[74 227]
[75 226]
[76 225]
[77 224]
[78 223]
[79 222]
[80 197]
[81 196]
[82 195]
[83 194]
[84 193]
[85 192]
[86 191]
[88 189]
[89 188]
[91 186]
[92 185]
[93 184]
[95 182]
[96 181]
[97 157]
[98 156]
[99 155]
[100 154]
[101 153]
[102 152]
[103 151]
[104 150]
[107 146]
[108 145]
[109 144]
[113 140]
[114 139]
[115 138]
[116 137]
[117 136]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[169 180]
[170 179]
[171 178]
[172 177]
[198 221]
[199 220]
[200 219]
[201 218]
[202 217]
[203 216]
[204 215]
[205 214]
[206 213]
[207 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
