%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCR1)
} def

/sequence { (\
AUAAAAACCCAGAAAGCCCCAGAAACAAAGACUUCACGGACAAAGUCCCUUGGAACCAGAGAGAAGCCGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
8 39 0.015866338 ubox
8 53 0.044040008 ubox
8 70 0.068082265 ubox
8 71 0.562408890 ubox
9 38 0.015971493 ubox
9 39 0.014425685 ubox
9 52 0.043927633 ubox
9 53 0.145891618 ubox
9 69 0.067875248 ubox
9 70 0.569079700 ubox
9 71 0.044683678 ubox
10 38 0.014478683 ubox
10 52 0.146310493 ubox
10 69 0.568219197 ubox
10 70 0.045335837 ubox
11 33 0.023605107 ubox
11 34 0.004860481 ubox
11 50 0.056653919 ubox
11 51 0.137954731 ubox
12 32 0.026379793 ubox
12 33 0.004964651 ubox
12 34 0.008395900 ubox
12 35 0.165968703 ubox
12 47 0.027683324 ubox
12 49 0.068439576 ubox
12 50 0.109901400 ubox
12 51 0.006021612 ubox
13 33 0.008754338 ubox
13 34 0.154736484 ubox
13 46 0.027729717 ubox
13 50 0.008660080 ubox
13 51 0.003802100 ubox
14 33 0.132722340 ubox
14 34 0.088232726 ubox
14 50 0.004847792 ubox
14 51 0.019868687 ubox
15 33 0.110980764 ubox
15 34 0.005529637 ubox
15 50 0.026577172 ubox
16 32 0.125980710 ubox
16 33 0.005586940 ubox
16 46 0.025937665 ubox
16 49 0.027606664 ubox
16 67 0.159639578 ubox
17 39 0.044865822 ubox
17 45 0.026569196 ubox
17 53 0.021603157 ubox
17 66 0.159393162 ubox
17 70 0.104177858 ubox
17 71 0.473275276 ubox
18 38 0.044782370 ubox
18 39 0.138153895 ubox
18 52 0.021461726 ubox
18 53 0.040220572 ubox
18 69 0.104194757 ubox
18 70 0.481904482 ubox
18 71 0.505316395 ubox
19 38 0.138759706 ubox
19 39 0.069835682 ubox
19 52 0.039933330 ubox
19 53 0.105471761 ubox
19 69 0.480335124 ubox
19 70 0.514046594 ubox
19 71 0.041502847 ubox
20 38 0.070220490 ubox
20 52 0.105912560 ubox
20 69 0.513652845 ubox
20 70 0.042113463 ubox
21 33 0.066185500 ubox
21 34 0.012191608 ubox
21 50 0.040936591 ubox
21 51 0.099094834 ubox
22 32 0.073983809 ubox
22 33 0.012819155 ubox
22 34 0.023079987 ubox
22 35 0.660772702 ubox
22 49 0.045947447 ubox
22 50 0.058028095 ubox
22 51 0.005610173 ubox
23 33 0.024514453 ubox
23 34 0.660121240 ubox
23 50 0.007651024 ubox
23 51 0.006082141 ubox
24 33 0.645727285 ubox
24 34 0.025586891 ubox
24 50 0.007608467 ubox
24 51 0.009210062 ubox
25 33 0.029481897 ubox
25 46 0.010180756 ubox
25 50 0.010716049 ubox
26 45 0.010342308 ubox
26 52 0.077499268 ubox
27 34 0.032136828 ubox
27 51 0.077706722 ubox
28 33 0.032700172 ubox
28 34 0.020712488 ubox
28 50 0.072837500 ubox
28 51 0.030889970 ubox
29 33 0.017936543 ubox
29 50 0.033624775 ubox
29 51 0.004395518 ubox
30 47 0.312914478 ubox
30 49 0.032033779 ubox
31 46 0.314276071 ubox
32 39 0.010441468 ubox
32 45 0.314704368 ubox
32 53 0.039853961 ubox
32 59 0.038658658 ubox
32 61 0.017708806 ubox
32 63 0.016425610 ubox
32 66 0.194799771 ubox
32 70 0.007217105 ubox
32 71 0.008220636 ubox
33 38 0.009631794 ubox
33 40 0.003583181 ubox
33 43 0.009538321 ubox
33 44 0.313749842 ubox
33 52 0.039352592 ubox
33 53 0.009974475 ubox
33 54 0.375195671 ubox
33 55 0.263361473 ubox
33 58 0.031792990 ubox
33 60 0.016485095 ubox
33 61 0.007152752 ubox
33 62 0.015397356 ubox
33 63 0.009190328 ubox
33 65 0.195897713 ubox
33 69 0.005798899 ubox
33 70 0.007800522 ubox
33 71 0.003284399 ubox
34 39 0.004731282 ubox
34 40 0.032461332 ubox
34 42 0.012357252 ubox
34 43 0.305254482 ubox
34 44 0.003366037 ubox
34 52 0.009974203 ubox
34 53 0.396485991 ubox
34 54 0.288057630 ubox
34 59 0.013353013 ubox
34 60 0.009383410 ubox
34 61 0.012661559 ubox
34 62 0.011541108 ubox
34 64 0.196060921 ubox
34 69 0.003184128 ubox
34 70 0.005019562 ubox
34 71 0.028395619 ubox
35 39 0.035363250 ubox
35 52 0.402288155 ubox
35 53 0.285827878 ubox
35 59 0.010030372 ubox
35 61 0.011995917 ubox
35 63 0.195799059 ubox
35 69 0.005251905 ubox
35 70 0.046166772 ubox
36 46 0.016288896 ubox
36 51 0.394358607 ubox
37 45 0.019226072 ubox
37 52 0.096933153 ubox
37 69 0.096939705 ubox
38 47 0.008349621 ubox
38 48 0.908723350 ubox
38 49 0.168730312 ubox
38 50 0.009589809 ubox
38 51 0.015675962 ubox
38 57 0.030475053 ubox
38 68 0.110934104 ubox
39 46 0.006550221 ubox
39 47 0.914026602 ubox
39 48 0.149415216 ubox
39 49 0.009662125 ubox
39 50 0.006314265 ubox
39 56 0.030420670 ubox
39 67 0.110891565 ubox
40 46 0.916350249 ubox
41 45 0.907343665 ubox
41 52 0.044241395 ubox
42 51 0.043736529 ubox
43 50 0.039626253 ubox
43 51 0.021513399 ubox
44 50 0.023351014 ubox
44 51 0.004858874 ubox
45 49 0.023937944 ubox
45 50 0.003965032 ubox
45 56 0.046182353 ubox
45 67 0.034514376 ubox
46 53 0.004380575 ubox
46 54 0.080277494 ubox
46 55 0.033138510 ubox
46 60 0.029784095 ubox
46 62 0.071357756 ubox
46 64 0.116657114 ubox
46 66 0.032723801 ubox
46 71 0.007529490 ubox
47 52 0.005366528 ubox
47 53 0.090867876 ubox
47 59 0.029722211 ubox
47 61 0.072310064 ubox
47 63 0.122359799 ubox
47 70 0.012457091 ubox
47 71 0.037412685 ubox
48 52 0.090521866 ubox
48 69 0.012588770 ubox
48 70 0.044302535 ubox
48 71 0.082532743 ubox
49 59 0.158607502 ubox
49 61 0.521684501 ubox
49 63 0.312542579 ubox
49 66 0.141323349 ubox
49 69 0.043908243 ubox
49 70 0.087055894 ubox
49 71 0.244433532 ubox
50 58 0.126381902 ubox
50 59 0.286270070 ubox
50 60 0.501967404 ubox
50 61 0.055775113 ubox
50 62 0.310746111 ubox
50 63 0.021166005 ubox
50 64 0.021870407 ubox
50 65 0.142623391 ubox
50 66 0.013031764 ubox
50 69 0.061374478 ubox
50 70 0.249842825 ubox
51 58 0.388744980 ubox
51 59 0.463278741 ubox
51 60 0.073124015 ubox
51 61 0.299324807 ubox
51 62 0.025719272 ubox
51 63 0.023303643 ubox
51 64 0.140971809 ubox
51 65 0.016537436 ubox
51 69 0.260334139 ubox
52 57 0.431518158 ubox
52 68 0.382460121 ubox
53 67 0.381740900 ubox
56 70 0.154204323 ubox
56 71 0.053775017 ubox
57 69 0.154479323 ubox
57 70 0.054289892 ubox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
19 69 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
41 45 0.9500000 lbox
showpage
end
%%EOF
