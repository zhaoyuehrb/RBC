%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGGAGCCUGGGCUUGGGGGCGGGGCGGGGCCUGCGCCUAGGGGGGCGGGGCGGGGCGGCGCUCUAGGCCGAGCGGGAGGUCGGGGCUGCGGGCGCUCGCUGGUGGCGGACCCGGAGGCUGCUGCGGCGCCGGGGCUCCGUGGCCUGGAUUGAAUCCGAUCGGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[196.52214050 286.94165039]
[194.65199280 283.84982300]
[193.82774353 279.91885376]
[194.36810303 275.52581787]
[188.00125122 261.94409180]
[181.63439941 248.36238098]
[175.26754761 234.78065491]
[168.90069580 221.19892883]
[162.53384399 207.61720276]
[156.16699219 194.03547668]
[149.80014038 180.45376587]
[143.43328857 166.87203979]
[131.02539062 158.63229370]
[132.17353821 142.85281372]
[125.80669403 129.27108765]
[119.43984222 115.68936157]
[108.42409515 122.26292419]
[96.21058655 122.30600739]
[86.21097565 116.42771149]
[80.90728760 106.80723572]
[65.91728973 106.25940704]
[50.92729950 105.71157837]
[35.93730545 105.16374207]
[20.94731331 104.61591339]
[5.95732021 104.06808472]
[-5.56626844 114.54876709]
[-20.76044846 113.77964783]
[-30.68115997 102.72908020]
[-45.67115402 102.18125153]
[-55.27807236 114.22339630]
[-69.96205139 118.25254822]
[-84.03643799 112.92565918]
[-92.17789459 100.48159790]
[-107.16788483 99.93376923]
[-122.15787506 99.38593292]
[-137.14787292 98.83810425]
[-145.87521362 101.65993500]
[-152.40591431 98.14089966]
[-167.38340759 97.31938171]
[-182.36090088 96.49786377]
[-197.33837891 95.67634583]
[-212.31587219 94.85482788]
[-226.69326782 102.74295044]
[-240.57101440 94.00565338]
[-239.67286682 77.63111877]
[-224.92276001 70.46406555]
[-211.49435425 79.87734222]
[-196.51686096 80.69886017]
[-181.53938293 81.52037811]
[-166.56188965 82.34189606]
[-151.58441162 83.16340637]
[-136.60003662 83.84811401]
[-121.61004639 84.39594269]
[-106.62005615 84.94377136]
[-91.63005829 85.49160004]
[-82.60196686 73.67502594]
[-68.17629242 69.38970947]
[-53.82559204 74.47997284]
[-45.12332153 87.19125366]
[-30.13332939 87.73908997]
[-19.43244362 77.44216156]
[-4.22265577 77.78420258]
[6.50515079 89.07809448]
[21.49514389 89.62592316]
[36.48513412 90.17375183]
[51.47512817 90.72158051]
[66.46511841 91.26941681]
[81.45511627 91.81724548]
[90.76882935 80.20637512]
[106.52553558 77.51702881]
[121.03918457 86.53092194]
[128.85328674 73.72702026]
[136.66738892 60.92312622]
[144.48150635 48.11922836]
[152.17834473 35.24450684]
[159.75729370 22.30002785]
[167.33624268 9.35554981]
[174.91520691 -3.58892798]
[182.49415588 -16.53340530]
[176.03396606 -28.73308372]
[176.45175171 -42.42291260]
[183.53094482 -54.02094269]
[195.32608032 -60.54558563]
[208.69618225 -60.38189316]
[216.51028442 -73.18579102]
[224.32438660 -85.98968506]
[232.13850403 -98.79357910]
[239.95260620 -111.59748077]
[247.41302490 -124.61062622]
[254.51416016 -137.82327271]
[261.61529541 -151.03590393]
[268.71643066 -164.24855042]
[275.81756592 -177.46119690]
[275.53533936 -193.27987671]
[288.37588501 -200.82769775]
[295.47702026 -214.04034424]
[302.57815552 -227.25297546]
[301.53845215 -243.61914062]
[315.34014893 -252.47610474]
[329.78521729 -244.71260071]
[330.01382446 -228.31504822]
[315.79080200 -220.15184021]
[308.68966675 -206.93920898]
[301.58853149 -193.72656250]
[302.37869263 -178.85293579]
[289.03021240 -170.36006165]
[281.92907715 -157.14741516]
[274.82794189 -143.93476868]
[267.72680664 -130.72213745]
[260.62567139 -117.50949097]
[261.30807495 -114.01471710]
[260.30834961 -110.01415253]
[257.40679932 -106.31283569]
[252.75650024 -103.78337097]
[244.94239807 -90.97947693]
[237.12829590 -78.17558289]
[229.31417847 -65.37168121]
[221.50007629 -52.56778717]
[228.29222107 -37.64163208]
[224.82757568 -21.44317055]
[212.27499390 -10.38185787]
[195.43862915 -8.95445538]
[187.85968018 3.99002266]
[180.28073120 16.93449974]
[172.70178223 29.87897873]
[165.12283325 42.82345581]
[164.45426941 50.21175003]
[157.28540039 55.93333435]
[149.47129822 68.73722839]
[141.65718079 81.54113007]
[133.84307861 94.34502411]
[133.02156067 109.32250977]
[139.38841248 122.90423584]
[145.75526428 136.48596191]
[158.61856079 145.69714355]
[157.01501465 160.50518799]
[163.38186646 174.08691406]
[169.74871826 187.66862488]
[176.11557007 201.25035095]
[182.48242188 214.83207703]
[188.84927368 228.41380310]
[195.21612549 241.99552917]
[201.58297729 255.57725525]
[207.94981384 269.15896606]
[214.80845642 282.49911499]
[222.14971924 295.57983398]
[229.49099731 308.66058350]
[236.95141602 321.67373657]
[244.53036499 334.61822510]
[258.18011475 342.61791992]
[257.93371582 357.51046753]
[265.51266479 370.45495605]
[273.09161377 383.39944458]
[280.67056274 396.34390259]
[288.24951172 409.28839111]
[302.76116943 416.92669678]
[303.13156128 433.32165527]
[288.97967529 441.60754395]
[274.86373901 433.26055908]
[275.30502319 416.86734009]
[267.72607422 403.92285156]
[260.14712524 390.97839355]
[252.56817627 378.03390503]
[244.98922729 365.08941650]
[231.88159180 358.01562500]
[231.58587646 342.19717407]
[224.00692749 329.25268555]
[217.89118958 325.05371094]
[216.41024780 316.00186157]
[209.06898499 302.92111206]
[201.72770691 289.84036255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 144]
[5 143]
[6 142]
[7 141]
[8 140]
[9 139]
[10 138]
[11 137]
[12 136]
[14 134]
[15 133]
[16 132]
[20 68]
[21 67]
[22 66]
[23 65]
[24 64]
[25 63]
[28 60]
[29 59]
[33 55]
[34 54]
[35 53]
[36 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[71 131]
[72 130]
[73 129]
[74 128]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[95 104]
[96 103]
[97 102]
[145 171]
[146 170]
[147 169]
[148 167]
[149 166]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
