%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGCCCCCAUCUGCCCAAGAUAAUUUUAGUUUCCUUGGGCCUGGAAUCUGGACACACAGGGCUCCCCCCCGCCUCUGACUUCUCUGUCCGAAGUCGGGACACCCUCCUACCACCUGUAGAGAAGCGGGAGUGGAUCUGAAAUAAAAUCCAGGAAUCUGGGGGUUCCUAGACGGAGCCAGACUUCGGAACGGGUGUCCUGCUACUCCUGCUGGGGCUCCUCCAGGACAAGGGCACACAACUGGUUCCGUUAAGC\
CCCUCUCUUGCUCAGACGCC\
) } def
/len { sequence length } bind def

/coor [
[199.07330322 108.84898376]
[191.33918762 101.26975250]
[176.37416077 102.29338837]
[161.40913391 103.31702423]
[146.44410706 104.34066010]
[131.47906494 105.36429596]
[132.23249817 133.07392883]
[108.61354828 159.81504822]
[65.08538818 166.01756287]
[56.29626083 178.17285156]
[47.50712967 190.32814026]
[49.84425354 200.90164185]
[46.07453156 210.81898499]
[37.65874100 216.91305542]
[27.49798203 217.37965393]
[18.43443680 229.33172607]
[9.37089062 241.28379822]
[0.30734485 253.23587036]
[-8.75620079 265.18795776]
[-17.81974602 277.14004517]
[-26.88329315 289.09210205]
[-24.92949677 304.54592896]
[-34.29148102 316.53790283]
[-49.03637314 318.30532837]
[-58.09992218 330.25741577]
[-67.16346741 342.20947266]
[-68.67345428 358.53897095]
[-83.68130493 365.14929199]
[-96.74822998 355.24032593]
[-94.43209076 339.00555420]
[-79.11553955 333.14593506]
[-70.05199432 321.19384766]
[-60.98845291 309.24179077]
[-63.26470566 294.56683350]
[-54.24324417 282.31661987]
[-38.83536911 280.02856445]
[-29.77182388 268.07647705]
[-20.70827675 256.12442017]
[-11.64473152 244.17233276]
[-2.58118606 232.22026062]
[6.48235989 220.26817322]
[15.54590607 208.31610107]
[16.59284401 188.98635864]
[35.35183716 181.53901672]
[44.14096451 169.38372803]
[52.93009567 157.22842407]
[48.53553009 151.15077209]
[33.61417389 152.68476868]
[39.74640274 138.99548340]
[35.35183716 132.91783142]
[21.05466461 137.45555115]
[6.75749302 141.99327087]
[-0.29006013 156.13920593]
[-15.30244541 161.07923889]
[-29.37308121 153.88252258]
[-34.15410995 138.81874084]
[-26.80902863 124.82498169]
[-11.69554806 120.20348358]
[2.21977472 127.69609833]
[16.51694679 123.15838623]
[30.81411743 118.62066650]
[28.43387985 103.81072235]
[13.43485165 103.98145294]
[-1.56417704 104.15219116]
[-10.43122673 116.88619995]
[-25.10069466 121.94449615]
[-39.93186951 117.38205719]
[-49.22186279 104.95323944]
[-49.39848328 89.43716431]
[-40.39381790 76.80009460]
[-25.67033958 71.90122986]
[-10.88953114 76.62429047]
[-1.73491204 89.15316010]
[13.26411629 88.98242950]
[28.26314545 88.81169128]
[31.39851952 74.14303589]
[17.77994728 67.85539246]
[4.16137600 61.56774139]
[-9.45719528 55.28009415]
[-23.07576752 48.99244690]
[-36.69433975 42.70479965]
[-50.31290817 36.41715240]
[-63.93148041 30.12950325]
[-77.55004883 23.84185410]
[-91.61930847 30.66755104]
[-106.77175903 26.80268288]
[-115.85288239 14.07212257]
[-114.57485199 -1.51314807]
[-103.54111481 -12.59424114]
[-87.96146393 -13.93900299]
[-75.19213104 -4.91247845]
[-71.26240540 10.22328377]
[-57.64383316 16.51093102]
[-44.02526093 22.79858017]
[-30.40669060 29.08622742]
[-16.78811836 35.37387466]
[-3.16954756 41.66152191]
[10.44902420 47.94916916]
[24.06759453 54.23681641]
[37.68616486 60.52446747]
[42.77403641 55.01415253]
[31.75340652 44.83840942]
[20.73293304 34.66249847]
[30.90901375 23.64218330]
[41.92914581 33.81777954]
[52.94977570 43.99351883]
[58.03764725 38.48320389]
[50.68599319 25.40829849]
[43.26004791 12.37544250]
[35.76004791 -0.61493862]
[28.26004791 -13.60531998]
[20.76004791 -26.59570122]
[5.69816160 -32.12011337]
[0.76329213 -47.38532257]
[9.74104881 -60.68116760]
[25.74446487 -61.80821228]
[36.49708939 -49.90188217]
[33.75042725 -34.09569931]
[41.25042725 -21.10531998]
[48.75042725 -8.11493874]
[56.25042725 4.87544250]
[62.29303360 9.08061981]
[63.76090240 18.05664444]
[71.11255646 31.13155174]
[122.42194366 51.63762283]
[130.45542908 90.39926910]
[145.42047119 89.37563324]
[160.38549805 88.35199738]
[175.35052490 87.32835388]
[190.31555176 86.30471802]
[206.56292725 74.33035278]
[223.51736450 83.67283630]
[238.45523071 82.30881500]
[253.39308167 80.94479370]
[258.95336914 77.48310852]
[264.58657837 77.34155273]
[268.68588257 79.72370911]
[283.65090942 78.70007324]
[298.61593628 77.67642975]
[313.58096313 76.65279388]
[328.54598999 75.62915802]
[316.74725342 66.36688995]
[311.46215820 52.32880783]
[314.22302246 37.58507919]
[324.22940063 26.41044807]
[338.58007812 22.04485130]
[353.11422729 25.75403595]
[363.61791992 36.46257401]
[367.04571533 51.06566238]
[362.40374756 65.32933807]
[351.04016113 75.11698914]
[366.03628540 75.45843506]
[381.03240967 75.79988861]
[396.02850342 76.14133453]
[411.02462769 76.48278046]
[416.87112427 69.17211151]
[425.29101562 65.40605927]
[434.36386108 65.90612793]
[442.08221436 70.43597412]
[446.79589844 77.88159180]
[461.77160645 78.73482513]
[476.74731445 79.58805847]
[491.72302246 80.44129181]
[506.69873047 81.29452515]
[521.67443848 82.14775848]
[536.65014648 83.00098419]
[542.74285889 75.89418030]
[551.28643799 72.41779327]
[560.33691406 73.22732544]
[567.89611816 78.01804352]
[572.35284424 85.62025452]
[587.29064941 86.98427582]
[602.22851562 88.34829712]
[617.16638184 89.71231842]
[632.10424805 91.07634735]
[647.04211426 92.44036865]
[661.97991943 93.80438995]
[676.91778564 95.16841125]
[691.85565186 96.53243256]
[706.79351807 97.89646149]
[721.73132324 99.26048279]
[729.83496094 84.51957703]
[744.89581299 75.41854095]
[763.26538086 75.06406403]
[780.02703857 84.32330322]
[793.78521729 78.34728241]
[807.54339600 72.37126923]
[819.66235352 60.51516724]
[834.40997314 68.87842560]
[830.45611572 85.36488342]
[813.51940918 86.12944031]
[799.76123047 92.10545349]
[786.00305176 98.08146667]
[787.70678711 112.98440552]
[802.45867920 115.70114136]
[817.21063232 118.41788483]
[831.96252441 121.13462830]
[846.71447754 123.85137177]
[861.46643066 126.56811523]
[876.21832275 129.28486633]
[883.17102051 121.28096008]
[892.73693848 116.89986420]
[903.17779541 116.86450195]
[912.62628174 121.11463928]
[919.42004395 128.82952881]
[922.39410400 138.58557129]
[937.04467773 141.80436707]
[951.69525146 145.02317810]
[966.34582520 148.24198914]
[980.99639893 151.46078491]
[994.20800781 143.20904541]
[1009.01995850 146.68208313]
[1016.80529785 159.32818604]
[1031.45581055 162.54699707]
[1046.91442871 157.07298279]
[1059.20690918 167.92778015]
[1055.68786621 183.94491577]
[1039.97741699 188.64730835]
[1028.23706055 177.19757080]
[1013.58648682 173.97875977]
[1001.21716309 182.19677734]
[986.31353760 179.14114380]
[977.77758789 166.11135864]
[963.12701416 162.89256287]
[948.47644043 159.67375183]
[933.82586670 156.45494080]
[919.17529297 153.23612976]
[903.52856445 164.89511108]
[884.06182861 161.17066956]
[873.50158691 144.03678894]
[858.74963379 141.32003784]
[843.99774170 138.60330200]
[829.24578857 135.88655090]
[814.49389648 133.16981506]
[799.74194336 130.45306396]
[784.99005127 127.73632812]
[771.59722900 140.36621094]
[754.36187744 144.86640930]
[737.66009521 140.68286133]
[725.45733643 129.39579773]
[720.36730957 114.19833374]
[705.42950439 112.83431244]
[690.49163818 111.47029114]
[675.55377197 110.10626221]
[660.61590576 108.74224091]
[645.67803955 107.37821960]
[630.74023438 106.01419830]
[615.80236816 104.65017700]
[600.86450195 103.28614807]
[585.92663574 101.92212677]
[570.98883057 100.55810547]
[553.02532959 110.76074982]
[535.79693604 97.97669983]
[520.82122803 97.12346649]
[505.84552002 96.27023315]
[490.86978149 95.41699982]
[475.89407349 94.56376648]
[460.91836548 93.71054077]
[445.94265747 92.85730743]
[428.33798218 103.66728973]
[410.68316650 91.47889709]
[395.68707275 91.13744354]
[380.69094849 90.79599762]
[365.69482422 90.45455170]
[350.69873047 90.11310577]
[340.99896240 95.55792236]
[329.56964111 90.59419250]
[314.60461426 91.61782837]
[299.63958740 92.64146423]
[284.67453003 93.66510010]
[269.70950317 94.68873596]
[254.75709534 95.88264465]
[239.81924438 97.24666595]
[224.88139343 98.61068726]
[219.10768127 106.98463440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 130]
[3 129]
[4 128]
[5 127]
[6 126]
[9 46]
[10 45]
[11 44]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[24 33]
[25 32]
[26 31]
[50 61]
[51 60]
[52 59]
[62 75]
[63 74]
[64 73]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[107 124]
[108 123]
[109 121]
[110 120]
[111 119]
[112 118]
[132 274]
[133 273]
[134 272]
[137 271]
[138 270]
[139 269]
[140 268]
[141 267]
[151 265]
[152 264]
[153 263]
[154 262]
[155 261]
[160 259]
[161 258]
[162 257]
[163 256]
[164 255]
[165 254]
[166 253]
[171 251]
[172 250]
[173 249]
[174 248]
[175 247]
[176 246]
[177 245]
[178 244]
[179 243]
[180 242]
[181 241]
[185 193]
[186 192]
[187 191]
[194 236]
[195 235]
[196 234]
[197 233]
[198 232]
[199 231]
[200 230]
[206 227]
[207 226]
[208 225]
[209 224]
[210 223]
[213 220]
[214 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
