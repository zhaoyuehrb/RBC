%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ASZ1)
} def

/sequence { (\
GGUGCGCAUGCGCCCGGAGAGCUGAAGGGCGCGCGGUGCCGACAGGGAGCUUCCUUGGCUGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.019037588 ubox
1 15 0.003780945 ubox
1 40 0.790189825 ubox
1 60 0.046988739 ubox
2 13 0.022222290 ubox
2 14 0.003630008 ubox
2 34 0.017642316 ubox
2 37 0.047763230 ubox
2 39 0.790365484 ubox
2 43 0.016330020 ubox
2 59 0.049733300 ubox
2 63 0.010149757 ubox
3 12 0.022252248 ubox
3 33 0.017348937 ubox
3 35 0.073824992 ubox
3 36 0.031515994 ubox
3 38 0.787308131 ubox
3 41 0.024768603 ubox
3 42 0.016805747 ubox
3 58 0.048197501 ubox
3 62 0.009842627 ubox
4 11 0.022381133 ubox
4 13 0.004065982 ubox
4 32 0.015603093 ubox
4 34 0.097264951 ubox
4 37 0.721987771 ubox
4 39 0.194541190 ubox
4 40 0.026944429 ubox
4 59 0.009703867 ubox
4 63 0.007420341 ubox
5 10 0.022351518 ubox
5 12 0.004070024 ubox
5 31 0.015436443 ubox
5 33 0.096908333 ubox
5 35 0.765143652 ubox
5 36 0.576467794 ubox
5 38 0.216961618 ubox
5 41 0.007442833 ubox
5 58 0.009697102 ubox
5 62 0.007321360 ubox
6 11 0.004057837 ubox
6 30 0.014523254 ubox
6 32 0.071930026 ubox
6 34 0.885260336 ubox
6 37 0.240273410 ubox
6 39 0.027770985 ubox
6 40 0.005377060 ubox
6 59 0.003744301 ubox
6 63 0.003271607 ubox
7 29 0.014329833 ubox
7 31 0.065837440 ubox
7 33 0.874637290 ubox
7 36 0.241723555 ubox
7 38 0.028879806 ubox
7 58 0.003746507 ubox
7 61 0.003491456 ubox
7 62 0.003274189 ubox
8 37 0.028974413 ubox
8 60 0.003186998 ubox
9 31 0.014160300 ubox
9 33 0.408946588 ubox
9 35 0.017067284 ubox
9 36 0.023779461 ubox
10 22 0.007377787 ubox
10 30 0.017484023 ubox
10 32 0.993225066 ubox
10 34 0.017722761 ubox
11 21 0.007381298 ubox
11 24 0.007171406 ubox
11 29 0.017454073 ubox
11 31 0.997153403 ubox
11 33 0.017566860 ubox
12 22 0.008367950 ubox
12 30 0.999317443 ubox
12 32 0.016752061 ubox
13 21 0.008488883 ubox
13 28 0.018883742 ubox
13 29 0.999319023 ubox
13 31 0.016582772 ubox
14 27 0.019637665 ubox
14 28 0.999297402 ubox
14 29 0.016403550 ubox
14 36 0.011509466 ubox
15 24 0.087424947 ubox
15 27 0.995447555 ubox
15 28 0.016641330 ubox
15 35 0.018398424 ubox
16 23 0.277750121 ubox
16 34 0.018504179 ubox
16 54 0.007616005 ubox
17 22 0.279541122 ubox
17 53 0.007625789 ubox
18 51 0.003195341 ubox
18 52 0.006653015 ubox
19 50 0.003554978 ubox
19 51 0.004023232 ubox
19 52 0.004161129 ubox
20 51 0.006598480 ubox
20 60 0.006397513 ubox
21 30 0.019152871 ubox
21 50 0.007739297 ubox
21 59 0.006573292 ubox
22 29 0.019154796 ubox
22 49 0.007725506 ubox
22 58 0.006568852 ubox
23 28 0.018791612 ubox
23 48 0.007615828 ubox
23 57 0.004720553 ubox
25 56 0.003860204 ubox
26 55 0.004319626 ubox
27 54 0.004671785 ubox
28 40 0.011652970 ubox
28 53 0.004663957 ubox
29 39 0.011686956 ubox
29 52 0.004503223 ubox
30 38 0.011712584 ubox
31 37 0.011673601 ubox
31 50 0.003920943 ubox
32 36 0.011606635 ubox
32 49 0.003920098 ubox
33 63 0.010901407 ubox
34 41 0.003787994 ubox
34 61 0.005531094 ubox
34 62 0.011000301 ubox
35 40 0.003819473 ubox
35 60 0.005540347 ubox
36 59 0.005323474 ubox
36 63 0.013983366 ubox
37 58 0.005173498 ubox
37 61 0.004182638 ubox
37 62 0.013171427 ubox
38 59 0.062646969 ubox
38 63 0.562368510 ubox
39 46 0.006709845 ubox
39 47 0.005428756 ubox
39 58 0.062877828 ubox
39 62 0.575762768 ubox
40 45 0.007677590 ubox
40 46 0.006558827 ubox
40 57 0.062120470 ubox
40 61 0.585271177 ubox
41 56 0.054958773 ubox
41 60 0.530595208 ubox
42 55 0.033701277 ubox
43 57 0.990938046 ubox
43 61 0.047286522 ubox
44 51 0.008065682 ubox
44 55 0.056631453 ubox
44 56 0.991333602 ubox
44 60 0.046623419 ubox
45 50 0.008240071 ubox
45 54 0.070698813 ubox
45 55 0.991778282 ubox
45 56 0.004412497 ubox
45 59 0.044611340 ubox
46 53 0.070704530 ubox
46 54 0.993258311 ubox
46 55 0.007326612 ubox
47 52 0.055650004 ubox
47 53 0.992918121 ubox
47 54 0.007673457 ubox
47 56 0.032437142 ubox
48 52 0.863850747 ubox
48 55 0.033010162 ubox
48 56 0.003364211 ubox
48 60 0.079917272 ubox
49 54 0.032582676 ubox
49 59 0.082259329 ubox
49 63 0.005642606 ubox
50 58 0.082324387 ubox
50 62 0.005675967 ubox
51 57 0.081329005 ubox
51 61 0.005565704 ubox
53 62 0.007692369 ubox
54 61 0.007844867 ubox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
38 63 0.9500000 lbox
39 62 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
43 57 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
