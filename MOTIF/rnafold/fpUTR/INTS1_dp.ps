%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (INTS1)
} def

/sequence { (\
GUUUCCGAUUCCGGGGUGGCCGGGUGGCGGCGGCGGCGCUCCGGUCGCGAUGGGCCAGAGGUGACGCCGCAGCCGCCGGGAGCCGCGAGGGACGGGGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 93 0.006052710 ubox
1 98 0.819285304 ubox
2 92 0.005334205 ubox
2 96 0.008547416 ubox
2 97 0.674827851 ubox
2 100 0.042092103 ubox
2 101 0.016706423 ubox
3 16 0.016733672 ubox
3 81 0.009199052 ubox
3 91 0.004543498 ubox
3 92 0.003915059 ubox
3 96 0.464586908 ubox
3 97 0.599842387 ubox
3 99 0.041939585 ubox
3 100 0.022033646 ubox
3 101 0.005755572 ubox
4 15 0.022815064 ubox
4 80 0.009727819 ubox
4 81 0.006943782 ubox
4 90 0.003669868 ubox
4 91 0.004801797 ubox
4 92 0.010543642 ubox
4 95 0.085729314 ubox
4 96 0.825066551 ubox
4 97 0.103798803 ubox
4 99 0.016206017 ubox
4 100 0.005164655 ubox
5 14 0.025146185 ubox
5 15 0.003418016 ubox
5 79 0.009974785 ubox
5 80 0.007291568 ubox
5 89 0.003470175 ubox
5 90 0.005480130 ubox
5 91 0.011282558 ubox
5 94 0.071327816 ubox
5 95 0.984972455 ubox
5 96 0.142119146 ubox
5 97 0.019860955 ubox
5 101 0.007628934 ubox
6 13 0.025168852 ubox
6 14 0.003348461 ubox
6 78 0.009971450 ubox
6 79 0.007279750 ubox
6 89 0.005465792 ubox
6 90 0.011297241 ubox
6 94 0.986578730 ubox
6 95 0.141331791 ubox
6 96 0.019829813 ubox
6 100 0.007798153 ubox
7 12 0.024834558 ubox
7 77 0.007550210 ubox
7 93 0.985508070 ubox
9 89 0.044798521 ubox
9 90 0.087268311 ubox
9 91 0.465802030 ubox
9 92 0.805073766 ubox
9 97 0.006831958 ubox
10 24 0.007332330 ubox
10 88 0.047047677 ubox
10 89 0.081476476 ubox
10 90 0.511324490 ubox
10 91 0.806563921 ubox
10 92 0.234676842 ubox
10 96 0.007628450 ubox
11 23 0.012385319 ubox
11 87 0.034104518 ubox
11 89 0.522116032 ubox
11 90 0.805058514 ubox
11 91 0.249603874 ubox
11 95 0.007814658 ubox
12 22 0.012593445 ubox
12 85 0.008379919 ubox
12 87 0.565359055 ubox
12 89 0.783728331 ubox
12 90 0.248215708 ubox
12 94 0.007809399 ubox
13 21 0.012589028 ubox
13 84 0.008895813 ubox
13 86 0.680418104 ubox
13 93 0.007767252 ubox
14 20 0.012567963 ubox
14 83 0.008840889 ubox
14 84 0.015660185 ubox
15 83 0.015226813 ubox
15 84 0.718012639 ubox
16 83 0.718099134 ubox
16 86 0.694576088 ubox
17 82 0.716027910 ubox
17 85 0.694722472 ubox
18 84 0.695017806 ubox
19 83 0.693628135 ubox
20 79 0.381365552 ubox
20 80 0.747438507 ubox
20 82 0.540525607 ubox
21 78 0.385971967 ubox
21 79 0.881409805 ubox
22 77 0.318695102 ubox
23 76 0.232682819 ubox
23 77 0.939974793 ubox
24 76 0.965300788 ubox
25 75 0.989169088 ubox
25 78 0.115652872 ubox
26 74 0.992918961 ubox
26 77 0.118342911 ubox
27 73 0.992951077 ubox
27 76 0.118417020 ubox
28 72 0.989186472 ubox
28 75 0.118454085 ubox
29 74 0.118455406 ubox
30 70 0.989168666 ubox
30 73 0.118447822 ubox
31 69 0.992920222 ubox
31 72 0.117991171 ubox
32 68 0.992939431 ubox
33 67 0.992956509 ubox
33 70 0.117977618 ubox
34 66 0.992929286 ubox
34 69 0.118425372 ubox
35 65 0.982760180 ubox
35 68 0.118427826 ubox
36 62 0.246322268 ubox
36 67 0.118429835 ubox
37 61 0.256385670 ubox
37 63 0.804640648 ubox
37 66 0.118396566 ubox
38 62 0.852919801 ubox
38 65 0.117767160 ubox
39 58 0.003926674 ubox
39 60 0.761143668 ubox
39 61 0.647731489 ubox
40 57 0.003985877 ubox
40 59 0.942589993 ubox
40 60 0.321523552 ubox
40 61 0.004493506 ubox
40 64 0.003556061 ubox
41 54 0.004054200 ubox
41 58 0.980148506 ubox
41 60 0.048895841 ubox
41 61 0.016868656 ubox
42 53 0.004067291 ubox
42 60 0.017317736 ubox
43 56 0.999048734 ubox
44 51 0.003905946 ubox
44 55 0.999965965 ubox
45 50 0.003711197 ubox
45 53 0.022042968 ubox
45 54 0.999372733 ubox
46 52 0.031213148 ubox
46 53 0.998420780 ubox
47 51 0.023591336 ubox
47 55 0.005300796 ubox
48 54 0.005775060 ubox
82 98 0.028391274 ubox
83 97 0.028428507 ubox
84 96 0.028432227 ubox
86 94 0.028417971 ubox
87 93 0.028091700 ubox
1 98 0.9500000 lbox
2 97 0.9500000 lbox
3 96 0.9500000 lbox
5 95 0.9500000 lbox
6 94 0.9500000 lbox
7 93 0.9500000 lbox
9 92 0.9500000 lbox
10 91 0.9500000 lbox
11 90 0.9500000 lbox
12 89 0.9500000 lbox
16 86 0.9500000 lbox
17 85 0.9500000 lbox
18 84 0.9500000 lbox
19 83 0.9500000 lbox
20 80 0.9500000 lbox
21 79 0.9500000 lbox
23 77 0.9500000 lbox
24 76 0.9500000 lbox
25 75 0.9500000 lbox
26 74 0.9500000 lbox
27 73 0.9500000 lbox
28 72 0.9500000 lbox
30 70 0.9500000 lbox
31 69 0.9500000 lbox
32 68 0.9500000 lbox
33 67 0.9500000 lbox
34 66 0.9500000 lbox
35 65 0.9500000 lbox
37 63 0.9500000 lbox
38 62 0.9500000 lbox
39 61 0.9500000 lbox
40 59 0.9500000 lbox
41 58 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
showpage
end
%%EOF
