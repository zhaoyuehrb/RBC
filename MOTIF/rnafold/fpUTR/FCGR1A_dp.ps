%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FCGR1A)
} def

/sequence { (\
AAUAUCUUGCAUGUUACAGAUUUCACUGCUCCCACCAGCUUGGAGACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.030617757 ubox
1 15 0.313126211 ubox
1 22 0.022742309 ubox
1 23 0.062050150 ubox
2 7 0.028327484 ubox
2 12 0.027347631 ubox
2 14 0.347343175 ubox
2 21 0.023597180 ubox
2 22 0.073187063 ubox
3 9 0.017602241 ubox
3 11 0.027575827 ubox
3 13 0.350057890 ubox
3 16 0.028613265 ubox
3 20 0.018913151 ubox
3 28 0.003762541 ubox
3 42 0.004124569 ubox
4 8 0.016857212 ubox
4 12 0.348479699 ubox
4 14 0.016646640 ubox
4 15 0.030505963 ubox
4 21 0.413532836 ubox
4 27 0.003622528 ubox
4 41 0.004600252 ubox
5 11 0.332155328 ubox
5 13 0.017260495 ubox
5 20 0.462534514 ubox
5 43 0.039866776 ubox
5 44 0.085170192 ubox
5 46 0.100488199 ubox
6 19 0.470626461 ubox
6 38 0.005639159 ubox
6 42 0.061765565 ubox
6 43 0.090821784 ubox
6 45 0.109885972 ubox
7 18 0.393372619 ubox
7 19 0.136923827 ubox
7 20 0.022576461 ubox
7 37 0.004778411 ubox
7 38 0.015139088 ubox
7 42 0.089505669 ubox
7 43 0.003671242 ubox
7 44 0.106770766 ubox
7 45 0.020212723 ubox
7 46 0.005345380 ubox
7 49 0.072704506 ubox
8 16 0.137165572 ubox
8 18 0.287859993 ubox
8 19 0.023000894 ubox
8 25 0.030550079 ubox
8 34 0.006255207 ubox
8 37 0.020036132 ubox
8 42 0.005599252 ubox
8 43 0.093268030 ubox
8 44 0.028977656 ubox
8 45 0.004642993 ubox
8 48 0.084996435 ubox
9 15 0.132140747 ubox
9 17 0.376147363 ubox
9 24 0.034242242 ubox
9 29 0.275662957 ubox
9 33 0.006865411 ubox
9 36 0.020781489 ubox
9 39 0.134980949 ubox
9 47 0.086428311 ubox
10 28 0.278256540 ubox
10 38 0.134958144 ubox
10 42 0.065405866 ubox
11 21 0.036967184 ubox
11 27 0.272294708 ubox
11 41 0.064661149 ubox
12 18 0.018328725 ubox
12 20 0.040545650 ubox
12 25 0.212399397 ubox
12 34 0.086613019 ubox
12 37 0.052684495 ubox
12 48 0.217562321 ubox
13 17 0.017720405 ubox
13 21 0.047820083 ubox
13 24 0.215848550 ubox
13 26 0.163245791 ubox
13 29 0.022376076 ubox
13 33 0.087713827 ubox
13 35 0.085142424 ubox
13 36 0.050320696 ubox
13 39 0.068775559 ubox
13 47 0.241539874 ubox
13 50 0.053995458 ubox
14 20 0.052757689 ubox
14 25 0.155503708 ubox
14 28 0.016642616 ubox
14 34 0.084451455 ubox
14 38 0.068297876 ubox
14 45 0.007245361 ubox
14 46 0.237152490 ubox
14 49 0.054485931 ubox
15 19 0.048311770 ubox
15 28 0.004399841 ubox
15 37 0.060509707 ubox
15 44 0.006617423 ubox
15 45 0.192200056 ubox
15 48 0.049932652 ubox
16 27 0.004468090 ubox
17 28 0.505681069 ubox
17 42 0.044693478 ubox
18 27 0.509300985 ubox
18 30 0.026291367 ubox
18 40 0.005912412 ubox
18 41 0.043911102 ubox
19 26 0.507955296 ubox
19 29 0.027264055 ubox
19 31 0.022551156 ubox
19 39 0.007722324 ubox
19 40 0.041602650 ubox
19 41 0.010093231 ubox
20 30 0.021524091 ubox
20 40 0.010380633 ubox
21 38 0.004685661 ubox
21 44 0.019933271 ubox
21 45 0.180374739 ubox
21 46 0.274733808 ubox
21 49 0.010836035 ubox
22 37 0.004166856 ubox
22 42 0.003230150 ubox
22 43 0.016363920 ubox
22 44 0.313803505 ubox
22 45 0.318922831 ubox
22 46 0.011268445 ubox
22 48 0.010290503 ubox
22 49 0.016026153 ubox
23 42 0.009671201 ubox
23 43 0.322891910 ubox
23 44 0.339155509 ubox
23 45 0.008228748 ubox
23 46 0.028552395 ubox
23 48 0.013554014 ubox
24 42 0.327989982 ubox
24 43 0.339943937 ubox
24 45 0.030595356 ubox
25 41 0.323964502 ubox
26 38 0.053711486 ubox
26 43 0.031698132 ubox
26 45 0.011897353 ubox
27 34 0.007677448 ubox
27 37 0.054148128 ubox
27 42 0.029561394 ubox
27 44 0.011706621 ubox
27 48 0.547506322 ubox
28 33 0.008257495 ubox
28 36 0.053950765 ubox
28 39 0.478591788 ubox
28 47 0.592619522 ubox
29 38 0.478871583 ubox
29 45 0.754054594 ubox
30 37 0.452235928 ubox
30 44 0.758079718 ubox
30 46 0.327384738 ubox
31 42 0.003495163 ubox
31 43 0.717583705 ubox
31 45 0.346210033 ubox
32 42 0.672721906 ubox
32 43 0.462282481 ubox
33 42 0.523699339 ubox
34 41 0.521097504 ubox
35 43 0.101248384 ubox
36 42 0.102485602 ubox
37 41 0.085000530 ubox
39 45 0.006190441 ubox
40 44 0.005653451 ubox
40 49 0.069696700 ubox
41 48 0.081762148 ubox
42 47 0.083613091 ubox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
showpage
end
%%EOF
