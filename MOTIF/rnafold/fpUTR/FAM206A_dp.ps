%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM206A)
} def

/sequence { (\
ACGCGCUGUGCGCCGGAAGAGCACGCCCAGUCCGGGCUGCGCGGAGGAAGCGCUGGGGUCCCGGAGGGCGGGGGUGGCGGCGCCGGAGGUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.003529826 ubox
1 75 0.003945592 ubox
1 90 0.043776172 ubox
2 8 0.003743235 ubox
2 12 0.012158979 ubox
2 15 0.026194725 ubox
2 74 0.004169065 ubox
2 76 0.018571131 ubox
2 85 0.085287295 ubox
2 89 0.050078079 ubox
2 92 0.390253405 ubox
3 9 0.003193747 ubox
3 11 0.013682438 ubox
3 13 0.042024489 ubox
3 14 0.019130517 ubox
3 22 0.003634759 ubox
3 75 0.021432401 ubox
3 83 0.174990417 ubox
3 84 0.061115984 ubox
3 90 0.213463459 ubox
3 91 0.391713324 ubox
3 93 0.856897772 ubox
4 8 0.003197582 ubox
4 10 0.013682994 ubox
4 12 0.045952433 ubox
4 21 0.003631448 ubox
4 74 0.021606330 ubox
4 76 0.003190172 ubox
4 79 0.003431120 ubox
4 82 0.185643663 ubox
4 85 0.005281759 ubox
4 89 0.381882277 ubox
4 92 0.858561564 ubox
5 9 0.008443547 ubox
5 11 0.045989433 ubox
5 13 0.005905378 ubox
5 75 0.004069430 ubox
5 78 0.005549114 ubox
5 81 0.185699049 ubox
5 84 0.005311184 ubox
5 90 0.115092445 ubox
5 91 0.849514204 ubox
5 93 0.008966852 ubox
6 10 0.045655750 ubox
6 12 0.005913113 ubox
6 19 0.003481504 ubox
6 72 0.021340478 ubox
6 74 0.004145028 ubox
6 77 0.005551947 ubox
6 80 0.185700754 ubox
6 86 0.787252219 ubox
6 88 0.328262187 ubox
6 89 0.478860007 ubox
6 92 0.008303665 ubox
7 18 0.003469604 ubox
7 71 0.020301823 ubox
7 73 0.003939349 ubox
7 76 0.005044683 ubox
7 79 0.185448610 ubox
7 85 0.792473624 ubox
7 87 0.337314556 ubox
7 88 0.461776229 ubox
8 24 0.020709025 ubox
8 78 0.185424091 ubox
8 83 0.017437838 ubox
8 84 0.807728955 ubox
8 93 0.004633167 ubox
9 23 0.022402359 ubox
9 76 0.028213157 ubox
9 77 0.173817527 ubox
9 82 0.018231824 ubox
9 85 0.335733895 ubox
9 92 0.004639452 ubox
10 22 0.023068743 ubox
10 75 0.041061913 ubox
10 78 0.004264330 ubox
10 81 0.018209386 ubox
10 83 0.950413646 ubox
10 84 0.240804028 ubox
10 90 0.010327035 ubox
10 91 0.004546941 ubox
11 21 0.023066833 ubox
11 74 0.046627521 ubox
11 76 0.174551978 ubox
11 77 0.003206260 ubox
11 79 0.014522772 ubox
11 80 0.012896635 ubox
11 82 0.980781262 ubox
11 89 0.011231411 ubox
12 22 0.003472821 ubox
12 75 0.179421954 ubox
12 78 0.020497183 ubox
12 81 0.980814170 ubox
13 21 0.003490151 ubox
13 72 0.046843292 ubox
13 73 0.006998601 ubox
13 74 0.179601856 ubox
13 77 0.020581338 ubox
13 80 0.980828056 ubox
13 86 0.016071557 ubox
14 71 0.046827655 ubox
14 72 0.007181637 ubox
14 73 0.179539360 ubox
14 76 0.020593609 ubox
14 79 0.980804082 ubox
14 85 0.016406960 ubox
15 24 0.010288227 ubox
15 75 0.019913095 ubox
15 78 0.978160223 ubox
15 84 0.016418621 ubox
16 83 0.016410809 ubox
21 75 0.425340477 ubox
21 78 0.045740612 ubox
22 74 0.425376455 ubox
22 76 0.125680287 ubox
22 77 0.041753692 ubox
23 75 0.130265196 ubox
24 70 0.987889118 ubox
24 74 0.130184977 ubox
24 76 0.032389755 ubox
25 69 0.990969413 ubox
25 75 0.032651637 ubox
26 68 0.990945985 ubox
26 72 0.128448011 ubox
26 73 0.018741959 ubox
26 74 0.032561446 ubox
27 67 0.990880541 ubox
27 68 0.009466861 ubox
27 71 0.128458401 ubox
27 72 0.018935841 ubox
27 73 0.032448625 ubox
28 66 0.987400099 ubox
28 67 0.013338682 ubox
28 70 0.128231559 ubox
28 71 0.019088716 ubox
28 72 0.032310618 ubox
30 69 0.049518520 ubox
31 64 0.018999140 ubox
31 65 0.951950976 ubox
31 67 0.004659865 ubox
31 68 0.043797174 ubox
32 63 0.018940938 ubox
32 64 0.999090914 ubox
32 67 0.036080555 ubox
33 63 0.999166648 ubox
33 66 0.035004314 ubox
34 61 0.111927340 ubox
34 62 0.993683446 ubox
35 60 0.154251756 ubox
35 61 0.988010203 ubox
36 59 0.187153178 ubox
36 60 0.982051984 ubox
37 56 0.190890298 ubox
37 57 0.139534397 ubox
37 58 0.964846901 ubox
38 55 0.180887579 ubox
38 56 0.138385780 ubox
38 57 0.956498632 ubox
39 53 0.667924846 ubox
39 54 0.030682377 ubox
39 59 0.007067105 ubox
40 52 0.668856650 ubox
40 55 0.735552513 ubox
40 58 0.007355842 ubox
41 51 0.669380036 ubox
41 53 0.726194350 ubox
41 54 0.154226522 ubox
42 50 0.669301739 ubox
42 52 0.742652948 ubox
42 55 0.009542030 ubox
43 51 0.741425293 ubox
43 54 0.011103372 ubox
44 53 0.011753312 ubox
45 54 0.007348882 ubox
46 53 0.008282292 ubox
73 84 0.003292783 ubox
73 94 0.005499441 ubox
74 83 0.003300985 ubox
74 93 0.005565575 ubox
75 82 0.003303549 ubox
75 92 0.005566507 ubox
76 81 0.003295665 ubox
76 91 0.005566530 ubox
76 94 0.043106775 ubox
77 90 0.005559471 ubox
77 93 0.047614532 ubox
78 89 0.005556293 ubox
78 92 0.047635317 ubox
79 91 0.047628056 ubox
79 94 0.022777072 ubox
80 90 0.047491742 ubox
80 93 0.023404075 ubox
81 89 0.047480095 ubox
81 92 0.023407016 ubox
82 90 0.006554140 ubox
82 91 0.022898589 ubox
83 89 0.023987042 ubox
84 88 0.024420823 ubox
84 92 0.065970534 ubox
85 91 0.068184336 ubox
85 94 0.082091100 ubox
86 90 0.044197274 ubox
86 93 0.082744501 ubox
88 94 0.043273751 ubox
89 93 0.042948062 ubox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
6 86 0.9500000 lbox
7 85 0.9500000 lbox
8 84 0.9500000 lbox
10 83 0.9500000 lbox
11 82 0.9500000 lbox
12 81 0.9500000 lbox
13 80 0.9500000 lbox
14 79 0.9500000 lbox
15 78 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
39 53 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
showpage
end
%%EOF
