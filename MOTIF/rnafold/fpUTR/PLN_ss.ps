%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUUUCUCCUCCACCUACUGCAACUGUUCCCAUAAACUGGGUGACAGAGUCAGAAAACUCCCCAGCUAAACACCCGUAAGACUUCAUACAACACAAUACUCUAUACUGUGAUGAUCACAGCUGCCAAGGCUACCUAAAAGAAGACAGUUAUCUCAUAUUUGGCUGCCAGCUUUUUAUCUUUCUCUCGACCACUUAAAACUUCAGACUUCCUGUCCUGCUGGUAUC\
) } def
/len { sequence length } bind def

/coor [
[36.78859329 217.58360291]
[35.26406860 226.59939575]
[32.61761475 235.34977722]
[28.89177895 243.69573975]
[24.14626122 251.50479126]
[18.45693779 258.65301514]
[11.91465950 265.02703857]
[4.62380171 270.52587891]
[-3.29940939 275.06250000]
[-11.72874165 278.56518555]
[-20.52997208 280.97866821]
[-29.56302261 282.26507568]
[-38.68418884 282.40441895]
[-47.74842834 281.39501953]
[-56.61166763 279.25338745]
[-65.13308716 276.01403809]
[-73.17736053 271.72897339]
[-80.61682129 266.46673584]
[-87.33344269 260.31143188]
[-93.22076416 253.36128235]
[-106.10657501 261.03955078]
[-118.99237823 268.71783447]
[-120.52223969 284.04641724]
[-130.66613770 295.40225220]
[-145.37767029 298.57003784]
[-158.97085571 292.53982544]
[-171.85665894 300.21810913]
[-184.74247742 307.89639282]
[-197.62828064 315.57467651]
[-210.51408386 323.25292969]
[-223.34669495 331.01980591]
[-236.12548828 338.87490845]
[-248.90428162 346.72998047]
[-261.68307495 354.58508301]
[-266.79037476 369.79348755]
[-281.91378784 375.14709473]
[-295.45196533 366.53909302]
[-297.01956177 350.57281494]
[-285.41403198 339.49621582]
[-269.53814697 341.80630493]
[-256.75936890 333.95120239]
[-243.98057556 326.09609985]
[-231.20178223 318.24102783]
[-227.15440369 312.06805420]
[-218.19236755 310.36712646]
[-205.30654907 302.68884277]
[-192.42074585 295.01058960]
[-179.53494263 287.33230591]
[-166.64912415 279.65402222]
[-165.48289490 264.82913208]
[-155.69499207 253.39840698]
[-140.87988281 249.88189697]
[-126.67065430 255.83203125]
[-113.78485107 248.15374756]
[-100.89904022 240.47547913]
[-106.99125671 219.64701843]
[-106.62303925 197.93601990]
[-99.81990814 177.30149841]
[-87.18836975 159.60762024]
[-69.86183167 146.45529175]
[-49.39892578 139.03729248]
[-27.64330292 138.03016663]
[-6.55750561 143.53247070]
[11.95405674 155.05519104]
[22.84888840 144.74487305]
[33.74372101 134.43455505]
[44.63855362 124.12424469]
[55.53338623 113.81392670]
[55.53338623 106.31392670]
[41.02924347 110.13882446]
[27.88199425 117.36030579]
[13.67656898 112.54305267]
[7.63392830 98.81401825]
[13.67644119 85.08492279]
[27.88182068 80.26753235]
[41.02924347 87.48903656]
[55.53338623 91.31392670]
[55.53338623 83.81392670]
[44.63855362 73.50360870]
[33.74372101 63.19329453]
[18.51568985 66.17434692]
[4.45795584 59.60474014]
[-3.02399492 46.01062012]
[-1.05319953 30.61920929]
[9.61253071 19.34881401]
[24.87200546 16.53313255]
[38.85764313 23.25485229]
[46.19168472 36.92933655]
[44.05403900 52.29846191]
[54.94887161 62.60877991]
[65.84370422 72.91909790]
[72.77279663 70.04897308]
[67.03254700 56.19077682]
[61.29229736 42.33258438]
[55.55204391 28.47439003]
[49.81179428 14.61619759]
[44.07154083 0.75800496]
[38.33129120 -13.10018826]
[32.59125137 -26.95846939]
[46.44962311 -32.69829178]
[52.18948364 -18.84043884]
[57.92973328 -4.98224640]
[63.66998672 8.87594604]
[69.41024017 22.73414040]
[75.15048981 36.59233093]
[80.89073944 50.45052719]
[86.63098907 64.30871582]
[93.56008911 61.43859100]
[93.97340393 46.44428635]
[94.38671875 31.44998360]
[94.80003357 16.45567894]
[95.21334839 1.46137428]
[95.62666321 -13.53293037]
[90.01905823 -29.53265190]
[103.84116364 -39.35027313]
[117.10144806 -28.78613091]
[110.62097168 -13.11961555]
[110.20765686 1.87468946]
[109.79434204 16.86899376]
[109.38102722 31.86329842]
[108.96771240 46.85760498]
[108.55438995 61.85190964]
[115.88399506 63.44155884]
[130.54318237 66.62085724]
[137.87278748 68.21050262]
[143.70837402 54.39218903]
[141.14410400 38.19476700]
[154.05787659 28.08701897]
[169.16511536 34.46693039]
[170.92478943 50.77139664]
[157.52668762 60.22777939]
[151.69110107 74.04609680]
[156.95774841 79.38580322]
[163.85954285 66.06795502]
[178.65834045 68.51653290]
[180.90266418 83.34767914]
[167.49102783 90.06523132]
[172.75765991 95.40493774]
[186.65507507 89.76029968]
[200.55247498 84.11566162]
[214.44989014 78.47101593]
[228.34730530 72.82637787]
[230.54983521 57.69045639]
[239.97055054 45.76792908]
[254.00086975 40.19865417]
[268.83578491 42.38526154]
[280.50576782 51.64143753]
[294.40319824 45.99679947]
[308.30059814 40.35215759]
[322.19799805 34.70751572]
[336.09542847 29.06287575]
[349.99282837 23.41823578]
[352.73541260 8.23660851]
[363.26712036 -3.03665137]
[378.22735596 -6.80428743]
[392.84234619 -1.86406088]
[402.44848633 10.20761967]
[403.98052979 25.55872536]
[396.94955444 39.29077530]
[383.59915161 47.02191925]
[368.18939209 46.28517914]
[355.63748169 37.31564713]
[341.74005127 42.96028519]
[327.84265137 48.60492706]
[313.94525146 54.24956894]
[300.04782104 59.89420700]
[286.15042114 65.53884888]
[284.23986816 80.31096649]
[275.13116455 92.22262573]
[261.19107056 98.01395416]
[246.12490845 96.03713989]
[233.99194336 86.72379303]
[220.09452820 92.36843109]
[206.19712830 98.01306915]
[192.29971313 103.65771484]
[178.40229797 109.30235291]
[175.77252197 116.32618713]
[190.67483521 118.03532410]
[205.57713318 119.74446106]
[220.47944641 121.45359039]
[235.38175964 123.16272736]
[250.28407288 124.87186432]
[265.18637085 126.58100128]
[280.08868408 128.29013062]
[294.68038940 124.81414032]
[309.60708618 126.29515839]
[323.23123169 132.57069397]
[334.05816650 142.95230103]
[340.90008545 156.30101013]
[343.00637817 171.15238953]
[340.14596558 185.87713623]
[332.63265991 198.85983276]
[321.29074097 208.67617798]
[307.36447144 214.24925232]
[292.38168335 214.96763611]
[277.98608398 210.75253296]
[265.75701904 202.06637573]
[257.03582764 189.86161804]
[244.67541504 181.36337280]
[232.31500244 172.86511230]
[219.95458984 164.36686707]
[207.59417725 155.86860657]
[195.23377991 147.37036133]
[182.87336731 138.87210083]
[170.51295471 130.37385559]
[167.88317871 137.39768982]
[174.65617371 150.78150940]
[181.42916870 164.16531372]
[196.16386414 170.51106262]
[200.25030518 186.02494812]
[190.55374146 198.80603027]
[174.51254272 199.04977417]
[164.43214417 186.56919861]
[168.04536438 170.93832397]
[161.27235413 157.55450439]
[154.49935913 144.17068481]
[116.70770264 158.47994995]
[83.16347504 148.65763855]
[65.84370422 124.70876312]
[54.94887161 135.01907349]
[44.05403900 145.32939148]
[33.15920639 155.63970947]
[22.26437378 165.95002747]
[27.35499954 173.55984497]
[31.44659615 181.74804688]
[34.47454453 190.38423157]
[36.39116287 199.33088684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 55]
[21 54]
[22 53]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[31 43]
[32 42]
[33 41]
[34 40]
[64 223]
[65 222]
[66 221]
[67 220]
[68 219]
[78 91]
[79 90]
[80 89]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[125 132]
[126 131]
[138 176]
[139 175]
[140 174]
[141 173]
[142 172]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[206 216]
[207 215]
[208 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
