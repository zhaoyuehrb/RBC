%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCAGCGAAUGCGGGGUAGGGGGGAGGUGGGGUGGCUCAAGACUCGCGCACGCGCACCACGGCCUACCUGCGCCUGGGCUGCCGGUGACCUGGGCCGAGCCCUCCCGGUCGGCUAAGAUUGCUGAGGAGGCGGCGGGUAGCUGGCAGGCGCCGACUUCCGAAGGCCGCCGUCCGGGCGAGGUGUCCUCAUGACUUCUCUUGUGGACC\
) } def
/len { sequence length } bind def

/coor [
[46.34416199 395.31329346]
[42.75669098 398.46591187]
[39.00038910 412.98797607]
[35.24409103 427.51004028]
[45.21721268 439.39770508]
[46.26465607 454.87936401]
[37.98366165 468.00204468]
[23.55843925 473.71978760]
[8.53577995 469.83401489]
[-1.30779612 457.83886719]
[-2.18723345 442.34674072]
[6.23562956 429.31466675]
[20.72203064 423.75372314]
[24.47833061 409.23165894]
[28.23463249 394.70962524]
[31.77430344 380.13323975]
[35.09656525 365.50576782]
[26.96616173 353.07870483]
[30.12703133 338.19705200]
[43.21681595 329.75338745]
[46.53907776 315.12594604]
[41.81282806 301.00106812]
[52.41447830 289.25732422]
[55.73674011 274.62988281]
[59.05899811 260.00241089]
[62.38125992 245.37495422]
[65.70352173 230.74748230]
[69.02577972 216.12002563]
[72.34803772 201.49256897]
[75.67029572 186.86511230]
[78.99255371 172.23765564]
[81.98732758 157.53964233]
[84.65312958 142.77842712]
[87.31892395 128.01721191]
[89.98471832 113.25599670]
[81.48029327 105.05026245]
[79.86841583 91.69374847]
[64.87215424 92.02872467]
[49.87589645 92.36370087]
[34.87963867 92.69867706]
[30.11475372 106.12056732]
[21.07361603 117.08683014]
[8.85798264 124.29317474]
[-5.05443478 126.89152527]
[-18.98872185 124.58981323]
[-31.27440262 117.68463135]
[-40.44570160 107.02321625]
[-45.41641235 93.89952087]
[-60.41599655 94.01119232]
[-75.41558075 94.12285614]
[-89.27450562 102.88997650]
[-103.66883087 95.03278351]
[-103.79090881 78.63409424]
[-89.51516724 70.56346893]
[-75.52725220 79.12327576]
[-60.52766418 79.01160431]
[-45.52807999 78.89994049]
[-39.79935837 64.12469482]
[-28.81260300 52.65124130]
[-14.22880077 46.25689697]
[1.73078358 45.94789124]
[16.62291336 51.80110931]
[28.15641212 62.94780731]
[34.54466248 77.70242310]
[49.54092026 77.36744690]
[64.53717804 77.03247070]
[79.53343964 76.69749451]
[92.86286926 69.81807709]
[101.82356262 57.78870392]
[110.78426361 45.75932312]
[119.74495697 33.72994614]
[128.70565796 21.70056915]
[131.32249451 12.94900131]
[137.89039612 9.56012630]
[147.02920532 -2.33450675]
[156.16799927 -14.22913933]
[165.30680847 -26.12377167]
[174.44560242 -38.01840591]
[183.58441162 -49.91303635]
[192.72320557 -61.80767059]
[201.86201477 -73.70230103]
[211.00082397 -85.59693909]
[215.24301147 -114.57550812]
[219.85702515 -128.84823608]
[224.47103882 -143.12097168]
[229.08503723 -157.39370728]
[233.69905090 -171.66644287]
[238.31306458 -185.93917847]
[242.92706299 -200.21189880]
[239.80984497 -215.72297668]
[251.08692932 -225.45318604]
[255.70094299 -239.72592163]
[260.31494141 -253.99864197]
[264.92895508 -268.27139282]
[263.92037964 -274.80548096]
[266.04421997 -280.07675171]
[269.89865112 -282.89675903]
[274.93557739 -297.02578735]
[279.97250366 -311.15481567]
[285.00939941 -325.28384399]
[284.06726074 -330.41796875]
[285.08673096 -334.94720459]
[287.50894165 -338.22561646]
[290.59960938 -339.92272949]
[296.26239014 -353.81274414]
[301.92517090 -367.70278931]
[307.58795166 -381.59280396]
[313.25073242 -395.48281860]
[312.53878784 -400.65393066]
[313.75949097 -405.13311768]
[316.32565308 -408.30010986]
[319.48901367 -409.85751343]
[325.76638794 -423.48083496]
[332.04373169 -437.10415649]
[338.32110596 -450.72744751]
[344.59844971 -464.35076904]
[337.76214600 -478.41485596]
[341.61557007 -493.57025146]
[354.33926392 -502.66098022]
[369.92547607 -501.39471436]
[381.01492310 -490.36935425]
[382.37142944 -474.79071045]
[373.35455322 -462.01455688]
[358.22177124 -458.07342529]
[351.94442749 -444.45010376]
[345.66705322 -430.82678223]
[339.38967896 -417.20346069]
[333.11233521 -403.58013916]
[327.14077759 -389.82003784]
[321.47799683 -375.93002319]
[315.81518555 -362.03997803]
[310.15240479 -348.14996338]
[304.48962402 -334.25994873]
[299.13842773 -320.24691772]
[294.10153198 -306.11788940]
[289.06460571 -291.98886108]
[284.02767944 -277.85983276]
[279.20169067 -263.65737915]
[274.58767700 -249.38464355]
[269.97366333 -235.11190796]
[265.35964966 -220.83917236]
[268.80691528 -206.34898376]
[257.19979858 -195.59790039]
[252.58580017 -181.32516479]
[247.97178650 -167.05242920]
[243.35777283 -152.77969360]
[238.74375916 -138.50695801]
[234.12976074 -124.23423004]
[229.51574707 -109.96149445]
[237.83769226 -97.48170471]
[252.78742981 -96.25473022]
[267.73715210 -95.02774811]
[282.68688965 -93.80077362]
[297.64535522 -92.68512726]
[312.61169434 -91.68087006]
[321.09765625 -104.48257446]
[334.85473633 -111.31182098]
[350.18231201 -110.33157349]
[362.95736694 -101.80551147]
[369.74346924 -88.02710724]
[368.71517944 -72.70267487]
[360.14910889 -59.95441437]
[346.34948730 -53.21154404]
[331.02835083 -54.28786087]
[318.30700684 -62.89384460]
[311.60742188 -76.71452332]
[296.64108276 -77.71878052]
[289.75683594 -75.03015900]
[281.45993042 -78.85104370]
[266.51019287 -80.07801819]
[251.56045532 -81.30499268]
[236.61071777 -82.53196716]
[222.89544678 -76.45813751]
[213.75665283 -64.56349945]
[204.61784363 -52.66886902]
[195.47904968 -40.77423477]
[186.34024048 -28.87960243]
[177.20143127 -16.98497009]
[168.06263733 -5.09033728]
[158.92382812 6.80429554]
[149.78503418 18.69892883]
[140.73503113 30.66126442]
[131.77433777 42.69064331]
[122.81363678 54.72002029]
[113.85294342 66.74939728]
[104.89225006 78.77877808]
[119.18639374 99.39431763]
[104.74593353 115.92179108]
[102.08013916 130.68299866]
[99.41434479 145.44422913]
[96.74855042 160.20544434]
[98.51520538 165.11726379]
[98.24785614 169.75210571]
[96.39260864 173.38159180]
[93.62001801 175.55990601]
[90.29776001 190.18736267]
[86.97549438 204.81483459]
[83.65323639 219.44229126]
[80.33097839 234.06974792]
[77.00872040 248.69720459]
[73.68646240 263.32467651]
[70.36419678 277.95211792]
[67.04193878 292.57958984]
[71.53056335 307.75070190]
[61.16653824 318.44821167]
[57.84427643 333.07565308]
[66.00244141 346.34524536]
[62.42482758 361.13226318]
[49.72402573 368.82803345]
[46.40176392 383.45550537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[16 210]
[17 209]
[20 206]
[21 205]
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[28 198]
[29 197]
[30 196]
[31 195]
[32 191]
[33 190]
[34 189]
[35 188]
[37 67]
[38 66]
[39 65]
[40 64]
[48 57]
[49 56]
[50 55]
[68 186]
[69 185]
[70 184]
[71 183]
[72 182]
[74 181]
[75 180]
[76 179]
[77 178]
[78 177]
[79 176]
[80 175]
[81 174]
[82 173]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
[91 141]
[92 140]
[93 139]
[94 138]
[97 137]
[98 136]
[99 135]
[100 134]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[150 172]
[151 171]
[152 170]
[153 169]
[154 167]
[155 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
