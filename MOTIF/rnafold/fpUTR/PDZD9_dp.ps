%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PDZD9)
} def

/sequence { (\
AUUGGGACUGACUCCAGCCUCUGCUCCGGGAGGCCCUCCCGGGCUGCCUGACCUCCCGGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 17 0.123938667 ubox
2 51 0.003512869 ubox
2 59 0.054924235 ubox
2 60 0.003806692 ubox
2 61 0.011605687 ubox
3 16 0.362791490 ubox
3 23 0.055375594 ubox
3 50 0.003867723 ubox
3 58 0.074510203 ubox
3 59 0.003500650 ubox
3 60 0.009830055 ubox
4 13 0.020778305 ubox
4 14 0.034878848 ubox
4 15 0.390172315 ubox
4 19 0.053115720 ubox
4 20 0.704376484 ubox
4 21 0.460659703 ubox
4 22 0.058426186 ubox
4 25 0.003482128 ubox
4 35 0.004986655 ubox
4 36 0.089730783 ubox
4 37 0.011490867 ubox
4 40 0.003358620 ubox
4 49 0.004183757 ubox
4 57 0.083185914 ubox
4 63 0.034565423 ubox
5 12 0.023233582 ubox
5 13 0.035758296 ubox
5 14 0.389588526 ubox
5 15 0.150108481 ubox
5 18 0.050546491 ubox
5 19 0.794445223 ubox
5 20 0.404433481 ubox
5 21 0.058653834 ubox
5 22 0.043642157 ubox
5 24 0.003650007 ubox
5 35 0.089698513 ubox
5 36 0.016890043 ubox
5 39 0.003360578 ubox
5 48 0.004228192 ubox
5 56 0.083201841 ubox
5 62 0.034032471 ubox
5 63 0.010596030 ubox
6 12 0.089111919 ubox
6 13 0.324155250 ubox
6 14 0.151727359 ubox
6 18 0.795094764 ubox
6 19 0.406974147 ubox
6 20 0.031497403 ubox
6 21 0.046171381 ubox
6 34 0.088621865 ubox
6 35 0.016898978 ubox
6 38 0.003360623 ubox
6 47 0.004202811 ubox
6 55 0.083174740 ubox
6 62 0.010660701 ubox
7 13 0.145701823 ubox
7 20 0.044069515 ubox
7 37 0.003247120 ubox
7 54 0.079877250 ubox
8 17 0.898712746 ubox
8 32 0.009170130 ubox
8 33 0.072384135 ubox
8 59 0.028202417 ubox
9 16 0.899088450 ubox
9 31 0.008848167 ubox
9 32 0.070595632 ubox
9 58 0.027963496 ubox
10 15 0.896448903 ubox
10 21 0.005007459 ubox
10 26 0.004333025 ubox
10 55 0.008358808 ubox
10 57 0.026605615 ubox
11 20 0.004938462 ubox
11 25 0.004253898 ubox
11 54 0.008970130 ubox
12 29 0.063817262 ubox
12 30 0.029073636 ubox
12 32 0.018294497 ubox
13 28 0.062245276 ubox
13 29 0.026756804 ubox
13 30 0.009003522 ubox
13 31 0.019697239 ubox
13 51 0.025259809 ubox
14 28 0.027329275 ubox
14 29 0.015213206 ubox
14 30 0.019703429 ubox
14 50 0.023553488 ubox
15 23 0.014201808 ubox
15 28 0.015279458 ubox
15 29 0.019636554 ubox
15 46 0.061008938 ubox
15 50 0.033737303 ubox
16 22 0.015318643 ubox
16 25 0.094124355 ubox
16 45 0.061373636 ubox
16 49 0.035375506 ubox
17 21 0.015369626 ubox
17 24 0.121902583 ubox
17 34 0.373056022 ubox
17 44 0.061329428 ubox
17 47 0.023481701 ubox
17 48 0.033549129 ubox
18 23 0.121639238 ubox
18 33 0.378222251 ubox
18 43 0.060965510 ubox
18 46 0.026040857 ubox
18 60 0.006188389 ubox
19 32 0.378270077 ubox
19 42 0.045781252 ubox
19 59 0.005968675 ubox
19 60 0.003166849 ubox
20 30 0.011057613 ubox
20 31 0.378051797 ubox
20 41 0.021066240 ubox
20 51 0.012539383 ubox
20 58 0.005411554 ubox
20 60 0.004090579 ubox
20 61 0.022661477 ubox
21 29 0.025524130 ubox
21 30 0.377402023 ubox
21 41 0.004562412 ubox
21 50 0.014183280 ubox
21 59 0.006704034 ubox
21 60 0.030305356 ubox
22 28 0.034175457 ubox
22 29 0.372275529 ubox
22 46 0.026683604 ubox
22 58 0.006614786 ubox
22 59 0.007673404 ubox
23 27 0.039390225 ubox
23 44 0.387394036 ubox
23 45 0.016817647 ubox
23 47 0.022089974 ubox
23 57 0.006478015 ubox
24 43 0.385682712 ubox
24 46 0.023932199 ubox
24 59 0.003427628 ubox
24 60 0.247249320 ubox
25 42 0.047566543 ubox
25 43 0.074133495 ubox
25 51 0.006928960 ubox
25 59 0.030887811 ubox
25 60 0.652328263 ubox
25 61 0.084443068 ubox
26 41 0.033687106 ubox
26 42 0.394996935 ubox
26 50 0.005711598 ubox
26 58 0.022075902 ubox
26 59 0.825402012 ubox
26 60 0.074680476 ubox
27 41 0.398524032 ubox
27 50 0.045084145 ubox
27 58 0.827960772 ubox
27 59 0.052944148 ubox
28 36 0.007175184 ubox
28 40 0.400547016 ubox
28 49 0.045719819 ubox
28 57 0.829932705 ubox
29 35 0.007182872 ubox
29 39 0.400555777 ubox
29 48 0.045878335 ubox
29 56 0.829955076 ubox
30 34 0.007067040 ubox
30 38 0.400553452 ubox
30 47 0.045754331 ubox
30 55 0.829943801 ubox
31 37 0.399943628 ubox
31 45 0.004432507 ubox
31 49 0.019260124 ubox
31 54 0.829255790 ubox
32 36 0.391141074 ubox
32 44 0.004511070 ubox
32 45 0.248341948 ubox
32 48 0.030857981 ubox
32 49 0.004444545 ubox
32 53 0.791833751 ubox
33 44 0.603164941 ubox
33 47 0.031491183 ubox
33 48 0.005111611 ubox
33 52 0.570629737 ubox
34 42 0.023436017 ubox
34 43 0.787386143 ubox
34 46 0.031298337 ubox
35 41 0.023491118 ubox
35 42 0.787693006 ubox
35 43 0.041212176 ubox
36 41 0.786352660 ubox
36 42 0.041494628 ubox
36 43 0.005060403 ubox
37 41 0.037540198 ubox
37 42 0.004672082 ubox
37 51 0.188306109 ubox
37 61 0.356370369 ubox
38 50 0.186049293 ubox
38 60 0.385299970 ubox
39 59 0.385434823 ubox
40 46 0.012692154 ubox
40 50 0.169696346 ubox
40 58 0.385431092 ubox
41 45 0.007902390 ubox
41 48 0.174347813 ubox
41 49 0.188545056 ubox
41 54 0.004182465 ubox
41 56 0.004497105 ubox
41 57 0.385377427 ubox
42 47 0.174441541 ubox
42 48 0.191583979 ubox
42 49 0.007910715 ubox
42 53 0.008970423 ubox
42 55 0.006293645 ubox
42 56 0.385260559 ubox
43 47 0.188514202 ubox
43 48 0.008694138 ubox
43 52 0.011917545 ubox
43 53 0.004257893 ubox
43 54 0.006000373 ubox
43 55 0.381854123 ubox
43 62 0.006431935 ubox
47 59 0.012848788 ubox
47 60 0.388776008 ubox
48 58 0.012821317 ubox
48 59 0.390161525 ubox
48 60 0.004355538 ubox
49 58 0.389838170 ubox
49 59 0.003720200 ubox
50 57 0.387805510 ubox
52 59 0.031109730 ubox
52 60 0.031630813 ubox
53 58 0.031155110 ubox
53 59 0.031751547 ubox
53 60 0.004420340 ubox
54 58 0.028606264 ubox
54 59 0.004078907 ubox
54 61 0.003472128 ubox
55 60 0.003737343 ubox
4 20 0.9500000 lbox
5 19 0.9500000 lbox
6 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
25 60 0.9500000 lbox
26 59 0.9500000 lbox
27 58 0.9500000 lbox
28 57 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
31 54 0.9500000 lbox
32 53 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
