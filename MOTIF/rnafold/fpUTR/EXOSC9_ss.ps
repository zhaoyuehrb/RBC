%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACGUAAUUUUCCUGCGCCUCGGGGCGAGCAGCGGCGCGCAAGGAAAGAUCGGGUUCCGUUUUUCCCGCGGAUUCUGGUGCCUGUGGGGCCGGUGACCCAACACC\
) } def
/len { sequence length } bind def

/coor [
[77.32525635 457.76531982]
[62.24460220 457.92221069]
[47.59891129 454.32296753]
[34.30882263 447.19384766]
[23.20977020 436.98297119]
[14.99944496 424.33221436]
[10.19395542 410.03683472]
[9.09537792 394.99542236]
[11.77276993 380.15353394]
[18.05783081 366.44409180]
[27.55547333 354.72888184]
[39.66867065 345.74438477]
[53.63597107 340.05532837]
[68.57938385 338.01937866]
[70.30487823 323.11895752]
[71.81546021 308.19519043]
[73.11083221 293.25125122]
[74.40620422 278.30728149]
[71.80902100 271.26495361]
[75.96033478 262.95343018]
[77.68582153 248.05299377]
[79.41130829 233.15255737]
[81.13679504 218.25213623]
[82.86228943 203.35171509]
[84.58777618 188.45127869]
[86.09836578 173.52754211]
[87.39373779 158.58358765]
[88.68910980 143.63961792]
[89.98448181 128.69564819]
[91.27985382 113.75169373]
[84.29772949 104.31147003]
[85.48018646 92.62944031]
[94.21239471 84.77982330]
[95.93788147 69.87940216]
[97.66337585 54.97897339]
[85.09294128 43.77112198]
[81.65843964 27.45248032]
[88.50783539 12.42928410]
[102.79080200 4.48077679]
[104.08617401 -10.46318531]
[105.38154602 -25.40714836]
[106.67691803 -40.35110855]
[104.31903076 -45.35229492]
[104.23380280 -50.24732208]
[105.97098541 -54.15278244]
[108.78464508 -56.51081848]
[111.36571503 -71.28708649]
[113.94677734 -86.06335449]
[116.52784729 -100.83962250]
[119.10890961 -115.61589050]
[121.68997955 -130.39215088]
[124.27104187 -145.16842651]
[122.65348053 -154.31712341]
[127.14529419 -160.33071899]
[130.15110779 -175.02645874]
[133.15692139 -189.72221375]
[130.40719604 -206.45169067]
[145.72166443 -213.72514343]
[156.95034790 -201.02264404]
[147.85267639 -186.71640015]
[144.84686279 -172.02064514]
[141.84103394 -157.32490540]
[139.04731750 -142.58735657]
[136.46624756 -127.81108856]
[133.88517761 -113.03482056]
[131.30410767 -98.25855255]
[128.72305298 -83.48228455]
[126.14198303 -68.70601654]
[123.56091309 -53.92975235]
[121.62088013 -39.05573654]
[120.32550812 -24.11177635]
[119.03013611 -9.16781330]
[117.73476410 5.77614880]
[128.64414978 13.61667538]
[134.26458740 25.93872643]
[133.01373291 39.53339767]
[125.11431885 50.80105972]
[112.56379700 56.70446396]
[110.83831024 71.60488892]
[109.11282349 86.50531769]
[116.20064545 101.63983917]
[106.22381592 115.04706573]
[104.92844391 129.99102783]
[103.63307190 144.93499756]
[102.33769989 159.87895203]
[101.04232788 174.82292175]
[103.44390869 183.79774475]
[99.48820496 190.17677307]
[97.76271057 205.07719421]
[96.03722382 219.97763062]
[94.31173706 234.87805176]
[92.58624268 249.77847290]
[90.86075592 264.67889404]
[89.35016632 279.60266113]
[88.05479431 294.54660034]
[86.75942230 309.49057007]
[89.16100311 318.46539307]
[85.20529938 324.84442139]
[83.47981262 339.74487305]
[97.56245422 345.14208984]
[109.85994720 353.87261963]
[119.59926605 365.38769531]
[126.16819000 378.96340942]
[129.15379333 393.74639893]
[128.36839294 408.80740356]
[123.86135101 423.19967651]
[115.91600037 436.01849365]
[105.03178406 446.45806885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 99]
[15 98]
[16 96]
[17 95]
[18 94]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[26 86]
[27 85]
[28 84]
[29 83]
[30 82]
[33 80]
[34 79]
[35 78]
[39 73]
[40 72]
[41 71]
[42 70]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[54 62]
[55 61]
[56 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
