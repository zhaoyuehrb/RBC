%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCACCUCGAUGCGGUGCCGGGCUGCUGCGUGAUGGGGCUGCGGAGCGGCGCCCUGCGGCUCGCGGCGGCCGCUGCUCGCGCUGAGGUGCGUCGGUGCCCGGCCCCCCGCGCCCCCGCGCGCCGCGGCUCCUGUUGACCCGGUCCGCCCGUCGGUCUGCAGCGCGGCUGAGGAAACUUGGCUGUAACUUCAAAAGAAGAUUUGAUUCUUUAUUUCUGGACUGCAUAUAUAUAUAUAACAAGGCCAUUAAA\
) } def
/len { sequence length } bind def

/coor [
[36.63114548 415.83843994]
[31.12281418 401.85076904]
[27.92972946 387.16061401]
[27.13459587 372.14849854]
[28.75800896 357.20324707]
[32.75791931 342.71197510]
[39.03071976 329.05004883]
[47.41393280 316.57135010]
[57.69040680 305.59909058]
[69.59395599 296.41751099]
[82.81626129 289.26440430]
[97.01482391 284.32507324]
[94.42028809 269.55114746]
[91.82575989 254.77725220]
[89.23122406 240.00334167]
[86.63669586 225.22943115]
[84.04216003 210.45552063]
[81.44763184 195.68161011]
[77.20674896 189.65361023]
[78.91379547 180.70822144]
[76.50291443 165.90324402]
[63.68194580 75.06131744]
[49.54803085 70.03812408]
[35.41411972 65.01493073]
[21.28020477 59.99173355]
[7.14629078 54.96854019]
[-6.98762274 49.94534683]
[-21.12153625 44.92214966]
[-36.71596527 47.59130859]
[-46.11730957 36.03865051]
[-60.25122452 31.01545715]
[-74.38513947 25.99226189]
[-88.51905060 20.96906853]
[-102.65296936 15.94587421]
[-116.79164124 22.48312950]
[-131.05387878 17.18755341]
[-137.19902039 3.66820312]
[-151.33293152 -1.35499108]
[-165.46684265 -6.37818527]
[-179.60076904 -11.40137959]
[-193.73468018 -16.42457390]
[-202.84115601 -16.34706497]
[-208.01223755 -21.59888649]
[-222.08270264 -26.79719543]
[-236.15315247 -31.99550247]
[-250.92706299 -34.59003448]
[-265.92675781 -34.49690628]
[-280.92648315 -34.40377426]
[-295.92617798 -34.31064606]
[-310.92590332 -34.21751404]
[-325.92559814 -34.12438583]
[-340.92532349 -34.03125763]
[-355.92501831 -33.93812561]
[-370.92388916 -33.75187302]
[-385.92126465 -33.47249603]
[-400.91665649 -33.10001373]
[-415.90942383 -32.63443756]
[-430.90219116 -32.16886139]
[-445.89495850 -31.70328522]
[-460.88772583 -31.23770905]
[-476.53158569 -24.70266151]
[-487.14187622 -37.92604446]
[-477.37249756 -51.78228760]
[-461.35330200 -46.23048019]
[-446.36053467 -46.69606018]
[-431.36776733 -47.16163635]
[-416.37500000 -47.62721252]
[-401.38223267 -48.09278870]
[-394.81204224 -51.43262863]
[-386.20065308 -48.46989441]
[-371.20324707 -48.74927139]
[-364.59210205 -52.00727081]
[-356.01815796 -48.93783951]
[-341.01846313 -49.03096771]
[-326.01873779 -49.12409592]
[-311.01904297 -49.21722794]
[-296.01931763 -49.31035614]
[-281.01962280 -49.40348434]
[-266.01989746 -49.49661636]
[-251.02018738 -49.58974457]
[-248.24713135 -56.55825806]
[-242.70103455 -70.49528503]
[-239.92797852 -77.46379852]
[-250.76254272 -87.83743286]
[-261.59710693 -98.21105957]
[-272.43167114 -108.58468628]
[-280.77029419 -112.24545288]
[-283.33535767 -119.15502930]
[-294.04028320 -129.66239929]
[-304.74520874 -140.16975403]
[-315.45010376 -150.67712402]
[-326.15502930 -161.18449402]
[-342.16076660 -164.75503540]
[-346.81259155 -180.48056030]
[-335.32516479 -192.18400574]
[-319.51571655 -187.82585144]
[-315.64767456 -171.88940430]
[-304.94274902 -161.38204956]
[-294.23782349 -150.87467957]
[-283.53289795 -140.36730957]
[-272.82800293 -129.85995483]
[-262.05804443 -119.41925812]
[-251.22348022 -109.04562378]
[-240.38891602 -98.67199707]
[-229.55435181 -88.29836273]
[-224.14727783 -78.36312866]
[-221.95452881 -68.36555481]
[-222.70887756 -59.18007660]
[-225.92750549 -51.55559921]
[-230.95483398 -46.06595230]
[-216.88438416 -40.86764526]
[-202.81393433 -35.66933823]
[-188.71148682 -30.55848694]
[-174.57757568 -25.53529358]
[-160.44364929 -20.51209831]
[-146.30973816 -15.48890495]
[-132.17582703 -10.46571064]
[-118.87707520 -17.07469749]
[-104.47171783 -12.18180752]
[-97.62976837 1.81196022]
[-83.49585724 6.83515453]
[-69.36194611 11.85834885]
[-55.22803116 16.88154221]
[-41.09411621 21.90473747]
[-26.51064110 18.87628555]
[-16.09834290 30.78823662]
[-1.96442866 35.81143188]
[12.16948509 40.83462524]
[26.30339813 45.85781860]
[40.43731308 50.88101578]
[54.57122803 55.90420914]
[68.70513916 60.92740250]
[82.80759430 55.81655121]
[90.44161224 42.90447235]
[98.07563019 29.99239540]
[105.70964813 17.08031654]
[106.07272339 1.26327729]
[119.21038055 -5.75464582]
[126.84439850 -18.66672325]
[134.47842407 -31.57880211]
[142.11244202 -44.49087906]
[149.58554077 -57.49675751]
[156.89656067 -70.59442139]
[164.20759583 -83.69208527]
[161.23223877 -99.45682526]
[171.81126404 -111.51766968]
[187.82933044 -110.62257385]
[196.99874878 -97.45818329]
[192.28553772 -82.12308502]
[177.30525208 -76.38105774]
[169.99423218 -63.28339386]
[162.68319702 -50.18572617]
[163.09220886 -45.45195770]
[160.55036926 -40.40695953]
[155.02452087 -36.85686111]
[147.39050293 -23.94478416]
[139.75648499 -11.03270626]
[132.12246704 1.87937236]
[132.30541992 16.77285385]
[118.62172699 24.71433449]
[110.98770905 37.62641525]
[103.35369110 50.53849030]
[95.71967316 63.45056915]
[105.33017731 74.96830750]
[114.93981171 86.48503113]
[129.01026917 81.28672028]
[143.08071899 76.08840942]
[157.15116882 70.89010620]
[171.22161865 65.69179535]
[185.29206848 60.49348450]
[199.36251831 55.29517746]
[213.43296814 50.09687042]
[227.50341797 44.89855957]
[237.56192017 31.94639969]
[253.76899719 34.44898987]
[259.45217896 49.83188248]
[248.76512146 62.27047729]
[232.70173645 58.96901321]
[218.63127136 64.16732025]
[204.56082153 69.36563110]
[190.49037170 74.56393433]
[176.41992188 79.76224518]
[162.34947205 84.96055603]
[148.27902222 90.15885925]
[134.20857239 95.35717010]
[120.13812256 100.55548096]
[120.09156036 108.05533600]
[135.09126282 108.14846039]
[150.09097290 108.24159241]
[165.09068298 108.33472443]
[180.09039307 108.42808533]
[179.99681091 123.42779541]
[164.99755859 123.33443451]
[149.99784851 123.24130249]
[134.99813843 123.14817810]
[119.99842834 123.05504608]
[119.95185852 130.55490112]
[133.95668030 135.92752075]
[147.96150208 141.30014038]
[161.96632385 146.67276001]
[175.97113037 152.04537964]
[190.30393982 145.38607788]
[205.11871338 150.89045715]
[211.62611389 165.29286194]
[205.96540833 180.04859924]
[191.49501038 186.40336609]
[176.79994202 180.58697510]
[170.59851074 166.05020142]
[156.59370422 160.67758179]
[142.58888245 155.30496216]
[128.58406067 149.93234253]
[114.57923889 144.55972290]
[108.76140594 149.29287720]
[118.47602081 160.72206116]
[127.68949890 172.55894470]
[116.05357361 182.02496338]
[106.33937836 170.59596252]
[97.12574005 158.75920105]
[91.30789948 163.49235535]
[93.71878815 178.29734802]
[96.22154236 193.08708191]
[98.81607056 207.86099243]
[101.41060638 222.63490295]
[104.00513458 237.40881348]
[106.59967041 252.18272400]
[109.19419861 266.95663452]
[111.78872681 281.73052979]
[126.82064819 281.53652954]
[141.68901062 283.75650024]
[156.00866699 288.33285522]
[169.40873718 295.14712524]
[181.54211426 304.02279663]
[192.09451294 314.72994995]
[200.79258728 326.99124146]
[207.41107178 340.48910522]
[211.77848816 354.87387085]
[213.78173828 369.77297974]
[213.36892700 384.80047607]
[210.55075073 399.56713867]
[205.40020752 413.69046021]
[198.05068970 426.80459595]
[188.69258118 438.56988525]
[177.56828308 448.68157959]
[164.96594238 456.87774658]
[151.21199036 462.94607544]
[136.66267395 466.72943115]
[121.69487000 468.12976074]
[106.69627380 467.11080933]
[92.05538177 463.69897461]
[78.15143585 457.98266602]
[65.34458160 450.10989380]
[53.96654129 440.28457642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 227]
[13 226]
[14 225]
[15 224]
[16 223]
[17 222]
[18 221]
[20 220]
[21 219]
[22 132]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[30 124]
[31 123]
[32 122]
[33 121]
[34 120]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
[43 112]
[44 111]
[45 110]
[46 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 73]
[54 71]
[55 70]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[83 105]
[84 104]
[85 103]
[86 102]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[133 163]
[134 162]
[135 161]
[136 160]
[138 158]
[139 157]
[140 156]
[141 155]
[142 152]
[143 151]
[144 150]
[165 186]
[166 185]
[167 184]
[168 183]
[169 182]
[170 181]
[171 180]
[172 179]
[173 178]
[197 212]
[198 211]
[199 210]
[200 209]
[201 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
