%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCAGCGGUGUCGGAGAAAGAGACUGGAGAGCAAAGUGGACCUGUUGCUGCAGCCUCUGGUGAGUCGGCCCCGUCCCCGCUCUCCAGCACGCAGCCCAGGCCGAGGCCCUUCGGCAACCCGCCCCGCGCUCGGACCCAGCCACUCUGGAGUCUGCCGGCCUCGCGGACCUUUUCUCUGUCGCUCGUGUUUCCGGGCGGAUGGCGCUGAGGAACGCUUUAGAGCCGAAGUUCCGAAGACCUGGAAGAGGGCAGG\
CGUGAGCAACC\
) } def
/len { sequence length } bind def

/coor [
[299.82760620 347.61514282]
[314.31561279 351.49606323]
[305.55606079 339.31945801]
[296.79647827 327.14285278]
[288.03692627 314.96621704]
[279.27734375 302.78961182]
[270.51779175 290.61300659]
[261.75823975 278.43637085]
[252.99865723 266.25976562]
[239.28535461 260.44644165]
[237.50740051 244.72546387]
[228.74783325 232.54884338]
[219.98826599 220.37222290]
[211.22869873 208.19560242]
[201.10026550 197.13148499]
[189.74304199 187.33283997]
[178.38580322 177.53421021]
[167.02856445 167.73556519]
[155.67134094 157.93693542]
[144.31410217 148.13830566]
[132.95687866 138.33966064]
[121.59963989 128.54103088]
[107.81511688 136.82070923]
[91.01485443 138.45314026]
[74.38751221 132.44601440]
[61.37849426 119.32146454]
[54.98132324 101.13377380]
[57.07038116 81.16196442]
[42.14533615 79.66426849]
[27.22029495 78.16657257]
[12.29525280 76.66886902]
[-2.20850110 82.98960876]
[-14.09962940 74.02019501]
[-29.02467155 72.52249908]
[-36.55874252 81.66625214]
[-47.45354462 86.00824738]
[-58.97417068 84.58251190]
[-68.28778839 77.85566711]
[-73.16023254 67.58345032]
[-88.04590607 65.73497772]
[-102.93157196 63.88649750]
[-111.79864502 65.93018341]
[-117.98112488 61.92770004]
[-132.84400940 59.90420914]
[-147.70690918 57.88071442]
[-162.56979370 55.85722351]
[-173.26960754 63.01973724]
[-185.58865356 61.05023575]
[-193.02784729 51.53878021]
[-207.86590576 49.34054947]
[-222.70394897 47.14232254]
[-237.54200745 44.94409180]
[-252.38006592 42.74586487]
[-259.85067749 52.72002411]
[-270.78311157 58.54972076]
[-283.08416748 59.18803024]
[-294.42779541 54.57543945]
[-302.69491577 45.63959122]
[-306.36920166 34.10941315]
[-321.15142822 31.56264877]
[-335.93365479 29.01588440]
[-350.71585083 26.46912003]
[-365.62933350 31.75102997]
[-376.85815430 21.96517372]
[-391.64038086 19.41840935]
[-406.42260742 16.87164307]
[-415.37600708 18.49589348]
[-421.36334229 14.20696926]
[-436.11456299 11.48645210]
[-450.86578369 8.76593590]
[-462.01882935 19.55431366]
[-477.38778687 21.69335365]
[-491.06292725 14.36055374]
[-497.78591919 0.37552416]
[-494.97161865 -14.88420582]
[-483.70217896 -25.55095863]
[-468.31094360 -27.52314949]
[-454.71615601 -20.04243279]
[-448.14526367 -5.98529387]
[-433.39404297 -3.26477766]
[-418.64282227 -0.54426122]
[-403.87582397 2.08942509]
[-389.09362793 4.63619041]
[-374.31140137 7.18295574]
[-360.45523071 1.71888292]
[-348.16909790 11.68690014]
[-333.38687134 14.23366547]
[-318.60467529 16.78043175]
[-303.82244873 19.32719612]
[-291.72314453 6.42673922]
[-274.14251709 3.37041450]
[-258.11849976 11.57426071]
[-250.18182373 27.90781212]
[-235.34378052 30.10604095]
[-220.50572205 32.30427170]
[-205.66767883 34.50249863]
[-190.82962036 36.70072937]
[-174.86149597 29.38677216]
[-160.54629517 40.99433517]
[-145.68341064 43.01782608]
[-130.82052612 45.04131699]
[-115.95763397 47.06481171]
[-101.08309937 49.00082779]
[-86.19742584 50.84930420]
[-71.31175995 52.69778061]
[-57.54051971 40.59963608]
[-38.98415756 42.47635269]
[-27.52697372 57.59745407]
[-12.60193062 59.09515381]
[0.83428419 52.66729355]
[13.79295158 61.74382782]
[28.71799469 63.24152756]
[43.64303589 64.73922729]
[58.56808090 66.23692322]
[67.95980072 54.54095840]
[63.27421570 40.29156494]
[58.58863449 26.04216576]
[44.97443390 17.55493546]
[43.26490021 1.60322571]
[54.77144241 -9.57617664]
[70.66722107 -7.40739155]
[78.75836182 6.44587564]
[72.83802795 21.35658264]
[77.52361298 35.60597992]
[82.20919800 49.85537720]
[97.20919800 49.85537720]
[101.89477539 35.60597992]
[106.58036041 21.35658264]
[111.26594543 7.10718632]
[115.69931793 -7.22268486]
[119.87909698 -21.62856674]
[124.05888367 -36.03444672]
[128.06887817 -50.48851013]
[131.90852356 -64.98875427]
[135.74816895 -79.48899841]
[139.58781433 -93.98924255]
[143.42747498 -108.48948669]
[147.18174744 -123.01206970]
[150.85052490 -137.55648804]
[154.51928711 -152.10090637]
[158.18806458 -166.64532471]
[151.23069763 -181.10127258]
[158.32447815 -195.49078369]
[174.02767944 -198.77543640]
[186.29414368 -188.43553162]
[185.71409607 -172.40296936]
[172.73248291 -162.97654724]
[169.06370544 -148.43212891]
[165.39494324 -133.88771057]
[161.72616577 -119.34329987]
[163.13255310 -112.11383820]
[157.92771912 -104.64984131]
[154.08805847 -90.14959717]
[150.24841309 -75.64935303]
[146.40876770 -61.14910889]
[142.56912231 -46.64886093]
[144.13392639 -42.16933823]
[142.92523193 -36.66011810]
[138.46476746 -31.85466576]
[134.28497314 -17.44878387]
[130.10519409 -3.04290295]
[131.44982910 0.18190700]
[131.31961060 4.21240854]
[129.35519409 8.35755444]
[125.51534271 11.79276943]
[120.82975769 26.04216576]
[116.14417267 40.29156494]
[111.45859528 54.54095840]
[128.51948547 66.35124969]
[137.88522339 83.46359253]
[138.52659607 101.71935272]
[131.39828491 117.18379211]
[142.75550842 126.98242950]
[154.11274719 136.78106689]
[165.46997070 146.57969666]
[176.82720947 156.37834167]
[188.18443298 166.17697144]
[199.54167175 175.97561646]
[210.89891052 185.77424622]
[213.48141479 179.91297913]
[218.33583069 174.68130493]
[225.26205444 170.78472900]
[239.86895752 167.37321472]
[254.47586060 163.96170044]
[269.08276367 160.55018616]
[283.68966675 157.13867188]
[298.29656982 153.72715759]
[306.42343140 140.17247009]
[321.77468872 136.41551208]
[335.24270630 144.68524170]
[338.83712769 160.07534790]
[330.42547607 173.45516968]
[314.99822998 176.88670349]
[301.70806885 168.33406067]
[287.10116577 171.74557495]
[272.49429321 175.15708923]
[257.88739014 178.56860352]
[243.28047180 181.98011780]
[228.67356873 185.39163208]
[223.40531921 199.43605042]
[232.16488647 211.61265564]
[240.92445374 223.78927612]
[249.68402100 235.96589661]
[264.02386475 242.65016174]
[265.17526245 257.50018311]
[273.93484497 269.67681885]
[282.69439697 281.85342407]
[291.45397949 294.03002930]
[300.21353149 306.20666504]
[308.97311401 318.38327026]
[317.73266602 330.55990601]
[326.49224854 342.73651123]
[337.47927856 348.27526855]
[339.58572388 359.04248047]
[349.58328247 370.22500610]
[359.58084106 381.40753174]
[369.57836914 392.59005737]
[379.57592773 403.77261353]
[389.57348633 414.95513916]
[393.66873169 416.14816284]
[396.86553955 418.34716797]
[398.95989990 421.15249634]
[399.89627075 424.13922119]
[399.76312256 426.90701294]
[409.22348022 438.54751587]
[418.68383789 450.18801880]
[432.33413696 448.41943359]
[444.97885132 453.57745361]
[453.36352539 464.21929932]
[455.38726807 477.50607300]
[450.62826538 489.95959473]
[459.95101929 501.71060181]
[469.27377319 513.46160889]
[478.59652710 525.21264648]
[487.91925049 536.96368408]
[503.64639282 538.52355957]
[513.59936523 550.80010986]
[511.87326050 566.50988770]
[499.49218750 576.33245850]
[483.80154419 574.44042969]
[474.11038208 561.95617676]
[476.16824341 546.28643799]
[466.84548950 534.53540039]
[457.52276611 522.78436279]
[448.20001221 511.03335571]
[438.87725830 499.28234863]
[422.49081421 500.49627686]
[408.47589111 491.60424805]
[402.47479248 475.95095825]
[407.04333496 459.64837646]
[397.58297729 448.00787354]
[388.12258911 436.36737061]
[378.39096069 424.95269775]
[368.39340210 413.77014160]
[358.39584351 402.58761597]
[348.39831543 391.40509033]
[338.40075684 380.22256470]
[328.40319824 369.04003906]
[329.06344604 384.02548218]
[322.43399048 397.48098755]
[310.14953613 406.08865356]
[295.23916626 407.72604370]
[281.37948608 401.98937988]
[271.98800659 390.29324341]
[269.38046265 375.52160645]
[274.19985962 361.31692505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 212]
[3 211]
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[11 203]
[12 202]
[13 201]
[14 200]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[28 114]
[29 113]
[30 112]
[31 111]
[33 109]
[34 108]
[39 105]
[40 104]
[41 103]
[43 102]
[44 101]
[45 100]
[46 99]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[59 89]
[60 88]
[61 87]
[62 86]
[64 84]
[65 83]
[66 82]
[68 81]
[69 80]
[70 79]
[115 125]
[116 124]
[117 123]
[126 168]
[127 167]
[128 166]
[129 165]
[130 161]
[131 160]
[132 159]
[133 156]
[134 155]
[135 154]
[136 153]
[137 152]
[138 150]
[139 149]
[140 148]
[141 147]
[182 199]
[183 198]
[184 197]
[185 196]
[186 195]
[187 194]
[214 258]
[215 257]
[216 256]
[217 255]
[218 254]
[219 253]
[224 252]
[225 251]
[226 250]
[231 246]
[232 245]
[233 244]
[234 243]
[235 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
