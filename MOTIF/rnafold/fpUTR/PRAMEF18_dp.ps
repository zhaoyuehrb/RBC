%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRAMEF18)
} def

/sequence { (\
CUGAUAAGUUUGUCUUUUCUCUGGAUUUGUUUUCUUGCAGAUUUAUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.083850679 ubox
1 24 0.019792427 ubox
1 40 0.062244137 ubox
2 7 0.084184505 ubox
2 12 0.019718757 ubox
2 23 0.020238380 ubox
2 39 0.062613410 ubox
2 45 0.004265989 ubox
2 47 0.010794180 ubox
3 10 0.009852614 ubox
3 11 0.031602888 ubox
3 14 0.588419072 ubox
3 16 0.005948989 ubox
3 17 0.013071695 ubox
3 18 0.034261208 ubox
3 19 0.697010581 ubox
3 21 0.131042090 ubox
3 22 0.004270525 ubox
3 31 0.014915258 ubox
3 34 0.006942099 ubox
3 38 0.062621762 ubox
3 46 0.009986436 ubox
4 9 0.009291272 ubox
4 10 0.032274085 ubox
4 13 0.589401787 ubox
4 15 0.005653376 ubox
4 16 0.012692767 ubox
4 17 0.036846467 ubox
4 18 0.686868985 ubox
4 20 0.128604065 ubox
4 30 0.016999572 ubox
4 33 0.006874934 ubox
4 46 0.211823879 ubox
5 12 0.586326521 ubox
5 29 0.017154601 ubox
5 37 0.060782323 ubox
5 45 0.218520112 ubox
6 11 0.536103906 ubox
6 16 0.613847386 ubox
6 17 0.048280106 ubox
6 18 0.067523581 ubox
6 28 0.017185679 ubox
6 31 0.005457213 ubox
6 32 0.007239905 ubox
6 33 0.006216280 ubox
6 36 0.061096445 ubox
6 44 0.219537238 ubox
7 15 0.713442529 ubox
7 16 0.049642458 ubox
7 17 0.071798143 ubox
7 18 0.016807896 ubox
7 20 0.031620246 ubox
7 22 0.017328559 ubox
7 27 0.017174072 ubox
7 30 0.006156362 ubox
7 31 0.007441435 ubox
7 32 0.006668824 ubox
7 35 0.061146556 ubox
7 43 0.219403924 ubox
8 14 0.713724354 ubox
8 15 0.040482109 ubox
8 16 0.069204949 ubox
8 17 0.019535805 ubox
8 19 0.033692080 ubox
8 21 0.019637492 ubox
8 26 0.016777358 ubox
8 30 0.006877945 ubox
8 31 0.006605781 ubox
8 34 0.061083284 ubox
8 42 0.219698569 ubox
9 25 0.016658635 ubox
9 29 0.007973637 ubox
9 41 0.219809072 ubox
10 24 0.016198557 ubox
10 40 0.219485655 ubox
11 23 0.014641757 ubox
11 29 0.010907965 ubox
11 39 0.219132268 ubox
12 22 0.010165066 ubox
12 26 0.061230893 ubox
12 28 0.003570000 ubox
12 30 0.006378413 ubox
12 38 0.218743512 ubox
12 42 0.003377362 ubox
12 46 0.004363574 ubox
13 24 0.013980400 ubox
13 25 0.071505284 ubox
13 29 0.003447030 ubox
13 37 0.208866229 ubox
13 41 0.003584895 ubox
13 45 0.003704666 ubox
14 23 0.035666781 ubox
14 24 0.080958950 ubox
14 40 0.003641192 ubox
15 23 0.080055705 ubox
15 24 0.006210502 ubox
15 25 0.012355079 ubox
15 39 0.003445927 ubox
16 23 0.011360087 ubox
16 24 0.013134368 ubox
16 25 0.013562723 ubox
17 23 0.014041609 ubox
17 24 0.013578016 ubox
17 25 0.027926095 ubox
18 23 0.010460102 ubox
18 24 0.028629739 ubox
18 25 0.032229548 ubox
18 41 0.009508248 ubox
19 23 0.028882216 ubox
19 24 0.032819348 ubox
19 40 0.010186517 ubox
20 39 0.009637689 ubox
20 41 0.038183562 ubox
21 40 0.040847116 ubox
22 29 0.015055756 ubox
22 37 0.004109848 ubox
22 39 0.040825930 ubox
22 45 0.857865030 ubox
22 47 0.013527059 ubox
23 28 0.013729303 ubox
23 31 0.006228832 ubox
23 32 0.011249736 ubox
23 33 0.014250723 ubox
23 34 0.127348248 ubox
23 35 0.120435518 ubox
23 36 0.014137074 ubox
23 38 0.039924323 ubox
23 43 0.011167515 ubox
23 44 0.936903541 ubox
23 46 0.013835103 ubox
24 30 0.005713250 ubox
24 31 0.011752939 ubox
24 32 0.017668530 ubox
24 33 0.127685737 ubox
24 34 0.127191100 ubox
24 35 0.004739781 ubox
24 36 0.008917106 ubox
24 42 0.007890962 ubox
24 43 0.966260665 ubox
24 44 0.021762325 ubox
25 30 0.010405483 ubox
25 31 0.018495317 ubox
25 32 0.126080972 ubox
25 33 0.125823904 ubox
25 35 0.008811712 ubox
25 42 0.970875746 ubox
25 43 0.016209341 ubox
26 41 0.971567149 ubox
27 40 0.971174191 ubox
28 39 0.971542548 ubox
29 36 0.007696297 ubox
29 38 0.972473219 ubox
30 37 0.962736539 ubox
33 41 0.007274453 ubox
34 40 0.007792112 ubox
35 39 0.007024524 ubox
38 47 0.004111440 ubox
39 46 0.004104386 ubox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
showpage
end
%%EOF
