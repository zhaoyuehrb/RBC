%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRPS1L1)
} def

/sequence { (\
AUUAGAGUCUGUGCUUCACUUCCGUUCCAGCCUCAGCGGCAGCUGGAUCGCUCGACGGAGUGCCUCUGGUAGUUGGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.010777109 ubox
1 12 0.032563580 ubox
1 61 0.003454520 ubox
1 70 0.516943316 ubox
1 73 0.011498655 ubox
2 7 0.011299336 ubox
2 11 0.032521747 ubox
2 60 0.003478455 ubox
2 69 0.538546772 ubox
2 72 0.012136350 ubox
2 76 0.010276364 ubox
2 80 0.024373105 ubox
2 81 0.016327155 ubox
3 11 0.059194450 ubox
3 13 0.016744703 ubox
3 35 0.003848012 ubox
3 68 0.557462574 ubox
3 71 0.009719058 ubox
3 75 0.013811107 ubox
3 79 0.025617304 ubox
3 80 0.021401726 ubox
4 10 0.067648812 ubox
4 12 0.018361693 ubox
4 15 0.060279288 ubox
4 16 0.020001785 ubox
4 20 0.005951301 ubox
4 65 0.028181641 ubox
4 67 0.645592019 ubox
4 70 0.007476903 ubox
4 74 0.014090645 ubox
5 9 0.067006922 ubox
5 14 0.065108514 ubox
5 15 0.015476297 ubox
5 16 0.530749281 ubox
5 17 0.077314262 ubox
5 19 0.006788401 ubox
5 21 0.010730295 ubox
5 22 0.003966899 ubox
5 34 0.024182655 ubox
5 64 0.030189274 ubox
5 66 0.700552941 ubox
5 73 0.013454370 ubox
5 74 0.004022303 ubox
6 15 0.564477966 ubox
6 16 0.062014279 ubox
6 20 0.015194091 ubox
6 21 0.003875803 ubox
6 33 0.024234847 ubox
6 65 0.700467173 ubox
6 67 0.019682992 ubox
6 73 0.004275383 ubox
6 74 0.006681065 ubox
7 14 0.570394980 ubox
7 15 0.035281152 ubox
7 19 0.016405283 ubox
7 20 0.003670414 ubox
7 32 0.024171887 ubox
7 37 0.004884191 ubox
7 56 0.011978821 ubox
7 63 0.057170354 ubox
7 64 0.696492983 ubox
7 66 0.022897683 ubox
7 70 0.003917570 ubox
7 73 0.006819045 ubox
7 77 0.194841724 ubox
8 13 0.533678842 ubox
8 18 0.014793150 ubox
8 55 0.012020089 ubox
8 59 0.006053551 ubox
8 62 0.048528042 ubox
8 69 0.004476920 ubox
8 76 0.194688688 ubox
9 30 0.024287990 ubox
9 36 0.006107402 ubox
9 54 0.012011056 ubox
9 58 0.006128863 ubox
9 60 0.021955242 ubox
9 68 0.005636912 ubox
9 69 0.014707282 ubox
9 72 0.013927181 ubox
9 75 0.193050591 ubox
9 76 0.017063598 ubox
9 81 0.032314470 ubox
10 18 0.030696332 ubox
10 29 0.024338757 ubox
10 35 0.006193938 ubox
10 57 0.006108722 ubox
10 59 0.016825559 ubox
10 62 0.010986878 ubox
10 68 0.014477790 ubox
10 71 0.013854271 ubox
10 75 0.016680574 ubox
10 79 0.071934110 ubox
10 80 0.030118261 ubox
11 17 0.038254295 ubox
11 19 0.137187216 ubox
11 28 0.024278795 ubox
11 34 0.006200397 ubox
11 51 0.011926079 ubox
11 56 0.006052897 ubox
11 61 0.006492877 ubox
11 63 0.390943093 ubox
11 67 0.011110158 ubox
11 70 0.012094203 ubox
11 73 0.065444731 ubox
11 74 0.013352312 ubox
11 77 0.005156094 ubox
11 78 0.078693166 ubox
12 18 0.137393194 ubox
12 50 0.011935244 ubox
12 55 0.005851722 ubox
12 62 0.370176688 ubox
12 69 0.008508710 ubox
12 71 0.186252377 ubox
12 72 0.008208965 ubox
12 76 0.005042499 ubox
12 79 0.008132245 ubox
13 17 0.135442870 ubox
13 25 0.022730657 ubox
13 31 0.007350933 ubox
13 49 0.011956900 ubox
13 51 0.004380055 ubox
13 61 0.362442032 ubox
13 63 0.287764224 ubox
13 67 0.006679986 ubox
13 70 0.193766858 ubox
13 73 0.027618481 ubox
13 77 0.085220874 ubox
13 78 0.007299738 ubox
14 24 0.022821196 ubox
14 30 0.007358599 ubox
14 50 0.004359145 ubox
14 60 0.361303401 ubox
14 62 0.258109586 ubox
14 69 0.194102708 ubox
14 72 0.028147794 ubox
14 76 0.085368890 ubox
14 81 0.014754048 ubox
15 29 0.007025218 ubox
15 47 0.012958069 ubox
15 59 0.275217557 ubox
15 60 0.011479642 ubox
15 68 0.187863881 ubox
15 69 0.004223404 ubox
15 71 0.026417505 ubox
15 75 0.081544014 ubox
15 80 0.014629565 ubox
16 46 0.013274662 ubox
16 55 0.003729389 ubox
16 58 0.205969155 ubox
16 59 0.018096555 ubox
16 68 0.015121102 ubox
16 69 0.011729100 ubox
16 71 0.004613742 ubox
16 75 0.007786256 ubox
16 76 0.003515966 ubox
16 79 0.009412488 ubox
16 80 0.003644924 ubox
17 45 0.013388991 ubox
17 54 0.004292961 ubox
17 57 0.201295269 ubox
17 58 0.018514393 ubox
17 62 0.849894263 ubox
17 68 0.009565799 ubox
17 75 0.008544753 ubox
18 25 0.011715516 ubox
18 44 0.013322780 ubox
18 61 0.900391916 ubox
18 67 0.007948022 ubox
18 70 0.009347476 ubox
18 73 0.057817595 ubox
18 74 0.007304635 ubox
19 24 0.012374778 ubox
19 42 0.013209327 ubox
19 58 0.004185851 ubox
19 60 0.897375923 ubox
19 69 0.009630602 ubox
19 72 0.058714004 ubox
19 81 0.005681282 ubox
20 41 0.012984261 ubox
20 55 0.050438891 ubox
20 57 0.003463869 ubox
20 59 0.636927237 ubox
20 60 0.203789477 ubox
20 68 0.008746387 ubox
20 71 0.042169363 ubox
20 80 0.005389362 ubox
21 47 0.006208177 ubox
21 54 0.051286685 ubox
21 55 0.101625615 ubox
21 58 0.091859750 ubox
21 59 0.713948048 ubox
21 79 0.003682784 ubox
22 39 0.014292528 ubox
22 46 0.006552179 ubox
22 54 0.102230853 ubox
22 57 0.069448031 ubox
22 58 0.972533008 ubox
22 69 0.033955604 ubox
23 38 0.014322060 ubox
23 45 0.006550044 ubox
23 50 0.196173962 ubox
23 54 0.010620625 ubox
23 57 0.975204439 ubox
23 68 0.033989048 ubox
24 37 0.014327962 ubox
24 43 0.006827071 ubox
24 48 0.005095705 ubox
24 49 0.196766221 ubox
24 51 0.027928795 ubox
24 53 0.011800009 ubox
24 56 0.977096961 ubox
24 67 0.024846576 ubox
25 36 0.014291064 ubox
25 42 0.006823897 ubox
25 47 0.006127401 ubox
25 50 0.027197831 ubox
25 55 0.826409669 ubox
26 35 0.013709245 ubox
26 41 0.006664282 ubox
26 47 0.202902149 ubox
26 54 0.620851529 ubox
26 55 0.519172085 ubox
27 39 0.005849794 ubox
27 46 0.209689137 ubox
27 54 0.732989282 ubox
27 58 0.003182569 ubox
27 76 0.012817801 ubox
28 38 0.005831625 ubox
28 45 0.209689990 ubox
28 57 0.003182826 ubox
28 75 0.012996978 ubox
29 44 0.209420782 ubox
29 52 0.956687990 ubox
29 74 0.012984246 ubox
30 37 0.006102657 ubox
30 40 0.056084833 ubox
30 43 0.202225482 ubox
30 51 0.976301082 ubox
30 73 0.012946163 ubox
31 36 0.006114475 ubox
31 39 0.062921122 ubox
31 42 0.197535651 ubox
31 46 0.004230407 ubox
31 50 0.975841134 ubox
31 72 0.012896685 ubox
32 38 0.070039876 ubox
32 39 0.098032522 ubox
32 42 0.029718463 ubox
32 45 0.004381033 ubox
32 46 0.157585965 ubox
33 38 0.089999448 ubox
33 39 0.052116659 ubox
33 41 0.040441897 ubox
33 45 0.024418167 ubox
33 46 0.926438786 ubox
33 47 0.127596713 ubox
33 69 0.011528417 ubox
34 38 0.055744191 ubox
34 45 0.972068701 ubox
34 46 0.093859088 ubox
34 68 0.012776095 ubox
35 44 0.976558228 ubox
35 67 0.012816738 ubox
36 43 0.977174857 ubox
36 66 0.012828416 ubox
36 77 0.010449256 ubox
37 42 0.976798677 ubox
37 45 0.004388085 ubox
37 75 0.012842315 ubox
37 76 0.008680333 ubox
38 44 0.004381818 ubox
38 64 0.012875188 ubox
38 74 0.014172783 ubox
38 78 0.019177038 ubox
39 43 0.004291581 ubox
39 63 0.012880330 ubox
39 73 0.015380262 ubox
39 77 0.019191996 ubox
40 62 0.012834260 ubox
40 72 0.015363583 ubox
40 75 0.011838451 ubox
40 76 0.015221031 ubox
41 52 0.007232534 ubox
41 61 0.011864727 ubox
41 74 0.016599545 ubox
42 51 0.007771697 ubox
42 70 0.018271727 ubox
42 73 0.016652196 ubox
43 50 0.007770087 ubox
43 58 0.010675019 ubox
43 60 0.005340162 ubox
43 69 0.019213441 ubox
43 72 0.016561644 ubox
44 57 0.010681865 ubox
44 59 0.005282355 ubox
44 68 0.019319353 ubox
44 71 0.016235812 ubox
45 56 0.010624045 ubox
45 64 0.005686503 ubox
45 67 0.023020018 ubox
45 70 0.009637335 ubox
46 53 0.004554584 ubox
46 63 0.005742772 ubox
46 66 0.024644437 ubox
47 52 0.004205675 ubox
47 65 0.024195603 ubox
48 55 0.007928779 ubox
49 54 0.009024814 ubox
49 62 0.043865891 ubox
50 56 0.003305172 ubox
50 61 0.046244327 ubox
51 60 0.046807601 ubox
52 59 0.046821168 ubox
53 58 0.046815619 ubox
56 68 0.003706854 ubox
57 64 0.005867092 ubox
57 67 0.007079884 ubox
57 78 0.004810791 ubox
58 63 0.005854682 ubox
58 66 0.008405845 ubox
58 74 0.005538568 ubox
58 77 0.004768093 ubox
59 65 0.008599133 ubox
59 67 0.003529151 ubox
59 73 0.015515111 ubox
59 74 0.003218470 ubox
60 64 0.008651433 ubox
60 66 0.006466437 ubox
60 73 0.004686924 ubox
61 71 0.061715888 ubox
61 79 0.023165621 ubox
62 70 0.073860603 ubox
62 73 0.003310297 ubox
62 77 0.131264338 ubox
62 78 0.019582813 ubox
63 69 0.080761471 ubox
63 72 0.005407704 ubox
63 76 0.139445618 ubox
64 68 0.080248724 ubox
64 72 0.008722733 ubox
64 75 0.139456357 ubox
64 76 0.004430028 ubox
64 81 0.250126107 ubox
65 71 0.008637821 ubox
65 76 0.009498575 ubox
65 80 0.252145856 ubox
66 72 0.070241276 ubox
66 75 0.013747013 ubox
66 76 0.005883486 ubox
66 81 0.141740777 ubox
67 71 0.063362834 ubox
67 75 0.005961978 ubox
67 79 0.661494237 ubox
67 80 0.103798359 ubox
68 74 0.006860506 ubox
68 78 0.783578569 ubox
69 73 0.004873706 ubox
69 77 0.784742370 ubox
70 76 0.775524752 ubox
73 80 0.022760960 ubox
73 81 0.024062131 ubox
74 79 0.023193954 ubox
74 80 0.036637814 ubox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
22 58 0.9500000 lbox
23 57 0.9500000 lbox
24 56 0.9500000 lbox
25 55 0.9500000 lbox
26 54 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
67 79 0.9500000 lbox
68 78 0.9500000 lbox
69 77 0.9500000 lbox
70 76 0.9500000 lbox
showpage
end
%%EOF
