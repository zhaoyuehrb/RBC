%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NOA1)
} def

/sequence { (\
CUCGGGUCAAAUGCGCGCCUCGGACCCUAGUGCGCGUGCGCGCUGGUGGCUCCGCCCCUUUGGAGCUACUUCCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.022258965 ubox
1 30 0.132347175 ubox
1 46 0.006105952 ubox
2 22 0.019681858 ubox
2 23 0.031196438 ubox
2 24 0.005361512 ubox
2 29 0.133728083 ubox
2 45 0.006923013 ubox
2 46 0.019552761 ubox
3 15 0.003944422 ubox
3 17 0.019145843 ubox
3 22 0.038939754 ubox
3 23 0.005211607 ubox
3 40 0.003211635 ubox
3 42 0.206024023 ubox
3 45 0.168079246 ubox
3 54 0.027596827 ubox
4 12 0.009845900 ubox
4 14 0.004466488 ubox
4 16 0.020099161 ubox
4 19 0.009266131 ubox
4 20 0.026173909 ubox
4 21 0.039098587 ubox
4 26 0.003188048 ubox
4 27 0.541421428 ubox
4 28 0.005027590 ubox
4 39 0.003312325 ubox
4 41 0.216327288 ubox
4 44 0.175504010 ubox
4 52 0.021987812 ubox
4 53 0.031733577 ubox
4 57 0.005725102 ubox
4 58 0.004311115 ubox
4 71 0.005408480 ubox
4 72 0.035983306 ubox
4 73 0.496607492 ubox
4 74 0.339601189 ubox
4 75 0.128361795 ubox
5 18 0.009271765 ubox
5 19 0.045140303 ubox
5 20 0.015104985 ubox
5 26 0.542290161 ubox
5 27 0.004520405 ubox
5 43 0.175506923 ubox
5 44 0.083972980 ubox
5 51 0.022377300 ubox
5 52 0.031617155 ubox
5 56 0.005745108 ubox
5 57 0.004301647 ubox
5 70 0.005004226 ubox
5 71 0.031096395 ubox
5 72 0.496583562 ubox
5 73 0.366200643 ubox
5 74 0.122708514 ubox
5 75 0.012762425 ubox
6 12 0.028807103 ubox
6 14 0.020345323 ubox
6 16 0.008045954 ubox
6 18 0.045248683 ubox
6 19 0.014675292 ubox
6 25 0.542310769 ubox
6 26 0.003316395 ubox
6 39 0.216592237 ubox
6 41 0.137270611 ubox
6 43 0.091062801 ubox
6 50 0.038774389 ubox
6 55 0.005734611 ubox
6 56 0.004249566 ubox
6 69 0.004653832 ubox
6 70 0.016532751 ubox
6 71 0.363724182 ubox
6 72 0.363262894 ubox
6 73 0.122365469 ubox
6 74 0.010254724 ubox
7 11 0.029387908 ubox
7 13 0.019754785 ubox
7 15 0.007918273 ubox
7 17 0.043983783 ubox
7 23 0.016561044 ubox
7 24 0.541927189 ubox
7 38 0.204566827 ubox
7 40 0.134795103 ubox
7 42 0.087289463 ubox
7 46 0.012896632 ubox
7 49 0.038778720 ubox
7 54 0.003528851 ubox
7 68 0.003670461 ubox
8 22 0.031492359 ubox
8 23 0.540718410 ubox
8 38 0.072498295 ubox
8 45 0.127840244 ubox
8 48 0.039850407 ubox
9 37 0.056631675 ubox
9 44 0.126990621 ubox
9 47 0.039559980 ubox
9 71 0.030003533 ubox
10 70 0.022294604 ubox
10 71 0.021514331 ubox
11 37 0.256148532 ubox
11 70 0.013008450 ubox
12 22 0.078174823 ubox
12 36 0.262925058 ubox
12 38 0.032062993 ubox
12 40 0.024736264 ubox
12 42 0.258535138 ubox
12 45 0.015753272 ubox
13 21 0.079975484 ubox
13 33 0.003555122 ubox
13 35 0.265344963 ubox
13 37 0.100725240 ubox
13 39 0.034565381 ubox
13 41 0.359120154 ubox
13 43 0.700004349 ubox
13 44 0.007624658 ubox
14 22 0.177853942 ubox
14 32 0.003558095 ubox
14 34 0.265355240 ubox
14 36 0.102179829 ubox
14 38 0.034556178 ubox
14 40 0.359300979 ubox
14 42 0.701233141 ubox
15 21 0.172770104 ubox
15 31 0.003567950 ubox
15 33 0.265356503 ubox
15 35 0.102256381 ubox
15 37 0.034423500 ubox
15 39 0.359316697 ubox
15 41 0.701280612 ubox
16 22 0.096392934 ubox
16 30 0.003571566 ubox
16 32 0.265352263 ubox
16 34 0.102259901 ubox
16 36 0.034448001 ubox
16 38 0.359312425 ubox
16 40 0.701279486 ubox
17 21 0.090459594 ubox
17 31 0.264849878 ubox
17 33 0.102273183 ubox
17 35 0.034493391 ubox
17 37 0.359029749 ubox
17 39 0.701250948 ubox
18 30 0.255319535 ubox
18 32 0.102252674 ubox
18 34 0.032177300 ubox
18 36 0.358603873 ubox
18 38 0.700071039 ubox
19 30 0.122078991 ubox
20 29 0.138495151 ubox
21 32 0.015728865 ubox
21 34 0.773172429 ubox
21 36 0.111771054 ubox
21 54 0.009523217 ubox
22 28 0.144500278 ubox
22 31 0.015755923 ubox
22 33 0.780093596 ubox
22 35 0.108775745 ubox
22 53 0.011109740 ubox
22 73 0.024626440 ubox
23 27 0.143037539 ubox
23 52 0.011131342 ubox
23 72 0.024727417 ubox
24 31 0.778360019 ubox
24 37 0.003511027 ubox
24 47 0.004367408 ubox
24 51 0.011095124 ubox
24 71 0.022838173 ubox
25 30 0.777156520 ubox
25 36 0.003523434 ubox
25 46 0.004856091 ubox
25 49 0.011443277 ubox
26 45 0.005274210 ubox
26 46 0.007108435 ubox
26 48 0.011939832 ubox
27 45 0.011515018 ubox
27 46 0.029264062 ubox
28 45 0.354878974 ubox
29 44 0.500102241 ubox
29 74 0.007124164 ubox
30 41 0.030692912 ubox
30 43 0.513238761 ubox
30 73 0.007608500 ubox
31 40 0.030763526 ubox
31 42 0.513143318 ubox
31 45 0.004731180 ubox
32 39 0.030928507 ubox
32 41 0.513434816 ubox
32 43 0.179358949 ubox
33 38 0.030892076 ubox
33 40 0.513417489 ubox
33 42 0.179698488 ubox
34 39 0.500124528 ubox
34 41 0.179716699 ubox
34 43 0.010258970 ubox
35 40 0.179460724 ubox
35 42 0.010278224 ubox
36 41 0.010066522 ubox
36 43 0.003907266 ubox
37 42 0.003756926 ubox
39 45 0.003660087 ubox
45 70 0.838813292 ubox
45 71 0.035650261 ubox
45 72 0.023498927 ubox
45 73 0.042994066 ubox
45 74 0.005500645 ubox
45 75 0.004562952 ubox
46 69 0.996416047 ubox
46 70 0.008530538 ubox
46 71 0.006711933 ubox
46 72 0.037155374 ubox
46 73 0.004771439 ubox
47 68 0.998203243 ubox
48 67 0.998590430 ubox
49 66 0.999166738 ubox
50 65 0.999171152 ubox
51 64 0.999030925 ubox
52 63 0.999169452 ubox
53 62 0.999067468 ubox
54 61 0.761170567 ubox
54 66 0.022875178 ubox
55 63 0.003939845 ubox
55 65 0.022992227 ubox
56 62 0.004259317 ubox
56 63 0.019124415 ubox
57 62 0.019079442 ubox
57 63 0.013740160 ubox
58 62 0.013674093 ubox
62 72 0.005375292 ubox
62 73 0.031707978 ubox
63 71 0.005470115 ubox
63 72 0.031761240 ubox
64 70 0.006558641 ubox
64 71 0.030941314 ubox
65 69 0.007315893 ubox
65 70 0.022614023 ubox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
49 66 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
showpage
end
%%EOF
