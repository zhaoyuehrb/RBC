%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS6KA4)
} def

/sequence { (\
GAAGCGCCCGCCCCGGCCGGAGCCGCCAUGUAACCGGCGCCGCCCGGAGCCCGAGCCGCGCGGGCCCCAGCGACCCGCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 11 0.016204312 ubox
4 23 0.003284006 ubox
4 26 0.006422141 ubox
4 40 0.004095604 ubox
4 56 0.267343962 ubox
4 59 0.915379415 ubox
4 61 0.029137594 ubox
4 71 0.036402340 ubox
4 78 0.026175156 ubox
4 82 0.067824701 ubox
5 10 0.016222257 ubox
5 22 0.003285655 ubox
5 25 0.006435960 ubox
5 39 0.004106268 ubox
5 53 0.071344465 ubox
5 55 0.267845313 ubox
5 58 0.916296780 ubox
5 60 0.030040824 ubox
5 70 0.036438503 ubox
5 77 0.026233667 ubox
5 81 0.067913238 ubox
6 17 0.004464461 ubox
6 23 0.004683786 ubox
6 24 0.004843387 ubox
6 38 0.004123007 ubox
6 50 0.005955100 ubox
6 52 0.073466393 ubox
6 56 0.628693847 ubox
6 57 0.673328801 ubox
6 59 0.037385140 ubox
6 65 0.257125879 ubox
6 76 0.024611522 ubox
6 80 0.022255122 ubox
6 82 0.003831408 ubox
7 16 0.004981705 ubox
7 20 0.003423924 ubox
7 22 0.006320842 ubox
7 37 0.004072256 ubox
7 49 0.006023683 ubox
7 55 0.882658312 ubox
7 58 0.037318481 ubox
7 64 0.258097823 ubox
7 81 0.003802504 ubox
8 15 0.004936670 ubox
8 16 0.005853760 ubox
8 19 0.003426005 ubox
8 20 0.006604807 ubox
8 36 0.004014987 ubox
8 47 0.006173158 ubox
8 63 0.258114854 ubox
9 15 0.005977598 ubox
9 19 0.006605915 ubox
9 46 0.006179598 ubox
9 53 0.701721720 ubox
9 62 0.258111044 ubox
9 72 0.024668623 ubox
9 77 0.004908292 ubox
10 14 0.005645299 ubox
10 17 0.005350471 ubox
10 18 0.005161298 ubox
10 45 0.006154570 ubox
10 50 0.889424569 ubox
10 52 0.362299300 ubox
10 56 0.056558060 ubox
10 59 0.005071623 ubox
10 61 0.258063960 ubox
10 71 0.024882280 ubox
10 76 0.004665248 ubox
10 78 0.005186335 ubox
10 82 0.003856495 ubox
11 16 0.006712836 ubox
11 47 0.006877276 ubox
11 49 0.930033547 ubox
11 55 0.056548813 ubox
11 58 0.005034875 ubox
11 60 0.257733665 ubox
11 70 0.024825863 ubox
11 77 0.005175381 ubox
11 81 0.003849729 ubox
12 46 0.006640938 ubox
12 47 0.127094066 ubox
13 46 0.121645777 ubox
13 47 0.956278322 ubox
14 25 0.004902967 ubox
14 46 0.957738654 ubox
14 53 0.053525588 ubox
14 58 0.249867151 ubox
14 81 0.004269006 ubox
15 24 0.006860234 ubox
15 44 0.134356701 ubox
15 45 0.956126630 ubox
15 51 0.030206411 ubox
15 52 0.053635280 ubox
15 57 0.251432280 ubox
15 79 0.004694527 ubox
15 80 0.004445491 ubox
15 83 0.003311430 ubox
16 23 0.006866523 ubox
16 38 0.009856493 ubox
16 43 0.150123284 ubox
16 44 0.952634717 ubox
16 50 0.030586642 ubox
16 51 0.053354699 ubox
16 56 0.251424857 ubox
16 78 0.004724833 ubox
16 79 0.004411940 ubox
16 82 0.003336178 ubox
17 22 0.006844447 ubox
17 37 0.009930767 ubox
17 42 0.116311631 ubox
17 47 0.064312373 ubox
17 49 0.022998337 ubox
17 55 0.250435465 ubox
17 77 0.004276826 ubox
18 36 0.009955808 ubox
18 42 0.956888710 ubox
18 46 0.072192052 ubox
18 53 0.247800291 ubox
18 77 0.004930072 ubox
18 81 0.003847874 ubox
19 35 0.010021331 ubox
19 41 0.965767299 ubox
19 44 0.006865103 ubox
19 45 0.072588765 ubox
19 51 0.011900592 ubox
19 52 0.247696171 ubox
19 75 0.003730306 ubox
19 76 0.005353532 ubox
19 80 0.004541933 ubox
20 34 0.010012660 ubox
20 40 0.963911278 ubox
20 43 0.007142001 ubox
20 44 0.072588306 ubox
20 50 0.015321778 ubox
20 51 0.247453016 ubox
20 74 0.003727844 ubox
20 75 0.005337212 ubox
20 79 0.004541755 ubox
22 31 0.009838224 ubox
22 38 0.931260741 ubox
22 40 0.034748983 ubox
22 43 0.073033127 ubox
22 50 0.242955720 ubox
22 78 0.004431158 ubox
23 30 0.009899051 ubox
23 37 0.933117062 ubox
23 39 0.029266783 ubox
23 42 0.072736927 ubox
23 47 0.018197258 ubox
23 49 0.242496939 ubox
23 77 0.004420237 ubox
24 30 0.011222238 ubox
24 36 0.933060434 ubox
24 39 0.348732814 ubox
24 46 0.018563904 ubox
24 72 0.004044176 ubox
25 29 0.007349647 ubox
25 31 0.047406428 ubox
25 35 0.907850464 ubox
25 38 0.355132772 ubox
25 43 0.004562466 ubox
25 45 0.016146097 ubox
25 50 0.004818305 ubox
25 71 0.004064183 ubox
26 30 0.078304567 ubox
26 37 0.355185994 ubox
26 42 0.004845872 ubox
26 47 0.010660113 ubox
26 49 0.004821432 ubox
26 70 0.004054185 ubox
27 36 0.355102224 ubox
27 46 0.010600822 ubox
29 36 0.004077215 ubox
29 39 0.005613457 ubox
29 69 0.003297664 ubox
30 35 0.026183692 ubox
30 38 0.006361191 ubox
30 40 0.003447733 ubox
30 43 0.003325363 ubox
30 45 0.003686589 ubox
30 50 0.008357460 ubox
30 68 0.003550036 ubox
31 37 0.006289637 ubox
31 39 0.003413948 ubox
31 49 0.008320501 ubox
34 47 0.050073401 ubox
34 64 0.004038979 ubox
35 46 0.050182527 ubox
35 63 0.004046560 ubox
36 44 0.024510612 ubox
36 45 0.047335695 ubox
36 79 0.006884384 ubox
37 43 0.029728192 ubox
37 44 0.043980378 ubox
37 61 0.004306613 ubox
37 78 0.007060210 ubox
38 42 0.033897014 ubox
38 60 0.004407266 ubox
38 77 0.007215884 ubox
39 50 0.009678572 ubox
39 59 0.011911856 ubox
39 76 0.007204369 ubox
40 47 0.196893435 ubox
40 49 0.009696115 ubox
40 58 0.011919875 ubox
41 46 0.197275180 ubox
41 72 0.010899035 ubox
42 50 0.026290060 ubox
42 56 0.012324202 ubox
42 71 0.010980271 ubox
43 49 0.026311231 ubox
43 55 0.012379095 ubox
43 70 0.010971315 ubox
45 53 0.027634976 ubox
45 58 0.003195413 ubox
46 52 0.028314798 ubox
46 57 0.003392990 ubox
46 67 0.010513990 ubox
46 68 0.009027152 ubox
47 51 0.027881392 ubox
47 56 0.003389979 ubox
47 66 0.010613126 ubox
47 67 0.009157336 ubox
49 56 0.041480543 ubox
49 59 0.041250363 ubox
49 65 0.031291602 ubox
50 55 0.041494093 ubox
50 58 0.041235104 ubox
50 64 0.031357432 ubox
51 63 0.031368742 ubox
52 58 0.011818213 ubox
52 62 0.031364149 ubox
53 57 0.012140591 ubox
53 59 0.007186357 ubox
53 61 0.030866504 ubox
55 61 0.005193984 ubox
55 65 0.003679160 ubox
55 82 0.030186029 ubox
56 60 0.005481259 ubox
56 64 0.003686905 ubox
56 81 0.022879074 ubox
57 63 0.003685841 ubox
57 81 0.076035206 ubox
58 78 0.005223944 ubox
58 80 0.081124772 ubox
58 82 0.039457054 ubox
59 77 0.005232334 ubox
59 81 0.039348194 ubox
60 76 0.005214906 ubox
60 78 0.115642226 ubox
60 80 0.016347362 ubox
60 82 0.955967495 ubox
61 77 0.116902107 ubox
61 81 0.957899175 ubox
62 75 0.005359359 ubox
62 76 0.116967392 ubox
62 80 0.958402375 ubox
63 74 0.005543616 ubox
63 75 0.116957156 ubox
63 79 0.958420660 ubox
63 83 0.006189110 ubox
64 71 0.017267699 ubox
64 74 0.115432617 ubox
64 78 0.958286972 ubox
64 82 0.006324806 ubox
65 70 0.023097890 ubox
65 77 0.956797575 ubox
65 81 0.006353442 ubox
70 78 0.130416484 ubox
70 82 0.217257277 ubox
71 77 0.131446645 ubox
71 81 0.217766065 ubox
72 76 0.126420451 ubox
72 80 0.216668804 ubox
4 59 0.9500000 lbox
5 58 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
10 50 0.9500000 lbox
11 49 0.9500000 lbox
13 47 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
60 82 0.9500000 lbox
61 81 0.9500000 lbox
62 80 0.9500000 lbox
63 79 0.9500000 lbox
64 78 0.9500000 lbox
65 77 0.9500000 lbox
showpage
end
%%EOF
