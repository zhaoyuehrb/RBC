%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOC149373)
} def

/sequence { (\
CAGGAAUCGAAGCUUCACUGAGAGUUUCACACCAUCAUUGGGCACAAAGGAGGUUGUGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.804619647 ubox
1 40 0.009040049 ubox
1 56 0.008641079 ubox
1 58 0.031718773 ubox
2 14 0.022715430 ubox
2 15 0.034934362 ubox
2 19 0.807985934 ubox
2 26 0.012340921 ubox
2 27 0.008145023 ubox
2 39 0.009027539 ubox
2 55 0.008271273 ubox
2 57 0.029916945 ubox
3 13 0.024620482 ubox
3 14 0.043091589 ubox
3 16 0.064392386 ubox
3 18 0.807044235 ubox
3 19 0.006905483 ubox
3 25 0.015760519 ubox
3 26 0.018578460 ubox
3 27 0.024854307 ubox
3 28 0.020620333 ubox
3 33 0.039315631 ubox
3 38 0.007026110 ubox
3 54 0.004809298 ubox
4 13 0.046150235 ubox
4 14 0.003754713 ubox
4 15 0.069484689 ubox
4 16 0.779853717 ubox
4 18 0.008276504 ubox
4 25 0.021536475 ubox
4 26 0.058658907 ubox
4 27 0.030034869 ubox
4 28 0.006882111 ubox
4 32 0.039315707 ubox
4 36 0.007426214 ubox
4 55 0.027095391 ubox
5 14 0.075067957 ubox
5 15 0.775788136 ubox
5 25 0.060522759 ubox
5 26 0.038693604 ubox
5 27 0.007698798 ubox
5 35 0.007243562 ubox
5 54 0.019931507 ubox
5 55 0.008745695 ubox
6 14 0.718222590 ubox
6 25 0.038840811 ubox
6 26 0.008199021 ubox
6 54 0.010414094 ubox
7 21 0.033878316 ubox
7 23 0.143764291 ubox
7 24 0.022522791 ubox
7 51 0.011958665 ubox
7 53 0.011679048 ubox
7 59 0.043580237 ubox
8 20 0.035838718 ubox
8 22 0.152923191 ubox
8 50 0.011998940 ubox
8 52 0.011659490 ubox
8 56 0.003193469 ubox
8 58 0.046404827 ubox
9 15 0.012986352 ubox
9 16 0.051629413 ubox
9 19 0.028246798 ubox
9 26 0.036883367 ubox
9 27 0.020488490 ubox
9 28 0.345740990 ubox
9 57 0.017497488 ubox
10 14 0.013514052 ubox
10 15 0.048526651 ubox
10 25 0.040971771 ubox
10 26 0.027881214 ubox
10 27 0.387147858 ubox
11 19 0.151939344 ubox
11 25 0.025490424 ubox
11 26 0.473300605 ubox
11 27 0.006616150 ubox
11 55 0.018977590 ubox
12 18 0.152092445 ubox
12 25 0.531926622 ubox
12 26 0.011699751 ubox
12 54 0.019864448 ubox
13 22 0.069823072 ubox
13 24 0.536586715 ubox
13 53 0.019934279 ubox
14 21 0.069051495 ubox
14 22 0.077516631 ubox
14 23 0.517397176 ubox
14 24 0.050241685 ubox
14 52 0.019912462 ubox
14 60 0.003695874 ubox
15 20 0.062080927 ubox
15 21 0.123178926 ubox
15 22 0.471775274 ubox
15 23 0.133421009 ubox
15 51 0.019910737 ubox
15 59 0.005319644 ubox
16 20 0.137678612 ubox
16 22 0.178612281 ubox
16 40 0.003331865 ubox
16 50 0.019894566 ubox
16 58 0.005474511 ubox
17 25 0.046393118 ubox
17 39 0.003321069 ubox
17 57 0.005459666 ubox
18 24 0.049582091 ubox
18 49 0.018139656 ubox
18 56 0.005430278 ubox
19 23 0.044706406 ubox
19 29 0.007428130 ubox
19 37 0.004038739 ubox
19 48 0.017707224 ubox
20 26 0.003224695 ubox
20 28 0.009950858 ubox
20 36 0.004517436 ubox
21 25 0.008504429 ubox
21 26 0.010854560 ubox
21 27 0.010616165 ubox
21 35 0.004508949 ubox
22 26 0.009122927 ubox
22 28 0.005388200 ubox
23 27 0.004999866 ubox
24 30 0.003405252 ubox
24 32 0.004329330 ubox
24 43 0.012282960 ubox
24 45 0.007606280 ubox
25 31 0.004159597 ubox
25 42 0.012003015 ubox
25 44 0.007448759 ubox
25 59 0.007349039 ubox
25 60 0.039533455 ubox
26 41 0.004053543 ubox
26 42 0.003991187 ubox
26 58 0.005865904 ubox
26 59 0.038969425 ubox
26 60 0.628052766 ubox
27 41 0.004620748 ubox
27 42 0.003272806 ubox
27 58 0.007439983 ubox
27 59 0.896120584 ubox
28 40 0.005266597 ubox
28 56 0.009177924 ubox
28 58 0.937353822 ubox
29 39 0.004834750 ubox
29 55 0.014326851 ubox
29 57 0.968501798 ubox
30 40 0.005483852 ubox
30 56 0.971595431 ubox
30 58 0.026028237 ubox
31 39 0.005141534 ubox
31 54 0.692213654 ubox
31 55 0.685964126 ubox
31 57 0.023716076 ubox
32 41 0.199901151 ubox
32 42 0.021608712 ubox
32 50 0.003958514 ubox
32 53 0.976904237 ubox
32 56 0.021415971 ubox
33 40 0.200388243 ubox
33 41 0.020812695 ubox
33 49 0.003956905 ubox
33 52 0.976653469 ubox
34 39 0.193409942 ubox
34 54 0.015653016 ubox
35 42 0.005493584 ubox
35 50 0.858089526 ubox
35 51 0.418736902 ubox
35 53 0.015519032 ubox
35 59 0.005103478 ubox
36 41 0.007388146 ubox
36 49 0.875320240 ubox
36 50 0.418725532 ubox
36 52 0.015185854 ubox
36 58 0.005444871 ubox
37 57 0.005399026 ubox
38 47 0.933451111 ubox
38 48 0.080770560 ubox
38 49 0.035850719 ubox
38 50 0.006055640 ubox
38 51 0.004287870 ubox
38 56 0.005109122 ubox
39 46 0.971473496 ubox
39 47 0.075752731 ubox
39 48 0.038473213 ubox
39 49 0.004926917 ubox
39 50 0.004107081 ubox
40 45 0.973958565 ubox
41 55 0.003661886 ubox
42 54 0.005062006 ubox
42 57 0.006704498 ubox
43 53 0.005145605 ubox
43 56 0.006920444 ubox
43 58 0.203909752 ubox
44 54 0.004707913 ubox
44 55 0.005417616 ubox
44 57 0.204606167 ubox
45 53 0.006252353 ubox
45 56 0.204717601 ubox
46 55 0.203473672 ubox
47 54 0.180006418 ubox
47 55 0.012820763 ubox
48 54 0.017707777 ubox
48 55 0.003631779 ubox
49 54 0.007674883 ubox
1 20 0.9500000 lbox
2 19 0.9500000 lbox
3 18 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
30 56 0.9500000 lbox
31 55 0.9500000 lbox
32 53 0.9500000 lbox
33 52 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
