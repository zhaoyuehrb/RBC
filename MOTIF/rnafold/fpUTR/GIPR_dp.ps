%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GIPR)
} def

/sequence { (\
GGCAGCGGUGGCAGGGGCUGCAGGAGCAAGUGACCAGGAGCAGGACUGGGGACAGGCCUGAUCGCCCCUGCACGAACCAGACCCUUCGCCGCCCUCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 78 0.004688243 ubox
1 83 0.003947677 ubox
1 84 0.007228734 ubox
1 90 0.094101718 ubox
1 93 0.665484913 ubox
1 94 0.536614429 ubox
1 95 0.082705632 ubox
1 96 0.327352637 ubox
2 77 0.004676626 ubox
2 82 0.003962644 ubox
2 83 0.007224636 ubox
2 89 0.094175867 ubox
2 92 0.668752021 ubox
2 93 0.533095772 ubox
2 94 0.109465089 ubox
2 95 0.302343399 ubox
3 88 0.093972067 ubox
3 91 0.669270635 ubox
4 85 0.064634732 ubox
4 86 0.043241011 ubox
4 95 0.185762792 ubox
5 84 0.070449014 ubox
5 85 0.041110269 ubox
5 89 0.668041538 ubox
5 92 0.696842931 ubox
5 94 0.200305081 ubox
6 74 0.008023049 ubox
6 88 0.668193824 ubox
6 91 0.699349546 ubox
7 73 0.010710861 ubox
7 78 0.144321070 ubox
7 83 0.108518143 ubox
7 84 0.047848127 ubox
7 85 0.014593453 ubox
7 86 0.006408553 ubox
7 87 0.638283731 ubox
7 90 0.700482042 ubox
7 93 0.229775574 ubox
7 94 0.009376896 ubox
8 73 0.259964086 ubox
8 77 0.153685263 ubox
8 82 0.113347708 ubox
8 83 0.051356095 ubox
8 84 0.031185870 ubox
8 85 0.025168608 ubox
8 86 0.555404442 ubox
8 89 0.700015483 ubox
8 92 0.230050742 ubox
8 93 0.006724866 ubox
8 98 0.004664366 ubox
9 72 0.263291176 ubox
9 74 0.396840429 ubox
9 76 0.131205393 ubox
9 79 0.067851355 ubox
9 81 0.099424223 ubox
9 88 0.656675541 ubox
9 91 0.230045228 ubox
9 97 0.004696373 ubox
10 71 0.187243554 ubox
10 73 0.464700901 ubox
10 78 0.071939211 ubox
10 83 0.096929963 ubox
10 84 0.244975022 ubox
10 85 0.023118423 ubox
10 86 0.006559235 ubox
10 87 0.601943180 ubox
10 90 0.229992309 ubox
10 96 0.004688684 ubox
11 71 0.923752634 ubox
11 77 0.048836714 ubox
11 82 0.066736173 ubox
11 83 0.166555207 ubox
11 84 0.012121168 ubox
11 85 0.003972373 ubox
11 86 0.157975333 ubox
11 89 0.220120843 ubox
12 70 0.964874576 ubox
12 88 0.217214491 ubox
13 69 0.964923624 ubox
13 85 0.139525953 ubox
13 86 0.208806907 ubox
14 68 0.965170276 ubox
14 78 0.008211436 ubox
14 83 0.003559806 ubox
14 84 0.141615926 ubox
14 85 0.217820056 ubox
14 86 0.010445972 ubox
14 87 0.003497619 ubox
15 67 0.965177254 ubox
15 77 0.008219251 ubox
15 78 0.016105446 ubox
15 82 0.003580032 ubox
15 83 0.141500088 ubox
15 84 0.218965560 ubox
15 85 0.006928849 ubox
16 66 0.965177224 ubox
16 77 0.016203628 ubox
16 78 0.011115382 ubox
16 82 0.140487193 ubox
16 83 0.219038279 ubox
16 84 0.006929113 ubox
17 27 0.018291393 ubox
17 31 0.005300798 ubox
17 65 0.965164780 ubox
17 77 0.014446287 ubox
17 82 0.219028440 ubox
17 83 0.006859002 ubox
18 26 0.018360158 ubox
18 30 0.007285337 ubox
18 64 0.960273637 ubox
18 80 0.229830432 ubox
19 25 0.018411012 ubox
19 28 0.153984992 ubox
19 29 0.008796787 ubox
19 32 0.011389612 ubox
19 36 0.005587458 ubox
19 60 0.006109291 ubox
19 64 0.055308745 ubox
19 72 0.187695084 ubox
19 74 0.003976265 ubox
19 79 0.175826671 ubox
20 27 0.166963279 ubox
20 31 0.016716214 ubox
20 35 0.005801469 ubox
20 63 0.258246706 ubox
20 71 0.242595736 ubox
20 78 0.088696526 ubox
21 26 0.166790428 ubox
21 30 0.017058226 ubox
21 32 0.015866476 ubox
21 60 0.656800766 ubox
21 70 0.254822881 ubox
22 31 0.015835785 ubox
22 59 0.657060123 ubox
22 69 0.254795673 ubox
23 35 0.021941493 ubox
23 58 0.646539761 ubox
23 59 0.677257095 ubox
23 63 0.005992059 ubox
23 67 0.009348961 ubox
23 68 0.254687077 ubox
23 78 0.028860414 ubox
24 34 0.021897152 ubox
24 57 0.538486283 ubox
24 58 0.690189347 ubox
24 62 0.005134001 ubox
24 63 0.009171832 ubox
24 66 0.013145956 ubox
24 67 0.254260432 ubox
24 77 0.032666667 ubox
25 59 0.027089331 ubox
25 62 0.009309586 ubox
26 57 0.782196692 ubox
26 58 0.019539592 ubox
26 65 0.233104776 ubox
26 71 0.016097073 ubox
27 56 0.849158086 ubox
27 64 0.233110082 ubox
27 70 0.016102092 ubox
28 69 0.015180281 ubox
29 69 0.003557484 ubox
30 41 0.011017292 ubox
30 53 0.947400962 ubox
30 57 0.003468821 ubox
30 62 0.015384522 ubox
30 65 0.023345614 ubox
30 68 0.004815447 ubox
30 73 0.052787401 ubox
30 77 0.005042197 ubox
31 40 0.012222629 ubox
31 52 0.946449038 ubox
31 54 0.030019656 ubox
31 56 0.003569738 ubox
31 61 0.015700568 ubox
31 64 0.023516686 ubox
31 72 0.052818459 ubox
31 74 0.006668634 ubox
31 76 0.004912368 ubox
32 53 0.030313043 ubox
32 63 0.030618330 ubox
32 71 0.052275903 ubox
32 73 0.008062997 ubox
33 62 0.029283380 ubox
34 49 0.955668199 ubox
34 50 0.015183918 ubox
35 48 0.955844470 ubox
35 49 0.011281737 ubox
35 60 0.023031975 ubox
35 70 0.051585678 ubox
36 47 0.955645434 ubox
36 59 0.022809846 ubox
36 69 0.052172529 ubox
37 46 0.955713166 ubox
37 47 0.006384886 ubox
37 58 0.022434808 ubox
37 63 0.032528721 ubox
37 66 0.024418822 ubox
37 67 0.004943558 ubox
37 68 0.052156329 ubox
38 46 0.011458459 ubox
38 57 0.020702828 ubox
38 58 0.003710911 ubox
38 62 0.028252670 ubox
38 63 0.273724215 ubox
38 65 0.024387930 ubox
38 66 0.005566925 ubox
38 67 0.051754452 ubox
39 62 0.251184667 ubox
40 46 0.003870145 ubox
40 57 0.008979891 ubox
40 65 0.046930777 ubox
40 71 0.004096240 ubox
41 56 0.011686603 ubox
41 60 0.287083514 ubox
41 64 0.041908537 ubox
41 70 0.004104495 ubox
42 59 0.292284816 ubox
42 69 0.004103612 ubox
43 58 0.292500681 ubox
43 63 0.003956248 ubox
43 68 0.004103810 ubox
44 57 0.287145664 ubox
44 62 0.003475689 ubox
44 63 0.008302728 ubox
44 67 0.004085255 ubox
45 62 0.008370102 ubox
46 55 0.288754015 ubox
46 56 0.019757244 ubox
47 54 0.292890119 ubox
47 55 0.013647974 ubox
47 60 0.007130877 ubox
48 53 0.292933831 ubox
48 59 0.009323339 ubox
48 66 0.003986637 ubox
49 58 0.009674402 ubox
49 59 0.003186618 ubox
49 65 0.003993170 ubox
50 57 0.009964192 ubox
50 58 0.013406591 ubox
50 59 0.004176172 ubox
50 63 0.004138402 ubox
51 57 0.013412663 ubox
51 58 0.004375878 ubox
51 62 0.003619119 ubox
51 63 0.010450299 ubox
52 62 0.010401122 ubox
53 60 0.011480867 ubox
54 59 0.010485071 ubox
55 63 0.011407981 ubox
55 66 0.095386663 ubox
56 62 0.009303107 ubox
56 65 0.095616374 ubox
57 64 0.095458160 ubox
62 75 0.011402681 ubox
63 74 0.012175382 ubox
64 71 0.007566996 ubox
64 73 0.011978299 ubox
65 70 0.007595565 ubox
68 80 0.005972773 ubox
69 79 0.006136021 ubox
70 78 0.006365195 ubox
73 88 0.242799670 ubox
74 86 0.064108167 ubox
74 87 0.347695713 ubox
75 85 0.065861678 ubox
75 86 0.356169314 ubox
76 85 0.344825406 ubox
79 85 0.189745942 ubox
79 86 0.083558296 ubox
80 84 0.198933491 ubox
80 85 0.081818697 ubox
80 86 0.079074387 ubox
80 87 0.142061912 ubox
81 85 0.071718344 ubox
81 86 0.132686225 ubox
90 99 0.003483523 ubox
91 98 0.010335939 ubox
1 94 0.9500000 lbox
2 93 0.9500000 lbox
5 92 0.9500000 lbox
6 91 0.9500000 lbox
7 90 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
10 87 0.9500000 lbox
11 71 0.9500000 lbox
12 70 0.9500000 lbox
13 69 0.9500000 lbox
14 68 0.9500000 lbox
15 67 0.9500000 lbox
16 66 0.9500000 lbox
17 65 0.9500000 lbox
18 64 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
26 57 0.9500000 lbox
27 56 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
showpage
end
%%EOF
