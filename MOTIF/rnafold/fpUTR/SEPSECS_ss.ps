%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUACGCCAACUUCCUCCUGGAGCGCCAUCUGAGAAGGUCUGCGCAUGUGCACGAACGAGAAGUGUUUUUUUUGUUUUGUUUUGUUUUGUUUUGUUUUUUGUCCCAAGGCGCUGCCGUACCGUCCAGGCGGCGAGUUGCAUUCUGGUUCCGUCGUGUGUCUGGCGUGUGGAGCUAGUGCUCCCGCUUAUUCGCCACUGUCGCCACCGCUGUC\
) } def
/len { sequence length } bind def

/coor [
[301.54809570 288.31695557]
[294.89459229 282.16171265]
[289.75497437 274.68151855]
[286.38635254 266.24142456]
[284.95932007 257.25476074]
[285.54916382 248.16284180]
[288.13208008 239.41334534]
[275.64477539 231.10269165]
[268.33648682 230.01391602]
[263.03637695 222.57725525]
[250.67239380 214.08418274]
[238.30842590 205.59111023]
[225.94445801 197.09805298]
[213.58049011 188.60498047]
[201.15451050 180.20289612]
[188.66719055 171.89224243]
[173.78509521 171.28198242]
[166.58341980 157.19488525]
[154.09609985 148.88423157]
[141.60879517 140.57357788]
[129.12147522 132.26292419]
[116.63415527 123.95227051]
[104.14684296 115.64161682]
[89.15047455 115.31133270]
[76.30937958 123.06415558]
[63.46828079 130.81697083]
[50.62718201 138.56979370]
[42.10922241 154.89659119]
[24.56263924 154.55270386]
[11.83673382 162.49319458]
[-0.88917148 170.43368530]
[-13.61507607 178.37416077]
[-20.84167480 193.09518433]
[-37.21970367 193.92715454]
[-45.90085220 180.01422119]
[-37.95469666 165.66882324]
[-21.55556488 165.64825439]
[-8.82965946 157.70777893]
[3.89624596 149.76728821]
[16.62215042 141.82679749]
[19.65479088 130.11804199]
[30.19000244 123.39817047]
[42.87436295 125.72869110]
[55.71546173 117.97587585]
[68.55656433 110.22305298]
[81.39765930 102.47023773]
[80.73789978 94.99931335]
[65.79602814 96.31860352]
[64.47696686 81.37671661]
[79.41837311 80.05746460]
[78.75861359 72.58654022]
[64.75753784 67.20417023]
[50.75646591 61.82179642]
[41.62573624 61.66377640]
[36.59032059 56.25627899]
[22.66976929 50.66895676]
[8.74921608 45.08163071]
[-5.17133760 39.49430466]
[-19.09189034 33.90698242]
[-33.01244354 28.31965828]
[-46.93299866 22.73233414]
[-60.85354996 17.14500809]
[-74.77410126 11.55768490]
[-88.69465637 5.97036028]
[-104.84358978 8.82414246]
[-115.18085480 -3.90664506]
[-109.07236481 -19.12565804]
[-92.80200958 -21.17688179]
[-83.10733032 -7.95019341]
[-69.18678284 -2.36286879]
[-55.26622772 3.22445560]
[-41.34567261 8.81177998]
[-27.42511940 14.39910412]
[-13.50456619 19.98642921]
[0.41598681 25.57375336]
[14.33654022 31.16107750]
[28.25709343 36.74840164]
[42.17764664 42.33572769]
[56.13883591 47.82072067]
[70.13990784 53.20309448]
[84.14098358 58.58546448]
[89.89025116 53.76924515]
[80.18359375 42.33329773]
[67.51454926 34.30240250]
[71.18295288 19.75789452]
[86.14533234 18.69618225]
[91.83095551 32.57618332]
[101.38877869 44.13680649]
[107.13803864 39.32058716]
[104.29271698 24.59292030]
[101.44739532 9.86525345]
[98.60207367 -4.86241293]
[95.75675201 -19.59007835]
[92.91143799 -34.31774521]
[90.06611633 -49.04541016]
[75.52370453 -53.98645020]
[65.41220093 -65.54729462]
[62.45154953 -80.61813354]
[67.43814850 -95.14498138]
[79.03062439 -105.22019958]
[94.11067200 -108.13359833]
[108.62181854 -103.10148621]
[118.66065216 -91.47748566]
[121.52676392 -76.38838196]
[116.44919586 -61.89307785]
[104.79377747 -51.89073181]
[107.63909912 -37.16306686]
[110.48442078 -22.43540001]
[113.32974243 -7.70773363]
[116.17506409 7.01993275]
[119.02038574 21.74759865]
[121.86570740 36.47526550]
[136.21279907 32.09797287]
[151.17732239 33.12913895]
[164.78840637 39.43296051]
[175.25349426 50.17921448]
[181.19432068 63.95261765]
[181.82846069 78.93920898]
[177.07241821 93.16524506]
[167.55255127 104.75714111]
[154.52264404 112.18825531]
[139.69873047 114.47988892]
[125.03312683 111.33024597]
[112.45749664 103.15430450]
[124.94480896 111.46495056]
[137.43212891 119.77560425]
[149.91943359 128.08625793]
[162.40675354 136.39691162]
[174.89407349 144.70756531]
[190.66934204 145.91224670]
[196.97784424 159.40492249]
[209.46516418 167.71557617]
[218.34089661 169.86419678]
[222.07354736 176.24101257]
[234.43753052 184.73406982]
[246.80149841 193.22714233]
[259.16546631 201.72021484]
[271.52944946 210.21328735]
[283.95541382 218.61537170]
[296.44271851 226.92602539]
[315.05737305 216.05166626]
[336.54318237 216.09910583]
[354.98507690 226.98205566]
[365.34286499 245.64123535]
[364.82901001 266.90396118]
[378.20410156 273.69421387]
[391.57919312 280.48443604]
[404.95425415 287.27465820]
[419.81311035 282.60006714]
[433.28063965 289.67684937]
[437.64556885 303.87130737]
[451.02066040 310.66152954]
[466.82843018 310.00949097]
[474.67443848 322.67004395]
[488.04953003 329.46026611]
[508.11099243 327.47042847]
[517.94836426 344.11865234]
[531.51702881 350.51333618]
[545.08569336 356.90798950]
[559.80169678 348.56704712]
[576.42449951 350.62152100]
[588.42626953 362.06503296]
[591.21313477 378.24356079]
[604.87420654 384.43835449]
[618.53527832 390.63314819]
[632.19635010 396.82791138]
[637.38653564 396.31680298]
[641.81207275 397.70724487]
[644.87695312 400.39010620]
[646.31311035 403.60800171]
[659.68823242 410.39822388]
[673.06329346 417.18844604]
[686.43835449 423.97866821]
[699.81341553 430.76892090]
[716.15081787 429.34677124]
[725.32812500 442.93756104]
[717.90447998 457.56021118]
[701.51678467 458.17221069]
[693.02319336 444.14398193]
[679.64813232 437.35375977]
[666.27307129 430.56353760]
[652.89794922 423.77328491]
[639.52288818 416.98306274]
[626.00152588 410.48898315]
[612.34045410 404.29418945]
[598.67944336 398.09942627]
[585.01837158 391.90463257]
[574.07409668 399.54873657]
[560.67449951 400.79745483]
[548.30889893 395.21817017]
[540.25085449 384.17050171]
[538.69104004 370.47662354]
[525.12237549 364.08197021]
[511.55371094 357.68731689]
[502.29000854 361.99310303]
[491.96853638 360.45809937]
[484.03146362 353.35015869]
[481.25927734 342.83535767]
[467.88421631 336.04510498]
[453.03311157 337.18283081]
[444.23043823 324.03662109]
[430.85534668 317.24639893]
[416.82031250 322.09960938]
[403.15936279 315.40386963]
[398.16403198 300.64974976]
[384.78894043 293.85949707]
[371.41387939 287.06927490]
[358.03878784 280.27905273]
[351.84167480 286.78033447]
[344.35409546 291.76211548]
[335.94152832 294.97494507]
[327.01602173 296.25595093]
[318.01596069 295.53695679]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 140]
[8 139]
[10 138]
[11 137]
[12 136]
[13 135]
[14 134]
[15 132]
[16 131]
[18 129]
[19 128]
[20 127]
[21 126]
[22 125]
[23 124]
[24 46]
[25 45]
[26 44]
[27 43]
[29 40]
[30 39]
[31 38]
[32 37]
[51 81]
[52 80]
[53 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[145 208]
[146 207]
[147 206]
[148 205]
[151 202]
[152 201]
[154 199]
[155 198]
[157 194]
[158 193]
[159 192]
[163 187]
[164 186]
[165 185]
[166 184]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
