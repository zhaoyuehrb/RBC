%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EID2B)
} def

/sequence { (\
AUGCGCAGGUCUCGCAUACAGCAGUGCAGUGCCGUUAUUCCAGUCUCCGUAGAAACGCUGGGACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.326283624 ubox
1 30 0.012097526 ubox
1 35 0.243763503 ubox
1 38 0.119707872 ubox
2 16 0.349566729 ubox
2 18 0.006332672 ubox
2 20 0.003485842 ubox
2 23 0.006198099 ubox
2 28 0.090959314 ubox
2 29 0.007975542 ubox
2 31 0.009736850 ubox
2 34 0.270009805 ubox
2 37 0.150818797 ubox
2 42 0.027549877 ubox
3 10 0.021777354 ubox
3 15 0.357636497 ubox
3 17 0.008320868 ubox
3 19 0.003842539 ubox
3 22 0.006919804 ubox
3 27 0.101422470 ubox
3 30 0.017486431 ubox
3 32 0.400837402 ubox
3 33 0.284534927 ubox
3 35 0.208438490 ubox
3 36 0.145926730 ubox
3 41 0.040834025 ubox
4 9 0.022904252 ubox
4 14 0.357635184 ubox
4 21 0.006919451 ubox
4 26 0.101442284 ubox
4 29 0.017890791 ubox
4 31 0.409689556 ubox
4 34 0.221946984 ubox
5 13 0.348378471 ubox
5 15 0.025537879 ubox
5 22 0.005091903 ubox
5 25 0.101245712 ubox
5 27 0.026393451 ubox
5 30 0.409287432 ubox
5 32 0.325467417 ubox
5 33 0.148017609 ubox
5 35 0.473987282 ubox
6 14 0.025560099 ubox
6 21 0.005125700 ubox
6 24 0.100821982 ubox
6 26 0.026485581 ubox
6 29 0.408486355 ubox
6 31 0.349694503 ubox
6 34 0.491497313 ubox
7 25 0.026144890 ubox
7 30 0.344526552 ubox
7 36 0.015532553 ubox
7 39 0.004403350 ubox
7 65 0.004051126 ubox
8 33 0.748054046 ubox
8 39 0.008361402 ubox
8 40 0.004793759 ubox
8 41 0.028040987 ubox
8 64 0.003254431 ubox
8 65 0.020860395 ubox
9 15 0.008691719 ubox
9 17 0.003635809 ubox
9 19 0.024660895 ubox
9 22 0.085208622 ubox
9 25 0.028046942 ubox
9 27 0.398474617 ubox
9 30 0.033043192 ubox
9 32 0.750446544 ubox
9 38 0.010456025 ubox
9 39 0.004428352 ubox
9 40 0.028019376 ubox
9 64 0.023173482 ubox
10 14 0.008142114 ubox
10 16 0.003611743 ubox
10 18 0.023667378 ubox
10 21 0.067168517 ubox
10 24 0.003928762 ubox
10 26 0.386818594 ubox
10 29 0.018689222 ubox
10 31 0.729864309 ubox
10 37 0.011818412 ubox
10 63 0.023150306 ubox
11 21 0.052388961 ubox
11 24 0.395701985 ubox
11 29 0.727615332 ubox
11 62 0.023031520 ubox
12 20 0.051031617 ubox
12 23 0.394033288 ubox
12 28 0.725039619 ubox
12 61 0.015975857 ubox
13 26 0.173551130 ubox
13 31 0.007821588 ubox
13 34 0.025074547 ubox
13 60 0.015447992 ubox
14 22 0.438131830 ubox
14 25 0.176279638 ubox
14 27 0.796697036 ubox
14 30 0.010486576 ubox
14 32 0.034951206 ubox
14 33 0.018678650 ubox
14 35 0.006758598 ubox
14 58 0.009537907 ubox
14 59 0.004012189 ubox
15 21 0.438047798 ubox
15 24 0.176356123 ubox
15 26 0.797048961 ubox
15 29 0.010509833 ubox
15 31 0.038888502 ubox
15 34 0.006876553 ubox
15 57 0.009730410 ubox
16 25 0.794865112 ubox
16 30 0.038615806 ubox
16 35 0.005017448 ubox
16 38 0.025456537 ubox
17 24 0.776781041 ubox
17 26 0.016223362 ubox
17 29 0.036982686 ubox
17 31 0.018073950 ubox
17 34 0.005665202 ubox
17 37 0.034999345 ubox
18 25 0.042513641 ubox
18 30 0.027781383 ubox
18 35 0.287639621 ubox
18 36 0.031068413 ubox
19 24 0.055416519 ubox
19 26 0.023602495 ubox
19 29 0.028683914 ubox
19 31 0.009088728 ubox
19 34 0.311423665 ubox
19 60 0.004915847 ubox
20 25 0.022843797 ubox
20 30 0.008270262 ubox
20 36 0.033990406 ubox
20 59 0.004986729 ubox
21 27 0.043924162 ubox
21 30 0.010757329 ubox
21 32 0.353514719 ubox
21 35 0.038731499 ubox
21 58 0.005009242 ubox
22 26 0.043649446 ubox
22 29 0.011945462 ubox
22 31 0.353801927 ubox
22 34 0.039070681 ubox
22 57 0.004992981 ubox
23 30 0.344636576 ubox
23 39 0.005490403 ubox
23 65 0.003990529 ubox
24 30 0.003305616 ubox
24 32 0.035931555 ubox
24 38 0.006788413 ubox
24 56 0.004688130 ubox
24 64 0.004442287 ubox
25 29 0.013536754 ubox
25 31 0.035387390 ubox
25 37 0.006843466 ubox
25 42 0.003998035 ubox
25 55 0.004659909 ubox
25 63 0.004279144 ubox
26 30 0.016453736 ubox
26 32 0.018777048 ubox
26 33 0.003878291 ubox
26 35 0.010376343 ubox
26 36 0.004984905 ubox
26 41 0.005979356 ubox
27 31 0.018734901 ubox
27 34 0.011781664 ubox
27 60 0.004730335 ubox
28 39 0.010651973 ubox
28 59 0.008315232 ubox
28 65 0.007994180 ubox
29 38 0.015024755 ubox
29 58 0.008602004 ubox
29 64 0.010407328 ubox
30 37 0.015424900 ubox
30 51 0.005123956 ubox
30 57 0.008526633 ubox
30 63 0.009879983 ubox
31 36 0.013553215 ubox
31 41 0.003518824 ubox
31 50 0.005186409 ubox
31 56 0.008397677 ubox
31 58 0.004587722 ubox
32 49 0.004933625 ubox
32 57 0.003331365 ubox
32 61 0.008680203 ubox
33 57 0.005604357 ubox
33 60 0.008631084 ubox
34 56 0.006909366 ubox
34 58 0.006867077 ubox
34 59 0.004547194 ubox
34 64 0.156440625 ubox
35 52 0.007644847 ubox
35 55 0.006851038 ubox
35 57 0.006775060 ubox
35 63 0.142870949 ubox
36 42 0.005594517 ubox
36 51 0.007930132 ubox
36 54 0.006028255 ubox
36 62 0.111359809 ubox
37 50 0.007940498 ubox
38 49 0.007663832 ubox
38 54 0.007593310 ubox
38 62 0.009699143 ubox
38 63 0.611997317 ubox
39 53 0.008462544 ubox
39 62 0.685442881 ubox
39 63 0.040605903 ubox
40 52 0.008504218 ubox
40 61 0.723333011 ubox
40 62 0.036819373 ubox
41 60 0.723896962 ubox
41 61 0.027875657 ubox
42 59 0.724050342 ubox
42 65 0.619455276 ubox
43 56 0.026060786 ubox
43 58 0.723617492 ubox
43 64 0.688181734 ubox
44 53 0.130235366 ubox
44 55 0.032719886 ubox
44 57 0.638077766 ubox
44 61 0.004012012 ubox
44 62 0.004032877 ubox
44 63 0.688499504 ubox
45 52 0.192269578 ubox
45 60 0.009457212 ubox
45 61 0.006939900 ubox
45 62 0.688454139 ubox
46 51 0.173313472 ubox
46 53 0.509404255 ubox
46 60 0.008309049 ubox
46 61 0.669641330 ubox
46 62 0.016014158 ubox
46 63 0.018631494 ubox
47 52 0.511284156 ubox
47 60 0.659664964 ubox
47 61 0.157745518 ubox
47 62 0.020595312 ubox
48 57 0.533493745 ubox
48 60 0.157788865 ubox
48 61 0.020823620 ubox
49 56 0.583136156 ubox
49 58 0.507043050 ubox
49 59 0.071710237 ubox
50 55 0.555350887 ubox
50 57 0.494104392 ubox
50 60 0.027956869 ubox
51 59 0.063466273 ubox
52 58 0.067871876 ubox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
38 63 0.9500000 lbox
39 62 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
