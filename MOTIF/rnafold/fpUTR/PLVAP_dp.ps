%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLVAP)
} def

/sequence { (\
GGGGGCCAGAGCAGGCCUGGUGGUGAGCAGGGACGGUGCACCGGACGGCGGGAUCGAGCAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.048439840 ubox
1 17 0.004488324 ubox
1 18 0.011078940 ubox
1 42 0.020494310 ubox
1 55 0.030932598 ubox
2 6 0.047693251 ubox
2 16 0.004256049 ubox
2 17 0.008142207 ubox
2 18 0.054352736 ubox
2 41 0.020444920 ubox
2 42 0.009165749 ubox
2 54 0.025371891 ubox
2 55 0.020499011 ubox
3 16 0.006386703 ubox
3 17 0.047589008 ubox
3 18 0.684116621 ubox
3 41 0.009042620 ubox
3 42 0.007895473 ubox
3 54 0.012215035 ubox
3 55 0.014480454 ubox
4 16 0.033847007 ubox
4 17 0.733194783 ubox
4 41 0.007892396 ubox
4 54 0.009954110 ubox
4 55 0.009477496 ubox
5 12 0.025664200 ubox
5 16 0.735880951 ubox
5 21 0.043751715 ubox
5 37 0.011668240 ubox
5 39 0.010730376 ubox
5 49 0.024203308 ubox
5 54 0.008960259 ubox
5 59 0.665737172 ubox
6 11 0.025613527 ubox
6 15 0.736771063 ubox
6 20 0.046732415 ubox
6 31 0.029181385 ubox
6 32 0.031811509 ubox
6 36 0.011813104 ubox
6 38 0.010502739 ubox
6 44 0.006874229 ubox
6 48 0.024224183 ubox
6 51 0.014885033 ubox
6 52 0.016432937 ubox
6 58 0.666186470 ubox
7 14 0.736126779 ubox
7 19 0.046767238 ubox
7 30 0.029297010 ubox
7 31 0.031897368 ubox
7 35 0.011801093 ubox
7 38 0.004336729 ubox
7 43 0.006887319 ubox
7 47 0.024195393 ubox
7 50 0.014911575 ubox
7 51 0.016310151 ubox
8 18 0.046748263 ubox
8 37 0.004720948 ubox
9 17 0.046678935 ubox
9 55 0.667332977 ubox
10 54 0.664376106 ubox
11 28 0.053264540 ubox
11 37 0.010587207 ubox
11 39 0.037267280 ubox
11 49 0.016958356 ubox
11 59 0.039258924 ubox
12 27 0.053323523 ubox
12 36 0.010752406 ubox
12 38 0.037305711 ubox
12 48 0.016966445 ubox
12 58 0.039257479 ubox
13 37 0.037072337 ubox
14 55 0.037342682 ubox
15 24 0.053544102 ubox
15 49 0.669306392 ubox
15 54 0.036570984 ubox
16 23 0.053615967 ubox
16 31 0.043273202 ubox
16 32 0.011163908 ubox
16 44 0.012169657 ubox
16 48 0.668730942 ubox
16 51 0.004142318 ubox
16 52 0.038128377 ubox
17 22 0.053591129 ubox
17 30 0.044822638 ubox
17 31 0.011024226 ubox
17 43 0.012047244 ubox
17 44 0.048851167 ubox
17 47 0.666699369 ubox
17 48 0.037289963 ubox
17 50 0.003956564 ubox
17 51 0.038547590 ubox
17 52 0.017673606 ubox
18 29 0.046806051 ubox
18 30 0.010158252 ubox
18 40 0.006818107 ubox
18 43 0.079670336 ubox
18 47 0.123440514 ubox
18 50 0.038936289 ubox
18 51 0.025430098 ubox
18 56 0.029200896 ubox
18 57 0.004089229 ubox
18 60 0.060281549 ubox
19 24 0.004904200 ubox
19 28 0.049790443 ubox
19 37 0.004644463 ubox
19 39 0.012950408 ubox
19 42 0.141951818 ubox
19 46 0.349036637 ubox
19 49 0.041186441 ubox
19 55 0.074712435 ubox
19 59 0.100461262 ubox
20 28 0.038388718 ubox
20 34 0.008835026 ubox
20 37 0.006328677 ubox
20 39 0.045344957 ubox
20 41 0.142050446 ubox
20 46 0.195981473 ubox
20 49 0.053838626 ubox
20 54 0.074631740 ubox
20 59 0.080300572 ubox
21 27 0.038495871 ubox
21 29 0.031147934 ubox
21 33 0.008831725 ubox
21 35 0.005612440 ubox
21 36 0.018822717 ubox
21 38 0.045288089 ubox
21 40 0.141732103 ubox
21 43 0.827497821 ubox
21 45 0.165642746 ubox
21 47 0.034928370 ubox
21 48 0.053179770 ubox
21 50 0.004915256 ubox
21 53 0.073447661 ubox
21 56 0.163866119 ubox
21 58 0.075239017 ubox
21 60 0.024923055 ubox
22 28 0.034663932 ubox
22 34 0.006401645 ubox
22 37 0.044814141 ubox
22 39 0.134311998 ubox
22 42 0.944858694 ubox
22 46 0.020157330 ubox
22 49 0.006679996 ubox
22 55 0.209296110 ubox
22 59 0.027372772 ubox
23 34 0.070108299 ubox
23 37 0.005390932 ubox
23 39 0.021291430 ubox
23 41 0.945277757 ubox
23 46 0.048413471 ubox
23 49 0.006705920 ubox
23 54 0.209407610 ubox
23 59 0.016548585 ubox
24 33 0.070189322 ubox
24 35 0.059525831 ubox
24 36 0.013495217 ubox
24 38 0.028513936 ubox
24 40 0.941451550 ubox
24 43 0.012858392 ubox
24 45 0.047849212 ubox
24 47 0.006930017 ubox
24 48 0.006660695 ubox
24 50 0.004763740 ubox
24 53 0.207098806 ubox
24 56 0.051704607 ubox
24 58 0.015913341 ubox
24 60 0.010653254 ubox
25 34 0.064303763 ubox
25 37 0.014131938 ubox
25 39 0.909081016 ubox
25 42 0.015763203 ubox
25 46 0.007097628 ubox
25 49 0.004250919 ubox
25 55 0.057961490 ubox
25 59 0.011647348 ubox
26 54 0.055541502 ubox
27 37 0.858890674 ubox
27 39 0.264404832 ubox
27 49 0.220066274 ubox
27 59 0.064591782 ubox
28 36 0.900930214 ubox
28 38 0.289143590 ubox
28 48 0.220086832 ubox
28 58 0.064603878 ubox
29 37 0.285004353 ubox
30 42 0.032035242 ubox
30 55 0.032393250 ubox
31 41 0.032023538 ubox
31 42 0.020535037 ubox
31 54 0.031950299 ubox
31 55 0.034680703 ubox
32 41 0.020548070 ubox
32 54 0.031025898 ubox
32 55 0.016644248 ubox
33 54 0.016833582 ubox
34 43 0.225495514 ubox
34 47 0.005696785 ubox
34 50 0.036634597 ubox
34 56 0.102567964 ubox
35 42 0.225887939 ubox
35 46 0.005636451 ubox
35 49 0.036648200 ubox
35 55 0.105050033 ubox
36 41 0.224493884 ubox
36 46 0.004601124 ubox
36 49 0.003603522 ubox
36 54 0.104158349 ubox
36 59 0.015524813 ubox
37 45 0.004711295 ubox
37 47 0.035833012 ubox
37 48 0.003485530 ubox
37 50 0.029793206 ubox
37 53 0.098587573 ubox
37 56 0.009882326 ubox
37 58 0.015385019 ubox
37 60 0.014489120 ubox
38 46 0.035741293 ubox
38 49 0.030976089 ubox
38 55 0.013511037 ubox
38 59 0.016242595 ubox
39 48 0.030837384 ubox
39 58 0.016163171 ubox
41 48 0.017643340 ubox
41 51 0.166205662 ubox
41 52 0.021993890 ubox
42 47 0.018179092 ubox
42 50 0.166774937 ubox
42 51 0.021560344 ubox
42 56 0.005206601 ubox
43 49 0.167852600 ubox
43 55 0.009211290 ubox
44 54 0.006466841 ubox
44 55 0.048579546 ubox
45 54 0.047738526 ubox
46 56 0.112921926 ubox
47 55 0.115571736 ubox
48 54 0.093700202 ubox
48 59 0.633318616 ubox
49 56 0.128394447 ubox
49 58 0.633907736 ubox
50 55 0.132533200 ubox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
showpage
end
%%EOF
