%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGGCUCGCGGCCUCAGCUUCCGGCCUGCGGACCCCAGCUUCCGGCGGGGCGGGGCGGGGGCCUGGGCGCGGCGUGUGGCCCUUGCGGGCGAGCCUGGCGGGGUUGCGUUCCUGUCCGCUAGCAGGUCAAUGGCCAGCAAGGAGGGGGGUCCGAGCCGGCGGCGGCGGCGGCAGUGGUGGCAGCGGGAGACAAAUGGAAACCUCCACAGGGCACAGACUCCAUCAAG\
) } def
/len { sequence length } bind def

/coor [
[344.89709473 330.98889160]
[333.46466064 321.27810669]
[318.75540161 318.93569946]
[313.24642944 304.10458374]
[301.81402588 294.39379883]
[290.38159180 284.68301392]
[278.94915771 274.97219849]
[267.51672363 265.26141357]
[256.08428955 255.55061340]
[244.65185547 245.83982849]
[233.21942139 236.12902832]
[221.78700256 226.41824341]
[214.66476440 224.48643494]
[210.26666260 216.49771118]
[198.96676636 206.63301086]
[187.66688538 196.76829529]
[176.36698914 186.90359497]
[165.06710815 177.03887939]
[153.76721191 167.17416382]
[149.03994751 166.59576416]
[144.62158203 163.05102539]
[142.29956055 156.88607788]
[131.27095032 146.71899414]
[120.24233246 136.55191040]
[109.21371460 126.38481903]
[98.18509674 116.21773529]
[83.55796051 112.89406586]
[69.21867371 117.29690552]
[54.87939453 121.69974518]
[40.54011154 126.10258484]
[26.20083046 130.50541687]
[15.27959824 141.95257568]
[0.84186298 138.29182434]
[-13.49741936 142.69465637]
[-18.25554466 147.25080872]
[-23.77188301 148.53813171]
[-28.28491783 147.01689148]
[-42.73816681 151.02983093]
[-57.19141769 155.04275513]
[-71.64466858 159.05567932]
[-79.06314850 164.35934448]
[-86.32083893 163.02366638]
[-100.82710266 166.84051514]
[-115.33335876 170.65734863]
[-129.83963013 174.47419739]
[-144.34588623 178.29104614]
[-155.60684204 190.21258545]
[-171.49694824 186.15834045]
[-175.66981506 170.29898071]
[-163.83276367 158.94926453]
[-148.16273499 163.78479004]
[-133.65647888 159.96794128]
[-119.15020752 156.15109253]
[-104.64394379 152.33424377]
[-90.13768005 148.51739502]
[-75.65759277 144.60241699]
[-61.20434189 140.58949280]
[-46.75109482 136.57656860]
[-32.29784393 132.56364441]
[-17.90025711 128.35537720]
[-3.56097555 123.95254517]
[6.33461475 112.82031250]
[21.79799080 116.16613770]
[36.13727188 111.76329803]
[50.47655487 107.36045837]
[64.81584167 102.95762634]
[79.15512085 98.55478668]
[84.32781219 84.47489929]
[76.24929810 71.83616638]
[68.17077637 59.19743347]
[60.09225464 46.55870438]
[52.01373672 33.91997147]
[43.93521881 21.28124046]
[36.68766785 15.74627399]
[35.83422470 8.41622257]
[27.92758560 -4.33074093]
[12.80104733 -8.04902363]
[4.96417713 -21.08889008]
[8.60221100 -35.48681641]
[0.69557232 -48.23377991]
[-7.21106625 -60.98074341]
[-15.11770439 -73.72770691]
[-23.02434349 -86.47467041]
[-30.93098259 -99.22163391]
[-38.83761978 -111.96859741]
[-46.74425888 -124.71556091]
[-54.65089798 -137.46252441]
[-69.77743530 -141.18080139]
[-77.61430359 -154.22067261]
[-73.97627258 -168.61859131]
[-81.88291168 -181.36555481]
[-89.78955078 -194.11251831]
[-97.69618988 -206.85948181]
[-112.39794922 -214.12518311]
[-113.18638611 -230.50537109]
[-99.25043488 -239.14950562]
[-84.92619324 -231.16525269]
[-84.94922638 -214.76612854]
[-77.04258728 -202.01916504]
[-69.13594818 -189.27220154]
[-61.22930908 -176.52523804]
[-46.71418381 -173.38728333]
[-38.51414108 -160.57267761]
[-41.90393448 -145.36915588]
[-33.99729538 -132.62219238]
[-26.09065819 -119.87523651]
[-18.18401909 -107.12827301]
[-10.27737999 -94.38130951]
[-2.37074161 -81.63434601]
[5.53589678 -68.88738251]
[13.44253540 -56.14041901]
[21.34917450 -43.39345551]
[35.86429977 -40.25550079]
[44.06433868 -27.44090080]
[40.67454910 -12.23737907]
[48.58118820 0.50958365]
[56.57394791 13.20272160]
[64.65246582 25.84145355]
[72.73098755 38.48018265]
[80.80950928 51.11891556]
[88.88802338 63.75764465]
[96.96654510 76.39637756]
[104.46035767 76.09178162]
[111.42656708 62.80750656]
[119.44798279 75.48258972]
[126.94179535 75.17799377]
[133.96792603 61.92531204]
[133.59603882 46.10847473]
[146.39360046 38.48799515]
[153.41972351 25.23531342]
[160.44584656 11.98263264]
[167.47198486 -1.27004802]
[169.54914856 -18.09626961]
[186.29281616 -20.75823784]
[193.48585510 -5.40582895]
[180.72465515 5.75607872]
[173.69853210 19.00875854]
[166.67240906 32.26144028]
[159.64628601 45.51412201]
[160.52072144 60.38303375]
[147.22059631 68.95143890]
[140.19447327 82.20411682]
[132.44335938 96.98841858]
[120.64122772 104.86965942]
[108.35218811 105.18911743]
[119.38079834 115.35620117]
[130.40940857 125.52329254]
[141.43803406 135.69038391]
[152.46664429 145.85746765]
[163.63192749 155.87428284]
[174.93180847 165.73898315]
[186.23170471 175.60369873]
[197.53158569 185.46841431]
[208.83148193 195.33311462]
[220.13136292 205.19783020]
[231.49778748 214.98580933]
[242.93022156 224.69659424]
[254.36265564 234.40739441]
[265.79507446 244.11819458]
[277.22750854 253.82897949]
[288.65994263 263.53976440]
[300.09237671 273.25057983]
[311.52481079 282.96136475]
[322.95724487 292.67214966]
[338.48422241 295.70913696]
[343.17544556 309.84567261]
[354.60787964 319.55645752]
[380.97680664 317.55224609]
[396.58221436 338.28619385]
[411.47094727 340.10977173]
[426.10940552 334.10754395]
[437.80163574 343.33471680]
[452.69039917 345.15829468]
[467.32882690 339.15606689]
[479.02105713 348.38323975]
[493.90982056 350.20681763]
[508.78359985 343.30007935]
[522.04449463 352.94790649]
[520.05084229 369.22543335]
[504.85351562 375.38772583]
[492.08624268 365.09555054]
[477.19750977 363.27197266]
[463.62402344 369.40463257]
[450.86682129 360.04702759]
[435.97808838 358.22348022]
[422.40457153 364.35610962]
[409.64739990 354.99850464]
[394.75866699 353.17495728]
[393.46582031 355.78317261]
[391.89746094 358.23562622]
[401.13595581 370.05300903]
[410.37442017 381.87039185]
[419.61291504 393.68777466]
[430.16589355 392.30545044]
[440.26580811 395.39700317]
[448.11605835 402.34262085]
[452.34930420 411.84329224]
[452.26544189 422.16339111]
[447.94635010 431.44769287]
[456.69726562 443.63052368]
[470.43972778 442.67849731]
[482.76190186 448.59078979]
[490.49493408 459.72842407]
[491.70880127 473.12432861]
[486.19320679 485.27349854]
[494.77835083 497.57373047]
[503.36349487 509.87393188]
[518.43707275 516.33306885]
[520.11114502 532.64648438]
[506.66360474 542.03247070]
[491.92813110 534.83538818]
[491.06329346 518.45910645]
[482.47811890 506.15887451]
[473.89297485 493.85867310]
[457.47186279 494.07025146]
[444.02877808 484.35055542]
[438.98315430 468.37326050]
[444.51443481 452.38143921]
[435.76351929 440.19860840]
[416.34881592 438.44873047]
[404.31295776 422.72766113]
[407.79553223 402.92623901]
[398.55703735 391.10885620]
[389.31857300 379.29147339]
[380.08010864 367.47409058]
[372.36041260 369.41873169]
[364.37173462 369.01107788]
[356.81829834 366.26464844]
[350.37246704 361.40005493]
[345.61499023 354.82754517]
[342.98269653 347.11236572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[14 155]
[15 154]
[16 153]
[17 152]
[18 151]
[19 150]
[22 149]
[23 148]
[24 147]
[25 146]
[26 145]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[33 61]
[34 60]
[37 59]
[38 58]
[39 57]
[40 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[68 122]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[75 116]
[76 115]
[79 112]
[80 111]
[81 110]
[82 109]
[83 108]
[84 107]
[85 106]
[86 105]
[87 104]
[90 101]
[91 100]
[92 99]
[93 98]
[126 142]
[127 141]
[129 139]
[130 138]
[131 137]
[132 136]
[169 188]
[170 187]
[172 185]
[173 184]
[175 182]
[176 181]
[190 225]
[191 224]
[192 223]
[193 222]
[199 219]
[200 218]
[205 214]
[206 213]
[207 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
