%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUCCCUUGGGUCAGGGGUCCUGGUUGCACUCCGUGCUUUGCACAAAGCAGGCUCUCCAUUUUUGUUAAAUGCACGAAUAGUGCUAAGCUGGGAAGUUCUUCCUGAGGUCUAACCUCUAGCUGCUCCCCCACAGAAGAGUGCCUGCGGCCAGUGGCCACCAGGGGUCGCCGCAGCACCCAGCGCUGGAGGGCGGAGCGGGCGGCAGACCCGGAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[78.49916077 279.60055542]
[73.55860901 264.89102173]
[78.23978424 250.09689331]
[90.74266815 240.90681458]
[90.52944946 225.90832520]
[90.31622314 210.90985107]
[90.10299683 195.91136169]
[87.84986877 193.20822144]
[86.79022217 189.28196716]
[87.48359680 184.70362854]
[90.21415710 180.27210999]
[90.64056396 165.27818298]
[91.06696320 150.28424072]
[91.49337006 135.29029846]
[91.91976929 120.29636383]
[82.37814331 108.72236633]
[67.57813263 106.28112793]
[52.77811813 103.83988953]
[37.97810745 101.39865112]
[23.17809486 98.95740509]
[8.30068970 97.04356384]
[-6.63532305 95.65953827]
[-21.57133484 94.27551270]
[-36.50734711 92.89148712]
[-51.44335938 91.50746155]
[-66.37937164 90.12343597]
[-81.31538391 88.73941040]
[-96.25139618 87.35538483]
[-111.20557404 86.18381500]
[-126.17489624 85.22493744]
[-141.14421082 84.26605225]
[-156.11354065 83.30716705]
[-171.08285522 82.34828949]
[-188.73492432 92.09302521]
[-204.34030151 80.66835022]
[-219.33084106 80.13539124]
[-234.32136536 79.60242462]
[-249.31188965 79.06946564]
[-264.30242920 78.53649902]
[-279.29635620 78.11009216]
[-294.29293823 77.79027557]
[-309.28955078 77.47045135]
[-324.28613281 77.15063477]
[-332.92517090 80.09465790]
[-339.49322510 76.71817017]
[-354.48373413 76.18520355]
[-369.47427368 75.65224457]
[-384.46481323 75.11927795]
[-399.45532227 74.58631134]
[-414.44586182 74.05335236]
[-425.95904541 84.54545593]
[-441.15399170 83.79140472]
[-451.08563232 72.75068665]
[-466.07617188 72.21772003]
[-480.29901123 80.38122559]
[-494.34243774 71.91277313]
[-493.75973511 55.52398300]
[-479.15039062 48.07423401]
[-465.54321289 57.22719193]
[-450.55267334 57.76015472]
[-439.86199951 47.45262146]
[-424.65188599 47.77957916]
[-413.91290283 59.06282043]
[-398.92236328 59.59578705]
[-383.93182373 60.12874985]
[-368.94131470 60.66171265]
[-353.95077515 61.19467545]
[-338.96023560 61.72763824]
[-323.96630859 62.15404129]
[-308.96972656 62.47386169]
[-293.97314453 62.79368591]
[-278.97653198 63.11350632]
[-272.22723389 60.11573792]
[-263.76947021 63.54597092]
[-248.77893066 64.07893372]
[-233.78840637 64.61190033]
[-218.79786682 65.14485931]
[-203.80734253 65.67782593]
[-196.99342346 58.07520676]
[-186.90873718 55.41854858]
[-176.81744385 58.81715775]
[-170.12397766 67.37896729]
[-155.15464783 68.33785248]
[-140.18533325 69.29673004]
[-125.21601105 70.25561523]
[-110.24669647 71.21449280]
[-106.13748932 68.79381561]
[-100.46517944 68.92376709]
[-94.86737061 72.41937256]
[-79.93135834 73.80339813]
[-64.99534607 75.18742371]
[-50.05933380 76.57144928]
[-35.12332153 77.95547485]
[-20.18731117 79.33950043]
[-5.25129747 80.72352600]
[9.68471527 82.10755157]
[2.21972394 69.09702301]
[7.60151148 55.09572220]
[21.85900307 50.43483353]
[34.47198868 58.55348969]
[36.13368607 73.46116638]
[25.61933708 84.15739441]
[40.41934967 86.59863281]
[55.21936035 89.03987885]
[70.01937103 91.48111725]
[84.81938171 93.92235565]
[96.59418488 84.62966919]
[97.65943909 69.66754150]
[98.72469330 54.70541763]
[99.78994751 39.74328995]
[100.85520172 24.78116417]
[95.94897461 8.55263042]
[110.18511200 -0.65436375]
[122.97324371 10.47666931]
[115.81732941 25.84641838]
[114.75207520 40.80854416]
[113.68682098 55.77067184]
[112.62156677 70.73279572]
[111.55631256 85.69492340]
[113.81479645 86.10269928]
[116.10279083 86.83219147]
[118.37721252 87.89279175]
[120.59346771 89.28839111]
[135.50830078 87.69219208]
[150.42312622 86.09599304]
[165.33795166 84.49979401]
[180.25277710 82.90359497]
[195.16761780 81.30739594]
[210.08244324 79.71119690]
[224.98554993 78.00903320]
[239.87619019 76.20098114]
[254.76681519 74.39292908]
[269.23181152 62.99248886]
[285.09515381 70.50460815]
[299.95855713 68.48506927]
[314.82199097 66.46553802]
[321.10165405 50.04546738]
[334.76583862 39.12682724]
[351.99032593 36.64988327]
[368.01254272 43.20826340]
[378.44857788 56.90991974]
[393.24856567 54.46868134]
[408.04858398 52.02743912]
[422.84860229 49.58619690]
[430.79959106 45.10487747]
[437.87622070 47.21700668]
[452.70944214 44.98639297]
[467.54266357 42.75577927]
[482.37588501 40.52516556]
[497.20907593 38.29455185]
[512.04229736 36.06393814]
[515.32775879 33.25044250]
[518.97058105 31.77281761]
[522.50830078 31.57978058]
[525.54235840 32.47555923]
[527.77954102 34.15309143]
[542.71551514 32.76906586]
[557.65155029 31.38504219]
[572.58758545 30.00101662]
[582.48999023 17.68365288]
[598.21057129 16.05912018]
[610.42254639 26.09122276]
[611.88079834 41.82809067]
[601.72015381 53.93332672]
[585.96875000 55.22509766]
[573.97161865 44.93703079]
[559.03558350 46.32105637]
[544.09954834 47.70508194]
[529.16357422 49.08910370]
[514.27294922 50.89715576]
[499.43969727 53.12776947]
[484.60647583 55.35838318]
[469.77325439 57.58899689]
[454.94006348 59.81961060]
[440.10684204 62.05022430]
[425.28985596 64.38620758]
[410.48983765 66.82745361]
[395.68981934 69.26869202]
[380.88980103 71.70993042]
[377.73895264 83.93644714]
[370.17214966 94.10209656]
[359.28402710 100.67714691]
[346.67218018 102.65560150]
[334.20281982 99.70898438]
[323.73458862 92.24021149]
[316.84152222 81.32896423]
[301.97808838 83.34849548]
[287.11468506 85.36803436]
[279.54742432 94.79944611]
[267.18627930 96.60726929]
[256.57485962 89.28356171]
[241.68423462 91.09161377]
[226.79359436 92.89966583]
[220.53707886 96.82340240]
[211.67863464 94.62602997]
[196.76380920 96.22222900]
[181.84898376 97.81842804]
[166.93415833 99.41462708]
[152.01931763 101.01082611]
[137.10449219 102.60702515]
[122.18966675 104.20322418]
[137.09545898 105.88171387]
[147.02775574 117.12223816]
[146.85850525 132.12127686]
[136.67507935 143.13481140]
[121.73520660 144.47651672]
[109.75237274 135.45365906]
[106.91371155 120.72276306]
[106.48730469 135.71670532]
[106.06090546 150.71064758]
[105.63449860 165.70457458]
[105.20809937 180.69851685]
[105.10148621 195.69813538]
[105.31470490 210.69662476]
[105.52793121 225.69511414]
[105.74114990 240.69358826]
[118.50022888 249.52453613]
[123.60005951 264.17962646]
[119.07965851 279.02365112]
[106.67720032 288.34881592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 216]
[5 215]
[6 214]
[7 213]
[11 212]
[12 211]
[13 210]
[14 209]
[15 208]
[16 106]
[17 105]
[18 104]
[19 103]
[20 102]
[21 96]
[22 95]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[29 86]
[30 85]
[31 84]
[32 83]
[33 82]
[35 78]
[36 77]
[37 76]
[38 75]
[39 74]
[40 72]
[41 71]
[42 70]
[43 69]
[45 68]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[53 60]
[54 59]
[107 119]
[108 118]
[109 117]
[110 116]
[111 115]
[123 201]
[124 200]
[125 199]
[126 198]
[127 197]
[128 196]
[129 195]
[130 193]
[131 192]
[132 191]
[134 188]
[135 187]
[136 186]
[141 179]
[142 178]
[143 177]
[144 176]
[146 175]
[147 174]
[148 173]
[149 172]
[150 171]
[151 170]
[156 169]
[157 168]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
