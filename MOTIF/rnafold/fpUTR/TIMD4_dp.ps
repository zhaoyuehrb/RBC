%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TIMD4)
} def

/sequence { (\
AUAAGAGGUUGGGCUUUGGAUAGAUAGACAGACUCCUGGGUCCGGUCAACCGUCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.007388529 ubox
1 53 0.016235631 ubox
2 20 0.007852662 ubox
2 52 0.017620084 ubox
3 10 0.003702037 ubox
4 9 0.003956432 ubox
4 17 0.009401559 ubox
5 16 0.010392022 ubox
5 17 0.009295013 ubox
5 42 0.003828485 ubox
5 47 0.055723332 ubox
5 54 0.873005877 ubox
6 15 0.010568721 ubox
6 16 0.009570643 ubox
6 41 0.003819519 ubox
6 46 0.054380783 ubox
6 53 0.851531002 ubox
7 14 0.010592737 ubox
7 15 0.009710919 ubox
7 47 0.175349144 ubox
7 51 0.978208299 ubox
7 54 0.007635439 ubox
8 14 0.009747127 ubox
8 46 0.168272382 ubox
8 50 0.979696844 ubox
8 53 0.006044115 ubox
9 13 0.009127848 ubox
9 45 0.221817260 ubox
9 49 0.968385412 ubox
9 56 0.003366673 ubox
10 44 0.434330323 ubox
10 48 0.881578309 ubox
10 52 0.007915158 ubox
10 55 0.003822661 ubox
11 36 0.005157934 ubox
11 43 0.573944208 ubox
11 47 0.712270974 ubox
11 51 0.010141756 ubox
11 54 0.003729351 ubox
12 34 0.003735913 ubox
12 35 0.005887486 ubox
12 41 0.003819562 ubox
12 42 0.609844907 ubox
12 43 0.118267550 ubox
12 46 0.548014516 ubox
12 47 0.401989790 ubox
12 50 0.010130206 ubox
12 54 0.003563880 ubox
13 33 0.004374041 ubox
13 34 0.005411260 ubox
13 41 0.616862803 ubox
13 42 0.119019803 ubox
13 46 0.547348989 ubox
13 53 0.003676050 ubox
14 23 0.010189146 ubox
14 27 0.004049209 ubox
14 39 0.009001792 ubox
14 40 0.628351097 ubox
14 45 0.661333828 ubox
14 52 0.003758280 ubox
15 22 0.010094282 ubox
15 26 0.003974430 ubox
15 28 0.008270530 ubox
15 32 0.009712054 ubox
15 38 0.011089211 ubox
15 39 0.625629442 ubox
15 40 0.008008905 ubox
15 44 0.541579438 ubox
15 45 0.038093783 ubox
16 23 0.003721967 ubox
16 24 0.004782794 ubox
16 27 0.011813844 ubox
16 31 0.011645590 ubox
16 38 0.533330602 ubox
16 39 0.015507215 ubox
16 44 0.059886754 ubox
16 45 0.367039752 ubox
17 22 0.003352536 ubox
17 23 0.005076140 ubox
17 26 0.013046901 ubox
17 30 0.016418243 ubox
17 38 0.017149574 ubox
17 44 0.491654289 ubox
18 25 0.012902684 ubox
18 29 0.016984830 ubox
18 34 0.006484990 ubox
18 35 0.009405373 ubox
18 36 0.627319609 ubox
18 37 0.013806592 ubox
18 42 0.013495226 ubox
18 43 0.775031134 ubox
19 33 0.007231403 ubox
19 34 0.007648771 ubox
19 35 0.627481802 ubox
19 36 0.014826047 ubox
19 41 0.012812402 ubox
19 42 0.776471785 ubox
19 47 0.004286774 ubox
19 54 0.007645288 ubox
20 34 0.586588587 ubox
20 41 0.774278088 ubox
20 46 0.004643403 ubox
20 53 0.007700819 ubox
21 38 0.093871341 ubox
21 40 0.729071806 ubox
21 45 0.004754837 ubox
21 52 0.007426673 ubox
22 34 0.088794201 ubox
22 37 0.159435126 ubox
23 33 0.141111400 ubox
23 35 0.040627604 ubox
23 36 0.163432433 ubox
23 42 0.018217544 ubox
23 54 0.005788118 ubox
24 34 0.043052831 ubox
24 41 0.022106156 ubox
24 53 0.005783626 ubox
25 38 0.610136290 ubox
25 40 0.027397396 ubox
25 52 0.005538581 ubox
26 34 0.199414428 ubox
26 37 0.654328872 ubox
27 33 0.211833429 ubox
27 35 0.211026058 ubox
27 36 0.653667272 ubox
27 42 0.006426138 ubox
27 47 0.016569634 ubox
28 34 0.210657932 ubox
28 41 0.006811463 ubox
28 46 0.017807173 ubox
29 38 0.238016239 ubox
29 40 0.006406494 ubox
29 45 0.018285719 ubox
30 37 0.240333343 ubox
31 36 0.239527920 ubox
31 42 0.027190699 ubox
32 41 0.027751748 ubox
33 39 0.014242508 ubox
33 40 0.028405585 ubox
34 38 0.012871153 ubox
34 39 0.026199241 ubox
35 39 0.005029623 ubox
36 45 0.005714471 ubox
37 44 0.005831698 ubox
38 43 0.006001898 ubox
43 52 0.010600074 ubox
44 51 0.037730677 ubox
44 54 0.003410558 ubox
45 50 0.037602963 ubox
5 54 0.9500000 lbox
6 53 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
showpage
end
%%EOF
