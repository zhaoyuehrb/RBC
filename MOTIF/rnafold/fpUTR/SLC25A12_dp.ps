%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC25A12)
} def

/sequence { (\
GAGGGCGGGCGCGGCCGGGAAGACGGCGCGCGCGCGCCCUGACAGCUCGGCCCUGCUCGCUCACUCGCUCGUCCCCGGCUUCCGAGCACAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.004940484 ubox
1 58 0.004419345 ubox
1 62 0.006017107 ubox
1 66 0.182341342 ubox
2 40 0.945592791 ubox
2 47 0.004075881 ubox
2 61 0.004601412 ubox
2 65 0.181269646 ubox
3 38 0.003647002 ubox
3 39 0.974229330 ubox
3 62 0.142538477 ubox
3 64 0.168629251 ubox
4 37 0.003174023 ubox
4 38 0.975047714 ubox
4 61 0.178123028 ubox
4 62 0.124784093 ubox
5 37 0.975055508 ubox
5 60 0.221426866 ubox
5 61 0.013943319 ubox
6 36 0.975045025 ubox
6 59 0.221903994 ubox
7 35 0.974824075 ubox
7 58 0.221880372 ubox
8 57 0.221764905 ubox
9 31 0.003985759 ubox
9 33 0.974953019 ubox
9 56 0.221906546 ubox
10 30 0.004037200 ubox
10 32 0.975040684 ubox
10 55 0.221890807 ubox
11 29 0.004272647 ubox
11 31 0.975039737 ubox
11 54 0.217686358 ubox
12 28 0.004312217 ubox
12 30 0.975035641 ubox
13 27 0.003205596 ubox
13 29 0.971328503 ubox
13 52 0.221589410 ubox
13 53 0.009574363 ubox
14 27 0.974325379 ubox
14 51 0.221805604 ubox
14 52 0.006772340 ubox
15 26 0.975061682 ubox
15 50 0.221909182 ubox
16 25 0.975045514 ubox
16 49 0.221905312 ubox
17 24 0.973404593 ubox
17 48 0.221865521 ubox
18 46 0.014659112 ubox
18 47 0.221217459 ubox
19 46 0.221090458 ubox
21 40 0.024157856 ubox
22 39 0.026256575 ubox
24 41 0.083834098 ubox
25 38 0.217172503 ubox
25 39 0.030763434 ubox
25 40 0.030310987 ubox
26 37 0.218804344 ubox
26 38 0.023861482 ubox
26 39 0.028178487 ubox
27 36 0.219763969 ubox
28 35 0.219757603 ubox
28 37 0.030671608 ubox
29 34 0.219443032 ubox
29 36 0.030692520 ubox
30 35 0.029898317 ubox
39 45 0.007464884 ubox
39 91 0.036412670 ubox
40 44 0.007326859 ubox
40 49 0.008344304 ubox
40 63 0.008432075 ubox
40 90 0.089337420 ubox
41 48 0.027318967 ubox
41 58 0.033928330 ubox
41 62 0.020691219 ubox
41 66 0.024823748 ubox
41 73 0.007063899 ubox
41 82 0.009888691 ubox
41 83 0.006353722 ubox
41 87 0.003657367 ubox
41 89 0.172195602 ubox
42 47 0.024639009 ubox
42 57 0.031106114 ubox
42 61 0.019646698 ubox
42 65 0.024648159 ubox
42 72 0.007090266 ubox
42 81 0.009873911 ubox
43 55 0.028775227 ubox
43 71 0.007090032 ubox
44 54 0.028793938 ubox
44 57 0.062176066 ubox
44 61 0.034696519 ubox
44 69 0.006879016 ubox
44 80 0.014257466 ubox
45 51 0.018366075 ubox
45 53 0.028179568 ubox
45 56 0.068091717 ubox
45 60 0.036886724 ubox
45 68 0.006925057 ubox
45 79 0.014728324 ubox
45 87 0.966506051 ubox
45 92 0.012439668 ubox
46 50 0.018472576 ubox
46 55 0.068116479 ubox
46 59 0.036765857 ubox
46 67 0.006913201 ubox
46 78 0.014646373 ubox
46 86 0.967500927 ubox
46 91 0.012510765 ubox
47 77 0.004419067 ubox
47 85 0.967377275 ubox
47 90 0.011844364 ubox
48 55 0.003883713 ubox
48 59 0.007321618 ubox
48 77 0.014158859 ubox
48 84 0.967477640 ubox
49 54 0.003248978 ubox
49 57 0.037793047 ubox
49 58 0.011004298 ubox
49 61 0.009668913 ubox
49 62 0.003657418 ubox
49 75 0.003342789 ubox
49 76 0.014425281 ubox
49 80 0.132106243 ubox
49 81 0.008532951 ubox
49 82 0.016825909 ubox
49 83 0.957943820 ubox
50 56 0.042487010 ubox
50 57 0.003938230 ubox
50 60 0.017712511 ubox
50 74 0.003380706 ubox
50 75 0.014398529 ubox
50 79 0.286447853 ubox
50 80 0.006746227 ubox
50 81 0.006183447 ubox
50 82 0.922566591 ubox
50 92 0.070517513 ubox
51 55 0.042601215 ubox
51 59 0.018793021 ubox
51 78 0.369179819 ubox
51 91 0.071293119 ubox
52 77 0.368538562 ubox
52 78 0.318763430 ubox
53 77 0.318318838 ubox
53 78 0.168644626 ubox
53 91 0.025477802 ubox
54 63 0.018539632 ubox
54 71 0.067162523 ubox
54 77 0.169138528 ubox
54 88 0.074502928 ubox
54 90 0.025799242 ubox
55 62 0.020474742 ubox
55 66 0.004405906 ubox
55 68 0.040764725 ubox
55 70 0.069833525 ubox
55 72 0.427349980 ubox
55 76 0.160655587 ubox
55 79 0.811837844 ubox
55 87 0.076145690 ubox
55 89 0.025749860 ubox
55 92 0.024377248 ubox
56 67 0.040789701 ubox
56 71 0.440521011 ubox
56 78 0.807912014 ubox
56 86 0.076160577 ubox
56 91 0.024886132 ubox
57 77 0.316779776 ubox
57 78 0.089976146 ubox
57 85 0.076147182 ubox
57 90 0.024152077 ubox
58 67 0.085540693 ubox
58 71 0.165646378 ubox
58 77 0.740759550 ubox
58 84 0.076135566 ubox
59 66 0.082926713 ubox
59 68 0.518856528 ubox
59 70 0.113067866 ubox
59 72 0.117889475 ubox
59 76 0.743722032 ubox
59 79 0.019245466 ubox
59 83 0.074616196 ubox
59 87 0.076992082 ubox
59 92 0.021246224 ubox
60 67 0.522051813 ubox
60 71 0.122169172 ubox
60 78 0.019451117 ubox
60 86 0.077072755 ubox
60 91 0.021407879 ubox
61 77 0.017362263 ubox
61 85 0.077047064 ubox
61 90 0.020627388 ubox
62 77 0.007253834 ubox
62 84 0.076874440 ubox
63 72 0.741644450 ubox
64 71 0.760592445 ubox
64 78 0.024297402 ubox
64 86 0.037707540 ubox
64 91 0.042472870 ubox
65 77 0.007811739 ubox
65 78 0.037667411 ubox
65 85 0.037945475 ubox
65 90 0.041444210 ubox
66 77 0.050152887 ubox
66 84 0.037975432 ubox
67 76 0.050882761 ubox
67 79 0.108988791 ubox
67 83 0.036844638 ubox
67 87 0.220763713 ubox
67 92 0.037129997 ubox
68 78 0.108642360 ubox
68 86 0.220995726 ubox
68 91 0.037400518 ubox
69 77 0.042667863 ubox
69 78 0.035629406 ubox
69 85 0.220961445 ubox
69 90 0.037015423 ubox
70 77 0.129755086 ubox
70 84 0.220754541 ubox
71 76 0.131814319 ubox
71 79 0.077983415 ubox
71 83 0.211047400 ubox
71 87 0.012416618 ubox
71 89 0.034567816 ubox
72 78 0.083807807 ubox
72 86 0.012349671 ubox
72 88 0.033716200 ubox
73 77 0.081379504 ubox
76 84 0.039065914 ubox
77 83 0.042296301 ubox
78 82 0.042193428 ubox
78 87 0.010743007 ubox
79 86 0.010750555 ubox
80 85 0.009945951 ubox
86 92 0.004644488 ubox
87 91 0.004958047 ubox
2 40 0.9500000 lbox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
5 37 0.9500000 lbox
6 36 0.9500000 lbox
7 35 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
45 87 0.9500000 lbox
46 86 0.9500000 lbox
47 85 0.9500000 lbox
48 84 0.9500000 lbox
49 83 0.9500000 lbox
50 82 0.9500000 lbox
55 79 0.9500000 lbox
56 78 0.9500000 lbox
58 77 0.9500000 lbox
59 76 0.9500000 lbox
63 72 0.9500000 lbox
64 71 0.9500000 lbox
showpage
end
%%EOF
