%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCGAGCGCGCAACGGCGGCGACGGCGGCGACCCCACCGCGCAUCCUGCCAGGCCUCCGGCGCCCAGCGCCCCACGCGCCCCCGCGCCCCCGCGCCCCCGCGCCCCUUUCUUCGCGCCCCCGCCCCUCGGCCCGCCAGGCCCCCUUGCCGGCCACCCGCCAGGCCCCGCGCCGGCCCGCCCGCCGCCCAGGACCGGCCCGCGCCCCGCAGGCCGCCCGCCGCCCGCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[202.22760010 804.76617432]
[194.45664978 790.32513428]
[203.30650330 776.51885986]
[203.50787354 761.52026367]
[203.70925903 746.52160645]
[200.66113281 739.80200195]
[204.01536560 731.32330322]
[204.41809082 716.32867432]
[204.82080078 701.33410645]
[205.22352600 686.33953857]
[205.62625122 671.34490967]
[203.81471252 669.22552490]
[202.72668457 666.26647949]
[202.68403625 662.73736572]
[203.90614319 659.01843262]
[206.47462463 655.56225586]
[207.68162537 640.61090088]
[208.88862610 625.65954590]
[210.09562683 610.70819092]
[211.30262756 595.75683594]
[212.50962830 580.80548096]
[213.71661377 565.85412598]
[198.73701477 549.70117188]
[198.55725098 529.28833008]
[211.11384583 515.29772949]
[206.94058228 500.88992310]
[202.76731873 486.48214722]
[198.59405518 472.07440186]
[194.42079163 457.66662598]
[190.24752808 443.25885010]
[186.07426453 428.85107422]
[171.22613525 427.28198242]
[158.07432556 420.12829590]
[148.63784790 408.45275879]
[144.37889099 394.01501465]
[145.97633362 379.00628662]
[153.21771240 365.71697998]
[165.02688599 356.18707275]
[160.85362244 341.77932739]
[156.68035889 327.37155151]
[152.41047668 312.99209595]
[148.04417419 298.64166260]
[143.67785645 284.29122925]
[131.76052856 282.07385254]
[121.85453796 274.96301270]
[115.87113953 264.25524902]
[114.99667358 251.94807434]
[119.45779419 240.36729431]
[128.46702576 231.72753906]
[124.48756409 217.26504517]
[120.50810242 202.80255127]
[109.67154694 192.58401489]
[113.47044373 177.22566223]
[109.49098969 162.76316833]
[105.51152802 148.30067444]
[86.64885712 146.74482727]
[69.80987549 138.10363770]
[57.54695129 123.68692017]
[51.71883774 105.67985535]
[53.20892334 86.81187439]
[39.57205963 80.56399536]
[25.93519592 74.31612396]
[12.29833126 68.06825256]
[-1.33853340 61.82037735]
[-15.97075939 70.32047272]
[-32.62023926 68.43693542]
[-44.74071503 57.10990906]
[-47.68576431 40.95304871]
[-61.40528107 34.88881683]
[-75.12479401 28.82458305]
[-88.84430695 22.76035118]
[-104.26497650 27.18558311]
[-117.25535583 17.77125931]
[-117.85034943 1.73924327]
[-105.59352112 -8.61207485]
[-89.88726807 -5.34204912]
[-82.78007507 9.04083633]
[-69.06056213 15.10506916]
[-55.34104538 21.16930199]
[-41.62153244 27.23353577]
[-30.75777245 19.48854256]
[-17.37873840 18.10785866]
[-4.96410465 23.55798340]
[3.20417523 34.51479340]
[4.90934038 48.18350983]
[18.54620552 54.43138504]
[32.18307114 60.67926025]
[45.81993484 66.92713165]
[59.45679855 73.17500305]
[57.40240097 67.34995270]
[55.98032379 61.12527847]
[55.23504639 54.56196594]
[55.20553970 47.72517014]
[48.05701065 34.53811264]
[40.90847778 21.35105515]
[33.75994873 8.16399670]
[19.50771523 0.05191261]
[19.67745781 -16.34635544]
[34.09455872 -24.16167641]
[47.92794037 -15.35431767]
[46.94700623 1.01546574]
[54.09553909 14.20252419]
[61.24406815 27.38958168]
[68.39260101 40.57664108]
[75.72023010 38.97792816]
[72.52280426 24.32267380]
[69.32537842 9.66742039]
[66.12795258 -4.98783445]
[62.93077469 -19.64314270]
[77.58613586 -22.84007835]
[80.78321075 -8.18525791]
[83.98063660 6.46999645]
[87.17805481 21.12525177]
[90.37548065 35.78050613]
[97.70310974 34.18179321]
[98.70927429 19.21557808]
[99.71543884 4.24936104]
[92.00522614 -10.22422314]
[100.91300201 -23.99315643]
[117.27521515 -22.89313889]
[124.25981903 -8.05577660]
[114.68165588 5.25552607]
[113.67549133 20.22174263]
[112.66932678 35.18795776]
[119.66393280 37.89450836]
[125.07703400 23.90528679]
[136.75933838 14.49657440]
[139.06625366 29.31838799]
[133.65315247 43.30760956]
[140.64776611 46.01416016]
[149.97760010 34.26877213]
[159.30744934 22.52338600]
[168.63728333 10.77799797]
[171.16233826 -4.84041071]
[185.13706970 -9.99367714]
[194.46690369 -21.73906517]
[196.99194336 -37.35747528]
[210.96667480 -42.51073837]
[220.29652405 -54.25612640]
[229.62635803 -66.00151825]
[234.74368286 -82.16472626]
[251.69184875 -81.72180176]
[255.95794678 -65.31336975]
[241.37174988 -56.67168045]
[232.04190063 -44.92629242]
[222.71206665 -33.18090439]
[220.85435486 -18.40260315]
[206.21228027 -12.40922832]
[196.88244629 -0.66383994]
[195.02473450 14.11445999]
[180.38267517 20.10783577]
[171.05282593 31.85322380]
[161.72299194 43.59860992]
[152.39315796 55.34399796]
[161.19012451 78.68497467]
[160.71258545 102.15318298]
[152.09335327 122.40005493]
[137.55688477 136.91232300]
[119.97402954 144.32121277]
[123.95349121 158.78370667]
[127.93294525 173.24621582]
[139.05413818 184.49919128]
[134.97061157 198.82308960]
[138.95005798 213.28558350]
[142.92951965 227.74809265]
[160.09294128 233.63473511]
[170.18795776 248.52218628]
[169.32077026 266.33099365]
[158.02830505 279.92489624]
[162.39460754 294.27536011]
[166.76092529 308.62579346]
[172.24433899 315.91079712]
[171.08813477 323.19827271]
[175.26139832 337.60604858]
[179.43466187 352.01382446]
[194.50906372 353.75680542]
[207.73208618 361.11849976]
[217.10388184 372.94995117]
[221.22074890 387.42886353]
[219.48529053 402.34039307]
[212.19291687 415.41580200]
[200.48204041 424.67779541]
[204.65530396 439.08557129]
[208.82856750 453.49334717]
[213.00183105 467.90112305]
[217.17509460 482.30889893]
[221.34835815 496.71667480]
[225.52160645 511.12445068]
[242.51858521 515.26495361]
[253.93051147 530.44757080]
[253.08409119 550.92401123]
[263.90213013 561.31488037]
[270.19473267 563.25762939]
[274.00079346 567.45086670]
[274.86639404 572.13287354]
[285.40155029 582.81048584]
[295.93670654 593.48803711]
[306.47186279 604.16558838]
[317.00704956 614.84313965]
[332.20721436 619.23236084]
[335.63842773 633.72637939]
[346.17358398 644.40393066]
[356.70877075 655.08148193]
[372.13729858 662.10980225]
[369.65472412 678.88098145]
[352.85171509 681.13818359]
[346.03118896 665.61663818]
[335.49603271 654.93908691]
[324.96087646 644.26153564]
[310.51425171 640.63604736]
[306.32946777 625.37829590]
[295.79431152 614.70074463]
[285.25915527 604.02319336]
[274.72399902 593.34564209]
[264.18881226 582.66809082]
[253.51126099 572.13287354]
[242.69322205 561.74200439]
[228.66798401 567.06109619]
[227.46098328 582.01245117]
[226.25398254 596.96380615]
[225.04698181 611.91516113]
[223.83998108 626.86651611]
[222.63298035 641.81793213]
[221.42599487 656.76928711]
[220.62083435 671.74761963]
[220.21812439 686.74224854]
[219.81539917 701.73681641]
[219.41267395 716.73144531]
[219.00996399 731.72601318]
[218.70790100 746.72296143]
[218.50653076 761.72161865]
[218.30514526 776.72027588]
[226.78114319 790.75915527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 232]
[4 231]
[5 230]
[7 229]
[8 228]
[9 227]
[10 226]
[11 225]
[16 224]
[17 223]
[18 222]
[19 221]
[20 220]
[21 219]
[22 218]
[25 188]
[26 187]
[27 186]
[28 185]
[29 184]
[30 183]
[31 182]
[38 175]
[39 174]
[40 173]
[41 171]
[42 170]
[43 169]
[49 165]
[50 164]
[51 163]
[53 161]
[54 160]
[55 159]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[68 80]
[69 79]
[70 78]
[71 77]
[93 104]
[94 103]
[95 102]
[96 101]
[115 124]
[116 123]
[117 122]
[130 154]
[131 153]
[132 152]
[133 151]
[135 149]
[136 148]
[138 146]
[139 145]
[140 144]
[191 217]
[192 216]
[195 215]
[196 214]
[197 213]
[198 212]
[199 211]
[201 209]
[202 208]
[203 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
