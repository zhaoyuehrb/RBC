%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAGGGCCGGAGUGGGGCUGAGGCUUCGGUGCAGAGCUGGAGAGCCGCGGCUGGGACCGGAGUGGGGAGCGCGGCGUGGAGGUGCCACCCGGCGCGGGUGGCGGAGAGAUCAGAAGCCUCUUCCCCAAGCCGAGCCAACCUCAGCGGGGACCCGGGCUCAGGGACGCGGCGGCGGCGGCGGCGACUGCAGUGGCUGGACG\
) } def
/len { sequence length } bind def

/coor [
[-170.20854187 706.14843750]
[-172.68157959 708.14892578]
[-175.34692383 709.03674316]
[-182.67877197 722.12280273]
[-190.01062012 735.20880127]
[-197.34246826 748.29486084]
[-204.67431641 761.38085938]
[-206.14056396 770.40350342]
[-212.22224426 774.61138916]
[-219.75572205 787.58239746]
[-215.92625427 802.68115234]
[-223.75105286 815.72827148]
[-238.16902161 819.28601074]
[-245.70249939 832.25701904]
[-253.23599243 845.22802734]
[-255.96243286 861.96130371]
[-272.79653931 863.97363281]
[-279.39038086 848.35449219]
[-266.20697021 837.69451904]
[-258.67349243 824.72357178]
[-251.14001465 811.75256348]
[-255.19424438 797.46624756]
[-247.73899841 784.20446777]
[-232.72671509 780.04888916]
[-225.19323730 767.07788086]
[-217.76034546 754.04901123]
[-210.42849731 740.96301270]
[-203.09664917 727.87695312]
[-195.76478577 714.79095459]
[-188.43293762 701.70489502]
[-181.50956726 688.39825439]
[-175.00131226 674.88372803]
[-176.45022583 660.05975342]
[-163.49148560 650.98333740]
[-156.98323059 637.46881104]
[-150.47497559 623.95428467]
[-152.73014832 606.55352783]
[-137.43682861 596.30236816]
[-131.13848877 582.68872070]
[-124.84014893 569.07507324]
[-118.54181671 555.46148682]
[-120.21995544 540.66168213]
[-107.40322876 531.38580322]
[-101.10488892 517.77215576]
[-103.62907410 500.40841675]
[-88.49621582 489.92181396]
[-82.40930939 476.21234131]
[-76.32240295 462.50286865]
[-70.23548889 448.79339600]
[-64.14858246 435.08395386]
[-66.05554962 420.31192017]
[-53.38390732 410.83880615]
[-47.29699707 397.12933350]
[-41.21009064 383.41986084]
[-35.12318039 369.71038818]
[-36.04636765 366.30117798]
[-35.36015320 362.27487183]
[-32.79228210 358.39456177]
[-28.42242241 355.51620483]
[-21.70580482 342.10400391]
[-14.98918819 328.69180298]
[-19.91946030 314.68365479]
[-13.29891682 300.98608398]
[1.42753935 295.90975952]
[8.14415646 282.49755859]
[14.86077309 269.08535767]
[7.36733532 251.10890198]
[15.62854290 233.13580322]
[34.73123932 226.92869568]
[40.81814957 213.21922302]
[46.90505981 199.50975037]
[52.99196625 185.80027771]
[51.08499908 171.02825928]
[63.75664139 161.55513000]
[69.84355164 147.84567261]
[75.93045807 134.13619995]
[75.77143860 126.74242401]
[82.21910095 120.26280975]
[88.51744080 106.64917755]
[65.95328522 72.67634583]
[65.95328522 57.67634964]
[65.95328522 42.67634964]
[65.95328522 27.67634773]
[65.95328522 12.67634773]
[65.95328522 -2.32365203]
[64.44693756 -17.24782372]
[61.44946671 -31.94527817]
[58.45199966 -46.64273453]
[55.45452881 -61.34018707]
[52.45705795 -76.03764343]
[49.45959091 -90.73509979]
[46.46212006 -105.43255615]
[43.46465302 -120.13000488]
[34.37511063 -134.44142151]
[45.61099243 -147.13752747]
[60.92133713 -139.85539246]
[58.16210556 -123.12747955]
[61.15957642 -108.43002319]
[64.15704346 -93.73256683]
[67.15451813 -79.03511047]
[70.15198517 -64.33765411]
[73.14945221 -49.64020157]
[76.14691925 -34.94274902]
[79.14439392 -20.24529266]
[84.35755157 -34.31024933]
[94.78011322 -45.09774780]
[108.65740204 -50.79168320]
[123.65312958 -50.43345261]
[137.24269104 -44.08337021]
[147.13825989 -32.81049347]
[151.67387390 -18.51265144]
[150.08593750 -3.59693956]
[142.64178467 9.42552853]
[130.59468079 18.36237335]
[115.97278595 21.70904541]
[101.23775482 18.90212059]
[88.87028503 10.41415215]
[80.95328522 -2.32365203]
[80.95328522 12.67634773]
[80.95328522 27.67634773]
[80.95328522 42.67634964]
[80.95328522 57.67634964]
[80.95328522 72.67634583]
[93.62374878 80.70626068]
[106.29306793 88.73546600]
[119.85755920 82.33197784]
[133.42204285 75.92848969]
[146.98654175 69.52500153]
[151.06692505 64.30974579]
[156.37294006 62.25185013]
[161.07133484 63.14052582]
[174.82749939 57.15988159]
[184.39837646 44.56192017]
[199.15521240 46.58313370]
[212.91136169 40.60248947]
[226.66752625 34.62184525]
[233.86210632 20.28246880]
[249.58796692 17.10806847]
[261.78158569 27.53377151]
[261.08905029 43.56187057]
[248.04162598 52.89698029]
[232.64817810 48.37800217]
[218.89201355 54.35864639]
[205.13584900 60.33929443]
[196.54890442 72.50948334]
[180.80813599 70.91603851]
[167.05198669 76.89668274]
[153.39002991 83.08949280]
[139.82553101 89.49298096]
[126.26104736 95.89646912]
[112.69655609 102.29995728]
[102.13107300 112.94751740]
[95.83273315 126.56114960]
[89.63993073 140.22309875]
[83.55301666 153.93257141]
[77.46611023 167.64204407]
[78.93770599 183.39466858]
[66.70143890 191.88719177]
[60.61452866 205.59666443]
[54.52761841 219.30612183]
[48.44071198 233.01559448]
[54.64196014 241.71081543]
[56.65569687 252.11697388]
[54.18389511 262.34085083]
[47.73846436 270.55059814]
[38.53694153 275.30413818]
[28.27297211 275.80197144]
[21.55635452 289.21417236]
[14.83973789 302.62637329]
[19.59593582 317.45932007]
[12.59326839 330.96551514]
[-1.57699060 335.40841675]
[-8.29360771 348.82061768]
[-15.01022434 362.23281860]
[-21.41371346 375.79730225]
[-27.50062180 389.50677490]
[-33.58752823 403.21624756]
[-39.67443848 416.92568970]
[-38.20284653 432.67831421]
[-50.43911362 441.17083740]
[-56.52602005 454.88031006]
[-62.61293030 468.58978271]
[-68.69983673 482.29925537]
[-74.78675079 496.00872803]
[-70.88838959 508.30807495]
[-76.24535370 519.60363770]
[-87.49126434 524.07049561]
[-93.78959656 537.68414307]
[-92.56195831 553.45764160]
[-104.92818451 561.75982666]
[-111.22651672 575.37341309]
[-117.52485657 588.98706055]
[-123.82318878 602.60070801]
[-120.11563110 614.95892334]
[-125.64675903 626.17016602]
[-136.96044922 630.46252441]
[-143.46870422 643.97705078]
[-149.97695923 657.49157715]
[-148.99356079 673.28222656]
[-161.48678589 681.39196777]
[-167.99504089 694.90655518]
[-167.51383972 699.23651123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 30]
[4 29]
[5 28]
[6 27]
[7 26]
[9 25]
[10 24]
[13 21]
[14 20]
[15 19]
[31 201]
[32 200]
[34 198]
[35 197]
[36 196]
[38 193]
[39 192]
[40 191]
[41 190]
[43 188]
[44 187]
[46 184]
[47 183]
[48 182]
[49 181]
[50 180]
[52 178]
[53 177]
[54 176]
[55 175]
[59 174]
[60 173]
[61 172]
[64 169]
[65 168]
[66 167]
[69 161]
[70 160]
[71 159]
[72 158]
[74 156]
[75 155]
[76 154]
[78 153]
[79 152]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[125 151]
[126 150]
[127 149]
[128 148]
[131 147]
[132 146]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
