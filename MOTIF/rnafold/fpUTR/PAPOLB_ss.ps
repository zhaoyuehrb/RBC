%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUGGGGCUGAGGGGAAGGAGGAGAAGCUCCUGAAGCGGCGGGCGCGCAGCGGGAGUGGGAGUGGGGUCGGACCAGGGCAGCUAGAAGCCCUGCCCUUCCGCCUCAGCGGAUCAUGACCCGGGCGGCGGCCGCGAAGGUCGCGGUGGUGGGGGACGUGCCCUGGCGGGGCGGGCGCUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[68.26170349 93.59023285]
[54.64622498 87.29588318]
[41.03075027 81.00153351]
[30.02175331 89.65095520]
[16.42389488 92.69385529]
[2.90747404 89.59118652]
[-7.89836168 81.00502777]
[-13.91701603 68.65834045]
[-14.02339649 54.98942947]
[-27.53002548 48.46478653]
[-41.03665543 41.94014359]
[-54.54328156 35.41549683]
[-68.04991150 28.89085388]
[-81.55654144 22.36620903]
[-95.06317139 15.84156609]
[-108.62471008 9.43183708]
[-122.24018097 3.13748717]
[-135.85565186 -3.15686321]
[-149.47113037 -9.45121384]
[-163.08660889 -15.74556446]
[-176.70208740 -22.03991508]
[-192.02865601 -10.68417931]
[-213.61210632 -13.35480785]
[-229.19938660 -32.16604614]
[-244.18586731 -32.80266190]
[-254.50808716 -19.41688538]
[-270.61276245 -14.85827446]
[-286.10885620 -20.73033142]
[-294.96871948 -34.53745270]
[-309.96386719 -34.91949844]
[-324.95898438 -35.30154037]
[-339.95413208 -35.68358612]
[-354.94924927 -36.06563187]
[-369.94439697 -36.44767380]
[-384.93951416 -36.82971954]
[-398.71691895 -22.23483467]
[-418.48208618 -22.43722534]
[-431.54888916 -36.86019516]
[-446.54403687 -36.47815323]
[-460.14266968 -28.39187622]
[-473.06286621 -35.80250931]
[-488.05801392 -35.42046356]
[-503.05313110 -35.03842163]
[-516.75177002 -26.02289391]
[-531.28540039 -33.61931992]
[-531.70306396 -50.01314926]
[-517.57513428 -58.33981323]
[-503.43518066 -50.03355408]
[-488.44006348 -50.41559982]
[-473.44491577 -50.79764175]
[-460.91885376 -58.85659027]
[-446.92608643 -51.47328568]
[-431.93093872 -51.85533142]
[-427.10440063 -60.95930099]
[-418.86282349 -67.27812958]
[-408.66033936 -69.61211395]
[-398.33279419 -67.47224426]
[-389.76727295 -61.18080521]
[-384.55749512 -51.82485199]
[-369.56234741 -51.44281006]
[-354.56723022 -51.06076431]
[-339.57208252 -50.67871857]
[-324.57693481 -50.29667664]
[-309.58181763 -49.91463089]
[-294.58666992 -49.53258896]
[-287.47622681 -60.84722137]
[-275.60552979 -67.21689606]
[-262.02969360 -66.88072968]
[-250.30317688 -59.81960297]
[-243.54925537 -47.78914642]
[-228.56275940 -47.15253067]
[-223.80174255 -52.94758224]
[-235.39169312 -62.46981049]
[-225.86929321 -74.05962372]
[-214.27969360 -64.53768921]
[-209.51866150 -70.33274078]
[-213.05130005 -84.91082001]
[-216.58393860 -99.48890686]
[-220.11656189 -114.06698608]
[-223.64920044 -128.64506531]
[-227.18182373 -143.22315979]
[-241.58103943 -149.00608826]
[-249.80258179 -162.16609192]
[-248.68511963 -177.64288330]
[-238.65832520 -189.48530579]
[-223.57771301 -193.13972473]
[-209.24208069 -187.20091248]
[-201.16377258 -173.95249939]
[-202.44908142 -158.48873901]
[-212.60374451 -146.75578308]
[-209.07112122 -132.17770386]
[-205.53848267 -117.59962463]
[-202.00584412 -103.02153778]
[-198.47322083 -88.44345856]
[-194.94058228 -73.86537170]
[-172.28668213 -58.42710495]
[-170.40773010 -35.65538788]
[-156.79225159 -29.36103821]
[-143.17678833 -23.06668854]
[-129.56130981 -16.77233887]
[-115.94583130 -10.47798729]
[-102.33036041 -4.18363714]
[-94.92261505 -4.23082924]
[-88.53852844 2.33493686]
[-75.03189850 8.85958099]
[-61.52526855 15.38422489]
[-48.01863861 21.90886879]
[-34.51200867 28.43351364]
[-21.00538063 34.95815659]
[-7.49875259 41.48279953]
[5.62656450 32.07540894]
[21.79758072 30.55553055]
[36.61612320 37.43150711]
[46.00396729 50.91522598]
[47.32509995 67.38606262]
[60.94057846 73.68041229]
[74.55605316 79.97476196]
[94.17265320 64.64285278]
[121.44332123 67.07848358]
[141.38560486 89.30862427]
[156.34182739 88.16348267]
[171.29804993 87.01834106]
[186.25427246 85.87319946]
[201.19229126 75.12386322]
[216.71107483 83.29656219]
[231.64570618 81.89762115]
[244.66412354 72.90699768]
[258.05752563 79.42359161]
[272.99215698 78.02464294]
[287.92675781 76.62570190]
[302.86138916 75.22676086]
[317.79602051 73.82781219]
[332.73065186 72.42887115]
[344.03329468 61.04335785]
[359.96566772 62.92453766]
[368.30581665 76.62932587]
[362.65591431 91.64458466]
[347.35003662 96.45188904]
[334.12957764 87.36348724]
[319.19494629 88.76243591]
[304.26034546 90.16137695]
[289.32571411 91.56032562]
[274.39108276 92.95926666]
[259.45648193 94.35821533]
[247.50627136 103.24877167]
[233.04464722 96.83224487]
[218.11001587 98.23118591]
[210.14019775 107.35012817]
[197.69340515 108.62574005]
[187.39941406 100.82942963]
[172.44319153 101.97457123]
[157.48696899 103.11971283]
[142.53074646 104.26485443]
[139.21119690 110.99022675]
[152.66183472 117.62953949]
[146.02229309 131.08006287]
[132.57211304 124.44096375]
[129.25256348 131.16633606]
[137.43994141 143.73481750]
[145.62733459 156.30331421]
[153.81471252 168.87179565]
[162.00209045 181.44027710]
[170.18946838 194.00875854]
[175.93385315 197.35591125]
[178.69429016 202.35641479]
[178.43301392 207.14596558]
[186.18888855 219.98521423]
[199.55400085 230.41641235]
[193.23030090 246.14686584]
[176.36402893 244.42491150]
[173.34963989 227.74108887]
[165.59376526 214.90184021]
[157.62098694 202.19613647]
[149.43360901 189.62765503]
[141.24621582 177.05917358]
[133.05883789 164.49069214]
[124.87145996 151.92221069]
[116.68408203 139.35371399]
[105.35674286 141.10102844]
[94.32611084 139.75007629]
[84.39846039 135.58769226]
[76.24897766 129.09928894]
[70.37613678 120.92012787]
[67.07238007 111.77707672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 117]
[2 116]
[3 115]
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[14 105]
[15 104]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[21 97]
[24 71]
[25 70]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[35 59]
[38 53]
[39 52]
[41 50]
[42 49]
[43 48]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[120 153]
[121 152]
[122 151]
[123 150]
[125 147]
[126 146]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[158 178]
[159 177]
[160 176]
[161 175]
[162 174]
[163 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
