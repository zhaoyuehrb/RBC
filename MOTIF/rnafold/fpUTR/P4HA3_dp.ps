%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (P4HA3)
} def

/sequence { (\
GAGGGCGGGAGCGGCUGCCGCCGCGCGGCCAGGACUGUCUGAGGGGAAGUUCGCGAGCGCUGGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 16 0.005483593 ubox
2 61 0.006688084 ubox
2 65 0.018865807 ubox
3 15 0.005419647 ubox
3 16 0.017930011 ubox
3 19 0.053675351 ubox
3 22 0.013085238 ubox
3 30 0.019524520 ubox
3 60 0.006204519 ubox
3 64 0.019358377 ubox
3 65 0.007728213 ubox
4 15 0.019435416 ubox
4 16 0.007709275 ubox
4 18 0.038217492 ubox
4 19 0.967829113 ubox
4 21 0.009279928 ubox
4 22 0.235892785 ubox
4 29 0.019510256 ubox
4 30 0.022733349 ubox
4 61 0.012236339 ubox
4 64 0.005276773 ubox
4 65 0.023777441 ubox
5 12 0.007713830 ubox
5 15 0.009071062 ubox
5 18 0.969423337 ubox
5 21 0.236307120 ubox
5 24 0.013978500 ubox
5 26 0.010219962 ubox
5 29 0.022790019 ubox
5 58 0.005943657 ubox
5 60 0.012906266 ubox
5 64 0.026037341 ubox
6 11 0.007717698 ubox
6 13 0.019873844 ubox
6 14 0.008563715 ubox
6 17 0.970134546 ubox
6 20 0.236496133 ubox
6 23 0.013991894 ubox
6 25 0.010225449 ubox
6 27 0.019908777 ubox
6 28 0.022723791 ubox
6 57 0.005918969 ubox
6 59 0.012917603 ubox
6 62 0.005103774 ubox
6 63 0.026062168 ubox
7 12 0.020195798 ubox
7 16 0.969188683 ubox
7 19 0.236692400 ubox
7 22 0.014020015 ubox
7 24 0.006726406 ubox
7 26 0.019822825 ubox
7 58 0.012883558 ubox
7 61 0.005030145 ubox
8 15 0.968914818 ubox
8 16 0.016913021 ubox
8 18 0.236630129 ubox
8 21 0.013897661 ubox
8 60 0.004894855 ubox
8 61 0.025790687 ubox
9 15 0.024209689 ubox
9 18 0.003396857 ubox
9 60 0.025685364 ubox
10 16 0.233275561 ubox
11 15 0.228856607 ubox
11 18 0.014217135 ubox
11 21 0.006124060 ubox
11 24 0.033206277 ubox
11 54 0.014053998 ubox
11 58 0.024931061 ubox
12 17 0.014487624 ubox
12 20 0.006561390 ubox
12 23 0.033464034 ubox
12 53 0.014045265 ubox
12 57 0.024952552 ubox
13 19 0.006966634 ubox
13 22 0.033517496 ubox
13 30 0.024897927 ubox
13 52 0.005474145 ubox
14 18 0.006855159 ubox
14 21 0.033517909 ubox
14 29 0.024930857 ubox
14 51 0.003200769 ubox
14 54 0.013376910 ubox
15 20 0.033460938 ubox
15 28 0.024929279 ubox
15 32 0.003706228 ubox
15 49 0.003946346 ubox
15 53 0.013374045 ubox
16 27 0.024906627 ubox
16 31 0.005189428 ubox
16 48 0.003645275 ubox
17 26 0.024919652 ubox
17 29 0.014016181 ubox
17 30 0.003824494 ubox
17 64 0.013385036 ubox
18 25 0.024640429 ubox
18 28 0.014572170 ubox
18 63 0.013408295 ubox
19 25 0.003438859 ubox
19 27 0.014579251 ubox
19 62 0.013406616 ubox
20 24 0.004550796 ubox
20 26 0.014730621 ubox
20 61 0.011204644 ubox
20 64 0.969090033 ubox
21 25 0.014624047 ubox
21 63 0.970292156 ubox
22 59 0.006004263 ubox
22 62 0.969804743 ubox
23 58 0.007773674 ubox
23 60 0.971474907 ubox
23 61 0.220512451 ubox
23 64 0.027219716 ubox
24 55 0.009674069 ubox
24 57 0.007768207 ubox
24 59 0.992737145 ubox
24 62 0.003645386 ubox
24 63 0.027111345 ubox
25 54 0.009935141 ubox
25 58 0.992780283 ubox
25 60 0.091325197 ubox
26 53 0.009941865 ubox
26 55 0.008824233 ubox
26 57 0.992307220 ubox
26 59 0.091354563 ubox
26 62 0.022782802 ubox
27 52 0.008945805 ubox
27 54 0.013217031 ubox
27 58 0.088409039 ubox
27 61 0.022934344 ubox
27 65 0.053126421 ubox
28 51 0.006099353 ubox
28 54 0.834419262 ubox
28 58 0.023161089 ubox
28 60 0.022949400 ubox
28 64 0.059086569 ubox
29 53 0.831826449 ubox
29 57 0.032272315 ubox
29 59 0.022910353 ubox
29 63 0.059114317 ubox
30 41 0.013314194 ubox
30 62 0.059114433 ubox
31 40 0.013466493 ubox
31 51 0.018678560 ubox
31 61 0.058814278 ubox
32 39 0.013452372 ubox
32 40 0.003327286 ubox
32 50 0.011697901 ubox
32 51 0.012073183 ubox
32 52 0.975186592 ubox
32 60 0.056893874 ubox
33 38 0.009881738 ubox
33 39 0.003500779 ubox
33 50 0.008180836 ubox
33 51 0.995925889 ubox
33 52 0.035707660 ubox
34 50 0.997426746 ubox
34 51 0.027714399 ubox
35 43 0.003587583 ubox
35 44 0.003877518 ubox
35 45 0.004095405 ubox
35 46 0.004438768 ubox
35 49 0.997944776 ubox
35 57 0.050842207 ubox
36 42 0.003717851 ubox
36 43 0.003967394 ubox
36 44 0.004197551 ubox
36 45 0.004966061 ubox
36 48 0.985048699 ubox
36 55 0.014580657 ubox
36 56 0.047253068 ubox
36 59 0.010652500 ubox
37 54 0.028056197 ubox
37 58 0.011107584 ubox
38 44 0.020144639 ubox
38 45 0.088249861 ubox
38 46 0.326703466 ubox
38 47 0.855751548 ubox
38 53 0.025379841 ubox
38 56 0.022509883 ubox
38 57 0.009404813 ubox
39 43 0.022223841 ubox
39 44 0.093947991 ubox
39 45 0.400355807 ubox
39 46 0.897857379 ubox
39 49 0.007363370 ubox
39 55 0.024530901 ubox
39 57 0.003210038 ubox
40 44 0.361070366 ubox
40 45 0.881052643 ubox
40 48 0.007493317 ubox
40 53 0.041500035 ubox
40 55 0.010625965 ubox
41 51 0.003572326 ubox
41 52 0.052946551 ubox
41 54 0.011833702 ubox
42 50 0.003785716 ubox
42 51 0.052930498 ubox
43 50 0.049983980 ubox
43 52 0.016448343 ubox
44 51 0.015980345 ubox
44 52 0.005774495 ubox
45 50 0.014509168 ubox
45 51 0.005376157 ubox
45 52 0.004618967 ubox
46 50 0.003516958 ubox
46 51 0.003656510 ubox
46 52 0.004362714 ubox
47 51 0.003804721 ubox
53 58 0.003549900 ubox
53 60 0.016592092 ubox
53 64 0.015158820 ubox
54 59 0.016624886 ubox
54 63 0.015170291 ubox
56 65 0.024517951 ubox
57 64 0.026830424 ubox
58 63 0.026832321 ubox
4 19 0.9500000 lbox
5 18 0.9500000 lbox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
20 64 0.9500000 lbox
21 63 0.9500000 lbox
22 62 0.9500000 lbox
23 60 0.9500000 lbox
24 59 0.9500000 lbox
25 58 0.9500000 lbox
26 57 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
