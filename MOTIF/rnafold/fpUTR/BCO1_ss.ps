%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUGUAAAGAGAUCCAGGGCUCUUGGAGAGGGACAAGUGAGAGCCAGCCAAAAAGGAAAAAGCAAAGGCAGAAACGGCAUCAGGAGAGACAGAGAUGUGAAGGAGGGAAGGAGCAGGAGAGCAGGAAGGAAACGCAGGAGGAGGGAGCAGCAUCUCCUGUGAACACAGAGGAGCACCUGUUUGCUGUUAAAAUCGAUCUCCCUCGGCACCCUGAGCA\
) } def
/len { sequence length } bind def

/coor [
[170.32688904 101.54707336]
[169.51242065 110.78370667]
[167.49012756 119.83297729]
[164.29516602 128.53762817]
[159.98303223 136.74642944]
[154.62866211 144.31674194]
[148.32508850 151.11701965]
[141.18185425 157.02911377]
[133.32304382 161.95028687]
[124.88523102 165.79505920]
[116.01502991 168.49659729]
[106.86655426 170.00796509]
[97.59877014 170.30290222]
[88.37271118 169.37629700]
[79.34867859 167.24423218]
[70.68347168 163.94377136]
[62.52766037 159.53224182]
[55.02295303 154.08631897]
[48.29974365 147.70060730]
[36.25363159 156.63879395]
[24.20752335 165.57698059]
[12.16141319 174.51516724]
[0.11530366 183.45336914]
[-11.93080616 192.39155579]
[-23.97691536 201.32974243]
[-36.02302551 210.26792908]
[-33.09644699 225.24784851]
[-36.96754074 240.01190186]
[-46.86769485 251.62869263]
[-60.83123016 257.79168701]
[-76.08567810 257.27722168]
[-89.60224915 250.18742371]
[-98.69722748 237.93002319]
[-101.56478882 222.93869019]
[-97.63558960 208.18998718]
[-87.68975830 196.61228943]
[-73.70206451 190.50433350]
[-58.44976425 191.07887268]
[-44.96121597 198.22181702]
[-32.91510773 189.28363037]
[-20.86899567 180.34544373]
[-8.82288647 171.40725708]
[3.22322369 162.46907043]
[15.26933384 153.53086853]
[27.31544304 144.59268188]
[39.36155319 135.65449524]
[31.98815536 117.96254730]
[29.66413307 98.93701172]
[14.77550411 97.11253357]
[-0.11312511 95.28805542]
[-6.71608639 108.91448212]
[-17.38754654 119.65686035]
[-30.96994400 126.34992981]
[-45.98996353 128.26768494]
[-60.81834030 125.20208740]
[-73.84661102 117.48568726]
[-83.66156006 105.95549011]
[-89.19853973 91.86220551]
[-89.85694122 76.73457336]
[-85.56533813 62.21352386]
[-76.78925323 49.87419128]
[-64.48065948 41.05505753]
[-49.97469330 36.71274948]
[-34.84485245 37.31829071]
[-20.73231316 42.80599976]
[-9.16789627 52.58061218]
[-1.40602362 65.58184052]
[1.71135545 80.39942169]
[16.59998512 82.22389984]
[31.48861313 84.04838562]
[38.93456268 65.08186340]
[51.50404739 49.04505157]
[68.14246368 37.28348541]
[87.45379639 30.78398323]
[107.81778717 30.09187126]
[127.52584839 35.26522064]
[144.92442322 45.86997223]
[158.55374146 61.01636124]
[171.85475159 54.08218002]
[178.01316833 47.34417725]
[185.39668274 47.14547729]
[198.79580688 40.40280914]
[212.19491577 33.66014099]
[225.59403992 26.91747475]
[238.99316406 20.17480469]
[224.07115173 18.64725685]
[211.24621582 10.86772537]
[202.99699402 -1.66026187]
[200.91780090 -16.51546097]
[205.41046143 -30.82685471]
[215.60670471 -41.82852554]
[229.53591919 -47.39421844]
[244.50605774 -46.44826508]
[257.62390137 -39.17348862]
[266.35418701 -26.97586060]
[269.00964355 -12.21278191]
[265.07708740 2.26253724]
[255.31715393 13.65201473]
[269.67321777 9.30418015]
[284.02926636 4.95634508]
[288.97259521 -7.56892014]
[300.06417847 -14.85543537]
[313.13366699 -14.43147373]
[323.41894531 -6.67559624]
[337.83587646 -10.81705093]
[352.25283813 -14.95850563]
[366.66976929 -19.09996033]
[381.08673096 -23.24141502]
[395.50366211 -27.38286972]
[404.04702759 -44.29736710]
[421.93569946 -49.50057220]
[437.66906738 -40.13391495]
[451.96127319 -44.68723679]
[455.32736206 -59.60757446]
[465.64166260 -70.76609039]
[480.06054688 -75.23400116]
[494.68200684 -71.90702820]
[505.60147095 -61.77633667]
[519.89367676 -66.32965851]
[530.69396973 -77.89097595]
[545.16937256 -74.38218689]
[559.46160889 -78.93550873]
[573.75378418 -83.48883057]
[588.04602051 -88.04215240]
[602.33825684 -92.59546661]
[616.63043213 -97.14878845]
[627.43072510 -108.71010590]
[641.90618896 -105.20132446]
[656.19836426 -109.75463867]
[670.49060059 -114.30796051]
[675.72546387 -137.47836304]
[693.74017334 -152.77774048]
[717.21356201 -154.17709351]
[736.71887207 -141.25846863]
[750.11798096 -148.00112915]
[763.51708984 -154.74380493]
[776.91619873 -161.48646545]
[790.31530762 -168.22914124]
[803.71441650 -174.97180176]
[817.11358643 -181.71447754]
[830.51269531 -188.45713806]
[843.91180420 -195.19981384]
[844.10980225 -210.50404358]
[851.40753174 -223.95771790]
[864.12805176 -232.46929932]
[879.34826660 -234.08287048]
[893.57067871 -228.42765808]
[903.52709961 -216.80317688]
[906.92962646 -201.88066101]
[902.99633789 -187.08918762]
[892.63110352 -175.82772827]
[878.21575928 -170.68408203]
[863.06286621 -172.84022522]
[850.65447998 -181.80068970]
[837.25537109 -175.05801392]
[823.85626221 -168.31535339]
[810.45709229 -161.57267761]
[797.05798340 -154.83001709]
[783.65887451 -148.08734131]
[770.25976562 -141.34468079]
[756.86065674 -134.60200500]
[743.46148682 -127.85934448]
[744.67559814 -120.86310577]
[744.52557373 -113.75418854]
[743.01342773 -106.79640961]
[740.19152832 -100.24870300]
[736.16119385 -94.35546112]
[731.06884766 -89.33740997]
[725.10083008 -85.38338470]
[718.47650146 -82.64317322]
[711.44024658 -81.22187042]
[704.25225830 -81.17586517]
[697.17926025 -82.51057434]
[690.48437500 -85.18014526]
[684.41729736 -89.08898163]
[679.20513916 -94.09519958]
[675.04388428 -100.01575470]
[660.75170898 -95.46243286]
[646.45947266 -90.90911102]
[636.68145752 -79.67347717]
[621.18377686 -82.85658264]
[606.89154053 -78.30326080]
[592.59936523 -73.74993896]
[578.30712891 -69.19661713]
[564.01495361 -64.64329529]
[549.72271729 -60.08997726]
[539.94470215 -48.85434723]
[524.44702148 -52.03744507]
[510.15478516 -47.48412704]
[507.10791016 -32.90393066]
[497.10556030 -21.73212433]
[482.75942993 -17.03585625]
[467.89120483 -20.17153740]
[456.51458740 -30.39502525]
[442.22238159 -25.84170532]
[439.30856323 -14.81819725]
[431.35479736 -6.48196983]
[420.25161743 -2.98191214]
[408.72012329 -5.29698515]
[399.64514160 -12.96592236]
[385.22817993 -8.82446766]
[370.81124878 -4.68301344]
[356.39428711 -0.54155874]
[341.97735596 3.59989595]
[327.56039429 7.74135065]
[320.04733276 22.79068375]
[303.65078735 27.84663773]
[288.37710571 19.31240082]
[274.02102661 23.66023636]
[259.66497803 28.00806999]
[245.73582458 33.57392502]
[232.33671570 40.31659317]
[218.93759155 47.05926132]
[205.53846741 53.80192947]
[192.13934326 60.54459763]
[178.78894043 67.38320160]
[165.48791504 74.31738281]
[168.29699707 83.15411377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[48 70]
[49 69]
[50 68]
[78 217]
[79 216]
[81 215]
[82 214]
[83 213]
[84 212]
[85 211]
[98 210]
[99 209]
[100 208]
[104 205]
[105 204]
[106 203]
[107 202]
[108 201]
[109 200]
[112 195]
[113 194]
[118 189]
[119 188]
[121 186]
[122 185]
[123 184]
[124 183]
[125 182]
[126 181]
[128 179]
[129 178]
[130 177]
[134 162]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
