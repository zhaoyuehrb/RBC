%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCAAAAAGUCCAAGGGAGUAAGCUUGGAGGAAACGCUGGGUUCAACUUGAAGCCCUUCCACAGACAUUAAGUCGGUGAAAACCAUUCACUAGGAGAGGAGAAACACA\
) } def
/len { sequence length } bind def

/coor [
[97.78884125 266.68002319]
[109.24006653 256.34207153]
[106.70505524 241.55784607]
[104.17004395 226.77360535]
[101.63502502 211.98936462]
[92.39891052 209.08985901]
[84.86053467 202.92356873]
[80.13099670 194.34301758]
[78.92823029 184.56044006]
[81.46837616 174.97656250]
[87.42848206 166.97998047]
[95.98686218 161.74610901]
[95.13823700 146.77012634]
[94.28961182 131.79415894]
[77.15217590 122.83535767]
[68.20273590 105.69303131]
[70.64851379 86.51049042]
[58.84579849 77.25328064]
[47.04308319 67.99607086]
[35.24036789 58.73886490]
[23.43765068 49.48165512]
[12.54856777 51.42623138]
[2.62329531 47.06815720]
[-3.07603407 38.10879898]
[-2.82699871 27.71471024]
[-14.08708286 17.80458832]
[-25.34716797 7.89446783]
[-36.60725403 -2.01565289]
[-52.07849884 -5.32490110]
[-56.52067184 -19.54166412]
[-67.78075409 -29.45178604]
[-79.04084015 -39.36190796]
[-96.40187073 -37.89413071]
[-109.24928284 -49.15979767]
[-110.03036499 -65.89294434]
[-121.56638336 -75.48044586]
[-133.10240173 -85.06795502]
[-149.14541626 -85.03205872]
[-159.06327820 -97.64219666]
[-155.24784851 -113.22494507]
[-140.62600708 -119.82655334]
[-126.41437531 -112.38283539]
[-123.51490021 -96.60397339]
[-111.97887421 -87.01647186]
[-100.44285583 -77.42896271]
[-87.81664276 -80.39579773]
[-75.62253571 -75.43231964]
[-68.44738007 -64.16132355]
[-69.13072205 -50.62199020]
[-57.87063217 -40.71187210]
[-46.61054993 -30.80175018]
[-31.94470024 -28.20133972]
[-26.69713211 -13.27573776]
[-15.43704700 -3.36561656]
[-4.17696238 6.54450417]
[7.08312225 16.45462418]
[26.20118141 18.69841957]
[32.69485855 37.67893982]
[44.49757385 46.93614960]
[56.30028915 56.19335938]
[68.10300446 65.45056915]
[79.90572357 74.70777893]
[88.97905731 67.93547058]
[100.32829285 64.49304199]
[112.70977783 65.13300323]
[124.63875580 70.13848877]
[136.17477417 60.55097961]
[147.71080017 50.96347809]
[150.61027527 35.18461227]
[164.82191467 27.74089241]
[179.44375610 34.34250259]
[183.25917053 49.92525482]
[173.34130859 62.53539276]
[157.29829407 62.49949646]
[145.76228333 72.08699799]
[134.22625732 81.67450714]
[138.61860657 96.01700592]
[153.54505920 97.50046539]
[168.47152710 98.98392487]
[183.39799500 100.46738434]
[198.32446289 101.95084381]
[213.25093079 103.43430328]
[226.52261353 94.42088318]
[241.80102539 99.31475067]
[247.36584473 114.36174774]
[238.94825745 128.01910400]
[223.00547791 129.81007385]
[211.76747131 118.36077118]
[196.84100342 116.87731171]
[181.91453552 115.39385223]
[166.98806763 113.91039276]
[152.06159973 112.42693329]
[137.13514709 110.94347382]
[125.16270447 125.05374146]
[109.26558685 130.94552612]
[110.11421204 145.92150879]
[110.96283722 160.89747620]
[127.54924774 173.58193970]
[129.67506409 194.06712341]
[116.41926575 209.45436096]
[118.95427704 224.23860168]
[121.48928833 239.02282715]
[124.02430725 253.80706787]
[138.26538086 259.73962402]
[147.01956177 272.44268799]
[147.49339294 287.86279297]
[139.53570557 301.07937622]
[125.68575287 307.87515259]
[110.36300659 306.08154297]
[98.45690155 296.27093506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 103]
[3 102]
[4 101]
[5 100]
[12 97]
[13 96]
[14 95]
[17 62]
[18 61]
[19 60]
[20 59]
[21 58]
[25 56]
[26 55]
[27 54]
[28 53]
[30 51]
[31 50]
[32 49]
[35 45]
[36 44]
[37 43]
[66 76]
[67 75]
[68 74]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
