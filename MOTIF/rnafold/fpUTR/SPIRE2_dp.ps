%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPIRE2)
} def

/sequence { (\
CGCGGCUGCAUGGACGCGGGUCCGGCGCGCGGGAGGCGAUGACGGCCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006945448 ubox
1 12 0.017897591 ubox
1 18 0.012080825 ubox
1 24 0.008374850 ubox
1 27 0.036326964 ubox
1 29 0.027959413 ubox
1 31 0.901701430 ubox
1 50 0.040027535 ubox
2 7 0.005026411 ubox
2 9 0.167899406 ubox
2 11 0.009831142 ubox
2 15 0.005634234 ubox
2 17 0.036217084 ubox
2 23 0.008482363 ubox
2 26 0.038463527 ubox
2 28 0.116627496 ubox
2 30 0.915116900 ubox
2 49 0.042120336 ubox
2 51 0.051939336 ubox
3 8 0.167847529 ubox
3 12 0.025656856 ubox
3 16 0.036776388 ubox
3 24 0.026634139 ubox
3 25 0.029675744 ubox
3 27 0.116416409 ubox
3 29 0.914388321 ubox
3 31 0.075597283 ubox
3 50 0.051925520 ubox
4 11 0.023674686 ubox
4 15 0.041163666 ubox
4 22 0.013030316 ubox
4 23 0.036184604 ubox
4 26 0.077972179 ubox
4 28 0.780227259 ubox
4 30 0.075769831 ubox
4 47 0.050912410 ubox
4 48 0.005780430 ubox
4 49 0.034388490 ubox
4 52 0.029423302 ubox
5 17 0.004625783 ubox
5 21 0.013384201 ubox
5 22 0.036047629 ubox
5 26 0.362277459 ubox
5 28 0.559231188 ubox
5 30 0.054764874 ubox
5 46 0.052514437 ubox
5 47 0.005385396 ubox
5 48 0.025481355 ubox
5 51 0.028933606 ubox
6 13 0.038724597 ubox
6 16 0.004608574 ubox
6 19 0.036541456 ubox
6 20 0.018558815 ubox
6 25 0.369766431 ubox
6 27 0.713952264 ubox
6 29 0.056105285 ubox
6 32 0.011240192 ubox
6 45 0.053898389 ubox
6 50 0.028841491 ubox
7 12 0.036773796 ubox
7 18 0.039494315 ubox
7 19 0.013091887 ubox
7 24 0.323388669 ubox
7 27 0.452612851 ubox
7 29 0.013670481 ubox
7 31 0.011395504 ubox
7 44 0.053673204 ubox
8 15 0.009193486 ubox
8 17 0.044910445 ubox
8 21 0.006172883 ubox
8 23 0.101823197 ubox
8 26 0.900537773 ubox
8 28 0.048250284 ubox
8 30 0.011347547 ubox
8 43 0.052693095 ubox
8 46 0.004615139 ubox
9 16 0.044904109 ubox
9 20 0.008203583 ubox
9 25 0.900259476 ubox
9 27 0.048553201 ubox
9 29 0.011261211 ubox
9 41 0.051532615 ubox
9 45 0.004614134 ubox
10 21 0.019948767 ubox
10 40 0.050939746 ubox
11 18 0.013471089 ubox
11 20 0.019961456 ubox
11 24 0.821837216 ubox
11 27 0.004031129 ubox
11 38 0.012624158 ubox
11 39 0.047350420 ubox
12 17 0.014587195 ubox
12 22 0.007817726 ubox
12 23 0.973284599 ubox
12 37 0.021532980 ubox
12 52 0.038212293 ubox
13 21 0.004280771 ubox
13 22 0.978416880 ubox
13 51 0.038230135 ubox
14 21 0.978253906 ubox
15 20 0.977931718 ubox
15 27 0.003217720 ubox
15 31 0.029088224 ubox
15 38 0.017392649 ubox
15 50 0.038800403 ubox
16 26 0.003279740 ubox
16 30 0.029148448 ubox
16 37 0.017446879 ubox
16 49 0.038854465 ubox
16 51 0.188962685 ubox
17 25 0.003208138 ubox
17 29 0.029148712 ubox
17 36 0.017420609 ubox
17 50 0.189520755 ubox
18 28 0.029153999 ubox
18 48 0.047173994 ubox
18 49 0.191489795 ubox
19 47 0.049345758 ubox
19 48 0.191395146 ubox
20 26 0.029081230 ubox
20 46 0.050472126 ubox
20 47 0.190993721 ubox
21 25 0.027206804 ubox
21 33 0.015351098 ubox
21 34 0.005231161 ubox
21 45 0.009976159 ubox
22 32 0.018252289 ubox
22 33 0.005328696 ubox
22 44 0.008143090 ubox
22 45 0.197327472 ubox
23 31 0.018305327 ubox
23 32 0.005197349 ubox
23 44 0.197632552 ubox
24 30 0.018315932 ubox
24 43 0.195966997 ubox
24 47 0.004034497 ubox
25 37 0.003303202 ubox
25 46 0.004052124 ubox
26 36 0.003308266 ubox
26 38 0.025982440 ubox
26 41 0.155688714 ubox
26 45 0.003716593 ubox
27 37 0.026469208 ubox
27 40 0.168233513 ubox
27 51 0.009637332 ubox
28 36 0.026467115 ubox
28 38 0.200450771 ubox
28 50 0.009676269 ubox
29 37 0.200732056 ubox
29 49 0.009338989 ubox
29 51 0.329562965 ubox
30 36 0.200706592 ubox
30 38 0.006194728 ubox
30 50 0.330929848 ubox
31 37 0.006224235 ubox
31 48 0.013805038 ubox
31 49 0.326814430 ubox
31 52 0.021123749 ubox
32 47 0.014301331 ubox
32 48 0.319991940 ubox
32 49 0.914588679 ubox
32 51 0.024762072 ubox
32 52 0.059533096 ubox
33 46 0.014552050 ubox
33 47 0.237037320 ubox
33 48 0.917536110 ubox
33 51 0.060175921 ubox
35 47 0.946440001 ubox
35 48 0.011305505 ubox
35 49 0.009013993 ubox
35 52 0.066835973 ubox
36 46 0.970648720 ubox
36 47 0.008548980 ubox
36 48 0.008431718 ubox
36 51 0.067412356 ubox
37 44 0.179216410 ubox
37 45 0.959025240 ubox
37 50 0.067413057 ubox
38 43 0.228167203 ubox
38 49 0.066911699 ubox
44 52 0.007836851 ubox
45 51 0.007912232 ubox
46 50 0.007855058 ubox
1 31 0.9500000 lbox
2 30 0.9500000 lbox
3 29 0.9500000 lbox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
showpage
end
%%EOF
