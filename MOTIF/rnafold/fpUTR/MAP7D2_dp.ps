%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAP7D2)
} def

/sequence { (\
AUCGCACGUGCACGCCCUGCGCGCGUGCUGCGUGAGGACGCGUGCGCAUGCGGACGCGCGCGGGUUCGGUGCGGCGCGGCGGGCUUGGCAGUGCGCCUGUGCGGCCGGCGCAUCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 113 0.003586171 ubox
2 53 0.004929043 ubox
2 82 0.007083532 ubox
2 104 0.701811815 ubox
2 112 0.003670356 ubox
3 52 0.008204850 ubox
3 62 0.003535743 ubox
3 81 0.009697898 ubox
3 95 0.009541163 ubox
3 99 0.003381274 ubox
3 101 0.044243934 ubox
3 103 0.986888704 ubox
3 110 0.003705256 ubox
3 117 0.006282329 ubox
4 11 0.006684995 ubox
4 51 0.010723031 ubox
4 61 0.006036186 ubox
4 80 0.009917067 ubox
4 94 0.010080207 ubox
4 98 0.004083848 ubox
4 100 0.081393307 ubox
4 102 0.992072001 ubox
4 109 0.003830794 ubox
4 116 0.006433790 ubox
5 10 0.006682699 ubox
5 50 0.010728496 ubox
5 60 0.006056554 ubox
5 79 0.009912326 ubox
5 93 0.010082242 ubox
5 99 0.088415186 ubox
5 101 0.992085639 ubox
5 108 0.003823916 ubox
6 49 0.010680387 ubox
6 92 0.010081913 ubox
6 98 0.088820865 ubox
6 100 0.991645455 ubox
7 58 0.006071570 ubox
7 78 0.009810046 ubox
7 91 0.010058063 ubox
7 99 0.982436800 ubox
7 107 0.003653897 ubox
8 47 0.010749184 ubox
8 57 0.006086372 ubox
8 77 0.009879280 ubox
8 96 0.972382258 ubox
8 98 0.204125681 ubox
8 106 0.003563515 ubox
9 46 0.010752097 ubox
9 56 0.006084084 ubox
9 76 0.009873598 ubox
9 90 0.008948611 ubox
9 95 0.993177806 ubox
10 45 0.010757086 ubox
10 55 0.006081057 ubox
10 75 0.009865357 ubox
10 89 0.009322109 ubox
10 94 0.999699279 ubox
10 96 0.009678450 ubox
11 44 0.010757310 ubox
11 74 0.009857775 ubox
11 87 0.005302767 ubox
11 88 0.008551399 ubox
11 93 0.999730282 ubox
11 95 0.009165764 ubox
12 43 0.010755163 ubox
12 86 0.006420255 ubox
12 92 0.999484853 ubox
13 42 0.010756831 ubox
13 52 0.006123179 ubox
13 71 0.003246106 ubox
13 73 0.009268666 ubox
13 91 0.998652265 ubox
13 93 0.006387026 ubox
14 41 0.010756659 ubox
14 51 0.006124081 ubox
14 70 0.003255742 ubox
14 72 0.009302599 ubox
14 84 0.010386405 ubox
14 89 0.995298509 ubox
14 92 0.004437671 ubox
15 40 0.010709746 ubox
15 50 0.006115852 ubox
15 69 0.003260509 ubox
15 71 0.009296134 ubox
15 83 0.010377931 ubox
15 88 0.998330063 ubox
15 91 0.004372838 ubox
16 37 0.010553335 ubox
16 64 0.009896517 ubox
16 82 0.010341933 ubox
16 83 0.003661400 ubox
16 87 0.997581568 ubox
16 88 0.053681973 ubox
17 36 0.010608700 ubox
17 63 0.010198251 ubox
17 81 0.009555026 ubox
17 82 0.004921935 ubox
17 83 0.011724844 ubox
17 87 0.057440852 ubox
18 35 0.010561692 ubox
18 48 0.004997387 ubox
18 62 0.010248591 ubox
18 81 0.004778473 ubox
18 82 0.010620398 ubox
19 45 0.003360385 ubox
19 47 0.005152637 ubox
19 61 0.010433027 ubox
19 80 0.006726712 ubox
19 84 0.999301130 ubox
20 34 0.010664686 ubox
20 44 0.003361738 ubox
20 46 0.005152905 ubox
20 60 0.010433361 ubox
20 79 0.006704146 ubox
20 81 0.027455990 ubox
20 83 0.999304172 ubox
21 33 0.010742770 ubox
21 43 0.003364287 ubox
21 45 0.005150498 ubox
21 59 0.010433319 ubox
21 80 0.038396571 ubox
22 32 0.010748166 ubox
22 42 0.003372367 ubox
22 44 0.005145988 ubox
22 58 0.010433238 ubox
22 78 0.003940933 ubox
22 79 0.038445979 ubox
22 81 0.998768048 ubox
23 31 0.010748206 ubox
23 41 0.003405525 ubox
23 43 0.005122227 ubox
23 57 0.010432093 ubox
23 77 0.003897954 ubox
23 80 0.997378101 ubox
24 30 0.010743985 ubox
24 40 0.003406395 ubox
24 42 0.005123497 ubox
24 56 0.010431963 ubox
24 76 0.003860537 ubox
24 78 0.707049059 ubox
24 79 0.706617308 ubox
25 29 0.006628983 ubox
25 39 0.003407873 ubox
25 41 0.005115497 ubox
25 55 0.010413107 ubox
25 77 0.997684988 ubox
26 38 0.003399527 ubox
26 40 0.005111081 ubox
26 54 0.010261746 ubox
26 76 0.999207809 ubox
26 78 0.009205651 ubox
27 39 0.005102112 ubox
27 75 0.999776994 ubox
27 77 0.010224102 ubox
28 36 0.003520741 ubox
28 37 0.005001251 ubox
28 53 0.009990490 ubox
28 74 0.999799321 ubox
28 76 0.010199627 ubox
29 35 0.003520485 ubox
29 36 0.004913546 ubox
29 52 0.010004691 ubox
29 73 0.999019351 ubox
30 51 0.010010139 ubox
30 72 0.999734337 ubox
31 50 0.010009735 ubox
31 71 0.999525196 ubox
31 73 0.012627550 ubox
32 49 0.009987409 ubox
32 70 0.898376264 ubox
32 72 0.013425091 ubox
33 48 0.009989490 ubox
33 68 0.143190304 ubox
33 69 0.387571820 ubox
33 71 0.013386937 ubox
34 47 0.009899105 ubox
34 66 0.003830888 ubox
34 67 0.157648096 ubox
34 70 0.025001868 ubox
35 65 0.004182519 ubox
35 66 0.155249282 ubox
36 65 0.146355846 ubox
36 66 0.011318387 ubox
36 67 0.984345390 ubox
37 65 0.008420052 ubox
37 66 0.986174981 ubox
37 67 0.025098719 ubox
38 65 0.987952589 ubox
38 66 0.017928803 ubox
39 46 0.006197610 ubox
39 62 0.149232186 ubox
39 64 0.988311285 ubox
40 45 0.006053882 ubox
40 61 0.149935548 ubox
41 60 0.149940250 ubox
41 62 0.988318250 ubox
42 59 0.149926814 ubox
42 61 0.988532837 ubox
43 58 0.149868741 ubox
43 60 0.988165083 ubox
44 57 0.149925839 ubox
44 59 0.988529762 ubox
45 56 0.149926125 ubox
45 58 0.988541550 ubox
46 55 0.149349591 ubox
46 57 0.988509502 ubox
47 56 0.988255919 ubox
49 56 0.009337561 ubox
50 55 0.068718613 ubox
50 57 0.007217407 ubox
51 56 0.007852803 ubox
52 115 0.006627750 ubox
53 114 0.007273967 ubox
54 113 0.007236708 ubox
56 111 0.006740092 ubox
57 110 0.006746250 ubox
58 109 0.006741885 ubox
58 111 0.005604319 ubox
59 108 0.006728506 ubox
59 110 0.005609999 ubox
60 109 0.005614574 ubox
61 107 0.006371895 ubox
61 108 0.005609479 ubox
61 117 0.003902710 ubox
62 106 0.006306725 ubox
62 115 0.003701783 ubox
62 116 0.005923058 ubox
63 105 0.005441561 ubox
63 106 0.005666767 ubox
63 114 0.003891092 ubox
63 115 0.006068809 ubox
64 105 0.005700867 ubox
64 113 0.003898596 ubox
64 114 0.006057857 ubox
65 104 0.005167658 ubox
65 112 0.004344032 ubox
66 103 0.003637516 ubox
67 103 0.003959042 ubox
67 110 0.005214917 ubox
68 102 0.003186183 ubox
68 109 0.005238520 ubox
69 102 0.005342679 ubox
69 111 0.004991470 ubox
70 101 0.005819797 ubox
70 107 0.004947174 ubox
70 110 0.004993683 ubox
71 100 0.006089738 ubox
71 105 0.005474247 ubox
71 106 0.003523574 ubox
71 109 0.004977993 ubox
72 99 0.006102241 ubox
72 104 0.007149845 ubox
72 107 0.003618425 ubox
72 108 0.003533464 ubox
73 97 0.005981187 ubox
73 106 0.005058647 ubox
74 96 0.006064591 ubox
74 102 0.008198058 ubox
74 105 0.005063070 ubox
75 95 0.006143054 ubox
75 101 0.008275884 ubox
75 103 0.003262784 ubox
75 104 0.003877490 ubox
76 94 0.006142670 ubox
76 100 0.008315567 ubox
76 102 0.004603050 ubox
77 93 0.006136855 ubox
77 99 0.008316330 ubox
77 101 0.004603540 ubox
78 92 0.005027316 ubox
78 97 0.009358932 ubox
78 106 0.003706747 ubox
79 89 0.004919923 ubox
79 96 0.009491332 ubox
79 105 0.003713057 ubox
80 88 0.004923480 ubox
80 95 0.009588329 ubox
80 99 0.003481547 ubox
81 94 0.009586685 ubox
81 98 0.003510944 ubox
81 102 0.003378927 ubox
82 97 0.003528582 ubox
83 89 0.003873542 ubox
83 92 0.009578187 ubox
83 96 0.003528117 ubox
83 100 0.003415008 ubox
84 88 0.003848705 ubox
84 91 0.009593762 ubox
84 95 0.003521171 ubox
84 99 0.003420707 ubox
85 90 0.008764191 ubox
86 117 0.005134887 ubox
87 97 0.003794016 ubox
87 115 0.003328849 ubox
87 116 0.008760240 ubox
88 96 0.003797758 ubox
88 114 0.003353051 ubox
88 115 0.008747298 ubox
89 95 0.003795852 ubox
91 113 0.012079792 ubox
92 112 0.012548952 ubox
93 111 0.012675465 ubox
94 110 0.012677869 ubox
95 105 0.004054353 ubox
95 109 0.012735116 ubox
96 104 0.004075190 ubox
96 108 0.012729336 ubox
97 103 0.004077385 ubox
97 107 0.012714095 ubox
98 112 0.066651812 ubox
99 105 0.011670228 ubox
99 111 0.074264055 ubox
99 113 0.041863029 ubox
100 104 0.010924647 ubox
100 110 0.074301852 ubox
100 112 0.053409918 ubox
101 109 0.075234245 ubox
101 111 0.087193394 ubox
102 108 0.075251153 ubox
102 110 0.087964917 ubox
102 117 0.015655739 ubox
103 109 0.087994403 ubox
103 114 0.004658794 ubox
103 115 0.009642457 ubox
103 116 0.022889201 ubox
104 111 0.253674034 ubox
104 113 0.004333728 ubox
104 114 0.010077284 ubox
104 115 0.022953528 ubox
105 110 0.253669981 ubox
106 117 0.841412450 ubox
107 114 0.042691550 ubox
107 115 0.155162478 ubox
107 116 0.898976836 ubox
108 113 0.029404768 ubox
108 114 0.156734728 ubox
108 115 0.892153649 ubox
109 117 0.042419531 ubox
110 116 0.044834757 ubox
2 104 0.9500000 lbox
3 103 0.9500000 lbox
4 102 0.9500000 lbox
5 101 0.9500000 lbox
6 100 0.9500000 lbox
7 99 0.9500000 lbox
8 96 0.9500000 lbox
9 95 0.9500000 lbox
10 94 0.9500000 lbox
11 93 0.9500000 lbox
12 92 0.9500000 lbox
13 91 0.9500000 lbox
14 89 0.9500000 lbox
15 88 0.9500000 lbox
16 87 0.9500000 lbox
19 84 0.9500000 lbox
20 83 0.9500000 lbox
22 81 0.9500000 lbox
23 80 0.9500000 lbox
24 79 0.9500000 lbox
25 77 0.9500000 lbox
26 76 0.9500000 lbox
27 75 0.9500000 lbox
28 74 0.9500000 lbox
29 73 0.9500000 lbox
30 72 0.9500000 lbox
31 71 0.9500000 lbox
32 70 0.9500000 lbox
36 67 0.9500000 lbox
37 66 0.9500000 lbox
38 65 0.9500000 lbox
39 64 0.9500000 lbox
41 62 0.9500000 lbox
42 61 0.9500000 lbox
43 60 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
106 117 0.9500000 lbox
107 116 0.9500000 lbox
108 115 0.9500000 lbox
showpage
end
%%EOF
