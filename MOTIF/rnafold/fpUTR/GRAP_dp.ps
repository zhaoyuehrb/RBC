%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GRAP)
} def

/sequence { (\
CGCACUCAAAACAAAGGAAGACCGUCCUCGACUGCAGAGGAAGCAGGAAGCUGUCGGCCCAGCUCUGAGCCCAGCUGCUGGAGCCCCGAGCAGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.025750915 ubox
1 30 0.019087605 ubox
1 88 0.005375955 ubox
1 95 0.930622945 ubox
2 23 0.026776238 ubox
2 25 0.007099677 ubox
2 29 0.019422882 ubox
2 35 0.013932062 ubox
2 44 0.074960652 ubox
2 51 0.003895070 ubox
2 54 0.004102128 ubox
2 55 0.003346235 ubox
2 63 0.003324160 ubox
2 70 0.025410620 ubox
2 87 0.005283094 ubox
2 91 0.030703033 ubox
2 94 0.943448396 ubox
2 97 0.116205704 ubox
3 24 0.008673054 ubox
3 34 0.013957304 ubox
3 43 0.074965777 ubox
3 50 0.003915873 ubox
3 53 0.004510382 ubox
3 62 0.003323845 ubox
3 67 0.004682916 ubox
3 69 0.024797334 ubox
3 90 0.030062794 ubox
3 93 0.942316051 ubox
3 96 0.116764186 ubox
4 25 0.007192947 ubox
4 33 0.013778696 ubox
4 52 0.003258472 ubox
4 66 0.003896428 ubox
5 16 0.073631517 ubox
5 17 0.029430220 ubox
5 20 0.041850117 ubox
5 24 0.009994407 ubox
5 39 0.033333280 ubox
5 43 0.009858735 ubox
5 46 0.011878291 ubox
5 47 0.009725399 ubox
5 53 0.003247177 ubox
5 69 0.059866258 ubox
5 90 0.893478540 ubox
5 93 0.014968515 ubox
5 96 0.026970213 ubox
6 15 0.073638293 ubox
6 16 0.023276609 ubox
6 17 0.052745162 ubox
6 18 0.054206150 ubox
6 19 0.033386363 ubox
6 21 0.034166485 ubox
6 31 0.019319365 ubox
6 38 0.033412330 ubox
6 42 0.009646779 ubox
6 45 0.011146973 ubox
6 46 0.007930776 ubox
6 47 0.008391724 ubox
6 48 0.030230780 ubox
6 49 0.003221371 ubox
6 68 0.064250820 ubox
6 89 0.896203223 ubox
6 92 0.015278257 ubox
6 95 0.023782716 ubox
6 96 0.021696038 ubox
7 16 0.067062230 ubox
7 17 0.060718739 ubox
7 20 0.036654227 ubox
7 30 0.020259187 ubox
7 37 0.033342999 ubox
7 46 0.010274353 ubox
7 47 0.031756572 ubox
7 67 0.064624090 ubox
7 88 0.895348954 ubox
7 95 0.030741365 ubox
8 66 0.057700253 ubox
11 25 0.058467550 ubox
11 54 0.018422359 ubox
12 24 0.081566039 ubox
12 34 0.007963228 ubox
12 53 0.019483195 ubox
12 67 0.006957441 ubox
13 33 0.007665657 ubox
13 52 0.013012918 ubox
13 66 0.006591267 ubox
15 28 0.280358544 ubox
15 52 0.009483070 ubox
15 64 0.005681159 ubox
16 23 0.852873432 ubox
16 27 0.302486958 ubox
16 28 0.003517785 ubox
16 29 0.003260170 ubox
16 51 0.010183896 ubox
16 52 0.006189595 ubox
16 55 0.014138986 ubox
16 59 0.022603935 ubox
16 60 0.006181738 ubox
16 63 0.005800850 ubox
16 72 0.008917662 ubox
16 86 0.005928006 ubox
16 87 0.109398916 ubox
17 22 0.848663224 ubox
17 25 0.004011261 ubox
17 26 0.302645147 ubox
17 27 0.003835967 ubox
17 29 0.019955021 ubox
17 51 0.007007434 ubox
17 54 0.009767886 ubox
17 55 0.017268870 ubox
17 58 0.022674734 ubox
17 59 0.006115000 ubox
17 71 0.008882986 ubox
17 85 0.004100489 ubox
17 86 0.109208124 ubox
18 25 0.285852080 ubox
18 28 0.018504572 ubox
18 54 0.013994357 ubox
19 28 0.010933857 ubox
19 52 0.015690556 ubox
20 26 0.017813771 ubox
20 27 0.013315424 ubox
20 29 0.009768727 ubox
20 51 0.015942655 ubox
20 55 0.064970791 ubox
21 25 0.015816212 ubox
21 28 0.009154537 ubox
21 54 0.064388391 ubox
22 47 0.115046963 ubox
22 53 0.063694748 ubox
22 57 0.011827485 ubox
22 96 0.107828269 ubox
23 30 0.026233076 ubox
23 46 0.115247213 ubox
23 53 0.005547367 ubox
23 56 0.012086544 ubox
23 88 0.008141439 ubox
23 95 0.108299747 ubox
24 29 0.027006733 ubox
24 32 0.012277249 ubox
24 44 0.099063166 ubox
24 51 0.023713856 ubox
24 55 0.016987042 ubox
24 87 0.016658491 ubox
24 91 0.004953328 ubox
24 94 0.097887642 ubox
24 97 0.009950761 ubox
25 31 0.013491491 ubox
25 41 0.880818470 ubox
25 43 0.071543068 ubox
25 48 0.017262075 ubox
25 50 0.020855487 ubox
25 90 0.003898983 ubox
25 93 0.085051069 ubox
25 96 0.008418129 ubox
26 30 0.013699091 ubox
26 40 0.948163895 ubox
26 47 0.019014487 ubox
26 95 0.007615774 ubox
26 96 0.007543713 ubox
27 39 0.948560070 ubox
27 46 0.018646596 ubox
27 50 0.007300883 ubox
27 90 0.059428511 ubox
27 95 0.007545800 ubox
27 96 0.007090541 ubox
28 38 0.948444443 ubox
28 41 0.005098975 ubox
28 45 0.017039139 ubox
28 47 0.004508941 ubox
28 48 0.029543853 ubox
28 49 0.010070171 ubox
28 89 0.059647766 ubox
28 96 0.057154969 ubox
29 37 0.948443752 ubox
29 39 0.004852036 ubox
29 40 0.006857608 ubox
29 46 0.007299564 ubox
29 47 0.038004384 ubox
29 56 0.008407474 ubox
29 88 0.059692346 ubox
29 95 0.153652081 ubox
30 55 0.020408137 ubox
30 87 0.059034855 ubox
30 94 0.154787846 ubox
31 54 0.020419362 ubox
32 39 0.038933490 ubox
32 40 0.013617836 ubox
32 43 0.015310402 ubox
32 46 0.264725396 ubox
32 47 0.009056839 ubox
32 53 0.019845740 ubox
32 93 0.156202804 ubox
32 96 0.005787513 ubox
33 38 0.038699207 ubox
33 39 0.013521051 ubox
33 42 0.015538398 ubox
33 45 0.265822029 ubox
33 46 0.004534967 ubox
33 92 0.156711582 ubox
33 95 0.005815142 ubox
34 44 0.266164036 ubox
34 51 0.018501671 ubox
34 54 0.003406877 ubox
34 91 0.156831476 ubox
34 94 0.005826857 ubox
35 43 0.266022623 ubox
35 50 0.018528264 ubox
35 53 0.003765509 ubox
35 67 0.004596229 ubox
35 90 0.156610930 ubox
35 93 0.005818839 ubox
36 52 0.003745926 ubox
36 66 0.004718970 ubox
37 51 0.003688265 ubox
37 55 0.008627487 ubox
37 65 0.004733912 ubox
38 54 0.007961974 ubox
38 64 0.004680655 ubox
39 55 0.019686470 ubox
39 63 0.004304607 ubox
39 72 0.005680782 ubox
39 85 0.006342522 ubox
39 86 0.010604266 ubox
39 87 0.150333102 ubox
40 54 0.015709769 ubox
40 55 0.030230210 ubox
40 71 0.005682575 ubox
40 84 0.006365174 ubox
40 85 0.007336476 ubox
40 86 0.149943486 ubox
41 54 0.027308646 ubox
42 52 0.250187312 ubox
42 64 0.016300114 ubox
42 79 0.004626517 ubox
43 51 0.258423745 ubox
43 54 0.858895671 ubox
43 58 0.003342592 ubox
43 63 0.017343019 ubox
43 70 0.052009797 ubox
43 78 0.004783494 ubox
43 91 0.013198871 ubox
43 94 0.007176949 ubox
43 97 0.022016537 ubox
44 50 0.258307762 ubox
44 53 0.890738597 ubox
44 57 0.003321359 ubox
44 62 0.017327201 ubox
44 67 0.066509675 ubox
44 69 0.052058753 ubox
44 77 0.004783733 ubox
44 80 0.008265575 ubox
44 90 0.013166309 ubox
44 93 0.007196869 ubox
44 96 0.022114080 ubox
45 52 0.890675861 ubox
45 66 0.066438471 ubox
45 76 0.003848224 ubox
45 79 0.008317706 ubox
46 51 0.889603749 ubox
46 52 0.006128498 ubox
46 55 0.011189607 ubox
46 60 0.017357801 ubox
46 65 0.064421928 ubox
46 66 0.060487324 ubox
46 78 0.008265915 ubox
46 87 0.016349064 ubox
47 51 0.010715160 ubox
47 54 0.009353899 ubox
47 55 0.041598482 ubox
47 59 0.017298166 ubox
47 64 0.031472124 ubox
47 65 0.073041485 ubox
47 86 0.016372003 ubox
48 54 0.039937688 ubox
48 64 0.052742697 ubox
49 64 0.086172755 ubox
49 76 0.011786361 ubox
50 58 0.017329964 ubox
50 63 0.109114870 ubox
50 70 0.003364363 ubox
50 75 0.013192113 ubox
50 91 0.252933208 ubox
50 94 0.233092215 ubox
50 97 0.009310974 ubox
51 57 0.017403103 ubox
51 62 0.109159368 ubox
51 69 0.003374118 ubox
51 74 0.013285514 ubox
51 90 0.253194074 ubox
51 93 0.233649641 ubox
51 96 0.009385002 ubox
52 56 0.015679055 ubox
52 61 0.109124706 ubox
52 68 0.003326573 ubox
52 73 0.013306867 ubox
52 88 0.022360088 ubox
52 89 0.250413984 ubox
52 92 0.234169846 ubox
52 95 0.009348956 ubox
53 60 0.108661736 ubox
53 72 0.013197458 ubox
53 87 0.068154706 ubox
53 91 0.234909664 ubox
53 94 0.009312559 ubox
54 89 0.167544133 ubox
54 90 0.165678535 ubox
54 93 0.008288968 ubox
55 88 0.197943740 ubox
56 64 0.011780243 ubox
56 65 0.004422692 ubox
56 71 0.031397347 ubox
56 85 0.980973801 ubox
56 86 0.074665448 ubox
56 87 0.117216321 ubox
57 63 0.013223607 ubox
57 70 0.031581158 ubox
57 84 0.987306167 ubox
57 85 0.059091551 ubox
57 86 0.085906096 ubox
58 62 0.013143123 ubox
58 69 0.031605921 ubox
58 81 0.003943816 ubox
58 83 0.991304049 ubox
59 81 0.992602945 ubox
60 67 0.031365758 ubox
60 80 0.992725737 ubox
61 66 0.028292059 ubox
61 76 0.003648747 ubox
61 79 0.992496803 ubox
62 70 0.005313701 ubox
62 75 0.004266021 ubox
62 78 0.992724566 ubox
62 84 0.018027430 ubox
62 91 0.008305669 ubox
63 69 0.005330526 ubox
63 74 0.004371999 ubox
63 77 0.992395064 ubox
63 83 0.018058344 ubox
63 90 0.008314882 ubox
64 68 0.004825019 ubox
64 73 0.004644781 ubox
64 82 0.018056524 ubox
64 89 0.008313122 ubox
65 74 0.981412669 ubox
65 81 0.018055324 ubox
65 88 0.008290527 ubox
66 73 0.982324796 ubox
66 80 0.017039591 ubox
67 72 0.979570045 ubox
67 76 0.008029985 ubox
67 79 0.006111673 ubox
68 76 0.119619704 ubox
68 79 0.016307535 ubox
69 75 0.121069690 ubox
69 78 0.017329429 ubox
69 84 0.009996888 ubox
69 97 0.072697611 ubox
70 74 0.120197475 ubox
70 77 0.017282739 ubox
70 83 0.010012044 ubox
70 96 0.076134633 ubox
71 81 0.010227514 ubox
71 95 0.075086710 ubox
71 96 0.074052993 ubox
72 80 0.010231858 ubox
72 95 0.075839887 ubox
73 79 0.010206982 ubox
74 78 0.009983306 ubox
74 94 0.116946943 ubox
74 97 0.007313121 ubox
75 93 0.117325721 ubox
75 96 0.007378570 ubox
76 92 0.117423170 ubox
76 95 0.007378365 ubox
77 91 0.117700179 ubox
77 94 0.007419419 ubox
78 90 0.117692903 ubox
78 93 0.007419767 ubox
79 88 0.057048439 ubox
79 89 0.102249176 ubox
79 92 0.007401325 ubox
80 86 0.010577174 ubox
80 87 0.116314221 ubox
80 91 0.007312389 ubox
81 85 0.010606026 ubox
81 86 0.116073980 ubox
83 91 0.004797421 ubox
84 90 0.004812362 ubox
86 96 0.046856887 ubox
87 95 0.048990069 ubox
88 94 0.048649820 ubox
90 97 0.008924635 ubox
91 96 0.009657740 ubox
1 95 0.9500000 lbox
2 94 0.9500000 lbox
3 93 0.9500000 lbox
5 90 0.9500000 lbox
6 89 0.9500000 lbox
7 88 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
56 85 0.9500000 lbox
57 84 0.9500000 lbox
58 83 0.9500000 lbox
59 81 0.9500000 lbox
60 80 0.9500000 lbox
61 79 0.9500000 lbox
62 78 0.9500000 lbox
63 77 0.9500000 lbox
65 74 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
showpage
end
%%EOF
