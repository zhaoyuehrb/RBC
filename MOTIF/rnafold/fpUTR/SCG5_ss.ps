%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAGUCUGGGGAGUCCUGGCGAGGCAGCUUCCACCUGCUGGAGGAGGGGCCGGGGCGGAGCUAAGAUGCGGAGGAGGGUGACGCACUAGCUCUCCAGUUCGCCCGUUCCUGGCCUGACCCCCACCAAGGCCCAUACCGCAGUAGGCUCCUCGGGCUGCCCCUCGGUUGACA\
) } def
/len { sequence length } bind def

/coor [
[136.29118347 319.67068481]
[145.76940918 307.84109497]
[158.72360229 299.96932983]
[155.76405334 285.26419067]
[152.80450439 270.55905151]
[149.84495544 255.85391235]
[146.88540649 241.14878845]
[143.92585754 226.44364929]
[140.96629333 211.73851013]
[138.00674438 197.03337097]
[135.04719543 182.32823181]
[132.08764648 167.62309265]
[129.12809753 152.91795349]
[126.16854858 138.21281433]
[123.20899963 123.50768280]
[116.26702118 120.66886139]
[104.40824890 129.85415649]
[102.38305664 114.99121857]
[95.44107819 112.15240479]
[83.02574158 120.57020569]
[70.61040497 128.98800659]
[65.23996735 136.42068481]
[57.89406586 137.44334412]
[45.32877731 145.63563538]
[32.76348877 153.82792664]
[25.83141899 168.68989563]
[9.47319984 169.84779358]
[0.51676643 156.11045837]
[8.17572880 141.60969543]
[24.57120323 141.26263428]
[37.13648987 133.07034302]
[49.70177841 124.87806702]
[62.19260025 116.57267761]
[74.60793304 108.15487671]
[87.02326965 99.73706818]
[95.10179138 87.09833527]
[97.52851868 72.29593658]
[99.95524597 57.49354172]
[102.38198090 42.69114304]
[104.80870819 27.88874435]
[107.23543549 13.08634663]
[109.66217041 -1.71605110]
[102.77697754 -12.64951515]
[105.12566376 -24.94672012]
[114.90841675 -32.09857178]
[117.60199738 -46.85474396]
[107.39454651 -61.04096222]
[110.52638245 -77.89193726]
[124.58498383 -87.09358215]
[127.01171112 -101.89598083]
[129.43844604 -116.69837952]
[131.86517334 -131.50077820]
[134.29190063 -146.30317688]
[135.91368103 -161.21524048]
[136.72576904 -176.19325256]
[137.53785706 -191.17124939]
[138.34994507 -206.14924622]
[139.02677917 -221.13397217]
[139.56831360 -236.12419128]
[140.10984802 -251.11441040]
[137.28485107 -259.83825684]
[140.79890442 -266.36968994]
[141.61099243 -281.34768677]
[142.42308044 -296.32568359]
[143.23515320 -311.30368042]
[136.25633240 -325.50250244]
[144.67132568 -337.79223633]
[145.48341370 -352.77023315]
[134.60636902 -371.20776367]
[146.48216248 -388.06506348]
[146.48216248 -403.06506348]
[146.48216248 -418.06506348]
[146.48216248 -433.06506348]
[146.48216248 -448.06506348]
[146.21136475 -463.06262207]
[145.66981506 -478.05285645]
[145.12828064 -493.04306030]
[144.58674622 -508.03329468]
[144.04521179 -523.02349854]
[143.50367737 -538.01373291]
[142.96214294 -553.00396729]
[129.63902283 -560.78198242]
[122.65639496 -574.53869629]
[124.24240112 -589.88433838]
[133.89094543 -601.92211914]
[148.52320862 -606.81091309]
[163.47009277 -602.99072266]
[173.96209717 -591.68048096]
[176.65127563 -576.48931885]
[170.67950439 -562.26464844]
[157.95236206 -553.54547119]
[158.49389648 -538.55523682]
[159.03543091 -523.56506348]
[159.57696533 -508.57482910]
[160.11849976 -493.58459473]
[160.66004944 -478.59439087]
[161.20158386 -463.60415649]
[164.05178833 -459.73284912]
[164.47702026 -454.02203369]
[161.48216248 -448.06506348]
[161.48216248 -433.06506348]
[161.48216248 -418.06506348]
[161.48216248 -403.06506348]
[161.48216248 -388.06506348]
[168.74572754 -382.85498047]
[172.84159851 -374.75479126]
[172.72894287 -365.54071045]
[168.30589294 -357.30001831]
[160.46141052 -351.95812988]
[159.64932251 -336.98013306]
[166.68623352 -323.85266113]
[158.21316528 -310.49160767]
[157.40107727 -295.51361084]
[156.58898926 -280.53561401]
[155.77690125 -265.55758667]
[155.10006714 -250.57287598]
[154.55853271 -235.58265686]
[154.01699829 -220.59243774]
[156.92791748 -213.77079773]
[153.32794189 -205.33715820]
[152.51585388 -190.35916138]
[151.70376587 -175.38116455]
[150.89169312 -160.40316772]
[162.89028931 -169.40501404]
[177.76257324 -167.45173645]
[187.02980042 -155.65687561]
[185.40869141 -140.74473572]
[173.82345581 -131.21675110]
[158.87886047 -132.50488281]
[149.09429932 -143.87644958]
[146.66757202 -129.07405090]
[144.24084473 -114.27165222]
[141.81411743 -99.46925354]
[139.38737488 -84.66685486]
[148.30526733 -75.33849335]
[150.24029541 -62.38207626]
[144.26203918 -50.50708771]
[132.35816956 -44.16116333]
[129.66459656 -29.40499115]
[136.45863342 -13.24048805]
[124.46456909 0.71067888]
[122.03783417 15.51307678]
[119.61110687 30.31547546]
[117.18437958 45.11787415]
[114.75764465 59.92026901]
[112.33091736 74.72267151]
[109.90419006 89.52506256]
[137.91413879 120.54813385]
[140.87368774 135.25326538]
[143.83323669 149.95840454]
[146.79278564 164.66354370]
[149.75233459 179.36868286]
[152.71188354 194.07382202]
[155.67143250 208.77896118]
[158.63098145 223.48410034]
[161.59054565 238.18922424]
[164.55009460 252.89436340]
[167.50964355 267.59951782]
[170.46919250 282.30465698]
[173.42874146 297.00976562]
[188.41954041 299.25735474]
[201.73609924 306.49926758]
[211.77035522 317.86102295]
[217.31063843 331.97061157]
[217.68794250 347.12426758]
[212.85667419 361.49212646]
[203.40025330 373.33914185]
[190.46060181 381.23477173]
[175.60021973 384.22555542]
[160.61357117 381.95037842]
[147.31039429 374.68392944]
[137.29708862 363.30371094]
[131.78280640 349.18392944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 160]
[4 159]
[5 158]
[6 157]
[7 156]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[19 35]
[20 34]
[21 33]
[23 32]
[24 31]
[25 30]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[45 139]
[46 138]
[49 134]
[50 133]
[51 132]
[52 131]
[53 130]
[54 123]
[55 122]
[56 121]
[57 120]
[58 118]
[59 117]
[60 116]
[62 115]
[63 114]
[64 113]
[65 112]
[67 110]
[68 109]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
