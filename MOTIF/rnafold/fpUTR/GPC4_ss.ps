%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGCACCGGGGACCGUUGCCUGACGCGAGGCCCAGCUCUACUUUUCGCCCCGCGUCUCCUCCGCCUGCUCGCCUCUUCCACCAACUCCAACUCCUUCUCCCUCCAGCUCCACUCGCUAGUCCCCGACUCCGCCAGCCCUCGGCCCGCUGCCGUAGCGCCGCUUCCCGUCCGGUCCCAAAGGUGGGAACGCGUCCGCCCCGGCCCGCACC\
) } def
/len { sequence length } bind def

/coor [
[316.92675781 245.76959229]
[304.89135742 232.41769409]
[303.26721191 214.35763550]
[290.16763306 207.05004883]
[277.06805420 199.74246216]
[263.96847534 192.43486023]
[250.86889648 185.12727356]
[232.56707764 191.80618286]
[214.98370361 182.72973633]
[209.66584778 163.35304260]
[196.25584412 156.63203430]
[182.84584045 149.91104126]
[169.43583679 143.19003296]
[156.02584839 136.46903992]
[142.61584473 129.74803162]
[129.20584106 123.02703094]
[123.75874329 131.14930725]
[116.03091431 137.91006470]
[106.38434601 142.66947937]
[95.35908508 144.88943481]
[83.64341736 144.18247986]
[72.03092194 140.35174561]
[61.36700821 133.41860962]
[52.48844147 123.63506317]
[46.16032028 111.47956848]
[31.97874451 116.36657715]
[17.79716492 121.25358582]
[3.61558819 126.14059448]
[-10.56598949 131.02760315]
[-24.74756813 135.91461182]
[-35.27396393 147.72586060]
[-49.82763672 144.55726624]
[-64.00921631 149.44427490]
[-78.19078827 154.33128357]
[-78.73416138 169.49931335]
[-84.72375488 183.44525146]
[-95.34953308 194.28302002]
[-109.17444611 200.54690552]
[-124.32878876 201.38977051]
[-138.76306152 196.69761658]
[-150.52513123 187.10501099]
[-158.02430725 173.90930176]
[-160.24635315 158.89506531]
[-156.89077759 144.09289551]
[-148.41139221 131.50462341]
[-135.95495605 122.83274078]
[-121.20610046 119.25003052]
[-106.15949249 121.24102783]
[-92.85005951 128.53646851]
[-83.07779694 140.14970398]
[-68.89622498 135.26269531]
[-54.71464157 130.37568665]
[-45.20260620 118.91400146]
[-29.63457680 121.73303223]
[-15.45299816 116.84602356]
[-1.27142048 111.95901489]
[12.91015720 107.07200623]
[27.09173584 102.18499756]
[41.27331161 97.29798889]
[41.93616486 89.82733917]
[26.99486160 88.50164032]
[12.05358124 87.17568970]
[13.37977791 72.23442841]
[28.32056236 73.56034088]
[43.26186371 74.88603973]
[43.92471695 67.41539001]
[30.82513237 60.10779572]
[15.69169521 64.66352081]
[1.80908990 57.11045074]
[-2.58637953 41.92969513]
[5.11304092 28.12771988]
[20.33942223 23.89299774]
[34.05921936 31.73790932]
[38.13272476 47.00821304]
[51.23230743 54.31580353]
[58.07939148 51.25517654]
[50.08687210 38.56188583]
[42.09435272 25.86859512]
[34.10183334 13.17530441]
[26.10931396 0.48201391]
[18.11679459 -12.21127701]
[10.12427521 -24.90456772]
[2.13175583 -37.59785843]
[-5.86076355 -50.29114914]
[-13.85328293 -62.98443985]
[-21.84580231 -75.67773438]
[-33.56382370 -85.04191589]
[-40.58602142 -98.29667664]
[-41.75177765 -113.25131226]
[-36.86842346 -127.43415070]
[-26.74306870 -138.50108337]
[-13.04920292 -144.62301636]
[1.94988847 -144.78811646]
[15.77519512 -138.96911621]
[26.14170647 -128.12773132]
[31.33607292 -114.05582428]
[30.49884605 -99.07563782]
[34.62631607 -84.65468597]
[38.75378799 -70.23372650]
[42.88125992 -55.81277084]
[47.00873184 -41.39181519]
[51.13620377 -26.97085762]
[55.26367569 -12.54990196]
[59.39114761 1.87105417]
[63.51861954 16.29201126]
[67.64608765 30.71296692]
[71.77355957 45.13392258]
[78.62064362 42.07329559]
[81.91222382 27.43889999]
[85.20380402 12.80450630]
[75.57916260 0.47971889]
[76.18014526 -15.14631176]
[86.72297668 -26.69545174]
[102.22966003 -28.71455193]
[115.37841797 -20.25025368]
[119.96079254 -5.29913902]
[113.81314087 9.07933140]
[99.83819580 16.09608269]
[96.54661560 30.73047829]
[93.25504303 45.36487198]
[134.79408264 69.72622681]
[135.92683411 109.61702728]
[149.33683777 116.33802795]
[162.74684143 123.05902863]
[176.15684509 129.78002930]
[189.56684875 136.50103760]
[202.97685242 143.22203064]
[216.38685608 149.94303894]
[225.35043335 144.16194153]
[235.82496643 142.63389587]
[245.91146851 145.56825256]
[253.80929565 152.37136841]
[258.13760376 161.76535034]
[258.17648315 172.02767944]
[271.27606201 179.33528137]
[284.37564087 186.64286804]
[297.47521973 193.95046997]
[310.57482910 201.25805664]
[321.12557983 194.55688477]
[333.45266724 192.98593140]
[345.20953369 196.78239441]
[354.18435669 205.16755676]
[358.71624756 216.50567627]
[358.00228882 228.62277222]
[370.88064575 236.31353760]
[386.02490234 232.66810608]
[398.97583008 240.65110779]
[402.35787964 255.11129761]
[415.23623657 262.80209351]
[427.90969849 260.41040039]
[438.47738647 267.07995605]
[441.56591797 278.77459717]
[454.32946777 286.65447998]
[467.09298706 294.53436279]
[479.85650635 302.41421509]
[495.05288696 298.99255371]
[507.88464355 307.16567993]
[511.05303955 321.67419434]
[523.81658936 329.55407715]
[536.58007812 337.43395996]
[554.99462891 337.55041504]
[562.70666504 353.31475830]
[575.58502197 361.00552368]
[588.46337891 368.69628906]
[601.39807129 376.29190063]
[614.38848877 383.79190063]
[627.37884521 391.29190063]
[640.36926270 398.79190063]
[653.35961914 406.29190063]
[666.34997559 413.79190063]
[675.34509277 415.37213135]
[679.47546387 421.49951172]
[692.35382080 429.19030762]
[706.12292480 422.23214722]
[721.46569824 423.84542847]
[733.48632812 433.51538086]
[738.34912109 448.15631104]
[734.50231934 463.09637451]
[723.17346191 473.56826782]
[707.97753906 476.23040771]
[693.76348877 470.23333740]
[685.06701660 457.49072266]
[684.66308594 442.06863403]
[671.78472900 434.37786865]
[658.84997559 426.78228760]
[645.85961914 419.28228760]
[632.86926270 411.78228760]
[619.87884521 404.28228760]
[606.88848877 396.78228760]
[593.89807129 389.28228760]
[586.53479004 388.66027832]
[580.77258301 381.57464600]
[567.89422607 373.88388062]
[555.01586914 366.19311523]
[543.21484375 368.84625244]
[532.42315674 362.54562378]
[528.70019531 350.19747925]
[515.93670654 342.31759644]
[503.17318726 334.43771362]
[488.78289795 338.10595703]
[475.72662354 330.29644775]
[471.97662354 315.17776489]
[459.21310425 307.29788208]
[446.44958496 299.41799927]
[433.68606567 291.53811646]
[416.14163208 291.96578979]
[407.54544067 275.68041992]
[394.66708374 267.98965454]
[380.33248901 271.86972046]
[367.16247559 264.25363159]
[363.18988037 249.19189453]
[350.31152344 241.50111389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 138]
[4 137]
[5 136]
[6 135]
[7 134]
[10 128]
[11 127]
[12 126]
[13 125]
[14 124]
[15 123]
[16 122]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[32 52]
[33 51]
[34 50]
[66 75]
[67 74]
[108 120]
[109 119]
[110 118]
[144 212]
[145 211]
[148 208]
[149 207]
[152 205]
[153 204]
[154 203]
[155 202]
[158 199]
[159 198]
[160 197]
[162 194]
[163 193]
[164 192]
[165 190]
[166 189]
[167 188]
[168 187]
[169 186]
[170 185]
[172 184]
[173 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
