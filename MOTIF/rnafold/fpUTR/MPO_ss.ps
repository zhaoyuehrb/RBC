%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAAUAUCAGGUGAGCUGUGGAGGUGGGGUCCUUGGAAGCUGGAUGACAGCAGCUGGCAAGGGGAUAAGAGAGCAGUGAGCCCCUCCCUCAAGGAGGUCUGGCUUUAUCCAUAGACAGGGCCCUCUGAGGUGGGGCUGAGGUACAAAGGGGGAUUGAGCAGCCCAGGAGAAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[120.04633331 187.87045288]
[106.15049744 193.51898193]
[91.17037201 194.29078674]
[76.76760864 190.10026550]
[64.53984070 181.41224670]
[55.84342957 169.19044495]
[51.64302063 154.79057312]
[52.40454865 139.80990601]
[58.04354095 125.91020966]
[67.93448639 114.63327789]
[80.97805023 107.23081207]
[66.03641510 105.90882874]
[51.09478378 104.58683777]
[39.04481888 114.45780945]
[23.91071129 112.90427399]
[14.57450962 101.35564423]
[-0.36712158 100.03365326]
[-15.30875301 98.71166992]
[-30.25038528 97.38967896]
[-45.19201660 96.06769562]
[-50.27000427 109.61701965]
[-58.68143463 121.37570953]
[-69.84547424 130.54261780]
[-82.99401855 136.49517822]
[-97.22451782 138.83172607]
[-111.56197357 137.39855957]
[-125.02569580 132.30004883]
[-136.69641113 123.89101410]
[-145.77899170 112.75213623]
[-151.65669250 99.64978790]
[-153.93296814 85.48331451]
[-168.84893799 83.89783478]
[-183.76492310 82.31236267]
[-198.68089294 80.72688293]
[-213.59686279 79.14140320]
[-228.51283264 77.55592346]
[-240.73513794 87.21269226]
[-255.83946228 85.39231110]
[-264.97039795 73.68070221]
[-279.88638306 72.09522247]
[-294.80233765 70.50974274]
[-309.71832275 68.92427063]
[-324.63427734 67.33879089]
[-334.93045044 78.94779205]
[-350.09100342 82.25485992]
[-364.28646851 75.98836517]
[-372.05831909 62.55789185]
[-370.41821289 47.12773895]
[-359.99673462 35.63111496]
[-344.80117798 32.48870087]
[-330.67453003 38.90882492]
[-323.04879761 52.42281723]
[-308.13284302 54.00829315]
[-293.21685791 55.59377289]
[-278.30090332 57.17925262]
[-263.38491821 58.76472855]
[-251.99607849 49.23425293]
[-236.84657288 50.62966919]
[-226.92735291 62.63994980]
[-212.01138306 64.22542572]
[-197.09541321 65.81090546]
[-182.17944336 67.39638519]
[-167.26345825 68.98186493]
[-152.34748840 70.56734467]
[-146.53248596 56.11046982]
[-136.87745667 43.86104584]
[-124.15537262 34.81289291]
[-109.38841248 29.70302773]
[-93.76589966 28.95163345]
[-78.54849243 32.62751007]
[-64.96646118 40.44187546]
[-54.12020493 51.77102661]
[-46.89113617 65.70611572]
[-43.87002945 81.12606049]
[-28.92839622 82.44805145]
[-13.98676586 83.77003479]
[0.95486575 85.09202576]
[15.89649677 86.41400909]
[27.11536217 76.68402100]
[42.28713226 77.81185913]
[52.41677094 89.64521027]
[67.35840607 90.96719360]
[82.30003357 92.28918457]
[93.71471405 82.55753326]
[94.77280426 67.59489441]
[95.83088684 52.63225937]
[96.88896942 37.66962433]
[97.94705200 22.70699120]
[88.55960083 9.69717693]
[93.01669312 -5.71430826]
[107.89923859 -11.70509148]
[121.79061127 -3.67955732]
[124.03455353 12.20579147]
[112.90969086 23.76507378]
[111.85160828 38.72771072]
[110.79351807 53.69034576]
[109.73543549 68.65298462]
[108.67735291 83.61561584]
[115.43051147 86.87825775]
[127.83471680 78.44406891]
[128.93682861 93.40354919]
[135.68998718 96.66619110]
[146.75411987 86.53776550]
[157.81823730 76.40933228]
[168.88237000 66.28089905]
[179.94650269 56.15247345]
[191.01062012 46.02404404]
[195.96530151 30.99867249]
[210.57748413 28.11195183]
[221.64161682 17.98352242]
[226.06195068 2.19135046]
[242.01350403 -1.61393714]
[253.08666992 10.48221302]
[247.89033508 26.03631783]
[231.77005005 29.04764938]
[220.70591736 39.17607880]
[216.54261780 53.47699738]
[201.13905334 57.08816910]
[190.07492065 67.21659851]
[179.01080322 77.34503174]
[167.94667053 87.47345734]
[156.88253784 97.60189056]
[145.81842041 107.73031616]
[147.14041138 122.67195129]
[159.81098938 130.70040894]
[172.48158264 138.72886658]
[185.15217590 146.75732422]
[197.59919739 138.07704163]
[212.38142395 134.83226013]
[227.23962402 137.48703003]
[239.91510010 145.60614014]
[248.49310303 157.92614746]
[251.69204712 172.55189514]
[249.05488586 187.24795532]
[261.72546387 195.27642822]
[274.39605713 203.30488586]
[287.06665039 211.33334351]
[299.73724365 219.36180115]
[312.40783691 227.39025879]
[321.95498657 222.51168823]
[332.58569336 222.05606079]
[342.36535645 226.03881836]
[349.54226685 233.67384338]
[352.86138916 243.52755737]
[351.78338623 253.78787231]
[364.01132202 262.47564697]
[376.23925781 271.16342163]
[391.32479858 267.04507446]
[405.50650024 273.63394165]
[412.08822632 287.81896973]
[407.96228027 302.90240479]
[395.07678223 311.76232910]
[379.51589966 310.21536255]
[368.62701416 298.99191284]
[367.55148315 283.39135742]
[355.32354736 274.70358276]
[343.09561157 266.01580811]
[324.21084595 270.69436646]
[307.69351196 259.84896851]
[304.37936401 240.06085205]
[291.70877075 232.03239441]
[279.03817749 224.00393677]
[266.36761475 215.97546387]
[253.69700623 207.94700623]
[241.02642822 199.91854858]
[228.86408997 208.57919312]
[214.27299500 211.93264771]
[199.46965027 209.43754578]
[186.71499634 201.44337463]
[177.96920776 189.14196777]
[174.59036255 174.38980103]
[177.12371826 159.42791748]
[164.45312500 151.39945984]
[151.78253174 143.37100220]
[139.11193848 135.34254456]
[141.40902710 150.16560364]
[138.71076965 164.92092896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 83]
[12 82]
[13 81]
[16 78]
[17 77]
[18 76]
[19 75]
[20 74]
[31 64]
[32 63]
[33 62]
[34 61]
[35 60]
[36 59]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[102 123]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[109 116]
[110 115]
[124 175]
[125 174]
[126 173]
[127 172]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[139 160]
[145 157]
[146 156]
[147 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
