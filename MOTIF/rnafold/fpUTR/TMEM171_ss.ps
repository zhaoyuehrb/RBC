%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCCUCCGCACCAGGACGCGCGGUGGGUAGGGUGCAGGGCGGCCGGCGCAGCCGAGGCCGCGUGCGGAGGCGGACGCCGCGCCCAGCCAGUGCCCACAGCAGCGCGGUCAGCCAGGCGCCGGACCCAGCUUCAGAGCUGCUGAAAUCUUGGAGGGAAGAAAACACAUCCCACCCUGCCUCCGGGAAGGGGCCUCUCCUGGAC\
) } def
/len { sequence length } bind def

/coor [
[90.95043945 232.94921875]
[92.32793427 218.01309204]
[84.85961914 217.32444763]
[76.60987091 229.85209656]
[68.36012268 242.37973022]
[60.11037827 254.90736389]
[51.86063385 267.43499756]
[43.70711899 280.02548218]
[35.65031815 292.67807007]
[33.67908096 301.60226440]
[27.37185478 305.46148682]
[19.12210846 317.98913574]
[10.87236214 330.51675415]
[2.62261581 343.04440308]
[8.96844196 357.10620117]
[6.68190908 372.36318970]
[-3.50735688 383.94689941]
[-18.34799957 388.16101074]
[-33.10442352 383.66085815]
[-43.06790543 371.88235474]
[-45.05913925 356.58404541]
[-38.44272232 342.64752197]
[-25.32993698 334.51989746]
[-9.90502071 334.79464722]
[-1.65527439 322.26702881]
[6.59447193 309.73937988]
[14.84421825 297.21176147]
[22.99773216 284.62127686]
[31.05453300 271.96868896]
[31.99601746 264.63461304]
[39.33299637 259.18524170]
[47.58274460 246.65762329]
[55.83248901 234.12997437]
[64.08223724 221.60234070]
[72.33198547 209.07470703]
[77.72537994 195.07788086]
[80.01512146 180.25367737]
[82.30486298 165.42945862]
[84.59459686 150.60525513]
[86.88433838 135.78105164]
[89.17407990 120.95684814]
[64.12185669 90.48662567]
[102.10442352 49.39566422]
[94.43914032 36.50212097]
[86.67529297 23.66769028]
[78.81332397 10.89312458]
[70.95136261 -1.88144064]
[63.08940125 -14.65600586]
[55.22743607 -27.43057251]
[47.36547089 -40.20513535]
[39.50350952 -52.97970200]
[21.35572052 -61.74869156]
[21.64052391 -81.08000183]
[13.39077854 -93.60764313]
[2.62243676 -95.18306732]
[-5.33558416 -102.28072357]
[-8.01449299 -112.37500000]
[-4.76250172 -122.06811523]
[-12.62446594 -134.84268188]
[-20.48642921 -147.61724854]
[-28.34839439 -160.39181519]
[-36.21035767 -173.16636658]
[-44.07232285 -185.94093323]
[-51.93428421 -198.71549988]
[-59.89390182 -211.42945862]
[-67.95070648 -224.08204651]
[-76.00750732 -236.73463440]
[-92.90042114 -237.53994751]
[-105.85716248 -248.14888000]
[-109.89855194 -264.22854614]
[-103.62442780 -279.39566040]
[-111.87417603 -291.92330933]
[-120.12392426 -304.45092773]
[-128.37367249 -316.97857666]
[-143.75553894 -317.81784058]
[-155.55586243 -327.44104004]
[-159.38174438 -341.99530029]
[-153.96865845 -355.84579468]
[-162.21841431 -368.37344360]
[-177.72470093 -368.95202637]
[-189.90864563 -378.56094360]
[-194.08526611 -393.50534058]
[-188.64857483 -408.03884888]
[-175.68908691 -416.57296753]
[-160.19000244 -415.82620239]
[-148.11100769 -406.08566284]
[-144.09674072 -391.09683228]
[-149.69078064 -376.62319946]
[-141.44102478 -364.09555054]
[-126.57868195 -363.59689331]
[-114.71955872 -354.33270264]
[-110.54063416 -339.69064331]
[-115.84603119 -325.22833252]
[-107.59628296 -312.70068359]
[-99.34654236 -300.17303467]
[-91.09679413 -287.64541626]
[-77.75811768 -288.27157593]
[-65.75612640 -282.17504883]
[-58.27529907 -270.85342407]
[-57.35955811 -257.20596313]
[-63.35491562 -244.79142761]
[-55.29811478 -232.13883972]
[-47.24131393 -219.48625183]
[-40.99396896 -215.53080750]
[-39.15972137 -206.57746887]
[-31.29775620 -193.80290222]
[-23.43579292 -181.02833557]
[-15.57382774 -168.25376892]
[-7.71186447 -155.47920227]
[0.15009964 -142.70463562]
[8.01206398 -129.93006897]
[25.64917755 -122.01091766]
[25.91841507 -101.85739136]
[34.16816330 -89.32975006]
[44.32696533 -88.17624664]
[52.34048080 -81.47888947]
[55.40559006 -71.26557159]
[52.27807236 -60.84166718]
[60.14003754 -48.06710052]
[68.00199890 -35.29253387]
[75.86396790 -22.51797104]
[83.72592926 -9.74340439]
[91.58789062 3.03116083]
[99.44985962 15.80572605]
[105.63585663 19.85643959]
[107.33268738 28.83684158]
[114.99796295 41.73038483]
[129.62915039 45.03617477]
[142.09321594 36.69068146]
[154.55726624 28.34518623]
[167.02133179 19.99968910]
[179.48538208 11.65419483]
[186.23500061 -3.29153323]
[202.57781982 -4.64959669]
[211.70175171 8.97706318]
[204.22087097 23.57050705]
[187.83087158 24.11825180]
[175.36682129 32.46374512]
[162.90277100 40.80924225]
[150.43870544 49.15473557]
[137.97465515 57.50023270]
[143.68833923 71.36940002]
[158.41397095 68.51352692]
[173.13960266 65.65766144]
[187.86521912 62.80179596]
[199.88484192 51.64559937]
[215.47434998 56.73471069]
[218.59660339 72.83389282]
[206.03968811 83.38168335]
[190.72108459 77.52742004]
[175.99546814 80.38328552]
[161.26983643 83.23915100]
[146.54421997 86.09502411]
[146.14213562 93.58423615]
[144.93588257 116.05187988]
[159.27108765 120.46797180]
[173.60627747 124.88407135]
[187.94148254 129.30017090]
[199.14178467 118.79071045]
[214.09991455 115.30502319]
[228.79220581 119.78074646]
[239.26651001 131.01393127]
[242.70529175 145.98291016]
[238.18353271 160.66110229]
[226.91757202 171.10014343]
[211.93788147 174.49198914]
[197.27394104 169.92425537]
[186.87026978 158.62561035]
[183.52539062 143.63537598]
[169.19018555 139.21928406]
[154.85498047 134.80317688]
[140.51977539 130.38708496]
[119.36417389 131.66661072]
[103.99828339 123.24658203]
[101.70854187 138.07078552]
[99.41880798 152.89498901]
[97.12906647 167.71920776]
[94.83932495 182.54341125]
[92.54959106 197.36761475]
[111.15895081 197.61473083]
[128.55786133 214.25924683]
[134.37765503 228.08421326]
[140.19746399 241.90919495]
[146.01725769 255.73417664]
[151.83705139 269.55914307]
[157.65684509 283.38412476]
[163.47663879 297.20910645]
[169.40220642 310.98907471]
[175.43316650 324.72323608]
[188.96403503 333.98867798]
[187.43576050 350.31643677]
[172.42051697 356.90997314]
[159.36468506 346.98638916]
[161.69900513 330.75421143]
[155.66802979 317.02005005]
[150.09770203 312.15731812]
[149.65167236 303.02890015]
[143.83187866 289.20391846]
[138.01206970 275.37893677]
[132.19227600 261.55395508]
[126.37248230 247.72898865]
[120.55268860 233.90402222]
[114.73288727 220.07904053]
[107.26457214 219.39039612]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[5 33]
[6 32]
[7 31]
[8 29]
[9 28]
[11 27]
[12 26]
[13 25]
[14 24]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[43 127]
[44 126]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[51 118]
[53 114]
[54 113]
[58 111]
[59 110]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[65 103]
[66 102]
[67 101]
[71 96]
[72 95]
[73 94]
[74 93]
[78 89]
[79 88]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[142 153]
[143 152]
[144 151]
[145 150]
[155 172]
[156 171]
[157 170]
[158 169]
[181 203]
[182 202]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
