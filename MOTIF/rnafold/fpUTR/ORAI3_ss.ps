%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCUGUCCCGCUCCGGCUCCUGGGGCUCCCCGCAGACGCUGCUUUUCUUGCUCCACUGGGGGUGCCUCUUCCUGGGCGCCCGCCGCCUGCAUCCUGCUCGUCCUGUCUGGGAAUGGGGCCGCCCCCGGGCUUGGGCCGGCCCGGCUGGGGCCCCCGAGGCGCUUCCGCCCCGUAGUGACCGCCUGGUGCCGCCCCCCCCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[79.65966034 228.38916016]
[76.59375763 237.02024841]
[69.99954224 243.17736816]
[61.44374084 245.57075500]
[56.31343842 259.66613770]
[51.18313599 273.76153564]
[46.05283356 287.85693359]
[54.84118652 300.64538574]
[54.40060043 316.15618896]
[44.90048218 328.42517090]
[29.99382782 332.73458862]
[15.41254616 327.42745972]
[6.76343918 314.54440308]
[7.37226486 299.03927612]
[17.00491714 286.87411499]
[31.95744324 282.72662354]
[37.08774567 268.63122559]
[42.21804810 254.53584290]
[47.34835052 240.44046021]
[42.00263596 220.50756836]
[58.62937546 206.99172974]
[63.11281586 192.67744446]
[67.59625244 178.36315918]
[72.07969666 164.04887390]
[76.56313324 149.73458862]
[81.04656982 135.42030334]
[85.53001404 121.10601044]
[75.82328033 108.38632202]
[75.56842804 92.38800812]
[63.18400955 83.92477417]
[50.79959488 75.46154785]
[38.41518402 66.99831390]
[20.02793503 66.03022003]
[13.05105877 49.92918777]
[0.53963089 41.65487671]
[-11.97179699 33.38056946]
[-24.48322487 25.10626221]
[-37.05707932 16.92713165]
[-49.69263840 8.84365273]
[-62.32819748 0.76017338]
[-75.07238770 2.76053262]
[-85.43087006 -4.23489428]
[-88.15444183 -16.02286911]
[-100.66587067 -24.29717827]
[-111.62415314 -17.45720100]
[-124.30952454 -15.27876949]
[-136.83068848 -18.05080986]
[-147.33435059 -25.32682228]
[-154.27957153 -35.99637222]
[-156.66377258 -48.45444489]
[-154.16729736 -60.84284592]
[-166.42184448 -69.49304962]
[-178.67639160 -78.14325714]
[-189.88090515 -72.59199524]
[-202.31034851 -72.33403778]
[-213.60360718 -77.35699463]
[-221.64149475 -86.65111542]
[-224.94439697 -98.41165161]
[-222.94429016 -110.38916016]
[-234.93067932 -119.40729523]
[-246.91705322 -128.42543030]
[-258.97152710 -137.35234070]
[-271.09338379 -146.18753052]
[-283.21524048 -155.02270508]
[-295.33709717 -163.85789490]
[-307.45895386 -172.69308472]
[-319.58081055 -181.52827454]
[-331.70266724 -190.36344910]
[-343.82455444 -199.19863892]
[-359.39718628 -196.50270081]
[-372.26672363 -205.67607117]
[-374.79788208 -221.27635193]
[-365.48895264 -234.04818726]
[-349.86276245 -236.41424561]
[-337.19009399 -226.97080994]
[-334.98934937 -211.32049561]
[-322.86749268 -202.48532104]
[-310.74563599 -193.65013123]
[-298.62377930 -184.81494141]
[-286.50192261 -175.97975159]
[-274.38006592 -167.14457703]
[-262.25820923 -158.30938721]
[-250.13633728 -149.47419739]
[-242.87704468 -148.07437134]
[-237.89892578 -140.41180420]
[-225.91253662 -131.39367676]
[-213.92616272 -122.37554169]
[-197.30360413 -128.33163452]
[-180.28274536 -123.07315826]
[-169.73171997 -108.52449799]
[-170.02619934 -90.39780426]
[-157.77165222 -81.74759674]
[-145.51708984 -73.09739685]
[-130.16050720 -80.87716675]
[-112.88997650 -79.80396271]
[-98.46700287 -70.08332825]
[-90.91376495 -54.31733322]
[-92.39156342 -36.80860519]
[-79.88013458 -28.53429794]
[-62.33287811 -28.41654015]
[-54.24472046 -11.87538624]
[-41.60916138 -3.79190636]
[-28.97360039 4.29157305]
[-21.64275742 5.24840832]
[-16.20891571 12.59483433]
[-3.69748855 20.86914253]
[8.81393909 29.14345169]
[21.32536697 37.41775894]
[33.23884583 35.30985260]
[43.73070908 42.10359192]
[46.87841415 54.61389923]
[59.26282883 63.07712936]
[71.64723969 71.54035950]
[84.03165436 80.00359344]
[99.81864166 74.41072083]
[115.68331909 79.77927399]
[124.82987976 93.80957794]
[139.80873108 94.60598755]
[154.78756714 95.40238953]
[169.76640320 96.19879913]
[184.74525452 96.99520111]
[198.93676758 90.00151825]
[211.23527527 98.40364838]
[226.21412659 99.20005035]
[236.31195068 91.17198944]
[248.77333069 92.14555359]
[256.95864868 101.05482483]
[271.92367554 102.07846069]
[286.88870239 103.10209656]
[301.85372925 104.12573242]
[316.81875610 105.14936829]
[331.78378296 106.17300415]
[346.69921875 104.58243561]
[361.11187744 100.42600250]
[375.52450562 96.26956177]
[389.93713379 92.11312103]
[404.34976196 87.95668030]
[409.20635986 83.46312714]
[414.76834106 82.27724457]
[419.26315308 83.89994812]
[433.79528809 80.18283081]
[448.32742310 76.46571350]
[462.85955811 72.74859619]
[477.39169312 69.03147888]
[486.77490234 56.01860046]
[502.80545044 55.38523102]
[513.18609619 67.61724091]
[509.95364380 83.33128357]
[495.58782959 90.47288513]
[481.10879517 83.56362152]
[466.57666016 87.28073883]
[452.04452515 90.99785614]
[437.51239014 94.71496582]
[422.98025513 98.43208313]
[408.50619507 102.36931610]
[394.09356689 106.52575684]
[379.68093872 110.68219757]
[365.26831055 114.83863068]
[350.85568237 118.99507141]
[350.62802124 133.99334717]
[364.90786743 138.58528137]
[379.18771362 143.17721558]
[393.46759033 147.76913452]
[409.37512207 143.78385925]
[420.58425903 155.75411987]
[415.56399536 171.36595154]
[399.47875977 174.55923462]
[388.87564087 162.04899597]
[374.59579468 157.45706177]
[360.31594849 152.86512756]
[346.03610229 148.27319336]
[356.36636353 159.14912415]
[353.38183594 173.84921265]
[344.23254395 185.73577881]
[330.78576660 192.38288879]
[315.78585815 192.43389893]
[302.29415894 185.87841797]
[293.06423950 174.05436707]
[289.97979736 159.37492371]
[293.67037964 144.83601379]
[303.38275146 133.40492249]
[317.13635254 127.41432953]
[330.76016235 121.13803864]
[315.79513550 120.11440277]
[300.83010864 119.09076691]
[285.86508179 118.06712341]
[270.90002441 117.04348755]
[255.93499756 116.01985168]
[240.61439514 124.57549286]
[225.41772461 114.17889404]
[210.43887329 113.38249207]
[197.31875610 120.43313599]
[183.94885254 111.97404480]
[168.97000122 111.17764282]
[153.99116516 110.38123322]
[139.01231384 109.58483124]
[124.03347778 108.78842163]
[118.56012726 117.61720276]
[110.02845764 123.54302979]
[99.84429932 125.58945465]
[95.36085510 139.90373230]
[90.87741852 154.21801758]
[86.39398193 168.53230286]
[81.91053772 182.84658813]
[77.42710114 197.16087341]
[72.94366455 211.47515869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 19]
[5 18]
[6 17]
[7 16]
[21 206]
[22 205]
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[29 114]
[30 113]
[31 112]
[32 111]
[34 108]
[35 107]
[36 106]
[37 105]
[38 103]
[39 102]
[40 101]
[43 99]
[44 98]
[51 93]
[52 92]
[53 91]
[59 87]
[60 86]
[61 85]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[69 76]
[117 197]
[118 196]
[119 195]
[120 194]
[121 193]
[123 191]
[124 190]
[127 188]
[128 187]
[129 186]
[130 185]
[131 184]
[132 183]
[133 159]
[134 158]
[135 157]
[136 156]
[137 155]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
