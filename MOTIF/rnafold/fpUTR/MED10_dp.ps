%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED10)
} def

/sequence { (\
CGCUGCUGGUUGAGGCUGUGUGGGUCGGGGACGGGCCGAGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006213954 ubox
1 12 0.007221198 ubox
1 18 0.003497363 ubox
1 20 0.180845160 ubox
1 22 0.019142791 ubox
1 38 0.051229570 ubox
1 43 0.878647457 ubox
2 7 0.004255930 ubox
2 10 0.014363061 ubox
2 11 0.005607029 ubox
2 16 0.025717590 ubox
2 19 0.186900412 ubox
2 21 0.020329740 ubox
2 37 0.051051065 ubox
2 42 0.975292937 ubox
3 9 0.015582161 ubox
3 14 0.022066979 ubox
3 15 0.025480782 ubox
3 18 0.187106534 ubox
3 20 0.020461818 ubox
3 23 0.006699964 ubox
3 40 0.076169888 ubox
3 41 0.973165050 ubox
4 8 0.014046373 ubox
4 13 0.022416423 ubox
4 14 0.023862883 ubox
4 18 0.004878957 ubox
4 22 0.006832623 ubox
4 38 0.049913654 ubox
4 39 0.093173285 ubox
4 40 0.956215616 ubox
4 43 0.008082034 ubox
5 16 0.202122461 ubox
5 19 0.010437649 ubox
5 21 0.011689245 ubox
5 36 0.968203698 ubox
5 37 0.075591117 ubox
5 42 0.014549457 ubox
6 14 0.024406117 ubox
6 15 0.202243515 ubox
6 18 0.010740403 ubox
6 20 0.012223692 ubox
6 34 0.009360945 ubox
6 35 0.971708824 ubox
6 40 0.008007413 ubox
6 41 0.014445517 ubox
7 13 0.027188546 ubox
7 14 0.198653794 ubox
7 18 0.010970502 ubox
7 33 0.011910344 ubox
7 34 0.968553492 ubox
7 38 0.093866718 ubox
7 39 0.007776768 ubox
7 40 0.012704693 ubox
8 17 0.019030871 ubox
8 32 0.013558426 ubox
8 37 0.103434761 ubox
9 16 0.019676532 ubox
9 32 0.971439412 ubox
9 36 0.103455297 ubox
9 42 0.018962736 ubox
10 15 0.018736136 ubox
10 29 0.005596640 ubox
10 30 0.047112432 ubox
10 31 0.969533019 ubox
10 34 0.012230650 ubox
10 35 0.102505769 ubox
10 41 0.018984896 ubox
11 27 0.007347798 ubox
11 28 0.012794470 ubox
11 29 0.079780605 ubox
11 30 0.954086319 ubox
11 33 0.017226342 ubox
11 34 0.098378548 ubox
11 40 0.018894482 ubox
12 26 0.010943578 ubox
12 32 0.021302332 ubox
13 25 0.009910484 ubox
14 26 0.968954988 ubox
14 37 0.022036063 ubox
15 21 0.003239764 ubox
15 25 0.971718179 ubox
15 36 0.022044874 ubox
15 42 0.045273251 ubox
16 20 0.003344252 ubox
16 23 0.031245659 ubox
16 24 0.971759061 ubox
16 28 0.042977084 ubox
16 29 0.013428095 ubox
16 30 0.086628649 ubox
16 34 0.010381422 ubox
16 35 0.021042683 ubox
16 41 0.045298249 ubox
17 22 0.038487993 ubox
17 23 0.963150206 ubox
17 27 0.043152361 ubox
17 28 0.012588619 ubox
17 29 0.086654777 ubox
17 33 0.012359438 ubox
17 34 0.018611658 ubox
17 40 0.043913636 ubox
17 43 0.027369016 ubox
18 26 0.043185121 ubox
18 32 0.014043014 ubox
18 42 0.049517401 ubox
19 24 0.013323749 ubox
19 27 0.086707105 ubox
19 31 0.013975039 ubox
19 33 0.013152543 ubox
19 38 0.004019415 ubox
19 41 0.049401017 ubox
19 43 0.005120262 ubox
20 26 0.086817514 ubox
20 32 0.017422782 ubox
20 42 0.016269312 ubox
21 31 0.017335203 ubox
21 38 0.155897100 ubox
21 41 0.015361622 ubox
21 43 0.011440603 ubox
22 37 0.201172829 ubox
22 42 0.019344224 ubox
23 36 0.201250561 ubox
23 37 0.048512764 ubox
24 32 0.004703852 ubox
24 36 0.048627020 ubox
24 42 0.025554599 ubox
25 31 0.004767786 ubox
25 34 0.200097232 ubox
25 35 0.045174820 ubox
25 39 0.027573611 ubox
25 41 0.025281161 ubox
26 30 0.004757118 ubox
26 33 0.203014646 ubox
26 34 0.041405471 ubox
26 38 0.029033432 ubox
26 40 0.024911040 ubox
27 32 0.203366732 ubox
27 37 0.029125078 ubox
28 36 0.029034874 ubox
28 37 0.018500891 ubox
29 36 0.018634916 ubox
29 37 0.016829369 ubox
30 36 0.016807047 ubox
35 42 0.006887890 ubox
36 41 0.006918910 ubox
37 43 0.006533374 ubox
38 42 0.008389786 ubox
1 43 0.9500000 lbox
2 42 0.9500000 lbox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 36 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
showpage
end
%%EOF
