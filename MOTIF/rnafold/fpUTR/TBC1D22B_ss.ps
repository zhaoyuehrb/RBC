%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUGGUCGGCCCGUCCACGGCUUGCGCAGCUCACCAAUGGCAGCGGUGCUGGGUGGAGGGGUGCCCACAUCCAAGAUGGCGUCCCCAGGAGCUGGGAGCGGGUGACCGGCGGCGGGGAAGCGGCCUGGGUUGGCCCUCAGAUUGCGGGGUCUGGGGGCAUCUCGCCGGGCAAACCCUUGGCCCGCCUACAAGGACUUCCCCCGGCCAGAGCA\
) } def
/len { sequence length } bind def

/coor [
[344.88842773 199.70695496]
[335.66070557 187.88116455]
[332.39489746 173.24099731]
[335.72186279 158.61459351]
[344.99890137 146.82745361]
[358.43438721 140.15644836]
[343.52435303 138.51588440]
[328.61434937 136.87532043]
[313.70431519 135.23474121]
[298.79431152 133.59417725]
[291.80395508 135.98645020]
[283.67901611 131.81915283]
[268.79455566 129.96090698]
[253.91009521 128.10266113]
[239.02565002 126.24440765]
[224.12802124 124.49494934]
[209.21800232 122.85438538]
[194.30798340 121.21381378]
[187.31762695 123.60608673]
[179.19267273 119.43879700]
[164.30822754 117.58054352]
[149.42376709 115.72229004]
[134.53932190 113.86404419]
[119.65486908 112.00579071]
[104.77041626 110.14753723]
[89.88596344 112.00579071]
[75.91524506 117.46646881]
[65.87874603 129.69673157]
[51.20808029 127.12365723]
[37.23735809 132.58433533]
[23.26664162 138.04501343]
[9.29592228 143.50569153]
[4.87851620 148.41828918]
[-0.54266602 150.11079407]
[-5.16365004 148.91525269]
[-19.28796387 153.96537781]
[-33.41227722 159.01550293]
[-36.79629517 174.06713867]
[-47.79668045 184.88357544]
[-62.90324783 188.01330566]
[-77.29554749 182.45764160]
[-86.38104248 169.98939514]
[-87.26059723 154.58712769]
[-79.65354156 141.16564941]
[-65.98725891 134.00769043]
[-50.62261200 135.39735413]
[-38.46240234 144.89118958]
[-24.33808708 139.84106445]
[-10.21377277 134.79093933]
[3.83524346 129.53497314]
[17.80596161 124.07429504]
[31.77668190 118.61361694]
[45.74739838 113.15293884]
[54.78461456 101.31326294]
[70.45456696 103.49575043]
[84.42528534 98.03507233]
[85.24556732 90.58006287]
[73.15321350 81.70453644]
[86.88613892 75.67005157]
[87.70642090 68.21504211]
[75.25725555 59.84734726]
[62.80809021 51.47965622]
[50.35892487 43.11196518]
[37.84895706 34.83544540]
[25.27885437 26.65054893]
[12.70875359 18.46565247]
[0.13865244 10.28075409]
[-5.06779051 10.00299168]
[-9.23197079 7.96165609]
[-11.85697746 4.84832907]
[-12.79203224 1.45157599]
[-24.99137878 -7.27630758]
[-37.19072342 -16.00419235]
[-53.59064484 -20.30290604]
[-53.99987793 -37.25191498]
[-37.82652664 -42.33710480]
[-28.46284103 -28.20353699]
[-16.26349449 -19.47565460]
[-4.06414890 -10.74777031]
[8.32355022 -2.28934765]
[20.89365196 5.89555025]
[33.46375275 14.08044815]
[46.03385544 22.26534653]
[53.35213852 23.28064156]
[58.72661591 30.66279793]
[71.17578125 39.03049088]
[83.62494659 47.39818192]
[96.07411194 55.76587677]
[108.23925018 68.74672699]
[111.49256897 83.34640503]
[106.62866211 95.26308441]
[121.51311493 97.12133789]
[136.39756775 98.97959137]
[151.28201294 100.83783722]
[166.16647339 102.69609070]
[181.05091858 104.55434418]
[195.94854736 106.30380249]
[210.85856628 107.94436646]
[225.76858521 109.58493805]
[234.63792419 107.41331482]
[240.88389587 111.35995483]
[255.76835632 113.21820831]
[270.65280151 115.07645416]
[285.53726196 116.93470764]
[300.43487549 118.68416595]
[315.34490967 120.32472992]
[330.25491333 121.96530151]
[345.16491699 123.60586548]
[360.07495117 125.24643707]
[375.07135010 125.57518005]
[390.03890991 124.58957672]
[405.00650024 123.60397339]
[412.65780640 112.52141571]
[425.11288452 107.93509674]
[437.74829102 111.30877686]
[446.00991821 121.19461823]
[460.99032593 120.42781830]
[475.97070312 119.66101837]
[490.95108032 118.89421844]
[505.93148804 118.12741852]
[520.91186523 117.36062622]
[535.89227295 116.59382629]
[543.35699463 99.98489380]
[562.64636230 91.70886230]
[585.13659668 99.44309235]
[599.10736084 93.98240662]
[613.07806396 88.52172852]
[627.04876709 83.06105042]
[641.01947021 77.60037231]
[654.99023438 72.13969421]
[657.22723389 54.70642090]
[667.93261719 40.87907410]
[684.08447266 34.41316605]
[701.19799805 37.00689697]
[714.57025146 47.85621262]
[728.37542725 41.98964310]
[742.18060303 36.12307358]
[755.98577881 30.25650215]
[769.79101562 24.38993073]
[783.59619141 18.52335930]
[797.40136719 12.65678883]
[811.20660400 6.79021835]
[825.01177979 0.92364764]
[838.81695557 -4.94292307]
[852.62213135 -10.80949402]
[862.04846191 -24.22876549]
[878.35681152 -22.50566483]
[884.77062988 -7.41277266]
[874.69183350 5.52363920]
[858.48870850 2.99569869]
[844.68353271 8.86226940]
[830.87835693 14.72884083]
[817.07312012 20.59541130]
[803.26794434 26.46198273]
[789.46276855 32.32855225]
[775.65759277 38.19512177]
[761.85235596 44.06169510]
[748.04718018 49.92826462]
[734.24200439 55.79483795]
[720.43676758 61.66140747]
[720.26110840 74.29089355]
[715.30462646 85.95923615]
[706.27081299 94.91992950]
[694.47631836 99.81727600]
[681.65899658 99.89141846]
[669.72192383 95.09602356]
[660.45086670 86.11041260]
[646.48016357 91.57109070]
[632.50946045 97.03176880]
[618.53875732 102.49244690]
[604.56799316 107.95313263]
[590.59729004 113.41381073]
[589.28894043 120.79880524]
[604.05889893 123.41576385]
[601.44171143 138.18566895]
[586.67224121 135.56880188]
[585.36389160 142.95379639]
[596.60827637 152.88169861]
[607.85272217 162.80958557]
[619.09710693 172.73748779]
[630.34155273 182.66539001]
[645.15539551 178.35798645]
[659.93981934 182.76524353]
[669.97717285 194.48081970]
[672.06463623 209.76631165]
[665.53601074 223.74417114]
[652.47460938 231.95411682]
[637.04827881 231.77639771]
[624.17944336 223.26770020]
[617.97460938 209.14314270]
[620.41363525 193.90980530]
[609.16918945 183.98190308]
[597.92480469 174.05401611]
[586.68035889 164.12611389]
[575.43597412 154.19821167]
[548.38427734 150.68218994]
[536.65905762 131.57421875]
[521.67864990 132.34100342]
[506.69827271 133.10780334]
[491.71789551 133.87460327]
[476.73748779 134.64140320]
[461.75711060 135.40820312]
[446.77673340 136.17500305]
[436.05035400 149.12992859]
[418.93615723 150.34107971]
[405.99212646 138.57156372]
[391.02453613 139.55715942]
[376.05694580 140.54277039]
[389.18679810 147.79580688]
[397.93856812 159.97802734]
[400.62158203 174.73612976]
[396.71755981 189.21917725]
[386.98065186 200.62937927]
[373.29183960 206.76255798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 109]
[7 108]
[8 107]
[9 106]
[10 105]
[12 104]
[13 103]
[14 102]
[15 101]
[16 99]
[17 98]
[18 97]
[20 96]
[21 95]
[22 94]
[23 93]
[24 92]
[25 91]
[26 56]
[27 55]
[29 53]
[30 52]
[31 51]
[32 50]
[35 49]
[36 48]
[37 47]
[60 88]
[61 87]
[62 86]
[63 85]
[64 83]
[65 82]
[66 81]
[67 80]
[71 79]
[72 78]
[73 77]
[110 208]
[111 207]
[112 206]
[116 203]
[117 202]
[118 201]
[119 200]
[120 199]
[121 198]
[122 197]
[125 172]
[126 171]
[127 170]
[128 169]
[129 168]
[130 167]
[135 160]
[136 159]
[137 158]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[177 195]
[178 194]
[179 193]
[180 192]
[181 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
