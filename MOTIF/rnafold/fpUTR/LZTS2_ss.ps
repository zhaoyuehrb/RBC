%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCACCAGGUCGGGCCAGGCGGGCGCCGGGAGCUGGGAGCCGGGAGCCCAGAGUUCGGAACCUAGAGUUCGGAGCCGGCUAGGGAGCCGGCGUUGUCGCGGCGAGGAGGUGGGCGCGCUGGAGCAGGAGCGGGGCCGGAACUGGAGCCGAGGCGCAGGUGGCGCUGGGUCGCCUGCGAGGCCGCUGGCCAGGCCUGAGCCUCUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[207.05737305 280.28436279]
[197.21180725 268.96777344]
[193.48345947 254.43852234]
[196.66342163 239.77947998]
[206.07695007 228.10105896]
[219.72663879 221.88125610]
[234.71604919 222.43977356]
[223.20951843 212.81689453]
[211.70298767 203.19401550]
[200.19647217 193.57112122]
[185.46968079 191.34155273]
[179.84721375 176.55310059]
[168.34068298 166.93022156]
[153.61390686 164.70065308]
[147.99143982 149.91218567]
[136.48490906 140.28930664]
[124.97838593 130.66642761]
[113.47185516 121.04354095]
[86.81666565 127.49590302]
[64.20693207 103.85097504]
[49.23327255 104.73958588]
[34.25961685 105.62818909]
[20.94204521 114.16943359]
[7.77876329 107.19969177]
[-7.19489288 108.08830261]
[-22.16854858 108.97691345]
[-35.48612213 117.51815796]
[-48.64940262 110.54841614]
[-63.62305832 111.43702698]
[-78.59671783 112.32563782]
[-93.57037354 113.21424103]
[-108.54402924 114.10285187]
[-119.01219940 125.63780975]
[-134.21028137 126.32567596]
[-145.14257812 116.27478790]
[-160.11622620 117.16339874]
[-175.08988953 118.05200958]
[-190.06353760 118.94062042]
[-205.03720093 119.82922363]
[-215.50537109 131.36418152]
[-230.70344543 132.05204773]
[-241.63575745 122.00115967]
[-256.60940552 122.88977051]
[-271.58306885 123.77838135]
[-286.55673218 124.66699219]
[-301.53036499 125.55560303]
[-308.99774170 139.05531311]
[-322.58898926 146.35470581]
[-337.96722412 145.12457275]
[-350.22531128 135.75746155]
[-355.45172119 121.24236298]
[-351.97875977 106.21099854]
[-340.91458130 95.45981598]
[-325.78976440 92.41949463]
[-311.43057251 98.06017303]
[-302.41897583 110.58194733]
[-287.44534302 109.69333649]
[-272.47167969 108.80472565]
[-257.49801636 107.91611481]
[-242.52435303 107.02750397]
[-232.85754395 95.75416565]
[-217.68478394 94.63968658]
[-205.92581177 104.85556793]
[-190.95214844 103.96696472]
[-175.97850037 103.07835388]
[-161.00483704 102.18974304]
[-146.03118896 101.30113220]
[-136.36436462 90.02779388]
[-121.19161224 88.91331482]
[-109.43264008 99.12919617]
[-94.45898438 98.24058533]
[-79.48532867 97.35198212]
[-64.51166534 96.46337128]
[-49.53801346 95.57476044]
[-37.29145813 87.09707642]
[-23.05715752 94.00325775]
[-8.08350182 93.11464691]
[6.89015388 92.22603607]
[19.13671112 83.74835205]
[33.37100983 90.65453339]
[48.34466553 89.76593018]
[63.31832123 88.87731934]
[68.12976074 83.12405396]
[54.21284103 77.52768707]
[55.23492050 62.56254959]
[69.78350067 58.91030884]
[77.75263977 71.61753082]
[82.56408691 65.86426544]
[80.78998566 50.96954727]
[79.01588440 36.07483292]
[69.70070648 23.28663635]
[75.87840271 9.73358059]
[74.10430908 -5.16113615]
[64.78912354 -17.94933128]
[70.96681976 -31.50238609]
[69.19272614 -46.39710236]
[59.87754059 -59.18529892]
[66.05523682 -72.73835754]
[64.28114319 -87.63307190]
[62.50704193 -102.52778625]
[54.62979889 -117.54062653]
[66.87528992 -129.26599121]
[81.53231812 -120.74496460]
[77.40175629 -104.30188751]
[79.17585754 -89.40716553]
[80.94995117 -74.51245117]
[90.13824463 -62.78962708]
[84.08744049 -48.17119980]
[85.86153412 -33.27648544]
[95.04982758 -21.55365944]
[88.99902344 -6.93523359]
[90.77311707 7.95948267]
[99.96141052 19.68230820]
[93.91060638 34.30073166]
[95.68470001 49.19544983]
[97.45880127 64.09016418]
[103.08097076 69.66301727]
[106.73858643 75.93938446]
[114.93301392 63.37549591]
[123.12744141 50.81160355]
[131.32186890 38.24771118]
[125.66407013 23.79887009]
[129.61219788 8.79247570]
[141.64811707 -1.00121045]
[157.14376831 -1.81631470]
[170.14076233 6.66058683]
[175.64147949 21.16995239]
[171.53079224 36.13263321]
[159.38934326 45.79517746]
[143.88575745 46.44213486]
[135.69132996 59.00602722]
[127.49691010 71.56992340]
[119.30248260 84.13381195]
[124.71258545 96.31083679]
[123.09474182 109.53701782]
[134.60127258 119.15989685]
[146.10778809 128.78277588]
[157.61431885 138.40565491]
[173.16413879 141.32353210]
[177.96356201 155.42369080]
[189.47009277 165.04656982]
[205.01991272 167.96443176]
[209.81935120 182.06460571]
[221.32586670 191.68748474]
[232.83239746 201.31036377]
[244.33892822 210.93324280]
[255.93908691 213.40228271]
[260.81552124 222.75561523]
[273.61672974 230.57412720]
[289.42691040 231.16413879]
[296.25558472 244.40113831]
[309.05679321 252.21966553]
[321.85800171 260.03817749]
[334.65921021 267.85668945]
[347.46041870 275.67520142]
[361.31860352 281.41546631]
[375.89895630 284.93875122]
[390.47927856 288.46203613]
[405.05963135 291.98532104]
[419.63998413 295.50863647]
[434.22030640 299.03192139]
[448.80065918 302.55520630]
[463.38101196 306.07849121]
[477.96136475 309.60177612]
[492.34707642 302.50033569]
[506.80673218 309.45004272]
[510.24810791 325.11962891]
[500.03125000 337.48880005]
[483.99371338 337.06890869]
[474.43804932 324.18212891]
[459.85772705 320.65884399]
[445.27737427 317.13555908]
[430.69702148 313.61227417]
[416.11669922 310.08895874]
[401.53634644 306.56567383]
[386.95599365 303.04238892]
[372.37564087 299.51910400]
[357.79531860 295.99581909]
[353.83874512 302.36727905]
[341.96899414 321.48165894]
[351.59188843 332.98818970]
[361.21478271 344.49468994]
[370.83764648 356.00122070]
[380.46054077 367.50775146]
[395.93182373 366.31652832]
[409.13085938 374.47521973]
[414.98239136 388.84671021]
[411.23635864 403.90481567]
[399.33316040 413.85940552]
[383.84988403 414.88275146]
[370.74011230 406.58132935]
[365.04483032 392.14721680]
[368.95401001 377.13064575]
[359.33111572 365.62411499]
[349.70825195 354.11758423]
[340.08535767 342.61105347]
[330.46249390 331.10452271]
[325.90075684 312.75326538]
[329.95971680 297.45126343]
[339.64190674 288.47640991]
[326.84069824 280.65789795]
[314.03948975 272.83938599]
[301.23828125 265.02087402]
[288.43707275 257.20233154]
[273.54251099 257.17156982]
[265.79818726 243.37532043]
[252.99699402 235.55680847]
[258.32678223 249.57798767]
[256.80609131 264.50070190]
[248.75761414 277.15859985]
[235.88909912 284.86581421]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 146]
[8 145]
[9 144]
[10 143]
[12 141]
[13 140]
[15 138]
[16 137]
[17 136]
[18 135]
[20 82]
[21 81]
[22 80]
[24 78]
[25 77]
[26 76]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[35 67]
[36 66]
[37 65]
[38 64]
[39 63]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[88 116]
[89 115]
[90 114]
[92 112]
[93 111]
[95 109]
[96 108]
[98 106]
[99 105]
[100 104]
[118 133]
[119 132]
[120 131]
[121 130]
[148 207]
[149 206]
[151 204]
[152 203]
[153 202]
[154 201]
[155 200]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[180 197]
[181 196]
[182 195]
[183 194]
[184 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
