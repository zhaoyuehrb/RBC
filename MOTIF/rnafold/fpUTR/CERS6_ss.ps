%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCAGAGGGAGGAGAGAACCGGGGCUCGCCGCGAGCCUUCGAGAGCAGCGGCCGCGGAGGAGGCGGCGGCGGCGGGCGGGAGCAGCGGCGGCGGCGGCACAGGCUCGGGGCCAGCCGGGCGCGCAUCCCCGGGCGCCCUGCGCGGUGGAGAGCUUGGCGGGCUGCGGGUGCCGCAGGACAGGAGUGGACAAAGCAAG\
) } def
/len { sequence length } bind def

/coor [
[77.42071533 173.85508728]
[76.71763611 158.87156677]
[62.10120392 155.50111389]
[54.90779495 168.66374207]
[47.71438217 181.82637024]
[40.52097321 194.98899841]
[45.77470016 207.39639282]
[42.96172333 220.37426758]
[33.32870865 229.22927856]
[20.54641342 230.89166260]
[13.14815998 243.94026184]
[21.00038338 257.14019775]
[21.18459892 272.49798584]
[13.65124989 285.88244629]
[0.42677197 293.69326782]
[-14.93151760 293.82934570]
[-28.29231644 286.25405884]
[-36.06163406 273.00518799]
[-36.14956665 257.64654541]
[-28.53246117 244.30953979]
[-15.25927639 236.58178711]
[0.09956441 236.54200745]
[7.49781799 223.49340820]
[2.32850170 207.49357605]
[10.48759365 192.40666199]
[27.35834122 187.79559326]
[34.55175400 174.63296509]
[41.74516296 161.47032166]
[48.93857574 148.30769348]
[43.66168213 134.26652527]
[29.57970428 129.09953308]
[15.49772644 123.93252563]
[1.41574967 118.76551819]
[-12.66622734 113.59851837]
[-26.74820518 108.43151855]
[-38.76393890 113.13486481]
[-50.38966751 108.53533173]
[-55.58950806 97.60780334]
[-69.58900452 92.22133636]
[-85.24715424 94.48695374]
[-94.34707642 82.69540405]
[-108.34657288 77.30893707]
[-122.34607697 71.92247772]
[-136.34558105 66.53601837]
[-149.34268188 74.80533600]
[-164.53923035 73.84712982]
[-176.12065125 64.23803711]
[-179.77929688 49.82441711]
[-193.77879333 44.43795776]
[-209.43695068 46.70357513]
[-218.53686523 34.91202164]
[-232.53636169 29.52555847]
[-248.19451904 31.79117584]
[-257.29443359 19.99962234]
[-271.29394531 14.61316013]
[-285.29342651 9.22669888]
[-299.29293823 3.84023762]
[-313.29244995 -1.54622376]
[-326.88677979 6.18214417]
[-342.25897217 3.31330395]
[-352.15069580 -8.79816532]
[-351.89141846 -24.43359947]
[-341.60351562 -36.21042252]
[-326.14468384 -38.56798172]
[-312.81405640 -30.39310646]
[-307.90597534 -15.54572487]
[-293.90646362 -10.15926361]
[-279.90698242 -4.77280235]
[-265.90747070 0.61365914]
[-251.90797424 6.00012064]
[-237.25115967 3.34922814]
[-227.14990234 15.52605724]
[-213.15040588 20.91251945]
[-198.49359131 18.26162720]
[-188.39233398 30.43845558]
[-174.39283752 35.82491684]
[-162.01644897 27.58095932]
[-146.98100281 28.21299553]
[-135.06138611 37.68803024]
[-130.95912170 52.53651810]
[-116.95961761 57.92297745]
[-102.96011353 63.30944061]
[-88.96060944 68.69589996]
[-74.30380249 66.04500580]
[-64.20254517 78.22183990]
[-50.20304489 83.60829926]
[-33.04452515 79.94342041]
[-21.58120155 94.34954071]
[-7.49922466 99.51654053]
[6.58275223 104.68354797]
[20.66473007 109.85054779]
[34.74670792 115.01754761]
[48.82868576 120.18455505]
[53.33028793 83.56189728]
[78.24611664 61.80942154]
[107.50505829 62.31672668]
[125.99002838 79.83563995]
[139.62564087 73.58502960]
[153.26126099 67.33442688]
[166.89686584 61.08381653]
[180.53248596 54.83320999]
[182.92732239 51.18928146]
[186.04563904 48.74723053]
[189.41912842 47.58690643]
[192.60186768 47.62730789]
[195.22093201 48.64794540]
[209.22042847 43.26148224]
[223.21994019 37.87502289]
[237.21943665 32.48855972]
[251.21893311 27.10209846]
[261.32019043 14.92527008]
[275.97702026 17.57616234]
[289.97650146 12.18970108]
[303.97601318 6.80323935]
[317.97549438 1.41677809]
[328.07675171 -10.76005173]
[342.73358154 -8.10915852]
[356.73306274 -13.49561977]
[370.73257446 -18.88208199]
[384.73208618 -24.26854324]
[398.73156738 -29.65500450]
[412.73107910 -35.04146576]
[426.73059082 -40.42792892]
[428.49734497 -50.96375656]
[434.43637085 -59.74629974]
[443.41842651 -65.22545624]
[453.78475952 -66.46799469]
[463.65332031 -63.31593323]
[471.26043701 -56.40304947]
[485.49700928 -61.12740326]
[499.73361206 -65.85175323]
[513.93286133 -70.68721771]
[528.09387207 -75.63349915]
[542.25488281 -80.57978058]
[552.73175049 -92.43495178]
[567.29858398 -89.32726288]
[581.45959473 -94.27354431]
[589.69555664 -108.04120636]
[605.61322021 -110.04317474]
[617.00189209 -98.74372101]
[615.12518311 -82.81081390]
[601.42272949 -74.46681976]
[586.40588379 -80.11253357]
[572.24487305 -75.16625214]
[562.78082275 -63.66487122]
[547.20117188 -66.41876984]
[533.04016113 -61.47248840]
[518.87915039 -56.52620697]
[513.59680176 -51.34848022]
[504.45797729 -51.61516571]
[490.22137451 -46.89081192]
[475.98477173 -42.16645813]
[468.56161499 -24.16239548]
[450.00927734 -17.30445099]
[432.11703491 -26.42842674]
[418.11755371 -21.04196358]
[404.11804199 -15.65550327]
[390.11853027 -10.26904202]
[376.11904907 -4.88258028]
[362.11953735 0.50388098]
[348.12002563 5.89034224]
[339.02011108 17.68189621]
[323.36196899 15.41627884]
[309.36245728 20.80274010]
[295.36297607 26.18920135]
[281.36346436 31.57566261]
[272.26354980 43.36721802]
[256.60540771 41.10160065]
[242.60589600 46.48806000]
[228.60639954 51.87452316]
[214.60690308 57.26098251]
[200.60739136 62.64744568]
[186.78308105 68.46882629]
[173.14747620 74.71942902]
[159.51185608 80.97003937]
[145.87625122 87.22064209]
[132.24063110 93.47124481]
[137.30914307 100.79927826]
[140.51768494 110.02874756]
[141.28514099 120.65340424]
[139.17207336 132.00720215]
[133.92181396 143.30392456]
[140.90861511 156.57737732]
[155.06063843 164.86306763]
[154.69047546 181.25802612]
[140.17892456 188.89654541]
[126.45422363 179.92076111]
[127.63516998 163.56419373]
[120.64836121 150.29074097]
[113.41156006 152.26017761]
[117.35042572 166.73377991]
[121.28907776 181.20745850]
[106.81534576 185.14587402]
[102.87682343 170.67265320]
[98.93795013 156.19905090]
[91.70114899 158.16848755]
[92.40422821 173.15199280]
[101.71105194 186.65440369]
[94.42761230 201.34738159]
[78.04648590 202.11604309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 29]
[4 28]
[5 27]
[6 26]
[10 23]
[11 22]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[38 86]
[39 85]
[41 83]
[42 82]
[43 81]
[44 80]
[48 76]
[49 75]
[51 73]
[52 72]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[97 177]
[98 176]
[99 175]
[100 174]
[101 173]
[106 172]
[107 171]
[108 170]
[109 169]
[110 168]
[112 166]
[113 165]
[114 164]
[115 163]
[117 161]
[118 160]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[129 152]
[130 151]
[131 150]
[132 148]
[133 147]
[134 146]
[136 144]
[137 143]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
