%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGUCACGUGGUGCAGAGCACGCAGAGUCCUUCUGUCGGUUGGUCCUGGAGCGGCGCAGCCGGAGUGGGGCCGUGAGGAGAAUAAAGGCAGCCCCGUUGAUGACUGAAA\
) } def
/len { sequence length } bind def

/coor [
[134.34701538 194.78962708]
[128.60676575 180.93142700]
[122.86651611 167.07324219]
[117.12626648 153.21504211]
[110.99960327 139.52330017]
[104.49134827 126.00875854]
[97.98309326 112.49422455]
[95.86508179 114.09386444]
[93.32450104 115.32939911]
[81.33934021 124.34915161]
[69.35418701 133.36891174]
[57.36903000 142.38867188]
[57.76480484 157.90069580]
[48.93954086 170.66369629]
[34.28673172 175.77005005]
[19.44068146 171.25625610]
[10.10999870 158.85794067]
[9.88252163 143.34252930]
[18.84572029 130.67601013]
[33.55306244 125.72891998]
[48.34927368 130.40350342]
[60.33443069 121.38375092]
[72.31958771 112.36399841]
[84.30474091 103.34423828]
[89.05988312 89.11790466]
[84.90734863 74.70413971]
[71.35653687 67.02213287]
[67.35060883 52.34537506]
[74.75774384 39.47409058]
[70.60520935 25.06032944]
[66.45267487 10.64657021]
[62.30014420 -3.76718998]
[58.14761353 -18.18095016]
[46.89233017 -29.29981422]
[50.80387497 -43.67163086]
[46.65134048 -58.08539200]
[41.19400406 -65.59349060]
[42.59056854 -72.96185303]
[38.84392166 -87.48640442]
[35.09727478 -102.01096344]
[31.35062790 -116.53551483]
[27.60398102 -131.06007385]
[23.85733414 -145.58462524]
[20.11068726 -160.10917664]
[6.78066063 -168.16821289]
[3.18793511 -182.95155334]
[10.95314693 -195.61003113]
[7.20650005 -210.13458252]
[-6.53156185 -217.94746399]
[-10.64067745 -233.20822144]
[-2.68298030 -246.86291504]
[12.62036800 -250.81045532]
[26.19016266 -242.70883179]
[29.97568512 -227.36460876]
[21.73105240 -213.88122559]
[25.47769928 -199.35667419]
[38.39714050 -192.03385925]
[42.40368271 -177.35726929]
[34.63523865 -163.85581970]
[38.38188553 -149.33126831]
[42.12853622 -134.80671692]
[45.87518311 -120.28215790]
[49.62182999 -105.75760651]
[53.36847687 -91.23305511]
[57.11512375 -76.70850372]
[61.06510162 -62.23792267]
[65.21763611 -47.82416153]
[76.17590332 -37.73626709]
[72.56137085 -22.33348274]
[76.71390533 -7.91972256]
[80.86643982 6.49403715]
[85.01897430 20.90779686]
[89.17150116 35.32155609]
[102.29123688 42.27915192]
[106.70782471 56.83760071]
[99.32110596 70.55161285]
[103.47364044 84.96537018]
[106.75442505 70.32855225]
[116.24811554 58.71520615]
[129.94029236 52.58950806]
[144.92568970 53.25123596]
[158.02462769 60.55998611]
[166.45771790 72.96495056]
[168.43556213 87.83398438]
[163.53852844 102.01210022]
[152.80566406 112.49091339]
[138.51432800 117.04698944]
[123.69692993 114.71358490]
[111.49762726 105.98596954]
[118.00588226 119.50050354]
[124.51413727 133.01504517]
[129.93869019 137.19085693]
[132.01524353 142.67654419]
[130.98446655 147.47479248]
[136.72471619 161.33297729]
[142.46496582 175.19117737]
[148.20521545 189.04937744]
[163.37821960 188.66946411]
[177.66253662 193.80001831]
[189.12634277 203.74717712]
[196.21923828 217.16564941]
[197.98196411 232.24069214]
[194.17613220 246.93354797]
[185.31645203 259.25714111]
[172.60113525 267.54476929]
[157.74980164 270.67562866]
[142.77096558 268.22625732]
[129.69042969 260.52798462]
[120.27719116 248.62187195]
[115.80432892 234.11814880]
[116.87677002 218.97831726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 97]
[2 96]
[3 95]
[4 94]
[5 91]
[6 90]
[7 89]
[9 24]
[10 23]
[11 22]
[12 21]
[25 77]
[26 76]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[35 67]
[36 66]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[47 56]
[48 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
