%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACCAGGAGGGGAAGCUGAGUGGCUUCUGGAAUAAACUUUGGGUGUGAGACGGGAUUCAGGCUGUGGCUAAUGUGCUGGAAGCACGCACAGUUGUGACCAUCAAGU\
) } def
/len { sequence length } bind def

/coor [
[155.84948730 156.02143860]
[140.98461914 158.03031921]
[126.58385468 153.83291626]
[115.12751007 144.15339661]
[114.97711182 129.15414429]
[107.91807556 142.38932800]
[109.00988770 158.75209045]
[95.23648071 167.65295410]
[80.76676941 159.93548584]
[80.48594666 143.53874207]
[94.68289948 135.33029175]
[101.74192810 122.09510803]
[92.00843048 110.68200684]
[77.82486725 115.56325531]
[63.64130783 120.44450378]
[49.45774841 125.32575989]
[35.27418900 130.20701599]
[21.09062767 135.08825684]
[6.90706730 139.96951294]
[-3.43955898 152.69268799]
[-19.58638763 149.82704163]
[-24.92294312 134.32048035]
[-13.95943832 122.12484741]
[2.02581596 125.78594971]
[16.20937729 120.90470123]
[30.39293671 116.02345276]
[44.57649612 111.14219666]
[58.76005936 106.26094818]
[72.94361877 101.37969208]
[87.12718201 96.49844360]
[99.33821106 87.78692627]
[108.56935120 75.96380615]
[102.93039703 61.74587631]
[105.15052795 46.71365356]
[114.53443909 34.88958359]
[128.48352051 29.38693810]
[143.21479797 31.59037590]
[152.44592285 19.76725769]
[161.67706299 7.94413900]
[170.90820312 -3.87897921]
[173.30235291 -19.51798820]
[187.23342896 -24.78812027]
[196.46456909 -36.61123657]
[198.85871887 -52.25024796]
[212.78979492 -57.52037811]
[222.02093506 -69.34349823]
[231.25207520 -81.16661835]
[240.48321533 -92.98973083]
[235.68908691 -106.00441742]
[237.97308350 -119.57439423]
[246.62561035 -130.13439941]
[259.27838135 -134.96444702]
[272.55187988 -132.89001465]
[282.11990356 -144.44219971]
[291.68792725 -155.99438477]
[294.53176880 -171.55790710]
[308.60891724 -176.42439270]
[318.17694092 -187.97657776]
[314.48202515 -202.93162537]
[320.23437500 -217.02999878]
[333.03396606 -224.94421387]
[347.86190796 -223.81744385]
[357.42993164 -235.36962891]
[366.99795532 -246.92181396]
[369.20718384 -263.17147827]
[384.48483276 -269.13177490]
[397.11456299 -258.67129517]
[394.10400391 -242.55085754]
[378.55014038 -237.35379028]
[368.98211670 -225.80160522]
[359.41409302 -214.24942017]
[363.28283691 -199.89077759]
[357.89099121 -185.84114075]
[345.11068726 -177.56364441]
[329.72912598 -178.40855408]
[320.16110229 -166.85636902]
[318.00164795 -152.11914062]
[303.24011230 -146.42636108]
[293.67208862 -134.87417603]
[284.10406494 -123.32199860]
[288.69635010 -107.63465118]
[283.02819824 -92.12715149]
[269.12661743 -82.91628265]
[252.30632019 -83.75859833]
[243.07519531 -71.93547821]
[233.84405518 -60.11236191]
[224.61291504 -48.28924179]
[222.87904358 -33.49589920]
[208.28768921 -27.38010216]
[199.05654907 -15.55698299]
[197.32267761 -0.76364249]
[182.73132324 5.35215712]
[173.50018311 17.17527580]
[164.26904297 28.99839401]
[155.03791809 40.82151031]
[160.74853516 54.57849121]
[158.79344177 69.44568634]
[149.59843445 81.41725159]
[135.55354309 87.21705627]
[120.39247131 85.19493866]
[111.16133118 97.01805878]
[124.93071747 91.06793976]
[139.09056091 86.11829376]
[154.04057312 87.34189606]
[167.20713806 94.52809906]
[176.32365417 106.43982697]
[179.82072449 121.02648163]
[177.09634399 135.77699280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 12]
[6 11]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[31 101]
[32 100]
[37 95]
[38 94]
[39 93]
[40 92]
[42 90]
[43 89]
[45 87]
[46 86]
[47 85]
[48 84]
[53 80]
[54 79]
[55 78]
[57 76]
[58 75]
[62 71]
[63 70]
[64 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
