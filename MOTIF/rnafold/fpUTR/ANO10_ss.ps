%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCGUGUGACCGCAUCUAGGCCCCGCCGCGUCCGCCACGCCCAGCGCUCGGCGGCGCCCGCCCCACUGGCCUGGCCCGCCCCCCGCACCGAGCACUCUUUCGCCCGGCCUCCGGUUCUCGCCGGCUCUCGGACCCGCCUCCGAAGACGUGGAGCGCUGCGGCGGCUGAUUUGUCAAAG\
) } def
/len { sequence length } bind def

/coor [
[79.30599213 596.09191895]
[65.03519440 601.50549316]
[49.82952118 600.18255615]
[36.70806503 592.38574219]
[28.27610397 579.66314697]
[26.20780945 564.54083252]
[30.91384506 550.02130127]
[41.45981979 538.98748779]
[55.75182724 533.63012695]
[57.05195999 518.68658447]
[58.35208893 503.74304199]
[59.65222168 488.79946899]
[50.05687332 480.17611694]
[47.14498520 467.40832520]
[52.20065689 455.11706543]
[63.58198929 447.88415527]
[65.14128113 432.96542358]
[66.70057678 418.04669189]
[64.42453766 413.82015991]
[64.79821777 408.11538696]
[68.58167267 402.64044189]
[70.65781403 387.78482056]
[72.73394775 372.92916870]
[74.81008911 358.07354736]
[76.75722504 343.20046997]
[78.57521820 328.31103516]
[80.39320374 313.42163086]
[82.21119690 298.53219604]
[76.07347107 284.96099854]
[85.42630768 272.20031738]
[87.24429321 257.31088257]
[89.06228638 242.42146301]
[90.88027954 227.53204346]
[83.86627960 220.05603027]
[82.10242462 209.73455811]
[86.41272736 199.95094299]
[95.58914948 194.04827881]
[97.92280579 179.23091125]
[100.25646973 164.41355896]
[102.59012604 149.59620667]
[104.92378235 134.77885437]
[89.81352997 132.61671448]
[77.45524597 124.39211273]
[70.05809784 112.00733948]
[68.75558472 98.06150818]
[73.44375610 85.30851746]
[62.51992416 75.02892303]
[51.59609222 64.74933624]
[36.43726349 67.49087524]
[22.73099327 60.85826492]
[15.64225388 47.58370972]
[17.70470047 32.85671616]
[6.78087044 22.57712936]
[-4.14295959 12.29754066]
[-15.06678963 2.01795268]
[-25.99061966 -8.26163578]
[-34.40909576 -11.87717438]
[-37.01287460 -18.81569481]
[-47.75664520 -29.28332901]
[-58.50041962 -39.75096512]
[-76.43851471 -43.85551834]
[-80.56527710 -60.90058517]
[-91.48910522 -71.18016815]
[-102.41293335 -81.45976257]
[-118.42771912 -82.41170502]
[-127.55036163 -95.60855865]
[-122.78274536 -110.92682648]
[-107.78218079 -116.61564636]
[-94.05581665 -108.31104279]
[-92.13334656 -92.38359070]
[-81.20951843 -82.10400391]
[-70.28569031 -71.82441711]
[-58.17234421 -71.87357330]
[-48.98565674 -63.37533188]
[-48.03278351 -50.49473572]
[-37.28901291 -40.02710342]
[-26.54524040 -29.55946732]
[-15.71103191 -19.18546677]
[-4.78720140 -8.90587711]
[6.13662863 1.37371087]
[17.06045914 11.65329933]
[27.98428917 21.93288803]
[42.55889893 18.98014450]
[56.23933792 25.24988747]
[63.69184494 38.52819824]
[61.87568283 53.82550812]
[72.79951477 64.10509491]
[83.72334290 74.38468170]
[88.08196259 65.81862640]
[95.59631348 58.18137360]
[100.20680237 43.90750122]
[104.81729126 29.63362885]
[101.69624329 14.12332249]
[112.97091675 4.39034081]
[117.58140564 -9.88353062]
[108.33045959 -22.34144402]
[108.20252991 -37.85799026]
[117.24680328 -50.46674347]
[131.98558044 -55.31938171]
[146.75149536 -50.54996490]
[155.86676025 -37.99242783]
[155.82635498 -22.47540665]
[146.64582825 -9.96550751]
[131.85527039 -5.27304411]
[127.24478912 9.00082779]
[130.69561768 23.49017143]
[119.09116364 34.24411774]
[114.48067474 48.51798630]
[109.87018585 62.79185867]
[115.79714966 67.38763428]
[129.68420410 61.71758270]
[127.65106964 76.57918549]
[133.57803345 81.17495728]
[146.25408936 73.15515137]
[158.93016052 65.13533783]
[171.60623169 57.11553192]
[184.28230286 49.09572220]
[191.41682434 34.32986450]
[207.78933716 33.39562225]
[216.55720520 47.25407028]
[208.70079041 61.64881897]
[192.30210876 61.77178955]
[179.62603760 69.79159546]
[166.94996643 77.81140900]
[154.27391052 85.83121490]
[141.59783936 93.85102081]
[138.33683777 104.39331818]
[132.68524170 112.86416626]
[147.63951111 114.03456116]
[162.59378052 115.20495605]
[177.55764771 116.24553680]
[192.52998352 117.15621185]
[207.50230408 118.06688690]
[222.47463989 118.97756195]
[234.14019775 108.31498718]
[249.92459106 109.10765839]
[260.46322632 120.88528442]
[259.50372314 136.66041565]
[247.61532593 147.07395935]
[231.85122681 145.94772339]
[221.56396484 133.94989014]
[206.59162903 133.03921509]
[191.61930847 132.12854004]
[176.64697266 131.21786499]
[169.76098633 133.95755005]
[161.42338562 130.15922546]
[146.46911621 128.98883057]
[131.51484680 127.81843567]
[119.74114227 137.11250305]
[117.40748596 151.92987061]
[115.07382202 166.74722290]
[112.74016571 181.56457520]
[110.40650940 196.38192749]
[118.50643921 214.82217407]
[105.76969910 229.35003662]
[103.95170593 244.23945618]
[102.13372040 259.12887573]
[100.31572723 274.01831055]
[106.32341766 288.65451050]
[97.10061646 300.35018921]
[95.28263092 315.23962402]
[93.46463776 330.12902832]
[91.64664459 345.01846313]
[93.71636963 353.94366455]
[89.66571808 360.14968872]
[87.58957672 375.00531006]
[85.51344299 389.86093140]
[83.43730164 404.71658325]
[81.61930847 419.60598755]
[80.06001282 434.52471924]
[78.50071716 449.44345093]
[89.76201630 462.81326294]
[87.91943359 479.85705566]
[74.59577179 490.09960938]
[73.29563904 505.04315186]
[71.99550629 519.98669434]
[70.69537354 534.93023682]
[83.84743500 542.67535400]
[92.32942963 555.36462402]
[94.45726013 570.47869873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 177]
[10 176]
[11 175]
[12 174]
[16 171]
[17 170]
[18 169]
[21 168]
[22 167]
[23 166]
[24 165]
[25 163]
[26 162]
[27 161]
[28 160]
[30 158]
[31 157]
[32 156]
[33 155]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[46 88]
[47 87]
[48 86]
[52 82]
[53 81]
[54 80]
[55 79]
[56 78]
[58 77]
[59 76]
[60 75]
[62 72]
[63 71]
[64 70]
[90 109]
[91 108]
[92 107]
[94 105]
[95 104]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[128 148]
[129 147]
[130 146]
[131 144]
[132 143]
[133 142]
[134 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
