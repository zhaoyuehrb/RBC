%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGCGGCAGCGGCGGAGAAGGGAGCGGGACCGGAAGGGUCGCAGCGCCCCGGCGCCCCUCACACCCACUGCGGCGGCGGCGGCGGCGGCGGCGGCGGGGCGGAGCGGAGCGGGGCGGGCCGGCGGCGGAGCCGGGGCCGCGGAGCCAGGAGUGACUAGCACGCAGCGCCGCCAGUCCGCCCGCCCGCCCUCUCCCCGUGGCGCGGCGGCGGGGAGGCGAGGGAUCUGAAACUUGCCCACCCUUCGGGAUAU\
UGCAGGACGCUGCAUC\
) } def
/len { sequence length } bind def

/coor [
[333.76464844 423.90753174]
[324.45104980 412.14923096]
[310.48345947 406.97668457]
[307.97998047 391.35479736]
[298.66638184 379.59652710]
[284.69879150 374.42395020]
[282.19531250 358.80206299]
[272.88174438 347.04379272]
[263.56814575 335.28552246]
[249.60054016 330.11294556]
[247.09707642 314.49105835]
[237.78347778 302.73278809]
[231.19116211 299.45285034]
[228.43115234 290.78448486]
[219.25398254 278.91943359]
[210.07681274 267.05438232]
[203.52281189 263.69851685]
[200.86311340 254.99888611]
[191.82360840 243.02862549]
[182.78408813 231.05836487]
[173.74456787 219.08810425]
[164.70504761 207.11784363]
[160.21687317 205.58459473]
[156.62919617 201.23631287]
[155.59878540 194.76509094]
[146.83816528 182.58923340]
[140.40434265 179.00831604]
[138.04762268 170.22177124]
[129.42822266 157.94554138]
[120.80881500 145.66931152]
[112.18940735 133.39308167]
[103.56999969 121.11685181]
[88.70211792 119.13033295]
[77.16210938 128.71302795]
[65.62210083 138.29573059]
[62.71605682 154.07339478]
[48.50132370 161.51119995]
[33.88222885 154.90350342]
[30.07329178 139.31916809]
[39.99640274 126.71315765]
[56.03939819 126.75572968]
[67.57940674 117.17302704]
[79.11941528 107.59032440]
[75.51674652 93.02938843]
[60.83974457 89.93331146]
[46.16274643 86.83723450]
[33.02066422 95.19925690]
[18.18020439 91.85031891]
[10.28928375 79.26982117]
[-4.38771582 76.17374420]
[-19.06471443 73.07766724]
[-33.74171448 69.98159027]
[-48.41871262 66.88551331]
[-63.09571457 63.78943634]
[-77.77271271 60.69335938]
[-92.87274170 65.41562653]
[-103.72892761 55.21796036]
[-118.40592957 52.12188339]
[-133.08293152 49.02580643]
[-147.75993347 45.92972946]
[-151.81201172 50.60843658]
[-156.96389771 53.96579742]
[-162.80364990 55.75981140]
[-168.87152100 55.87243271]
[-174.69616699 54.31707001]
[-179.83122253 51.23585129]
[-183.88954163 46.88693619]
[-186.57232666 41.62297821]
[-187.69108582 35.86262512]
[-202.07009888 31.59132195]
[-217.50218201 35.07865524]
[-227.49932861 24.03753662]
[-241.87834167 19.76623344]
[-256.25735474 15.49493027]
[-270.63635254 11.22362709]
[-286.06845093 14.71096134]
[-296.06558228 3.66984344]
[-310.44461060 -0.60145980]
[-326.25900269 3.73871970]
[-337.73312378 -7.97776604]
[-333.06341553 -23.69800186]
[-317.05364990 -27.25035477]
[-306.17330933 -14.98047161]
[-291.79428101 -10.70916748]
[-277.39068604 -14.50201416]
[-266.36505127 -3.15538406]
[-251.98605347 1.11591923]
[-237.60704041 5.38722229]
[-223.22802734 9.65852547]
[-208.82443237 5.86567974]
[-197.79879761 17.21230888]
[-183.41978455 21.48361206]
[-161.20347595 13.33573723]
[-144.66384888 31.25273132]
[-129.98684692 34.34880829]
[-115.30985260 37.44488525]
[-100.63285828 40.54096222]
[-86.58262634 35.59724426]
[-74.67663574 46.01636124]
[-59.99963760 49.11243820]
[-45.32263565 52.20851517]
[-30.64563751 55.30459213]
[-15.96863842 58.40066528]
[-1.29163909 61.49674225]
[13.38536072 64.59281921]
[25.68545341 56.27156448]
[40.61412430 59.20234680]
[49.25882339 72.16024017]
[63.93582153 75.25631714]
[78.61282349 78.35239410]
[65.83488464 70.49590302]
[63.01696014 55.76296997]
[71.99366760 43.74553680]
[86.92068481 42.26760864]
[98.07970428 52.29139328]
[98.20577240 67.29045868]
[103.13658905 53.12405396]
[108.06740570 38.95764542]
[112.99822235 24.79124260]
[117.92903900 10.62483692]
[122.85986328 -3.54156804]
[127.79067993 -17.70797348]
[132.72149658 -31.87437820]
[129.95059204 -47.45104980]
[141.44163513 -56.92761230]
[146.37245178 -71.09401703]
[151.30326843 -85.26042175]
[156.23408508 -99.42682648]
[161.16490173 -113.59323120]
[166.09571838 -127.75963593]
[171.02653503 -141.92604065]
[164.39712524 -156.02174377]
[169.59948730 -170.31825256]
[183.07843018 -176.55151367]
[188.00924683 -190.71791077]
[177.69879150 -190.63571167]
[167.02163696 -195.81033325]
[158.16911316 -206.25157166]
[153.25195312 -221.14982605]
[156.17829895 -235.86160278]
[159.10466003 -250.57337952]
[150.11697388 -263.57327271]
[153.03619385 -279.10562134]
[166.13037109 -287.95535278]
[181.63098145 -284.87210083]
[190.34179688 -271.68505859]
[187.09481812 -256.21792603]
[173.81643677 -247.64701843]
[170.89009094 -232.93524170]
[167.96372986 -218.22346497]
[174.94151306 -215.47381592]
[180.44104004 -229.42929077]
[194.39642334 -223.92955017]
[188.89706421 -209.97450256]
[195.87484741 -207.22485352]
[203.77133179 -219.97810364]
[211.66781616 -232.73135376]
[209.40921021 -248.61462402]
[220.52339172 -260.18417358]
[236.48449707 -258.56484985]
[245.04855347 -244.99884033]
[239.64593506 -229.89283752]
[224.42106628 -224.83488464]
[216.52458191 -212.08161926]
[208.62809753 -199.32836914]
[202.17564392 -185.78709412]
[197.24482727 -171.62069702]
[203.94049072 -158.36537170]
[199.14175415 -143.92837524]
[185.19294739 -136.99522400]
[180.26213074 -122.82881927]
[175.33131409 -108.66241455]
[170.40049744 -94.49600983]
[165.46966553 -80.32960510]
[160.53884888 -66.16320038]
[155.60803223 -51.99679565]
[158.73162842 -37.43339920]
[146.88790894 -26.94355965]
[141.95707703 -12.77715492]
[137.02626038 1.38925016]
[132.09544373 15.55565548]
[127.16462708 29.72206116]
[122.23381042 43.88846588]
[117.30299377 58.05487061]
[112.37217712 72.22127533]
[124.55829620 93.93816376]
[115.84622955 112.49744415]
[124.46563721 124.77367401]
[133.08503723 137.04989624]
[141.70445251 149.32612610]
[150.32385254 161.60235596]
[159.01402283 173.82861328]
[167.77464294 186.00447083]
[176.67530823 198.07832336]
[185.71481323 210.04858398]
[194.75433350 222.01884460]
[203.79385376 233.98910522]
[212.83337402 245.95936584]
[221.94187927 257.87722778]
[231.11904907 269.74227905]
[240.29621887 281.60733032]
[249.54174805 293.41918945]
[258.85534668 305.17745972]
[273.48910522 311.19107056]
[275.32641602 325.97192383]
[284.64001465 337.73019409]
[293.95358276 349.48846436]
[308.58737183 355.50207520]
[310.42465210 370.28292847]
[319.73825073 382.04119873]
[334.37200928 388.05480957]
[336.20932007 402.83566284]
[345.52291870 414.59393311]
[356.54949951 424.76321411]
[369.02154541 433.09677124]
[381.49359131 441.43029785]
[396.80313110 438.55706787]
[409.33285522 447.18612671]
[411.97769165 461.79913330]
[424.44973755 470.13269043]
[436.92178345 478.46624756]
[449.39382935 486.79980469]
[461.86587524 495.13336182]
[474.33792114 503.46691895]
[488.07720947 496.60198975]
[503.40728760 497.54244995]
[516.20440674 506.03530884]
[523.02624512 519.79608154]
[522.03778076 535.12310791]
[513.50482178 547.89355469]
[499.72274780 554.67224121]
[484.39886475 553.63568115]
[471.65524292 545.06274414]
[464.91979980 531.25952148]
[466.00436401 515.93896484]
[453.53231812 507.60540771]
[441.06027222 499.27185059]
[428.58822632 490.93829346]
[416.11621094 482.60473633]
[403.64416504 474.27117920]
[389.13134766 477.41983032]
[376.36419678 469.14608765]
[373.16003418 453.90234375]
[360.68798828 445.56878662]
[348.21594238 437.23526001]
[342.02847290 441.47378540]
[350.50552368 453.84872437]
[358.98254395 466.22369385]
[367.45959473 478.59866333]
[375.93646240 490.97375488]
[363.56121826 499.45040894]
[355.08462524 487.07571411]
[346.60760498 474.70074463]
[338.13055420 462.32577515]
[329.65350342 449.95080566]
[323.46603394 454.18933105]
[326.73141479 468.82958984]
[329.99679565 483.46984863]
[333.26217651 498.11013794]
[336.52755737 512.75036621]
[348.01458740 524.45422363]
[343.36218262 540.17962646]
[327.35632324 543.74957275]
[316.46249390 531.49163818]
[321.88729858 516.01574707]
[318.62191772 501.37551880]
[315.35653687 486.73526001]
[312.09115601 472.09500122]
[308.82574463 457.45471191]
[310.86474609 443.96252441]
[316.63348389 433.36840820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[4 210]
[5 209]
[7 207]
[8 206]
[9 205]
[11 203]
[12 202]
[14 201]
[15 200]
[16 199]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[25 193]
[26 192]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[33 43]
[34 42]
[35 41]
[44 110]
[45 109]
[46 108]
[49 105]
[50 104]
[51 103]
[52 102]
[53 101]
[54 100]
[55 99]
[57 97]
[58 96]
[59 95]
[60 94]
[69 92]
[70 91]
[72 89]
[73 88]
[74 87]
[75 86]
[77 84]
[78 83]
[116 185]
[117 184]
[118 183]
[119 182]
[120 181]
[121 180]
[122 179]
[123 178]
[125 176]
[126 175]
[127 174]
[128 173]
[129 172]
[130 171]
[131 170]
[134 167]
[135 166]
[139 150]
[140 149]
[141 148]
[155 165]
[156 164]
[157 163]
[214 245]
[215 244]
[216 243]
[219 240]
[220 239]
[221 238]
[222 237]
[223 236]
[224 235]
[256 269]
[257 268]
[258 267]
[259 266]
[260 265]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
