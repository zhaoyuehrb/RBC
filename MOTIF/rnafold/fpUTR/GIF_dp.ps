%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GIF)
} def

/sequence { (\
UUGCAAAUCGCGGUACCUGUGGAUGAGAGACAUAGACGAGAGAGUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.011725882 ubox
1 13 0.395022247 ubox
1 26 0.007595334 ubox
1 27 0.020522464 ubox
1 28 0.059031891 ubox
1 29 0.026559784 ubox
1 30 0.029365489 ubox
1 35 0.003793007 ubox
1 39 0.011617528 ubox
1 40 0.005003217 ubox
1 41 0.005850085 ubox
1 42 0.005568593 ubox
1 43 0.011931905 ubox
1 44 0.007179431 ubox
1 47 0.432392277 ubox
1 48 0.044444272 ubox
2 6 0.011748485 ubox
2 10 0.008960603 ubox
2 12 0.551067467 ubox
2 15 0.106804461 ubox
2 21 0.003292850 ubox
2 25 0.007630097 ubox
2 26 0.024905581 ubox
2 27 0.056448295 ubox
2 28 0.031980777 ubox
2 29 0.032780652 ubox
2 32 0.014103474 ubox
2 34 0.004447779 ubox
2 38 0.012192250 ubox
2 39 0.005119517 ubox
2 40 0.005546133 ubox
2 41 0.005492333 ubox
2 42 0.012472504 ubox
2 43 0.008316824 ubox
2 46 0.464956478 ubox
2 47 0.073292531 ubox
3 9 0.011982990 ubox
3 11 0.618645503 ubox
3 14 0.118481596 ubox
3 20 0.003995564 ubox
3 24 0.005003538 ubox
3 31 0.015613041 ubox
3 33 0.004209072 ubox
3 37 0.011301102 ubox
3 45 0.503002747 ubox
4 10 0.618403962 ubox
4 13 0.119204418 ubox
4 19 0.004045774 ubox
4 25 0.100457976 ubox
4 44 0.505266999 ubox
4 46 0.235974378 ubox
5 18 0.003835517 ubox
5 24 0.097300918 ubox
5 45 0.229287060 ubox
7 14 0.009759651 ubox
7 24 0.066019288 ubox
7 45 0.019360305 ubox
8 13 0.009463548 ubox
8 22 0.134100940 ubox
8 23 0.063760588 ubox
8 26 0.005410807 ubox
8 28 0.006510151 ubox
8 30 0.003747325 ubox
8 36 0.012125827 ubox
8 39 0.113972221 ubox
8 41 0.535290806 ubox
8 43 0.183399575 ubox
8 44 0.013640885 ubox
8 47 0.410817603 ubox
9 21 0.178598953 ubox
9 22 0.047316971 ubox
9 25 0.005227803 ubox
9 27 0.006710588 ubox
9 29 0.004032414 ubox
9 35 0.013496258 ubox
9 38 0.115105492 ubox
9 40 0.538620782 ubox
9 42 0.186966375 ubox
9 46 0.439130147 ubox
10 20 0.184429458 ubox
10 37 0.110159090 ubox
10 45 0.439068418 ubox
11 19 0.185294502 ubox
11 21 0.007733327 ubox
11 25 0.005277027 ubox
11 38 0.475873684 ubox
11 44 0.438948566 ubox
11 46 0.009375430 ubox
12 18 0.183917248 ubox
12 20 0.007380910 ubox
12 24 0.004749923 ubox
12 37 0.441515023 ubox
12 45 0.008380686 ubox
13 17 0.180000416 ubox
13 24 0.006809765 ubox
13 31 0.037996306 ubox
13 33 0.007699113 ubox
13 37 0.396271954 ubox
14 23 0.007265175 ubox
14 25 0.003882813 ubox
14 30 0.037930927 ubox
14 32 0.007605616 ubox
14 34 0.022793343 ubox
14 36 0.407031390 ubox
14 46 0.068041769 ubox
15 24 0.004188313 ubox
15 33 0.022040371 ubox
15 45 0.074404206 ubox
16 22 0.015762066 ubox
16 44 0.074987316 ubox
17 21 0.015698025 ubox
17 27 0.039327122 ubox
17 29 0.015231613 ubox
17 35 0.947822517 ubox
17 40 0.111702186 ubox
17 42 0.046942131 ubox
17 44 0.004275098 ubox
18 26 0.039205957 ubox
18 28 0.015194595 ubox
18 32 0.087269434 ubox
18 34 0.954724049 ubox
18 38 0.148755868 ubox
18 39 0.098465698 ubox
18 41 0.043110463 ubox
18 43 0.004081960 ubox
19 31 0.090779100 ubox
19 33 0.955771384 ubox
19 37 0.191055551 ubox
20 30 0.090329974 ubox
20 32 0.956063229 ubox
20 34 0.004223723 ubox
20 36 0.189692935 ubox
20 38 0.030520820 ubox
21 31 0.955991094 ubox
21 33 0.003903402 ubox
21 37 0.032777600 ubox
23 33 0.200734227 ubox
24 32 0.205543499 ubox
24 34 0.023025814 ubox
24 38 0.003231124 ubox
25 31 0.205646255 ubox
25 33 0.020708019 ubox
25 37 0.005179071 ubox
30 45 0.019213460 ubox
31 44 0.019718758 ubox
31 46 0.041985589 ubox
32 45 0.041645195 ubox
33 44 0.040594608 ubox
33 46 0.004267399 ubox
34 45 0.004150448 ubox
36 45 0.410465796 ubox
37 44 0.421313955 ubox
37 46 0.074346464 ubox
38 45 0.059431074 ubox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
showpage
end
%%EOF
