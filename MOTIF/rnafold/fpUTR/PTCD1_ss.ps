%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCAGAAACCUGAAACCAGCCGCGUGAGUCGGCGACGCGGAUUGCGCCUGCGCGCUUGGGGAGAGGGGGACCCGAGGAAGAGACUGGUUCGCCGCGGGGACCGGGCAGGGCUCCCCGUCGGAGUGCACUGCGCCGGACACUUCAAGCCCUGGAGGGACAGGAAAGCCAGAA\
) } def
/len { sequence length } bind def

/coor [
[83.63320160 118.07049561]
[69.63755798 123.46695709]
[55.64190674 128.86341858]
[45.54935074 141.04745483]
[30.89065361 138.40704346]
[16.89500427 143.80349731]
[2.89935565 149.19996643]
[-11.09629345 154.59643555]
[-2.26481986 161.96528625]
[3.67228198 173.45895386]
[5.29699659 187.98545837]
[1.57723141 204.02842712]
[-8.01689720 219.77540588]
[-16.83367538 231.91065979]
[-25.65045357 244.04591370]
[-26.82557869 260.40292358]
[-41.69485092 267.31933594]
[-54.96203995 257.68014526]
[-52.97899628 241.40133667]
[-37.78570938 235.22914124]
[-28.96893120 223.09388733]
[-20.15215111 210.95863342]
[-29.39885712 199.14768982]
[-43.29537964 204.79450989]
[-57.19190216 210.44134521]
[-71.08842468 216.08818054]
[-84.98494720 221.73500061]
[-98.88146973 227.38183594]
[-101.62165833 242.56388855]
[-112.15160370 253.83880615]
[-127.11123657 257.60879517]
[-141.72700500 252.67086792]
[-151.33505249 240.60070801]
[-152.86949158 225.24984741]
[-145.84069824 211.51669312]
[-132.49151611 203.78344727]
[-117.08164215 204.51776123]
[-104.52829742 213.48530579]
[-90.63177490 207.83848572]
[-76.73525238 202.19165039]
[-62.83872986 196.54483032]
[-48.94220734 190.89799500]
[-35.04568863 185.25115967]
[-35.31490707 177.75599670]
[-48.56628418 170.72741699]
[-35.85335159 162.76567078]
[-36.12257385 155.27049255]
[-50.38842010 150.63523865]
[-64.65426636 145.99998474]
[-78.92011261 141.36473083]
[-94.83966827 145.30171204]
[-106.01242828 133.29748535]
[-100.94481659 117.70096588]
[-84.84995270 114.55652618]
[-74.28485870 127.09888458]
[-60.01901245 131.73414612]
[-45.75316620 136.36940002]
[-31.48731804 141.00465393]
[-16.49275589 140.60078430]
[-2.49710703 135.20431519]
[11.49854183 129.80786133]
[25.49419022 124.41139221]
[34.58568192 112.61334229]
[50.24544525 114.86776733]
[64.24109650 109.47130585]
[78.23674011 104.07484436]
[80.95637512 90.79078674]
[90.60144806 82.15863800]
[87.65859222 67.45014954]
[77.36419678 55.43616104]
[82.45415497 41.43824768]
[79.51129150 26.72976112]
[76.56843567 12.02127361]
[73.62557220 -2.68721294]
[70.68271637 -17.39569855]
[66.57850647 -22.64788818]
[65.87449646 -28.32964897]
[67.90820312 -32.68451691]
[65.49521637 -47.48916245]
[51.96359253 -55.32683563]
[46.68435669 -70.04633331]
[52.15020370 -84.69756317]
[65.78032684 -92.36266327]
[81.13900757 -89.42240143]
[90.97433472 -77.26508331]
[90.64237213 -61.63102341]
[80.29986572 -49.90214920]
[82.71285248 -35.09750366]
[85.39120483 -20.33855820]
[88.33406067 -5.63007259]
[91.27692413 9.07841396]
[94.21977997 23.78690147]
[97.16264343 38.49538803]
[107.24654388 49.45732880]
[102.36708069 64.50729370]
[105.30993652 79.21577454]
[118.11709595 87.02453613]
[132.54013062 82.90435791]
[140.25253296 69.37081909]
[154.93824768 65.39783478]
[167.79287720 72.83383942]
[182.21591187 68.71366119]
[196.63896179 64.59348297]
[210.90480042 59.95822525]
[224.99507141 54.81386948]
[239.08534241 49.66950989]
[253.17559814 44.52515411]
[267.21911621 39.25453186]
[281.21478271 33.85807037]
[295.21041870 28.46160698]
[309.20608521 23.06514359]
[321.10784912 6.82238388]
[340.05944824 10.56039333]
[353.85238647 4.66501760]
[367.64529419 -1.23035812]
[381.43820190 -7.12573338]
[395.23110962 -13.02110863]
[402.51431274 -27.31567383]
[418.25952148 -30.39266586]
[430.38836670 -19.89167976]
[429.59664917 -3.86817551]
[416.49169922 5.38598776]
[401.12649536 0.77180755]
[387.33358765 6.66718292]
[373.54067993 12.56255817]
[359.74774170 18.45793343]
[345.95483398 24.35330963]
[343.00192261 34.17827988]
[334.94821167 40.88272095]
[324.31332397 42.05352783]
[314.60253906 37.06079102]
[300.60690308 42.45725632]
[286.61123657 47.85371780]
[272.61560059 53.25017929]
[267.48864746 58.60835266]
[258.31997681 58.61542130]
[244.22969055 63.75977707]
[230.13943481 68.90413666]
[216.04916382 74.04849243]
[214.74827576 76.56745148]
[212.35447693 78.71373749]
[209.00801086 80.06218719]
[205.00247192 80.24752045]
[200.75914001 79.01652527]
[186.33609009 83.13670349]
[171.91305542 87.25688171]
[164.92604065 100.36096954]
[150.35771179 104.74487305]
[136.66030884 97.32740021]
[122.23727417 101.44757843]
[117.34667969 115.62792206]
[126.16345978 127.76317596]
[134.98023987 139.89843750]
[143.79701233 152.03369141]
[159.44396973 154.25816345]
[168.86816406 166.94517517]
[166.47837830 182.56773376]
[153.69244385 191.85726929]
[138.09600830 189.30244446]
[128.94218445 176.41900635]
[131.66175842 160.85046387]
[122.84497833 148.71520996]
[114.02819824 136.57995605]
[105.21142578 124.44470215]
[107.13092041 139.32138062]
[113.19298553 153.04185486]
[111.85501099 167.98205566]
[103.45147705 180.40705872]
[90.08321381 187.21069336]
[75.09217834 186.69209290]
[62.22602844 178.98092651]
[54.70121002 166.00489807]
[54.39886475 151.00794983]
[61.39458466 137.73919678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[5 62]
[6 61]
[7 60]
[8 59]
[13 22]
[14 21]
[15 20]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[47 58]
[48 57]
[49 56]
[50 55]
[68 96]
[69 95]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[78 88]
[79 87]
[97 150]
[98 149]
[101 146]
[102 145]
[103 144]
[104 139]
[105 138]
[106 137]
[107 136]
[108 134]
[109 133]
[110 132]
[111 131]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[151 164]
[152 163]
[153 162]
[154 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
