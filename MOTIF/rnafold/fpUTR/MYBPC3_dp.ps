%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYBPC3)
} def

/sequence { (\
AGUCCCUCUUUGGGUGACCUGUGCCUGCUUCGUGCCUGGUGUGACGUCUCUCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.046366780 ubox
1 9 0.108115919 ubox
1 10 0.009838305 ubox
1 11 0.005576029 ubox
1 20 0.025109208 ubox
1 51 0.004486031 ubox
2 6 0.052153383 ubox
2 8 0.129514610 ubox
2 9 0.016233443 ubox
2 10 0.010050836 ubox
2 15 0.036594566 ubox
2 18 0.149529126 ubox
2 19 0.019628960 ubox
2 45 0.011479190 ubox
2 50 0.005061502 ubox
3 14 0.012488190 ubox
3 17 0.153952806 ubox
3 44 0.011433322 ubox
3 55 0.013760194 ubox
4 13 0.019431466 ubox
4 14 0.190619340 ubox
4 16 0.152468258 ubox
4 43 0.010922329 ubox
4 54 0.021079801 ubox
4 55 0.108060206 ubox
5 12 0.019367653 ubox
5 13 0.194480756 ubox
5 14 0.148558586 ubox
5 54 0.109340096 ubox
5 55 0.248401306 ubox
6 12 0.194577417 ubox
6 13 0.148431383 ubox
6 14 0.035196655 ubox
6 54 0.251799751 ubox
6 55 0.070710532 ubox
7 12 0.132631052 ubox
7 13 0.034840445 ubox
7 14 0.004005543 ubox
7 53 0.179072842 ubox
7 54 0.062083019 ubox
7 55 0.068044934 ubox
8 12 0.038612997 ubox
8 13 0.006866195 ubox
8 39 0.005638536 ubox
8 54 0.115022630 ubox
8 55 0.203590017 ubox
9 38 0.005264380 ubox
9 53 0.080276740 ubox
9 54 0.171420004 ubox
9 55 0.459011580 ubox
10 39 0.004040966 ubox
10 53 0.124151712 ubox
10 54 0.794960302 ubox
10 55 0.017758137 ubox
11 27 0.003387886 ubox
11 38 0.004435014 ubox
11 53 0.923897739 ubox
11 54 0.013571539 ubox
12 19 0.008913191 ubox
12 20 0.004202129 ubox
12 26 0.006355634 ubox
12 37 0.007445437 ubox
12 48 0.025250027 ubox
12 49 0.005906532 ubox
12 50 0.019845888 ubox
12 51 0.037327896 ubox
12 52 0.966513112 ubox
13 18 0.008926426 ubox
13 19 0.004389265 ubox
13 25 0.006603747 ubox
13 36 0.007679427 ubox
13 47 0.022873715 ubox
13 48 0.006411945 ubox
13 49 0.019240207 ubox
13 50 0.048016788 ubox
13 51 0.965823059 ubox
13 52 0.010187871 ubox
14 18 0.004329217 ubox
14 24 0.006616744 ubox
14 35 0.007682884 ubox
14 45 0.036211217 ubox
14 47 0.004448846 ubox
14 48 0.017804246 ubox
14 49 0.045456583 ubox
14 50 0.965457736 ubox
14 51 0.006570550 ubox
15 23 0.006569979 ubox
15 34 0.007576858 ubox
15 44 0.036979059 ubox
15 46 0.011480850 ubox
15 53 0.012838861 ubox
16 22 0.004695065 ubox
16 31 0.003646739 ubox
16 33 0.005935225 ubox
16 45 0.012168744 ubox
16 48 0.973633119 ubox
16 50 0.017976196 ubox
16 52 0.014076869 ubox
17 30 0.003551439 ubox
17 33 0.003560086 ubox
17 40 0.030275357 ubox
17 42 0.037748022 ubox
17 47 0.975928261 ubox
17 49 0.017740271 ubox
17 51 0.013605251 ubox
18 32 0.003824935 ubox
18 39 0.031646099 ubox
18 41 0.037799780 ubox
18 46 0.970835226 ubox
18 55 0.132313886 ubox
19 38 0.031841760 ubox
19 39 0.018614209 ubox
19 54 0.146517826 ubox
19 55 0.004415798 ubox
20 38 0.018186764 ubox
20 41 0.014969615 ubox
20 43 0.344238433 ubox
20 46 0.075137801 ubox
20 53 0.146392361 ubox
20 54 0.004170007 ubox
21 28 0.011458401 ubox
21 35 0.034139236 ubox
21 37 0.013892214 ubox
21 40 0.003641500 ubox
21 42 0.394583916 ubox
21 45 0.268259712 ubox
21 52 0.145620878 ubox
22 27 0.011000806 ubox
22 34 0.034276114 ubox
22 41 0.690233022 ubox
22 43 0.066971029 ubox
22 44 0.261832369 ubox
22 46 0.007666315 ubox
23 33 0.034658674 ubox
23 35 0.017851706 ubox
23 40 0.978408686 ubox
23 42 0.089753930 ubox
23 45 0.007321231 ubox
23 47 0.006490207 ubox
24 32 0.034718966 ubox
24 34 0.017892703 ubox
24 39 0.987428954 ubox
24 41 0.090631838 ubox
24 46 0.006823732 ubox
24 55 0.081634444 ubox
25 38 0.987117610 ubox
25 39 0.087394759 ubox
25 54 0.083212018 ubox
26 32 0.014400824 ubox
26 34 0.014944989 ubox
26 38 0.081130469 ubox
26 41 0.016593981 ubox
26 43 0.008256777 ubox
26 46 0.006034008 ubox
26 53 0.083172791 ubox
27 31 0.014276600 ubox
27 33 0.019238587 ubox
27 35 0.986392421 ubox
27 37 0.009130233 ubox
27 40 0.038349434 ubox
27 42 0.011026737 ubox
27 45 0.006518183 ubox
27 47 0.069566558 ubox
27 52 0.082624380 ubox
28 32 0.019597872 ubox
28 34 0.986728308 ubox
28 39 0.039373331 ubox
28 41 0.011374786 ubox
28 46 0.071536158 ubox
29 38 0.039181274 ubox
29 44 0.003669711 ubox
30 39 0.009993754 ubox
30 44 0.072689950 ubox
31 38 0.011773332 ubox
31 41 0.003220981 ubox
31 43 0.073651053 ubox
31 46 0.082878629 ubox
32 37 0.008470099 ubox
32 42 0.069530315 ubox
32 45 0.083143740 ubox
33 39 0.003425489 ubox
33 41 0.057155723 ubox
33 43 0.022735802 ubox
33 44 0.079457386 ubox
34 40 0.071790606 ubox
34 42 0.056004354 ubox
35 39 0.071593991 ubox
35 41 0.057688661 ubox
35 55 0.030572329 ubox
36 54 0.033733518 ubox
37 46 0.003533596 ubox
37 53 0.033722578 ubox
38 45 0.006126548 ubox
38 52 0.033590688 ubox
39 45 0.003755712 ubox
39 48 0.004538650 ubox
39 50 0.013205494 ubox
39 51 0.027028816 ubox
40 44 0.003451326 ubox
40 46 0.004511369 ubox
40 53 0.012288002 ubox
41 45 0.010348450 ubox
41 52 0.026471859 ubox
42 53 0.056789531 ubox
43 50 0.051316744 ubox
43 52 0.063932884 ubox
44 49 0.046331973 ubox
44 51 0.059872535 ubox
47 55 0.012990524 ubox
48 54 0.021084326 ubox
48 55 0.007848416 ubox
49 53 0.019102707 ubox
49 54 0.007820589 ubox
49 55 0.005090212 ubox
50 54 0.008429467 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
