%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LEP)
} def

/sequence { (\
GUAGGAAUCGCAGCGCCAGCGGUUGCAAGGCCCAAGAAGCCCAUCCUGGGAAGGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.026039248 ubox
1 11 0.020721454 ubox
1 14 0.008590777 ubox
1 20 0.008398424 ubox
1 26 0.349340559 ubox
1 31 0.046818215 ubox
1 40 0.013700993 ubox
1 44 0.025404587 ubox
2 7 0.027925761 ubox
2 10 0.020401604 ubox
2 13 0.008457038 ubox
2 19 0.008009841 ubox
2 25 0.348557697 ubox
2 30 0.047809707 ubox
2 39 0.013564580 ubox
2 43 0.042311429 ubox
2 48 0.228618028 ubox
3 24 0.268644547 ubox
3 47 0.250049929 ubox
4 17 0.011271367 ubox
4 23 0.126494047 ubox
4 24 0.009782961 ubox
4 32 0.298138827 ubox
4 33 0.147633111 ubox
4 41 0.187082710 ubox
4 42 0.072482335 ubox
4 46 0.252267626 ubox
5 16 0.011282692 ubox
5 23 0.010554545 ubox
5 24 0.037578126 ubox
5 31 0.299673269 ubox
5 32 0.146117017 ubox
5 40 0.187915273 ubox
5 41 0.061523769 ubox
5 45 0.252193986 ubox
6 23 0.032041900 ubox
6 24 0.446067404 ubox
6 44 0.231087670 ubox
7 23 0.523210676 ubox
7 44 0.023533316 ubox
8 22 0.540767627 ubox
8 30 0.070937377 ubox
8 37 0.189335433 ubox
8 43 0.030906659 ubox
8 51 0.011774379 ubox
8 54 0.016012080 ubox
8 55 0.059040841 ubox
9 15 0.005783807 ubox
9 21 0.543363716 ubox
9 25 0.007587084 ubox
9 29 0.083936334 ubox
9 36 0.190357106 ubox
9 50 0.012258478 ubox
9 53 0.024679778 ubox
9 54 0.062920342 ubox
10 14 0.005939422 ubox
10 16 0.010058270 ubox
10 20 0.543439702 ubox
10 23 0.028715845 ubox
10 24 0.005952739 ubox
10 26 0.811815744 ubox
10 31 0.035337978 ubox
10 40 0.027691140 ubox
11 15 0.010061209 ubox
11 19 0.543108970 ubox
11 22 0.030330266 ubox
11 25 0.812737100 ubox
11 30 0.035493544 ubox
11 39 0.027700238 ubox
11 48 0.010257162 ubox
12 24 0.811490165 ubox
12 47 0.010024134 ubox
13 20 0.084806801 ubox
13 23 0.804226753 ubox
13 26 0.070199253 ubox
13 31 0.026840317 ubox
13 40 0.016866792 ubox
13 46 0.008424153 ubox
14 19 0.085394305 ubox
14 21 0.133518377 ubox
14 22 0.794396604 ubox
14 25 0.070266609 ubox
14 30 0.026833229 ubox
14 39 0.016947317 ubox
15 20 0.178023533 ubox
15 23 0.093793715 ubox
15 24 0.049902507 ubox
15 26 0.009894569 ubox
15 31 0.184176262 ubox
15 40 0.003459918 ubox
16 22 0.110371297 ubox
16 25 0.009643955 ubox
16 30 0.184555548 ubox
16 39 0.003467745 ubox
16 49 0.020133106 ubox
16 54 0.003921358 ubox
17 21 0.111195293 ubox
17 25 0.004323784 ubox
17 29 0.184300180 ubox
17 48 0.020192811 ubox
17 53 0.003932440 ubox
18 24 0.004965642 ubox
18 47 0.020150814 ubox
19 23 0.003404985 ubox
19 26 0.183500256 ubox
19 40 0.005750124 ubox
19 46 0.019837562 ubox
20 25 0.183460674 ubox
20 39 0.005760808 ubox
21 32 0.044111037 ubox
21 33 0.006324440 ubox
21 41 0.009624691 ubox
21 45 0.019335483 ubox
21 46 0.005941342 ubox
22 31 0.044554554 ubox
22 32 0.005734213 ubox
22 40 0.009822892 ubox
22 44 0.018916010 ubox
22 45 0.006279455 ubox
23 30 0.044387094 ubox
23 39 0.009816941 ubox
23 43 0.015024495 ubox
24 29 0.040666190 ubox
24 34 0.004141210 ubox
24 38 0.009592972 ubox
24 43 0.031078505 ubox
24 54 0.004024367 ubox
24 55 0.005349086 ubox
24 56 0.007281019 ubox
25 31 0.035427005 ubox
25 33 0.005185536 ubox
25 40 0.021924362 ubox
25 42 0.050431570 ubox
26 30 0.035875805 ubox
26 39 0.022052484 ubox
29 41 0.770934322 ubox
29 42 0.083960000 ubox
30 40 0.775457692 ubox
30 41 0.065178932 ubox
31 39 0.776331679 ubox
31 49 0.003351039 ubox
31 50 0.461336351 ubox
31 54 0.035769500 ubox
32 49 0.463168435 ubox
32 50 0.008709382 ubox
32 53 0.035691867 ubox
32 54 0.080686333 ubox
33 48 0.463200124 ubox
33 49 0.008603048 ubox
33 53 0.081607040 ubox
34 47 0.455278721 ubox
35 47 0.051516847 ubox
36 45 0.451810773 ubox
36 46 0.069902153 ubox
37 44 0.427919391 ubox
38 47 0.008872784 ubox
39 46 0.011914426 ubox
40 49 0.010124895 ubox
40 50 0.295097236 ubox
40 54 0.007013515 ubox
41 48 0.010072060 ubox
41 49 0.296051867 ubox
41 50 0.016381921 ubox
41 53 0.006794033 ubox
41 54 0.027789296 ubox
42 48 0.296048457 ubox
42 49 0.016849102 ubox
42 53 0.028560112 ubox
43 47 0.239931288 ubox
44 51 0.028366847 ubox
44 55 0.742568230 ubox
45 49 0.003165581 ubox
45 50 0.028731482 ubox
45 54 0.794192493 ubox
46 53 0.794410035 ubox
46 54 0.011183824 ubox
47 52 0.786457634 ubox
47 53 0.011188358 ubox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
