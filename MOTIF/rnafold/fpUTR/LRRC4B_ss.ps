%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGGAGGUAGACAUGGCAGCGGCAGGCCUGGAGGCCGGGGUGGGUGCCGUGGGCUCCCACAGGCCCUGCGGGGUCCCCCGGCCUCAAAUCCAGGCCCUGCGCUUUGGGCCAGCCCUUUGGCUAAGAGGGUGUGGGCUGGAUCAUCGCCAGGGUCUUAAGAGCCCCCCAGCGUCCACGCGGAGCAUGAACAUUGAGG\
) } def
/len { sequence length } bind def

/coor [
[150.53025818 379.55105591]
[147.93849182 364.77667236]
[145.34672546 350.00228882]
[142.75495911 335.22787476]
[173.20164490 302.60925293]
[166.99980164 288.95138550]
[161.36627197 284.15612793]
[160.80976868 275.02862549]
[154.82431030 261.27456665]
[148.83885193 247.52049255]
[142.31535339 234.01330566]
[135.26399231 220.77403259]
[128.21263123 207.53477478]
[121.16127014 194.29550171]
[105.79486084 185.82826233]
[106.56517792 167.43473816]
[99.30569458 154.30844116]
[92.04621124 141.18212891]
[84.78672791 128.05583191]
[73.65012360 118.00714111]
[59.84924316 112.13043213]
[46.04836273 106.25373077]
[32.24748230 100.37702179]
[23.11585236 99.89257812]
[18.27628517 94.29707336]
[4.56989384 88.20323181]
[-9.13649654 82.10939789]
[-22.84288788 76.01555634]
[-36.59695053 70.03009796]
[-50.39783478 64.15339661]
[-64.19871521 58.27669144]
[-77.99959564 52.39998245]
[-91.80047607 46.52327728]
[-105.60135651 40.64657211]
[-119.62336731 35.31898499]
[-133.84466553 30.54881096]
[-148.06597900 25.77863693]
[-162.28727722 21.00846481]
[-176.50857544 16.23829079]
[-190.72988892 11.46811771]
[-204.95118713 6.69794512]
[-219.66006470 3.75707579]
[-234.62223816 2.69235635]
[-249.58439636 1.62763679]
[-264.54656982 0.56291723]
[-279.50872803 -0.50180227]
[-293.82330322 6.23642778]
[-305.96926880 -2.38475466]
[-320.93142700 -3.44947410]
[-335.89358521 -4.51419353]
[-352.12194824 0.39261273]
[-361.32943726 -13.84319496]
[-350.19888306 -26.63172913]
[-334.82885742 -19.47635841]
[-319.86669922 -18.41163826]
[-304.90454102 -17.34692001]
[-291.66015625 -24.16130447]
[-278.44400024 -15.46396732]
[-263.48184204 -14.39924717]
[-248.51968384 -13.33452797]
[-233.55751038 -12.26980877]
[-218.59535217 -11.20508862]
[-215.93154907 -18.21609497]
[-207.94017029 -39.24911118]
[-219.83447266 -48.38835907]
[-231.72875977 -57.52760696]
[-243.62304688 -66.66685486]
[-255.51733398 -75.80609894]
[-271.83691406 -77.41973114]
[-278.35180664 -92.46924591]
[-268.36010742 -105.47299957]
[-252.14036560 -103.05384064]
[-246.37809753 -87.70039368]
[-234.48379517 -78.56114197]
[-222.58950806 -69.42189789]
[-210.69522095 -60.28264999]
[-198.80093384 -51.14340210]
[-190.70138550 -25.71961021]
[-200.18101501 -7.52335787]
[-185.95971680 -2.75318456]
[-171.73840332 2.01698852]
[-157.51710510 6.78716135]
[-143.29580688 11.55733490]
[-129.07449341 16.32750702]
[-114.85319519 21.09768105]
[-119.04293060 6.69469023]
[-110.52745056 -5.65385818]
[-95.57579041 -6.85706615]
[-85.19522858 3.97085786]
[-87.02784729 18.85848618]
[-99.72465515 26.84568977]
[-85.92377472 32.72239685]
[-72.12288666 38.59910202]
[-58.32201004 44.47580719]
[-44.52112579 50.35251236]
[-30.72024536 56.22922134]
[-23.32720375 55.95706940]
[-16.74905014 62.30916977]
[-3.04265881 68.40300751]
[10.66373158 74.49684143]
[24.37012291 80.59068298]
[38.12418747 86.57614136]
[51.92506790 92.45285034]
[65.72595215 98.32955170]
[79.52683258 104.20626068]
[87.85576630 85.55789948]
[106.16835785 84.33239746]
[117.30496216 74.28370667]
[118.27224731 58.73693848]
[129.70948792 48.70478821]
[144.52499390 49.72275543]
[155.66160583 39.67406845]
[166.79820251 29.62538338]
[177.93481445 19.57669640]
[189.07141113 9.52801132]
[200.20800781 -0.52067369]
[211.34461975 -10.56935883]
[209.63114929 -22.34555626]
[213.77696228 -33.37220383]
[222.64218140 -40.94659805]
[233.94583130 -43.27223969]
[244.85209656 -39.88392639]
[256.30038452 -49.57603455]
[267.74865723 -59.26814651]
[270.50439453 -75.07274628]
[284.64767456 -82.64551544]
[299.32901001 -76.17726898]
[303.28610229 -60.62989426]
[293.48342896 -47.93000793]
[277.44076538 -47.81987381]
[265.99249268 -38.12776184]
[254.54421997 -28.43565178]
[254.13638306 -10.14110851]
[240.25437927 2.26571727]
[221.39329529 0.56724352]
[210.25669861 10.61592865]
[199.12010193 20.66461372]
[187.98348999 30.71330070]
[176.84689331 40.76198578]
[165.71028137 50.81067276]
[154.57368469 60.85935593]
[154.06867981 75.70121002]
[142.91772461 86.05065155]
[127.35364532 85.42031097]
[116.21704102 95.46900177]
[116.92608643 106.66851807]
[110.17900848 116.68701172]
[97.91303253 120.79634094]
[105.17251587 133.92265320]
[112.43199921 147.04895020]
[119.69148254 160.17526245]
[131.85362244 164.48927307]
[137.62797546 175.57971191]
[134.40054321 187.24414062]
[141.45190430 200.48339844]
[148.50326538 213.72267151]
[155.55462646 226.96194458]
[162.41056824 213.62042236]
[177.08316040 210.50354004]
[188.77056885 219.90589905]
[188.86862183 234.90557861]
[177.30513000 244.45993042]
[162.59291077 241.53503418]
[168.57836914 255.28909302]
[174.56382751 269.04315186]
[180.65766907 282.74954224]
[186.85951233 296.40740967]
[195.22994995 308.85473633]
[205.53950500 319.75027466]
[213.71932983 323.83828735]
[215.92413330 330.90014648]
[226.06040955 341.95709229]
[236.19668579 353.01403809]
[251.99198914 357.42315674]
[255.80859375 373.37200928]
[243.72030640 384.45376587]
[228.16252136 379.26846313]
[225.13975525 363.15029907]
[215.00347900 352.09338379]
[204.86720276 341.03643799]
[194.64395142 330.05984497]
[184.33439636 319.16430664]
[177.63313293 322.53225708]
[157.52935791 332.63610840]
[160.12112427 347.41052246]
[162.71289062 362.18490601]
[165.30465698 376.95928955]
[180.00758362 381.05645752]
[191.47111511 391.13366699]
[197.41914368 405.19012451]
[196.67070007 420.43487549]
[189.37437439 433.84106445]
[176.97886658 442.74691772]
[161.94531250 445.38415527]
[147.25863647 441.22912598]
[135.83488464 431.10684204]
[129.94224548 417.02709961]
[130.75071716 401.78540039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[5 167]
[6 166]
[8 165]
[9 164]
[10 163]
[11 157]
[12 156]
[13 155]
[14 154]
[16 151]
[17 150]
[18 149]
[19 148]
[20 105]
[21 104]
[22 103]
[23 102]
[25 101]
[26 100]
[27 99]
[28 98]
[29 96]
[30 95]
[31 94]
[32 93]
[33 92]
[34 91]
[35 85]
[36 84]
[37 83]
[38 82]
[39 81]
[40 80]
[41 79]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[48 56]
[49 55]
[50 54]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[107 145]
[108 144]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[122 132]
[123 131]
[124 130]
[168 182]
[169 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
