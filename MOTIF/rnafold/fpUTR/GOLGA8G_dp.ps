%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GOLGA8G)
} def

/sequence { (\
AGUCGCACAGCUACCUGGUAGGUGACUGGAGGUGUUGAUCAGUGCUUGGUGGGAUUUUGCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.032120028 ubox
1 27 0.027829876 ubox
1 46 0.012877017 ubox
1 47 0.003847714 ubox
1 56 0.233646301 ubox
1 57 0.015444573 ubox
1 58 0.012820270 ubox
1 61 0.046014090 ubox
2 8 0.028038636 ubox
2 11 0.034019873 ubox
2 14 0.004282810 ubox
2 26 0.029508677 ubox
2 39 0.025469391 ubox
2 45 0.014819869 ubox
2 46 0.003991271 ubox
2 55 0.330492482 ubox
2 56 0.015418299 ubox
2 57 0.006938866 ubox
2 60 0.048168563 ubox
3 7 0.026501320 ubox
3 10 0.032999126 ubox
3 13 0.005505329 ubox
3 25 0.029514908 ubox
3 32 0.004874196 ubox
3 38 0.026594821 ubox
3 44 0.004292526 ubox
3 52 0.023011645 ubox
3 53 0.004954738 ubox
3 54 0.338355346 ubox
3 59 0.038755028 ubox
4 24 0.029481020 ubox
4 31 0.006858854 ubox
4 34 0.010242786 ubox
4 37 0.026845715 ubox
4 44 0.016065441 ubox
4 48 0.004035197 ubox
4 51 0.029978619 ubox
4 52 0.006487852 ubox
4 53 0.339924627 ubox
4 59 0.025214066 ubox
4 62 0.034726815 ubox
5 11 0.028436225 ubox
5 23 0.029333605 ubox
5 33 0.010645470 ubox
5 35 0.013598839 ubox
5 36 0.023230527 ubox
5 43 0.016293960 ubox
5 45 0.042336765 ubox
5 50 0.030351100 ubox
5 58 0.022809468 ubox
5 60 0.296078190 ubox
5 61 0.010438043 ubox
6 10 0.028281965 ubox
6 22 0.029279446 ubox
6 32 0.010651592 ubox
6 34 0.018628285 ubox
6 42 0.016281492 ubox
6 44 0.042397341 ubox
6 49 0.030301884 ubox
6 51 0.339714694 ubox
6 59 0.296457009 ubox
6 62 0.037730186 ubox
7 19 0.005185858 ubox
7 33 0.018592453 ubox
7 35 0.020481825 ubox
7 43 0.042218137 ubox
7 47 0.003510763 ubox
7 50 0.337084840 ubox
7 58 0.288494596 ubox
7 61 0.037080123 ubox
8 17 0.009634150 ubox
8 18 0.004295987 ubox
8 24 0.008724708 ubox
8 28 0.035384260 ubox
8 32 0.017008678 ubox
8 34 0.020861531 ubox
8 37 0.066598827 ubox
8 42 0.032054948 ubox
8 48 0.077041247 ubox
8 49 0.325899799 ubox
8 59 0.061309376 ubox
8 62 0.871472058 ubox
9 16 0.010826149 ubox
9 23 0.012300367 ubox
9 27 0.039052324 ubox
9 33 0.020812236 ubox
9 36 0.079504696 ubox
9 46 0.297247114 ubox
9 47 0.076944767 ubox
9 56 0.169410402 ubox
9 57 0.062742063 ubox
9 58 0.062299769 ubox
9 61 0.882039128 ubox
10 15 0.010757091 ubox
10 19 0.021462077 ubox
10 26 0.039313532 ubox
10 35 0.080881681 ubox
10 43 0.008621519 ubox
10 45 0.328046017 ubox
10 46 0.028056523 ubox
10 55 0.167538775 ubox
10 56 0.057902724 ubox
10 57 0.062094592 ubox
10 60 0.883389512 ubox
11 18 0.022559366 ubox
11 21 0.025173377 ubox
11 29 0.014466390 ubox
11 31 0.020923591 ubox
11 32 0.003357253 ubox
11 34 0.081022667 ubox
11 42 0.009439517 ubox
11 44 0.327097339 ubox
11 52 0.194560951 ubox
11 53 0.028078963 ubox
11 59 0.882645279 ubox
12 17 0.021114969 ubox
12 20 0.025508009 ubox
12 24 0.153857172 ubox
12 28 0.012755219 ubox
12 30 0.020597991 ubox
12 31 0.003289277 ubox
12 34 0.161224559 ubox
12 37 0.004139330 ubox
12 41 0.008954356 ubox
12 44 0.039965571 ubox
12 51 0.196421337 ubox
12 52 0.020029313 ubox
12 59 0.023220748 ubox
13 19 0.025541359 ubox
13 23 0.164538691 ubox
13 27 0.006390524 ubox
13 33 0.183529386 ubox
13 35 0.004349520 ubox
13 43 0.132174904 ubox
13 50 0.197415908 ubox
13 58 0.117166708 ubox
14 18 0.025305604 ubox
14 22 0.165726056 ubox
14 29 0.019791529 ubox
14 32 0.184954853 ubox
14 34 0.004687154 ubox
14 42 0.096011458 ubox
14 49 0.197620705 ubox
14 52 0.047365098 ubox
14 53 0.912777152 ubox
15 21 0.165686978 ubox
15 22 0.003332058 ubox
15 28 0.019734236 ubox
15 29 0.020355503 ubox
15 31 0.184908622 ubox
15 32 0.006756256 ubox
15 42 0.222552777 ubox
15 48 0.197254530 ubox
15 51 0.047208999 ubox
15 52 0.914088257 ubox
15 53 0.010381008 ubox
16 20 0.149265165 ubox
16 21 0.003508316 ubox
16 28 0.021565451 ubox
16 30 0.181630862 ubox
16 31 0.006762620 ubox
16 41 0.242151050 ubox
16 51 0.910232279 ubox
16 52 0.009410452 ubox
17 27 0.043603472 ubox
17 40 0.242424226 ubox
17 46 0.175135443 ubox
17 47 0.006540041 ubox
17 50 0.901839045 ubox
18 26 0.045536593 ubox
18 39 0.241328176 ubox
18 45 0.185431836 ubox
18 50 0.004104719 ubox
19 25 0.044544365 ubox
19 28 0.174547283 ubox
19 37 0.004671499 ubox
19 38 0.237109665 ubox
19 44 0.185087036 ubox
19 48 0.913573566 ubox
19 49 0.003221145 ubox
20 27 0.180929618 ubox
20 36 0.024607249 ubox
20 43 0.158152466 ubox
20 46 0.005425663 ubox
20 47 0.915992623 ubox
21 26 0.181634554 ubox
21 27 0.012288893 ubox
21 35 0.024115536 ubox
21 36 0.074243105 ubox
21 40 0.123790507 ubox
21 45 0.006094265 ubox
21 46 0.917140961 ubox
21 47 0.004474393 ubox
22 26 0.012191376 ubox
22 33 0.006196315 ubox
22 35 0.082757680 ubox
22 39 0.125555970 ubox
22 45 0.917992807 ubox
22 46 0.004937666 ubox
23 32 0.009094786 ubox
23 34 0.036242653 ubox
23 37 0.113912055 ubox
23 38 0.124435499 ubox
23 41 0.080500327 ubox
23 44 0.890689814 ubox
24 33 0.023642717 ubox
24 36 0.174115201 ubox
24 40 0.081840028 ubox
24 43 0.361392866 ubox
25 33 0.206522740 ubox
25 35 0.184489985 ubox
25 39 0.077736044 ubox
25 43 0.852388174 ubox
26 32 0.208829867 ubox
26 34 0.185353057 ubox
26 42 0.933691203 ubox
27 31 0.188160993 ubox
27 34 0.007557136 ubox
27 37 0.036570321 ubox
27 41 0.928432740 ubox
28 33 0.018392983 ubox
28 36 0.042141925 ubox
28 40 0.862447967 ubox
28 43 0.007669583 ubox
28 46 0.003628272 ubox
28 58 0.003253004 ubox
28 61 0.008613883 ubox
29 35 0.039413179 ubox
29 36 0.135041169 ubox
29 39 0.558866634 ubox
29 40 0.340499629 ubox
29 45 0.004166857 ubox
29 47 0.005793653 ubox
29 57 0.004243112 ubox
29 58 0.028677069 ubox
29 60 0.009122071 ubox
30 35 0.163788749 ubox
30 36 0.117337996 ubox
30 39 0.467674356 ubox
30 46 0.006098016 ubox
30 47 0.016507645 ubox
30 56 0.004276271 ubox
30 57 0.031028816 ubox
30 58 0.005196115 ubox
30 61 0.005883207 ubox
31 35 0.092669323 ubox
31 40 0.120819635 ubox
31 45 0.006026980 ubox
31 46 0.017879312 ubox
31 55 0.003727183 ubox
31 56 0.031804176 ubox
31 57 0.005254257 ubox
31 58 0.003325147 ubox
31 60 0.005989236 ubox
31 61 0.008742249 ubox
32 39 0.219951252 ubox
32 45 0.018087521 ubox
32 55 0.032315278 ubox
32 56 0.004416847 ubox
32 57 0.004143551 ubox
32 60 0.009572540 ubox
33 38 0.258172203 ubox
33 41 0.012152379 ubox
33 44 0.017935399 ubox
33 54 0.032304284 ubox
33 59 0.009492828 ubox
34 40 0.017499513 ubox
34 43 0.014681389 ubox
34 45 0.009343312 ubox
34 55 0.008374953 ubox
34 58 0.007388256 ubox
34 60 0.004409207 ubox
35 42 0.012488422 ubox
35 44 0.009387679 ubox
35 52 0.019902957 ubox
35 53 0.027242396 ubox
35 54 0.008772793 ubox
35 59 0.004356465 ubox
36 41 0.011773449 ubox
36 51 0.015843682 ubox
36 52 0.033088641 ubox
36 53 0.007361111 ubox
37 43 0.003596435 ubox
37 56 0.009371438 ubox
38 50 0.058027744 ubox
38 55 0.010761944 ubox
39 49 0.059880333 ubox
39 52 0.007396664 ubox
39 54 0.010939681 ubox
40 48 0.066358668 ubox
40 51 0.009978584 ubox
40 53 0.010943809 ubox
40 59 0.005582014 ubox
40 62 0.017751447 ubox
41 47 0.064594392 ubox
41 50 0.009993199 ubox
41 56 0.027022501 ubox
41 58 0.005238328 ubox
41 61 0.018155378 ubox
42 46 0.043834104 ubox
42 55 0.032738689 ubox
42 57 0.003261283 ubox
42 60 0.018102890 ubox
43 51 0.007326546 ubox
43 54 0.033377808 ubox
43 59 0.017643825 ubox
44 50 0.009200234 ubox
44 58 0.012955977 ubox
44 60 0.010413034 ubox
45 49 0.009329323 ubox
45 52 0.034464165 ubox
45 53 0.008146541 ubox
45 59 0.010461618 ubox
46 51 0.033590683 ubox
46 52 0.008021875 ubox
46 54 0.006970507 ubox
47 51 0.005946883 ubox
47 53 0.007093683 ubox
47 62 0.016961582 ubox
48 56 0.007773896 ubox
48 57 0.004126152 ubox
48 61 0.039255187 ubox
49 55 0.007918552 ubox
49 56 0.004161130 ubox
49 60 0.040945845 ubox
50 54 0.007363519 ubox
50 59 0.040808186 ubox
50 62 0.003746466 ubox
51 58 0.034557401 ubox
51 61 0.009326765 ubox
52 57 0.027661573 ubox
52 60 0.009916705 ubox
52 61 0.008287462 ubox
53 60 0.009173853 ubox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
19 48 0.9500000 lbox
20 47 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
showpage
end
%%EOF
