%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AGPS)
} def

/sequence { (\
UUUCACCCGCGCCCAGCGGUUCCGGGCGGCAGCACAAGGCGGUAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.009941790 ubox
1 29 0.017919506 ubox
1 32 0.111421312 ubox
1 37 0.025726818 ubox
1 38 0.004490999 ubox
1 45 0.003811760 ubox
2 24 0.023088333 ubox
2 25 0.009075587 ubox
2 26 0.007849966 ubox
2 28 0.020191847 ubox
2 29 0.032718962 ubox
2 31 0.147726685 ubox
2 32 0.037923717 ubox
2 36 0.027879579 ubox
2 37 0.022835789 ubox
2 44 0.004447001 ubox
2 45 0.008477013 ubox
3 24 0.018055944 ubox
3 25 0.021580796 ubox
3 26 0.005529385 ubox
3 28 0.022076372 ubox
3 29 0.604824166 ubox
3 31 0.028087398 ubox
3 36 0.021928881 ubox
3 37 0.006301852 ubox
3 42 0.008223434 ubox
3 44 0.010352732 ubox
4 24 0.047227882 ubox
4 25 0.015102840 ubox
4 28 0.795297782 ubox
4 41 0.011003637 ubox
5 20 0.083947731 ubox
5 43 0.037874740 ubox
6 19 0.073161039 ubox
6 25 0.016013339 ubox
6 26 0.876786316 ubox
6 29 0.022340901 ubox
6 39 0.010903104 ubox
6 42 0.038963065 ubox
7 18 0.051806184 ubox
7 19 0.368389759 ubox
7 24 0.013480166 ubox
7 25 0.883247133 ubox
7 28 0.019985677 ubox
7 29 0.055288861 ubox
7 38 0.010890821 ubox
7 39 0.003432485 ubox
7 41 0.038049693 ubox
7 42 0.045340998 ubox
8 18 0.374415319 ubox
8 24 0.883542426 ubox
8 28 0.055055825 ubox
8 38 0.003833352 ubox
8 41 0.046167465 ubox
9 17 0.378097024 ubox
9 20 0.009662442 ubox
9 23 0.882511965 ubox
9 27 0.051449684 ubox
9 30 0.179572328 ubox
9 33 0.085792099 ubox
9 40 0.044428288 ubox
9 46 0.004979763 ubox
10 16 0.378048841 ubox
10 18 0.107041326 ubox
10 19 0.013674631 ubox
10 26 0.050635964 ubox
10 28 0.213497923 ubox
10 29 0.127320660 ubox
10 32 0.085338494 ubox
10 39 0.042824291 ubox
10 41 0.013184741 ubox
10 45 0.004818736 ubox
11 17 0.107725668 ubox
11 20 0.873348107 ubox
11 27 0.254457038 ubox
11 30 0.083919822 ubox
11 33 0.019078507 ubox
11 40 0.014647542 ubox
12 16 0.106947859 ubox
12 19 0.875586415 ubox
12 25 0.041827379 ubox
12 26 0.254832076 ubox
12 29 0.083682324 ubox
12 32 0.019056069 ubox
12 39 0.014643681 ubox
13 18 0.872965662 ubox
13 19 0.055167736 ubox
13 24 0.041568995 ubox
13 25 0.255012041 ubox
13 26 0.004501395 ubox
13 28 0.082874685 ubox
13 29 0.024996938 ubox
13 38 0.014613594 ubox
14 18 0.058149770 ubox
14 24 0.254233824 ubox
14 25 0.004985042 ubox
14 28 0.026526237 ubox
15 21 0.019376302 ubox
16 20 0.016489041 ubox
16 27 0.068401246 ubox
16 30 0.018009071 ubox
16 33 0.018817699 ubox
17 24 0.057056795 ubox
17 26 0.068645458 ubox
17 29 0.017990709 ubox
17 32 0.018791834 ubox
18 23 0.067155971 ubox
18 27 0.003268276 ubox
18 47 0.005507067 ubox
19 27 0.018205984 ubox
19 30 0.015635788 ubox
19 33 0.022903824 ubox
19 46 0.007133046 ubox
20 26 0.018032508 ubox
20 29 0.014888783 ubox
20 32 0.024221937 ubox
20 37 0.006601757 ubox
20 45 0.007627032 ubox
21 25 0.013354007 ubox
21 28 0.012214652 ubox
21 29 0.003809517 ubox
21 31 0.024889821 ubox
21 36 0.007142998 ubox
21 37 0.005470397 ubox
21 44 0.007623338 ubox
22 28 0.005010318 ubox
22 29 0.034953816 ubox
22 38 0.003517149 ubox
22 39 0.012029682 ubox
22 42 0.010733918 ubox
23 28 0.035114900 ubox
23 38 0.012951823 ubox
23 41 0.010778697 ubox
24 40 0.010234879 ubox
24 47 0.040923052 ubox
25 46 0.035775603 ubox
25 47 0.354428435 ubox
26 33 0.127671644 ubox
26 40 0.004932371 ubox
26 43 0.050238897 ubox
26 46 0.362658428 ubox
27 32 0.134882724 ubox
27 39 0.005223179 ubox
27 41 0.014098844 ubox
27 42 0.078470527 ubox
27 45 0.364813067 ubox
28 40 0.011810311 ubox
28 47 0.238546310 ubox
29 40 0.106667606 ubox
29 43 0.346964555 ubox
29 46 0.247026206 ubox
30 39 0.107073140 ubox
30 42 0.363085786 ubox
30 45 0.245730253 ubox
32 40 0.403774514 ubox
32 43 0.195602773 ubox
32 46 0.097879060 ubox
33 39 0.404782432 ubox
33 42 0.205234414 ubox
33 45 0.098093888 ubox
34 43 0.128370726 ubox
35 42 0.129227671 ubox
38 47 0.862402663 ubox
39 46 0.869860439 ubox
40 45 0.869557176 ubox
41 47 0.024845082 ubox
42 46 0.024629882 ubox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
