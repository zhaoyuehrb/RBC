%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAACAGGGCCCUGGAGCACCUGGUUUCGGGGACAGUAGGGUUGGUGGGAGUUGCGAUGAUAUUGCCACCUACCUCUUACAUCUUUUAGUGCGUAUGUUCUGUCCACCCAGCUACUGGUUCAUUUGAGUAGAUCGGAGUCAGAUGAGUACAUGUUUACGGGAGGCGCUUGGUUACGGGAUCCAGAUAGGAAUCUUUAUCUGAGCUGCUUGUCAGUUUGUUCGUCUGUCCCUAGGUCUGUCUGCUAUCAGCU\
) } def
/len { sequence length } bind def

/coor [
[159.79647827 304.06835938]
[155.07342529 289.83132935]
[150.35038757 275.59429932]
[138.99920654 265.95065308]
[141.99769592 250.41618347]
[137.27465820 236.17915344]
[132.55160522 221.94213867]
[127.82856750 207.70510864]
[123.10552216 193.46809387]
[118.38247681 179.23106384]
[113.65943146 164.99403381]
[91.02713776 165.80496216]
[69.43817902 158.96423340]
[61.07583618 171.41699219]
[52.71349716 183.86975098]
[44.35115433 196.32250977]
[35.98881149 208.77526855]
[27.62647057 221.22802734]
[19.26412964 233.68078613]
[10.90178776 246.13356018]
[2.53944612 258.58630371]
[4.20959854 274.54220581]
[-7.32450390 285.69314575]
[-23.21488571 283.48513794]
[-31.27180481 269.61193848]
[-25.31468201 254.71589661]
[-9.91331387 250.22396851]
[-1.55097270 237.77120972]
[6.81136894 225.31845093]
[15.17371082 212.86569214]
[23.53605270 200.41293335]
[31.89839363 187.96017456]
[40.26073456 175.50741577]
[48.62307739 163.05465698]
[56.98542023 150.60188293]
[48.98773193 142.52709961]
[42.48387909 133.20693970]
[37.66432190 122.91437531]
[34.67018890 111.95077515]
[19.70461082 112.96639252]
[4.73903275 113.98201752]
[-10.21289730 115.18193054]
[-25.14891052 116.56595612]
[-40.08492279 117.94998169]
[-55.02093506 119.33400726]
[-68.04833221 128.31161499]
[-81.43521881 121.78164673]
[-96.37123108 123.16567230]
[-111.30724335 124.54969788]
[-126.24325562 125.93372345]
[-141.17927551 127.31774902]
[-154.20666504 136.29536438]
[-167.59355164 129.76539612]
[-182.52957153 131.14941406]
[-197.46557617 132.53344727]
[-204.48175049 146.27305603]
[-217.82380676 154.01856995]
[-233.23435974 153.29841614]
[-245.79594421 144.34240723]
[-251.50019836 130.00836182]
[-248.52693176 114.87022400]
[-237.82490540 103.75851440]
[-222.80908203 100.21894836]
[-208.27095032 105.38098145]
[-198.84960938 117.59743500]
[-183.91358948 116.21340942]
[-168.97756958 114.82938385]
[-157.01850891 105.95075989]
[-142.56329346 112.38173676]
[-127.62728119 110.99771118]
[-112.69126892 109.61368561]
[-97.75525665 108.22966003]
[-82.81924438 106.84563446]
[-70.86016846 97.96701813]
[-56.40496063 104.39799500]
[-41.46894836 103.01396942]
[-26.53293610 101.62994385]
[-11.59692287 100.24591827]
[-7.92605352 97.23072052]
[-2.32951951 96.47128296]
[3.72341251 99.01644135]
[18.68898964 98.00081635]
[33.65456772 96.98519897]
[34.76420212 87.54624939]
[37.20973969 78.36233521]
[40.94110489 69.62152100]
[45.88188171 61.50279617]
[51.93089676 54.17242432]
[58.96427917 47.78050995]
[66.83799744 42.45795822]
[75.39080048 38.31375504]
[84.44756317 35.43276978]
[82.60424042 20.54646301]
[80.76091766 5.66015530]
[78.91758728 -9.22615242]
[69.54305267 -21.97090340]
[75.65767670 -35.55253220]
[73.81435394 -50.43883896]
[70.70312500 -54.56057739]
[69.57746124 -59.01749420]
[70.23588562 -63.00378799]
[72.18847656 -65.90799713]
[70.89648438 -80.85225677]
[69.60449219 -95.79650879]
[68.31250000 -110.74076080]
[56.02137375 -116.94409180]
[48.45439529 -128.31631470]
[47.49519730 -141.83384705]
[53.28733063 -153.96542358]
[64.22457886 -161.59461975]
[63.11679077 -176.55364990]
[50.08909225 -184.77468872]
[44.46594238 -198.92507935]
[48.20901871 -213.50085449]
[59.67985535 -222.96435547]
[58.57206726 -237.92340088]
[57.46427917 -252.88243103]
[56.35649109 -267.84146118]
[55.24870300 -282.80050659]
[41.38200378 -289.40429688]
[32.68820953 -302.06579590]
[31.50590897 -317.37911987]
[38.15313721 -331.22506714]
[50.84182358 -339.87911987]
[66.15877533 -341.01339722]
[79.98380280 -334.32281494]
[88.59805298 -321.60705566]
[89.68433380 -306.28662109]
[82.95043182 -292.48263550]
[70.20774078 -283.90829468]
[71.31552887 -268.94924927]
[72.42331696 -253.99021912]
[73.53110504 -239.03118896]
[74.63889313 -224.07214355]
[87.37859344 -216.40155029]
[93.22787476 -202.53613281]
[89.75044250 -187.71179199]
[78.07582855 -177.66143799]
[79.18361664 -162.70240784]
[93.41830444 -154.50044250]
[100.01605225 -139.27340698]
[96.18967438 -122.95465088]
[83.25675201 -112.03276062]
[84.54874420 -97.08850098]
[85.84074402 -82.14424896]
[87.13273621 -67.19998932]
[88.70066071 -52.28216553]
[90.54398346 -37.39585495]
[99.78667450 -25.71587372]
[93.80390167 -11.06947708]
[95.64722443 3.81683087]
[97.49054718 18.70313835]
[99.33386993 33.58944702]
[109.63008118 34.28800201]
[119.69377136 36.57318497]
[129.28195190 40.38982773]
[138.16311646 45.64576721]
[146.12281799 52.21410751]
[152.96887207 59.93624496]
[158.53598022 68.62573242]
[162.68972778 78.07276154]
[165.32981873 88.04922485]
[180.29539490 87.03360748]
[193.54000854 78.37967682]
[206.76196289 85.23748016]
[221.72753906 84.22186279]
[236.69311523 83.20624542]
[251.65869141 82.19062042]
[266.61773682 81.08283234]
[281.56967163 79.88291931]
[296.52157593 78.68300629]
[311.47351074 77.48309326]
[326.42544556 76.28318024]
[341.37738037 75.08326721]
[354.51437378 66.26683044]
[367.81982422 72.96122742]
[382.77172852 71.76130676]
[395.90875244 62.94487000]
[409.21417236 69.63926697]
[424.16610718 68.43935394]
[439.11804199 67.23944092]
[452.25503540 58.42300034]
[465.56045532 65.11739349]
[480.51239014 63.91748428]
[495.46432495 62.71756744]
[506.91760254 51.48360062]
[522.82348633 53.57681274]
[530.98040771 67.39146423]
[525.13098145 82.33014679]
[509.76248169 86.93317413]
[496.66424561 77.66950226]
[481.71231079 78.86941528]
[466.76037598 80.06932831]
[454.69284058 88.79994202]
[440.31793213 82.19136810]
[425.36602783 83.39128113]
[410.41409302 84.59119415]
[398.34652710 93.32180786]
[383.97164917 86.71324158]
[369.01971436 87.91315460]
[356.95217896 96.64376831]
[342.57730103 90.03519440]
[327.62536621 91.23510742]
[312.67343140 92.43502808]
[297.72149658 93.63494110]
[282.76956177 94.83485413]
[267.81765747 96.03476715]
[261.41973877 99.69222260]
[252.67431641 97.15620422]
[237.70874023 98.17182159]
[222.74314880 99.18743896]
[207.77757263 100.20306396]
[195.60339355 108.78434753]
[181.31100464 101.99918365]
[166.34542847 103.01480103]
[160.92608643 126.43516541]
[147.52449036 146.39212036]
[127.89646149 160.27099609]
[132.61950684 174.50802612]
[137.34254456 188.74504089]
[142.06559753 202.98207092]
[146.78863525 217.21908569]
[151.51167297 231.45611572]
[156.23472595 245.69314575]
[167.92372131 256.35513306]
[164.58740234 270.87127686]
[169.31045532 285.10827637]
[174.03349304 299.34530640]
[180.65057373 300.75222778]
[186.47273254 304.09512329]
[190.95455933 309.02444458]
[193.68739319 315.04394531]
[194.43653870 321.56045532]
[193.16110229 327.94229126]
[190.01487732 333.58050537]
[185.32865906 337.94702148]
[188.98736572 352.49398804]
[194.10176086 360.02770996]
[192.60035706 367.24267578]
[196.07957458 381.83361816]
[199.55879211 396.42453003]
[213.93672180 402.26016235]
[222.11001587 415.45019531]
[220.93586731 430.92279053]
[210.86576843 442.72842407]
[195.77186584 446.32757568]
[181.45808411 440.33630371]
[173.42835999 427.05838013]
[174.77029419 411.59942627]
[184.96786499 399.90374756]
[181.48864746 385.31283569]
[178.00944519 370.72189331]
[174.44041443 356.15267944]
[170.78170776 341.60574341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 228]
[2 227]
[3 226]
[5 224]
[6 223]
[7 222]
[8 221]
[9 220]
[10 219]
[11 218]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[39 83]
[40 82]
[41 81]
[42 78]
[43 77]
[44 76]
[45 75]
[47 73]
[48 72]
[49 71]
[50 70]
[51 69]
[53 67]
[54 66]
[55 65]
[92 153]
[93 152]
[94 151]
[95 150]
[97 148]
[98 147]
[102 146]
[103 145]
[104 144]
[105 143]
[110 139]
[111 138]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[162 215]
[163 214]
[165 212]
[166 211]
[167 210]
[168 209]
[169 207]
[170 206]
[171 205]
[172 204]
[173 203]
[174 202]
[176 200]
[177 199]
[179 197]
[180 196]
[181 195]
[183 193]
[184 192]
[185 191]
[236 254]
[237 253]
[239 252]
[240 251]
[241 250]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
