%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (S100A12)
} def

/sequence { (\
ACCACUGCUGGCUUUUUGCUGUAGCUCCACAUUCCUGUGCAUUGAGGGGUUAACAUUAGGCUGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 50 0.003243898 ubox
2 11 0.031199219 ubox
2 49 0.003816273 ubox
2 60 0.006762087 ubox
2 64 0.102423512 ubox
2 65 0.060027510 ubox
3 10 0.032097738 ubox
3 48 0.003808527 ubox
3 59 0.006783709 ubox
3 63 0.102597306 ubox
3 64 0.054340556 ubox
4 9 0.027411437 ubox
4 62 0.078260037 ubox
5 24 0.086310660 ubox
5 59 0.009816864 ubox
5 60 0.014774075 ubox
5 64 0.044487198 ubox
5 65 0.086883899 ubox
5 68 0.492018837 ubox
6 23 0.086897345 ubox
6 55 0.003525276 ubox
6 58 0.009873980 ubox
6 59 0.013362957 ubox
6 63 0.043553771 ubox
6 64 0.053364837 ubox
6 67 0.490883159 ubox
7 19 0.004891422 ubox
7 22 0.087060532 ubox
7 25 0.034173798 ubox
7 54 0.004367163 ubox
7 57 0.008750114 ubox
7 61 0.045047698 ubox
7 62 0.009355134 ubox
8 18 0.004900136 ubox
8 21 0.087040068 ubox
8 24 0.034236875 ubox
8 59 0.012510926 ubox
8 60 0.044931667 ubox
8 64 0.972499605 ubox
8 65 0.103007541 ubox
8 68 0.010165014 ubox
9 21 0.012314368 ubox
9 23 0.032499428 ubox
9 52 0.005521130 ubox
9 55 0.006582297 ubox
9 58 0.013079337 ubox
9 59 0.040918276 ubox
9 63 0.975443298 ubox
9 64 0.082827861 ubox
9 67 0.010138615 ubox
10 20 0.094729714 ubox
10 22 0.017086322 ubox
10 26 0.003808953 ubox
10 51 0.006704805 ubox
10 54 0.006556641 ubox
10 57 0.011300184 ubox
10 62 0.985432103 ubox
11 19 0.103977782 ubox
11 22 0.006592807 ubox
11 25 0.004460277 ubox
11 50 0.007216417 ubox
11 56 0.007088702 ubox
11 61 0.993733621 ubox
12 18 0.103982910 ubox
12 21 0.008946882 ubox
12 24 0.004491641 ubox
12 49 0.007241461 ubox
12 59 0.006053319 ubox
12 60 0.993727173 ubox
12 64 0.004791918 ubox
12 65 0.006207650 ubox
12 68 0.028368673 ubox
13 23 0.004409250 ubox
13 48 0.007230256 ubox
13 58 0.007697851 ubox
13 59 0.991137663 ubox
13 60 0.003224207 ubox
13 63 0.004729753 ubox
13 64 0.006176212 ubox
13 66 0.008314923 ubox
13 67 0.029054405 ubox
14 47 0.007193920 ubox
14 58 0.978625293 ubox
14 59 0.022826392 ubox
14 63 0.005445920 ubox
14 65 0.008918826 ubox
14 66 0.029150718 ubox
15 46 0.007184481 ubox
15 58 0.030021236 ubox
15 59 0.009378761 ubox
15 60 0.006999403 ubox
15 64 0.009256508 ubox
15 65 0.028948111 ubox
16 45 0.007190820 ubox
16 58 0.021805187 ubox
16 59 0.037072221 ubox
16 63 0.008252940 ubox
16 64 0.028186074 ubox
17 44 0.007089343 ubox
17 55 0.953228335 ubox
17 58 0.089996607 ubox
17 59 0.003516400 ubox
17 63 0.022366719 ubox
18 25 0.004591176 ubox
18 43 0.005668236 ubox
18 50 0.003930076 ubox
18 54 0.950351181 ubox
18 57 0.105517266 ubox
18 61 0.031055377 ubox
18 62 0.003225306 ubox
19 24 0.004778761 ubox
19 49 0.004753951 ubox
19 59 0.007124558 ubox
19 60 0.030920505 ubox
20 29 0.003865854 ubox
20 31 0.006365893 ubox
20 41 0.006949886 ubox
20 48 0.004376734 ubox
20 52 0.125020659 ubox
20 55 0.213724594 ubox
20 58 0.007970142 ubox
20 59 0.022773545 ubox
21 28 0.004396825 ubox
21 30 0.009789214 ubox
21 40 0.007005081 ubox
21 50 0.004717551 ubox
21 51 0.101359582 ubox
21 54 0.224765707 ubox
21 56 0.003939508 ubox
21 57 0.007626179 ubox
22 29 0.009395394 ubox
22 39 0.006484955 ubox
22 52 0.957060272 ubox
22 53 0.162325537 ubox
22 63 0.003632098 ubox
23 38 0.006000382 ubox
23 51 0.984046942 ubox
23 62 0.004615677 ubox
24 50 0.993334400 ubox
24 61 0.005111047 ubox
25 37 0.004118998 ubox
25 46 0.047244459 ubox
25 47 0.005629633 ubox
25 48 0.017287353 ubox
25 49 0.994186250 ubox
25 60 0.005216020 ubox
25 65 0.006674775 ubox
25 68 0.017551612 ubox
26 45 0.047723701 ubox
26 46 0.004126868 ubox
26 47 0.019322358 ubox
26 48 0.992829153 ubox
26 59 0.004963889 ubox
26 65 0.017276689 ubox
26 66 0.068070394 ubox
26 67 0.012825090 ubox
27 44 0.047879872 ubox
27 46 0.021430800 ubox
27 47 0.992952187 ubox
27 48 0.032366456 ubox
27 49 0.003493042 ubox
27 64 0.021743272 ubox
27 65 0.072486610 ubox
28 37 0.003906878 ubox
28 39 0.131507790 ubox
28 44 0.026561849 ubox
28 46 0.984108056 ubox
28 47 0.031669754 ubox
28 48 0.003674132 ubox
28 63 0.021833306 ubox
28 64 0.072419232 ubox
29 36 0.006318937 ubox
29 38 0.251063158 ubox
29 43 0.044785926 ubox
29 50 0.003676178 ubox
29 62 0.020817270 ubox
30 37 0.252629872 ubox
30 39 0.167996382 ubox
30 44 0.897621116 ubox
30 49 0.003848077 ubox
30 63 0.067395872 ubox
31 36 0.219821248 ubox
31 38 0.169204458 ubox
31 42 0.113854712 ubox
31 43 0.877493473 ubox
31 50 0.033380318 ubox
31 62 0.064944887 ubox
32 37 0.168231160 ubox
32 41 0.150600120 ubox
32 45 0.021052874 ubox
32 46 0.009884577 ubox
32 49 0.036345380 ubox
32 59 0.003343867 ubox
32 66 0.004186910 ubox
32 67 0.039298313 ubox
33 44 0.019740930 ubox
33 45 0.071859527 ubox
33 48 0.041354706 ubox
33 58 0.003238507 ubox
33 60 0.010158005 ubox
33 65 0.004424249 ubox
33 66 0.045181040 ubox
34 44 0.072236635 ubox
34 47 0.051236485 ubox
34 48 0.004368594 ubox
34 59 0.010595440 ubox
34 60 0.070365776 ubox
34 64 0.004573688 ubox
34 65 0.045782600 ubox
35 46 0.052409465 ubox
35 47 0.004369821 ubox
35 59 0.070495615 ubox
35 63 0.004576688 ubox
35 64 0.045781507 ubox
36 44 0.004413167 ubox
36 45 0.054822062 ubox
36 46 0.004282114 ubox
36 55 0.009553113 ubox
36 58 0.069181041 ubox
36 63 0.045368031 ubox
37 43 0.013436759 ubox
37 54 0.011382469 ubox
37 56 0.042855873 ubox
37 57 0.055168824 ubox
37 61 0.006379245 ubox
37 62 0.034342531 ubox
38 44 0.004112538 ubox
38 53 0.011228352 ubox
38 55 0.059004360 ubox
38 60 0.006349951 ubox
39 43 0.004934726 ubox
39 50 0.006404176 ubox
39 54 0.059279060 ubox
39 61 0.045324668 ubox
40 49 0.007577977 ubox
40 60 0.045289397 ubox
41 50 0.022589765 ubox
42 49 0.022832169 ubox
42 53 0.056367689 ubox
42 59 0.037685714 ubox
43 48 0.021480273 ubox
43 52 0.064029097 ubox
43 55 0.011309515 ubox
43 58 0.042377328 ubox
44 51 0.064274276 ubox
44 54 0.011437038 ubox
44 57 0.042513638 ubox
45 50 0.062412881 ubox
45 56 0.041940712 ubox
45 57 0.003785663 ubox
46 56 0.003790188 ubox
47 62 0.011172020 ubox
48 61 0.014157830 ubox
48 62 0.009174203 ubox
49 61 0.011916634 ubox
50 59 0.014541744 ubox
50 60 0.011679520 ubox
51 58 0.015375070 ubox
51 59 0.010786334 ubox
51 66 0.004262988 ubox
52 57 0.014691242 ubox
54 63 0.010245872 ubox
55 62 0.009396296 ubox
61 68 0.003682363 ubox
62 67 0.004020993 ubox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
showpage
end
%%EOF
