%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGGGCGGCGCGGCGCGGAGCCGAGCAGGACGGCCGCCAUCUUGCGCGCAGCUGGAGUCGGUGCCUGAGGUUGCAGCCGAGAGUGUGCGCCAGCCCGCGGCCCAGCCGAAGCUCUUUCCCGCCGCCUCUCCGCGCCUCGCCCAGGUUCAGCUCCGCCUGACCCUCCGCUUGGCACGGUCCCCUGACCCUCAGUCCGGCCUGGUCCGGCCUUCCAGCCGCCCCGGGGACGAUGAACGGAGGAUAA\
) } def
/len { sequence length } bind def

/coor [
[535.87377930 314.20785522]
[536.38891602 302.79809570]
[523.21343994 295.62823486]
[510.03796387 288.45837402]
[496.86248779 281.28854370]
[483.68701172 274.11868286]
[470.51153564 266.94882202]
[457.33605957 259.77899170]
[444.16058350 252.60913086]
[430.98510742 245.43927002]
[417.46472168 238.94320679]
[403.63385010 233.13745117]
[389.80294800 227.33169556]
[375.97207642 221.52593994]
[361.24206543 223.73408508]
[351.51220703 211.25848389]
[337.68133545 205.45272827]
[323.85046387 199.64697266]
[310.01959229 193.84121704]
[296.18869019 188.03546143]
[282.35781860 182.22970581]
[268.52694702 176.42395020]
[254.69606018 170.61819458]
[240.86518860 164.81245422]
[221.89289856 168.61907959]
[209.98941040 152.33045959]
[196.01644897 146.87551880]
[188.66105652 147.36950684]
[181.90232849 141.26261902]
[167.99929810 135.63182068]
[153.29830933 138.02563477]
[143.41184998 125.67377472]
[129.50881958 120.04298401]
[115.60579681 114.41218567]
[93.66547394 120.27623749]
[78.96528625 102.96527863]
[64.32942963 99.68019867]
[49.69357681 96.39512634]
[35.05772018 93.11004639]
[20.42186546 89.82497406]
[5.78600979 86.53989410]
[-5.86468077 96.61797333]
[-21.03831673 97.88846588]
[-33.89842606 90.07299042]
[-39.62201309 76.34788513]
[-54.25786972 73.06281281]
[-69.41753387 77.58997345]
[-80.14132690 67.25316620]
[-94.77718353 63.96809006]
[-109.41304016 60.68301392]
[-124.04889679 57.39793777]
[-138.68475342 54.11286163]
[-153.32060242 50.82778549]
[-167.95646667 47.54270935]
[-174.26947021 56.00057983]
[-182.99775696 61.86595917]
[-193.14002991 64.49644470]
[-203.54275513 63.61899567]
[-213.03150940 59.35805893]
[-220.54338074 52.21863937]
[-225.24618530 43.02658081]
[-226.63053894 32.83307266]
[-241.08203125 28.81385994]
[-255.53353882 24.79464722]
[-269.98504639 20.77543449]
[-284.46160889 16.84746742]
[-298.96267700 13.01090145]
[-313.46374512 9.17433643]
[-325.40637207 19.08155441]
[-340.89361572 20.04335403]
[-353.97027588 11.68990326]
[-359.60815430 -2.76672411]
[-355.63934326 -17.76766014]
[-343.58993530 -27.54474068]
[-328.09317017 -28.33847618]
[-315.10787964 -19.84366226]
[-309.62716675 -5.32672453]
[-295.12609863 -1.49015927]
[-280.62503052 2.34640622]
[-273.37298584 1.02217901]
[-265.96582031 6.32393169]
[-251.51432800 10.34314442]
[-237.06282043 14.36235714]
[-222.61131287 18.38157082]
[-208.10787964 5.21620989]
[-188.44895935 3.51196861]
[-171.65119934 14.14011383]
[-164.67138672 32.90685272]
[-150.03552246 36.19192886]
[-135.39967346 39.47700500]
[-120.76381683 42.76208115]
[-106.12796021 46.04715729]
[-91.49210358 49.33223343]
[-76.85624695 52.61730957]
[-62.74344254 47.85517883]
[-50.97279358 58.42695618]
[-36.33693695 61.71203232]
[-25.29660034 51.74965286]
[-10.32996464 50.18000793]
[2.84514070 57.81348419]
[9.07108593 71.90404510]
[23.70694160 75.18911743]
[38.34279633 78.47419739]
[52.97865295 81.75926971]
[67.61450958 85.04434204]
[82.25036621 88.32942200]
[84.37602234 85.60752869]
[86.91464233 83.26604462]
[82.44167328 68.94848633]
[77.96870422 54.63092422]
[65.54711151 43.92409515]
[68.87410736 27.86597633]
[84.52716064 22.97578621]
[96.40375519 34.28413010]
[92.28626251 50.15795517]
[96.75923157 64.47551727]
[101.23220062 78.79307556]
[109.09075928 80.80078125]
[115.62397766 85.60752869]
[119.87938690 92.51255035]
[121.23658752 100.50916290]
[135.13961792 106.13995361]
[149.04264832 111.77075195]
[164.73806763 109.77968597]
[173.63009644 121.72879028]
[187.53311157 127.35958862]
[201.47138977 132.90255737]
[215.44435120 138.35749817]
[225.10784912 133.43345642]
[235.66979980 134.60247803]
[243.68466187 141.24111938]
[246.67094421 150.98156738]
[260.50183105 156.78732300]
[274.33270264 162.59307861]
[288.16357422 168.39883423]
[301.99444580 174.20458984]
[315.82534790 180.01034546]
[329.65621948 185.81610107]
[343.48709106 191.62185669]
[357.31796265 197.42759705]
[373.03726196 195.63471985]
[381.77783203 207.69505310]
[395.60870361 213.50080872]
[409.43957520 219.30656433]
[423.27047729 225.11231995]
[416.49722290 211.72863770]
[418.78768921 196.90454102]
[429.28451538 186.18928528]
[444.05828857 183.59397888]
[457.57861328 190.09014893]
[464.78433228 203.24604797]
[462.97805786 218.13688660]
[452.83593750 229.18847656]
[438.15496826 232.26379395]
[451.33044434 239.43365479]
[464.50592041 246.60350037]
[477.68139648 253.77336121]
[490.85687256 260.94320679]
[504.03234863 268.11306763]
[517.20782471 275.28289795]
[530.38330078 282.45275879]
[543.55877686 289.62261963]
[560.50927734 280.67749023]
[579.27288818 283.76126099]
[592.26141357 297.44238281]
[594.33361816 316.04125977]
[607.77099609 322.70739746]
[621.20837402 329.37353516]
[634.64569092 336.03967285]
[648.08306885 342.70581055]
[661.52044678 349.37194824]
[670.42529297 343.57492065]
[680.85131836 341.99597168]
[690.91821289 344.85238647]
[698.83825684 351.56756592]
[703.23376465 360.88592529]
[703.37658691 371.10736084]
[716.55206299 378.27722168]
[731.53851318 374.02932739]
[744.79821777 381.48828125]
[748.75555420 395.80172729]
[761.93103027 402.97158813]
[775.10650635 410.14144897]
[788.28198242 417.31127930]
[801.45745850 424.48114014]
[814.63293457 431.65100098]
[835.95458984 422.13159180]
[858.91357422 436.27713013]
[873.72741699 438.63299561]
[888.54125977 440.98886108]
[902.31848145 432.76889038]
[917.28375244 438.54992676]
[921.95703125 453.89724731]
[912.75329590 467.03771973]
[896.73297119 467.89105225]
[886.18542480 455.80270386]
[871.37158203 453.44683838]
[856.55773926 451.09097290]
[851.01477051 465.02923584]
[863.40069580 473.49020386]
[875.78668213 481.95117188]
[888.17266846 490.41213989]
[897.00000000 492.65991211]
[900.66058350 499.05880737]
[912.93878174 507.67538452]
[925.21704102 516.29193115]
[939.46032715 510.36465454]
[954.64300537 513.10131836]
[965.92041016 523.62866211]
[969.69384766 538.58740234]
[964.75933838 553.20428467]
[952.69140625 562.81518555]
[937.34088135 564.35321045]
[923.60607910 557.32757568]
[915.86975098 543.98022461]
[916.60046387 528.57019043]
[904.32226562 519.95361328]
[892.04400635 511.33703613]
[879.71166992 502.79809570]
[867.32574463 494.33712769]
[854.93975830 485.87615967]
[842.55377197 477.41522217]
[829.57061768 478.30523682]
[818.05065918 473.88079834]
[809.94354248 465.48986816]
[806.36590576 455.09249878]
[807.46307373 444.82647705]
[794.28759766 437.65661621]
[781.11212158 430.48675537]
[767.93664551 423.31692505]
[754.76116943 416.14706421]
[741.58569336 408.97720337]
[727.41766357 413.42715454]
[713.95367432 406.34359741]
[709.38226318 391.45269775]
[696.20678711 384.28283691]
[677.94866943 391.13568115]
[660.28173828 382.17779541]
[654.85430908 362.80932617]
[641.41693115 356.14318848]
[627.97955322 349.47705078]
[614.54223633 342.81091309]
[601.10485840 336.14477539]
[587.66748047 329.47863770]
[578.97192383 336.40029907]
[568.27587891 339.60293579]
[557.10522461 338.58987427]
[547.06854248 333.46868896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[11 145]
[12 144]
[13 143]
[14 142]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[26 128]
[27 127]
[29 126]
[30 125]
[32 123]
[33 122]
[34 121]
[36 106]
[37 105]
[38 104]
[39 103]
[40 102]
[41 101]
[45 97]
[46 96]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 88]
[62 84]
[63 83]
[64 82]
[65 81]
[66 79]
[67 78]
[68 77]
[108 117]
[109 116]
[110 115]
[166 244]
[167 243]
[168 242]
[169 241]
[170 240]
[171 239]
[177 236]
[178 235]
[181 232]
[182 231]
[183 230]
[184 229]
[185 228]
[186 227]
[188 198]
[189 197]
[190 196]
[199 222]
[200 221]
[201 220]
[202 219]
[204 218]
[205 217]
[206 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
