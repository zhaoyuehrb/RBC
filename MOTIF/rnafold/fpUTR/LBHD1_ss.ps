%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCAUUUUCCGCAAGGAAUCCAUGGCCGCCUGCACAGCCAGCGGAGCGCCCACGGGAGCUCCCCGCAGCCGCAAGCUGUUGCCGCGCGGUCUCACUACCCCUUGGCGCAGGCUAGAGCGCCCUAUAGCAGAAACCAUAGAUAAGCGGCCGGCUAGAGAGGACCUGCUCGAGGAAACGUUUGGAAUCCGGAGCGCUUGGAUCUCAGAAUCACCACC\
) } def
/len { sequence length } bind def

/coor [
[240.07553101 491.38598633]
[246.25726318 477.71899414]
[256.63702393 466.89028931]
[270.03015137 460.13577271]
[284.90811157 458.22625732]
[299.57290649 461.37976074]
[312.35269165 469.23797607]
[305.26379395 456.01876831]
[298.17489624 442.79956055]
[291.08599854 429.58035278]
[283.99710083 416.36114502]
[276.52844238 403.35272217]
[268.68634033 390.56594849]
[260.84423828 377.77917480]
[254.67048645 373.72250366]
[252.98271179 364.75006104]
[245.32653809 351.85110474]
[228.86602783 348.39300537]
[219.82337952 333.81161499]
[224.21112061 316.87518311]
[216.36901855 304.08840942]
[201.86993408 300.87713623]
[193.73477173 288.02127075]
[197.20137024 272.83505249]
[189.35926819 260.04830933]
[181.51715088 247.26153564]
[173.67504883 234.47477722]
[165.83294678 221.68800354]
[157.99082947 208.90124512]
[144.74125671 202.09698486]
[144.12210083 186.28788757]
[136.27998352 173.50112915]
[128.43788147 160.71437073]
[120.59577942 147.92759705]
[108.68599701 153.09875488]
[95.48216248 155.25910950]
[81.75696564 154.08880615]
[68.36051941 149.46868896]
[56.16779709 141.49842834]
[46.02201843 130.50090027]
[38.67755890 117.01187897]
[34.74621582 101.75509644]
[34.65054703 85.60383606]
[38.58765793 69.53099060]
[23.59119606 69.85670471]
[8.59473324 70.18241882]
[-6.40173006 70.50813293]
[-21.39819336 70.83384705]
[-35.02709961 78.86898804]
[-47.91938400 71.40987396]
[-62.91584778 71.73559570]
[-76.64823914 80.69960022]
[-91.15322876 73.04862976]
[-91.50933075 56.65335083]
[-77.35021210 48.37981415]
[-63.24156189 56.73912811]
[-48.24509811 56.41341400]
[-35.68883896 48.40157318]
[-21.72390938 55.83738708]
[-6.72744560 55.51166916]
[8.26901722 55.18595505]
[23.26548004 54.86024094]
[38.26194382 54.53452301]
[42.95911407 40.28894424]
[31.09747887 31.10735321]
[19.23584175 21.92576408]
[7.37420654 12.74417305]
[-1.32323897 9.96780872]
[-4.59141397 3.34279847]
[-16.31888580 -6.00954866]
[-31.93242264 -8.56455040]
[-37.05887604 -22.54913902]
[-48.78635025 -31.90148735]
[-60.51382065 -41.25383377]
[-72.24129486 -50.60618210]
[-88.52909088 -52.51397324]
[-94.77143097 -67.67858124]
[-84.54673004 -80.49994659]
[-68.37328339 -77.78855896]
[-62.88894653 -62.33365250]
[-51.16147614 -52.98130417]
[-39.43400192 -43.62895966]
[-27.70652962 -34.27661133]
[-12.93182087 -32.39055252]
[-6.96653891 -17.73702049]
[4.76093292 -8.38467407]
[16.55579567 0.88253742]
[28.41743279 10.06412697]
[40.27906799 19.24571609]
[52.14070511 28.42730713]
[59.09548569 25.61999512]
[53.08781052 11.87561989]
[47.08013535 -1.86875403]
[41.07245636 -15.61312866]
[35.06478119 -29.35750198]
[24.09002876 -39.58270645]
[26.82263184 -54.33170319]
[40.73212433 -59.94650650]
[52.93792343 -51.22764969]
[52.13690948 -36.24870300]
[57.35394287 -22.18518257]
[62.57098007 -8.12166500]
[67.78801727 5.94185257]
[73.00505066 20.00537109]
[79.95983124 17.19805908]
[82.12386322 2.35497975]
[84.28789520 -12.48809814]
[86.45192719 -27.33117676]
[88.61595154 -42.17425537]
[77.41590881 -52.91384125]
[74.70059967 -68.19149017]
[81.51410675 -82.13264465]
[95.23650360 -89.37664032]
[110.59124756 -87.13801575]
[121.67412567 -76.27755737]
[124.22354889 -60.97135162]
[117.25920105 -47.10493088]
[103.45903015 -40.01022720]
[101.29499817 -25.16714668]
[99.13097382 -10.32406902]
[96.96694183 4.51900959]
[94.80290985 19.36208725]
[108.58728027 25.27742577]
[117.85449219 13.48256302]
[127.12170410 1.68769956]
[136.38891602 -10.10716343]
[130.59992981 -24.33331299]
[132.71549988 -39.54580688]
[142.16654968 -51.65255737]
[156.41076660 -57.39691544]
[171.61654663 -55.23367310]
[183.69361877 -45.74473190]
[189.39329529 -31.48257256]
[187.18240356 -16.28364182]
[177.65565491 -4.23637486]
[163.37570190 1.41857219]
[148.18377686 -0.83995247]
[138.91656494 10.95491028]
[129.64935303 22.74977303]
[120.38214111 34.54463577]
[143.57693481 51.39765930]
[156.84114075 75.24092865]
[158.71165466 101.07221222]
[149.98834229 123.98219299]
[133.38253784 140.08549500]
[141.22465515 152.87225342]
[149.06675720 165.65902710]
[156.90885925 178.44578552]
[170.71936035 186.16464233]
[170.77760315 201.05912781]
[178.61970520 213.84590149]
[186.46180725 226.63265991]
[194.30392456 239.41943359]
[202.14602661 252.20619202]
[209.98812866 264.99295044]
[225.09568787 268.78765869]
[232.86654663 281.86697388]
[229.15577698 296.24630737]
[236.99789429 309.03308105]
[250.36761475 310.64315796]
[260.22601318 319.52865601]
[263.12518311 332.28042603]
[258.22549438 344.19491577]
[265.88165283 357.09387207]
[273.63101196 369.93707275]
[281.47311401 382.72384644]
[289.31521606 395.51058960]
[293.19372559 397.44009399]
[295.97882080 400.22213745]
[297.53683472 403.40921021]
[297.89288330 406.55627441]
[297.21630859 409.27224731]
[304.30520630 422.49145508]
[311.39410400 435.71066284]
[318.48300171 448.92987061]
[325.57189941 462.14907837]
[332.75131226 465.73226929]
[336.52911377 471.87750244]
[336.45913696 478.28451538]
[346.06393433 489.80615234]
[355.66873169 501.32775879]
[365.27352905 512.84936523]
[374.87832642 524.37103271]
[389.65795898 530.01672363]
[391.86437988 544.74694824]
[401.46917725 556.26861572]
[411.07397461 567.79022217]
[420.67877197 579.31182861]
[430.28356934 590.83349609]
[439.88836670 602.35510254]
[455.67156982 605.23089600]
[463.13659668 619.43139648]
[456.55691528 634.06311035]
[440.97991943 637.90191650]
[428.35491943 628.00292969]
[428.36672974 611.95989990]
[418.76193237 600.43829346]
[409.15713501 588.91662598]
[399.55233765 577.39501953]
[389.94754028 565.87341309]
[380.34277344 554.35174561]
[366.25015259 549.53021240]
[363.35671997 533.97583008]
[353.75192261 522.45416260]
[344.14712524 510.93255615]
[334.54232788 499.41094971]
[324.93753052 487.88931274]
[327.44091797 502.67892456]
[324.87686157 517.45819092]
[317.53799438 530.54022217]
[306.26187134 540.43212891]
[292.33544922 546.00482178]
[277.34817505 546.62237549]
[263.01049805 542.21423340]
[250.95883179 533.28356934]
[242.56858826 520.84960938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[12 167]
[13 166]
[14 165]
[16 164]
[17 163]
[20 159]
[21 158]
[24 155]
[25 154]
[26 153]
[27 152]
[28 151]
[29 150]
[31 148]
[32 147]
[33 146]
[34 145]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[50 57]
[51 56]
[64 90]
[65 89]
[66 88]
[67 87]
[69 86]
[70 85]
[72 83]
[73 82]
[74 81]
[75 80]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[123 140]
[124 139]
[125 138]
[126 137]
[179 207]
[180 206]
[181 205]
[182 204]
[183 203]
[185 201]
[186 200]
[187 199]
[188 198]
[189 197]
[190 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
