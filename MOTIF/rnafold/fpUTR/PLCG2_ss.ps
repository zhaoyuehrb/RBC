%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAUCACGUGGCGCGGCGCCGCGGCCGAAGCAGAAGUAGCGAGCGCCGGCGGCGGAGGGCGUGAGCGGCGCUGAGUGACCCGAGUCGGGACGCGGGCUGCGCGCGCGGGACCCCGGAGCCCAAACCCGGGGCAGGCGGGCAGCUGUGCCCGGGCGGCACGGCCAGCUUCCUGAUUUCUCCCGAUUCCUUCCUUCUCCCUGGAGCGGCCGACA\
) } def
/len { sequence length } bind def

/coor [
[122.70891571 166.79821777]
[115.75299835 153.50854492]
[108.79708099 140.21888733]
[101.84117126 126.92921448]
[94.88525391 113.63954926]
[82.68591309 104.91166687]
[67.86211395 102.61928558]
[53.04159164 108.15667725]
[41.64627838 98.56521606]
[26.82248116 96.27283478]
[11.99868393 93.98045349]
[-2.82511449 91.68807220]
[-17.66526413 89.50405884]
[-32.52097702 87.42852020]
[-47.37668610 85.35298157]
[-62.23239899 83.27744293]
[-77.08811188 81.20190430]
[-91.94381714 79.12636566]
[-106.79953003 77.05082703]
[-115.72854614 78.96236420]
[-121.85652161 74.83489990]
[-136.68032837 72.54251862]
[-151.50411987 70.25013733]
[-166.32791138 67.95775604]
[-181.15171814 65.66537476]
[-198.16116333 72.72311401]
[-211.39892578 61.20037079]
[-226.25463867 59.12483597]
[-241.11035156 57.04929733]
[-255.96606445 54.97375870]
[-262.48297119 66.46485901]
[-272.49218750 75.03740692]
[-284.78872681 79.68794250]
[-297.90191650 79.88345337]
[-310.27124023 75.62236786]
[-320.43215942 67.43217468]
[-327.18930054 56.30421066]
[-329.75729370 43.57371140]
[-344.54598999 41.06497574]
[-359.44586182 46.38523102]
[-370.69979858 36.62828827]
[-385.48852539 34.11955643]
[-402.59927368 40.92800140]
[-415.66726685 29.21306801]
[-430.49105835 26.92068863]
[-445.31484985 24.62830734]
[-460.13867188 22.33592606]
[-474.96246338 20.04354477]
[-489.78625488 17.75116348]
[-504.61004639 15.45878315]
[-515.55590820 26.29828835]
[-530.60955811 28.58734131]
[-543.96661377 21.65530586]
[-550.60119629 8.34662819]
[-565.42498779 6.05424738]
[-580.24877930 3.76186633]
[-593.99066162 12.04077816]
[-608.98052979 6.32390499]
[-613.71948242 -9.00325871]
[-604.57220459 -22.18302345]
[-588.55566406 -23.10500145]
[-577.95642090 -11.06193161]
[-563.13256836 -8.76955128]
[-548.30877686 -6.47716999]
[-537.96411133 -17.16015244]
[-523.13714600 -19.73374939]
[-509.47802734 -13.00449657]
[-502.31768799 0.63498551]
[-487.49386597 2.92736626]
[-472.67007446 5.21974707]
[-457.84628296 7.51212788]
[-443.02249146 9.80450916]
[-428.19869995 12.09688950]
[-413.37487793 14.38927078]
[-403.43450928 7.49944210]
[-391.06747437 9.28587627]
[-382.97979736 19.33083534]
[-368.19107056 21.83956909]
[-354.34899902 16.33987427]
[-342.03726196 26.27625656]
[-327.24853516 28.78499222]
[-317.87615967 14.72426796]
[-303.25186157 6.14807987]
[-286.29461670 4.82429266]
[-270.41354370 11.06760693]
[-258.82269287 23.66650963]
[-253.89053345 40.11804962]
[-239.03482056 42.19358444]
[-224.17910767 44.26912308]
[-209.32339478 46.34466171]
[-199.48475647 39.31032562]
[-187.09292603 40.91586685]
[-178.85932922 50.84157944]
[-164.03553772 53.13396072]
[-149.21174622 55.42634201]
[-134.38793945 57.71871948]
[-119.56414032 60.01110077]
[-104.72399139 62.19511795]
[-89.86827850 64.27066040]
[-75.01257324 66.34619141]
[-60.15686035 68.42173004]
[-45.30114746 70.49726868]
[-30.44543839 72.57280731]
[-15.58972740 74.64834595]
[-8.53245163 72.46134949]
[-0.53273362 76.86427307]
[14.29106426 79.15665436]
[29.11486244 81.44903564]
[43.93865967 83.74141693]
[57.69888306 78.04005432]
[70.15449524 87.79548645]
[84.97829437 90.08786774]
[98.26795959 83.13195038]
[104.83258057 69.64470673]
[111.39720154 56.15746307]
[117.96182251 42.67021942]
[124.52644348 29.18297386]
[131.09106445 15.69573021]
[122.98416138 2.57011890]
[123.28328705 -12.85434437]
[131.89299011 -25.65576935]
[146.06594849 -31.74926758]
[161.27963257 -29.19042587]
[172.67938232 -18.79576302]
[176.62760925 -3.88217473]
[171.86442566 10.79146385]
[159.90977478 20.54285049]
[144.57830811 22.26035118]
[138.01368713 35.74759674]
[131.44906616 49.23484039]
[124.88444519 62.72208405]
[118.31982422 76.20932770]
[111.75520325 89.69657135]
[121.00930023 101.50172424]
[135.67387390 98.34732819]
[150.33845520 95.19293213]
[165.00303650 92.03852844]
[172.73188782 87.17581940]
[179.90486145 88.94683075]
[194.61396790 86.00704193]
[209.32307434 83.06725311]
[224.03216553 80.12746429]
[237.58171082 67.65576935]
[253.97235107 73.92942047]
[268.63693237 70.77502441]
[283.30151367 67.62062073]
[297.96609497 64.46622467]
[312.63064575 61.31182861]
[327.29522705 58.15742874]
[341.95980835 55.00303268]
[356.62438965 51.84863281]
[366.50204468 39.20697403]
[382.54507446 39.19177246]
[392.44665527 51.81469345]
[388.61114502 67.39250946]
[373.98080444 73.97525024]
[359.77877808 66.51320648]
[345.11419678 69.66761017]
[330.44961548 72.82200623]
[315.78506470 75.97640228]
[301.12048340 79.13079834]
[286.45590210 82.28520203]
[271.79132080 85.43959808]
[257.12673950 88.59399414]
[250.30354309 98.58021545]
[238.11434937 101.32954407]
[226.97195435 94.83656311]
[212.26286316 97.77635193]
[197.55375671 100.71614075]
[182.84465027 103.65592957]
[168.15742493 106.70310211]
[153.49285889 109.85750580]
[138.82827759 113.01190186]
[124.16370392 116.16629791]
[118.61859894 113.33554840]
[113.28382874 110.17109680]
[108.17492676 106.68363190]
[115.13083649 119.97329712]
[122.08675385 133.26296997]
[129.04266357 146.55262756]
[135.99858093 159.84230042]
[143.62477112 172.75900269]
[151.90127563 185.26898193]
[160.17779541 197.77894592]
[167.52049255 203.20721436]
[168.48229980 210.53271484]
[176.57513428 223.16227722]
[184.66798401 235.79183960]
[192.76081848 248.42141724]
[207.90589905 246.52687073]
[222.37042236 251.39927673]
[233.28244019 262.07122803]
[238.47537231 276.42379761]
[236.91815186 291.60726929]
[228.91996765 304.60696411]
[216.06886292 312.84176636]
[200.91644287 314.67663574]
[186.47122192 309.74731445]
[175.60130310 299.03247070]
[170.46493530 284.65957642]
[172.08193970 269.48233032]
[180.13125610 256.51425171]
[172.03842163 243.88468933]
[163.94557190 231.25512695]
[155.85272217 218.62556458]
[147.66783142 206.05546570]
[139.39131165 193.54548645]
[131.11479187 181.03552246]
[128.22950745 195.75541687]
[116.63535309 205.27253723]
[101.63540649 205.23384094]
[90.09049988 195.65704346]
[87.28118134 180.92247009]
[94.49240112 167.76957703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[6 112]
[7 111]
[9 109]
[10 108]
[11 107]
[12 106]
[13 104]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 98]
[21 97]
[22 96]
[23 95]
[24 94]
[25 93]
[27 90]
[28 89]
[29 88]
[30 87]
[38 81]
[39 80]
[41 78]
[42 77]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[49 69]
[50 68]
[54 64]
[55 63]
[56 62]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[134 174]
[135 173]
[136 172]
[137 171]
[139 170]
[140 169]
[141 168]
[142 167]
[144 164]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[182 208]
[183 207]
[184 206]
[186 205]
[187 204]
[188 203]
[189 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
