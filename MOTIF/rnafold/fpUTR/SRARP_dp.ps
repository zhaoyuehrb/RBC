%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SRARP)
} def

/sequence { (\
ACAUCCUGGAAGAGUGGCCUAGGACAGCUCCUCUCCUGCCAGAGCUAGGCAGGCGCCGAAGUAGCCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.019005251 ubox
1 62 0.042515510 ubox
2 8 0.065949111 ubox
2 14 0.021211843 ubox
2 16 0.034667215 ubox
2 38 0.012138758 ubox
2 61 0.044935437 ubox
3 7 0.053826440 ubox
3 15 0.034639535 ubox
3 37 0.012462460 ubox
3 62 0.017054051 ubox
4 10 0.035654302 ubox
4 13 0.077623798 ubox
4 14 0.031534683 ubox
4 24 0.434520350 ubox
4 43 0.037330212 ubox
4 49 0.005966097 ubox
4 59 0.041928577 ubox
4 61 0.017090848 ubox
5 9 0.037778360 ubox
5 12 0.082353159 ubox
5 16 0.010256562 ubox
5 17 0.004162447 ubox
5 22 0.004636225 ubox
5 23 0.475710435 ubox
5 42 0.030926694 ubox
5 48 0.008702387 ubox
5 49 0.532396594 ubox
5 53 0.016220635 ubox
5 58 0.042146234 ubox
6 12 0.058851696 ubox
6 14 0.032391931 ubox
6 16 0.004852378 ubox
6 22 0.475892722 ubox
6 42 0.195693988 ubox
6 48 0.554735047 ubox
6 49 0.003572607 ubox
6 52 0.017249863 ubox
6 61 0.017870280 ubox
6 64 0.027236660 ubox
7 11 0.053521472 ubox
7 13 0.035456972 ubox
7 21 0.473411430 ubox
7 38 0.010463976 ubox
7 41 0.197865584 ubox
7 47 0.555009587 ubox
7 51 0.017162345 ubox
7 55 0.008354298 ubox
7 58 0.074034817 ubox
7 60 0.015478551 ubox
7 63 0.027349003 ubox
7 67 0.199601684 ubox
8 19 0.223267636 ubox
8 20 0.419781116 ubox
8 31 0.007821627 ubox
8 33 0.003183974 ubox
8 34 0.050091481 ubox
8 35 0.008428702 ubox
8 36 0.467641234 ubox
8 37 0.031809068 ubox
8 40 0.197264246 ubox
8 46 0.554871354 ubox
8 50 0.016132497 ubox
8 54 0.010192078 ubox
8 57 0.097672423 ubox
8 62 0.025936498 ubox
8 66 0.271334600 ubox
9 18 0.225726616 ubox
9 19 0.417545193 ubox
9 30 0.007805898 ubox
9 33 0.054650957 ubox
9 34 0.003780780 ubox
9 35 0.469602144 ubox
9 36 0.041124742 ubox
9 39 0.196313031 ubox
9 45 0.554540158 ubox
9 56 0.097446187 ubox
9 65 0.271081475 ubox
10 29 0.006574695 ubox
10 32 0.053929049 ubox
10 34 0.332184700 ubox
11 20 0.014858177 ubox
11 29 0.004070525 ubox
11 32 0.010551837 ubox
11 34 0.401964324 ubox
11 37 0.073172523 ubox
11 46 0.013775208 ubox
12 19 0.017284784 ubox
12 28 0.005622760 ubox
12 30 0.061338497 ubox
12 31 0.008474010 ubox
12 33 0.531829322 ubox
12 35 0.077321836 ubox
12 36 0.058809816 ubox
12 45 0.014863434 ubox
13 20 0.005950556 ubox
13 29 0.061859596 ubox
13 32 0.532139482 ubox
13 34 0.094367058 ubox
13 37 0.017981847 ubox
13 46 0.012400947 ubox
14 19 0.006517371 ubox
14 25 0.004983378 ubox
14 28 0.061766562 ubox
14 31 0.531375898 ubox
14 33 0.094283701 ubox
14 36 0.018695716 ubox
14 39 0.021712920 ubox
14 45 0.012699331 ubox
14 56 0.005686034 ubox
14 62 0.004632911 ubox
14 68 0.305162719 ubox
15 24 0.005051831 ubox
15 26 0.047078995 ubox
15 27 0.041592687 ubox
15 38 0.021863831 ubox
15 41 0.551714222 ubox
15 44 0.010355662 ubox
15 47 0.018458281 ubox
15 51 0.004204323 ubox
15 55 0.005675839 ubox
15 58 0.249873502 ubox
15 67 0.307636018 ubox
16 25 0.057556852 ubox
16 29 0.509639096 ubox
16 30 0.117631005 ubox
16 31 0.074557023 ubox
16 32 0.006248215 ubox
16 33 0.004673692 ubox
16 34 0.018249395 ubox
16 35 0.015688660 ubox
16 36 0.018684228 ubox
16 37 0.020906346 ubox
16 40 0.556048537 ubox
16 46 0.020340349 ubox
16 50 0.003288631 ubox
16 54 0.005437038 ubox
16 57 0.259283464 ubox
16 66 0.310603431 ubox
17 28 0.532770198 ubox
17 29 0.038807400 ubox
17 30 0.073848396 ubox
17 31 0.006420469 ubox
17 33 0.018826508 ubox
17 34 0.014961721 ubox
17 35 0.018810805 ubox
17 36 0.020932596 ubox
17 39 0.556031734 ubox
17 45 0.020797333 ubox
17 50 0.044788073 ubox
17 54 0.003741157 ubox
17 56 0.259324107 ubox
17 65 0.310611322 ubox
17 68 0.003429444 ubox
18 27 0.528705337 ubox
18 38 0.550102004 ubox
18 44 0.020773252 ubox
18 49 0.044979297 ubox
18 53 0.004117820 ubox
18 55 0.258809460 ubox
18 64 0.292802153 ubox
18 67 0.003470540 ubox
19 27 0.085200345 ubox
19 42 0.030042460 ubox
19 44 0.003193813 ubox
19 48 0.044983668 ubox
19 52 0.004111976 ubox
19 53 0.026673585 ubox
19 61 0.094371203 ubox
19 64 0.101708193 ubox
20 26 0.104397909 ubox
20 38 0.073071825 ubox
20 41 0.029708241 ubox
20 43 0.003694020 ubox
20 47 0.044932999 ubox
20 51 0.003706499 ubox
20 52 0.010599786 ubox
20 60 0.092274933 ubox
20 63 0.142797634 ubox
21 29 0.056922618 ubox
21 32 0.370827469 ubox
21 34 0.024799117 ubox
21 37 0.497370077 ubox
21 46 0.042718252 ubox
21 62 0.130913296 ubox
22 28 0.058187669 ubox
22 29 0.022935160 ubox
22 30 0.006638409 ubox
22 31 0.401874750 ubox
22 32 0.008819170 ubox
22 33 0.025357207 ubox
22 34 0.036416691 ubox
22 35 0.005306134 ubox
22 36 0.536452401 ubox
22 37 0.003855917 ubox
22 40 0.035253765 ubox
22 45 0.040055697 ubox
22 57 0.061048064 ubox
22 66 0.008342271 ubox
23 28 0.023603452 ubox
23 29 0.005797741 ubox
23 30 0.401935963 ubox
23 31 0.011504130 ubox
23 32 0.023047060 ubox
23 33 0.038164147 ubox
23 35 0.536472651 ubox
23 36 0.003739923 ubox
23 39 0.035686000 ubox
23 56 0.060741069 ubox
23 65 0.008366135 ubox
24 29 0.362108759 ubox
24 32 0.036637353 ubox
24 34 0.525805427 ubox
24 62 0.023438311 ubox
25 38 0.037334698 ubox
25 61 0.026556726 ubox
26 32 0.478475343 ubox
26 34 0.027386641 ubox
26 37 0.037384021 ubox
26 46 0.082341134 ubox
27 31 0.478381095 ubox
27 33 0.043185888 ubox
27 36 0.037322713 ubox
27 39 0.030151164 ubox
27 45 0.087021164 ubox
27 50 0.040030732 ubox
27 54 0.024542847 ubox
27 56 0.131168648 ubox
27 62 0.197387563 ubox
27 65 0.401418789 ubox
27 68 0.053715528 ubox
28 38 0.030187069 ubox
28 44 0.087168044 ubox
28 48 0.004678840 ubox
28 49 0.040017042 ubox
28 52 0.007495590 ubox
28 53 0.020101965 ubox
28 55 0.131386294 ubox
28 61 0.202214981 ubox
28 64 0.402340046 ubox
28 67 0.054130644 ubox
29 43 0.086944302 ubox
29 47 0.004891575 ubox
29 48 0.039133429 ubox
29 51 0.007851383 ubox
29 52 0.011941003 ubox
29 59 0.146637538 ubox
29 60 0.160349276 ubox
29 63 0.389658036 ubox
30 42 0.083323733 ubox
30 48 0.004416276 ubox
30 49 0.013419614 ubox
30 53 0.110433839 ubox
30 58 0.194054884 ubox
31 42 0.024063973 ubox
31 44 0.044025438 ubox
31 48 0.013559149 ubox
31 52 0.109801992 ubox
31 53 0.006433494 ubox
31 61 0.374280975 ubox
31 64 0.050711958 ubox
32 41 0.033484838 ubox
32 43 0.044743846 ubox
32 47 0.012578742 ubox
32 51 0.104751168 ubox
32 52 0.004012846 ubox
32 53 0.008000567 ubox
32 59 0.246895008 ubox
32 60 0.296300634 ubox
32 63 0.050087000 ubox
33 42 0.045100882 ubox
33 44 0.024152363 ubox
33 49 0.013166735 ubox
33 52 0.012310081 ubox
33 53 0.004378086 ubox
33 58 0.334275793 ubox
33 61 0.088046233 ubox
33 64 0.005896460 ubox
34 41 0.042893079 ubox
34 43 0.024650884 ubox
34 48 0.009020884 ubox
34 49 0.029733027 ubox
34 51 0.013245381 ubox
34 53 0.006324745 ubox
34 59 0.049617915 ubox
34 60 0.087262593 ubox
34 63 0.006513175 ubox
35 42 0.024607700 ubox
35 48 0.032288550 ubox
35 49 0.101284164 ubox
35 52 0.006922786 ubox
35 53 0.622426433 ubox
35 58 0.030792982 ubox
36 42 0.004340447 ubox
36 44 0.006976219 ubox
36 48 0.101559767 ubox
36 52 0.634070852 ubox
36 53 0.003681404 ubox
37 41 0.004565895 ubox
37 43 0.007762424 ubox
37 47 0.099628433 ubox
37 51 0.765537685 ubox
37 55 0.015578852 ubox
37 67 0.004656857 ubox
38 45 0.108682749 ubox
38 46 0.027713036 ubox
38 50 0.786339926 ubox
38 54 0.019913645 ubox
38 65 0.017465940 ubox
38 66 0.005736216 ubox
38 68 0.033406142 ubox
39 44 0.109994924 ubox
39 49 0.786390180 ubox
39 53 0.019926519 ubox
39 64 0.017617238 ubox
39 67 0.033763437 ubox
40 48 0.785963867 ubox
40 52 0.019914785 ubox
44 50 0.025980284 ubox
44 54 0.005580397 ubox
44 62 0.110409877 ubox
44 65 0.147129318 ubox
44 68 0.051315421 ubox
45 49 0.025812519 ubox
45 53 0.005582269 ubox
45 61 0.113047354 ubox
45 64 0.147474604 ubox
45 67 0.051531730 ubox
46 52 0.005454691 ubox
46 60 0.109699623 ubox
46 63 0.146867226 ubox
47 62 0.145168626 ubox
48 57 0.189412221 ubox
48 66 0.124671086 ubox
49 56 0.189523556 ubox
49 65 0.125443232 ubox
49 68 0.146839728 ubox
50 55 0.189256468 ubox
50 64 0.125491755 ubox
50 67 0.196716470 ubox
52 66 0.726433199 ubox
53 62 0.145564235 ubox
53 65 0.727924383 ubox
53 68 0.063993542 ubox
54 61 0.173225951 ubox
54 64 0.727920166 ubox
54 67 0.073432627 ubox
55 62 0.431202092 ubox
55 65 0.085131783 ubox
55 66 0.056982237 ubox
55 68 0.036586917 ubox
56 61 0.458691475 ubox
56 64 0.097038787 ubox
56 67 0.032162764 ubox
57 67 0.040527716 ubox
58 66 0.045584968 ubox
61 68 0.020997353 ubox
62 67 0.020299060 ubox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
showpage
end
%%EOF
