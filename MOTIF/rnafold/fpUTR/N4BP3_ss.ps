%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGAUCGAGCGCCGCGGAGCGCGUCCCUCCCUCGCCAAUCCGGCUCCGGCGCCGGCGCCCGCCCGCGUUUUCCCGGCGCCUGCCGCUCCGCCGCUCCGACCCGGCACGCAGUCCCGGCCCGAGCCGACGCCUUGCAGGAGGGUUCAAAUCCGCGCGGGGGAGCUGCGACGCGCAAGGGCUGCGGAGCCGCGGGCCGGCGAGCGCGUCGCCACCAUGAAGCAGCUGCCUGUACCCUGUUGAAACUUC\
) } def
/len { sequence length } bind def

/coor [
[223.52230835 124.32816315]
[208.61968994 122.62171936]
[193.71707153 120.91528320]
[178.81445312 119.20884705]
[171.82859802 121.56464386]
[163.73429871 117.38523865]
[148.85449219 115.49015808]
[133.97468567 113.59507751]
[126.95954132 115.86219788]
[118.91884613 111.58059692]
[104.06423950 109.49717712]
[89.07506561 110.06708527]
[74.42154694 113.27244568]
[62.59352493 123.77999115]
[48.50684738 118.94110870]
[33.85332870 122.14646149]
[19.19980621 125.35182190]
[4.54628468 128.55717468]
[-10.10723686 131.76252747]
[-24.76075745 134.96789551]
[-39.41427994 138.17324829]
[-54.06780243 141.37860107]
[-61.76016617 146.25840759]
[-68.92720795 144.53051758]
[-83.62015533 147.54998779]
[-69.32728577 152.10121155]
[-59.46657944 163.40460205]
[-56.89702988 178.18287659]
[-62.36363983 192.15127563]
[-74.28144073 201.25985718]
[-89.19502258 202.86767578]
[-102.78038788 196.50860596]
[-111.09864044 184.02635193]
[-111.73802185 169.03999329]
[-104.51485443 155.89634705]
[-117.24451447 163.83081055]
[-129.97418213 171.76527405]
[-134.98674011 187.00515747]
[-150.07656860 192.45277405]
[-163.66804504 183.92919922]
[-165.33494568 167.97297668]
[-153.79856873 156.82435608]
[-137.90864563 159.03561401]
[-125.17897797 151.10115051]
[-112.44931030 143.16668701]
[-114.23708344 135.88287354]
[-128.64079285 131.69561768]
[-117.81262207 121.31526184]
[-119.60039520 114.03145599]
[-134.55708313 112.89245605]
[-149.51377869 111.75346375]
[-164.47047424 110.61446381]
[-179.42716980 109.47546387]
[-194.38386536 108.33647156]
[-209.34056091 107.19747162]
[-224.29725647 106.05847931]
[-239.28250122 105.39363861]
[-254.28131104 105.20362854]
[-269.28009033 105.01361847]
[-280.41970825 116.22454834]
[-296.22393799 116.19143677]
[-307.31646729 104.93393707]
[-307.11627197 89.13091278]
[-295.74212646 78.15802765]
[-279.94210815 78.52529144]
[-269.09008789 90.01482391]
[-254.09129333 90.20483398]
[-239.09249878 90.39484406]
[-247.65061951 78.07581329]
[-243.48013306 63.66724014]
[-229.66503906 57.82402420]
[-216.42137146 64.86713409]
[-213.54261780 79.58830261]
[-223.15824890 91.10178375]
[-208.20155334 92.24077606]
[-193.24487305 93.37977600]
[-178.28817749 94.51877594]
[-163.33148193 95.65776825]
[-148.37478638 96.79676819]
[-133.41809082 97.93576050]
[-118.46139526 99.07476044]
[-91.84831238 111.93645477]
[-86.63963318 132.85704041]
[-71.94668579 129.83755493]
[-57.27315903 126.72508240]
[-42.61963654 123.51972198]
[-27.96611404 120.31436920]
[-13.31259346 117.10900879]
[1.34092820 113.90365601]
[15.99444962 110.69829559]
[30.64797020 107.49294281]
[45.30149078 104.28758240]
[56.08139420 94.00930786]
[71.21619415 98.61892700]
[85.86971283 95.41356659]
[89.46787262 88.83304596]
[96.66418457 75.67200470]
[100.26233673 69.09148407]
[95.05276489 55.02519989]
[80.96977997 48.36882401]
[75.88690186 34.02939987]
[82.31952667 20.64444923]
[77.10995483 6.57816696]
[71.90037537 -7.48811483]
[66.69079590 -21.55439758]
[54.64225006 -31.80833244]
[57.47767258 -46.43056488]
[52.26809311 -60.49684525]
[41.09711075 -73.25009918]
[50.25952911 -87.51496887]
[66.50332642 -82.65953064]
[66.33437347 -65.70642853]
[71.54395294 -51.64014435]
[83.21987152 -42.39232254]
[80.75707245 -26.76397514]
[85.96665192 -12.69769382]
[91.17623138 1.36858833]
[96.38581085 15.43487072]
[109.98520660 21.40077591]
[115.46884155 35.59177399]
[109.11904144 49.81562042]
[114.32862091 63.88190079]
[113.57749939 80.81251526]
[106.14765167 94.64257050]
[121.00225830 96.72598267]
[135.86976624 98.71527100]
[150.74957275 100.61035156]
[165.62937927 102.50543213]
[180.52088928 104.30622864]
[195.42350769 106.01266479]
[210.32612610 107.71910095]
[225.22875977 109.42554474]
[238.32096863 93.31550598]
[258.36495972 88.48075867]
[277.10528564 96.73760986]
[286.92913818 114.54610443]
[301.90988159 115.30583954]
[316.89065552 116.06558228]
[331.06500244 109.03717804]
[343.38403320 117.40917206]
[358.36477661 118.16890717]
[373.34552002 118.92864990]
[388.32629395 119.68838501]
[403.30703735 120.44812012]
[391.50970459 111.18404388]
[385.84692383 97.29401398]
[387.80441284 82.42228699]
[396.86862183 70.47069550]
[410.66134644 64.57492828]
[425.56393433 66.28182220]
[437.66638184 75.14355469]
[443.79348755 88.83510590]
[442.33767700 103.76428986]
[433.68093872 116.01420593]
[420.09619141 122.37058258]
[434.86093140 125.01688385]
[449.62567139 127.66317749]
[464.39038086 130.30947876]
[479.15512085 132.95576477]
[490.15264893 126.24699402]
[502.38314819 128.73896790]
[509.41223145 138.56500244]
[524.14227295 141.39811707]
[538.87225342 144.23123169]
[553.60229492 147.06434631]
[568.33233643 149.89746094]
[583.06231689 152.73057556]
[597.95385742 154.53137207]
[612.93457031 155.29110718]
[627.91534424 156.05084229]
[642.89605713 156.81057739]
[657.87683105 157.57031250]
[672.85760498 158.33006287]
[687.83831787 159.08979797]
[702.04644775 144.85237122]
[721.83679199 145.68098450]
[734.40985107 160.58798218]
[749.40869141 160.77798462]
[763.30572510 153.21612549]
[775.93402100 161.11402893]
[790.93280029 161.30403137]
[805.93157959 161.49404907]
[820.93035889 161.68405151]
[835.92919922 161.87406921]
[849.96160889 153.38743591]
[864.19500732 161.53251648]
[863.98730469 177.93034363]
[849.55212402 185.71224976]
[835.73919678 176.87286377]
[820.74035645 176.68284607]
[805.74157715 176.49284363]
[790.74279785 176.30282593]
[775.74395752 176.11282349]
[762.91973877 183.68827820]
[749.21868896 175.77677917]
[734.21984863 175.58677673]
[729.09564209 184.43324280]
[720.70330811 190.41159058]
[710.50976562 192.39483643]
[700.33135986 189.96165466]
[692.00958252 183.48370361]
[687.07861328 174.07054138]
[672.09783936 173.31080627]
[657.11706543 172.55107117]
[642.13635254 171.79132080]
[627.15557861 171.03158569]
[612.17486572 170.27185059]
[597.19409180 169.51211548]
[609.29235840 178.37960815]
[615.95440674 191.81898499]
[615.68640137 206.81658936]
[608.54833984 220.00933838]
[596.14099121 228.43885803]
[581.24652100 230.21492004]
[567.20489502 224.93925476]
[557.16479492 213.79487610]
[553.37774658 199.28080750]
[556.69281006 184.65171814]
[566.36669922 173.18806458]
[580.22918701 167.46058655]
[565.49920654 164.62747192]
[550.76916504 161.79435730]
[536.03918457 158.96124268]
[521.30914307 156.12812805]
[506.57910156 153.29501343]
[490.31738281 159.91954041]
[476.50881958 147.72048950]
[461.74407959 145.07420349]
[446.97937012 142.42790222]
[432.21463013 139.78160095]
[417.44992065 137.13531494]
[402.54730225 135.42886353]
[387.56652832 134.66912842]
[372.58578491 133.90939331]
[357.60504150 133.14965820]
[342.62429810 132.38992310]
[329.52148438 139.47267151]
[316.13088989 131.04632568]
[301.15014648 130.28659058]
[286.16940308 129.52685547]
[282.15603638 138.23991394]
[275.70080566 145.37577820]
[267.38150024 150.26940918]
[257.95077515 152.45771790]
[248.26783752 151.72322083]
[239.22036743 148.11558533]
[231.64308167 141.94866943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[4 129]
[6 128]
[7 127]
[8 126]
[10 125]
[11 124]
[12 95]
[13 94]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[21 86]
[22 85]
[24 84]
[25 83]
[35 45]
[36 44]
[37 43]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
[56 74]
[57 68]
[58 67]
[59 66]
[98 122]
[99 121]
[102 118]
[103 117]
[104 116]
[105 115]
[107 113]
[108 112]
[136 240]
[137 239]
[138 238]
[140 236]
[141 235]
[142 234]
[143 233]
[144 232]
[155 231]
[156 230]
[157 229]
[158 228]
[159 227]
[162 225]
[163 224]
[164 223]
[165 222]
[166 221]
[167 220]
[168 208]
[169 207]
[170 206]
[171 205]
[172 204]
[173 203]
[174 202]
[177 196]
[178 195]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
