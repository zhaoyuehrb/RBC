%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OLFML2A)
} def

/sequence { (\
GCAGGCGCGGGGCGCGGGGCAGGCAGAGCGGGCGAAGGCGCGGAGCUCGCAGUGCAGCCCGCGCUUCCCAGCGUCCGUGCCCGGCCGCCUGUGCCUACCGUGCCCGUGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 92 0.008428101 ubox
1 107 0.005935784 ubox
1 110 0.014974360 ubox
1 112 0.025283727 ubox
2 91 0.008752975 ubox
2 106 0.006153071 ubox
2 109 0.014923650 ubox
2 111 0.025277339 ubox
3 90 0.008784179 ubox
3 96 0.017428220 ubox
4 89 0.008796684 ubox
4 95 0.018304658 ubox
4 104 0.007462902 ubox
4 113 0.990542482 ubox
5 88 0.008796809 ubox
5 94 0.018308948 ubox
5 103 0.007500224 ubox
5 110 0.023731143 ubox
5 112 0.999075611 ubox
6 87 0.008794722 ubox
6 93 0.018308628 ubox
6 102 0.007523347 ubox
6 108 0.028714549 ubox
6 109 0.021231614 ubox
6 111 0.999093509 ubox
7 85 0.006205767 ubox
7 86 0.006231032 ubox
7 92 0.018301066 ubox
7 101 0.007521017 ubox
7 107 0.033527272 ubox
7 110 0.998780192 ubox
8 84 0.008772480 ubox
8 91 0.018299875 ubox
8 100 0.007523818 ubox
8 106 0.038483135 ubox
8 108 0.248074620 ubox
8 109 0.965388403 ubox
9 90 0.017634636 ubox
9 99 0.007516483 ubox
9 105 0.049057410 ubox
9 107 0.310993605 ubox
10 82 0.008790750 ubox
10 89 0.016999041 ubox
10 90 0.004768180 ubox
10 98 0.007255886 ubox
10 104 0.040110415 ubox
10 105 0.994990557 ubox
11 81 0.008795488 ubox
11 88 0.016322051 ubox
11 89 0.006785665 ubox
11 95 0.007480554 ubox
11 103 0.028428223 ubox
11 104 0.998001187 ubox
11 105 0.043416049 ubox
12 80 0.008796169 ubox
12 88 0.008277694 ubox
12 94 0.007519885 ubox
12 103 0.998507817 ubox
12 104 0.041096003 ubox
13 79 0.008796610 ubox
13 87 0.009536328 ubox
13 93 0.007522797 ubox
13 102 0.998980360 ubox
14 78 0.008793323 ubox
14 85 0.016997396 ubox
14 86 0.006762041 ubox
14 92 0.007519225 ubox
14 101 0.998599831 ubox
14 103 0.038684509 ubox
15 77 0.008796321 ubox
15 84 0.018278895 ubox
15 91 0.007516784 ubox
15 100 0.998928211 ubox
15 102 0.038711703 ubox
16 76 0.008754095 ubox
16 89 0.004813367 ubox
16 90 0.005405504 ubox
16 99 0.993800077 ubox
16 101 0.038752468 ubox
17 75 0.008596451 ubox
17 82 0.018293755 ubox
17 88 0.004878891 ubox
17 89 0.004954856 ubox
17 96 0.149466213 ubox
17 98 0.976779761 ubox
17 99 0.085313962 ubox
18 74 0.007656014 ubox
18 81 0.018305574 ubox
18 86 0.005767079 ubox
18 88 0.003628488 ubox
18 95 0.605804006 ubox
18 96 0.038980277 ubox
18 98 0.119990751 ubox
18 99 0.061554086 ubox
19 72 0.008369996 ubox
19 80 0.018307814 ubox
19 85 0.006387461 ubox
19 88 0.003567808 ubox
19 94 0.608980638 ubox
19 95 0.037410728 ubox
19 98 0.066114391 ubox
20 71 0.008369124 ubox
20 79 0.018307102 ubox
20 84 0.006390923 ubox
20 87 0.004062359 ubox
20 93 0.607990894 ubox
21 78 0.017265062 ubox
21 90 0.004096737 ubox
21 92 0.348722879 ubox
21 96 0.741457651 ubox
22 68 0.006257743 ubox
22 69 0.005148874 ubox
22 75 0.003390955 ubox
22 76 0.016076350 ubox
22 81 0.006336704 ubox
22 86 0.004703037 ubox
22 89 0.005063092 ubox
22 90 0.006267160 ubox
22 95 0.784604462 ubox
23 67 0.006323891 ubox
23 68 0.005070606 ubox
23 74 0.003515844 ubox
23 75 0.016049166 ubox
23 80 0.006357613 ubox
23 85 0.004706464 ubox
23 88 0.004917530 ubox
23 89 0.006860020 ubox
23 92 0.491890257 ubox
23 94 0.784695732 ubox
24 73 0.006030802 ubox
24 77 0.003549684 ubox
24 79 0.006373575 ubox
24 84 0.004704839 ubox
24 87 0.004781503 ubox
24 91 0.618089765 ubox
24 93 0.784148865 ubox
25 65 0.007551606 ubox
25 78 0.004283390 ubox
25 90 0.622099105 ubox
25 92 0.780085764 ubox
26 64 0.007754072 ubox
26 75 0.005822974 ubox
26 89 0.625114001 ubox
27 74 0.005794544 ubox
27 90 0.763711445 ubox
28 62 0.008126146 ubox
28 72 0.018258645 ubox
28 78 0.007098705 ubox
28 88 0.835930655 ubox
28 89 0.547295872 ubox
28 92 0.022913207 ubox
29 61 0.008141519 ubox
29 71 0.018219426 ubox
29 77 0.008069555 ubox
29 83 0.003413663 ubox
29 87 0.993543854 ubox
29 91 0.028402854 ubox
30 60 0.008143750 ubox
30 69 0.011943854 ubox
30 76 0.008090123 ubox
30 82 0.003682326 ubox
30 86 0.993130844 ubox
30 90 0.028429579 ubox
31 59 0.008144416 ubox
31 68 0.011978773 ubox
31 69 0.015000280 ubox
31 75 0.008090427 ubox
31 81 0.003684981 ubox
31 85 0.992480948 ubox
31 86 0.110956513 ubox
31 89 0.028521178 ubox
32 58 0.008144404 ubox
32 67 0.011911503 ubox
32 68 0.015061370 ubox
32 74 0.008087959 ubox
32 80 0.003685439 ubox
32 85 0.115735238 ubox
32 88 0.028538186 ubox
33 57 0.008141269 ubox
33 73 0.008091435 ubox
33 79 0.003682178 ubox
33 83 0.991661383 ubox
33 84 0.118807961 ubox
33 87 0.028537301 ubox
34 67 0.015265489 ubox
34 72 0.007936090 ubox
34 82 0.970241352 ubox
34 86 0.028354988 ubox
35 66 0.013842425 ubox
36 65 0.012080593 ubox
36 66 0.016530163 ubox
37 64 0.008562020 ubox
37 65 0.019622772 ubox
37 81 0.994578507 ubox
37 82 0.011420501 ubox
38 53 0.007614261 ubox
38 64 0.021692317 ubox
38 80 0.999647019 ubox
38 81 0.008380921 ubox
39 52 0.007634233 ubox
39 63 0.023357202 ubox
39 79 0.999660822 ubox
40 50 0.008010616 ubox
40 62 0.023398441 ubox
40 78 0.999293018 ubox
41 49 0.008035455 ubox
41 61 0.023401030 ubox
41 77 0.999664817 ubox
42 48 0.008007299 ubox
42 60 0.023708117 ubox
42 75 0.006988089 ubox
42 76 0.999636554 ubox
43 47 0.005187473 ubox
43 59 0.023740028 ubox
43 74 0.009629682 ubox
43 75 0.999561929 ubox
44 74 0.973815901 ubox
45 55 0.008613835 ubox
45 58 0.046321421 ubox
45 62 0.003964225 ubox
45 72 0.982648425 ubox
45 74 0.010288747 ubox
46 54 0.008620728 ubox
46 57 0.046402233 ubox
46 61 0.004085567 ubox
46 71 0.983915797 ubox
46 73 0.017027216 ubox
47 56 0.046102974 ubox
47 70 0.953853673 ubox
48 54 0.011734670 ubox
48 63 0.016050780 ubox
48 73 0.167071686 ubox
49 53 0.007250900 ubox
49 55 0.043756829 ubox
49 58 0.007629529 ubox
49 62 0.016086137 ubox
49 64 0.013805486 ubox
49 72 0.168289604 ubox
50 54 0.043449811 ubox
50 57 0.007642950 ubox
50 61 0.016071495 ubox
50 63 0.013771680 ubox
50 71 0.168261628 ubox
51 65 0.965391737 ubox
51 66 0.077832120 ubox
52 58 0.008379782 ubox
52 62 0.014463593 ubox
52 64 0.998144007 ubox
52 65 0.005262598 ubox
53 57 0.007852561 ubox
53 61 0.014463287 ubox
53 63 0.997879462 ubox
53 70 0.007314463 ubox
54 60 0.014296053 ubox
54 62 0.998274716 ubox
54 64 0.012321881 ubox
54 69 0.007995582 ubox
55 61 0.997661329 ubox
55 63 0.012322799 ubox
56 65 0.018651817 ubox
57 64 0.019293828 ubox
58 63 0.019242991 ubox
60 73 0.021949662 ubox
61 72 0.022452333 ubox
61 74 0.026800562 ubox
62 71 0.022452090 ubox
62 73 0.034807642 ubox
63 72 0.035350459 ubox
64 71 0.035340115 ubox
65 70 0.032292899 ubox
71 80 0.009316068 ubox
71 88 0.005211737 ubox
72 79 0.009332696 ubox
72 87 0.005227051 ubox
73 78 0.006046397 ubox
73 86 0.005248885 ubox
75 84 0.005752480 ubox
76 83 0.005776383 ubox
77 82 0.005604094 ubox
100 112 0.020054695 ubox
101 111 0.020081235 ubox
102 110 0.020133639 ubox
103 109 0.020133856 ubox
104 108 0.019987443 ubox
4 113 0.9500000 lbox
5 112 0.9500000 lbox
6 111 0.9500000 lbox
7 110 0.9500000 lbox
8 109 0.9500000 lbox
10 105 0.9500000 lbox
11 104 0.9500000 lbox
12 103 0.9500000 lbox
13 102 0.9500000 lbox
14 101 0.9500000 lbox
15 100 0.9500000 lbox
16 99 0.9500000 lbox
17 98 0.9500000 lbox
21 96 0.9500000 lbox
22 95 0.9500000 lbox
23 94 0.9500000 lbox
24 93 0.9500000 lbox
25 92 0.9500000 lbox
27 90 0.9500000 lbox
28 89 0.9500000 lbox
29 87 0.9500000 lbox
30 86 0.9500000 lbox
31 85 0.9500000 lbox
33 83 0.9500000 lbox
34 82 0.9500000 lbox
37 81 0.9500000 lbox
38 80 0.9500000 lbox
39 79 0.9500000 lbox
40 78 0.9500000 lbox
41 77 0.9500000 lbox
42 76 0.9500000 lbox
43 75 0.9500000 lbox
44 74 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
47 70 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
55 61 0.9500000 lbox
showpage
end
%%EOF
