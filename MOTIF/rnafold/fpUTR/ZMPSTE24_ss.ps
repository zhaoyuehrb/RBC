%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUCCUGUAGAAACUAGGAGGGACUAGGGAGAGUCUGCAAGGGGAAGAGUGUGUCUGUGACACUGCCAGCAGCGCGCAGAGGGAGGGAUGGGGGCGGGUAUCGGCGUAGGGGCCCUCGGAAAGAACGGAUAUUGCUGUGACACCGCGGGGACGCUCUGAAGGGACGAGUGUCGGUGUGGCACCGGUGCACGCUGAAGGAGCCGGCGGAACCGGGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[22.64078522 168.29421997]
[12.29887295 179.15907288]
[1.95696008 190.02391052]
[-8.38495255 200.88876343]
[-18.72686386 211.75360107]
[-29.06877708 222.61843872]
[-39.41069031 233.48329163]
[-49.75260162 244.34812927]
[-60.09451294 255.21298218]
[-70.20454407 266.29391479]
[-80.07817078 277.58602905]
[-89.95179749 288.87811279]
[-99.82542419 300.17022705]
[-109.69905090 311.46231079]
[-106.94760132 332.31771851]
[-120.30809021 348.18316650]
[-140.73904419 348.99722290]
[-149.96101379 360.82751465]
[-159.18296814 372.65777588]
[-168.40493774 384.48806763]
[-166.21321106 400.13961792]
[-175.79731750 412.70626831]
[-191.47119141 414.73239136]
[-203.93579102 405.01596069]
[-205.79609680 389.32153320]
[-195.94842529 376.96035767]
[-180.23521423 375.26608276]
[-171.01324463 363.43582153]
[-161.79127502 351.60552979]
[-152.56932068 339.77526855]
[-156.51330566 331.31405640]
[-157.11315918 321.94009399]
[-154.24470520 312.93493652]
[-148.26083374 305.54498291]
[-139.94859314 300.80914307]
[-130.42587280 299.41271973]
[-120.99114990 301.58868408]
[-111.11752319 290.29660034]
[-101.24389648 279.00448608]
[-91.37026978 267.71240234]
[-81.49664307 256.42028809]
[-81.36296082 252.90512085]
[-79.52542877 249.27920532]
[-75.95006561 246.34019470]
[-70.95935822 244.87106323]
[-60.61744690 234.00622559]
[-50.27553558 223.14137268]
[-39.93362045 212.27653503]
[-29.59170914 201.41168213]
[-19.24979782 190.54684448]
[-8.90788460 179.68200684]
[1.43402803 168.81715393]
[11.77594090 157.95231628]
[6.70083666 143.83695984]
[-8.19174671 142.04504395]
[-23.08433151 140.25312805]
[-37.97691345 138.46121216]
[-52.86949921 136.66929626]
[-69.31750488 140.78018188]
[-77.82099915 126.11298370]
[-66.08099365 113.88152313]
[-51.07758713 121.77671814]
[-36.18500137 123.56863403]
[-21.29241753 125.36054230]
[-6.39983463 127.15245819]
[8.49274921 128.94436646]
[28.45464897 116.27885437]
[48.03889465 122.74935150]
[60.06138992 113.77942657]
[72.08388519 104.80949402]
[84.10637665 95.83956909]
[89.87102509 81.99150085]
[87.76483154 67.14010620]
[85.65863037 52.28871155]
[83.55243683 37.43731689]
[81.44624329 22.58592224]
[79.34004211 7.73452663]
[64.31797028 6.88062572]
[49.75581741 3.11351466]
[36.21279144 -3.42020917]
[24.20859146 -12.46774387]
[14.20345116 -23.67986298]
[6.58050966 -36.62439728]
[1.63113022 -50.80289078]
[-0.45623255 -65.66979218]
[0.39679158 -80.65345001]
[4.15554762 -95.17810059]
[10.67375946 -108.68597412]
[19.69922256 -120.65872192]
[30.88355637 -130.63732910]
[43.79566193 -138.23965454]
[57.93832779 -143.17515564]
[55.83213425 -158.02655029]
[53.72593689 -172.87794495]
[51.61973953 -187.72933960]
[49.51354599 -202.58073425]
[47.40734863 -217.43212891]
[45.30115509 -232.28352356]
[31.75259209 -239.61445618]
[25.19525909 -253.35690308]
[27.95469666 -268.15048218]
[38.76663971 -278.36026001]
[36.66044617 -293.21166992]
[34.55424881 -308.06304932]
[24.02129364 -320.63241577]
[29.89363861 -335.94409180]
[46.13032150 -338.24676514]
[56.02843094 -325.17160034]
[49.40564346 -310.16925049]
[51.51184082 -295.31784058]
[53.61803436 -280.46646118]
[66.84241486 -273.66543579]
[73.60630798 -260.22247314]
[71.12854767 -245.19868469]
[60.15254974 -234.38972473]
[62.25874329 -219.53833008]
[64.36493683 -204.68693542]
[66.47113800 -189.83554077]
[68.57733154 -174.98413086]
[70.68352509 -160.13273621]
[72.78972626 -145.28134155]
[87.74700928 -144.47274780]
[102.26374817 -140.76033020]
[115.78155518 -134.28492737]
[127.78008270 -125.29376221]
[137.79705811 -114.13088226]
[145.44609070 -101.22406006]
[150.43159485 -87.06840515]
[152.56018066 -72.20735168]
[151.74821472 -57.21179581]
[148.02500916 -42.65817642]
[141.53184509 -29.10629845]
[132.51660156 -17.07782745]
[121.32426453 -7.03618336]
[108.38374329 0.63130313]
[94.19143677 5.62833071]
[96.29763794 20.47972679]
[98.40383148 35.33111954]
[100.51002502 50.18251801]
[102.61622620 65.03391266]
[104.72241974 79.88530731]
[109.63642120 65.71305847]
[124.03584290 61.51108170]
[135.80088806 70.81611633]
[135.02908325 85.79624939]
[122.36994934 93.84291077]
[137.30709839 92.47126007]
[152.24426270 91.09960938]
[167.18141174 89.72796631]
[182.11857605 88.35631561]
[192.20881653 76.48936462]
[207.37675476 75.31110382]
[218.62789917 85.00373840]
[233.56506348 83.63209534]
[248.50221252 82.26044464]
[263.43936157 80.88880157]
[278.37652588 79.51715088]
[293.31365967 78.14550781]
[308.25082397 76.77385712]
[315.27838135 63.04006577]
[328.62686157 55.30561066]
[344.03680420 56.03853226]
[356.59097290 65.00495148]
[362.28335571 79.34371948]
[359.29754639 94.47939301]
[348.58630371 105.58222198]
[333.56753540 109.10934448]
[319.03369141 103.93526459]
[309.62246704 91.71101379]
[294.68533325 93.08265686]
[279.74816895 94.45430756]
[264.81100464 95.82595062]
[249.87385559 97.19760132]
[234.93670654 98.56925201]
[219.99954224 99.94089508]
[210.70178223 111.52050018]
[195.57292175 113.12432861]
[183.49021912 103.29347229]
[168.55305481 104.66512299]
[153.61590576 106.03676605]
[138.67875671 107.40841675]
[123.74160004 108.78005981]
[120.66535950 115.62014771]
[114.51287079 129.30030823]
[111.43663025 136.14039612]
[120.32164764 148.22576904]
[129.20666504 160.31114197]
[138.09169006 172.39653015]
[146.97671509 184.48190308]
[160.43177795 184.96649170]
[170.99850464 192.99250793]
[174.95727539 205.45349121]
[171.07717896 217.73532104]
[179.79106140 229.94467163]
[188.50495911 242.15400696]
[197.21884155 254.36335754]
[205.93272400 266.57269287]
[221.53555298 267.61489868]
[232.78224182 278.47976685]
[234.36247253 294.03732300]
[225.53009033 306.94171143]
[210.45549011 311.09988403]
[196.25643921 304.54849243]
[189.63726807 290.38088989]
[193.72338867 275.28659058]
[185.00949097 263.07723999]
[176.29560852 250.86790466]
[167.58171082 238.65855408]
[158.86782837 226.44920349]
[142.17304993 224.38624573]
[131.93766785 210.61341858]
[134.89134216 193.36692810]
[126.00631714 181.28155518]
[117.12129211 169.19616699]
[108.23626709 157.11079407]
[99.35124969 145.02542114]
[90.01029205 125.89287567]
[93.07630920 107.86206055]
[81.05381012 116.83198547]
[69.03131866 125.80191803]
[57.00882721 134.77185059]
[57.72432327 152.77584839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 53]
[2 52]
[3 51]
[4 50]
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[10 41]
[11 40]
[12 39]
[13 38]
[14 37]
[17 30]
[18 29]
[19 28]
[20 27]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[68 221]
[69 220]
[70 219]
[71 218]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[102 111]
[103 110]
[104 109]
[146 182]
[147 181]
[148 180]
[149 179]
[150 178]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[158 170]
[159 169]
[185 216]
[186 215]
[187 214]
[188 213]
[189 212]
[193 209]
[194 208]
[195 207]
[196 206]
[197 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
