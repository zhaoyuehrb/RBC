%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DTX3L)
} def

/sequence { (\
GAAACUUUGCGCCCAGUCCGCAGGGCGGGCCGCGCCUUUACCGCCCAGCUGCCUCCCGGAGCCCCCGCGCCCUCCCGACGCGCAGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
5 85 0.003967941 ubox
5 87 0.992705683 ubox
6 86 0.998569508 ubox
6 87 0.004351180 ubox
7 85 0.998521069 ubox
7 86 0.004846759 ubox
8 84 0.999009238 ubox
9 83 0.999983728 ubox
10 82 0.999975413 ubox
11 26 0.004659802 ubox
11 30 0.003418691 ubox
11 81 0.999874524 ubox
12 25 0.004820881 ubox
12 29 0.003504168 ubox
12 80 0.998116985 ubox
13 24 0.005371527 ubox
13 28 0.003561580 ubox
13 59 0.005079457 ubox
14 23 0.005451602 ubox
14 27 0.003572420 ubox
14 51 0.016325623 ubox
14 58 0.005094043 ubox
15 50 0.016448493 ubox
15 54 0.020748188 ubox
15 73 0.033735751 ubox
16 26 0.009407528 ubox
16 30 0.006346618 ubox
16 49 0.015358106 ubox
16 52 0.025726150 ubox
16 53 0.021964777 ubox
16 62 0.005505447 ubox
16 72 0.034931101 ubox
16 79 0.985434704 ubox
17 25 0.009298514 ubox
17 29 0.006357268 ubox
17 48 0.014795611 ubox
17 51 0.025526686 ubox
17 60 0.023305057 ubox
17 78 0.986709672 ubox
18 24 0.009332075 ubox
18 28 0.006387576 ubox
18 59 0.024995291 ubox
18 77 0.964697545 ubox
19 23 0.009314008 ubox
19 27 0.006479466 ubox
19 51 0.027840518 ubox
19 58 0.025124815 ubox
19 69 0.090053567 ubox
19 77 0.203581764 ubox
19 80 0.044861001 ubox
20 26 0.006600452 ubox
20 49 0.156261700 ubox
20 50 0.006437281 ubox
20 52 0.074810262 ubox
20 57 0.024921884 ubox
20 68 0.090307253 ubox
20 70 0.009519825 ubox
20 76 0.280006401 ubox
20 79 0.110059148 ubox
21 25 0.006552837 ubox
21 48 0.156395338 ubox
21 51 0.074988732 ubox
21 67 0.090207953 ubox
21 69 0.009530297 ubox
22 38 0.006433600 ubox
22 50 0.074182018 ubox
22 73 0.797466545 ubox
23 37 0.007523848 ubox
23 46 0.191887766 ubox
23 49 0.036957167 ubox
23 54 0.025370977 ubox
23 57 0.024085432 ubox
23 64 0.023761086 ubox
23 65 0.027637321 ubox
23 66 0.011920834 ubox
23 71 0.045878629 ubox
23 72 0.822248409 ubox
23 73 0.005398270 ubox
23 75 0.037407031 ubox
23 76 0.527251765 ubox
24 36 0.007791554 ubox
24 45 0.195609077 ubox
24 46 0.003401834 ubox
24 53 0.026004237 ubox
24 56 0.024135957 ubox
24 57 0.005434090 ubox
24 63 0.024246336 ubox
24 64 0.027138406 ubox
24 65 0.011832872 ubox
24 66 0.003216359 ubox
24 70 0.048070998 ubox
24 71 0.822198643 ubox
24 72 0.004900016 ubox
24 74 0.037511423 ubox
24 75 0.528041406 ubox
24 76 0.006211553 ubox
25 35 0.007870164 ubox
25 44 0.195653656 ubox
25 49 0.003421352 ubox
25 52 0.026023788 ubox
25 55 0.024117587 ubox
25 56 0.005487076 ubox
25 62 0.024679824 ubox
25 63 0.026476443 ubox
25 64 0.011618890 ubox
25 65 0.003248494 ubox
25 68 0.068425256 ubox
25 70 0.820777652 ubox
25 71 0.003480040 ubox
25 73 0.036875659 ubox
25 74 0.527838468 ubox
25 75 0.006116401 ubox
26 34 0.007907704 ubox
26 43 0.195671914 ubox
26 48 0.003635682 ubox
26 51 0.026020339 ubox
26 58 0.019577340 ubox
26 61 0.024435906 ubox
26 67 0.081729786 ubox
26 69 0.819278901 ubox
27 33 0.007962400 ubox
27 36 0.016128303 ubox
27 37 0.083710710 ubox
27 38 0.004131897 ubox
27 42 0.194472433 ubox
27 46 0.212348554 ubox
27 50 0.023577603 ubox
27 53 0.008779776 ubox
27 54 0.157417058 ubox
27 55 0.042813662 ubox
27 56 0.010873422 ubox
27 57 0.040496373 ubox
27 64 0.096010323 ubox
27 65 0.065875782 ubox
27 66 0.129145227 ubox
27 68 0.749611277 ubox
27 72 0.528857961 ubox
27 73 0.020455273 ubox
28 35 0.016198337 ubox
28 36 0.131588640 ubox
28 37 0.003260630 ubox
28 41 0.189539428 ubox
28 42 0.008299305 ubox
28 45 0.221270709 ubox
28 46 0.078496598 ubox
28 49 0.021871531 ubox
28 50 0.061089067 ubox
28 52 0.008017284 ubox
28 53 0.407392235 ubox
28 54 0.008180712 ubox
28 55 0.009271168 ubox
28 56 0.047506578 ubox
28 57 0.005466368 ubox
28 63 0.106787181 ubox
28 64 0.073012472 ubox
28 65 0.137992032 ubox
28 66 0.630357265 ubox
28 71 0.529065409 ubox
28 72 0.020760362 ubox
29 35 0.138690423 ubox
29 36 0.007827302 ubox
29 38 0.005273925 ubox
29 41 0.008787697 ubox
29 44 0.221166277 ubox
29 45 0.078178962 ubox
29 49 0.065417438 ubox
29 52 0.408372342 ubox
29 53 0.007132098 ubox
29 54 0.004570376 ubox
29 55 0.047350304 ubox
29 56 0.005399686 ubox
29 62 0.106922223 ubox
29 63 0.072429671 ubox
29 64 0.137941796 ubox
29 65 0.629642955 ubox
29 68 0.007513783 ubox
29 70 0.529020202 ubox
29 71 0.020708050 ubox
30 34 0.137748356 ubox
30 43 0.212002028 ubox
30 48 0.066169826 ubox
30 51 0.408028889 ubox
30 59 0.015437046 ubox
30 61 0.106851189 ubox
30 67 0.008187998 ubox
30 69 0.388264044 ubox
31 43 0.066002079 ubox
31 51 0.014055326 ubox
31 58 0.016569547 ubox
31 67 0.121785545 ubox
31 69 0.359560649 ubox
32 42 0.087979677 ubox
32 44 0.282859765 ubox
32 49 0.406316165 ubox
32 50 0.011162781 ubox
32 52 0.051268923 ubox
32 57 0.013625206 ubox
32 62 0.602966380 ubox
32 66 0.098698556 ubox
32 68 0.508141045 ubox
32 70 0.008944450 ubox
33 43 0.284040187 ubox
33 48 0.406378634 ubox
33 51 0.051460152 ubox
33 58 0.091011190 ubox
33 61 0.602243905 ubox
33 67 0.508159079 ubox
33 69 0.009971172 ubox
34 42 0.279635404 ubox
34 44 0.319358848 ubox
34 49 0.051885560 ubox
34 50 0.033261401 ubox
34 52 0.012207415 ubox
34 57 0.089874615 ubox
34 62 0.094126512 ubox
34 66 0.481894309 ubox
34 68 0.013998133 ubox
35 43 0.321045015 ubox
35 48 0.051836404 ubox
35 51 0.012455258 ubox
35 59 0.594625530 ubox
35 61 0.094296146 ubox
35 67 0.013895404 ubox
36 48 0.033010485 ubox
36 58 0.594551599 ubox
36 59 0.117747083 ubox
36 61 0.066290794 ubox
37 47 0.033280208 ubox
37 48 0.007192057 ubox
37 58 0.114039722 ubox
37 59 0.010623347 ubox
37 60 0.068399033 ubox
37 61 0.021259226 ubox
38 47 0.017845314 ubox
38 48 0.005054362 ubox
38 58 0.010744099 ubox
38 59 0.052299087 ubox
38 60 0.020626965 ubox
38 61 0.103767556 ubox
39 47 0.012992573 ubox
39 51 0.015733684 ubox
39 58 0.044951499 ubox
39 59 0.010697706 ubox
39 60 0.115136327 ubox
40 50 0.014877077 ubox
41 59 0.367930432 ubox
42 51 0.130516050 ubox
42 58 0.368643694 ubox
42 67 0.044895330 ubox
42 69 0.017585267 ubox
43 49 0.191100762 ubox
43 50 0.071114414 ubox
43 52 0.566503898 ubox
43 57 0.354224469 ubox
43 62 0.079272189 ubox
43 66 0.047968291 ubox
43 68 0.082073391 ubox
44 48 0.191279097 ubox
44 51 0.566650969 ubox
44 59 0.025215990 ubox
44 61 0.079369207 ubox
44 67 0.082441810 ubox
45 58 0.025234883 ubox
45 59 0.083687930 ubox
46 58 0.083669357 ubox
47 54 0.250938056 ubox
48 53 0.257348611 ubox
48 62 0.501062486 ubox
48 68 0.018767435 ubox
48 70 0.004840186 ubox
49 59 0.034791071 ubox
49 61 0.502146999 ubox
49 67 0.018669948 ubox
49 69 0.004758891 ubox
50 58 0.035136845 ubox
50 60 0.500331560 ubox
50 69 0.009685889 ubox
51 57 0.041195605 ubox
51 62 0.043184997 ubox
51 66 0.004194699 ubox
51 68 0.019373572 ubox
51 70 0.023959241 ubox
51 76 0.007641997 ubox
51 79 0.004917350 ubox
51 81 0.003951951 ubox
52 59 0.503150047 ubox
52 61 0.039260350 ubox
52 67 0.018790788 ubox
52 69 0.023999797 ubox
52 80 0.004029536 ubox
53 58 0.502879968 ubox
53 59 0.032045435 ubox
53 61 0.038669190 ubox
54 58 0.029015474 ubox
54 60 0.044390566 ubox
54 78 0.019017782 ubox
55 59 0.044334246 ubox
55 77 0.020617620 ubox
57 67 0.393567674 ubox
57 77 0.031878530 ubox
58 64 0.033896786 ubox
58 65 0.097059587 ubox
58 66 0.408573548 ubox
58 68 0.004281411 ubox
58 71 0.092123152 ubox
58 72 0.095591972 ubox
58 73 0.013530172 ubox
58 74 0.004587069 ubox
58 75 0.097384279 ubox
58 76 0.030241863 ubox
59 63 0.033471974 ubox
59 64 0.099019939 ubox
59 65 0.407525134 ubox
59 70 0.092332187 ubox
59 71 0.095545990 ubox
59 72 0.015084498 ubox
59 74 0.098898746 ubox
59 75 0.025518746 ubox
60 73 0.098795238 ubox
61 68 0.120294370 ubox
61 70 0.104805130 ubox
61 72 0.081121041 ubox
62 67 0.120836450 ubox
62 69 0.108013044 ubox
66 77 0.010972277 ubox
67 76 0.011610740 ubox
67 79 0.009438566 ubox
67 81 0.004619228 ubox
68 77 0.018504571 ubox
68 80 0.004653974 ubox
69 76 0.019742718 ubox
69 79 0.005149333 ubox
5 87 0.9500000 lbox
6 86 0.9500000 lbox
7 85 0.9500000 lbox
8 84 0.9500000 lbox
9 83 0.9500000 lbox
10 82 0.9500000 lbox
11 81 0.9500000 lbox
12 80 0.9500000 lbox
16 79 0.9500000 lbox
17 78 0.9500000 lbox
18 77 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
24 71 0.9500000 lbox
25 70 0.9500000 lbox
26 69 0.9500000 lbox
27 68 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
32 62 0.9500000 lbox
33 61 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
