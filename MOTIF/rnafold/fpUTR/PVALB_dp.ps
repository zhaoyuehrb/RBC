%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PVALB)
} def

/sequence { (\
CCAGCCUUUCAGUGCAGGCUCCAGCCCUCCACCCCCACCCGAGUUGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.064489575 ubox
1 50 0.179251099 ubox
2 14 0.004923813 ubox
2 17 0.065371277 ubox
2 46 0.078361499 ubox
2 49 0.183697448 ubox
3 9 0.005115692 ubox
3 13 0.004846576 ubox
3 20 0.884517610 ubox
3 45 0.079103911 ubox
4 8 0.004175829 ubox
4 13 0.017810510 ubox
4 15 0.091908868 ubox
4 19 0.945788051 ubox
4 25 0.004044841 ubox
4 44 0.079040038 ubox
4 47 0.171566442 ubox
5 12 0.021505538 ubox
5 14 0.091999530 ubox
5 18 0.946135423 ubox
5 24 0.003889041 ubox
5 43 0.073693326 ubox
5 46 0.171287551 ubox
5 50 0.062976614 ubox
6 12 0.079772018 ubox
6 17 0.946075573 ubox
6 18 0.003928883 ubox
6 43 0.072101526 ubox
6 49 0.064168976 ubox
6 50 0.019598110 ubox
7 11 0.072048651 ubox
7 16 0.932525886 ubox
7 17 0.005260470 ubox
7 42 0.077198697 ubox
7 43 0.035320844 ubox
7 48 0.050397902 ubox
7 49 0.019930033 ubox
7 50 0.003779667 ubox
8 16 0.028891540 ubox
8 41 0.073482311 ubox
8 42 0.042718391 ubox
8 43 0.134294904 ubox
8 48 0.013966292 ubox
8 49 0.006338227 ubox
8 50 0.004933291 ubox
9 16 0.012847805 ubox
9 41 0.043210174 ubox
9 42 0.151294605 ubox
9 48 0.004125573 ubox
9 49 0.007473874 ubox
9 50 0.023477378 ubox
10 17 0.003321049 ubox
10 41 0.151733141 ubox
10 46 0.025310905 ubox
10 49 0.037349291 ubox
11 20 0.012312817 ubox
11 28 0.008615425 ubox
11 45 0.025024577 ubox
12 19 0.013102276 ubox
12 27 0.008920270 ubox
12 32 0.212277975 ubox
12 38 0.125436973 ubox
12 44 0.007586998 ubox
12 47 0.006175773 ubox
13 18 0.012952126 ubox
13 31 0.213092122 ubox
13 37 0.125633215 ubox
13 46 0.006042974 ubox
13 48 0.161223762 ubox
14 25 0.008209703 ubox
14 30 0.212915638 ubox
14 36 0.125221258 ubox
14 47 0.182307945 ubox
15 24 0.008276416 ubox
15 46 0.182258335 ubox
16 28 0.177643344 ubox
16 45 0.169556790 ubox
17 26 0.198343486 ubox
17 27 0.154564619 ubox
17 30 0.007083879 ubox
17 33 0.087725540 ubox
17 34 0.020787526 ubox
17 35 0.013963023 ubox
17 44 0.109091660 ubox
17 45 0.057603990 ubox
18 25 0.220725700 ubox
18 26 0.121183170 ubox
18 29 0.006934308 ubox
18 32 0.087266345 ubox
18 33 0.020551142 ubox
18 34 0.013888209 ubox
18 44 0.124895719 ubox
19 24 0.239862309 ubox
19 43 0.166254438 ubox
19 49 0.032736024 ubox
19 50 0.005326643 ubox
20 42 0.166363940 ubox
20 48 0.035242158 ubox
20 49 0.007881119 ubox
20 50 0.016678469 ubox
21 41 0.166074423 ubox
21 49 0.065043885 ubox
21 50 0.801738149 ubox
22 46 0.132102598 ubox
22 49 0.818494763 ubox
23 45 0.133304610 ubox
24 44 0.127524521 ubox
24 47 0.895556366 ubox
25 43 0.116620832 ubox
25 46 0.895674662 ubox
25 50 0.034153675 ubox
26 49 0.034113387 ubox
26 50 0.158332913 ubox
27 43 0.904369706 ubox
27 49 0.161277567 ubox
27 50 0.003959740 ubox
28 42 0.909866680 ubox
28 48 0.157522196 ubox
28 49 0.003787572 ubox
29 41 0.908903348 ubox
29 49 0.003612014 ubox
29 50 0.019136020 ubox
30 46 0.155367481 ubox
30 49 0.019545534 ubox
31 44 0.075252737 ubox
31 45 0.131566953 ubox
32 43 0.101175792 ubox
32 50 0.076854529 ubox
33 49 0.078341444 ubox
33 50 0.037859629 ubox
34 49 0.038421467 ubox
34 50 0.031374991 ubox
35 49 0.031766439 ubox
35 50 0.039963042 ubox
36 46 0.083126737 ubox
36 49 0.040611202 ubox
37 44 0.079867251 ubox
37 45 0.069393101 ubox
38 43 0.090507059 ubox
38 50 0.039194749 ubox
39 49 0.038334290 ubox
39 50 0.181249741 ubox
40 46 0.022868307 ubox
40 49 0.184478283 ubox
41 45 0.014546474 ubox
3 20 0.9500000 lbox
4 19 0.9500000 lbox
5 18 0.9500000 lbox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
showpage
end
%%EOF
