%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGUCUGGCCUGCUUUUCCUCCCUGAACUGGCCCAAUGACUGGCUCCCUCACGCUGACCACUCCUCUGGGCUGGCCUCCUGCACUCGCGCUAACAGCCCAGGCUCCAGGGACAGCCUGCGUUCCUGGGCUGGCUGGGUGCAGCUCUCUUUUCAGGAGAGAAAGCUCUCUUGGAGGAGCUGGAAAGGUGCCCGACUCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[77.01727295 399.45733643]
[79.38963318 384.00073242]
[91.17630005 373.72415161]
[90.71885681 358.73110962]
[90.26141357 343.73809814]
[89.80397034 328.74508667]
[86.45652008 322.15261841]
[89.45563507 313.52029419]
[89.22688293 298.52203369]
[81.29639435 285.91424561]
[88.82234192 271.99768066]
[88.59359741 256.99942017]
[88.36485291 242.00117493]
[85.61836243 238.08963013]
[85.30258179 232.41040039]
[88.36485291 226.54368591]
[88.59359741 211.54542542]
[88.82234192 196.54716492]
[89.05109406 181.54891968]
[89.27983856 166.55065918]
[89.50859070 151.55239868]
[89.73733521 136.55413818]
[89.96608734 121.55589294]
[89.50824738 136.54890442]
[80.70513916 148.69407654]
[66.59886169 153.79437256]
[52.06416702 150.08728027]
[42.12383652 138.85385132]
[40.21297836 123.97605896]
[46.99193192 110.59526062]
[60.11807632 103.33548737]
[75.05570221 104.70565033]
[60.14109802 103.10739136]
[45.22648621 101.50913239]
[30.31187820 99.91087341]
[15.39726830 98.31262207]
[0.48265859 96.71436310]
[-14.43195057 95.11610413]
[-29.34655952 93.51784515]
[-42.75831985 104.74629974]
[-59.80588913 102.84039307]
[-69.99722290 89.46446228]
[-84.93447113 88.09383392]
[-99.38391113 94.53777313]
[-111.35093689 85.66988373]
[-126.28818512 84.29926300]
[-141.22543335 82.92863464]
[-150.06114197 85.26143646]
[-156.37942505 81.42150879]
[-171.29403687 79.82324982]
[-180.88977051 91.90322113]
[-195.50047302 96.85605621]
[-210.46395874 93.10133362]
[-221.00540161 81.83717346]
[-223.76107788 66.65791321]
[-217.85166931 52.40721893]
[-205.16284180 43.63242340]
[-189.74354553 43.13353348]
[-176.51402283 51.06974792]
[-169.69578552 64.90864563]
[-154.78117371 66.50690460]
[-139.85481262 67.99138641]
[-124.91756439 69.36201477]
[-109.98031616 70.73263550]
[-96.59928894 64.19065857]
[-83.56384277 73.15658569]
[-68.62659454 74.52721405]
[-59.96938705 64.98041534]
[-47.20344162 62.12152100]
[-34.94184875 67.21327972]
[-27.74830246 78.60324097]
[-12.83369350 80.20149231]
[2.08091617 81.79975128]
[16.99552536 83.39801025]
[31.91013527 84.99626923]
[46.82474518 86.59452820]
[61.73935318 88.19277954]
[76.65396118 89.79103851]
[64.37115479 81.18101501]
[60.71810532 66.63263702]
[67.47648621 53.24143219]
[81.35009766 47.53854752]
[95.57251740 52.30538559]
[103.20719910 65.21707153]
[100.53006744 79.97716522]
[105.68424225 65.89049530]
[110.83842468 51.80381775]
[115.99259949 37.71714020]
[121.14678192 23.63046455]
[126.30096436 9.54378891]
[131.45513916 -4.54288673]
[131.46545410 -13.68135166]
[136.79682922 -18.80407143]
[142.16522217 -32.81050873]
[141.34265137 -37.97313309]
[142.47212219 -42.48284912]
[144.97715759 -45.70482254]
[148.11277771 -47.32545853]
[154.11614990 -61.07171249]
[160.11952209 -74.81797028]
[166.12289429 -88.56422424]
[172.12626648 -102.31047821]
[178.12963867 -116.05673218]
[184.13301086 -129.80299377]
[190.13638306 -143.54924011]
[196.13975525 -157.29550171]
[187.38114929 -171.76336670]
[188.95481873 -188.43557739]
[200.04359436 -200.76197815]
[216.13128662 -204.01841736]
[221.92433167 -217.85461426]
[227.71737671 -231.69082642]
[233.51042175 -245.52703857]
[228.78254700 -260.85760498]
[237.93939209 -274.03076172]
[253.95658875 -274.94116211]
[264.54711914 -262.89044189]
[261.58685303 -247.12287903]
[247.34663391 -239.73399353]
[241.55358887 -225.89778137]
[235.76054382 -212.06156921]
[229.96749878 -198.22537231]
[237.92953491 -187.50593567]
[239.56730652 -174.14476013]
[234.34669495 -161.61979675]
[223.53298950 -153.24465942]
[209.88601685 -151.29212952]
[203.88264465 -137.54586792]
[197.87927246 -123.79961395]
[191.87590027 -110.05335999]
[185.87252808 -96.30710602]
[179.86915588 -82.56085205]
[173.86578369 -68.81459808]
[167.86241150 -55.06834030]
[161.85903931 -41.32208633]
[156.17166138 -27.44211006]
[150.80325317 -13.43567276]
[145.54182434 0.61129242]
[140.38763428 14.69796848]
[135.23345947 28.78464317]
[130.07928467 42.87131882]
[124.92510223 56.95799637]
[119.77091980 71.04467010]
[114.61673737 85.13134766]
[121.34494019 98.53773499]
[135.71963501 102.82354736]
[150.09432983 107.10935974]
[164.46902466 111.39517212]
[178.84371948 115.68098450]
[193.21841431 119.96680450]
[198.30337524 118.75334167]
[202.88601685 119.53598022]
[206.28945923 121.78829956]
[208.14425659 124.79135132]
[222.30789185 129.73010254]
[236.47152710 134.66886902]
[250.63517761 139.60763550]
[264.79879761 144.54638672]
[278.96246338 149.48515320]
[293.12609863 154.42390442]
[307.28973389 159.36267090]
[321.45336914 164.30143738]
[335.61700439 169.24018860]
[351.61697388 165.64398193]
[362.53091431 177.88400269]
[357.13146973 193.36877441]
[340.97314453 196.16888428]
[330.67825317 183.40382385]
[316.51461792 178.46507263]
[302.35095215 173.52630615]
[288.18731689 168.58755493]
[274.02368164 163.64878845]
[259.86004639 158.71002197]
[245.69641113 153.77127075]
[231.53277588 148.83250427]
[217.36914062 143.89375305]
[203.20549011 138.95498657]
[188.93260193 134.34149170]
[174.55790710 130.05567932]
[160.18321228 125.76986694]
[145.80851746 121.48405457]
[131.43382263 117.19824219]
[117.05912781 112.91242981]
[104.96434021 121.78463745]
[104.73559570 136.78289795]
[104.50684357 151.78114319]
[104.27809906 166.77940369]
[104.04934692 181.77766418]
[103.82060242 196.77590942]
[103.59185028 211.77416992]
[103.36310577 226.77243042]
[103.36310577 241.77243042]
[103.59185028 256.77069092]
[103.82060242 271.76895142]
[111.76744843 285.44952393]
[104.22514343 298.29330444]
[104.45388794 313.29156494]
[104.79699707 328.28762817]
[105.25443268 343.28063965]
[105.71187592 358.27368164]
[106.16931915 373.26669312]
[118.56056976 382.80563354]
[121.87080383 398.08883667]
[114.53704071 411.90005493]
[100.02205658 417.71804810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[6 198]
[8 197]
[9 196]
[11 194]
[12 193]
[13 192]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[23 184]
[32 78]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 71]
[42 67]
[43 66]
[45 64]
[46 63]
[47 62]
[49 61]
[50 60]
[85 144]
[86 143]
[87 142]
[88 141]
[89 140]
[90 139]
[91 138]
[93 137]
[94 136]
[98 135]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[104 129]
[105 128]
[106 127]
[110 122]
[111 121]
[112 120]
[113 119]
[145 183]
[146 182]
[147 181]
[148 180]
[149 179]
[150 178]
[154 177]
[155 176]
[156 175]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
