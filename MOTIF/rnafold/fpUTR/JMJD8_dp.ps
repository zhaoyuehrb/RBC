%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (JMJD8)
} def

/sequence { (\
GGAGGUCACUUCCGGGGUCCGUCCCGGUUCCCGGCCGUUGCCACGACGACGAAGCUGCCGGCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008627867 ubox
1 10 0.006092244 ubox
1 12 0.179537846 ubox
1 13 0.960254333 ubox
1 24 0.003240830 ubox
1 30 0.007589047 ubox
1 31 0.100286366 ubox
1 32 0.042707939 ubox
1 59 0.013094738 ubox
1 63 0.120740016 ubox
2 6 0.005610398 ubox
2 9 0.006979490 ubox
2 11 0.195208589 ubox
2 12 0.960977352 ubox
2 23 0.003276465 ubox
2 29 0.007313885 ubox
2 30 0.101309461 ubox
2 31 0.040981557 ubox
2 58 0.013044136 ubox
2 62 0.120467381 ubox
3 10 0.258925506 ubox
3 11 0.945893795 ubox
3 22 0.003207670 ubox
3 28 0.007658867 ubox
3 29 0.100846975 ubox
3 56 0.003482635 ubox
4 9 0.307560071 ubox
4 10 0.926447343 ubox
4 11 0.005824997 ubox
4 12 0.004326112 ubox
4 13 0.041719629 ubox
4 20 0.003367918 ubox
4 28 0.096591558 ubox
4 29 0.012202958 ubox
4 30 0.027780915 ubox
4 31 0.037262191 ubox
4 32 0.046939155 ubox
4 36 0.003163089 ubox
4 42 0.015696526 ubox
4 55 0.003438820 ubox
4 56 0.011063196 ubox
4 59 0.115061610 ubox
4 63 0.048427726 ubox
5 9 0.906758856 ubox
5 10 0.009511485 ubox
5 11 0.005355912 ubox
5 12 0.041733246 ubox
5 19 0.003369320 ubox
5 28 0.013876500 ubox
5 29 0.023177806 ubox
5 30 0.038087370 ubox
5 31 0.046865979 ubox
5 35 0.003295617 ubox
5 41 0.015714989 ubox
5 55 0.012095055 ubox
5 58 0.115078870 ubox
5 62 0.048447460 ubox
6 34 0.003207559 ubox
6 40 0.015363399 ubox
6 54 0.011507308 ubox
6 57 0.095030435 ubox
6 61 0.045158785 ubox
7 33 0.003213551 ubox
7 57 0.063743514 ubox
7 60 0.043865432 ubox
8 28 0.016279092 ubox
8 38 0.015900190 ubox
8 56 0.064296058 ubox
9 27 0.009738162 ubox
9 37 0.016285227 ubox
9 54 0.111565805 ubox
10 26 0.004879220 ubox
10 53 0.110880995 ubox
10 54 0.005973160 ubox
11 52 0.104719374 ubox
11 53 0.005792324 ubox
12 27 0.158514294 ubox
12 34 0.098301274 ubox
12 51 0.071999931 ubox
13 26 0.167142321 ubox
13 33 0.133234105 ubox
13 51 0.004367076 ubox
14 20 0.003313675 ubox
14 24 0.007257295 ubox
14 25 0.193003259 ubox
14 31 0.066965215 ubox
14 32 0.948054946 ubox
14 50 0.005983787 ubox
14 63 0.003474818 ubox
15 19 0.003261697 ubox
15 23 0.007338174 ubox
15 24 0.192976013 ubox
15 25 0.065621142 ubox
15 30 0.067304711 ubox
15 31 0.948980576 ubox
15 32 0.229818972 ubox
15 62 0.003229913 ubox
16 22 0.007038424 ubox
16 23 0.192685427 ubox
16 24 0.065919152 ubox
16 25 0.003720732 ubox
16 29 0.067020249 ubox
16 30 0.948791690 ubox
16 31 0.230213638 ubox
16 32 0.008297655 ubox
16 63 0.006446714 ubox
17 22 0.130622393 ubox
17 23 0.066072368 ubox
17 24 0.003751571 ubox
17 28 0.074970342 ubox
17 29 0.722593026 ubox
17 30 0.230261936 ubox
17 31 0.008269873 ubox
17 47 0.005714987 ubox
17 62 0.006460065 ubox
18 27 0.009422308 ubox
18 46 0.005714647 ubox
19 26 0.013637853 ubox
19 27 0.977965789 ubox
19 45 0.005598892 ubox
19 61 0.005779290 ubox
20 26 0.978430099 ubox
20 60 0.005814013 ubox
21 25 0.915333899 ubox
21 41 0.005368458 ubox
21 59 0.005805554 ubox
22 40 0.005333091 ubox
24 34 0.004134384 ubox
24 61 0.004414424 ubox
25 33 0.004252352 ubox
25 37 0.005606401 ubox
25 57 0.005523486 ubox
25 60 0.004678764 ubox
26 32 0.023251359 ubox
26 36 0.005917528 ubox
26 56 0.005586401 ubox
26 59 0.005323981 ubox
26 63 0.103219080 ubox
27 31 0.022925554 ubox
27 35 0.006087651 ubox
27 55 0.005597038 ubox
27 58 0.005332231 ubox
27 62 0.103396320 ubox
28 34 0.006025121 ubox
28 54 0.005545825 ubox
28 57 0.004032157 ubox
28 61 0.075884270 ubox
29 33 0.004433870 ubox
29 53 0.004973525 ubox
29 60 0.067759906 ubox
29 61 0.004856475 ubox
30 60 0.006445983 ubox
30 61 0.009625096 ubox
31 60 0.008225301 ubox
31 61 0.110704011 ubox
32 51 0.006938699 ubox
32 57 0.074395427 ubox
32 60 0.115522997 ubox
33 42 0.011393148 ubox
33 50 0.008143315 ubox
33 56 0.075305616 ubox
33 59 0.117802662 ubox
33 63 0.979914687 ubox
34 41 0.011785850 ubox
34 55 0.075815068 ubox
34 58 0.117821848 ubox
34 62 0.982398547 ubox
35 40 0.011736057 ubox
35 54 0.075575481 ubox
35 57 0.117723863 ubox
35 61 0.982430976 ubox
36 45 0.008767023 ubox
36 48 0.082429346 ubox
36 51 0.159195250 ubox
36 57 0.003330947 ubox
36 60 0.982191692 ubox
37 44 0.008868273 ubox
37 47 0.083527230 ubox
37 50 0.163071112 ubox
37 55 0.031054408 ubox
37 56 0.004058480 ubox
37 58 0.546024806 ubox
37 59 0.810336828 ubox
38 43 0.008116381 ubox
38 46 0.083623660 ubox
38 49 0.163602252 ubox
38 52 0.008724806 ubox
38 53 0.003791086 ubox
38 54 0.031056599 ubox
38 57 0.748815634 ubox
39 45 0.083342246 ubox
39 48 0.163498209 ubox
39 51 0.009261446 ubox
39 52 0.004115393 ubox
39 53 0.029817794 ubox
39 57 0.202350497 ubox
40 44 0.079432540 ubox
40 47 0.161733853 ubox
40 50 0.009555601 ubox
40 55 0.976430136 ubox
40 56 0.034198802 ubox
40 58 0.065701819 ubox
41 54 0.976939197 ubox
41 57 0.064517332 ubox
42 57 0.015399571 ubox
43 56 0.019469292 ubox
44 51 0.967039351 ubox
44 60 0.005066506 ubox
45 50 0.945093555 ubox
45 59 0.005123426 ubox
47 57 0.004985675 ubox
47 60 0.007845361 ubox
48 56 0.004649994 ubox
48 59 0.008526899 ubox
50 57 0.010356556 ubox
50 60 0.006601115 ubox
51 56 0.008177686 ubox
51 59 0.008335262 ubox
54 62 0.013177010 ubox
55 61 0.013238166 ubox
56 60 0.011928903 ubox
1 13 0.9500000 lbox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
5 9 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
40 55 0.9500000 lbox
41 54 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
