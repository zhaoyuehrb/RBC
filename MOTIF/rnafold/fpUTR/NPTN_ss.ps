%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGACCCGGAGCGAAGGUCUCGCGAGGCCUGGGCGCUGCGGCGGCAGGAGGAGGACGGGGAAGGACGGAGCCGAGCCGCGGCUGCCUCCCUCGCUCACUCCCUCGCGCACUCGCCCGCCCCCUCCCUCCCUCCCCUCCCUUCCCCGGCCCCGGCUCUGGCCCCGGCCCAUUCGCUGUUGGGUCUUCUGCUAGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[203.67448425 591.30694580]
[203.84849548 587.34503174]
[205.42439270 583.27301025]
[202.58561707 568.54406738]
[199.74685669 553.81512451]
[196.90808105 539.08624268]
[194.06932068 524.35729980]
[191.23054504 509.62835693]
[188.39178467 494.89941406]
[185.43624878 480.19348145]
[182.36415100 465.51144409]
[179.29205322 450.82940674]
[176.21995544 436.14736938]
[173.14785767 421.46533203]
[170.07575989 406.78329468]
[166.77108765 392.15185547]
[163.23471069 377.57467651]
[159.69833374 362.99749756]
[156.16194153 348.42031860]
[141.44329834 340.29391479]
[137.06492615 323.71154785]
[146.20608521 308.80249023]
[142.43885803 294.28326416]
[131.75312805 283.90710449]
[135.77655029 268.60604858]
[132.00932312 254.08682251]
[128.12704468 239.59793091]
[124.12993622 225.14030457]
[120.13282776 210.68266296]
[115.31517029 205.06741333]
[116.18894196 195.96389771]
[112.42172241 181.44467163]
[108.65450287 166.92543030]
[103.92655182 161.23445129]
[104.94464874 152.14593506]
[101.40826416 137.56877136]
[97.87187958 122.99159241]
[94.33549500 108.41442108]
[89.52094269 101.93811035]
[90.86058807 93.57791901]
[87.55593109 78.94647217]
[73.22123718 64.78321075]
[79.73194122 46.58267975]
[75.96472168 32.06344986]
[65.00952911 20.64879990]
[69.30240631 6.38624573]
[65.53518677 -8.13298512]
[61.76797104 -22.65221596]
[56.57832336 -30.18249893]
[58.05810928 -37.43170929]
[54.52172470 -52.00888443]
[50.98534393 -66.58605957]
[47.44895935 -81.16323090]
[43.91257477 -95.74040222]
[33.32052612 -103.11274719]
[30.67942238 -115.33483124]
[36.87289810 -125.73336029]
[33.56823730 -140.36480713]
[30.26358032 -154.99626160]
[26.95892334 -169.62770081]
[23.65426445 -184.25915527]
[9.31957150 -198.42240906]
[15.83027554 -216.62294006]
[12.06305504 -231.14216614]
[6.87340736 -238.67245483]
[8.35319519 -245.92167664]
[4.81681156 -260.49884033]
[1.28042746 -275.07601929]
[-3.78909230 -282.68768311]
[-2.19447446 -289.91250610]
[-5.49913263 -304.54394531]
[-10.44724751 -312.23510742]
[-8.73820210 -319.43371582]
[-11.81030178 -334.11575317]
[-14.88240147 -348.79779053]
[-27.47553444 -362.22586060]
[-21.36631966 -378.67230225]
[-24.67097855 -393.30374146]
[-27.97563553 -407.93518066]
[-31.28029442 -422.56661987]
[-34.58495331 -437.19808960]
[-49.66234207 -437.95629883]
[-63.97568512 -442.75534058]
[-76.46283722 -451.23907471]
[-86.19716644 -462.77795410]
[-92.45632172 -476.51568604]
[-94.77583313 -491.43286133]
[-92.98358154 -506.42254639]
[-87.21255493 -520.37237549]
[-77.89100647 -532.24719238]
[-65.71066284 -541.16583252]
[-51.57537460 -546.46643066]
[-36.53408432 -547.75561523]
[-21.70294952 -544.93786621]
[-8.18254089 -538.22210693]
[3.02383804 -528.10681152]
[11.08459854 -515.34252930]
[15.40157986 -500.87646484]
[15.65443230 -485.78213501]
[11.82439327 -471.17962646]
[4.19567633 -458.15252686]
[-6.66561651 -447.66754150]
[-19.95350456 -440.50274658]
[-16.64884758 -425.87127686]
[-13.34418964 -411.23983765]
[-10.03953171 -396.60839844]
[-6.73487329 -381.97695923]
[3.32661319 -375.24975586]
[6.19488049 -363.07897949]
[-0.20036505 -351.86990356]
[2.87173486 -337.18786621]
[5.94383478 -322.50582886]
[9.13231468 -307.84860229]
[12.43697262 -293.21716309]
[15.85760117 -278.61239624]
[19.39398575 -264.03521729]
[22.93036842 -249.45805359]
[26.58228683 -234.90939331]
[30.34950638 -220.39016724]
[39.59914780 -216.01707458]
[45.02378082 -207.08416748]
[44.62223434 -196.42100525]
[38.28571320 -187.56381226]
[41.59037018 -172.93235779]
[44.89502716 -158.30091858]
[48.19968414 -143.66946411]
[51.50434494 -129.03802490]
[64.08910370 -116.81381226]
[58.48974609 -99.27678680]
[62.02613068 -84.69961548]
[65.56251526 -70.12244415]
[69.09889984 -55.54526901]
[72.63528442 -40.96809387]
[76.28720093 -26.41943550]
[80.05442047 -11.90020466]
[83.82164001 2.61902595]
[94.50737762 12.99516487]
[90.48395538 28.29623032]
[94.25117493 42.81546021]
[103.50081635 47.18854904]
[108.92545319 56.12146378]
[108.52390289 66.78462219]
[102.18737793 75.64181519]
[105.49203491 90.27326202]
[108.91266632 104.87803650]
[112.44905090 119.45520782]
[115.98543549 134.03237915]
[119.52182007 148.60955811]
[123.17373657 163.15821838]
[126.94095612 177.67744446]
[130.70817566 192.19667053]
[134.59045410 206.68556213]
[138.58757019 221.14318848]
[142.58467102 235.60083008]
[147.89314270 243.04782104]
[146.52856445 250.31959534]
[150.29577637 264.83883667]
[161.25097656 276.25347900]
[156.95809937 290.51605225]
[160.72531128 305.03527832]
[173.05006409 310.48388672]
[179.88371277 321.87158203]
[178.92169189 334.92227173]
[170.73912048 344.88394165]
[174.27549744 359.46112061]
[177.81188965 374.03829956]
[181.34826660 388.61544800]
[185.63796997 393.66900635]
[186.58164978 399.28677368]
[184.75779724 403.71118164]
[187.82989502 418.39321899]
[190.90199280 433.07525635]
[193.97409058 447.75729370]
[197.04618835 462.43933105]
[200.11828613 477.12136841]
[204.94375610 484.89007568]
[203.12071228 492.06063843]
[205.95947266 506.78958130]
[208.79824829 521.51849365]
[211.63702393 536.24743652]
[214.47578430 550.97637939]
[217.31455994 565.70532227]
[220.15332031 580.43426514]
[223.45797729 595.06567383]
[227.22520447 609.58489990]
[230.99241638 624.10412598]
[234.75964355 638.62335205]
[247.80480957 647.96160889]
[248.49346924 663.98992920]
[236.29733276 674.41265869]
[220.57223511 671.23443604]
[213.38113403 656.89337158]
[220.24040222 642.39062500]
[216.47319031 627.87133789]
[212.70596313 613.35211182]
[208.93875122 598.83288574]
[206.58164978 597.29693604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 175]
[11 174]
[12 173]
[13 172]
[14 171]
[15 170]
[16 167]
[17 166]
[18 165]
[19 164]
[22 160]
[23 159]
[25 157]
[26 156]
[27 154]
[28 153]
[29 152]
[31 151]
[32 150]
[33 149]
[35 148]
[36 147]
[37 146]
[38 145]
[40 144]
[41 143]
[43 139]
[44 138]
[46 136]
[47 135]
[48 134]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[63 119]
[64 118]
[66 117]
[67 116]
[68 115]
[70 114]
[71 113]
[73 112]
[74 111]
[75 110]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[184 196]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
