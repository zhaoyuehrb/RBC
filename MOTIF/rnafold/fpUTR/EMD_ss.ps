%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGCCGGUCUGUGCCGGCUGCUCCCGCGGUUAGGUCCCGCCCCGCGCAGCGCGCGCAGCCUGCGGAGCCAGCGGCCGUGACGCGACAACGAUUCGGCUGUGACGCGACAACGAUUCGGCUGUGACGCGAGCGCGGCCGCUCCCGAUGCGCUCGUGCCGCCCCCGCCGUGCUCCUCGGCAGCCGUUGCUCGGCCGGUUUUGGUAGGCCCGGGCCGCCGCCAGGCCUCCGCCUGAGCCCGCACCCGCC\
) } def
/len { sequence length } bind def

/coor [
[27.08342934 152.05860901]
[14.18870735 159.72189331]
[1.29398346 167.38519287]
[-11.60073948 175.04849243]
[-24.49546242 182.71179199]
[-37.39018631 190.37507629]
[-50.28490829 198.03837585]
[-63.17963409 205.70167542]
[-67.16783142 224.24182129]
[-83.17977142 233.79280090]
[-100.77356720 228.67156982]
[-113.47083282 236.65776062]
[-121.03301239 250.55467224]
[-135.92590332 250.78134155]
[-148.62316895 258.76754761]
[-161.32043457 266.75375366]
[-168.88261414 280.65063477]
[-183.77549744 280.87731934]
[-196.47276306 288.86352539]
[-209.17002869 296.84973145]
[-221.86729431 304.83593750]
[-234.56455994 312.82211304]
[-247.26182556 320.80831909]
[-240.78504944 325.72488403]
[-236.07034302 333.56152344]
[-234.10739136 343.67736816]
[-235.66291809 355.13711548]
[-241.20022583 366.78475952]
[-252.79162598 376.30523682]
[-264.38302612 385.82571411]
[-275.97442627 395.34616089]
[-275.95791626 410.98373413]
[-286.03646851 422.94018555]
[-301.45132446 425.57003784]
[-314.92407227 417.63156128]
[-320.09326172 402.87304688]
[-314.51815796 388.26303101]
[-300.83120728 380.69992065]
[-285.49490356 383.75476074]
[-273.90350342 374.23431396]
[-262.31210327 364.71383667]
[-250.72068787 355.19335938]
[-254.22221375 348.56091309]
[-269.21148682 347.99331665]
[-261.22528076 335.29602051]
[-264.72680664 328.66357422]
[-279.12643433 332.86480713]
[-293.52609253 337.06600952]
[-307.92572021 341.26724243]
[-321.43743896 351.50784302]
[-335.01824951 341.35903931]
[-329.02560425 325.49951172]
[-312.12695312 326.86761475]
[-297.72729492 322.66638184]
[-283.32766724 318.46514893]
[-268.92800903 314.26394653]
[-255.24803162 308.11105347]
[-242.55076599 300.12484741]
[-229.85350037 292.13867188]
[-217.15623474 284.15246582]
[-204.45896912 276.16625977]
[-191.76170349 268.18005371]
[-185.10771179 254.85437012]
[-169.30662537 254.05647278]
[-156.60935974 246.07028198]
[-143.91209412 238.08407593]
[-137.25810242 224.75839233]
[-121.45703125 223.96049500]
[-108.75976562 215.97430420]
[-108.70140839 204.59437561]
[-103.10874176 194.54614258]
[-93.26509094 188.37242126]
[-81.54524994 187.69874573]
[-70.84292603 192.80694580]
[-57.94820786 185.14366150]
[-45.05348206 177.48036194]
[-32.15876007 169.81706238]
[-19.26403618 162.15376282]
[-6.36931276 154.49047852]
[6.52541065 146.82717896]
[19.42013359 139.16387939]
[22.83299828 124.71092224]
[35.80091476 116.75556183]
[50.93736649 120.43328094]
[63.83208847 112.76998138]
[76.72681427 105.10668945]
[76.27281952 92.70500183]
[82.24530029 81.25355530]
[93.52280426 73.97784424]
[107.42727661 73.19746399]
[120.35497284 79.61286926]
[126.59402466 65.97196198]
[132.83306885 52.33105850]
[125.55778503 34.81783295]
[133.28509521 17.85045052]
[150.66526794 12.04542542]
[156.55815125 -1.74855387]
[162.45103455 -15.54253292]
[168.34393311 -29.33651161]
[174.23681641 -43.13048935]
[180.12971497 -56.92446899]
[186.02259827 -70.71844482]
[177.06785583 -81.44681549]
[173.62031555 -94.92108917]
[176.29647827 -108.50214386]
[184.51913452 -119.55514526]
[196.64068604 -125.96074677]
[210.27304077 -126.52132416]
[216.33949280 -140.23985291]
[210.87823486 -154.82795715]
[217.22590637 -168.65408325]
[231.16708374 -173.77064514]
[237.23353577 -187.48918152]
[243.29998779 -201.20770264]
[238.80732727 -211.07916260]
[240.44146729 -221.57920837]
[247.42744446 -229.29319763]
[257.29022217 -231.84657288]
[263.70089722 -245.40768433]
[270.11154175 -258.96878052]
[265.02011108 -273.69003296]
[271.71459961 -287.35159302]
[285.78042603 -292.11477661]
[292.19107056 -305.67587280]
[298.60174561 -319.23696899]
[297.50451660 -335.02011108]
[309.93896484 -343.21975708]
[316.34960938 -356.78085327]
[322.76025391 -370.34194946]
[329.17089844 -383.90304565]
[335.58157349 -397.46414185]
[341.99221802 -411.02526855]
[348.40286255 -424.58636475]
[354.81353760 -438.14746094]
[361.22418213 -451.70855713]
[367.63482666 -465.26968384]
[364.03125000 -477.63729858]
[369.63061523 -488.79229736]
[380.95092773 -493.01141357]
[387.53216553 -506.49053955]
[385.85592651 -522.80383301]
[399.30224609 -532.19152832]
[414.03866577 -524.99639893]
[414.90563965 -508.62017822]
[401.01132202 -499.90930176]
[394.43008423 -486.43017578]
[396.57812500 -469.00253296]
[381.19592285 -458.85900879]
[374.78527832 -445.29791260]
[368.37463379 -431.73681641]
[361.96398926 -418.17572021]
[355.55331421 -404.61459351]
[349.14266968 -391.05349731]
[342.73202515 -377.49240112]
[336.32135010 -363.93130493]
[329.91070557 -350.37017822]
[323.50006104 -336.80908203]
[325.05581665 -321.99597168]
[312.16284180 -312.82632446]
[305.75219727 -299.26522827]
[299.34152222 -285.70413208]
[304.58828735 -271.81143188]
[298.28015137 -257.96722412]
[283.67263794 -252.55812073]
[277.26199341 -238.99702454]
[270.85134888 -225.43592834]
[273.81674194 -206.31408691]
[257.01852417 -195.14125061]
[250.95207214 -181.42272949]
[244.88562012 -167.70419312]
[250.48123169 -153.94828796]
[244.52441406 -139.94932556]
[230.05801392 -134.17340088]
[223.99156189 -120.45487213]
[233.84230042 -107.63131714]
[235.88655090 -91.49594879]
[229.47134399 -76.44802094]
[216.26324463 -66.63859558]
[199.81657410 -64.82556152]
[193.92369080 -51.03158188]
[188.03079224 -37.23760223]
[182.13790894 -23.44362259]
[176.24502563 -9.64964390]
[170.35212708 4.14433575]
[164.45924377 17.93831444]
[170.88941956 27.32760620]
[172.01145935 38.77251053]
[167.43290710 49.45189667]
[158.18086243 56.67742920]
[146.47398376 58.57011032]
[140.23492432 72.21101379]
[133.99588013 85.85192108]
[136.81774902 100.58409119]
[147.65594482 110.95394135]
[162.97616577 114.90377045]
[166.82322693 129.29298401]
[177.66140747 139.66282654]
[188.49960327 150.03266907]
[199.33778381 160.40252686]
[210.17596436 170.77236938]
[225.49620056 174.72219849]
[229.34326172 189.11140442]
[240.18144226 199.48124695]
[251.01963806 209.85110474]
[261.98779297 220.08337402]
[273.08416748 230.17646790]
[284.18054199 240.26956177]
[295.27691650 250.36264038]
[306.37329102 260.45571899]
[319.25415039 260.62283325]
[328.28640747 269.23706055]
[329.01397705 281.29611206]
[339.98214722 291.52841187]
[350.95028687 301.76068115]
[367.04147339 304.92385864]
[372.09094238 320.52624512]
[360.90423584 332.51745605]
[344.98925781 328.56198120]
[340.71801758 312.72882080]
[329.74984741 302.49655151]
[318.78170776 292.26428223]
[301.48690796 289.22677612]
[296.28021240 271.55212402]
[285.18383789 261.45901489]
[274.08746338 251.36593628]
[262.99108887 241.27284241]
[251.89469910 231.17976379]
[247.18962097 230.50389099]
[242.85166931 226.88088989]
[240.64978027 220.68928528]
[229.81159973 210.31944275]
[218.97341919 199.94958496]
[204.42840576 196.74148560]
[199.80612183 181.61054993]
[188.96794128 171.24070740]
[178.12974548 160.87086487]
[167.29156494 150.50100708]
[156.45338440 140.13116455]
[141.90837097 136.92306519]
[137.28608704 121.79212952]
[126.44790649 111.42227936]
[117.62465668 121.19239044]
[105.85564423 125.65824890]
[93.91863251 124.32370758]
[84.39010620 118.00141144]
[71.49538422 125.66471100]
[58.60066223 133.32800293]
[54.59597015 148.38125610]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 81]
[2 80]
[3 79]
[4 78]
[5 77]
[6 76]
[7 75]
[8 74]
[11 69]
[12 68]
[14 66]
[15 65]
[16 64]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[28 42]
[29 41]
[30 40]
[31 39]
[46 56]
[47 55]
[48 54]
[49 53]
[84 247]
[85 246]
[86 245]
[91 192]
[92 191]
[93 190]
[96 185]
[97 184]
[98 183]
[99 182]
[100 181]
[101 180]
[102 179]
[108 174]
[109 173]
[112 170]
[113 169]
[114 168]
[118 166]
[119 165]
[120 164]
[123 161]
[124 160]
[125 159]
[127 157]
[128 156]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[139 146]
[140 145]
[193 241]
[194 240]
[196 238]
[197 237]
[198 236]
[199 235]
[200 234]
[202 232]
[203 231]
[204 230]
[205 227]
[206 226]
[207 225]
[208 224]
[209 223]
[212 221]
[213 220]
[214 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
