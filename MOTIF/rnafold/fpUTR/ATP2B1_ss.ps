%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAAAGGUCAAGAUACUUCUCUGGGAAAUGUUGCUGCUGAUGCUGCUUUACAAAGUCAUACAAUGAGUGUUUGGUUUAAGAAAGAUUUUCAUACUUAAAAGAUUUUCAUCUUGGAAAUACAUCAAGUGAAAAUUAAAUUCUUUUGGGAAACAUUUUCCUUCUGAUAUAUUAUACUUGUA\
) } def
/len { sequence length } bind def

/coor [
[50.27507401 467.24636841]
[47.19017792 481.92572021]
[44.10527802 496.60507202]
[41.02037811 511.28442383]
[43.67999649 528.02844238]
[28.32657623 535.21936035]
[17.16646194 522.45660400]
[26.34102631 508.19952393]
[29.42592430 493.52017212]
[32.51082230 478.84082031]
[35.59572220 464.16146851]
[20.78631020 446.47708130]
[23.80730057 423.34768677]
[43.08621216 409.76123047]
[44.12107849 394.79696655]
[45.15594864 379.83270264]
[46.19081497 364.86846924]
[36.24721909 353.83847046]
[37.08354950 338.64785767]
[48.72023392 328.29287720]
[49.75510025 313.32861328]
[36.84647751 303.20657349]
[32.46177292 287.22729492]
[38.51670074 271.62503052]
[52.81349182 262.60952759]
[53.58991241 247.62962341]
[54.36633301 232.64973450]
[55.14275360 217.66984558]
[55.91917419 202.68995667]
[56.69559479 187.71006775]
[57.47201538 172.73016357]
[58.24843597 157.75027466]
[59.02485657 142.77038574]
[59.80127335 127.79049683]
[48.74697495 117.65133667]
[33.88977051 119.71614075]
[21.28603363 129.27943420]
[7.61485386 123.36773682]
[-7.24235296 125.43254089]
[-19.84101868 135.93043518]
[-35.13627625 130.01544189]
[-37.39367676 113.77239990]
[-24.29099846 103.91076660]
[-9.30715561 110.57533264]
[5.55005121 108.51052856]
[17.09109879 99.09493256]
[31.82496643 104.85893250]
[46.68217087 102.79412842]
[50.39473724 96.27747345]
[36.36639404 90.96658325]
[22.33804893 85.65569305]
[8.30970478 80.34480286]
[-5.71864033 75.03391266]
[-20.64687729 73.56840515]
[-31.50433540 63.21873474]
[-33.68264389 48.37774658]
[-26.25724411 35.34458160]
[-12.37978363 29.65106583]
[2.05955219 33.71377182]
[10.93181515 45.80739975]
[22.65382957 55.16658783]
[34.37584305 64.52577972]
[46.09785843 73.88496399]
[57.81987000 83.24415588]
[61.53243637 76.72749329]
[55.73243332 62.89419937]
[49.93243408 49.06090546]
[44.13243103 35.22761536]
[38.33243179 21.39432144]
[25.86087418 11.65929031]
[28.07515144 -3.06980491]
[22.27515030 -16.90309715]
[16.47514915 -30.73639107]
[10.67514801 -44.56968307]
[-4.57077837 -46.42906952]
[-16.83479118 -55.67512512]
[-22.81793213 -69.82070923]
[-20.91076851 -85.06072998]
[-11.62631607 -97.29570007]
[2.53795433 -103.23447418]
[17.77192497 -101.27954865]
[29.97773361 -91.95679474]
[35.87207794 -77.77397919]
[33.86941147 -62.54621124]
[24.50844002 -50.36968231]
[30.30844116 -36.53639221]
[36.10844421 -22.70309830]
[41.90844345 -8.86980629]
[53.96514511 -0.12422413]
[52.16572571 15.59432125]
[57.96572495 29.42761421]
[63.76572800 43.26090622]
[69.56572723 57.09420013]
[75.36573029 70.92749023]
[101.24339294 68.50768280]
[117.56436157 82.31130219]
[130.84620667 75.34045410]
[144.12803650 68.36960602]
[157.40988159 61.39875793]
[170.69172668 54.42790985]
[183.97355652 47.45706177]
[197.25540161 40.48621368]
[210.53724670 33.51536560]
[223.81909180 26.54451942]
[236.72230530 18.89553070]
[249.21229553 10.58890724]
[261.70230103 2.28228378]
[274.19229126 -6.02433968]
[286.68228149 -14.33096313]
[299.17227173 -22.63758659]
[304.60287476 -30.01539421]
[311.95031738 -30.97762108]
[324.58184814 -39.06742096]
[337.21334839 -47.15722275]
[349.84487915 -55.24702072]
[362.47637939 -63.33682251]
[364.30075073 -78.86762238]
[375.71667480 -89.55454254]
[391.33395386 -90.35154724]
[403.77853394 -80.88231659]
[407.17449951 -65.61793518]
[399.91836548 -51.76576614]
[385.43624878 -45.86639023]
[370.56619263 -50.70531082]
[357.93466187 -42.61550903]
[345.30316162 -34.52570724]
[332.67163086 -26.43590736]
[320.04013062 -18.34610748]
[307.47891235 -10.14758968]
[294.98892212 -1.84096658]
[282.49890137 6.46565676]
[270.00891113 14.77227974]
[257.51892090 23.07890320]
[245.02893066 31.38552666]
[259.43539429 35.56330872]
[266.80780029 48.62651443]
[262.93807983 63.11875916]
[250.03498840 70.76796722]
[235.46354675 67.20803070]
[227.54103088 54.47093201]
[230.78993225 39.82635880]
[217.50808716 46.79720688]
[204.22625732 53.76805496]
[190.94441223 60.73890305]
[177.66256714 67.70974731]
[164.38073730 74.68059540]
[151.09889221 81.65144348]
[137.81704712 88.62229156]
[124.53520966 95.59313965]
[115.45844269 127.46540833]
[74.78116608 128.56690979]
[74.00474548 143.54679871]
[73.22832489 158.52670288]
[72.45190430 173.50659180]
[71.67548370 188.48648071]
[70.89906311 203.46636963]
[70.12264252 218.44627380]
[69.34622192 233.42616272]
[68.56980133 248.40605164]
[67.79338837 263.38595581]
[79.13616943 271.24319458]
[85.06226349 283.58413696]
[84.11747742 297.13293457]
[76.65590668 308.35153198]
[64.71936035 314.36349487]
[63.68449020 329.32775879]
[73.78499603 341.18597412]
[72.52232361 356.34710693]
[61.15507507 365.90332031]
[60.12020493 380.86758423]
[59.08533859 395.83184814]
[58.05047226 410.79611206]
[64.64069366 414.08734131]
[70.19196320 418.89596558]
[74.36447144 424.91317749]
[76.90641022 431.75665283]
[77.66913605 438.99487305]
[76.61584473 446.17431641]
[73.82316589 452.84780884]
[69.47572327 458.60247803]
[63.85395432 463.08523560]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[4 8]
[14 172]
[15 171]
[16 170]
[17 169]
[20 166]
[21 165]
[25 160]
[26 159]
[27 158]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 48]
[36 47]
[38 45]
[39 44]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[71 88]
[72 87]
[73 86]
[74 85]
[96 149]
[97 148]
[98 147]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
