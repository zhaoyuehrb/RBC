%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VIRMA)
} def

/sequence { (\
CUGAGUCGCUGUCGCGGAGGCUGGAGCGCUGCCCCGGAAGUCCUCCCCCCUGUUCCCCGCCCGCGGCAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.033917359 ubox
2 68 0.023711748 ubox
3 7 0.046798868 ubox
3 10 0.006501236 ubox
3 67 0.016600922 ubox
4 10 0.033182806 ubox
5 9 0.038048656 ubox
5 67 0.567937426 ubox
5 71 0.170438097 ubox
6 17 0.006592621 ubox
6 66 0.568412647 ubox
6 70 0.170201111 ubox
7 16 0.008453263 ubox
7 65 0.569032015 ubox
8 15 0.008753572 ubox
8 64 0.569084099 ubox
8 67 0.389144093 ubox
9 14 0.008740049 ubox
9 63 0.564927347 ubox
9 66 0.389560030 ubox
10 59 0.008449025 ubox
10 63 0.063778624 ubox
10 65 0.389060339 ubox
10 68 0.671296758 ubox
11 58 0.008720483 ubox
11 60 0.102791476 ubox
11 62 0.301482708 ubox
11 64 0.389115507 ubox
11 67 0.723862955 ubox
12 59 0.030086853 ubox
12 63 0.379548914 ubox
12 66 0.723721230 ubox
13 59 0.206382816 ubox
13 63 0.051165880 ubox
13 65 0.724059356 ubox
14 53 0.017949420 ubox
14 58 0.208085453 ubox
14 60 0.654976836 ubox
14 62 0.029245352 ubox
14 64 0.724130724 ubox
15 52 0.020765886 ubox
15 59 0.656086243 ubox
15 63 0.724122370 ubox
16 46 0.012627211 ubox
16 50 0.006046032 ubox
16 51 0.020558959 ubox
16 54 0.005476633 ubox
16 55 0.010442163 ubox
16 56 0.195251398 ubox
16 57 0.092545853 ubox
16 58 0.654015894 ubox
16 61 0.058545659 ubox
16 62 0.720925770 ubox
17 45 0.013776674 ubox
17 49 0.006414106 ubox
17 50 0.020945551 ubox
17 53 0.010913103 ubox
17 54 0.011395794 ubox
17 55 0.196351084 ubox
17 56 0.100930208 ubox
17 57 0.652269713 ubox
17 60 0.079821994 ubox
17 61 0.699129046 ubox
18 44 0.015575937 ubox
18 51 0.852229531 ubox
18 53 0.022230921 ubox
18 54 0.160264880 ubox
19 33 0.010867432 ubox
19 43 0.015635653 ubox
19 47 0.007976015 ubox
19 48 0.037082970 ubox
19 49 0.065068043 ubox
19 50 0.872245028 ubox
19 51 0.020841951 ubox
19 53 0.042435480 ubox
19 54 0.026878870 ubox
19 55 0.039287211 ubox
19 56 0.098431722 ubox
19 57 0.033467073 ubox
19 58 0.398060677 ubox
19 61 0.167357163 ubox
20 32 0.010909057 ubox
20 42 0.015618652 ubox
20 46 0.007885818 ubox
20 47 0.037171093 ubox
20 48 0.067332121 ubox
20 49 0.871819267 ubox
20 50 0.023468429 ubox
20 53 0.039355955 ubox
20 54 0.029737570 ubox
20 55 0.097673229 ubox
20 56 0.032742570 ubox
20 57 0.396063708 ubox
20 60 0.234665849 ubox
21 31 0.010886715 ubox
21 37 0.021669709 ubox
21 40 0.004560377 ubox
21 52 0.053579427 ubox
21 59 0.234880990 ubox
22 36 0.021815488 ubox
22 39 0.004100999 ubox
22 52 0.023785849 ubox
22 59 0.003621164 ubox
23 30 0.006706689 ubox
23 34 0.007586592 ubox
23 35 0.026358150 ubox
23 43 0.011429290 ubox
23 46 0.886865780 ubox
23 47 0.026587895 ubox
23 48 0.005966258 ubox
23 49 0.006370324 ubox
23 50 0.011300997 ubox
23 55 0.003719038 ubox
23 56 0.452101670 ubox
23 57 0.063901123 ubox
23 58 0.010749918 ubox
24 29 0.007107199 ubox
24 33 0.007690036 ubox
24 34 0.026327681 ubox
24 42 0.011436600 ubox
24 45 0.887719283 ubox
24 46 0.018939378 ubox
24 47 0.004964779 ubox
24 48 0.005280550 ubox
24 49 0.009346045 ubox
24 55 0.456244827 ubox
24 56 0.046105049 ubox
24 57 0.010076387 ubox
25 41 0.011281673 ubox
25 44 0.887844900 ubox
25 54 0.458131802 ubox
26 32 0.027852823 ubox
26 41 0.006187936 ubox
26 43 0.886461431 ubox
26 53 0.457730565 ubox
27 31 0.027675635 ubox
27 36 0.006586133 ubox
27 40 0.011470847 ubox
27 52 0.457671752 ubox
28 35 0.019072676 ubox
28 41 0.879653681 ubox
28 51 0.403144724 ubox
28 53 0.022189854 ubox
29 37 0.039044234 ubox
29 40 0.890474508 ubox
29 52 0.023555787 ubox
30 36 0.039893534 ubox
30 39 0.889175205 ubox
31 35 0.043326706 ubox
31 41 0.007132708 ubox
31 51 0.023674213 ubox
31 53 0.005221143 ubox
32 40 0.007291261 ubox
32 52 0.005444957 ubox
36 42 0.016625217 ubox
36 43 0.330421653 ubox
36 44 0.043488626 ubox
36 45 0.021544763 ubox
36 46 0.286694558 ubox
36 47 0.071455467 ubox
36 48 0.023095006 ubox
36 49 0.022768120 ubox
36 50 0.040025441 ubox
36 51 0.004556920 ubox
36 56 0.013733926 ubox
37 41 0.010913149 ubox
37 42 0.330017637 ubox
37 43 0.045571750 ubox
37 44 0.017737396 ubox
37 45 0.287318627 ubox
37 46 0.071037036 ubox
37 47 0.023002824 ubox
37 48 0.022813483 ubox
37 49 0.039914022 ubox
37 50 0.005101317 ubox
37 55 0.013806895 ubox
38 44 0.278770645 ubox
38 54 0.013785423 ubox
39 51 0.006255027 ubox
39 53 0.013149885 ubox
40 50 0.006764920 ubox
51 59 0.023003595 ubox
52 58 0.085316331 ubox
52 60 0.174365942 ubox
52 71 0.006307294 ubox
53 59 0.170321428 ubox
53 70 0.006400128 ubox
54 69 0.006355389 ubox
57 66 0.007099034 ubox
58 65 0.007116137 ubox
59 64 0.006935236 ubox
59 67 0.006003881 ubox
60 66 0.006011124 ubox
61 65 0.005968068 ubox
10 68 0.9500000 lbox
11 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
15 63 0.9500000 lbox
16 62 0.9500000 lbox
17 61 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
showpage
end
%%EOF
