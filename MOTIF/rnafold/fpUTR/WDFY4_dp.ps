%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDFY4)
} def

/sequence { (\
CCAACGGGCCUCAGAGGGAGCUGGUCUAUCCCGGCCCUGUCAUUACUCCACUGGGUUCUGAUCUGCUUUGCCACGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.018539409 ubox
1 8 0.006205130 ubox
1 54 0.021944464 ubox
1 55 0.003279899 ubox
1 76 0.174834062 ubox
2 6 0.017555333 ubox
2 7 0.007324847 ubox
2 39 0.019065894 ubox
2 53 0.022256904 ubox
2 54 0.003271482 ubox
2 60 0.023739947 ubox
2 65 0.017315195 ubox
2 70 0.027255722 ubox
2 75 0.175009027 ubox
3 38 0.018232690 ubox
3 52 0.021729458 ubox
3 59 0.022059779 ubox
3 64 0.017052128 ubox
3 68 0.006231147 ubox
3 69 0.027172702 ubox
4 25 0.004943462 ubox
4 40 0.031502783 ubox
4 67 0.006949690 ubox
4 68 0.021982275 ubox
5 24 0.005243437 ubox
5 39 0.036049731 ubox
5 60 0.058688145 ubox
5 65 0.024420777 ubox
5 70 0.019030127 ubox
5 75 0.935596122 ubox
6 37 0.167420290 ubox
6 38 0.011688346 ubox
6 48 0.011713887 ubox
6 49 0.034341258 ubox
6 58 0.059626459 ubox
6 59 0.057788767 ubox
6 64 0.024256267 ubox
6 67 0.004578570 ubox
6 68 0.037515295 ubox
6 69 0.015480146 ubox
6 72 0.042199921 ubox
6 74 0.941638364 ubox
7 22 0.005508621 ubox
7 36 0.167752026 ubox
7 37 0.010148453 ubox
7 47 0.011837749 ubox
7 48 0.034353861 ubox
7 49 0.007602559 ubox
7 57 0.060038245 ubox
7 58 0.057837246 ubox
7 63 0.024290390 ubox
7 66 0.004497544 ubox
7 67 0.049717071 ubox
7 68 0.011666117 ubox
7 71 0.040879213 ubox
7 72 0.972288867 ubox
8 21 0.005582186 ubox
8 35 0.167854425 ubox
8 36 0.008246094 ubox
8 46 0.015314453 ubox
8 47 0.030099058 ubox
8 48 0.007609194 ubox
8 56 0.064485957 ubox
8 57 0.050370016 ubox
8 62 0.020748548 ubox
8 66 0.052765023 ubox
8 67 0.005649111 ubox
8 71 0.973187895 ubox
8 77 0.100784435 ubox
9 17 0.024693259 ubox
9 18 0.012731417 ubox
9 20 0.005337952 ubox
9 34 0.167928763 ubox
9 55 0.068202496 ubox
9 65 0.052662945 ubox
9 70 0.969243139 ubox
9 76 0.101997900 ubox
10 16 0.048365302 ubox
10 17 0.031501673 ubox
10 18 0.033951721 ubox
10 20 0.005512416 ubox
10 33 0.167806725 ubox
10 34 0.003598558 ubox
10 54 0.067961413 ubox
10 55 0.055108434 ubox
10 75 0.101815066 ubox
10 76 0.004573284 ubox
11 15 0.043920384 ubox
11 16 0.029320119 ubox
11 17 0.034534083 ubox
11 18 0.007150114 ubox
11 19 0.008402559 ubox
11 24 0.010343384 ubox
11 33 0.004478820 ubox
11 53 0.016722732 ubox
11 54 0.055454928 ubox
11 61 0.080346811 ubox
11 75 0.004714229 ubox
12 16 0.035067778 ubox
12 17 0.014996804 ubox
12 18 0.009416572 ubox
12 23 0.010785743 ubox
12 39 0.008451645 ubox
12 53 0.086153839 ubox
12 60 0.081762535 ubox
12 65 0.888602554 ubox
12 70 0.082244904 ubox
12 75 0.003238104 ubox
13 22 0.010876565 ubox
13 38 0.007280232 ubox
13 52 0.086672186 ubox
13 59 0.081703684 ubox
13 64 0.891038431 ubox
13 67 0.121847269 ubox
13 68 0.025319212 ubox
13 69 0.156603592 ubox
14 21 0.010845827 ubox
14 30 0.036114678 ubox
14 37 0.005148000 ubox
14 41 0.049216788 ubox
14 48 0.012367337 ubox
14 51 0.084812229 ubox
14 58 0.081435598 ubox
14 63 0.889810022 ubox
14 66 0.126775096 ubox
14 67 0.020705224 ubox
14 68 0.161369843 ubox
14 69 0.037054236 ubox
15 22 0.005002337 ubox
15 27 0.006545126 ubox
15 29 0.035982096 ubox
15 38 0.236870797 ubox
15 40 0.052790918 ubox
15 47 0.014077146 ubox
15 52 0.005103798 ubox
15 57 0.077197633 ubox
15 62 0.592888961 ubox
15 64 0.127834379 ubox
15 67 0.161409020 ubox
15 68 0.035044928 ubox
15 69 0.016759303 ubox
16 21 0.005234979 ubox
16 26 0.006644774 ubox
16 27 0.006889967 ubox
16 31 0.003815752 ubox
16 32 0.166924909 ubox
16 36 0.005246134 ubox
16 37 0.243018425 ubox
16 38 0.812537302 ubox
16 41 0.006608596 ubox
16 46 0.013043958 ubox
16 48 0.005069217 ubox
16 49 0.026594274 ubox
16 51 0.005738069 ubox
16 56 0.024064144 ubox
16 58 0.004448159 ubox
16 59 0.011451276 ubox
16 63 0.126012708 ubox
16 64 0.020102371 ubox
16 66 0.157566302 ubox
16 67 0.030206743 ubox
16 68 0.010278689 ubox
16 69 0.022091228 ubox
16 72 0.029620616 ubox
17 25 0.006368179 ubox
17 26 0.007365460 ubox
17 27 0.035321513 ubox
17 30 0.003800074 ubox
17 31 0.167000921 ubox
17 35 0.003602279 ubox
17 36 0.237050749 ubox
17 37 0.900881520 ubox
17 38 0.107532154 ubox
17 40 0.004746561 ubox
17 47 0.004037587 ubox
17 48 0.024746164 ubox
17 49 0.072233202 ubox
17 58 0.011983373 ubox
17 59 0.032676268 ubox
17 62 0.007066002 ubox
17 63 0.019063980 ubox
17 64 0.022154474 ubox
17 66 0.028651231 ubox
17 67 0.006847673 ubox
17 68 0.017000387 ubox
17 69 0.252495751 ubox
17 71 0.029444894 ubox
17 72 0.006778918 ubox
18 25 0.005943035 ubox
18 26 0.038649174 ubox
18 30 0.166990035 ubox
18 35 0.162610830 ubox
18 36 0.902728573 ubox
18 37 0.113290803 ubox
18 41 0.007536848 ubox
18 46 0.007352155 ubox
18 47 0.015942003 ubox
18 48 0.072346639 ubox
18 57 0.011543119 ubox
18 58 0.033687873 ubox
18 62 0.004038350 ubox
18 63 0.024167747 ubox
18 66 0.006221158 ubox
18 67 0.008070135 ubox
18 68 0.268475760 ubox
18 69 0.010874823 ubox
18 71 0.006667088 ubox
19 25 0.038234280 ubox
19 27 0.009580384 ubox
19 29 0.164736600 ubox
19 38 0.006546060 ubox
19 40 0.007635526 ubox
19 43 0.003660418 ubox
19 44 0.003980279 ubox
19 47 0.072101003 ubox
19 56 0.010976538 ubox
19 57 0.033090560 ubox
19 62 0.016793706 ubox
19 64 0.023884079 ubox
19 67 0.273387823 ubox
19 68 0.008090304 ubox
19 69 0.005404076 ubox
20 26 0.015174570 ubox
20 35 0.929354087 ubox
20 37 0.005170137 ubox
20 40 0.016948871 ubox
20 46 0.050444800 ubox
20 56 0.026897007 ubox
20 63 0.017442683 ubox
20 66 0.274346544 ubox
21 34 0.943398927 ubox
21 39 0.030492155 ubox
21 54 0.008767266 ubox
21 55 0.025510133 ubox
21 65 0.273764265 ubox
22 28 0.011942054 ubox
22 33 0.942956274 ubox
22 42 0.008081043 ubox
22 45 0.012761676 ubox
22 50 0.004161671 ubox
22 53 0.009081633 ubox
22 54 0.023087542 ubox
23 27 0.010972358 ubox
23 30 0.004929877 ubox
23 31 0.061084537 ubox
23 32 0.942135161 ubox
23 36 0.053991299 ubox
23 37 0.008051330 ubox
23 41 0.004413276 ubox
23 44 0.004471734 ubox
23 49 0.005875878 ubox
23 52 0.008734375 ubox
23 59 0.003532988 ubox
23 63 0.271264035 ubox
23 64 0.008499321 ubox
24 29 0.003882059 ubox
24 30 0.082015944 ubox
24 31 0.936350563 ubox
24 35 0.054451420 ubox
24 36 0.006656049 ubox
24 43 0.004026548 ubox
24 48 0.005873271 ubox
24 51 0.009159728 ubox
24 58 0.003607035 ubox
24 62 0.274596279 ubox
24 63 0.008996272 ubox
25 34 0.054560399 ubox
25 42 0.003937995 ubox
25 50 0.008873239 ubox
25 61 0.274918307 ubox
26 33 0.054297191 ubox
26 34 0.005554503 ubox
26 60 0.274733456 ubox
27 33 0.005406985 ubox
27 45 0.004945021 ubox
27 60 0.003883924 ubox
28 44 0.004906157 ubox
28 56 0.022823215 ubox
28 59 0.021165074 ubox
28 62 0.005101523 ubox
29 55 0.006024273 ubox
29 61 0.005584051 ubox
30 54 0.005392327 ubox
30 55 0.273685724 ubox
30 60 0.005708755 ubox
31 53 0.004616906 ubox
31 54 0.273868779 ubox
32 53 0.273879226 ubox
33 41 0.012905270 ubox
33 49 0.007856411 ubox
33 52 0.273259759 ubox
33 57 0.032116647 ubox
33 58 0.009638436 ubox
33 67 0.011149375 ubox
33 72 0.004295734 ubox
34 40 0.013117541 ubox
34 48 0.007867922 ubox
34 51 0.272352354 ubox
34 56 0.042253444 ubox
34 57 0.006857543 ubox
34 66 0.012114067 ubox
34 71 0.004397781 ubox
35 39 0.013445352 ubox
35 55 0.044537956 ubox
35 65 0.012106423 ubox
35 70 0.004391963 ubox
36 54 0.045664562 ubox
36 55 0.009389058 ubox
37 53 0.045731736 ubox
37 54 0.009572833 ubox
38 45 0.027603091 ubox
38 50 0.047536959 ubox
38 53 0.009156713 ubox
38 65 0.011420323 ubox
39 44 0.029182084 ubox
39 46 0.244285510 ubox
39 49 0.048175228 ubox
39 51 0.037144981 ubox
39 52 0.004872901 ubox
39 62 0.693559709 ubox
39 64 0.006021462 ubox
39 66 0.009898208 ubox
40 45 0.220359924 ubox
40 50 0.035651342 ubox
40 54 0.006806259 ubox
40 61 0.910036136 ubox
40 65 0.007624763 ubox
41 53 0.009775511 ubox
41 60 0.947317315 ubox
42 52 0.009082777 ubox
42 59 0.939220757 ubox
42 62 0.015619497 ubox
43 61 0.019856472 ubox
44 53 0.004365485 ubox
44 60 0.020567697 ubox
45 52 0.004245658 ubox
45 56 0.946899343 ubox
45 59 0.016551794 ubox
46 54 0.016799654 ubox
46 55 0.949585738 ubox
47 53 0.016616793 ubox
47 54 0.903022115 ubox
47 55 0.059233234 ubox
48 53 0.883272979 ubox
48 54 0.293223677 ubox
48 55 0.056851420 ubox
48 76 0.007798653 ubox
49 53 0.292198249 ubox
49 54 0.057534099 ubox
49 60 0.006784179 ubox
49 75 0.007882437 ubox
50 56 0.003592150 ubox
50 59 0.006664416 ubox
51 55 0.003791800 ubox
51 76 0.051951144 ubox
52 65 0.006371713 ubox
52 73 0.007424744 ubox
52 75 0.052228198 ubox
53 59 0.003359445 ubox
53 64 0.011046812 ubox
53 68 0.012512991 ubox
53 72 0.007890696 ubox
53 74 0.052231789 ubox
54 58 0.003410537 ubox
54 63 0.011557511 ubox
54 67 0.016525970 ubox
54 71 0.007771743 ubox
54 72 0.053163344 ubox
55 62 0.011228581 ubox
55 66 0.018935147 ubox
55 71 0.053246261 ubox
55 77 0.003410131 ubox
56 61 0.010708300 ubox
56 65 0.018948094 ubox
56 70 0.052660772 ubox
56 76 0.003387058 ubox
58 76 0.006516276 ubox
59 65 0.003467442 ubox
59 70 0.004687470 ubox
59 73 0.005752381 ubox
59 75 0.007151942 ubox
60 68 0.011393484 ubox
60 69 0.021339378 ubox
60 72 0.006206788 ubox
60 74 0.007455182 ubox
61 67 0.011338922 ubox
61 68 0.021653931 ubox
62 76 0.010994226 ubox
63 75 0.020422453 ubox
63 76 0.074228942 ubox
64 73 0.025423002 ubox
64 75 0.075349260 ubox
65 69 0.004437118 ubox
65 71 0.051121325 ubox
65 72 0.025762404 ubox
65 74 0.075736129 ubox
65 77 0.078030132 ubox
66 70 0.051905296 ubox
66 76 0.078958293 ubox
67 75 0.075818821 ubox
67 76 0.003173327 ubox
68 75 0.006622412 ubox
68 76 0.007789956 ubox
69 75 0.011235697 ubox
70 74 0.014791818 ubox
70 77 0.087519602 ubox
71 76 0.088553383 ubox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
12 65 0.9500000 lbox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
39 62 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
