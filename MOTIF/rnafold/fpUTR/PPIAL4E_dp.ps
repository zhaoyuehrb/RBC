%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPIAL4E)
} def

/sequence { (\
ACUAUAAAGACAGUGAAAAGAUCAGUGGUUAUCUUUGCAGACGCCACCAUCGCUGUGAGCCCUGUACUAUCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.227456565 ubox
1 26 0.006009042 ubox
1 29 0.006561110 ubox
1 65 0.206259269 ubox
2 9 0.197366283 ubox
2 13 0.242381772 ubox
2 20 0.013288735 ubox
2 25 0.006426568 ubox
2 28 0.007543621 ubox
2 40 0.161252163 ubox
2 59 0.039144329 ubox
2 64 0.218072677 ubox
2 73 0.045570639 ubox
3 8 0.189111559 ubox
3 12 0.240138446 ubox
3 15 0.048343697 ubox
3 19 0.013331774 ubox
3 24 0.006157398 ubox
3 27 0.007109984 ubox
3 31 0.004357268 ubox
3 39 0.160619821 ubox
3 57 0.010388366 ubox
3 58 0.035938122 ubox
3 64 0.024780528 ubox
3 66 0.091476760 ubox
3 69 0.010975187 ubox
3 72 0.044457133 ubox
4 14 0.051650176 ubox
4 22 0.003465174 ubox
4 26 0.007046422 ubox
4 30 0.004363361 ubox
4 32 0.034990170 ubox
4 36 0.003551008 ubox
4 56 0.007148603 ubox
4 63 0.029518305 ubox
4 65 0.097799158 ubox
4 68 0.011203855 ubox
4 70 0.031249519 ubox
5 13 0.051230211 ubox
5 15 0.008184225 ubox
5 21 0.003526933 ubox
5 25 0.006955153 ubox
5 31 0.038228672 ubox
5 37 0.173095552 ubox
5 55 0.004636995 ubox
5 57 0.021756054 ubox
5 64 0.097718534 ubox
5 66 0.018794608 ubox
5 69 0.031759087 ubox
6 14 0.009265627 ubox
6 30 0.038004743 ubox
6 35 0.005780102 ubox
6 36 0.196211966 ubox
6 54 0.004012452 ubox
6 56 0.011832585 ubox
6 63 0.090961111 ubox
6 65 0.018900594 ubox
6 68 0.028376756 ubox
7 29 0.033530160 ubox
7 30 0.017541194 ubox
7 34 0.005572704 ubox
7 35 0.210248918 ubox
7 36 0.003998630 ubox
8 29 0.017685893 ubox
8 30 0.041803220 ubox
8 34 0.213662925 ubox
8 35 0.003605962 ubox
8 63 0.042700987 ubox
8 68 0.063071458 ubox
9 23 0.022647328 ubox
9 29 0.024650567 ubox
9 30 0.042367286 ubox
9 33 0.214117722 ubox
9 51 0.029081102 ubox
9 62 0.044684389 ubox
9 67 0.065635741 ubox
9 71 0.090038353 ubox
10 22 0.021011495 ubox
10 26 0.015447532 ubox
10 29 0.046511973 ubox
10 32 0.212113634 ubox
10 50 0.028045016 ubox
10 56 0.790043816 ubox
10 65 0.077508100 ubox
10 70 0.088823250 ubox
11 25 0.015859489 ubox
11 27 0.256551636 ubox
11 28 0.037438136 ubox
11 55 0.810707793 ubox
11 57 0.004892396 ubox
11 64 0.078332069 ubox
12 26 0.261383839 ubox
12 30 0.005984175 ubox
12 54 0.810724997 ubox
12 56 0.004247266 ubox
12 63 0.078033018 ubox
12 68 0.089811578 ubox
13 22 0.027363426 ubox
13 26 0.005686188 ubox
13 29 0.006018267 ubox
13 38 0.007382106 ubox
13 42 0.010382758 ubox
13 44 0.004333922 ubox
13 47 0.024732415 ubox
13 50 0.030275441 ubox
13 53 0.810929946 ubox
13 60 0.017931844 ubox
13 62 0.076351669 ubox
13 67 0.091971789 ubox
13 70 0.003952646 ubox
13 74 0.086906390 ubox
14 21 0.029070378 ubox
14 24 0.286939454 ubox
14 37 0.007268690 ubox
14 39 0.021395419 ubox
14 41 0.009966360 ubox
14 43 0.004227358 ubox
14 46 0.024704777 ubox
14 49 0.032365949 ubox
14 52 0.810337527 ubox
14 57 0.008954219 ubox
14 59 0.020360123 ubox
14 66 0.091348364 ubox
14 69 0.004185146 ubox
14 72 0.098359627 ubox
14 73 0.075816290 ubox
15 23 0.295134146 ubox
15 33 0.003579895 ubox
15 36 0.004504622 ubox
15 38 0.024337165 ubox
15 42 0.003878509 ubox
15 45 0.024589133 ubox
15 48 0.033257328 ubox
15 51 0.782310338 ubox
15 56 0.009275259 ubox
15 65 0.087193084 ubox
15 71 0.114058774 ubox
16 22 0.283139399 ubox
16 32 0.003553031 ubox
16 35 0.003956796 ubox
16 36 0.004526305 ubox
16 50 0.758667218 ubox
16 70 0.111812562 ubox
17 35 0.004468136 ubox
17 36 0.090405434 ubox
18 34 0.003356156 ubox
18 35 0.097608989 ubox
19 34 0.099110979 ubox
19 54 0.028061872 ubox
19 63 0.008817705 ubox
19 68 0.119882968 ubox
20 30 0.009124381 ubox
20 33 0.099420490 ubox
20 51 0.472045283 ubox
20 53 0.028063336 ubox
20 62 0.009025401 ubox
20 67 0.123524903 ubox
20 71 0.038565964 ubox
21 29 0.010001603 ubox
21 32 0.099089862 ubox
21 50 0.480454266 ubox
21 56 0.006823386 ubox
21 65 0.036100442 ubox
21 70 0.038549438 ubox
22 28 0.011147181 ubox
22 31 0.097144771 ubox
22 41 0.010246339 ubox
22 49 0.488165804 ubox
22 58 0.027745544 ubox
22 64 0.007848142 ubox
22 69 0.037974735 ubox
23 27 0.011979049 ubox
23 37 0.004556247 ubox
23 40 0.010484860 ubox
23 55 0.022749326 ubox
23 57 0.027736086 ubox
23 64 0.168729203 ubox
24 30 0.021848519 ubox
24 36 0.004600025 ubox
24 54 0.023103913 ubox
24 56 0.027122676 ubox
24 63 0.169105845 ubox
24 68 0.023241663 ubox
25 29 0.015237319 ubox
25 35 0.003905393 ubox
25 38 0.011172576 ubox
25 42 0.017620367 ubox
25 44 0.016861711 ubox
25 47 0.934393058 ubox
25 50 0.055903726 ubox
25 53 0.023258404 ubox
25 62 0.169120593 ubox
25 67 0.023463563 ubox
25 70 0.009025039 ubox
25 74 0.003221600 ubox
26 37 0.011130841 ubox
26 39 0.007418114 ubox
26 41 0.017411939 ubox
26 43 0.016855546 ubox
26 46 0.937140968 ubox
26 49 0.091779418 ubox
26 52 0.022955558 ubox
26 55 0.003786234 ubox
26 66 0.023301357 ubox
26 69 0.009536780 ubox
26 72 0.004956443 ubox
27 33 0.003829254 ubox
27 34 0.005721062 ubox
27 36 0.010447345 ubox
27 38 0.007472546 ubox
27 42 0.016585819 ubox
27 45 0.937653847 ubox
27 48 0.092514434 ubox
27 51 0.022396454 ubox
27 54 0.005555233 ubox
27 61 0.169618917 ubox
27 62 0.003173001 ubox
27 65 0.021458192 ubox
27 68 0.009808343 ubox
27 71 0.005930595 ubox
27 75 0.059738099 ubox
28 33 0.010284470 ubox
28 35 0.010271130 ubox
28 38 0.019964454 ubox
28 42 0.010911737 ubox
28 44 0.937593614 ubox
28 47 0.092543065 ubox
28 50 0.022061238 ubox
28 53 0.005623594 ubox
28 60 0.169698245 ubox
28 61 0.003421073 ubox
28 67 0.011390740 ubox
28 70 0.006548665 ubox
28 74 0.106152784 ubox
29 37 0.019634958 ubox
29 40 0.007290336 ubox
29 41 0.013940617 ubox
29 43 0.921623293 ubox
29 46 0.089773648 ubox
29 49 0.021249307 ubox
29 52 0.005522097 ubox
29 58 0.005482194 ubox
29 59 0.161950269 ubox
29 66 0.010318704 ubox
29 69 0.006417245 ubox
29 73 0.105830376 ubox
30 37 0.042545795 ubox
30 39 0.020401431 ubox
30 40 0.019839772 ubox
30 57 0.006411668 ubox
30 58 0.081115341 ubox
30 64 0.003778959 ubox
30 69 0.004458309 ubox
30 72 0.094668739 ubox
31 36 0.042057639 ubox
31 50 0.004583077 ubox
31 56 0.004987334 ubox
31 63 0.003786530 ubox
31 65 0.003278627 ubox
31 68 0.004763465 ubox
31 70 0.030624517 ubox
32 41 0.906800465 ubox
32 49 0.004684434 ubox
32 55 0.003800544 ubox
32 58 0.057164277 ubox
32 64 0.003183252 ubox
32 69 0.029294670 ubox
33 40 0.924141313 ubox
33 57 0.062008373 ubox
33 59 0.030400084 ubox
33 73 0.006437681 ubox
34 39 0.844307009 ubox
34 40 0.016893468 ubox
34 41 0.025316799 ubox
34 58 0.028849778 ubox
34 59 0.052734764 ubox
34 72 0.006328719 ubox
35 39 0.031389447 ubox
35 40 0.024559379 ubox
35 41 0.010424525 ubox
35 57 0.021656348 ubox
35 58 0.140200617 ubox
35 72 0.003453162 ubox
36 40 0.009800744 ubox
36 43 0.009353259 ubox
36 46 0.010227291 ubox
36 57 0.158605006 ubox
36 58 0.005052311 ubox
36 66 0.155645040 ubox
37 42 0.019484120 ubox
37 44 0.095158110 ubox
37 45 0.011302797 ubox
37 48 0.003407696 ubox
37 53 0.027858380 ubox
37 56 0.174209813 ubox
37 60 0.014504329 ubox
37 65 0.185765730 ubox
37 74 0.003516161 ubox
38 43 0.096022171 ubox
38 52 0.027796497 ubox
38 55 0.175547534 ubox
38 59 0.014626872 ubox
38 64 0.190663444 ubox
38 73 0.003516243 ubox
39 54 0.175505416 ubox
39 63 0.190614777 ubox
39 68 0.004279807 ubox
40 51 0.032578667 ubox
40 53 0.175287236 ubox
40 62 0.190045757 ubox
40 67 0.004466871 ubox
41 50 0.032170666 ubox
41 56 0.015833193 ubox
41 65 0.007891773 ubox
42 52 0.171525139 ubox
42 55 0.015894892 ubox
42 57 0.004327443 ubox
42 64 0.008069032 ubox
43 51 0.167290883 ubox
43 53 0.017876581 ubox
43 54 0.004390556 ubox
43 56 0.004354806 ubox
43 60 0.198825279 ubox
44 52 0.018599581 ubox
44 55 0.004226365 ubox
44 59 0.199064738 ubox
45 57 0.198969283 ubox
46 56 0.198830347 ubox
47 55 0.192068754 ubox
48 55 0.051566528 ubox
48 57 0.023462932 ubox
48 64 0.010658925 ubox
49 54 0.062470807 ubox
49 56 0.023066139 ubox
49 63 0.010573168 ubox
50 55 0.021367745 ubox
50 58 0.009498563 ubox
51 57 0.010022695 ubox
52 56 0.006197548 ubox
52 60 0.069874532 ubox
52 74 0.510728066 ubox
53 59 0.069993278 ubox
53 73 0.511754246 ubox
54 58 0.063057496 ubox
54 72 0.511587432 ubox
55 67 0.006223634 ubox
55 70 0.009451491 ubox
55 71 0.511374001 ubox
56 66 0.008033786 ubox
56 69 0.044023407 ubox
56 72 0.040209155 ubox
57 63 0.005659204 ubox
57 65 0.008349688 ubox
57 68 0.038113010 ubox
57 71 0.093314361 ubox
58 68 0.504312544 ubox
58 70 0.092148301 ubox
59 65 0.059532316 ubox
59 67 0.503923164 ubox
59 74 0.224418775 ubox
60 64 0.069603177 ubox
60 73 0.206532093 ubox
62 73 0.676325342 ubox
63 69 0.017490862 ubox
63 72 0.704558162 ubox
64 68 0.015750012 ubox
64 70 0.021993655 ubox
64 71 0.708132902 ubox
64 74 0.047058155 ubox
65 69 0.041053191 ubox
65 73 0.046565409 ubox
67 73 0.049882379 ubox
68 72 0.045265218 ubox
10 56 0.9500000 lbox
11 55 0.9500000 lbox
12 54 0.9500000 lbox
13 53 0.9500000 lbox
14 52 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
62 73 0.9500000 lbox
63 72 0.9500000 lbox
64 71 0.9500000 lbox
showpage
end
%%EOF
