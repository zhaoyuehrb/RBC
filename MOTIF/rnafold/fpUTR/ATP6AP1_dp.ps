%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP6AP1)
} def

/sequence { (\
GGGGGCAACGGUCACCUGAUCUGCGGCUGUCGAGGCCGCUGAGGCAGUGGAGGCUGAGGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.007352437 ubox
1 17 0.016219117 ubox
1 31 0.009562799 ubox
1 61 0.008025936 ubox
2 15 0.007344861 ubox
2 16 0.017189696 ubox
2 17 0.003384903 ubox
2 30 0.009576925 ubox
2 60 0.006272653 ubox
2 61 0.015335545 ubox
3 15 0.017186240 ubox
3 16 0.003562655 ubox
3 60 0.010958499 ubox
3 61 0.060836082 ubox
4 13 0.018240068 ubox
4 15 0.003560419 ubox
4 28 0.013956780 ubox
4 37 0.008170261 ubox
4 55 0.013037687 ubox
4 60 0.048462503 ubox
4 61 0.910699707 ubox
5 12 0.018362747 ubox
5 24 0.006471135 ubox
5 27 0.014346331 ubox
5 36 0.008184308 ubox
5 54 0.013716678 ubox
5 60 0.997486024 ubox
6 11 0.018160452 ubox
6 23 0.006490342 ubox
6 26 0.014356127 ubox
6 35 0.008191250 ubox
6 53 0.013728959 ubox
6 56 0.004001835 ubox
6 59 0.998877491 ubox
7 22 0.006037614 ubox
7 55 0.003829150 ubox
9 23 0.014064863 ubox
9 32 0.008127176 ubox
9 56 0.996958608 ubox
10 21 0.011878774 ubox
10 22 0.011627143 ubox
10 31 0.008135928 ubox
10 55 0.998537186 ubox
10 61 0.003318471 ubox
11 20 0.012104411 ubox
11 21 0.011524832 ubox
11 30 0.007878771 ubox
11 54 0.999368140 ubox
11 60 0.003683448 ubox
12 19 0.016329581 ubox
12 50 0.097096657 ubox
12 51 0.070699903 ubox
12 53 0.991284207 ubox
12 59 0.003671789 ubox
13 18 0.016395164 ubox
13 29 0.008002087 ubox
13 49 0.237891950 ubox
13 50 0.103995188 ubox
13 52 0.958640571 ubox
13 58 0.003642689 ubox
14 28 0.007941478 ubox
14 48 0.272474993 ubox
15 26 0.005261746 ubox
15 35 0.005368752 ubox
15 44 0.021542052 ubox
15 47 0.207960553 ubox
15 50 0.827183206 ubox
15 53 0.005498924 ubox
16 25 0.005259744 ubox
16 26 0.006294172 ubox
16 34 0.005392887 ubox
16 43 0.022081283 ubox
16 44 0.017866021 ubox
16 47 0.604162074 ubox
16 49 0.764666873 ubox
16 50 0.022086193 ubox
16 52 0.005760161 ubox
17 25 0.006333873 ubox
17 33 0.004692084 ubox
17 42 0.019853928 ubox
17 43 0.019193382 ubox
17 46 0.842300477 ubox
17 49 0.020051241 ubox
17 51 0.005656508 ubox
18 24 0.006461447 ubox
18 31 0.005264023 ubox
18 45 0.870702134 ubox
18 48 0.020249088 ubox
19 30 0.005259853 ubox
19 48 0.013608637 ubox
20 29 0.005189632 ubox
20 42 0.887965062 ubox
20 44 0.383353377 ubox
20 47 0.010218306 ubox
20 59 0.007801630 ubox
21 41 0.885811934 ubox
21 43 0.391712468 ubox
21 44 0.086512121 ubox
21 47 0.011681564 ubox
21 58 0.010633572 ubox
21 59 0.004876040 ubox
22 41 0.041645415 ubox
22 42 0.361385691 ubox
22 43 0.085444499 ubox
22 46 0.011762497 ubox
22 57 0.010613217 ubox
22 58 0.004572956 ubox
23 39 0.997176296 ubox
23 40 0.014030583 ubox
23 45 0.009570580 ubox
24 38 0.999579013 ubox
24 41 0.012469468 ubox
24 44 0.008817101 ubox
24 56 0.012302227 ubox
25 37 0.999640162 ubox
25 40 0.012930525 ubox
25 55 0.012527432 ubox
26 36 0.999652415 ubox
26 39 0.012952877 ubox
26 48 0.004381020 ubox
26 54 0.012550155 ubox
27 34 0.080245808 ubox
27 35 0.996396546 ubox
27 38 0.012940412 ubox
27 47 0.004494315 ubox
27 53 0.012546355 ubox
28 33 0.112315128 ubox
28 34 0.981555109 ubox
28 46 0.004500204 ubox
28 52 0.012362960 ubox
29 36 0.012539112 ubox
29 45 0.004501062 ubox
29 60 0.011186652 ubox
30 35 0.011951306 ubox
30 44 0.004498134 ubox
30 50 0.008969200 ubox
30 59 0.011199057 ubox
31 43 0.004489124 ubox
31 49 0.012095333 ubox
31 58 0.011242493 ubox
32 48 0.011749388 ubox
34 40 0.003297063 ubox
34 55 0.011427474 ubox
35 39 0.003230793 ubox
35 45 0.012600002 ubox
35 54 0.011491402 ubox
36 44 0.012609711 ubox
36 50 0.010108914 ubox
36 53 0.011222894 ubox
37 43 0.012608751 ubox
37 49 0.010492025 ubox
37 52 0.010881753 ubox
38 48 0.013546203 ubox
38 60 0.010053530 ubox
39 47 0.013775680 ubox
39 50 0.006708871 ubox
39 59 0.010074881 ubox
40 46 0.014415902 ubox
40 49 0.006670494 ubox
40 58 0.010114126 ubox
41 45 0.014295410 ubox
41 48 0.004418768 ubox
43 55 0.010570638 ubox
43 61 0.003993822 ubox
44 54 0.010619095 ubox
44 60 0.004447085 ubox
45 53 0.010617652 ubox
45 56 0.015856044 ubox
45 59 0.004071906 ubox
46 55 0.016302060 ubox
47 54 0.016324335 ubox
48 53 0.016133923 ubox
52 61 0.007435486 ubox
53 60 0.008265631 ubox
54 59 0.008252096 ubox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
6 59 0.9500000 lbox
9 56 0.9500000 lbox
10 55 0.9500000 lbox
11 54 0.9500000 lbox
12 53 0.9500000 lbox
13 52 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
