%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POU3F1)
} def

/sequence { (\
CGGCGGCGGCGGCGCGGCGCAGGGCGCGGGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.269044243 ubox
1 11 0.041836220 ubox
1 14 0.030640160 ubox
1 16 0.017864699 ubox
1 19 0.034984304 ubox
1 26 0.004993600 ubox
1 28 0.029803563 ubox
1 33 0.027830998 ubox
2 7 0.271583100 ubox
2 10 0.033718418 ubox
2 13 0.040782888 ubox
2 15 0.015757331 ubox
2 18 0.035705306 ubox
2 25 0.005992461 ubox
2 27 0.029209843 ubox
2 32 0.026236900 ubox
3 10 0.104323541 ubox
3 13 0.015906088 ubox
3 15 0.036925812 ubox
3 18 0.117822180 ubox
3 20 0.094227845 ubox
3 25 0.032454320 ubox
3 27 0.028532272 ubox
3 32 0.032162214 ubox
3 35 0.798703135 ubox
4 9 0.107653083 ubox
4 11 0.052464539 ubox
4 12 0.015174877 ubox
4 14 0.037941931 ubox
4 16 0.038714366 ubox
4 17 0.118862022 ubox
4 19 0.094336177 ubox
4 24 0.032481414 ubox
4 26 0.029347442 ubox
4 28 0.006465208 ubox
4 31 0.033109693 ubox
4 33 0.028194312 ubox
4 34 0.807603128 ubox
5 10 0.052792122 ubox
5 13 0.030171632 ubox
5 15 0.036358795 ubox
5 18 0.093487496 ubox
5 25 0.028745501 ubox
5 27 0.006118812 ubox
5 32 0.023632081 ubox
6 13 0.043200313 ubox
6 15 0.127065499 ubox
6 18 0.012522129 ubox
6 20 0.039725870 ubox
6 25 0.008418581 ubox
6 27 0.017505700 ubox
6 32 0.809592694 ubox
6 35 0.417474954 ubox
7 12 0.049044725 ubox
7 14 0.127882752 ubox
7 16 0.090713746 ubox
7 17 0.017236384 ubox
7 19 0.039792021 ubox
7 24 0.010072040 ubox
7 26 0.017600153 ubox
7 28 0.008399898 ubox
7 31 0.809753029 ubox
7 33 0.029997353 ubox
7 34 0.422101119 ubox
8 13 0.127365082 ubox
8 15 0.089885966 ubox
8 18 0.039576441 ubox
8 25 0.017209648 ubox
8 27 0.007923156 ubox
8 32 0.029319874 ubox
9 15 0.022610384 ubox
9 18 0.005046401 ubox
9 20 0.027227281 ubox
9 25 0.008600748 ubox
9 27 0.016515637 ubox
9 32 0.424990559 ubox
9 35 0.334222954 ubox
10 14 0.024931296 ubox
10 16 0.039470041 ubox
10 17 0.006521912 ubox
10 19 0.027241641 ubox
10 24 0.009302108 ubox
10 26 0.016581164 ubox
10 28 0.308748629 ubox
10 31 0.424587255 ubox
10 33 0.013894063 ubox
10 34 0.337993121 ubox
11 15 0.036942505 ubox
11 18 0.026971991 ubox
11 25 0.015693573 ubox
11 27 0.220462803 ubox
11 32 0.012962134 ubox
12 18 0.003635212 ubox
12 20 0.022001671 ubox
12 25 0.014913052 ubox
12 27 0.791894345 ubox
12 32 0.346423729 ubox
12 35 0.027610521 ubox
13 17 0.004858130 ubox
13 19 0.022015856 ubox
13 24 0.015632383 ubox
13 26 0.821987875 ubox
13 28 0.397963579 ubox
13 31 0.346532258 ubox
13 33 0.083543881 ubox
13 34 0.020403629 ubox
14 18 0.020597330 ubox
14 20 0.008900949 ubox
14 25 0.822151339 ubox
14 27 0.400678076 ubox
14 32 0.090807360 ubox
14 35 0.008080499 ubox
15 19 0.008850997 ubox
15 24 0.822120962 ubox
15 26 0.400338258 ubox
15 28 0.082308946 ubox
15 31 0.090685380 ubox
15 33 0.011864227 ubox
15 34 0.008337892 ubox
16 25 0.345195495 ubox
16 27 0.064154058 ubox
16 32 0.012209316 ubox
17 25 0.206668815 ubox
17 27 0.359323539 ubox
17 32 0.008106589 ubox
18 24 0.289211995 ubox
18 26 0.363222958 ubox
18 28 0.051117709 ubox
18 31 0.007653777 ubox
18 33 0.005246584 ubox
19 25 0.363949192 ubox
19 27 0.058491156 ubox
19 32 0.013615891 ubox
19 35 0.054766253 ubox
20 24 0.361334332 ubox
20 26 0.058473215 ubox
20 31 0.013617792 ubox
20 34 0.055106732 ubox
24 32 0.098261872 ubox
24 35 0.046391841 ubox
25 31 0.098361274 ubox
25 33 0.097364337 ubox
25 34 0.041469596 ubox
26 32 0.101193901 ubox
26 35 0.043935408 ubox
27 31 0.100478064 ubox
27 33 0.022858361 ubox
27 34 0.044215129 ubox
28 32 0.021818474 ubox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
showpage
end
%%EOF
