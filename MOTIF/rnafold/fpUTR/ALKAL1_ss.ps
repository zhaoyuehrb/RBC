%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGGCUUCGGCACACUGAGGACCGAGUCCCAGUGCAGCUCCAGCCGACCCCCGGGACGUAGACAAGGGCAGGCGCGCGGUGAAGACUGCGGCCGGCCGCGUAGCCGCGCUGUGGUCCCGCUGGCCUUCUCUUGGGCCGCGCACCCUCCGGACCUGCGUCGGGAUCCUCCCGGAGUCUCCCGCUCUCUCCUCCCGGCUUGCGAAC\
) } def
/len { sequence length } bind def

/coor [
[-5.70925856 265.19833374]
[-15.37828159 264.43383789]
[-24.66694069 261.67346191]
[-33.16833115 257.04208374]
[-43.52954483 267.88851929]
[-53.89075851 278.73495483]
[-64.25197601 289.58139038]
[-64.06434631 305.15710449]
[-74.72660065 316.00933838]
[-89.57681274 316.09222412]
[-99.93802643 326.93865967]
[-110.29924011 337.78509521]
[-114.23867035 355.77105713]
[-131.25810242 360.04272461]
[-141.45269775 371.04589844]
[-151.64730835 382.04910278]
[-161.84190369 393.05227661]
[-172.03651428 404.05545044]
[-175.57533264 412.48092651]
[-182.47146606 415.14721680]
[-192.83268738 425.99365234]
[-203.19389343 436.84008789]
[-213.55511475 447.68652344]
[-220.12387085 463.31622314]
[-236.96118164 461.33090210]
[-239.71447754 444.60202026]
[-224.40155029 437.32531738]
[-214.04032898 426.47885132]
[-203.67912292 415.63241577]
[-193.31790161 404.78598022]
[-183.03970337 393.86087036]
[-172.84509277 382.85766602]
[-162.65049744 371.85449219]
[-152.45588684 360.85131836]
[-142.26129150 349.84811401]
[-142.40821838 337.75000000]
[-134.00152588 328.49932861]
[-121.14568329 327.42388916]
[-110.78446960 316.57742310]
[-100.42324829 305.73098755]
[-101.01963043 290.89254761]
[-90.66639709 279.74511719]
[-75.09841156 279.22018433]
[-64.73719788 268.37374878]
[-54.37598419 257.52731323]
[-44.01477051 246.68086243]
[-52.50997925 227.92407227]
[-52.01539230 207.29415894]
[-42.59014130 188.88603210]
[-26.06992722 176.37055969]
[-5.70959568 172.26251221]
[14.45808792 177.41539001]
[23.42226219 165.38859558]
[32.38643646 153.36181641]
[41.35060883 141.33502197]
[50.31478119 129.30824280]
[92.93498230 82.45355225]
[95.21369171 67.62764740]
[97.49240112 52.80174255]
[99.77111053 37.97583771]
[102.04982758 23.14993095]
[104.32853699 8.32402611]
[90.17377472 -4.55302858]
[86.66307831 -23.21124649]
[95.03627777 -40.08332443]
[111.75041199 -48.43697357]
[113.34867096 -63.35158539]
[114.94692993 -78.26618958]
[116.54518890 -93.18080139]
[109.23630524 -101.24288177]
[107.60674286 -111.77994537]
[111.95616150 -121.27376556]
[120.62781525 -126.68801117]
[122.68016815 -141.54693604]
[124.73252106 -156.40586853]
[126.78487396 -171.26480103]
[95.66884613 -202.31617737]
[93.84333038 -217.20468140]
[92.01781464 -232.09317017]
[90.19229889 -246.98167419]
[87.45172119 -250.36116028]
[86.07049561 -254.06475830]
[85.98332977 -257.62457275]
[86.97949219 -260.64218140]
[88.73807526 -262.82998657]
[87.82361603 -277.80209351]
[86.90915680 -292.77416992]
[85.99469757 -307.74627686]
[85.08023834 -322.71838379]
[84.16577148 -337.69049072]
[83.25131226 -352.66256714]
[82.33685303 -367.63467407]
[81.42239380 -382.60678101]
[80.39379883 -397.57147217]
[79.25112152 -412.52789307]
[78.10844421 -427.48431396]
[76.96577454 -442.44070435]
[64.80990601 -452.54074097]
[63.43942261 -468.28549194]
[73.66740417 -480.33389282]
[89.42576599 -481.53784180]
[101.36535645 -471.18304443]
[102.40262604 -455.41284180]
[91.92218781 -443.58337402]
[93.06485748 -428.62698364]
[94.20753479 -413.67056274]
[95.35021210 -398.71414185]
[98.99566650 -392.28170776]
[96.39449310 -383.52124023]
[97.30895233 -368.54913330]
[98.22341156 -353.57705688]
[99.13787079 -338.60494995]
[100.05233765 -323.63284302]
[100.96679688 -308.66073608]
[101.88125610 -293.68862915]
[102.79571533 -278.71655273]
[103.71017456 -263.74444580]
[105.08079529 -248.80718994]
[106.90631866 -233.91870117]
[108.73183441 -219.03019714]
[110.55735016 -204.14169312]
[124.60494232 -198.88002014]
[138.65127563 -193.61880493]
[149.80865479 -203.64442444]
[160.96601868 -213.67004395]
[172.12339783 -223.69566345]
[183.28076172 -233.72128296]
[183.87356567 -249.51445007]
[195.51684570 -260.20135498]
[211.30285645 -259.44158936]
[221.86604309 -247.68597412]
[220.93945312 -231.90887451]
[209.07281494 -221.47056580]
[193.30638123 -222.56391907]
[182.14901733 -212.53829956]
[170.99163818 -202.51268005]
[159.83427429 -192.48706055]
[148.67689514 -182.46144104]
[141.64379883 -169.21244812]
[139.59144592 -154.35351562]
[137.53910828 -139.49458313]
[135.48675537 -124.63565826]
[144.06611633 -107.30957031]
[131.45979309 -91.58254242]
[129.86154175 -76.66793823]
[128.26327515 -61.75332642]
[126.66502380 -46.83871841]
[136.20973206 -41.05104065]
[142.93450928 -32.07749939]
[145.83631897 -21.19263840]
[144.45857239 -9.96047592]
[138.96243286 -0.00977703]
[130.10906982 7.20212650]
[119.15444183 10.60273647]
[116.87573242 25.42864227]
[114.59702301 40.25454712]
[112.31830597 55.08045197]
[110.03959656 69.90635681]
[107.76088715 84.73226166]
[115.39257050 97.64572144]
[129.47924805 102.79990387]
[143.56591797 107.95407867]
[157.65260315 113.10826111]
[171.73927307 118.26244354]
[188.69158936 118.02676392]
[193.61091614 134.25132751]
[179.38221741 143.46981812]
[166.58509827 132.34912109]
[152.49841309 127.19493866]
[138.41174316 122.04075623]
[124.32506561 116.88658142]
[110.23838806 111.73239899]
[102.41066742 124.52797699]
[113.41384888 134.72257996]
[124.41703796 144.91717529]
[135.42022705 155.11178589]
[151.44190979 155.93955994]
[160.66656494 169.06530762]
[156.01783752 184.42007446]
[141.06181335 190.22499084]
[127.27149200 182.02703857]
[125.22561646 166.11497498]
[114.22243500 155.92036438]
[103.21924591 145.72576904]
[92.21606445 135.53115845]
[84.74744415 136.21647644]
[93.40313721 148.46714783]
[87.12168121 162.08856201]
[72.18445587 163.45947266]
[63.52853012 151.20895386]
[69.81019592 137.58709717]
[62.34156799 138.27241516]
[53.37739563 150.29919434]
[44.41322327 162.32598877]
[35.44904709 174.35276794]
[26.48487473 186.37956238]
[32.49180603 194.12127686]
[36.74933243 202.93679810]
[39.07384872 212.43728638]
[39.36692810 222.20455933]
[37.61947250 231.80950928]
[33.91194534 240.83091736]
[28.41068649 248.87400818]
[21.36043930 255.58763123]
[13.07347107 260.67962646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 46]
[5 45]
[6 44]
[7 43]
[10 40]
[11 39]
[12 38]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[20 30]
[21 29]
[22 28]
[23 27]
[52 196]
[53 195]
[54 194]
[55 193]
[56 192]
[57 159]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[66 147]
[67 146]
[68 145]
[69 144]
[73 142]
[74 141]
[75 140]
[76 139]
[77 121]
[78 120]
[79 119]
[80 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 107]
[95 106]
[96 105]
[97 104]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[160 172]
[161 171]
[162 170]
[163 169]
[164 168]
[173 185]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
