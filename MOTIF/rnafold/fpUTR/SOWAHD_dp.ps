%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SOWAHD)
} def

/sequence { (\
GGGAAGGGCAGCUAACGCUGGACACUGGGACGGCCGCGGCGGCAGCUUCAAGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.012478874 ubox
1 48 0.004681801 ubox
1 49 0.045608533 ubox
1 55 0.798466346 ubox
2 25 0.013979275 ubox
2 26 0.010552953 ubox
2 47 0.006935715 ubox
2 48 0.040673902 ubox
2 49 0.057991822 ubox
2 54 0.807579916 ubox
2 55 0.297215944 ubox
3 25 0.011686944 ubox
3 46 0.007487855 ubox
3 47 0.016456323 ubox
3 48 0.052225320 ubox
3 49 0.318968477 ubox
3 54 0.300469819 ubox
4 47 0.034977205 ubox
4 48 0.317183094 ubox
5 26 0.027179005 ubox
5 47 0.296034313 ubox
5 48 0.023048541 ubox
6 25 0.028926667 ubox
6 46 0.289256289 ubox
6 47 0.023553866 ubox
6 48 0.214033306 ubox
6 49 0.194757158 ubox
6 55 0.085269155 ubox
7 12 0.003257041 ubox
7 19 0.004312276 ubox
7 26 0.004720277 ubox
7 46 0.021290595 ubox
7 47 0.277794713 ubox
7 48 0.165993308 ubox
7 49 0.817863296 ubox
7 54 0.085875565 ubox
7 55 0.024254314 ubox
8 18 0.004506622 ubox
8 25 0.005077690 ubox
8 43 0.271537872 ubox
8 46 0.297387847 ubox
8 47 0.055966266 ubox
8 48 0.804131214 ubox
8 54 0.024519557 ubox
9 17 0.004508628 ubox
9 20 0.067819511 ubox
9 42 0.270652223 ubox
9 45 0.298759565 ubox
10 19 0.068128882 ubox
10 47 0.891061743 ubox
10 48 0.014899166 ubox
11 18 0.068178633 ubox
11 40 0.271310504 ubox
11 43 0.311492308 ubox
11 46 0.907038773 ubox
12 17 0.068063569 ubox
12 39 0.272304982 ubox
12 42 0.311923365 ubox
12 45 0.907297089 ubox
13 38 0.262183005 ubox
13 41 0.303171630 ubox
13 44 0.903832796 ubox
16 32 0.012686314 ubox
16 36 0.090591455 ubox
16 38 0.303903586 ubox
16 41 0.909519874 ubox
17 31 0.012717951 ubox
17 34 0.262594452 ubox
17 35 0.064484043 ubox
17 37 0.303710938 ubox
17 40 0.910363104 ubox
17 43 0.027459357 ubox
17 46 0.006946742 ubox
18 28 0.005610286 ubox
18 29 0.012346279 ubox
18 33 0.270847672 ubox
18 36 0.297024200 ubox
18 39 0.910354233 ubox
18 42 0.027475142 ubox
18 45 0.006968647 ubox
19 27 0.008730204 ubox
19 28 0.012345109 ubox
19 32 0.271209372 ubox
19 36 0.072125195 ubox
19 38 0.908309668 ubox
19 41 0.027448314 ubox
19 44 0.006971194 ubox
20 26 0.017052091 ubox
20 31 0.271180470 ubox
20 35 0.305158117 ubox
20 37 0.904248494 ubox
20 40 0.027369492 ubox
20 43 0.006971210 ubox
21 25 0.025704316 ubox
21 34 0.305657250 ubox
21 49 0.007184226 ubox
21 54 0.005597836 ubox
22 48 0.007141078 ubox
25 33 0.605883721 ubox
25 39 0.023559909 ubox
25 45 0.012299717 ubox
25 52 0.029003727 ubox
26 32 0.605542455 ubox
26 36 0.671399836 ubox
26 38 0.025070622 ubox
26 44 0.012349760 ubox
26 50 0.031323880 ubox
26 51 0.025807003 ubox
27 31 0.577529265 ubox
27 35 0.686906472 ubox
27 37 0.029266034 ubox
27 43 0.012035189 ubox
27 47 0.007987410 ubox
27 48 0.006745857 ubox
27 49 0.037910508 ubox
27 55 0.009816557 ubox
28 34 0.686605739 ubox
28 35 0.077112093 ubox
28 46 0.008643244 ubox
28 47 0.009651693 ubox
28 48 0.036827646 ubox
28 49 0.024438018 ubox
28 54 0.009922979 ubox
29 34 0.078909930 ubox
29 46 0.010763886 ubox
29 47 0.031274536 ubox
29 48 0.023930724 ubox
29 49 0.026834560 ubox
30 47 0.020458572 ubox
30 48 0.026532656 ubox
31 38 0.010557447 ubox
32 37 0.010773925 ubox
32 47 0.033620921 ubox
33 40 0.007472902 ubox
33 43 0.055133065 ubox
33 46 0.035828173 ubox
34 39 0.007661362 ubox
34 42 0.055222972 ubox
34 45 0.035843342 ubox
35 41 0.055223965 ubox
36 40 0.051662803 ubox
36 43 0.038050517 ubox
37 42 0.038076707 ubox
38 47 0.007346386 ubox
39 46 0.008101873 ubox
40 45 0.008340433 ubox
48 52 0.003902959 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
10 47 0.9500000 lbox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
13 44 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
