%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDR3)
} def

/sequence { (\
GGUCCAAUCGGCUGGGAGCCUCGUGGAGGCUGAGAUUGCUUCACCUGUGGUAUCAGACAUCACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.108396036 ubox
1 13 0.182695943 ubox
1 20 0.290451553 ubox
1 21 0.008456924 ubox
1 22 0.022491543 ubox
1 31 0.026006371 ubox
1 37 0.014354734 ubox
1 40 0.044050948 ubox
1 41 0.008281007 ubox
1 42 0.176565587 ubox
1 45 0.636944432 ubox
1 46 0.015050367 ubox
1 54 0.116174424 ubox
1 61 0.050875215 ubox
2 8 0.104894763 ubox
2 12 0.194081423 ubox
2 19 0.290751446 ubox
2 20 0.011004455 ubox
2 21 0.021095222 ubox
2 30 0.028749937 ubox
2 36 0.017225312 ubox
2 39 0.050599626 ubox
2 40 0.011134671 ubox
2 41 0.166496103 ubox
2 44 0.637645305 ubox
2 45 0.019958087 ubox
2 51 0.004928548 ubox
2 53 0.116334905 ubox
2 58 0.052227775 ubox
2 60 0.046245445 ubox
2 63 0.026478849 ubox
2 66 0.037903316 ubox
3 7 0.097164465 ubox
3 11 0.165755927 ubox
3 16 0.269057604 ubox
3 17 0.141450993 ubox
3 18 0.230135208 ubox
3 27 0.398785925 ubox
3 29 0.021631778 ubox
3 35 0.017444655 ubox
3 38 0.035499834 ubox
3 43 0.589768310 ubox
3 52 0.114743014 ubox
3 57 0.051239084 ubox
3 59 0.040941050 ubox
3 62 0.023358274 ubox
3 65 0.034650983 ubox
4 10 0.164683320 ubox
4 11 0.129784245 ubox
4 14 0.003519855 ubox
4 15 0.492672243 ubox
4 16 0.169966500 ubox
4 25 0.014598584 ubox
4 26 0.491334418 ubox
4 28 0.009374221 ubox
4 29 0.005030771 ubox
4 34 0.017091028 ubox
4 50 0.117095064 ubox
4 56 0.047376611 ubox
5 10 0.130948926 ubox
5 14 0.495827055 ubox
5 15 0.163632869 ubox
5 25 0.518087259 ubox
5 28 0.005063779 ubox
5 32 0.009269460 ubox
5 38 0.494772857 ubox
5 49 0.117114171 ubox
6 13 0.465804206 ubox
6 24 0.512861795 ubox
6 31 0.006942175 ubox
6 37 0.497367455 ubox
6 41 0.076913503 ubox
6 46 0.003336535 ubox
6 48 0.104824794 ubox
7 24 0.036868329 ubox
7 36 0.497536896 ubox
7 40 0.070135540 ubox
7 48 0.036023556 ubox
7 51 0.022229498 ubox
7 53 0.015207810 ubox
7 60 0.007541845 ubox
8 15 0.016405529 ubox
8 16 0.015551579 ubox
8 17 0.033210867 ubox
8 23 0.046774817 ubox
8 27 0.009855443 ubox
8 33 0.033916187 ubox
8 35 0.497478385 ubox
8 47 0.047021018 ubox
8 50 0.022964834 ubox
8 52 0.013924912 ubox
8 57 0.004160661 ubox
8 59 0.006472540 ubox
9 14 0.030695875 ubox
9 15 0.023517251 ubox
9 16 0.039798883 ubox
9 23 0.023947181 ubox
9 25 0.008812250 ubox
9 26 0.010994851 ubox
9 32 0.035880733 ubox
9 34 0.496182682 ubox
9 38 0.103448999 ubox
9 47 0.071035345 ubox
9 49 0.023024632 ubox
9 56 0.003891899 ubox
10 20 0.589315418 ubox
10 21 0.004784775 ubox
10 22 0.013054285 ubox
10 24 0.003897183 ubox
10 31 0.040680669 ubox
10 37 0.103106586 ubox
10 40 0.193314403 ubox
10 41 0.007742343 ubox
10 42 0.011120026 ubox
10 45 0.086506154 ubox
10 46 0.070404794 ubox
10 48 0.016964657 ubox
10 61 0.015239388 ubox
11 19 0.590251176 ubox
11 20 0.005150956 ubox
11 21 0.006146526 ubox
11 24 0.011899227 ubox
11 30 0.041226107 ubox
11 36 0.099069267 ubox
11 39 0.203909505 ubox
11 41 0.003388764 ubox
11 44 0.086623827 ubox
11 45 0.070393410 ubox
11 48 0.022536594 ubox
11 51 0.014534251 ubox
11 60 0.014754737 ubox
12 18 0.590111905 ubox
12 23 0.012196565 ubox
12 29 0.041039751 ubox
12 34 0.122779882 ubox
12 38 0.203878399 ubox
12 47 0.026290632 ubox
12 50 0.014718171 ubox
12 56 0.095597243 ubox
13 17 0.531623316 ubox
13 23 0.009161337 ubox
13 25 0.003959282 ubox
13 27 0.003407443 ubox
13 28 0.039094886 ubox
13 32 0.041705810 ubox
13 33 0.124169976 ubox
13 43 0.097161403 ubox
13 47 0.010683448 ubox
13 49 0.013858803 ubox
13 55 0.096899952 ubox
13 59 0.004950525 ubox
13 62 0.003915513 ubox
13 64 0.005814402 ubox
14 20 0.019519674 ubox
14 21 0.010800046 ubox
14 22 0.031611131 ubox
14 24 0.011489310 ubox
14 31 0.019580471 ubox
14 37 0.011844594 ubox
14 40 0.009566197 ubox
14 41 0.023372808 ubox
14 42 0.096146065 ubox
14 45 0.085144122 ubox
14 46 0.057193131 ubox
14 48 0.003555866 ubox
14 54 0.097478075 ubox
14 58 0.006903345 ubox
14 61 0.006322666 ubox
14 63 0.008157890 ubox
15 19 0.019238532 ubox
15 20 0.011657649 ubox
15 21 0.031389757 ubox
15 22 0.009003690 ubox
15 30 0.013289604 ubox
15 31 0.058433542 ubox
15 36 0.009775237 ubox
15 37 0.006314252 ubox
15 39 0.010302448 ubox
15 40 0.032808465 ubox
15 41 0.085923589 ubox
15 42 0.071081401 ubox
15 44 0.084993967 ubox
15 45 0.072361885 ubox
15 46 0.005816871 ubox
15 53 0.095631383 ubox
15 54 0.024808743 ubox
15 60 0.004810284 ubox
15 61 0.005418561 ubox
16 20 0.030781581 ubox
16 21 0.007135810 ubox
16 22 0.022098789 ubox
16 30 0.027433856 ubox
16 36 0.008637250 ubox
16 37 0.005932721 ubox
16 39 0.039326334 ubox
16 40 0.077050820 ubox
16 41 0.075961918 ubox
16 42 0.042011545 ubox
16 44 0.072251725 ubox
16 45 0.008235864 ubox
16 53 0.024424223 ubox
16 54 0.025077758 ubox
16 60 0.003494796 ubox
16 61 0.008084237 ubox
17 21 0.019247044 ubox
17 31 0.714046805 ubox
17 36 0.004138848 ubox
17 37 0.009493171 ubox
17 40 0.080233122 ubox
17 41 0.027663804 ubox
17 46 0.004657168 ubox
17 53 0.024848571 ubox
17 60 0.006361423 ubox
18 24 0.025848538 ubox
18 30 0.733472879 ubox
18 36 0.006031622 ubox
18 39 0.082063666 ubox
18 40 0.003430995 ubox
18 45 0.005430363 ubox
18 48 0.003675167 ubox
18 51 0.105674472 ubox
19 23 0.025805540 ubox
19 26 0.027558542 ubox
19 29 0.734351097 ubox
19 38 0.081952173 ubox
19 47 0.003699282 ubox
19 50 0.107664636 ubox
20 25 0.029067248 ubox
20 28 0.734369562 ubox
20 34 0.079789435 ubox
20 49 0.107565918 ubox
21 25 0.003526894 ubox
21 27 0.733810167 ubox
21 29 0.003538133 ubox
21 33 0.080478074 ubox
21 35 0.018660770 ubox
22 26 0.727650105 ubox
22 28 0.004767848 ubox
22 32 0.080499271 ubox
22 34 0.019019150 ubox
22 47 0.085214920 ubox
22 49 0.003167758 ubox
23 30 0.070580785 ubox
23 31 0.033493252 ubox
23 44 0.337761077 ubox
23 46 0.058323008 ubox
23 58 0.003763976 ubox
23 60 0.006818662 ubox
23 63 0.178626379 ubox
23 66 0.009626637 ubox
24 29 0.069810499 ubox
24 32 0.015715487 ubox
24 43 0.336155809 ubox
24 57 0.003673029 ubox
24 59 0.007168672 ubox
24 62 0.178810769 ubox
24 64 0.012535791 ubox
24 65 0.008869600 ubox
25 31 0.017955855 ubox
25 42 0.295993072 ubox
25 45 0.037566792 ubox
25 48 0.007728112 ubox
25 58 0.007268136 ubox
25 61 0.178391197 ubox
25 63 0.014205499 ubox
26 30 0.018027530 ubox
26 41 0.247115519 ubox
26 42 0.299267738 ubox
26 44 0.032716148 ubox
26 60 0.160389161 ubox
26 61 0.020727657 ubox
27 40 0.236280476 ubox
27 41 0.363642523 ubox
27 46 0.198875571 ubox
27 60 0.024102011 ubox
28 39 0.192969942 ubox
28 40 0.405698622 ubox
28 41 0.007633889 ubox
28 42 0.010413264 ubox
28 45 0.390160265 ubox
28 46 0.028610488 ubox
28 61 0.038053070 ubox
29 36 0.004394866 ubox
29 39 0.432529897 ubox
29 41 0.003768269 ubox
29 44 0.390738509 ubox
29 45 0.041732061 ubox
29 60 0.036895744 ubox
30 38 0.453451795 ubox
30 56 0.258487915 ubox
31 38 0.008172414 ubox
31 43 0.380760943 ubox
31 55 0.260536227 ubox
31 59 0.007090939 ubox
31 62 0.011796717 ubox
31 64 0.014795819 ubox
32 37 0.026962837 ubox
32 41 0.218405307 ubox
32 42 0.455194810 ubox
32 54 0.264672155 ubox
32 58 0.012098526 ubox
32 61 0.024720815 ubox
32 63 0.025806138 ubox
33 40 0.261768265 ubox
33 41 0.436147882 ubox
33 46 0.013344887 ubox
33 53 0.254183720 ubox
33 60 0.024613052 ubox
34 39 0.288484240 ubox
34 40 0.377288393 ubox
34 41 0.024089206 ubox
34 42 0.224738963 ubox
34 45 0.015453396 ubox
34 54 0.060859127 ubox
34 61 0.050683321 ubox
35 40 0.030921299 ubox
35 41 0.222747475 ubox
35 51 0.238973916 ubox
35 53 0.060320336 ubox
35 60 0.050520747 ubox
36 50 0.251401356 ubox
36 52 0.043482988 ubox
36 56 0.008824566 ubox
36 57 0.013816074 ubox
36 59 0.044939849 ubox
36 65 0.012017161 ubox
37 43 0.022272492 ubox
37 49 0.249619739 ubox
37 52 0.082835973 ubox
37 55 0.011013527 ubox
37 56 0.013380287 ubox
37 59 0.023277316 ubox
37 64 0.014366643 ubox
38 42 0.026825764 ubox
38 48 0.255316092 ubox
38 51 0.094469493 ubox
38 54 0.011123834 ubox
38 58 0.031243518 ubox
38 61 0.003543413 ubox
38 63 0.014665907 ubox
39 47 0.255914406 ubox
39 50 0.095201325 ubox
39 56 0.048695307 ubox
40 49 0.094662650 ubox
40 55 0.046699349 ubox
40 56 0.006003894 ubox
40 57 0.003764820 ubox
40 65 0.003777717 ubox
41 50 0.010363431 ubox
41 55 0.006832381 ubox
41 57 0.005675045 ubox
42 49 0.012821280 ubox
42 56 0.005949194 ubox
43 48 0.010914927 ubox
43 51 0.061499748 ubox
44 50 0.063946878 ubox
45 49 0.063503872 ubox
45 56 0.098246853 ubox
46 55 0.099359081 ubox
46 59 0.050180875 ubox
46 62 0.027503785 ubox
46 64 0.844482069 ubox
47 54 0.099443705 ubox
47 58 0.057976363 ubox
47 60 0.053498255 ubox
47 61 0.031581727 ubox
47 63 0.935112233 ubox
47 66 0.005538569 ubox
48 52 0.005206730 ubox
48 55 0.011951000 ubox
48 57 0.057801892 ubox
48 59 0.064126110 ubox
48 62 0.935154715 ubox
48 64 0.009047289 ubox
48 65 0.004940616 ubox
49 54 0.013756430 ubox
49 58 0.065639987 ubox
49 61 0.935221956 ubox
49 63 0.010174169 ubox
50 58 0.083289675 ubox
50 60 0.920422493 ubox
50 63 0.006323479 ubox
51 57 0.084666237 ubox
51 59 0.903259935 ubox
51 62 0.006192942 ubox
52 60 0.017768666 ubox
53 59 0.023707451 ubox
1 45 0.9500000 lbox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
17 31 0.9500000 lbox
18 30 0.9500000 lbox
19 29 0.9500000 lbox
20 28 0.9500000 lbox
21 27 0.9500000 lbox
22 26 0.9500000 lbox
46 64 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
showpage
end
%%EOF
