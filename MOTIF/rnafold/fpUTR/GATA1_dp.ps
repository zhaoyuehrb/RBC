%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GATA1)
} def

/sequence { (\
GACACCCCCUGGGAUCACACUGAGCUUGCCACAUCCCCAAGGCGGCCGAACCCUCCGCAACCACCAGCCCAGGUUAAUCCCCAGAGGCUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.020625098 ubox
1 90 0.458914796 ubox
2 15 0.020483213 ubox
2 89 0.456586262 ubox
5 12 0.016676856 ubox
5 13 0.017120978 ubox
5 45 0.004273698 ubox
5 87 0.212033260 ubox
6 11 0.016597127 ubox
6 12 0.017171284 ubox
6 44 0.004381710 ubox
6 86 0.207468157 ubox
6 87 0.780725417 ubox
7 11 0.017053368 ubox
7 86 0.785635806 ubox
7 87 0.560076127 ubox
8 42 0.004676783 ubox
8 73 0.010174375 ubox
8 86 0.565517886 ubox
8 87 0.074578318 ubox
9 41 0.004740286 ubox
9 72 0.010245355 ubox
9 84 0.992570938 ubox
9 86 0.075052643 ubox
9 87 0.003664188 ubox
10 39 0.003470527 ubox
10 40 0.004066108 ubox
10 71 0.010262091 ubox
10 83 0.992387646 ubox
10 85 0.073310010 ubox
10 86 0.003631363 ubox
11 37 0.004961780 ubox
11 38 0.003853802 ubox
11 70 0.010264610 ubox
11 81 0.451990236 ubox
11 82 0.891513749 ubox
12 36 0.005152368 ubox
12 37 0.003642686 ubox
12 69 0.010254799 ubox
12 80 0.628523408 ubox
12 81 0.777267951 ubox
13 35 0.005321070 ubox
13 36 0.003409343 ubox
13 68 0.010104316 ubox
13 78 0.003211935 ubox
13 79 0.765297956 ubox
13 80 0.642271206 ubox
14 34 0.005449680 ubox
14 74 0.008630710 ubox
14 78 0.878387027 ubox
15 23 0.147854217 ubox
15 33 0.004957243 ubox
15 49 0.010438912 ubox
15 73 0.008511180 ubox
15 77 0.833208460 ubox
16 22 0.160756359 ubox
16 48 0.012137023 ubox
16 72 0.006527512 ubox
17 21 0.130370494 ubox
17 74 0.648860839 ubox
18 28 0.005078341 ubox
18 73 0.666079499 ubox
19 27 0.004815357 ubox
19 74 0.087956539 ubox
20 41 0.004488949 ubox
20 45 0.010667875 ubox
20 67 0.006990449 ubox
20 72 0.938105292 ubox
20 73 0.074810222 ubox
21 31 0.005882508 ubox
21 33 0.003242945 ubox
21 39 0.004556886 ubox
21 40 0.004317257 ubox
21 44 0.010824267 ubox
21 48 0.195394480 ubox
21 66 0.007024857 ubox
21 71 0.940409849 ubox
21 72 0.053280283 ubox
21 76 0.009968342 ubox
22 30 0.006602603 ubox
22 32 0.003598744 ubox
22 35 0.006481436 ubox
22 38 0.005054817 ubox
22 43 0.010668616 ubox
22 47 0.244034668 ubox
22 55 0.006518201 ubox
22 65 0.007022482 ubox
22 70 0.939943879 ubox
22 75 0.009471286 ubox
22 79 0.010365082 ubox
22 90 0.023664425 ubox
23 34 0.006487837 ubox
23 54 0.006788363 ubox
23 74 0.008832714 ubox
23 75 0.010688295 ubox
23 78 0.009897226 ubox
23 89 0.023752685 ubox
24 43 0.027949979 ubox
24 46 0.338274688 ubox
24 53 0.006065007 ubox
24 58 0.005762438 ubox
24 68 0.933265852 ubox
24 74 0.012585548 ubox
24 88 0.023766654 ubox
25 41 0.056859674 ubox
25 42 0.027444007 ubox
25 45 0.337200342 ubox
25 57 0.005762590 ubox
25 67 0.933339232 ubox
25 72 0.006159005 ubox
25 73 0.013061117 ubox
25 87 0.023731771 ubox
26 40 0.085889890 ubox
26 41 0.027246842 ubox
26 44 0.236474520 ubox
26 45 0.065758516 ubox
26 49 0.009176411 ubox
26 60 0.081808771 ubox
26 66 0.862824505 ubox
26 67 0.020853629 ubox
26 71 0.005799793 ubox
26 72 0.013036960 ubox
26 86 0.023371781 ubox
27 33 0.094767876 ubox
27 39 0.121522663 ubox
27 40 0.035493414 ubox
27 41 0.004601817 ubox
27 44 0.685847073 ubox
27 48 0.012599675 ubox
27 49 0.004070830 ubox
27 59 0.166294526 ubox
27 63 0.100642457 ubox
27 66 0.140417947 ubox
27 71 0.012906704 ubox
27 85 0.021138280 ubox
28 32 0.103536037 ubox
28 38 0.125936250 ubox
28 43 0.895988643 ubox
28 46 0.051327863 ubox
28 47 0.009320906 ubox
28 58 0.166985467 ubox
28 62 0.098070653 ubox
28 65 0.193283702 ubox
28 68 0.008066474 ubox
28 70 0.012611070 ubox
28 74 0.006871262 ubox
29 42 0.896615046 ubox
29 45 0.052436246 ubox
29 57 0.166862236 ubox
29 67 0.008145954 ubox
29 73 0.007044393 ubox
30 41 0.896308433 ubox
30 44 0.052459257 ubox
30 72 0.007030864 ubox
34 42 0.016082291 ubox
34 45 0.005796895 ubox
34 49 0.017628435 ubox
35 41 0.037583839 ubox
35 42 0.049461006 ubox
35 44 0.019169538 ubox
35 45 0.005727522 ubox
35 48 0.017951591 ubox
36 41 0.061446168 ubox
36 42 0.029950744 ubox
36 44 0.006325073 ubox
36 45 0.014119000 ubox
37 41 0.035379218 ubox
37 44 0.014806444 ubox
37 45 0.019575430 ubox
37 73 0.004266502 ubox
38 44 0.020185590 ubox
38 72 0.004284025 ubox
40 54 0.017746460 ubox
41 47 0.021911456 ubox
41 52 0.019660703 ubox
41 53 0.018318279 ubox
41 54 0.018544298 ubox
41 55 0.012823406 ubox
41 56 0.183710497 ubox
41 62 0.298833760 ubox
41 65 0.142159677 ubox
41 69 0.006895360 ubox
41 82 0.005494008 ubox
42 46 0.021567835 ubox
42 51 0.019813189 ubox
42 52 0.017559063 ubox
42 53 0.019835816 ubox
42 54 0.012137720 ubox
42 55 0.183762503 ubox
42 58 0.208507153 ubox
42 61 0.299685688 ubox
42 64 0.142211908 ubox
42 68 0.007038626 ubox
42 81 0.005503983 ubox
43 57 0.209771181 ubox
43 67 0.007033768 ubox
44 52 0.106588705 ubox
44 53 0.216078186 ubox
44 54 0.011611561 ubox
44 55 0.014735017 ubox
44 56 0.215126181 ubox
44 62 0.230114042 ubox
44 65 0.050954768 ubox
44 69 0.024263315 ubox
44 79 0.005112273 ubox
44 80 0.016355815 ubox
44 81 0.009289496 ubox
44 82 0.007250487 ubox
45 51 0.107496301 ubox
45 52 0.214550538 ubox
45 53 0.013541239 ubox
45 54 0.014380444 ubox
45 55 0.212705330 ubox
45 58 0.836394355 ubox
45 61 0.225598975 ubox
45 64 0.048970261 ubox
45 68 0.024381682 ubox
45 74 0.004050382 ubox
45 78 0.004489467 ubox
45 79 0.017549842 ubox
45 80 0.009297426 ubox
45 81 0.007219952 ubox
46 57 0.833352200 ubox
46 67 0.024342891 ubox
46 73 0.004194052 ubox
47 57 0.242317688 ubox
47 72 0.004219800 ubox
48 55 0.825910306 ubox
48 56 0.253708484 ubox
48 75 0.021754691 ubox
48 79 0.052730145 ubox
48 90 0.003372345 ubox
49 54 0.775409381 ubox
49 74 0.019840856 ubox
49 75 0.234920122 ubox
49 78 0.050681167 ubox
49 89 0.003320807 ubox
50 74 0.250015839 ubox
51 73 0.238646353 ubox
52 72 0.224291743 ubox
52 73 0.205484016 ubox
52 87 0.004633638 ubox
53 67 0.005946707 ubox
53 72 0.221818947 ubox
53 73 0.005893265 ubox
53 86 0.004729614 ubox
54 66 0.005810726 ubox
54 71 0.230833581 ubox
54 72 0.005524008 ubox
54 73 0.004485496 ubox
54 85 0.004768577 ubox
55 72 0.006142285 ubox
55 73 0.014922877 ubox
55 84 0.004757230 ubox
56 72 0.015077118 ubox
57 68 0.333662558 ubox
58 67 0.334007664 ubox
59 75 0.067981353 ubox
60 74 0.074313649 ubox
61 73 0.075071670 ubox
62 72 0.075018824 ubox
63 74 0.066898743 ubox
64 73 0.071526250 ubox
65 72 0.071517487 ubox
66 75 0.016907539 ubox
66 89 0.005310857 ubox
67 74 0.019423775 ubox
67 88 0.005686182 ubox
68 73 0.019620677 ubox
68 87 0.005682925 ubox
69 86 0.005668283 ubox
72 79 0.004659243 ubox
72 80 0.005130763 ubox
72 81 0.004377887 ubox
72 82 0.004228730 ubox
73 78 0.003546148 ubox
73 79 0.010863408 ubox
73 80 0.004401900 ubox
73 81 0.004212773 ubox
78 85 0.003358164 ubox
79 84 0.003930008 ubox
79 87 0.003558184 ubox
80 86 0.003611570 ubox
80 87 0.004740088 ubox
81 86 0.004795742 ubox
84 90 0.003473930 ubox
85 89 0.003211516 ubox
6 87 0.9500000 lbox
7 86 0.9500000 lbox
9 84 0.9500000 lbox
10 83 0.9500000 lbox
11 82 0.9500000 lbox
12 81 0.9500000 lbox
13 80 0.9500000 lbox
14 78 0.9500000 lbox
15 77 0.9500000 lbox
17 74 0.9500000 lbox
18 73 0.9500000 lbox
20 72 0.9500000 lbox
21 71 0.9500000 lbox
22 70 0.9500000 lbox
24 68 0.9500000 lbox
25 67 0.9500000 lbox
26 66 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
