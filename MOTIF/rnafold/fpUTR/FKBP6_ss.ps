%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCGAGGGCCAGGGCCGUUGGCGGCGGUUGGAACGAAACGAUGAGUGCCUCCUCGUGGCCCCAGAAUGGAAUGCCGCCGUCGGUAGGGGUCUGCCGGGCAUAAAGGGGCCUUCGGAACCCCACCAGAGUCACAGCCAGGGAGGGCAGCGGGGCGCACCAGGCCGAAGGCUCACGCCACAGGGAGGGCAGCUAGGAC\
) } def
/len { sequence length } bind def

/coor [
[30.89936256 187.66458130]
[35.97765732 173.54949951]
[23.75901794 182.25035095]
[11.54037952 190.95121765]
[-0.67825997 199.65206909]
[-12.89689922 208.35292053]
[-25.11553764 217.05377197]
[-37.33417892 225.75462341]
[-47.33571243 236.93359375]
[-54.62866211 250.04133606]
[-61.92161560 263.14907837]
[-69.21456909 276.25680542]
[-76.50751495 289.36456299]
[-73.51042175 305.12518311]
[-84.07278442 317.20059204]
[-100.09207153 316.32760620]
[-109.27964783 303.17587280]
[-104.58760071 287.83428955]
[-89.61525726 282.07159424]
[-82.32230377 268.96386719]
[-75.02935791 255.85612488]
[-67.73640442 242.74838257]
[-60.44345474 229.64064026]
[-70.44499207 218.46166992]
[-84.28030396 224.25685120]
[-98.11561584 230.05203247]
[-111.95093536 235.84719849]
[-125.64441681 241.96998596]
[-139.18830872 248.41691589]
[-152.73220825 254.86383057]
[-166.27610779 261.31076050]
[-168.98347473 276.58981323]
[-180.17793274 287.33523560]
[-195.55497742 289.41516113]
[-209.20182800 282.02981567]
[-215.87098694 268.01904297]
[-212.99803162 252.77024841]
[-201.68766785 242.14691162]
[-186.28895569 240.23391724]
[-172.72303772 247.76686096]
[-159.17913818 241.31994629]
[-145.63523865 234.87301636]
[-132.09133911 228.42608643]
[-130.57333374 225.23249817]
[-127.42737579 222.61909485]
[-122.94476318 221.34555054]
[-117.74610901 222.01188660]
[-103.91079712 216.21672058]
[-90.07547760 210.42153931]
[-76.24016571 204.62635803]
[-57.01222992 203.76927185]
[-46.03503036 213.53598022]
[-33.81639099 204.83512878]
[-21.59775352 196.13427734]
[-9.37911320 187.43342590]
[2.83952570 178.73257446]
[15.05816460 170.03172302]
[27.27680397 161.33087158]
[38.69062042 151.59819031]
[49.21274185 140.90779114]
[59.73486328 130.21737671]
[70.25698853 119.52695465]
[64.98444366 106.31343842]
[65.31009674 92.09054565]
[71.18188477 79.13219452]
[81.66104889 69.51013947]
[95.07218933 64.76272583]
[109.27118683 65.64895630]
[116.14458466 52.31642914]
[123.01798248 38.98389435]
[118.43601227 24.09620667]
[125.59653473 10.67303848]
[139.81791687 6.39657593]
[146.69131470 -6.93595552]
[153.56471252 -20.26848793]
[160.43811035 -33.60102081]
[161.59140015 -42.67337036]
[167.52778625 -47.08927155]
[174.61184692 -60.31107330]
[181.69592285 -73.53287506]
[188.77998352 -86.75466919]
[178.69842529 -108.86717987]
[197.18260193 -133.15812683]
[199.55262756 -147.96971130]
[201.92265320 -162.78129578]
[200.18748474 -171.76054382]
[204.44956970 -177.80831909]
[207.05429077 -192.58042908]
[209.65901184 -207.35253906]
[212.26373291 -222.12466431]
[214.86845398 -236.89677429]
[217.35591125 -251.68908691]
[219.72592163 -266.50067139]
[222.09594727 -281.31225586]
[215.17459106 -292.20437622]
[217.46051025 -304.49783325]
[227.19050598 -311.69613647]
[229.79522705 -326.46826172]
[232.39994812 -341.24035645]
[235.00466919 -356.01248169]
[224.12913513 -367.08056641]
[221.86961365 -382.43225098]
[229.09490967 -396.16448975]
[243.02677917 -402.99697876]
[258.30810547 -400.30245972]
[269.06292725 -389.11706543]
[271.15579224 -373.74176025]
[263.78195190 -360.08871460]
[249.77679443 -353.40777588]
[247.17207336 -338.63565063]
[244.56733704 -323.86352539]
[241.96261597 -309.09140015]
[248.84747314 -292.95431519]
[236.90753174 -278.94223022]
[234.53750610 -264.13064575]
[232.16749573 -249.31907654]
[234.21711731 -242.20993042]
[229.64057922 -234.29205322]
[227.03585815 -219.51994324]
[224.43112183 -204.74781799]
[221.82640076 -189.97570801]
[219.22167969 -175.20358276]
[216.73423767 -160.41127014]
[214.36421204 -145.59968567]
[211.99418640 -130.78810120]
[217.54382324 -125.74315643]
[226.72476196 -137.60530090]
[235.90570068 -149.46743774]
[243.87455750 -162.17559814]
[258.69476318 -159.86001587]
[262.40725708 -145.32670593]
[250.51454163 -136.18711853]
[239.57881165 -125.92018890]
[228.64309692 -115.65325165]
[234.19273376 -110.60829926]
[248.71195984 -114.37551880]
[263.23120117 -118.14273834]
[271.02459717 -131.89186096]
[286.27954102 -136.02258301]
[299.94549561 -128.08424377]
[303.91470337 -112.78649902]
[295.83230591 -99.20523834]
[280.49346924 -95.39797974]
[266.99841309 -103.62350464]
[252.47918701 -99.85628510]
[237.95994568 -96.08906555]
[221.26957703 -78.80616760]
[202.00178528 -79.67060852]
[194.91772461 -66.44880676]
[187.83364868 -53.22700500]
[180.74958801 -40.00520706]
[173.77062988 -26.72762108]
[166.89723206 -13.39509010]
[160.02383423 -0.06255793]
[153.15043640 13.26997375]
[157.91615295 27.33495331]
[151.13546753 40.95395279]
[136.35050964 45.85729218]
[129.47711182 59.18982697]
[122.60371399 72.52235413]
[132.69895935 85.97407532]
[135.48797607 102.55973053]
[130.34757996 118.57344055]
[141.20359802 128.92462158]
[156.38012695 126.28280640]
[170.04249573 133.00538635]
[177.04380798 146.32626343]
[174.88458252 161.03938293]
[185.74058533 171.39056396]
[196.59660339 181.74174500]
[212.65237427 185.08006287]
[217.53153992 200.73655701]
[206.21482849 212.60517883]
[190.34390259 208.47650146]
[186.24542236 192.59776306]
[175.38940430 182.24658203]
[164.53338623 171.89538574]
[149.93968201 174.75224304]
[136.30076599 168.39270020]
[128.93571472 155.06567383]
[130.85241699 139.78063965]
[119.99639893 129.42945862]
[107.40018463 134.80209351]
[93.70774078 135.01936340]
[80.94740295 130.04908752]
[70.42527771 140.73948669]
[59.90315628 151.42990112]
[49.38103104 162.12031555]
[64.12034607 159.33596802]
[78.49374390 163.62614441]
[89.29546356 174.03396606]
[94.11635590 188.23814392]
[91.88121033 203.07067871]
[83.08852386 215.22340393]
[69.69937134 221.98585510]
[54.69999313 221.84976196]
[41.43574905 214.84548950]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 58]
[3 57]
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[24 50]
[25 49]
[26 48]
[27 47]
[28 43]
[29 42]
[30 41]
[31 40]
[59 188]
[60 187]
[61 186]
[62 185]
[68 160]
[69 159]
[70 158]
[73 155]
[74 154]
[75 153]
[76 152]
[78 151]
[79 150]
[80 149]
[81 148]
[83 125]
[84 124]
[85 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 116]
[93 115]
[94 114]
[97 112]
[98 111]
[99 110]
[100 109]
[135 146]
[136 145]
[137 144]
[163 182]
[164 181]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
