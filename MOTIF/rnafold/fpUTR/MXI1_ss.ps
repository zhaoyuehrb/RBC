%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACACACAGACUCACAGCGAGACCGACACACACUCCCAUACACUCACACACACAACUGCAGGCAGCGAGGCUCGGGAAGUCAGGCCGGCUUUUCGCCCCGGCGCCUUCUCUGCUCCAGCCGGCCGGGUCUCCCUGGGGGCCCGGAGCUCGGCCGGGCCGCGCAGCCCCGUUAGAGGACGAGCUCGGCGGACCCCCGCUCCUCC\
) } def
/len { sequence length } bind def

/coor [
[104.70239258 248.98713684]
[95.07574463 260.60565186]
[82.76946259 269.33593750]
[68.62260437 274.58273315]
[53.59973145 275.98831177]
[38.72512436 273.45681763]
[25.01295662 267.16088867]
[13.39814949 257.52975464]
[4.67262030 245.22009277]
[-0.56871134 231.07121277]
[-1.96848190 216.04780579]
[0.56874716 201.17416382]
[6.86998320 187.46443176]
[16.50559807 175.85334778]
[28.81861877 167.13256836]
[42.96952438 161.89669800]
[57.99348068 160.50273132]
[60.51012039 145.71536255]
[63.02676010 130.92797852]
[65.54339600 116.14060211]
[56.24539566 127.91120148]
[53.47125626 142.65245056]
[48.30301666 156.73396301]
[40.88233185 169.76982117]
[31.41258812 181.40270996]
[20.15334511 191.31378174]
[7.41319752 199.23139954]
[-6.45866108 204.93853760]
[-21.08202362 208.27879333]
[-36.05607986 209.16059875]
[-50.97041702 207.55979919]
[-65.41625214 203.52024841]
[-78.99763489 197.15267944]
[-91.34233093 188.63162231]
[-102.11198425 178.19061279]
[-111.01140594 166.11582947]
[-117.79668427 152.73825073]
[-122.28184509 138.42449951]
[-124.34394836 123.56691742]
[-123.92647552 108.57272339]
[-121.04087830 93.85289764]
[-115.76623535 79.81088257]
[-108.24712372 66.83155823]
[-98.68962860 55.27066040]
[-87.35571289 45.44506454]
[-74.55602264 37.62407303]
[-60.64138031 32.02205276]
[-45.99316025 28.79254341]
[-31.01285934 28.02406502]
[-16.11106300 29.73767853]
[-1.69621110 33.88641739]
[11.83660603 40.35656738]
[24.11647224 48.97079468]
[34.80681229 59.49299240]
[43.61461639 71.63476562]
[50.29758835 85.06108093]
[62.44994736 93.85427094]
[56.00092697 80.31137085]
[49.55190659 66.76847076]
[37.67694855 61.72580719]
[32.58548737 50.30928421]
[36.50979233 38.86382294]
[30.26906395 25.22368622]
[24.02833748 11.58355045]
[17.78760910 -2.05658507]
[11.54687977 -15.69672108]
[-1.23051667 -25.02671051]
[0.51017559 -39.81925201]
[-5.73055267 -53.45938873]
[-12.07561302 -67.05130768]
[-18.52463341 -80.59420776]
[-24.97365379 -94.13710785]
[-31.52625465 -107.63019562]
[-38.18205261 -121.07267761]
[-44.83784866 -134.51515198]
[-51.49364853 -147.95764160]
[-58.14944458 -161.40013123]
[-65.31523895 -174.57780457]
[-72.98052216 -187.47135925]
[-80.64580536 -200.36489868]
[-88.31108093 -213.25843811]
[-95.97636414 -226.15199280]
[-111.10756683 -231.48359680]
[-116.23697662 -246.68455505]
[-107.42974854 -260.09396362]
[-91.44203186 -261.42526245]
[-80.53823090 -249.65724182]
[-83.08281708 -233.81726074]
[-75.41754150 -220.92372131]
[-67.75225830 -208.03018188]
[-60.08697891 -195.13662720]
[-52.42169952 -182.24308777]
[-46.22621536 -195.90383911]
[-31.72231483 -199.72964478]
[-19.59490967 -190.90206909]
[-18.77817535 -175.92431641]
[-29.87379265 -165.83039856]
[-44.70696259 -168.05592346]
[-38.05116272 -154.61343384]
[-31.39536667 -141.17095947]
[-24.73956871 -127.72846985]
[-18.08377075 -114.28598785]
[-12.29584122 -109.68439484]
[-11.43075371 -100.58612061]
[-4.98173332 -87.04322052]
[1.46728683 -73.50032806]
[7.18402100 -68.81056976]
[7.90958357 -59.70011520]
[14.15031147 -46.05997849]
[26.48132896 -37.70562363]
[25.18701553 -21.93744850]
[31.42774391 -8.29731369]
[37.66847229 5.34282255]
[43.90920258 18.98295784]
[50.14992905 32.62309647]
[64.97869873 42.00411606]
[63.09480667 60.31945038]
[69.54383087 73.86235046]
[75.99285126 87.40525055]
[88.48026276 74.43115997]
[106.91738129 71.85995483]
[123.53022766 81.53308868]
[136.81617737 74.57006836]
[150.10212708 67.60704803]
[163.38807678 60.64403152]
[176.67401123 53.68101501]
[189.95996094 46.71799850]
[203.24591064 39.75497818]
[209.39790344 32.99629211]
[216.78923035 32.78882599]
[230.18032837 26.03022194]
[243.57141113 19.27161789]
[256.96249390 12.51301575]
[260.90249634 7.19422102]
[266.15014648 4.99706316]
[270.86914062 5.75958681]
[284.46105957 -0.58547360]
[293.41302490 -14.32571983]
[309.77160645 -13.17314816]
[316.70852661 1.68657517]
[307.08764648 14.96704006]
[290.80612183 13.00644302]
[277.21420288 19.35150337]
[263.72109985 25.90410423]
[250.33001709 32.66270828]
[236.93893433 39.42131042]
[223.54783630 46.17991638]
[210.20892334 53.04092789]
[196.92298889 60.00394440]
[183.63703918 66.96696472]
[170.35108948 73.92997742]
[157.06513977 80.89299774]
[143.77919006 87.85601807]
[130.49325562 94.81903076]
[129.34501648 109.77501678]
[141.41235352 118.68452454]
[153.47969055 127.59403229]
[165.61494446 136.41081238]
[177.81739807 145.13433838]
[190.01985168 153.85787964]
[202.22232056 162.58142090]
[217.61502075 160.19340515]
[229.86576843 169.21414185]
[232.04750061 183.90344238]
[244.24996948 192.62698364]
[256.45242310 201.35050964]
[269.28378296 200.00929260]
[279.26852417 207.53027344]
[281.38006592 219.44413757]
[293.44738770 228.35363770]
[305.51473999 237.26315308]
[317.58209229 246.17265320]
[333.92959595 247.47306824]
[340.73187256 262.39489746]
[330.99130249 275.58786011]
[314.72817993 273.48013306]
[308.67257690 258.23999023]
[296.60522461 249.33049011]
[284.53790283 240.42098999]
[272.47055054 231.51147461]
[254.95344543 230.48832703]
[247.72888184 213.55297852]
[235.52642822 204.82943726]
[223.32397461 196.10589600]
[208.71890259 198.79431152]
[196.21960449 190.12123108]
[193.49877930 174.78387451]
[181.29632568 166.06033325]
[169.09387207 157.33679199]
[156.89141846 148.61326599]
[149.61837769 147.27993774]
[144.57019043 139.66137695]
[132.50285339 130.75186157]
[120.43550110 121.84236145]
[99.14961243 128.49824524]
[80.33078003 118.65724182]
[77.81414032 133.44462585]
[75.29749298 148.23199463]
[72.78085327 163.01937866]
[86.49787903 169.30471802]
[98.12012482 178.92687988]
[106.85515594 191.22979736]
[112.10741425 205.37461853]
[113.51878357 220.39695740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 199]
[18 198]
[19 197]
[20 196]
[57 119]
[58 118]
[59 117]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
[68 109]
[69 108]
[70 106]
[71 105]
[72 104]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[122 154]
[123 153]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[130 147]
[131 146]
[132 145]
[133 144]
[136 143]
[137 142]
[155 194]
[156 193]
[157 192]
[158 190]
[159 189]
[160 188]
[161 187]
[164 184]
[165 183]
[166 182]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
