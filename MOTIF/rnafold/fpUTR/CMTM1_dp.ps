%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CMTM1)
} def

/sequence { (\
GGUUCCCAGGGGAGAGCCAGCCGCUGCCGCGGCACUGGUUCAGACGGCCAGGCCCUAGGGACCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.012334541 ubox
1 63 0.724992430 ubox
1 64 0.678681363 ubox
1 67 0.088307252 ubox
2 17 0.012344082 ubox
2 62 0.730596970 ubox
2 63 0.674873338 ubox
2 66 0.089338801 ubox
3 16 0.012331039 ubox
3 61 0.695539823 ubox
3 65 0.088525172 ubox
4 15 0.012287268 ubox
4 60 0.655106752 ubox
4 61 0.707527619 ubox
5 14 0.012286500 ubox
5 59 0.655241373 ubox
5 60 0.754932989 ubox
6 12 0.012076065 ubox
6 58 0.654388216 ubox
6 59 0.755270914 ubox
6 60 0.003163731 ubox
7 11 0.012040414 ubox
7 26 0.003996620 ubox
7 58 0.754550204 ubox
7 59 0.003524046 ubox
8 25 0.004214240 ubox
8 56 0.913188027 ubox
9 18 0.013906681 ubox
9 24 0.004236423 ubox
9 54 0.014402204 ubox
9 55 0.924062590 ubox
9 56 0.340429973 ubox
10 17 0.013949246 ubox
10 18 0.020483645 ubox
10 49 0.004237524 ubox
10 53 0.015672047 ubox
10 54 0.921776750 ubox
10 55 0.371351534 ubox
10 56 0.078041754 ubox
11 17 0.024180761 ubox
11 18 0.135868227 ubox
11 22 0.004476365 ubox
11 28 0.004361464 ubox
11 48 0.005808673 ubox
11 49 0.025898830 ubox
11 53 0.907036079 ubox
11 54 0.371470551 ubox
11 55 0.078478781 ubox
11 56 0.013868909 ubox
12 17 0.162266798 ubox
12 21 0.004528803 ubox
12 27 0.004372424 ubox
12 41 0.017174698 ubox
12 48 0.036362676 ubox
12 53 0.369061598 ubox
12 54 0.070962977 ubox
12 55 0.014101543 ubox
13 40 0.015918957 ubox
14 39 0.004968502 ubox
14 40 0.003778113 ubox
14 41 0.630786124 ubox
14 55 0.003226033 ubox
15 25 0.007280793 ubox
15 36 0.009621291 ubox
15 39 0.003559417 ubox
15 40 0.632516132 ubox
16 24 0.007830060 ubox
16 33 0.023887590 ubox
16 35 0.011245835 ubox
16 39 0.633396703 ubox
16 48 0.251408187 ubox
16 53 0.080191753 ubox
17 23 0.007829108 ubox
17 32 0.023795162 ubox
17 38 0.633773733 ubox
17 47 0.251744827 ubox
17 52 0.096276517 ubox
18 31 0.023580264 ubox
18 37 0.633740181 ubox
18 46 0.251454429 ubox
18 51 0.087502018 ubox
19 36 0.596116570 ubox
19 40 0.077779956 ubox
20 27 0.009686451 ubox
20 30 0.020322233 ubox
20 33 0.953275450 ubox
20 35 0.279515854 ubox
20 39 0.079480845 ubox
20 48 0.052667679 ubox
21 26 0.009648143 ubox
21 29 0.019339639 ubox
21 32 0.993621601 ubox
21 38 0.079573460 ubox
21 47 0.052734132 ubox
22 29 0.007462439 ubox
22 31 0.994027362 ubox
22 37 0.079566186 ubox
22 46 0.052734556 ubox
23 28 0.009265374 ubox
23 30 0.993994412 ubox
23 33 0.045332838 ubox
23 36 0.076816600 ubox
23 45 0.052708620 ubox
24 29 0.992318393 ubox
24 32 0.045362104 ubox
24 43 0.052455476 ubox
25 31 0.045198019 ubox
25 34 0.079370064 ubox
25 42 0.051749922 ubox
26 30 0.043066884 ubox
26 33 0.080025181 ubox
26 39 0.026346166 ubox
26 41 0.045238568 ubox
27 32 0.079978191 ubox
27 38 0.047941700 ubox
28 37 0.048109033 ubox
29 36 0.036648267 ubox
29 39 0.015855540 ubox
30 37 0.012785390 ubox
30 38 0.016090247 ubox
31 36 0.009823340 ubox
31 40 0.005983886 ubox
31 54 0.006629624 ubox
32 39 0.006245762 ubox
32 53 0.008386656 ubox
33 38 0.006313658 ubox
33 52 0.016999732 ubox
35 43 0.218879925 ubox
35 47 0.011499731 ubox
35 51 0.723024841 ubox
35 52 0.025501163 ubox
36 42 0.219969992 ubox
36 46 0.011925509 ubox
36 50 0.728122841 ubox
36 51 0.012663442 ubox
37 41 0.216690923 ubox
37 45 0.047651657 ubox
37 49 0.729293163 ubox
37 63 0.010182651 ubox
38 45 0.068910415 ubox
38 48 0.729269134 ubox
38 62 0.010365028 ubox
39 44 0.063975621 ubox
39 47 0.696521373 ubox
39 61 0.010506325 ubox
40 46 0.580250852 ubox
40 47 0.203652129 ubox
40 52 0.003910381 ubox
40 60 0.010494048 ubox
41 46 0.287278106 ubox
41 51 0.007293795 ubox
41 59 0.010466199 ubox
42 56 0.009097760 ubox
43 55 0.009463938 ubox
46 54 0.077936870 ubox
46 55 0.005089751 ubox
47 53 0.100816379 ubox
47 54 0.004765396 ubox
48 52 0.112067170 ubox
52 62 0.003732845 ubox
53 60 0.005230898 ubox
54 59 0.005235773 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
showpage
end
%%EOF
