%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIN)
} def

/sequence { (\
AGCUGGGAUUUGUCCCGCCCACCGCCGCCAGCCCGGUUCCGUUUCCGGCUGGCUGAGUACUGGGGUCCAGAAAGUGAUCGCUGCCGUGGUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.006038012 ubox
2 18 0.228671282 ubox
2 25 0.027102194 ubox
2 58 0.034010836 ubox
2 66 0.082472805 ubox
2 75 0.014757504 ubox
2 93 0.065044787 ubox
3 12 0.006300907 ubox
3 17 0.262185563 ubox
3 24 0.027116120 ubox
3 57 0.034776909 ubox
3 65 0.085316151 ubox
3 70 0.237252202 ubox
3 74 0.016202204 ubox
3 92 0.065031899 ubox
4 17 0.644567963 ubox
4 21 0.022289127 ubox
4 56 0.033622497 ubox
4 64 0.013535639 ubox
4 69 0.235897515 ubox
4 73 0.017234175 ubox
5 15 0.025020707 ubox
5 16 0.970853951 ubox
5 20 0.024732060 ubox
5 68 0.218970809 ubox
6 14 0.025070468 ubox
6 15 0.972329786 ubox
6 16 0.025046713 ubox
6 19 0.024728461 ubox
6 67 0.204862145 ubox
6 68 0.079404451 ubox
7 13 0.021576187 ubox
7 14 0.972867093 ubox
7 15 0.027596819 ubox
7 18 0.024668178 ubox
7 66 0.156737241 ubox
7 67 0.100172308 ubox
8 13 0.862266289 ubox
8 66 0.116785365 ubox
9 64 0.003289026 ubox
9 65 0.110724675 ubox
9 71 0.017001345 ubox
9 72 0.005184333 ubox
9 73 0.005458984 ubox
10 64 0.012550301 ubox
10 65 0.012910708 ubox
10 70 0.018373946 ubox
10 71 0.005872999 ubox
10 72 0.006226439 ubox
11 17 0.015871658 ubox
11 63 0.003676973 ubox
11 69 0.018875346 ubox
11 70 0.005857887 ubox
11 71 0.006264767 ubox
12 16 0.020782194 ubox
12 18 0.004136079 ubox
12 66 0.020430298 ubox
12 68 0.018929721 ubox
13 17 0.004856265 ubox
13 64 0.004596648 ubox
13 65 0.119936311 ubox
13 71 0.004801618 ubox
14 63 0.005514167 ubox
14 64 0.127929986 ubox
14 65 0.061716596 ubox
14 70 0.005199114 ubox
15 62 0.005485198 ubox
15 63 0.127999862 ubox
15 64 0.059004252 ubox
15 65 0.037437174 ubox
16 62 0.127929018 ubox
16 63 0.055916123 ubox
16 64 0.030461932 ubox
17 23 0.004015450 ubox
17 25 0.050485087 ubox
17 26 0.004650983 ubox
17 58 0.027692285 ubox
17 61 0.108846477 ubox
17 66 0.329560613 ubox
17 93 0.006040778 ubox
18 24 0.050694623 ubox
18 57 0.029859029 ubox
18 63 0.023443286 ubox
18 64 0.888737837 ubox
18 65 0.351233095 ubox
18 92 0.005860867 ubox
19 62 0.022645223 ubox
19 63 0.907701744 ubox
19 64 0.343593399 ubox
19 65 0.087548315 ubox
19 89 0.011211168 ubox
20 55 0.034255653 ubox
20 62 0.911453076 ubox
20 63 0.333737355 ubox
20 64 0.088030161 ubox
20 88 0.011280512 ubox
21 54 0.034087827 ubox
21 58 0.142000472 ubox
21 61 0.900948639 ubox
21 66 0.050182344 ubox
21 87 0.011290740 ubox
21 90 0.003692636 ubox
22 57 0.151088174 ubox
22 63 0.089794555 ubox
22 64 0.009947696 ubox
22 65 0.053668877 ubox
22 86 0.011261168 ubox
22 89 0.003886887 ubox
23 55 0.134633373 ubox
23 62 0.091042994 ubox
23 63 0.010004321 ubox
23 64 0.053644686 ubox
23 88 0.003888181 ubox
24 53 0.003277219 ubox
24 54 0.109464124 ubox
24 58 0.958935241 ubox
24 61 0.040375961 ubox
24 66 0.005511339 ubox
24 84 0.011060272 ubox
24 87 0.003870968 ubox
24 93 0.006408317 ubox
25 57 0.967533332 ubox
25 63 0.051939741 ubox
25 65 0.005741915 ubox
25 83 0.011001576 ubox
25 86 0.003857121 ubox
25 92 0.006383433 ubox
26 55 0.795282156 ubox
26 62 0.051951003 ubox
26 64 0.005732002 ubox
27 53 0.985391879 ubox
27 54 0.166601572 ubox
27 58 0.010950383 ubox
27 61 0.007075429 ubox
28 52 0.999907698 ubox
28 57 0.011276545 ubox
29 51 0.999907161 ubox
29 55 0.012377369 ubox
30 50 0.999672270 ubox
30 54 0.012382275 ubox
31 49 0.999830858 ubox
31 53 0.012385717 ubox
32 48 0.819747876 ubox
32 52 0.011392039 ubox
33 47 0.586518038 ubox
33 48 0.572557004 ubox
33 51 0.008217536 ubox
33 52 0.004860310 ubox
34 41 0.028844693 ubox
34 47 0.809643566 ubox
34 51 0.006869559 ubox
35 40 0.028498121 ubox
35 43 0.005154129 ubox
35 44 0.011641739 ubox
35 45 0.119075757 ubox
35 46 0.991680436 ubox
35 50 0.008402871 ubox
36 42 0.004747348 ubox
36 43 0.015122002 ubox
36 44 0.113470052 ubox
36 45 0.991468364 ubox
36 49 0.008394411 ubox
37 41 0.010268847 ubox
37 48 0.004717102 ubox
38 47 0.003808638 ubox
39 48 0.007344291 ubox
40 47 0.007804883 ubox
41 46 0.007792570 ubox
54 73 0.003599968 ubox
55 79 0.004202315 ubox
56 78 0.004163522 ubox
58 76 0.003419157 ubox
59 75 0.004129426 ubox
60 70 0.161703573 ubox
60 74 0.003950536 ubox
61 69 0.162679634 ubox
61 73 0.003681185 ubox
62 68 0.162886749 ubox
62 82 0.003201745 ubox
63 67 0.160256314 ubox
63 81 0.003331756 ubox
64 79 0.004573959 ubox
64 94 0.006486668 ubox
65 78 0.004847590 ubox
65 93 0.008148150 ubox
66 77 0.004889870 ubox
66 92 0.007623721 ubox
67 76 0.004762206 ubox
67 89 0.008879865 ubox
68 76 0.004017786 ubox
68 88 0.008936589 ubox
69 75 0.006065597 ubox
69 87 0.008880549 ubox
73 82 0.012517559 ubox
74 81 0.012748731 ubox
74 93 0.993596646 ubox
75 80 0.012225054 ubox
75 92 0.995215653 ubox
76 91 0.999809485 ubox
77 90 0.999703930 ubox
78 89 0.999202022 ubox
79 86 0.003883865 ubox
79 88 0.999650656 ubox
80 85 0.004493461 ubox
80 87 0.998239637 ubox
81 86 0.997191419 ubox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
18 64 0.9500000 lbox
19 63 0.9500000 lbox
20 62 0.9500000 lbox
21 61 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
27 53 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
74 93 0.9500000 lbox
75 92 0.9500000 lbox
76 91 0.9500000 lbox
77 90 0.9500000 lbox
78 89 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
