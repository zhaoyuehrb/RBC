%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRTCAP3)
} def

/sequence { (\
GGGCCGGGCCCAGGUACAGCGGCCCUGCGGCUGGCGCGGCGGACGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.239865384 ubox
1 24 0.009110186 ubox
1 25 0.290828798 ubox
2 10 0.240047537 ubox
2 23 0.006484292 ubox
2 24 0.334301135 ubox
2 32 0.013983422 ubox
3 9 0.240040429 ubox
3 15 0.011411952 ubox
3 23 0.334593012 ubox
3 28 0.027356706 ubox
3 31 0.014728562 ubox
3 35 0.194963668 ubox
3 37 0.003834927 ubox
3 40 0.880440352 ubox
4 8 0.238295109 ubox
4 14 0.011632741 ubox
4 22 0.334666264 ubox
4 27 0.027409968 ubox
4 30 0.014761734 ubox
4 34 0.195149793 ubox
4 36 0.003710541 ubox
4 39 0.881222331 ubox
4 42 0.021846778 ubox
4 46 0.114704384 ubox
4 47 0.010981668 ubox
5 13 0.011634108 ubox
5 21 0.334634527 ubox
5 29 0.014746093 ubox
5 33 0.194806091 ubox
5 38 0.881204711 ubox
5 41 0.021892515 ubox
5 45 0.115032031 ubox
5 46 0.011002228 ubox
6 20 0.329990714 ubox
6 25 0.063623746 ubox
6 28 0.006488065 ubox
6 32 0.158076006 ubox
6 35 0.003711932 ubox
6 37 0.879715238 ubox
6 40 0.018192430 ubox
6 44 0.112782073 ubox
7 24 0.090972721 ubox
7 31 0.112010309 ubox
7 32 0.151943531 ubox
8 15 0.153857880 ubox
8 20 0.034856173 ubox
8 23 0.091099546 ubox
8 31 0.190386185 ubox
8 35 0.873605195 ubox
8 37 0.017597724 ubox
8 40 0.082897059 ubox
9 14 0.169850598 ubox
9 19 0.038180427 ubox
9 22 0.090898577 ubox
9 30 0.221004264 ubox
9 34 0.828018901 ubox
9 36 0.018206809 ubox
9 39 0.081988619 ubox
9 42 0.033914865 ubox
10 21 0.090565745 ubox
10 22 0.006312964 ubox
10 29 0.221314150 ubox
10 30 0.007221520 ubox
10 33 0.719081305 ubox
10 34 0.279213299 ubox
10 38 0.080597496 ubox
10 39 0.034830602 ubox
10 41 0.033508528 ubox
10 42 0.006893486 ubox
11 21 0.010110711 ubox
11 27 0.285262806 ubox
11 29 0.009570455 ubox
11 33 0.393583462 ubox
11 38 0.037849459 ubox
11 41 0.006943376 ubox
12 26 0.285134001 ubox
12 32 0.476826313 ubox
13 24 0.152853236 ubox
13 25 0.260393159 ubox
13 31 0.468803768 ubox
13 32 0.256427396 ubox
14 20 0.070977982 ubox
14 23 0.192349697 ubox
14 24 0.232235233 ubox
14 28 0.029506192 ubox
14 31 0.286047288 ubox
14 35 0.084811496 ubox
14 37 0.051138802 ubox
14 40 0.020994636 ubox
14 44 0.024282772 ubox
15 19 0.066686830 ubox
15 22 0.221185360 ubox
15 27 0.027106772 ubox
15 30 0.291333454 ubox
15 33 0.003386346 ubox
15 34 0.080285435 ubox
15 36 0.050237590 ubox
15 39 0.020898515 ubox
15 43 0.023978103 ubox
16 26 0.024183385 ubox
16 32 0.011283074 ubox
17 27 0.404544662 ubox
17 33 0.309453467 ubox
18 26 0.405322851 ubox
18 32 0.599321476 ubox
19 25 0.402589982 ubox
19 28 0.366376326 ubox
19 31 0.605885000 ubox
19 35 0.021713422 ubox
19 37 0.004561077 ubox
19 40 0.026123509 ubox
20 27 0.366452110 ubox
20 29 0.047266291 ubox
20 30 0.605745437 ubox
20 33 0.081531518 ubox
20 34 0.016249265 ubox
20 36 0.004538880 ubox
20 39 0.026086840 ubox
20 41 0.006554182 ubox
20 45 0.201350827 ubox
21 26 0.279197102 ubox
21 28 0.052546314 ubox
21 32 0.264805019 ubox
21 35 0.003798436 ubox
21 37 0.003409713 ubox
21 40 0.005014464 ubox
21 44 0.201224598 ubox
22 28 0.604378488 ubox
22 31 0.268870068 ubox
22 35 0.003904011 ubox
22 37 0.026013001 ubox
22 40 0.018506419 ubox
23 27 0.600250250 ubox
23 30 0.269097338 ubox
23 34 0.004267009 ubox
23 36 0.026012352 ubox
23 39 0.018964886 ubox
23 42 0.202409217 ubox
23 46 0.026848777 ubox
23 47 0.015670559 ubox
24 29 0.268297759 ubox
24 30 0.008464939 ubox
24 33 0.004247068 ubox
24 34 0.025169493 ubox
24 38 0.018851255 ubox
24 41 0.206070461 ubox
24 42 0.015561037 ubox
24 45 0.026820706 ubox
24 46 0.016100649 ubox
24 47 0.004454654 ubox
25 29 0.010395644 ubox
25 33 0.025171826 ubox
25 34 0.004351063 ubox
25 39 0.207845042 ubox
25 41 0.015817442 ubox
25 42 0.202683492 ubox
25 45 0.014409191 ubox
25 46 0.008002195 ubox
26 33 0.004224278 ubox
26 36 0.023506717 ubox
26 38 0.215473328 ubox
26 41 0.304024133 ubox
26 45 0.011022749 ubox
26 46 0.004225225 ubox
27 35 0.028761052 ubox
27 37 0.224449955 ubox
27 40 0.345917565 ubox
27 44 0.011424430 ubox
28 34 0.028768944 ubox
28 36 0.224493453 ubox
28 38 0.004727294 ubox
28 39 0.345851468 ubox
28 41 0.010240769 ubox
28 45 0.038797172 ubox
29 35 0.224052394 ubox
29 37 0.005578355 ubox
29 40 0.007650510 ubox
29 44 0.039225278 ubox
30 37 0.345826326 ubox
30 40 0.038956879 ubox
31 36 0.345383750 ubox
31 39 0.039637407 ubox
31 42 0.038454414 ubox
31 46 0.008090386 ubox
32 38 0.039498835 ubox
32 41 0.039037937 ubox
32 45 0.008129661 ubox
33 37 0.037639751 ubox
33 40 0.038789024 ubox
33 44 0.008237309 ubox
34 40 0.014182375 ubox
35 39 0.014845326 ubox
35 41 0.007540215 ubox
35 45 0.006809955 ubox
36 40 0.008337345 ubox
36 44 0.009425321 ubox
37 45 0.170003992 ubox
38 44 0.172235474 ubox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
22 28 0.9500000 lbox
23 27 0.9500000 lbox
showpage
end
%%EOF
