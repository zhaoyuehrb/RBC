%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGCGACUACAACUCCCAGAGGGUAUGGCGGCCGCAGCAGUGGGCAGUUGAGUUUCCGGGGCGACCCAGGUCCUCCGGCGGAAGCGGGAGCCUCUGUCGGCCGCGGAAGCCUGGAGUGGGCGGUACGCAGACGCGCGCGGUGAGACCCGCUGUCUGCUCAGCGGACUCUGCCCGCCCCCACCUCCCCCUGCGUCGGGCCGAC\
) } def
/len { sequence length } bind def

/coor [
[-15.87966537 456.07897949]
[-36.50084686 458.45446777]
[-41.43960571 472.61810303]
[-46.37836456 486.78173828]
[-51.31712723 500.94537354]
[-56.25588608 515.10900879]
[-46.66660309 527.19409180]
[-45.15601730 542.54736328]
[-52.20614624 556.26953125]
[-65.56732178 563.98205566]
[-80.97603607 563.22381592]
[-93.51543427 554.23675537]
[-99.18423462 539.88861084]
[-96.17353821 524.75787354]
[-85.44405365 513.67266846]
[-70.41952515 510.17025757]
[-65.48076630 496.00662231]
[-60.54200363 481.84298706]
[-55.60324478 467.67935181]
[-50.66448212 453.51571655]
[-58.22211456 447.88818359]
[-64.24076080 440.61993408]
[-68.37278748 432.12033081]
[-70.37705231 422.87017822]
[-70.13301086 413.39450073]
[-67.64790344 404.23266602]
[-63.05672073 395.90786743]
[-56.61493301 388.89703369]
[-48.68423080 383.60363770]
[-39.71224594 380.33447266]
[-30.20729065 379.28179932]
[-20.70954514 380.51217651]
[-14.28975773 366.95538330]
[-7.86996984 353.39862061]
[-1.45018184 339.84182739]
[4.96960592 326.28506470]
[-3.36077929 312.14212036]
[-1.60355926 295.65533447]
[9.74584198 283.34152222]
[26.36143303 280.18643188]
[32.57373428 266.53332520]
[38.78603745 252.88023376]
[44.99834061 239.22712708]
[44.90717316 231.83406067]
[51.41089249 225.41430664]
[57.83068085 211.85751343]
[64.25046539 198.30073547]
[62.70470047 183.48655701]
[75.60384369 174.32562256]
[82.02362823 160.76884460]
[80.47785950 145.95466614]
[93.37699890 136.79371643]
[99.79679108 123.23693848]
[81.74287415 109.89362335]
[84.58747864 90.14630890]
[76.37317657 77.59539795]
[68.15887451 65.04449463]
[59.94458008 52.49358368]
[51.73028183 39.94267654]
[43.51597977 27.39176941]
[35.30168152 14.84086132]
[26.99191856 2.35295296]
[18.58717537 -10.07122898]
[4.44607353 -17.16628265]
[3.72341800 -32.04334641]
[-4.68132544 -44.46752930]
[-13.08606911 -56.89171219]
[-21.49081230 -69.31589508]
[-36.75260925 -72.43283081]
[-45.09922791 -85.15244293]
[-42.03365326 -99.68302917]
[-50.43839645 -112.10720825]
[-58.84313965 -124.53138733]
[-64.61814880 -127.76327515]
[-67.46399689 -132.68817139]
[-67.30797577 -137.46510315]
[-75.32991791 -150.13981628]
[-83.35186005 -162.81452942]
[-91.37380219 -175.48924255]
[-105.29195404 -183.01225281]
[-105.56058502 -197.90443420]
[-113.58252716 -210.57914734]
[-128.34959412 -217.71118164]
[-129.28659058 -234.08354187]
[-115.42961884 -242.85374451]
[-101.03354645 -234.99975586]
[-100.90781403 -218.60108948]
[-92.88587189 -205.92637634]
[-79.54149628 -199.30995178]
[-78.69908905 -183.51118469]
[-70.67714691 -170.83647156]
[-62.65520096 -158.16175842]
[-54.63325500 -145.48704529]
[-46.41895676 -132.93612671]
[-38.01421356 -120.51195526]
[-29.60947037 -108.08776855]
[-14.98156643 -105.52651978]
[-6.28097391 -93.04636383]
[-9.06663036 -77.72063446]
[-0.66188729 -65.29645538]
[7.74285603 -52.87227249]
[16.14760017 -40.44808960]
[29.68753815 -34.24169540]
[31.01135635 -18.47597122]
[39.41609955 -6.05179024]
[45.77024841 -2.27149963]
[47.85258865 6.62656164]
[56.06689072 19.17746925]
[64.28118896 31.72837830]
[72.49548340 44.27928543]
[80.70978546 56.83019257]
[88.92408752 69.38110352]
[97.13838196 81.93200684]
[109.60214996 82.52262878]
[119.80932617 91.41499329]
[122.51247406 105.76067352]
[137.26199341 103.03089142]
[149.42362976 92.91136169]
[163.34645081 98.20327759]
[178.09597778 95.47348785]
[192.84548950 92.74370575]
[207.59501648 90.01392365]
[222.34452820 87.28414154]
[237.09403992 84.55435181]
[251.84356689 81.82456970]
[266.59307861 79.09478760]
[276.72039795 63.08743668]
[295.01760864 59.62117004]
[309.78271484 70.43796539]
[324.44213867 67.25965118]
[339.10153198 64.08132935]
[350.94891357 53.59562683]
[365.02664185 58.46048737]
[379.68606567 55.28216934]
[387.41342163 50.40366745]
[394.59320068 52.16896057]
[409.29937744 49.21456528]
[424.00555420 46.26016998]
[436.01147461 35.95635605]
[450.01336670 41.03533554]
[464.71954346 38.08094025]
[479.42572021 35.12654495]
[494.13189697 32.17214966]
[508.83807373 29.21775627]
[523.54425049 26.26336288]
[533.59313965 13.75739384]
[549.63488770 13.96067810]
[559.36364746 26.71727180]
[555.31634521 42.24140930]
[540.59771729 48.62429810]
[526.49865723 40.96953583]
[511.79244995 43.92393112]
[497.08627319 46.87832642]
[482.38009644 49.83272171]
[467.67395020 52.78711319]
[452.96777344 55.74150848]
[442.01373291 65.83400726]
[426.95996094 60.96634674]
[412.25378418 63.92073822]
[397.54760742 66.87513733]
[382.86437988 69.94158173]
[368.20498657 73.11989594]
[357.40612793 83.37827301]
[342.27984619 78.74074554]
[327.62045288 81.91905975]
[312.96102905 85.09738159]
[309.01016235 95.80540466]
[300.28936768 103.35327911]
[288.89080811 105.77720642]
[277.62390137 102.36144257]
[269.32287598 93.84430695]
[254.57334900 96.57408905]
[239.82383728 99.30387115]
[225.07431030 102.03365326]
[210.32479858 104.76344299]
[195.57527161 107.49322510]
[180.82575989 110.22300720]
[166.07623291 112.95278931]
[154.96957397 122.87706757]
[139.99177551 117.78040314]
[125.24225616 120.51019287]
[113.35356903 129.65672302]
[106.93378448 143.21351624]
[108.02036285 158.99736023]
[95.58040619 167.18862915]
[89.16062164 180.74540710]
[90.24720001 196.52925110]
[77.80725098 204.72052002]
[71.38745880 218.27731323]
[64.96767426 231.83409119]
[58.65144730 245.43942261]
[52.43914413 259.09252930]
[46.22684097 272.74563599]
[40.01453781 286.39874268]
[47.68348694 297.85473633]
[48.68146515 311.49597168]
[42.85440826 323.75054932]
[31.82139587 331.46261597]
[18.52638817 332.70483398]
[12.10659981 346.26162720]
[5.68681145 359.81838989]
[-0.73297638 373.37518311]
[-7.15276432 386.93197632]
[5.89998865 403.45172119]
[8.77553082 424.23373413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 20]
[3 19]
[4 18]
[5 17]
[6 16]
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[40 194]
[41 193]
[42 192]
[43 191]
[45 190]
[46 189]
[47 188]
[49 186]
[50 185]
[52 183]
[53 182]
[55 113]
[56 112]
[57 111]
[58 110]
[59 109]
[60 108]
[61 107]
[62 105]
[63 104]
[65 102]
[66 101]
[67 100]
[68 99]
[71 96]
[72 95]
[73 94]
[76 93]
[77 92]
[78 91]
[79 90]
[81 88]
[82 87]
[116 181]
[117 180]
[119 178]
[120 177]
[121 176]
[122 175]
[123 174]
[124 173]
[125 172]
[126 171]
[129 166]
[130 165]
[131 164]
[133 162]
[134 161]
[136 160]
[137 159]
[138 158]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
