%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGCUGCAGCCCGGCGCUGAAUGGGCUGGCGGCGCCCGGCUCCGUCCUGCCCGCGGCCGGCCCCCGCGUCUGCUCCCUCCCCGCCCGGGCCCCUGUCGGCCGCCGCCAGUCCCCGCCCCGACUGUGAAUGAAAGGCGGGCGCCGCCGAGGGCUGGCUGGGAACGCCGCAGCGACGCCGGCCUCUCGAGAGGCGCGCGCCCCGCCGAG\
) } def
/len { sequence length } bind def

/coor [
[95.95973206 177.20516968]
[95.28675842 162.22027588]
[94.61378479 147.23538208]
[78.76351929 142.53474426]
[65.48139954 132.69035339]
[56.37363815 118.89268494]
[52.54164886 102.81031036]
[54.44883347 86.38808441]
[40.93429947 79.87982941]
[27.41976738 73.37157440]
[13.90523529 66.86331940]
[1.49489713 70.37890625]
[-9.62765121 64.67934418]
[-13.74813080 53.30569077]
[-27.16379166 46.59599304]
[-40.57945251 39.88629532]
[-56.38301086 40.63336182]
[-64.30500031 28.02021980]
[-77.72065735 21.31052399]
[-86.68283844 27.10120583]
[-97.16025543 28.63724327]
[-107.25231934 25.70775223]
[-115.15638733 18.90579605]
[-119.48970032 9.50976372]
[-119.53107452 -0.75651866]
[-132.63218689 -8.06135082]
[-145.73332214 -15.36618328]
[-158.83444214 -22.67101669]
[-171.93556213 -29.97584724]
[-185.03668213 -37.28068161]
[-198.13780212 -44.58551407]
[-211.23893738 -51.89034653]
[-224.34005737 -59.19517899]
[-237.44117737 -66.50000763]
[-250.54229736 -73.80484009]
[-263.64343262 -81.10967255]
[-279.46459961 -81.07238007]
[-286.81271362 -94.02824402]
[-299.91384888 -101.33307648]
[-313.01495361 -108.63790894]
[-326.11608887 -115.94274139]
[-339.21719360 -123.24757385]
[-347.87835693 -116.04788971]
[-358.29565430 -111.83684540]
[-369.47393799 -110.99924469]
[-380.35070801 -113.59845734]
[-389.89709473 -119.37196350]
[-397.21502686 -127.75774384]
[-401.62197876 -137.94898987]
[-402.71435547 -148.97166443]
[-400.40457153 -159.77764893]
[-413.04537964 -167.85290527]
[-425.68618774 -175.92816162]
[-438.32699585 -184.00343323]
[-450.96780396 -192.07868958]
[-459.88522339 -194.06164551]
[-463.73608398 -200.37048340]
[-476.25466919 -208.63394165]
[-488.77328491 -216.89739990]
[-504.55297852 -218.04252625]
[-510.91235352 -231.51129150]
[-523.43096924 -239.77473450]
[-537.33062744 -231.31767273]
[-553.46905518 -229.77412415]
[-568.61065674 -235.40258789]
[-579.74194336 -247.02873230]
[-584.67108154 -262.28997803]
[-582.45965576 -278.11553955]
[-595.10046387 -286.19079590]
[-611.49847412 -286.38562012]
[-619.29174805 -300.81463623]
[-610.46325684 -314.63455200]
[-594.09497070 -313.62860107]
[-587.02520752 -298.83163452]
[-574.38439941 -290.75634766]
[-562.95532227 -298.62115479]
[-549.34887695 -301.54492188]
[-535.61260986 -299.05389404]
[-523.82635498 -291.49176025]
[-515.78753662 -279.97244263]
[-512.73693848 -266.21636963]
[-515.16748047 -252.29333496]
[-502.64892578 -244.02987671]
[-487.76461792 -243.47581482]
[-480.50982666 -229.41600037]
[-467.99121094 -221.15254211]
[-455.47262573 -212.88908386]
[-442.89254761 -204.71949768]
[-430.25173950 -196.64424133]
[-417.61093140 -188.56898499]
[-404.97012329 -180.49372864]
[-392.32931519 -172.41845703]
[-376.04611206 -182.02177429]
[-357.06015015 -182.02073669]
[-340.63708496 -172.33253479]
[-331.37387085 -155.57250977]
[-331.91238403 -136.34869385]
[-318.81124878 -129.04386902]
[-305.71011353 -121.73902893]
[-292.60900879 -114.43419647]
[-279.50787354 -107.12936401]
[-264.62380981 -107.68914795]
[-256.33859253 -94.21080017]
[-243.23747253 -86.90596771]
[-230.13635254 -79.60113525]
[-217.03521729 -72.29630280]
[-203.93409729 -64.99147034]
[-190.83297729 -57.68663406]
[-177.73185730 -50.38180542]
[-164.63073730 -43.07697296]
[-151.52960205 -35.77214050]
[-138.42848206 -28.46730614]
[-125.32736206 -21.16247368]
[-112.22624207 -13.85764122]
[-93.92852783 -20.54216766]
[-76.34215546 -11.47597027]
[-71.01096344 7.89486217]
[-57.59530258 14.60455894]
[-42.75132370 13.37756824]
[-33.86975479 26.47063446]
[-20.45409393 33.18033218]
[-7.03843355 39.89002991]
[10.39676952 37.89777756]
[20.41349220 53.34878540]
[33.92802429 59.85704041]
[47.44255829 66.36529541]
[60.95708847 72.87355042]
[70.73842621 62.53063965]
[83.14336395 55.54725266]
[97.05968475 52.54952621]
[111.23963928 53.80624008]
[124.41183472 59.20471573]
[135.39524841 68.26092529]
[143.20510864 80.16287231]
[147.14117432 93.84343719]
[146.85052490 108.07599640]
[161.04542542 112.92414856]
[175.24034119 117.77229309]
[189.43525696 122.62043762]
[204.99549866 119.75876617]
[214.53889465 131.19436646]
[228.73381042 136.04251099]
[242.92872620 140.89065552]
[257.12362671 145.73880005]
[271.31854248 150.58694458]
[286.87814331 142.59286499]
[303.08624268 148.21426392]
[310.07376099 163.51138306]
[324.33959961 168.14663696]
[338.60543823 172.78189087]
[352.87130737 177.41714478]
[367.17141724 181.94555664]
[381.50500488 186.36688232]
[395.83859253 190.78820801]
[410.17218018 195.20954895]
[424.50576782 199.63087463]
[438.83938599 204.05220032]
[453.17297363 208.47352600]
[460.07315063 201.65065002]
[468.93139648 197.83288574]
[478.51382446 197.50605774]
[487.50238037 200.67292786]
[494.67599487 206.85859680]
[499.07647705 215.18116760]
[500.13647461 224.47734070]
[514.17999268 229.74797058]
[528.22351074 235.01858521]
[544.30371094 231.79980469]
[554.92663574 244.29321289]
[549.16436768 259.64666748]
[532.94464111 262.06585693]
[522.95288086 249.06211853]
[508.90939331 243.79148865]
[494.86587524 238.52087402]
[477.03305054 248.50866699]
[457.34918213 241.99624634]
[448.75164795 222.80711365]
[434.41806030 218.38578796]
[420.08444214 213.96446228]
[405.75085449 209.54313660]
[391.41726685 205.12181091]
[377.08367920 200.70048523]
[362.75009155 196.27914429]
[355.43130493 197.31153870]
[348.23605347 191.68298340]
[333.97018433 187.04772949]
[319.70434570 182.41247559]
[305.43850708 177.77722168]
[294.88861084 185.17594910]
[281.80834961 185.14672852]
[270.97393799 177.47615051]
[266.47039795 164.78184509]
[252.27548218 159.93370056]
[238.08058167 155.08555603]
[223.88566589 150.23741150]
[209.69075012 145.38926697]
[195.14581299 148.59771729]
[184.58711243 136.81533813]
[170.39219666 131.96719360]
[156.19728088 127.11905670]
[142.00238037 122.27091217]
[133.76919556 133.46392822]
[122.65139008 141.79841614]
[109.59867859 146.56240845]
[110.27165222 161.54730225]
[110.94462585 176.53221130]
[120.22429657 190.05329895]
[112.91133881 204.73159790]
[96.52870178 205.46734619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[8 127]
[9 126]
[10 125]
[11 124]
[14 122]
[15 121]
[16 120]
[18 118]
[19 117]
[25 114]
[26 113]
[27 112]
[28 111]
[29 110]
[30 109]
[31 108]
[32 107]
[33 106]
[34 105]
[35 104]
[36 103]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[51 92]
[52 91]
[53 90]
[54 89]
[55 88]
[57 87]
[58 86]
[59 85]
[61 83]
[62 82]
[68 75]
[69 74]
[136 201]
[137 200]
[138 199]
[139 198]
[141 196]
[142 195]
[143 194]
[144 193]
[145 192]
[148 188]
[149 187]
[150 186]
[151 185]
[152 183]
[153 182]
[154 181]
[155 180]
[156 179]
[157 178]
[158 177]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
