%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGGGUCGAGGCGAGGCCAACGAUACGCCUGCUGCAGCAGGAGGAGUUACGAGCCGGGCCGCGCGCUGCCUAAAUACCUAAACCAGGUUUAGCGCCUGCUCAUAUAAAGCUCUCCUAACUCGUCUUCCGGUGGGAAUUUCUUCACGUGGGCCGGAGUCGGAGACUGAGUUUAGCUUUACUGAGGAGCUCUAAAUUUAGGCGGGU\
) } def
/len { sequence length } bind def

/coor [
[29.15151215 215.72219849]
[34.81949997 229.61010742]
[36.03475952 244.56079102]
[32.68410492 259.18176270]
[25.07960892 272.11126709]
[13.92955112 282.14501953]
[0.27243608 288.34851074]
[-14.61972427 290.14392090]
[-29.35988808 287.36407471]
[-42.57516861 280.26785278]
[-53.03470993 269.51620483]
[-59.76431656 256.11050415]
[-62.13719940 241.29939270]
[-59.93235016 226.46232605]
[-53.35512924 212.98121643]
[-43.01752090 202.11123657]
[-57.35111618 206.53256226]
[-71.68470764 210.95388794]
[-82.59116364 222.41511536]
[-97.03360748 218.77297974]
[-111.36720276 223.19432068]
[-125.70079803 227.61564636]
[-140.03439331 232.03697205]
[-148.46684265 250.27276611]
[-167.30084229 256.33551025]
[-184.25631714 246.74380493]
[-198.37712097 251.80375671]
[-205.18263245 265.81527710]
[-219.57521057 270.74563599]
[-232.89111328 264.17126465]
[-247.01190186 269.23123169]
[-257.39318848 281.17022705]
[-271.98449707 278.17971802]
[-286.10528564 283.23968506]
[-300.22607422 288.29962158]
[-310.60736084 300.23861694]
[-325.19866943 297.24810791]
[-339.31945801 302.30807495]
[-353.44024658 307.36801147]
[-366.31137085 318.40298462]
[-380.47817993 309.08963013]
[-375.45056152 292.89828491]
[-358.50021362 293.24722290]
[-344.37939453 288.18728638]
[-330.25860596 283.12731934]
[-320.88735962 271.55023193]
[-305.28604126 274.17883301]
[-291.16522217 269.11886597]
[-277.04443359 264.05892944]
[-267.67318726 252.48184204]
[-252.07185364 255.11042786]
[-237.95106506 250.05047607]
[-231.84111023 236.51518250]
[-217.59269714 231.18251038]
[-203.43705750 237.68296814]
[-189.31626892 232.62301636]
[-187.59365845 222.50219727]
[-181.77964783 213.94297791]
[-172.86807251 208.52774048]
[-162.43243408 207.29107666]
[-152.34820557 210.52276611]
[-144.45571899 217.70338440]
[-130.12211609 213.28204346]
[-115.78852844 208.86071777]
[-101.45494080 204.43939209]
[-91.57371521 193.29441833]
[-76.10603333 196.62030029]
[-61.77244186 192.19895935]
[-47.43885040 187.77763367]
[-41.16598129 180.57707214]
[-30.41703415 180.04595947]
[-17.65683365 172.16070557]
[-4.89663219 164.27545166]
[7.86356878 156.39019775]
[20.62376976 148.50494385]
[33.38397217 140.61967468]
[46.14417267 132.73442078]
[58.90437317 124.84916687]
[71.66457367 116.96391296]
[84.42477417 109.07865143]
[87.98097992 94.50630188]
[80.28749084 81.62957001]
[72.59400177 68.75283813]
[64.90051270 55.87610626]
[49.75767136 50.57762909]
[44.59499359 35.38795090]
[53.37284851 21.95929337]
[69.35761261 20.59297371]
[80.28714752 32.33711624]
[77.77724457 48.18261719]
[85.47073364 61.05934906]
[93.16422272 73.93608093]
[100.85771179 86.81281281]
[115.01596069 91.76699829]
[129.05947876 86.49637604]
[143.10301208 81.22575378]
[157.14653015 75.95513153]
[167.34803772 63.86217117]
[181.98245239 66.63405609]
[196.02597046 61.36343384]
[200.14773560 48.54008865]
[210.74784851 40.54883194]
[223.82138062 40.12831879]
[234.58787537 47.20812988]
[248.70866394 42.14817810]
[262.82946777 37.08823013]
[276.95025635 32.02827835]
[283.15539551 20.72021675]
[295.02139282 16.79672623]
[306.01547241 21.84339905]
[320.21038818 16.99525452]
[334.40527344 12.14710903]
[348.60018921 7.29896450]
[362.79510498 2.45081949]
[376.99002075 -2.39732552]
[391.18493652 -7.24547052]
[393.41088867 -15.29274464]
[398.57754517 -21.73164749]
[405.78555298 -25.55997467]
[413.82620239 -26.21975517]
[421.38378906 -23.67747879]
[427.25100708 -18.41756058]
[441.71044922 -22.40811348]
[456.16989136 -26.39866638]
[470.62933350 -30.38921928]
[485.08877563 -34.37977219]
[499.51797485 -38.47836685]
[513.91607666 -42.68478012]
[528.31420898 -46.89118958]
[542.71234131 -51.09759903]
[556.94311523 -55.83943176]
[570.98663330 -61.11005402]
[585.03015137 -66.38067627]
[599.07366943 -71.65129852]
[613.11724854 -76.92192078]
[627.16076660 -82.19254303]
[634.59527588 -101.86149597]
[653.85449219 -109.53944397]
[672.25268555 -100.63599396]
[685.95587158 -106.73704529]
[699.65905762 -112.83808899]
[708.85522461 -126.41609955]
[725.19061279 -124.97125244]
[731.86071777 -109.98988342]
[722.00396729 -96.88354492]
[705.76007080 -99.13491058]
[692.05688477 -93.03385925]
[678.35375977 -86.93280792]
[677.85156250 -77.58987427]
[673.95666504 -69.01903534]
[667.16583252 -62.41543198]
[658.38275146 -58.71667099]
[648.79791260 -58.46984482]
[639.72723389 -61.75102615]
[632.43133545 -68.14902496]
[618.38781738 -62.87839890]
[604.34429932 -57.60777664]
[590.30078125 -52.33715439]
[576.25726318 -47.06653214]
[562.21374512 -41.79590988]
[574.58038330 -33.30673599]
[575.80682373 -18.35695839]
[564.98913574 -7.96577311]
[550.10076904 -9.79232121]
[542.11566162 -22.49028778]
[546.91876221 -36.69947052]
[532.52062988 -32.49306107]
[518.12249756 -28.28664970]
[503.72436523 -24.08023834]
[498.18505859 -19.18674469]
[489.07931519 -19.92032814]
[474.61987305 -15.92977524]
[460.16043091 -11.93922329]
[445.70098877 -7.94867039]
[431.24154663 -3.95811749]
[417.64239502 12.87897301]
[396.03308105 6.94944048]
[381.83816528 11.79758549]
[367.64324951 16.64573097]
[353.44833374 21.49387550]
[339.25341797 26.34202003]
[325.05853271 31.19016457]
[310.86361694 36.03831100]
[300.04684448 49.85688782]
[282.01022339 46.14907837]
[267.88940430 51.20902634]
[253.76861572 56.26897812]
[239.64781189 61.32892609]
[233.12104797 76.82822418]
[217.08837891 82.93199158]
[201.29660034 75.40695953]
[187.25306702 80.67758179]
[178.05604553 92.39355469]
[162.41716003 89.99865723]
[148.37362671 95.26927948]
[134.33010864 100.53990173]
[120.28658295 105.81052399]
[92.31002808 121.83885193]
[79.54982758 129.72410583]
[66.78962708 137.60937500]
[54.02942657 145.49462891]
[41.26922607 153.37988281]
[28.50902557 161.26513672]
[15.74882507 169.15039062]
[2.98862433 177.03564453]
[-9.77157688 184.92091370]
[-22.53177834 192.80616760]
[-7.54515076 192.17291260]
[6.93455362 196.08930969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 69]
[17 68]
[18 67]
[20 65]
[21 64]
[22 63]
[23 62]
[26 56]
[27 55]
[30 52]
[31 51]
[33 49]
[34 48]
[35 47]
[37 45]
[38 44]
[39 43]
[71 207]
[72 206]
[73 205]
[74 204]
[75 203]
[76 202]
[77 201]
[78 200]
[79 199]
[80 198]
[81 93]
[82 92]
[83 91]
[84 90]
[94 197]
[95 196]
[96 195]
[97 194]
[99 192]
[100 191]
[104 188]
[105 187]
[106 186]
[107 185]
[110 183]
[111 182]
[112 181]
[113 180]
[114 179]
[115 178]
[116 177]
[122 175]
[123 174]
[124 173]
[125 172]
[126 171]
[127 169]
[128 168]
[129 167]
[130 166]
[131 160]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
