%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCUCAGAGCCCCAGUCGCGCGCCCCUUCUUGGUUCGCUCGGUGCCCGCGCAGGCCCCUCGGGCGGUGGCGAGGAGGCGCCCAGGCGGAGGCGGCGGCGGGCGGAGGAGCGCAGGAGCGGGCGGCCAGGCCACCGCGCGGCGGCGGAGCGGGCCGCGGCCCGGCGCUCCUUCCCCACCGCGGCCCGACGCACCCCGGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-63.11613464 136.17864990]
[-77.80239105 139.23049927]
[-92.46507263 142.39369202]
[-107.10333252 145.66806030]
[-121.74158478 148.94242859]
[-126.41117859 163.50753784]
[-137.66987610 173.71235657]
[-152.42677307 176.89047241]
[-166.69761658 172.28623962]
[-176.68052673 161.23149109]
[-191.31877136 164.50585938]
[-205.95703125 167.78022766]
[-220.57002258 171.16558838]
[-235.15689087 174.66174316]
[-248.21925354 187.63874817]
[-264.83605957 181.99942017]
[-279.36819458 185.71653748]
[-293.90032959 189.43365479]
[-308.43246460 193.15077209]
[-322.96459961 196.86788940]
[-330.50592041 202.02783203]
[-337.74551392 200.52937317]
[-352.33236694 204.02551270]
[-366.91925049 207.52165222]
[-381.50613403 211.01780701]
[-396.09301758 214.51394653]
[-398.57369995 227.19129944]
[-405.64007568 237.94912720]
[-416.21234131 245.20797729]
[-428.69921875 247.91816711]
[-441.23739624 245.71145630]
[-451.96954346 238.95060730]
[-459.31945801 228.67036438]
[-474.00573730 231.72219849]
[-488.69198608 234.77404785]
[-503.37823486 237.82588196]
[-515.31555176 248.20907593]
[-529.35083008 243.22305298]
[-544.03710938 246.27488708]
[-555.97442627 256.65808105]
[-570.00970459 251.67205811]
[-584.69598389 254.72389221]
[-599.38220215 257.77572632]
[-613.65991211 266.91818237]
[-626.39752197 255.72935486]
[-619.17205811 240.39216614]
[-602.43408203 243.08947754]
[-587.74780273 240.03764343]
[-573.06152344 236.98579407]
[-562.17468262 226.82089233]
[-547.08892822 231.58862305]
[-532.40270996 228.53678894]
[-521.51580811 218.37188721]
[-506.43008423 223.13961792]
[-491.74383545 220.08778381]
[-477.05755615 217.03593445]
[-462.37130737 213.98410034]
[-457.57534790 197.45085144]
[-445.00296021 185.56143188]
[-428.05432129 181.65545654]
[-411.37649536 186.89640808]
[-399.58914185 199.92707825]
[-385.00228882 196.43092346]
[-370.41540527 192.93478394]
[-355.82852173 189.43862915]
[-341.24163818 185.94248962]
[-326.68173218 182.33575439]
[-312.14956665 178.61863708]
[-297.61743164 174.90151978]
[-283.08529663 171.18440247]
[-268.55316162 167.46728516]
[-262.11685181 157.22286987]
[-250.03787231 154.00845337]
[-238.65304565 160.07485962]
[-224.06616211 156.57872009]
[-218.29244995 151.96125793]
[-209.23139954 153.14198303]
[-194.59315491 149.86761475]
[-179.95489502 146.59324646]
[-175.63330078 132.33879089]
[-164.68414307 122.09320068]
[-149.97956848 118.68119812]
[-135.44604492 123.11666107]
[-125.01595306 134.30418396]
[-110.37770081 131.02980042]
[-95.73944855 127.75543976]
[-89.89631653 123.22612762]
[-80.85423279 124.54423523]
[-66.16797638 121.49239349]
[-55.28110504 111.32748413]
[-40.19537354 116.09522247]
[-25.50911331 113.04338837]
[-10.82285213 109.99154663]
[3.86340904 106.93970490]
[18.54967117 103.88786316]
[33.23593140 100.83602142]
[47.92219162 97.78418732]
[62.60845566 94.73234558]
[77.29471588 91.68050385]
[111.72885132 62.70523453]
[124.71923828 55.20523453]
[137.70960999 47.70523453]
[143.57914734 40.70201111]
[150.95454407 40.19169998]
[164.05725098 32.88970566]
[177.15995789 25.58771515]
[190.26266479 18.28572273]
[203.36537170 10.98373222]
[216.46807861 3.68174005]
[229.57078552 -3.62025166]
[242.67349243 -10.92224312]
[255.77619934 -18.22423553]
[268.87890625 -25.52622604]
[277.16702271 -39.00278091]
[292.05099487 -38.43977356]
[305.15368652 -45.74176407]
[311.12884521 -52.65510178]
[318.51113892 -53.05342484]
[331.72314453 -60.15572739]
[336.17965698 -72.26172638]
[347.33276367 -77.90463257]
[358.95556641 -74.54533386]
[372.27383423 -81.44630432]
[385.59210205 -88.34728241]
[398.91040039 -95.24826050]
[412.22866821 -102.14923096]
[425.54696655 -109.05020905]
[427.85018921 -125.80551910]
[439.56936646 -137.76849365]
[455.94543457 -140.36412048]
[470.49493408 -132.76527405]
[483.70693970 -139.86756897]
[492.19863892 -153.21679688]
[507.07235718 -152.42796326]
[520.28436279 -159.53027344]
[533.49639893 -166.63256836]
[546.70837402 -173.73487854]
[557.79663086 -186.56011963]
[573.19018555 -179.45556641]
[570.62469482 -162.69685364]
[553.81066895 -160.52285767]
[540.59869385 -153.42056274]
[527.38665771 -146.31825256]
[514.17462158 -139.21595764]
[506.62796021 -126.37474060]
[490.80923462 -126.65556335]
[477.59722900 -119.55326080]
[477.03424072 -106.21266174]
[469.89492798 -94.80120087]
[457.95385742 -88.35698700]
[444.27993774 -88.65777588]
[432.44793701 -95.73193359]
[419.12963867 -88.83095551]
[405.81137085 -81.92997742]
[392.49310303 -75.02900696]
[379.17480469 -68.12802887]
[365.85653687 -61.22705078]
[357.21166992 -45.95660782]
[338.82543945 -46.94371414]
[325.61343384 -39.84141159]
[312.45568848 -32.63905716]
[299.35296631 -25.33706474]
[292.00204468 -12.38279819]
[276.18090820 -12.42352009]
[263.07818604 -5.12152863]
[249.97547913 2.18046308]
[236.87277222 9.48245525]
[223.77006531 16.78444672]
[210.66735840 24.08643913]
[197.56465149 31.38842964]
[184.46194458 38.69042206]
[171.35923767 45.99241257]
[158.25653076 53.29440689]
[145.20960999 60.69561386]
[132.21923828 68.19561768]
[119.22885132 75.69561768]
[117.75869751 83.05010986]
[129.02693176 92.95097351]
[114.81838989 97.75910950]
[113.34823608 105.11360931]
[122.45706940 117.03121185]
[131.56590271 128.94880676]
[147.26225281 130.79272461]
[156.99171448 143.24716187]
[154.98194885 158.92314148]
[142.42533875 168.52038574]
[126.77147675 166.34500122]
[117.30753326 153.68762207]
[119.64829254 138.05764771]
[110.53946686 126.14003754]
[101.43063354 114.22243500]
[105.54016876 128.64851379]
[98.91516876 142.10620117]
[84.97613525 147.64726257]
[70.91982269 142.41084290]
[64.00354004 129.10050964]
[67.79817200 114.58841705]
[80.34655762 106.36676788]
[65.66029358 109.41860199]
[50.97403336 112.47044373]
[36.28777313 115.52228546]
[21.60151100 118.57412720]
[6.91524935 121.62596893]
[-7.77101183 124.67780304]
[-22.45727348 127.72964478]
[-37.14353561 130.78147888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 89]
[2 88]
[3 86]
[4 85]
[5 84]
[10 79]
[11 78]
[12 77]
[13 75]
[14 74]
[16 71]
[17 70]
[18 69]
[19 68]
[20 67]
[22 66]
[23 65]
[24 64]
[25 63]
[26 62]
[33 57]
[34 56]
[35 55]
[36 54]
[38 52]
[39 51]
[41 49]
[42 48]
[43 47]
[91 206]
[92 205]
[93 204]
[94 203]
[95 202]
[96 201]
[97 200]
[98 199]
[99 198]
[100 176]
[101 175]
[102 174]
[104 173]
[105 172]
[106 171]
[107 170]
[108 169]
[109 168]
[110 167]
[111 166]
[112 165]
[113 164]
[115 162]
[116 161]
[118 160]
[119 159]
[122 157]
[123 156]
[124 155]
[125 154]
[126 153]
[127 152]
[131 147]
[132 146]
[134 144]
[135 143]
[136 142]
[137 141]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
