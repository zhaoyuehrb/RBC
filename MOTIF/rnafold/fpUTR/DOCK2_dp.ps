%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DOCK2)
} def

/sequence { (\
AGGAAGGAAGUGGGGCCCUGCGGCGCCCAGCCACCCCCUGACGGCUUCCCCACGGGAGGACGCGAGGCCCCGGCCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.015488607 ubox
2 35 0.006371393 ubox
2 36 0.020525437 ubox
2 37 0.004416402 ubox
2 38 0.016483842 ubox
2 69 0.003889841 ubox
2 70 0.004577338 ubox
2 71 0.006570178 ubox
2 75 0.014174619 ubox
2 76 0.045662757 ubox
2 80 0.932190899 ubox
3 34 0.006382007 ubox
3 35 0.020561840 ubox
3 36 0.004495184 ubox
3 37 0.016449949 ubox
3 68 0.003890146 ubox
3 69 0.004582237 ubox
3 70 0.006551222 ubox
3 74 0.014129593 ubox
3 75 0.043585713 ubox
3 79 0.940030212 ubox
5 39 0.005592822 ubox
6 32 0.022943594 ubox
6 35 0.018449022 ubox
6 36 0.006540948 ubox
6 38 0.005787525 ubox
6 71 0.006129927 ubox
6 75 0.165675617 ubox
6 76 0.960015110 ubox
6 80 0.070638672 ubox
7 31 0.022897884 ubox
7 34 0.018482465 ubox
7 35 0.006522272 ubox
7 37 0.005783284 ubox
7 70 0.005985644 ubox
7 74 0.169550188 ubox
7 75 0.956861458 ubox
7 79 0.071203268 ubox
10 31 0.014450485 ubox
10 34 0.006647057 ubox
10 74 0.369357172 ubox
10 79 0.029989801 ubox
11 29 0.053639191 ubox
11 30 0.010953043 ubox
11 33 0.006620693 ubox
11 72 0.910791855 ubox
11 73 0.263590440 ubox
11 77 0.005051080 ubox
11 78 0.028611937 ubox
12 27 0.009973495 ubox
12 28 0.058800214 ubox
12 32 0.006557057 ubox
12 71 0.996180512 ubox
12 76 0.004852210 ubox
13 26 0.010139104 ubox
13 27 0.058777830 ubox
13 28 0.014927946 ubox
13 31 0.004647467 ubox
13 70 0.996694287 ubox
13 71 0.039202870 ubox
13 75 0.004112456 ubox
13 76 0.034702116 ubox
14 26 0.058712902 ubox
14 27 0.015720410 ubox
14 69 0.996857593 ubox
14 70 0.034883384 ubox
14 74 0.003225701 ubox
14 75 0.034942056 ubox
15 24 0.059476654 ubox
15 26 0.015777521 ubox
15 68 0.997017705 ubox
15 69 0.029909782 ubox
15 74 0.035029084 ubox
16 23 0.059506597 ubox
16 25 0.015831623 ubox
16 67 0.994957938 ubox
16 73 0.034841651 ubox
17 22 0.059329078 ubox
17 23 0.015923097 ubox
17 66 0.992147069 ubox
17 67 0.070224090 ubox
17 72 0.033408090 ubox
17 73 0.004151314 ubox
18 22 0.015891945 ubox
18 66 0.096399156 ubox
18 72 0.005710316 ubox
19 62 0.009152763 ubox
19 64 0.956879366 ubox
19 65 0.103842538 ubox
19 72 0.003934533 ubox
20 31 0.005124856 ubox
20 61 0.009418848 ubox
20 63 0.990794127 ubox
20 68 0.005344152 ubox
20 71 0.022326094 ubox
21 30 0.005215735 ubox
21 62 0.989024008 ubox
21 64 0.054159640 ubox
21 67 0.005151263 ubox
21 72 0.008136049 ubox
22 28 0.017809869 ubox
22 32 0.902613117 ubox
22 35 0.015290035 ubox
22 36 0.012572321 ubox
22 46 0.005985878 ubox
22 61 0.413688761 ubox
22 63 0.036658084 ubox
22 70 0.026648813 ubox
22 71 0.018733336 ubox
23 27 0.018757984 ubox
23 31 0.954650315 ubox
23 34 0.017524268 ubox
23 35 0.014102920 ubox
23 36 0.003572851 ubox
23 45 0.029847824 ubox
23 46 0.007876792 ubox
23 47 0.004938831 ubox
23 63 0.065756197 ubox
23 69 0.026676959 ubox
23 70 0.018713074 ubox
24 30 0.954760945 ubox
24 43 0.052949535 ubox
24 44 0.034144530 ubox
24 62 0.074932080 ubox
25 31 0.070349515 ubox
25 42 0.053376069 ubox
25 45 0.140016258 ubox
25 61 0.075106751 ubox
25 68 0.032619117 ubox
26 30 0.069999814 ubox
26 44 0.151946736 ubox
26 55 0.003441398 ubox
26 56 0.157924914 ubox
26 59 0.091573489 ubox
26 67 0.032623915 ubox
27 43 0.151279313 ubox
27 44 0.015195109 ubox
27 54 0.003432204 ubox
27 55 0.157983740 ubox
27 56 0.007375304 ubox
27 58 0.091261637 ubox
27 59 0.069993730 ubox
27 66 0.032595836 ubox
28 40 0.167531765 ubox
28 43 0.015360110 ubox
28 54 0.157901046 ubox
28 55 0.007375743 ubox
28 58 0.070415924 ubox
29 39 0.169028708 ubox
29 46 0.199269952 ubox
29 47 0.008696618 ubox
30 38 0.168068634 ubox
30 45 0.208804240 ubox
30 63 0.032569060 ubox
30 74 0.052608193 ubox
31 44 0.210259868 ubox
31 59 0.005555812 ubox
31 62 0.032482263 ubox
31 73 0.052739574 ubox
32 40 0.046956486 ubox
32 43 0.210318629 ubox
32 58 0.006416714 ubox
32 72 0.052651913 ubox
33 39 0.045138903 ubox
34 44 0.353643468 ubox
34 56 0.009212518 ubox
34 59 0.323047960 ubox
35 43 0.353860676 ubox
35 44 0.415354423 ubox
35 55 0.009148935 ubox
35 56 0.036644207 ubox
35 58 0.324192023 ubox
35 59 0.284858640 ubox
36 43 0.418770529 ubox
36 44 0.326058545 ubox
36 54 0.009030899 ubox
36 55 0.036828372 ubox
36 56 0.215619965 ubox
36 58 0.285627824 ubox
36 59 0.011832693 ubox
36 67 0.008917797 ubox
37 43 0.328164098 ubox
37 44 0.450634062 ubox
37 54 0.036792116 ubox
37 55 0.215467640 ubox
37 56 0.376510677 ubox
37 58 0.011124049 ubox
37 59 0.046850556 ubox
37 66 0.009265994 ubox
37 67 0.059036288 ubox
38 43 0.454231605 ubox
38 44 0.047528620 ubox
38 54 0.215085206 ubox
38 55 0.376789651 ubox
38 56 0.011973782 ubox
38 58 0.046994167 ubox
38 66 0.061163399 ubox
39 43 0.043379110 ubox
39 52 0.167329860 ubox
39 54 0.376099524 ubox
39 55 0.011766424 ubox
39 57 0.046352248 ubox
39 64 0.051373991 ubox
39 65 0.062913680 ubox
40 48 0.008388860 ubox
40 51 0.167127577 ubox
40 53 0.374324130 ubox
40 61 0.014140301 ubox
40 63 0.065822274 ubox
41 47 0.008457823 ubox
42 54 0.046776527 ubox
42 62 0.107131583 ubox
42 64 0.008647250 ubox
43 49 0.185704355 ubox
43 50 0.303006278 ubox
43 51 0.231543790 ubox
43 53 0.046978033 ubox
43 61 0.217003852 ubox
43 63 0.008656191 ubox
44 48 0.183257637 ubox
44 49 0.300519656 ubox
44 50 0.230434512 ubox
44 63 0.006547485 ubox
45 58 0.114593469 ubox
45 59 0.847650554 ubox
45 62 0.006703435 ubox
46 57 0.113495698 ubox
46 58 0.859557185 ubox
46 59 0.007491381 ubox
46 60 0.018429764 ubox
47 56 0.110988064 ubox
47 57 0.873139071 ubox
47 58 0.004444840 ubox
47 59 0.020249591 ubox
47 60 0.054528819 ubox
48 55 0.111402077 ubox
48 56 0.875261132 ubox
48 58 0.021070302 ubox
48 59 0.058964640 ubox
49 54 0.111221639 ubox
49 55 0.875169704 ubox
49 56 0.026780559 ubox
49 58 0.058924572 ubox
49 59 0.003197769 ubox
50 54 0.868807096 ubox
50 55 0.029002895 ubox
50 56 0.058008504 ubox
50 58 0.003194878 ubox
50 59 0.007856764 ubox
51 55 0.057597389 ubox
51 58 0.007878798 ubox
62 79 0.018677291 ubox
63 78 0.019066035 ubox
66 75 0.020227821 ubox
67 74 0.020276155 ubox
68 73 0.020224938 ubox
72 80 0.150600702 ubox
73 79 0.153177426 ubox
74 78 0.152076358 ubox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
6 76 0.9500000 lbox
7 75 0.9500000 lbox
11 72 0.9500000 lbox
12 71 0.9500000 lbox
13 70 0.9500000 lbox
14 69 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
19 64 0.9500000 lbox
20 63 0.9500000 lbox
21 62 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
showpage
end
%%EOF
