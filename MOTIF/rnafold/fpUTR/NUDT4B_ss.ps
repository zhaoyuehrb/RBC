%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGGAGCGGCCGCCGGCCCCGGGACUGACCGGCCUCGCCGCACCUCCCGCACCGACUAGCGCUCCCGGGCGCUCCUGCGCCCGACUCGCCCUCGCCCCCACUCCCCGGCGGGGUGGCGGCGGCCGGGCCCCCACGGCGGCGGCCGGAGCAGCAGCAGCAGCAGCAGGAGCCCGCCUCU\
) } def
/len { sequence length } bind def

/coor [
[-43.11423111 155.33435059]
[-55.83494949 163.28314209]
[-68.55567169 171.23193359]
[-81.27639771 179.18072510]
[-93.99711609 187.12951660]
[-101.60018158 201.00408936]
[-116.49366760 201.18692017]
[-129.21438599 209.13571167]
[-141.93510437 217.08448792]
[-154.65582275 225.03327942]
[-153.62234497 242.55262756]
[-161.54859924 258.11087036]
[-176.17880249 267.47817993]
[-193.44860840 268.15890503]
[-208.61399841 260.05599976]
[-221.04956055 268.44390869]
[-233.48512268 276.83178711]
[-245.92068481 285.21969604]
[-254.07563782 305.01699829]
[-274.68869019 305.68905640]
[-286.66824341 314.71627808]
[-298.64776611 323.74353027]
[-310.62728882 332.77075195]
[-312.57836914 348.45413208]
[-325.09896851 358.09829712]
[-340.76086426 355.98153687]
[-350.27209473 343.35968018]
[-347.98986816 327.72103882]
[-335.26815796 318.34375000]
[-319.65451050 320.79119873]
[-307.67498779 311.76397705]
[-295.69546509 302.73675537]
[-283.71591187 293.70953369]
[-283.92675781 284.78451538]
[-279.93185425 276.64688110]
[-272.51977539 271.19161987]
[-263.29006958 269.75384521]
[-254.30857849 272.78411865]
[-241.87301636 264.39624023]
[-229.43745422 256.00833130]
[-217.00189209 247.62043762]
[-219.23606873 235.15455627]
[-216.57035828 222.72590637]
[-209.36763000 212.19549561]
[-198.67280579 205.15379333]
[-186.06137085 202.68055725]
[-173.40730286 205.17944336]
[-162.60461426 212.31256104]
[-149.88389587 204.36376953]
[-137.16317749 196.41497803]
[-124.44245148 188.46620178]
[-117.74925995 175.16017151]
[-101.94590759 174.40878296]
[-89.22518158 166.46000671]
[-76.50446320 158.51121521]
[-63.78374100 150.56242371]
[-51.06301880 142.61363220]
[-48.12008286 123.37999725]
[-31.75378036 112.30455780]
[-12.21231079 116.86135864]
[0.07497032 108.25771332]
[12.21022511 99.44093323]
[24.18975830 90.41370392]
[36.16928864 81.38648224]
[48.14882278 72.35925293]
[60.12835693 63.33203125]
[63.24703217 48.65981674]
[55.97488785 35.54051971]
[48.70274353 22.42122650]
[41.43059921 9.30193043]
[34.15845490 -3.81736541]
[26.88631058 -16.93666077]
[19.61416626 -30.05595589]
[5.28632641 -38.03374100]
[5.30195427 -54.43288422]
[19.64497185 -62.38334656]
[33.56051254 -53.70637894]
[32.73345947 -37.32810211]
[40.00560379 -24.20880508]
[47.27774811 -11.08950996]
[54.54989243 2.02978587]
[61.82203674 15.14908123]
[69.09418488 28.26837730]
[76.36632538 41.38767242]
[83.85919189 41.06052780]
[90.78539276 27.75535011]
[98.84490967 40.40623474]
[106.33777618 40.07909012]
[112.43881989 26.37590981]
[118.53987122 12.67272758]
[124.64092255 -1.03045452]
[130.74197388 -14.73363686]
[131.37850952 -23.87461090]
[137.07093811 -28.62128067]
[143.41021729 -42.21589661]
[149.74948120 -55.81051254]
[156.08876038 -69.40512848]
[147.21365356 -81.94020081]
[145.81109619 -97.23492432]
[152.25839233 -111.17508698]
[164.82121277 -120.01085663]
[180.12025452 -121.36545563]
[194.04014587 -114.87450409]
[202.83648682 -102.28404236]
[204.14312744 -86.98082733]
[197.60858154 -73.08135986]
[184.99060059 -64.32452393]
[169.68338013 -63.06585693]
[163.34410095 -49.47124100]
[157.00482178 -35.87662125]
[150.66555786 -22.28200531]
[144.44515991 -8.63258648]
[138.34410095 5.07059526]
[132.24305725 18.77377701]
[126.14200592 32.47695923]
[120.04095459 46.18014145]
[128.53704834 58.54203415]
[143.51649475 57.75699234]
[154.06417847 46.29470825]
[169.26664734 45.71195602]
[180.12918091 55.83820343]
[195.10862732 55.05316544]
[210.08807373 54.26812363]
[225.06752014 53.48308563]
[240.04695129 52.69804764]
[255.02639771 51.91300583]
[270.21545410 41.52563858]
[285.53408813 50.06309891]
[300.49755859 49.01675034]
[315.46099854 47.97040558]
[327.02902222 36.85461426]
[342.91259766 39.11101151]
[350.92721558 53.00867844]
[344.92477417 67.88652039]
[329.50979614 72.33152008]
[316.50735474 62.93386459]
[301.54388428 63.98021317]
[286.58044434 65.02655792]
[278.39489746 73.95677185]
[265.91796875 74.93568420]
[255.81144714 66.89244843]
[240.83200073 67.67749023]
[225.85255432 68.46253204]
[210.87310791 69.24756622]
[195.89366150 70.03260803]
[180.91423035 70.81764984]
[171.16967773 82.02386475]
[155.98957825 83.03339386]
[144.30152893 72.73643494]
[129.32208252 73.52147675]
[132.36953735 96.56295013]
[122.17453003 112.78218079]
[132.40451050 123.75247955]
[147.47489929 128.56846619]
[150.49618530 143.15342712]
[160.72615051 154.12373352]
[176.55839539 158.39833069]
[180.51054382 174.31411743]
[168.51696777 185.49832153]
[152.91563416 180.44557190]
[149.75584412 164.35371399]
[139.52587891 153.38340759]
[125.18718719 149.35209656]
[121.43419647 133.98245239]
[111.20422363 123.01215363]
[74.57563019 120.32735443]
[69.15557861 75.31156158]
[57.17604828 84.33879089]
[45.19651413 93.36601257]
[33.21698380 102.39324188]
[21.23744965 111.42046356]
[18.28705025 117.38767242]
[13.47959614 120.48407745]
[8.67861652 120.54499054]
[-3.60866380 129.14863586]
[-2.78131151 139.83432007]
[-6.45051956 149.81819153]
[-13.88665009 157.31016541]
[-23.69131470 160.99699402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 57]
[2 56]
[3 55]
[4 54]
[5 53]
[7 51]
[8 50]
[9 49]
[10 48]
[15 41]
[16 40]
[17 39]
[18 38]
[20 33]
[21 32]
[22 31]
[23 30]
[60 175]
[61 174]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
[94 111]
[95 110]
[96 109]
[97 108]
[117 150]
[118 149]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[128 138]
[129 137]
[130 136]
[152 165]
[153 164]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
