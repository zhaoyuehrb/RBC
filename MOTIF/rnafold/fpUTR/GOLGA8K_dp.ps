%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GOLGA8K)
} def

/sequence { (\
AGUCACACAGCUGCCUGGUAGGUGACUGGAGGCCUUGAUCGGUUCUCAUUGAGAUUUUGCUGCUGUGACCCCAACCCUGCCUCCCUCCCCACCCUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.461393648 ubox
1 16 0.054914209 ubox
1 27 0.241887784 ubox
1 95 0.004683781 ubox
2 8 0.139393146 ubox
2 11 0.499559641 ubox
2 14 0.024654202 ubox
2 15 0.057936913 ubox
2 26 0.256142132 ubox
2 69 0.171326428 ubox
2 94 0.004844840 ubox
2 97 0.009373013 ubox
3 7 0.125792976 ubox
3 10 0.484584917 ubox
3 13 0.013786051 ubox
3 25 0.256197262 ubox
3 68 0.171863133 ubox
3 96 0.007289317 ubox
4 13 0.062410740 ubox
4 17 0.019790821 ubox
4 24 0.256064340 ubox
4 67 0.171932758 ubox
4 96 0.004943262 ubox
5 12 0.057601894 ubox
5 16 0.018204443 ubox
5 19 0.031503532 ubox
5 23 0.255451591 ubox
5 66 0.171788926 ubox
5 95 0.004447894 ubox
6 13 0.032804766 ubox
6 17 0.033363040 ubox
6 18 0.033822651 ubox
6 22 0.254568908 ubox
6 24 0.006479735 ubox
6 65 0.171731900 ubox
6 67 0.012991006 ubox
6 96 0.004553285 ubox
7 12 0.029707557 ubox
7 16 0.032445116 ubox
7 19 0.045376409 ubox
7 23 0.008811971 ubox
7 64 0.170685772 ubox
7 66 0.014274975 ubox
7 95 0.004188478 ubox
8 17 0.262823279 ubox
8 18 0.037559805 ubox
8 22 0.010560626 ubox
8 24 0.016738284 ubox
8 28 0.007995668 ubox
8 62 0.171301622 ubox
8 65 0.015398961 ubox
8 96 0.072879270 ubox
9 16 0.264920169 ubox
9 23 0.019861740 ubox
9 27 0.009043856 ubox
9 61 0.171357497 ubox
9 64 0.016458902 ubox
9 95 0.073232494 ubox
10 15 0.260962875 ubox
10 19 0.164170695 ubox
10 26 0.009139478 ubox
10 60 0.171398510 ubox
10 63 0.017606329 ubox
10 94 0.073184884 ubox
10 97 0.122698009 ubox
11 18 0.170121377 ubox
11 21 0.168725002 ubox
11 59 0.171076638 ubox
11 62 0.017569211 ubox
11 96 0.122720300 ubox
12 17 0.159205622 ubox
12 20 0.168968690 ubox
12 24 0.041965945 ubox
12 96 0.004678905 ubox
12 98 0.422005898 ubox
13 19 0.168960637 ubox
13 23 0.062983945 ubox
13 33 0.111738228 ubox
13 43 0.075514725 ubox
13 58 0.005584290 ubox
13 60 0.016808941 ubox
13 95 0.022839456 ubox
13 97 0.883827942 ubox
14 18 0.167962562 ubox
14 22 0.064323544 ubox
14 29 0.008847431 ubox
14 32 0.113081645 ubox
14 42 0.078587871 ubox
14 59 0.016788924 ubox
14 96 0.883910214 ubox
15 21 0.064382872 ubox
15 28 0.008942669 ubox
15 29 0.018811479 ubox
15 31 0.113174561 ubox
15 41 0.077703618 ubox
15 42 0.075092462 ubox
15 53 0.005528177 ubox
16 20 0.058002314 ubox
16 28 0.019496065 ubox
16 30 0.111169003 ubox
16 41 0.076532732 ubox
16 52 0.005359109 ubox
16 91 0.011523697 ubox
16 96 0.005167843 ubox
16 98 0.008541734 ubox
17 27 0.029656047 ubox
17 40 0.103558531 ubox
17 56 0.004983768 ubox
17 81 0.003637568 ubox
17 90 0.011984120 ubox
17 93 0.890059576 ubox
17 94 0.133792989 ubox
17 95 0.014992621 ubox
17 97 0.013452305 ubox
18 26 0.030652072 ubox
18 39 0.102791376 ubox
18 55 0.005228676 ubox
18 80 0.003655837 ubox
18 89 0.011560677 ubox
18 92 0.891726298 ubox
18 93 0.128222603 ubox
18 94 0.015987087 ubox
18 97 0.299447596 ubox
19 25 0.029982136 ubox
19 28 0.106673783 ubox
19 37 0.012917285 ubox
19 38 0.097662468 ubox
19 51 0.004811484 ubox
19 54 0.005081133 ubox
19 79 0.003656306 ubox
19 91 0.879007800 ubox
19 96 0.299708509 ubox
20 27 0.110023716 ubox
20 35 0.103328441 ubox
20 36 0.015543161 ubox
20 50 0.004727390 ubox
20 78 0.003654129 ubox
20 86 0.003900081 ubox
20 95 0.298739040 ubox
21 26 0.110438604 ubox
21 27 0.007429772 ubox
21 34 0.109484018 ubox
21 35 0.003654006 ubox
21 47 0.003292143 ubox
21 49 0.003589389 ubox
21 50 0.015825392 ubox
21 77 0.003576900 ubox
21 85 0.003972448 ubox
21 86 0.004450586 ubox
21 88 0.030932882 ubox
21 89 0.759081417 ubox
21 90 0.483393351 ubox
21 93 0.177051343 ubox
21 94 0.246350926 ubox
22 26 0.007360933 ubox
22 33 0.109520220 ubox
22 49 0.016820580 ubox
22 76 0.003494714 ubox
22 84 0.003220812 ubox
22 85 0.004612793 ubox
22 87 0.031434248 ubox
22 88 0.759883724 ubox
22 89 0.482459017 ubox
22 92 0.245024280 ubox
22 93 0.179037348 ubox
23 32 0.109333192 ubox
23 48 0.017159069 ubox
23 91 0.297580345 ubox
24 44 0.010125948 ubox
24 47 0.017172641 ubox
24 50 0.007201817 ubox
24 87 0.888193022 ubox
24 90 0.295729321 ubox
25 43 0.017088005 ubox
25 46 0.014042915 ubox
25 49 0.007571742 ubox
25 86 0.872347695 ubox
26 42 0.017871844 ubox
26 53 0.009283527 ubox
27 41 0.017553716 ubox
27 48 0.019082529 ubox
27 52 0.008599624 ubox
27 73 0.003631655 ubox
28 34 0.003238991 ubox
28 40 0.016290533 ubox
28 45 0.005314387 ubox
28 46 0.013152772 ubox
28 47 0.020237412 ubox
28 72 0.003779048 ubox
28 81 0.004748267 ubox
28 83 0.007641162 ubox
28 84 0.979104541 ubox
28 85 0.078960514 ubox
28 86 0.003612673 ubox
28 87 0.003683327 ubox
28 88 0.045449842 ubox
29 33 0.003203468 ubox
29 39 0.010633900 ubox
29 40 0.008338028 ubox
29 44 0.004335980 ubox
29 45 0.019879703 ubox
29 46 0.016916751 ubox
29 47 0.051224146 ubox
29 50 0.005744967 ubox
29 71 0.003777361 ubox
29 80 0.004749091 ubox
29 82 0.003330545 ubox
29 83 0.982301223 ubox
29 84 0.056031950 ubox
29 87 0.045404031 ubox
30 39 0.010468934 ubox
30 44 0.018917006 ubox
30 46 0.051722724 ubox
30 49 0.005420285 ubox
30 78 0.004657982 ubox
30 82 0.983792753 ubox
30 86 0.045214756 ubox
31 43 0.013384745 ubox
31 44 0.024972245 ubox
31 45 0.051615384 ubox
31 70 0.003713068 ubox
31 77 0.004728622 ubox
31 81 0.983961533 ubox
31 85 0.044863414 ubox
32 43 0.056192840 ubox
32 44 0.036460079 ubox
32 69 0.003688050 ubox
32 76 0.004724066 ubox
32 80 0.983894776 ubox
32 84 0.043560171 ubox
33 42 0.076225244 ubox
33 79 0.982026827 ubox
34 41 0.082287171 ubox
34 42 0.030673153 ubox
34 53 0.107987372 ubox
35 41 0.029609884 ubox
35 42 0.007080936 ubox
35 52 0.108229630 ubox
35 54 0.005363887 ubox
35 68 0.023413284 ubox
35 74 0.436077787 ubox
36 41 0.007697055 ubox
36 48 0.012832783 ubox
36 51 0.107591729 ubox
36 53 0.005436685 ubox
36 59 0.003236297 ubox
36 65 0.010450423 ubox
36 67 0.023753481 ubox
36 73 0.476770871 ubox
36 79 0.004118430 ubox
37 44 0.003375742 ubox
37 45 0.022297952 ubox
37 47 0.014618947 ubox
37 50 0.107220856 ubox
37 56 0.038114105 ubox
37 57 0.004610712 ubox
37 58 0.010584709 ubox
37 64 0.010581526 ubox
37 66 0.015425770 ubox
37 72 0.478734928 ubox
37 78 0.047514867 ubox
37 83 0.011692271 ubox
38 43 0.004385530 ubox
38 44 0.022270661 ubox
38 46 0.014106220 ubox
38 49 0.107512990 ubox
38 55 0.041540143 ubox
38 56 0.004765931 ubox
38 57 0.010853214 ubox
38 66 0.045889169 ubox
38 82 0.011239257 ubox
39 48 0.106135499 ubox
39 52 0.040060822 ubox
39 54 0.041607830 ubox
39 65 0.038080973 ubox
39 68 0.056114383 ubox
40 51 0.043098781 ubox
40 53 0.041424709 ubox
40 59 0.018565426 ubox
40 62 0.130971725 ubox
40 65 0.100865808 ubox
40 67 0.054338401 ubox
40 79 0.005771397 ubox
41 47 0.070835690 ubox
41 50 0.043145839 ubox
41 56 0.028741192 ubox
41 57 0.041142224 ubox
41 58 0.020708130 ubox
41 61 0.136048068 ubox
41 64 0.105133212 ubox
41 66 0.036800914 ubox
41 70 0.670312462 ubox
41 71 0.623915399 ubox
41 72 0.223328721 ubox
41 76 0.142792788 ubox
41 77 0.022409590 ubox
41 78 0.009736763 ubox
41 81 0.009863099 ubox
42 46 0.045971123 ubox
42 49 0.041642366 ubox
42 55 0.034936918 ubox
42 56 0.054806049 ubox
42 57 0.020351320 ubox
42 60 0.137093371 ubox
42 63 0.106919423 ubox
42 69 0.672123043 ubox
42 70 0.623439151 ubox
42 71 0.222470817 ubox
42 75 0.143175520 ubox
42 76 0.021312783 ubox
42 77 0.009683782 ubox
42 80 0.009886874 ubox
43 48 0.039033717 ubox
43 52 0.004506194 ubox
43 53 0.041313361 ubox
43 54 0.027361694 ubox
43 59 0.136552069 ubox
43 62 0.106390891 ubox
43 68 0.583012336 ubox
43 74 0.141457129 ubox
43 79 0.009548696 ubox
44 51 0.004313682 ubox
44 52 0.063452940 ubox
44 53 0.008321054 ubox
44 54 0.379673368 ubox
44 67 0.426402016 ubox
44 68 0.550915262 ubox
44 73 0.117411515 ubox
45 51 0.067358548 ubox
45 53 0.425520756 ubox
45 67 0.618095551 ubox
46 52 0.425520441 ubox
46 54 0.041222950 ubox
46 68 0.462963517 ubox
47 51 0.421981833 ubox
47 53 0.043210545 ubox
47 59 0.026815095 ubox
47 62 0.073162767 ubox
47 65 0.683120389 ubox
47 67 0.489423560 ubox
48 55 0.008117919 ubox
48 58 0.026676529 ubox
48 61 0.071474009 ubox
48 64 0.644027143 ubox
48 66 0.491156285 ubox
49 54 0.009275786 ubox
49 65 0.473298354 ubox
49 68 0.007756382 ubox
49 74 0.006699625 ubox
50 59 0.062508433 ubox
50 62 0.213880077 ubox
50 65 0.019935360 ubox
50 67 0.008104126 ubox
50 73 0.008436109 ubox
51 57 0.020431873 ubox
51 58 0.077576920 ubox
51 61 0.109226867 ubox
51 64 0.017064346 ubox
51 66 0.007074846 ubox
51 72 0.008784413 ubox
52 56 0.018010808 ubox
52 57 0.072996293 ubox
52 58 0.047071077 ubox
52 61 0.798365303 ubox
52 64 0.110874729 ubox
53 57 0.033060161 ubox
53 60 0.811177902 ubox
53 63 0.118206017 ubox
54 66 0.016280288 ubox
55 65 0.016687289 ubox
55 68 0.013324321 ubox
55 74 0.004862869 ubox
56 67 0.015681034 ubox
56 68 0.015700465 ubox
56 73 0.005885613 ubox
57 67 0.015088454 ubox
57 68 0.196865923 ubox
57 74 0.009682987 ubox
58 65 0.007849437 ubox
58 67 0.241703342 ubox
58 73 0.011700828 ubox
59 64 0.007581729 ubox
59 66 0.312514007 ubox
59 72 0.011877872 ubox
59 80 0.018518321 ubox
60 65 0.316596633 ubox
60 79 0.018682207 ubox
61 67 0.005782253 ubox
61 73 0.008590022 ubox
62 66 0.004640285 ubox
62 72 0.009404032 ubox
62 78 0.004207978 ubox
62 80 0.011967684 ubox
63 79 0.012170756 ubox
64 73 0.049121370 ubox
65 72 0.052959946 ubox
65 75 0.070322112 ubox
66 73 0.065029715 ubox
66 74 0.066903834 ubox
67 72 0.076083817 ubox
72 79 0.028773609 ubox
72 96 0.007017680 ubox
73 78 0.027731755 ubox
73 95 0.006661638 ubox
78 91 0.009476230 ubox
78 98 0.038862365 ubox
79 90 0.010550835 ubox
79 97 0.070075071 ubox
80 96 0.069959869 ubox
90 96 0.029907591 ubox
91 95 0.024468898 ubox
13 97 0.9500000 lbox
14 96 0.9500000 lbox
17 93 0.9500000 lbox
18 92 0.9500000 lbox
19 91 0.9500000 lbox
21 89 0.9500000 lbox
22 88 0.9500000 lbox
24 87 0.9500000 lbox
25 86 0.9500000 lbox
28 84 0.9500000 lbox
29 83 0.9500000 lbox
30 82 0.9500000 lbox
31 81 0.9500000 lbox
32 80 0.9500000 lbox
33 79 0.9500000 lbox
41 71 0.9500000 lbox
42 70 0.9500000 lbox
44 68 0.9500000 lbox
45 67 0.9500000 lbox
47 65 0.9500000 lbox
48 64 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
showpage
end
%%EOF
