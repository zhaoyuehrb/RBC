%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCGAGCUCAGGGCGCCUCCGGGGUCCUCACUGCGCUCCCCACGCGCUGUGACCCCAUUUGUUGCACGUGCAUGUUCAGGUCGAGAGAGGGAUGCGACGUGUUCGGGGAGCAGCCCACCUUGUGGGUGGCCAAUCCGGGACGGGAAUCUUAAACUUUUAACUCUUGGUGCAAAGACUGAUCCACUGGCGGCUUUACGGGAGCGGGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[34.18476486 306.54129028]
[31.35251808 321.27148438]
[28.52027130 336.00164795]
[25.68802643 350.73184204]
[31.56684685 366.04104614]
[21.03920746 378.61486816]
[4.93504095 375.51843262]
[-0.17906670 359.93710327]
[10.95783997 347.89959717]
[13.79008579 333.16940308]
[16.62233353 318.43923950]
[19.45457840 303.70904541]
[5.73657990 297.64138794]
[-3.25657225 309.64651489]
[-12.24972439 321.65164185]
[-21.24287605 333.65676880]
[-30.23602867 345.66192627]
[-32.87530136 354.40350342]
[-39.44933701 357.77548218]
[-48.61694336 369.64791870]
[-50.26951218 385.96359253]
[-65.33453369 392.44256592]
[-78.31439972 382.41983032]
[-75.85654449 366.20593262]
[-60.48938751 360.48031616]
[-51.32178497 348.60787964]
[-42.24116135 336.66876221]
[-33.24800873 324.66363525]
[-24.25485802 312.65850830]
[-15.26170540 300.65335083]
[-6.26855278 288.64822388]
[-15.56909466 269.80844116]
[-16.35534286 249.12292480]
[-8.74289989 230.20675659]
[5.70676088 216.26280212]
[24.29915047 209.53994751]
[43.70692444 210.97247314]
[49.67420197 197.21051025]
[55.64147568 183.44854736]
[61.60874939 169.68658447]
[67.57602692 155.92462158]
[73.54329681 142.16265869]
[79.51057434 128.40069580]
[69.09020233 119.37377930]
[62.63355637 106.56579590]
[61.48384094 91.70978546]
[66.23152924 76.99928284]
[76.56548309 64.76441956]
[91.26178741 57.10471344]
[81.41630554 45.78806305]
[71.57082367 34.47141647]
[61.72534561 23.15476799]
[51.87986755 11.83811951]
[39.09236145 10.16735554]
[31.12497520 0.54155064]
[31.82774734 -11.53266907]
[22.14867210 -22.99196815]
[12.46959686 -34.45126343]
[2.79052186 -45.91056442]
[-5.86062527 -43.77785873]
[-14.69242859 -44.56402206]
[-22.75152588 -48.15589142]
[-29.17715645 -54.13898849]
[-33.29307175 -61.84513474]
[-34.67866135 -70.42702484]
[-33.21177673 -78.95132446]
[-29.07894897 -86.50022888]
[-37.89572906 -98.63548279]
[-46.71250534 -110.77073669]
[-55.52928543 -122.90599060]
[-64.34606171 -135.04124451]
[-73.16284180 -147.17649841]
[-82.06804657 -159.24700928]
[-91.06119537 -171.25215149]
[-100.05435181 -183.25727844]
[-109.04750061 -195.26242065]
[-123.51379395 -201.66842651]
[-124.95185852 -216.49345398]
[-133.94500732 -228.49858093]
[-137.98881531 -230.06134033]
[-141.02151489 -232.57562256]
[-142.86824036 -235.60726929]
[-143.51289368 -238.70999146]
[-143.08836365 -241.47799683]
[-151.36488342 -253.98797607]
[-166.27310181 -260.82003784]
[-167.54086304 -277.17010498]
[-153.86401367 -286.21862793]
[-139.31211853 -278.65725708]
[-138.85491943 -262.26449585]
[-130.57839966 -249.75451660]
[-121.93988037 -237.49172974]
[-112.94672394 -225.48660278]
[-99.12368774 -219.93927002]
[-97.04237366 -204.25556946]
[-88.04921722 -192.25042725]
[-79.05606842 -180.24530029]
[-70.06291199 -168.24017334]
[-63.53884888 -164.77250671]
[-61.02758789 -155.99328613]
[-52.21080780 -143.85801697]
[-43.39403152 -131.72276306]
[-34.57725143 -119.58751678]
[-25.76047325 -107.45225525]
[-16.94369316 -95.31700134]
[4.25820065 -93.95348358]
[17.69533730 -77.13087463]
[14.24981976 -55.58963776]
[23.92889404 -44.13034058]
[33.60797119 -32.67104340]
[43.28704453 -21.21174431]
[60.09447479 -16.15977859]
[63.19651413 1.99263954]
[73.04199219 13.30928802]
[82.88747406 24.62593651]
[92.73295593 35.94258499]
[102.57843018 47.25923157]
[117.44891357 45.29228592]
[124.01353455 31.80504227]
[130.57815552 18.31779861]
[137.14277649 4.83055401]
[138.63806152 -12.05732441]
[155.27990723 -15.29549503]
[162.99844360 -0.20044674]
[150.63002014 11.39517498]
[144.06539917 24.88241959]
[137.50077820 38.36966324]
[130.93615723 51.85690689]
[138.84359741 64.60337067]
[153.84320068 64.71295929]
[167.69952393 57.07669067]
[180.36993408 64.90676880]
[195.36953735 65.01635742]
[210.36912537 65.12594604]
[225.36872864 65.23554230]
[230.85736084 56.09299469]
[239.57830811 50.09793091]
[249.92115784 48.27610779]
[260.00933838 50.89005280]
[268.04061890 57.40359497]
[272.60900879 66.59021759]
[287.58941650 67.35700989]
[302.56979370 68.12380981]
[317.55538940 68.78114319]
[332.54537964 69.32897186]
[347.53536987 69.87680817]
[352.14221191 67.43524933]
[356.76315308 67.04217529]
[360.61614990 68.36040497]
[363.16613770 70.79143524]
[378.11770630 71.99563599]
[393.06930542 73.19982910]
[408.02087402 74.40402985]
[421.13552856 62.82490158]
[438.23019409 64.28599548]
[448.76611328 77.39625549]
[463.73370361 78.38185883]
[478.70129395 79.36746216]
[487.17129517 66.55518341]
[500.91986084 59.70879364]
[516.24865723 60.66993332]
[529.03430176 69.18006897]
[535.83758545 82.95000458]
[534.82836914 98.27570343]
[526.27819824 111.03462982]
[512.48699951 117.79470062]
[497.16455078 116.73748016]
[484.43249512 108.14736176]
[477.71569824 94.33504486]
[462.74810791 93.34944153]
[447.78051758 92.36383820]
[439.37533569 102.12791443]
[426.69195557 105.31660461]
[414.30523682 100.54878998]
[406.81668091 89.35561371]
[391.86511230 88.15142059]
[376.91351318 86.94721985]
[361.96191406 85.74301910]
[346.98754883 84.86679840]
[331.99755859 84.31896973]
[317.00756836 83.77113342]
[310.21047974 86.66729736]
[301.80300903 83.10420227]
[286.82260132 82.33740234]
[271.84222412 81.57060242]
[258.37353516 95.64922333]
[238.58801270 95.27285767]
[225.25914001 80.23513794]
[210.25953674 80.12554932]
[195.25994873 80.01596069]
[180.26034546 79.90637207]
[167.47688293 87.55047607]
[153.73361206 79.71256256]
[138.73400879 79.60297394]
[142.06166077 95.35892487]
[139.43238831 110.69718933]
[131.60815430 123.51906586]
[120.03337097 132.21838379]
[106.58457947 135.88038635]
[93.27253723 134.36796570]
[87.30525970 148.12992859]
[81.33798981 161.89189148]
[75.37071228 175.65385437]
[69.40343475 189.41581726]
[63.43616486 203.17778015]
[57.46888733 216.93974304]
[66.75286865 224.16084290]
[73.99462128 233.57139587]
[78.68515778 244.60276794]
[80.47181702 256.57006836]
[79.18415833 268.71466064]
[74.84844971 280.25238037]
[67.68959808 290.42388916]
[58.12006760 298.54492188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[19 26]
[20 25]
[37 206]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[49 117]
[50 116]
[51 115]
[52 114]
[53 113]
[56 111]
[57 110]
[58 109]
[59 108]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[73 98]
[74 97]
[75 96]
[76 95]
[78 93]
[79 92]
[84 91]
[85 90]
[118 128]
[119 127]
[120 126]
[121 125]
[129 194]
[130 193]
[132 191]
[133 190]
[134 189]
[135 188]
[141 185]
[142 184]
[143 183]
[144 181]
[145 180]
[146 179]
[150 178]
[151 177]
[152 176]
[153 175]
[156 171]
[157 170]
[158 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
