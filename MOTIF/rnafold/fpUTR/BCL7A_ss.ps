%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGGCCAGGCGCGCGGCGGCCCCGGGCUUUGUGUGUGUGUGUAUGUGUGUGUGUGUGUGUGUGUGUGUGUGAGUGUGUGCGUGUGAGAGUGCGAGUGUCUGUGCGCGAGUGAGUGAGCGGCGGGCGGGCGCGAGUGUGGCCGCCGCGGAGCGCGAGCAGGACCCGGCGGGCGCGCUCCCCAGCCUCCGUCUCCCCGCCGGAACC\
) } def
/len { sequence length } bind def

/coor [
[136.96238708 190.35812378]
[143.99021912 182.32379150]
[139.29006958 168.07920837]
[134.58990479 153.83460999]
[129.88973999 139.59001160]
[125.18958282 125.34541321]
[95.85968018 133.99676514]
[72.00300598 117.01538849]
[61.84818649 128.05531311]
[58.20024872 143.45021057]
[43.88943481 147.57936096]
[33.73461914 158.61927795]
[23.57980347 169.65917969]
[13.42498875 180.69909668]
[3.27017355 191.73901367]
[-6.88464165 202.77893066]
[-17.03945732 213.81884766]
[-27.19427109 224.85876465]
[-30.70225143 233.29621887]
[-37.58795166 235.98767090]
[-47.90914154 246.87220764]
[-58.23033142 257.75674438]
[-68.55152130 268.64126587]
[-75.06266022 284.29507446]
[-91.90716553 282.37179565]
[-94.72206879 265.65316772]
[-79.43605042 258.32009888]
[-69.11486053 247.43554688]
[-58.79367447 236.55102539]
[-48.47248459 225.66648865]
[-38.23418808 214.70394897]
[-28.07937241 203.66403198]
[-17.92455673 192.62411499]
[-7.76974154 181.58419800]
[2.38507342 170.54428101]
[12.53988838 159.50436401]
[22.69470406 148.46446228]
[32.84951782 137.42454529]
[35.77111435 122.81928253]
[50.80827332 117.90048981]
[60.96308517 106.86057281]
[46.75857925 111.68053436]
[32.55407333 116.50049591]
[18.34956932 121.32045746]
[4.14506292 126.14041138]
[-10.05944347 130.96037292]
[-20.68543243 141.54754639]
[-33.11851501 149.93911743]
[-46.91185760 155.83349609]
[-61.56974411 159.01884460]
[-76.56537628 159.38067627]
[-91.35983276 156.90599060]
[-105.42141724 151.68373108]
[-118.24475861 143.90158081]
[-129.36900330 133.83921814]
[-138.39436340 121.85828400]
[-144.99645996 108.38934326]
[-148.93803406 93.91647339]
[-150.07743835 78.95981598]
[-148.37368774 64.05688477]
[-143.88806152 49.74328995]
[-136.78172302 36.53344345]
[-127.31009674 24.90209389]
[-115.81356812 15.26726437]
[-102.70532990 7.97521925]
[-88.45645905 3.28802896]
[-73.57905579 1.37414563]
[-58.60780334 2.30235291]
[-44.08074951 6.03929186]
[-30.51998520 12.45065975]
[-18.41287041 21.30603981]
[-8.19452095 32.28717422]
[-0.23235025 44.99907684]
[12.51784801 52.90049744]
[25.26804543 60.80191803]
[38.01824570 68.70333862]
[50.76844406 76.60475922]
[63.51864243 84.50617981]
[56.11743164 71.45925903]
[48.71622467 58.41233826]
[41.31501389 45.36541748]
[33.91380692 32.31850052]
[18.47997475 30.71335030]
[6.95975494 20.31795883]
[3.78290486 5.12956667]
[10.17098808 -9.01157951]
[23.66765785 -16.66792107]
[39.08316803 -14.89543724]
[50.48993683 -4.37568569]
[53.50183487 10.84627533]
[46.96072388 24.91729164]
[54.36193466 37.96421051]
[61.76314163 51.01113129]
[69.16435242 64.05805206]
[76.56555939 77.10496521]
[100.69828033 65.75916290]
[126.55690765 76.09108734]
[131.68721008 61.99570084]
[136.81750488 47.90031052]
[141.94781494 33.80492020]
[147.07810974 19.70953178]
[152.20841980 5.61414289]
[157.33871460 -8.48124599]
[162.46902466 -22.57663536]
[159.91827393 -38.19086838]
[171.54194641 -47.50428009]
[176.67224121 -61.59967041]
[181.80255127 -75.69506073]
[177.06848145 -87.69524384]
[181.63403320 -99.33095551]
[192.54319763 -104.56205750]
[197.88682556 -118.57796478]
[191.19786072 -132.89695740]
[196.67156982 -147.72308350]
[211.06047058 -154.26028442]
[225.82791138 -148.63012695]
[232.21260071 -134.17291260]
[226.42665100 -119.46583557]
[211.90272522 -113.23434448]
[206.55909729 -99.21843719]
[210.27459717 -82.06864929]
[195.89793396 -70.56475830]
[190.76763916 -56.46936798]
[185.63732910 -42.37397766]
[188.55503845 -27.76794052]
[176.56440735 -17.44633293]
[171.43411255 -3.35094428]
[166.30380249 10.74444485]
[161.17350769 24.83983421]
[156.04319763 38.93522263]
[150.91290283 53.03061295]
[145.78259277 67.12599945]
[140.65229797 81.22138977]
[149.02130127 93.66967010]
[164.01051331 94.23866272]
[178.99971008 94.80765533]
[193.98892212 95.37664795]
[208.97811890 95.94564056]
[223.96733093 96.51463318]
[238.95652771 97.08362579]
[253.04026794 89.87537384]
[265.46487427 98.08988953]
[280.45410156 98.65888214]
[295.44329834 99.22787476]
[310.43249512 99.79686737]
[325.42169189 100.36585999]
[340.41091919 100.93485260]
[349.10824585 98.13254547]
[355.62277222 101.62792969]
[370.60162354 102.42433929]
[389.07199097 91.56285095]
[405.88409424 103.53154755]
[420.88366699 103.64537048]
[434.87280273 95.08757782]
[449.14739990 103.16025543]
[449.02294922 119.55893707]
[434.62750244 127.41405487]
[420.76983643 118.64494324]
[405.77026367 118.53111267]
[400.54031372 125.71286774]
[392.46835327 129.74241638]
[383.30996704 129.60191345]
[375.12304688 125.19634247]
[369.80520630 117.40318298]
[354.82635498 116.60677338]
[339.84191895 115.92405701]
[324.85272217 115.35506439]
[309.86349487 114.78607178]
[294.87429810 114.21707916]
[279.88510132 113.64808655]
[264.89590454 113.07909393]
[251.88427734 120.32804108]
[238.38754272 112.07283020]
[223.39833069 111.50383759]
[208.40913391 110.93484497]
[193.41992188 110.36585236]
[178.43072510 109.79685974]
[163.44151306 109.22786713]
[148.45231628 108.65887451]
[139.43417358 120.64525604]
[144.13433838 134.88984680]
[148.83450317 149.13444519]
[153.53465271 163.37904358]
[158.23481750 177.62364197]
[176.63072205 185.69541931]
[183.06515503 204.40348816]
[173.81585693 221.54589844]
[179.15948486 235.56181335]
[184.50311279 249.57771301]
[189.84674072 263.59362793]
[204.96568298 266.66296387]
[216.00920105 277.43533325]
[219.45333862 292.47335815]
[214.19908142 306.97839355]
[201.92304993 316.32196045]
[186.54248047 317.52258301]
[172.96525574 310.19714355]
[165.52380371 296.68313599]
[166.59269714 281.29281616]
[175.83082581 268.93725586]
[170.48719788 254.92134094]
[165.14356995 240.90542603]
[159.79994202 226.88952637]
[149.64248657 225.37040710]
[140.96520996 219.72660828]
[135.37159729 210.92106628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[8 41]
[9 40]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[20 30]
[21 29]
[22 28]
[23 27]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[97 133]
[98 132]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[106 124]
[107 123]
[108 122]
[111 120]
[112 119]
[134 179]
[135 178]
[136 177]
[137 176]
[138 175]
[139 174]
[140 173]
[142 171]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[149 165]
[150 164]
[152 159]
[153 158]
[187 203]
[188 202]
[189 201]
[190 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
