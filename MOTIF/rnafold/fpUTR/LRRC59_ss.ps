%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCAGUGGUCGCGGAAGGUGACGUGGACACGGAAGUGGUCGUCGUCGCGGCACCGGUGGGAGCUAGGCGCGAGGCUCGGAGUGCGGCCAGCGGGCGGAGGCGGUCUCGCAUCGGCGGCGACGGAGGGCUCAGGCGUCGUCGUUUGGGUGGGGGGCCGCUGAACUGACAAGCGACAUUUCAGCUCCUUUCACCCGCCGGAACCCCGGAGCCGGGGCCCGCUCAGCCGGCGUUACC\
) } def
/len { sequence length } bind def

/coor [
[-256.07382202 477.84854126]
[-268.62210083 472.48223877]
[-280.00555420 482.25036621]
[-291.38903809 492.01852417]
[-302.77249146 501.78668213]
[-314.15594482 511.55484009]
[-319.59024048 526.41345215]
[-334.28756714 528.82977295]
[-345.67102051 538.59796143]
[-357.05447388 548.36608887]
[-368.43792725 558.13421631]
[-372.90203857 566.08258057]
[-380.03762817 567.95520020]
[-391.54956055 577.57159424]
[-390.74649048 585.84082031]
[-393.23800659 593.66821289]
[-398.55065918 599.80981445]
[-405.76907349 603.32031250]
[-413.69305420 603.69812012]
[-421.03698730 600.95593262]
[-433.04238892 609.94873047]
[-445.04779053 618.94152832]
[-457.05322266 627.93426514]
[-469.05862427 636.92706299]
[-481.06402588 645.91986084]
[-493.00958252 654.99200439]
[-504.89474487 664.14312744]
[-507.06948853 679.56738281]
[-519.25311279 688.67864990]
[-533.94439697 686.51025391]
[-545.82952881 695.66137695]
[-557.71466064 704.81256104]
[-563.46160889 720.17175293]
[-579.67889404 722.60711670]
[-589.68365479 709.61334229]
[-583.18377686 694.55731201]
[-566.86578369 692.92736816]
[-554.98065186 683.77624512]
[-543.09552002 674.62512207]
[-541.43646240 659.86761475]
[-529.51361084 650.41778564]
[-514.04583740 652.25799561]
[-502.16070557 643.10687256]
[-498.78442383 636.54754639]
[-490.05682373 633.91442871]
[-478.05139160 624.92163086]
[-466.04598999 615.92889404]
[-454.04058838 606.93609619]
[-442.03518677 597.94329834]
[-430.02975464 588.95050049]
[-423.46865845 568.31964111]
[-401.16598511 566.05969238]
[-389.65405273 556.44329834]
[-378.20608521 546.75079346]
[-366.82263184 536.98260498]
[-355.43917847 527.21447754]
[-344.05569458 517.44635010]
[-339.43560791 503.28637695]
[-323.92410278 500.17138672]
[-312.54064941 490.40322876]
[-301.15716553 480.63507080]
[-289.77371216 470.86691284]
[-278.39025879 461.09875488]
[-281.75796509 445.28625488]
[-276.65753174 429.84573364]
[-264.39266968 419.02621460]
[-248.25215149 415.85531616]
[-232.62820435 421.29254150]
[-221.37522888 411.37435913]
[-210.12225342 401.45617676]
[-198.86926270 391.53799438]
[-187.61628723 381.61978149]
[-186.54655457 369.58187866]
[-177.26831055 361.22647095]
[-164.38343811 361.43087769]
[-152.99996948 351.66271973]
[-141.61651611 341.89456177]
[-130.23304749 332.12640381]
[-128.98258972 327.53390503]
[-124.84445190 323.67144775]
[-118.41592407 322.25506592]
[-106.77752686 312.79211426]
[-95.13912964 303.32913208]
[-83.50073242 293.86618042]
[-71.86233521 284.40319824]
[-68.66112518 277.75674438]
[-60.00637817 274.89318848]
[-48.24356842 265.58532715]
[-37.53204346 255.08468628]
[-27.99214935 243.50926208]
[-25.86852837 228.76681519]
[-11.12088203 223.03816223]
[-1.58098710 211.46275330]
[7.95890760 199.88732910]
[17.49880219 188.31190491]
[27.03869629 176.73648071]
[29.16231728 161.99403381]
[43.90996552 156.26538086]
[53.44985962 144.68995667]
[62.98975372 133.11454773]
[72.52964783 121.53911591]
[82.06954193 109.96369171]
[79.25337982 86.56328583]
[102.48011780 71.18385315]
[107.36050415 56.99999237]
[112.24089050 42.81613541]
[117.12128448 28.63227844]
[122.00167084 14.44842148]
[126.88205719 0.26456451]
[124.05575562 -15.30214977]
[135.51301575 -24.81953430]
[140.39340210 -39.00339127]
[145.27378845 -53.18724823]
[150.15417480 -67.37110901]
[154.84613037 -81.61840820]
[159.34881592 -95.92665100]
[163.85150146 -110.23489380]
[168.35418701 -124.54313660]
[172.85687256 -138.85137939]
[177.35955811 -153.15962219]
[181.86222839 -167.46786499]
[186.36491394 -181.77610779]
[190.86759949 -196.08435059]
[195.37028503 -210.39259338]
[184.53291321 -221.20046997]
[179.97064209 -235.81019592]
[182.73182678 -250.86457825]
[192.18197632 -262.90423584]
[206.14952087 -269.16250610]
[221.42481995 -268.20135498]
[234.49772644 -260.24157715]
[242.36416626 -247.11230469]
[243.21649170 -231.83055115]
[236.85887146 -217.90794373]
[224.75219727 -208.54379272]
[209.67852783 -205.88990784]
[205.17584229 -191.58166504]
[200.67315674 -177.27342224]
[196.17048645 -162.96517944]
[191.66780090 -148.65693665]
[187.16511536 -134.34869385]
[182.66242981 -120.04045105]
[178.15974426 -105.73220825]
[173.65705872 -91.42396545]
[169.15437317 -77.11572266]
[170.51951599 -72.55599976]
[169.04730225 -67.09015656]
[164.33802795 -62.49071884]
[159.45764160 -48.30685806]
[154.57725525 -34.12300110]
[149.69686890 -19.93914604]
[152.87225342 -5.38695574]
[141.06591797 5.14495325]
[136.18553162 19.32880974]
[131.30514526 33.51266861]
[126.42475128 47.69652557]
[121.54436493 61.88038254]
[116.66397095 76.06423950]
[126.35646820 87.51219177]
[141.15101624 85.03810883]
[155.94558716 82.56403351]
[170.74014282 80.08995056]
[185.53469849 77.61587524]
[200.32925415 75.14179230]
[212.66423035 65.23428345]
[226.49337769 70.76638794]
[241.28793335 68.29231262]
[248.09237671 54.34673309]
[261.81005859 47.09382629]
[277.16625977 49.32247543]
[288.25619507 60.17572403]
[290.81555176 75.48027802]
[283.86022949 89.35121918]
[270.06466675 96.45488739]
[254.73355103 94.05978394]
[243.76200867 83.08686829]
[228.96745300 85.56095123]
[217.69067383 95.29149628]
[202.80332947 89.93634796]
[188.00877380 92.41043091]
[173.21421814 94.88450623]
[158.41966248 97.35858917]
[143.62510681 99.83267212]
[128.83055115 102.30674744]
[120.27976227 116.46068573]
[106.60004425 122.36248779]
[93.64496613 119.50359344]
[84.10507202 131.07901001]
[74.56517792 142.65443420]
[65.02528381 154.22985840]
[55.48538971 165.80528259]
[52.67940903 181.37567139]
[38.61412048 186.27636719]
[29.07422447 197.85179138]
[19.53433037 209.42721558]
[9.99443531 221.00263977]
[0.45454079 232.57806396]
[-2.35143709 248.14845276]
[-16.41672707 253.04914856]
[-25.95662308 264.62457275]
[-21.55052185 265.08724976]
[-17.12080002 266.42599487]
[-12.80435085 268.64639282]
[-2.81180024 279.83340454]
[7.18075085 291.02038574]
[17.17330170 302.20739746]
[27.16585159 313.39437866]
[42.90286255 318.00726318]
[46.51305389 334.00408936]
[34.28256989 344.92871094]
[18.79308701 339.54281616]
[15.97885418 323.38693237]
[5.98630333 312.19995117]
[-4.00624752 301.01293945]
[-13.99879837 289.82595825]
[-23.99134827 278.63894653]
[-38.93570328 277.34811401]
[-50.69851303 286.65597534]
[-62.39937210 296.04159546]
[-74.03777313 305.50457764]
[-85.67616272 314.96752930]
[-97.31455994 324.43051147]
[-108.95295715 333.89346313]
[-120.46489716 343.50988770]
[-131.84835815 353.27801514]
[-143.23182678 363.04617310]
[-154.61528015 372.81433105]
[-160.32679749 390.32897949]
[-177.69810486 392.87277222]
[-188.95108032 402.79095459]
[-200.20405579 412.70913696]
[-211.45704651 422.62731934]
[-222.71002197 432.54553223]
[-219.24003601 446.08621216]
[-221.92605591 459.73657227]
[-230.18862915 470.84698486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 63]
[3 62]
[4 61]
[5 60]
[6 59]
[8 57]
[9 56]
[10 55]
[11 54]
[13 53]
[14 52]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 43]
[27 42]
[30 39]
[31 38]
[32 37]
[68 233]
[69 232]
[70 231]
[71 230]
[72 229]
[75 227]
[76 226]
[77 225]
[78 224]
[81 223]
[82 222]
[83 221]
[84 220]
[85 219]
[87 218]
[88 217]
[89 200]
[90 199]
[92 197]
[93 196]
[94 195]
[95 194]
[96 193]
[98 191]
[99 190]
[100 189]
[101 188]
[102 187]
[104 158]
[105 157]
[106 156]
[107 155]
[108 154]
[109 153]
[111 151]
[112 150]
[113 149]
[114 148]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[124 136]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
[166 177]
[167 176]
[203 216]
[204 215]
[205 214]
[206 213]
[207 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
