%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCAGGCGGGUGGGGGCGGGGCGGGGCGGCGCCGAGGAGAAUGAAUAAUUGAAGUGGAGGGGAGGAGGAAGAAGAGGAGAAGGAGGAAGAGGAGCCGCCCGCGCAGGGUCCUCCCCACGCCGCACCCCCCUCCGCCGCCCGGAAGUCGCUCCCCGCCUCCCUCUCCGCCAAC\
) } def
/len { sequence length } bind def

/coor [
[40.15007782 719.59631348]
[24.81345558 718.76953125]
[11.95370007 710.37176514]
[5.03002310 696.66198730]
[5.90485859 681.32806396]
[14.34288025 668.49468994]
[28.07430267 661.61401367]
[28.88175011 646.63574219]
[29.68919754 631.65753174]
[30.49664497 616.67926025]
[31.30409241 601.70098877]
[32.11154175 586.72277832]
[23.32967567 571.54559326]
[33.46625519 556.19104004]
[34.00469971 541.20074463]
[34.54314423 526.21038818]
[34.94701385 511.21582031]
[35.21627808 496.21826172]
[35.48554230 481.22067261]
[35.75480652 466.22308350]
[36.02407074 451.22549438]
[36.29333878 436.22790527]
[36.56260300 421.23034668]
[34.36003494 418.43661499]
[33.41933441 414.42630005]
[34.30234146 409.81262207]
[37.27181244 405.43850708]
[38.34800720 390.47717285]
[39.42419815 375.51583862]
[40.50038910 360.55447388]
[41.57658386 345.59313965]
[42.65277481 330.63180542]
[34.14476776 315.29943848]
[44.55534744 300.12933350]
[45.36279297 285.15109253]
[46.17024231 270.17285156]
[43.38116837 263.30142212]
[47.12900543 254.93370056]
[48.20520020 239.97235107]
[39.44861984 252.15112305]
[27.13648987 260.71917725]
[12.67399120 264.69863892]
[-2.28827477 263.63531494]
[-16.04266548 257.65060425]
[-27.01939392 247.42753601]
[-33.96568680 234.13284302]
[-36.08876801 219.28384399]
[-33.14632797 204.57527161]
[-25.47418404 191.68582153]
[-13.94796371 182.08653259]
[0.11685213 176.87300110]
[15.11504555 176.64022827]
[29.33487701 181.41477966]
[41.15343475 190.65176392]
[49.22187424 203.29692078]
[52.61948776 217.90962219]
[57.38260269 203.68595886]
[62.14572144 189.46229553]
[66.90883636 175.23861694]
[71.67195129 161.01495361]
[76.43507385 146.79129028]
[81.19818878 132.56761169]
[85.96130371 118.34394836]
[90.72441864 104.12028503]
[90.09491730 96.05511475]
[95.70280457 89.68537903]
[100.72048950 75.54950714]
[93.89573669 69.85273743]
[88.75404358 62.62403107]
[85.62516785 54.34374619]
[84.70552826 45.55912781]
[86.04586029 36.84810257]
[89.54856110 28.78129578]
[94.97467804 21.88462257]
[101.96023560 16.60502243]
[110.04059601 13.28149128]
[118.68141174 12.12332535]
[127.31388855 13.19697094]
[134.06369019 -0.19855453]
[126.84971619 -11.96593952]
[126.40449524 -25.65298271]
[132.73748779 -37.67258072]
[144.09570312 -44.92762375]
[157.44755554 -45.60885620]
[164.43673706 -58.88105774]
[165.67448425 -67.96582031]
[171.67236328 -72.32711792]
[178.89866638 -85.47171783]
[186.12498474 -98.61631775]
[186.00897217 -103.90187073]
[187.77470398 -108.25479889]
[190.74354553 -111.11024475]
[194.11062622 -112.25868225]
[202.03402710 -124.99523163]
[209.95742798 -137.73178101]
[210.67727661 -153.53660583]
[223.96992493 -160.25633240]
[231.89332581 -172.99287415]
[239.70208740 -185.80003357]
[247.39556885 -198.67677307]
[247.09974670 -215.07324219]
[261.28918457 -223.29467773]
[275.36700439 -214.88357544]
[274.85116577 -198.49253845]
[260.27230835 -190.98327637]
[252.57881165 -178.10655212]
[251.84490967 -170.72705078]
[244.62988281 -165.06947327]
[236.70648193 -152.33293152]
[236.55335999 -137.43910217]
[222.69396973 -129.80838013]
[214.77058411 -117.07183075]
[206.84718323 -104.33528137]
[199.26957703 -91.39000702]
[192.04327393 -78.24540710]
[184.81697083 -65.10080719]
[177.70893860 -51.89187622]
[170.71975708 -38.61967468]
[178.44184875 -24.15094948]
[176.00578308 -7.76460552]
[164.17399597 4.06682396]
[147.45922852 6.55125237]
[140.70941162 19.94677734]
[152.28926086 38.08689499]
[150.65158081 59.67557526]
[136.29695129 76.05629730]
[114.85636139 80.56718445]
[109.83868408 94.70305634]
[104.94808960 108.88339996]
[100.18496704 123.10706329]
[95.42185211 137.33073425]
[90.65873718 151.55439758]
[85.89562225 165.77807617]
[81.13250732 180.00173950]
[76.36939240 194.22540283]
[71.60626984 208.44906616]
[66.84315491 222.67274475]
[69.07044220 229.97175598]
[67.45780182 236.66207886]
[63.16654205 241.04855347]
[62.09035110 256.00988770]
[61.14849091 270.98028564]
[60.34104538 285.95855713]
[59.53359604 300.93679810]
[67.56333923 311.05859375]
[66.56251526 323.53729248]
[57.61411667 331.70797729]
[56.53792572 346.66934204]
[55.46173477 361.63067627]
[54.38554001 376.59201050]
[53.30934906 391.55337524]
[52.23315811 406.51470947]
[51.56018448 421.49960327]
[51.29092026 436.49719238]
[51.02165604 451.49478149]
[50.75239182 466.49234009]
[50.48312378 481.48992920]
[50.21385956 496.48751831]
[49.94459534 511.48510742]
[52.92727280 520.15509033]
[49.53347397 526.74884033]
[48.99503326 541.73919678]
[48.45658875 556.72949219]
[56.66673279 566.70550537]
[55.89007568 579.20019531]
[47.08979416 587.53021240]
[46.28234482 602.50842285]
[45.47489548 617.48669434]
[44.66744995 632.46496582]
[43.86000061 647.44317627]
[43.05255508 662.42144775]
[55.96470261 670.73840332]
[62.97418976 684.40454102]
[62.19549942 699.74365234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[14 163]
[15 162]
[16 161]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[27 152]
[28 151]
[29 150]
[30 149]
[31 148]
[32 147]
[34 144]
[35 143]
[36 142]
[38 141]
[39 140]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[63 130]
[64 129]
[66 128]
[67 127]
[78 123]
[79 122]
[84 118]
[85 117]
[87 116]
[88 115]
[89 114]
[93 113]
[94 112]
[95 111]
[97 109]
[98 108]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
