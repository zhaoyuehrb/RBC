%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGAGUUUCAAAUCGGCUGCGGUGGGCGAGGAGCAGCUGUGCUGCGGCUGUGCUCGGCCUUAGUGGUGUCGGGGUCUAGUGGACAGAGAAGACUCUUGGCCAGGCAG\
) } def
/len { sequence length } bind def

/coor [
[-0.66085416 155.08801270]
[0.44660041 170.04707336]
[-3.24274468 184.58628845]
[-11.34871387 197.20742798]
[-23.03601265 206.60992432]
[-37.10029984 211.82489014]
[-52.09229279 212.31492615]
[-66.46710968 208.02955627]
[-78.74347687 199.41033936]
[-87.65634918 187.34548950]
[-92.28728485 173.07823181]
[-92.15907288 158.07878113]
[-87.28492737 143.89277649]
[-78.16712189 131.98204041]
[-65.74520874 123.57394409]
[-51.29990005 119.53498840]
[-65.27786255 114.09287262]
[-79.25582123 108.65075684]
[-93.23377991 103.20864105]
[-107.21173859 97.76652527]
[-121.18970490 92.32440948]
[-135.16766357 86.88229370]
[-149.14562988 81.44017792]
[-163.12358093 75.99806213]
[-177.10154724 70.55594635]
[-195.15309143 73.82214355]
[-205.68675232 59.86632538]
[-219.81442261 54.82558441]
[-233.94207764 49.78484344]
[-246.67449951 58.65418243]
[-262.18780518 58.31204224]
[-274.51681519 48.88998413]
[-278.92077637 34.01098251]
[-273.70626831 19.39631081]
[-260.87838745 10.66561508]
[-245.36970520 11.17602253]
[-233.14363098 20.73127365]
[-228.90133667 35.65717697]
[-214.77368164 40.69791794]
[-200.64601135 45.73865891]
[-189.48873901 40.82843018]
[-177.61698914 45.02836609]
[-171.65942383 56.57798386]
[-157.68147278 62.02009964]
[-143.70350647 67.46221924]
[-129.72554016 72.90433502]
[-115.74758911 78.34645081]
[-101.76962280 83.78856659]
[-87.79166412 89.23068237]
[-73.81370544 94.67279816]
[-59.83574677 100.11491394]
[-45.85778427 105.55702209]
[-30.98149490 107.47951508]
[-16.07926750 105.76964569]
[-1.17704213 104.05977631]
[13.72518349 102.34990692]
[25.48751068 93.21224213]
[40.07971573 99.32600403]
[54.98194122 97.61613464]
[69.88417053 95.90626526]
[84.78639221 94.19638824]
[92.64366150 85.47347260]
[104.32498932 84.30190277]
[113.75804901 91.29071045]
[128.70301819 90.00708008]
[137.13101196 86.10459900]
[144.09210205 88.90643311]
[159.06764221 88.05010223]
[174.04316711 87.19377136]
[189.10661316 76.72384644]
[204.48582458 85.04267120]
[219.43080139 83.75904083]
[227.49804688 70.63556671]
[241.58134460 64.84640503]
[256.20013428 68.41781616]
[265.79788208 79.77657318]
[280.74285889 78.49294281]
[295.68783569 77.20932007]
[310.63281250 75.92569733]
[325.89642334 68.54610443]
[337.21301270 81.17033386]
[328.21487427 95.53939819]
[311.91641235 90.87067413]
[296.97143555 92.15429688]
[282.02645874 93.43791962]
[267.08148193 94.72154999]
[259.56124878 107.55056763]
[245.76556396 113.56250000]
[230.90136719 110.25963593]
[220.71441650 98.70401764]
[205.76943970 99.98764038]
[197.66021729 109.08904266]
[185.11657715 110.20034790]
[174.89950562 102.16930389]
[159.92396545 103.02563477]
[144.94842529 103.88197327]
[129.98664856 104.95205688]
[115.04167175 106.23567963]
[101.62493134 116.20170593]
[86.49626160 109.09861755]
[71.59403992 110.80848694]
[56.69181061 112.51835632]
[41.78958511 114.22823334]
[28.96135330 123.48819733]
[15.43505478 117.25212860]
[0.53282905 118.96200562]
[-14.36939716 120.67187500]
[-29.27162361 122.38174438]
[-16.32714844 129.96069336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 52]
[17 51]
[18 50]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[27 40]
[28 39]
[29 38]
[53 108]
[54 107]
[55 106]
[56 105]
[58 103]
[59 102]
[60 101]
[61 100]
[64 98]
[65 97]
[67 96]
[68 95]
[69 94]
[71 91]
[72 90]
[76 86]
[77 85]
[78 84]
[79 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
