%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACCAGAAGCGGGCGAAUUGGGCACCGGUGGCGGCUGCGGGCAGUUUGAAUUAGACUCUGGGCUCCAGCCCGCCGAAGCCGCGCCAGAACUGUACUCUCCGAGAGGUCGUUUUCCCGUCCCCGAGAGCAAGUUUAUUUACAAAUGUUGGAGUAAUAAAGAAGGCAGAACAAA\
) } def
/len { sequence length } bind def

/coor [
[192.47163391 192.89042664]
[183.01724243 204.53578186]
[170.69448853 213.08856201]
[156.47779846 217.87243652]
[141.49131775 218.50915527]
[126.92008209 214.94834900]
[113.91630554 207.47160339]
[103.50823975 196.67012024]
[96.51887512 183.39801025]
[93.50096893 168.70587158]
[97.00864410 154.12176514]
[100.51631927 139.53764343]
[90.44605255 150.65473938]
[80.37578583 161.77183533]
[70.40570831 172.97886658]
[60.53662872 184.27493286]
[63.12298203 199.69715881]
[55.14652252 213.14744568]
[40.37349319 218.27497864]
[25.77926636 212.65870667]
[18.25478935 198.95045471]
[21.35288811 183.62283325]
[33.61073685 173.91308594]
[49.24055481 174.40585327]
[59.10963821 163.10978699]
[61.14940643 155.97993469]
[69.25868988 151.70156860]
[79.32895660 140.58447266]
[89.39922333 129.46737671]
[88.25922394 122.05452728]
[74.27967072 116.61650848]
[85.97921753 107.22882080]
[84.83921814 99.81597137]
[71.89395142 92.23837280]
[58.94868088 84.66077423]
[46.00341415 77.08316803]
[33.05814362 69.50556946]
[20.11287498 61.92797089]
[6.96827507 54.70166779]
[-6.36612558 47.83189774]
[-19.70052719 40.96212387]
[-33.03492737 34.09235382]
[-46.36932755 27.22258186]
[-59.70372772 20.35281181]
[-94.94742584 49.39012909]
[-109.29418182 45.01170731]
[-123.64093781 40.63328552]
[-137.98768616 36.25486374]
[-152.33444214 31.87644005]
[-166.68119812 27.49801826]
[-183.59544373 28.65768242]
[-189.39212036 12.72548485]
[-175.68724060 2.74487805]
[-162.30278015 13.15126228]
[-147.95602417 17.52968407]
[-133.60926819 21.90810585]
[-119.26251221 26.28652763]
[-104.91575623 30.66494942]
[-90.56900024 35.04337311]
[-86.78019714 28.57073784]
[-75.41380310 9.15283394]
[-86.25572205 -1.21310556]
[-97.09764862 -11.57904530]
[-112.72448730 -18.15461540]
[-110.73183441 -34.99105453]
[-94.00175476 -37.73706436]
[-86.73170471 -22.42096901]
[-75.88978577 -12.05502892]
[-65.04785919 -1.68908870]
[-52.83395767 7.01841068]
[-39.49955750 13.88818169]
[-26.16515541 20.75795364]
[-12.83075523 27.62772369]
[0.50364554 34.49749374]
[13.83804607 41.36726761]
[17.31754303 40.62616730]
[21.33070183 41.55469894]
[25.07910156 44.38582230]
[27.69047546 48.98270416]
[40.63574219 56.56030273]
[53.58101273 64.13790131]
[66.52628326 71.71549988]
[79.47154999 79.29309845]
[92.41681671 86.87070465]
[107.22146606 89.28368378]
[121.90294647 86.20892334]
[136.58442688 83.13416290]
[152.17185974 61.13174057]
[178.48043823 63.70109940]
[190.20790100 54.34875107]
[201.93537903 44.99640656]
[213.66284180 35.64405823]
[225.39031982 26.29171181]
[225.35142517 12.80271530]
[232.98603821 1.91924214]
[245.31600952 -2.50427270]
[257.75256348 0.93988729]
[269.64602661 -8.20043278]
[281.53948975 -17.34075356]
[293.43295288 -26.48107338]
[305.32644653 -35.62139511]
[312.13906860 -54.57046509]
[331.37322998 -56.35455322]
[342.93093872 -65.91591644]
[344.56469727 -81.40682983]
[356.42205811 -90.93876648]
[371.18020630 -89.28575134]
[382.73791504 -98.84710693]
[382.66613770 -114.48452759]
[392.70242310 -126.47650146]
[408.10787964 -129.16078186]
[421.60858154 -121.26995087]
[426.82986450 -106.52979279]
[421.30642700 -91.90017700]
[407.64627075 -84.28875732]
[392.29928589 -87.28941345]
[380.74157715 -77.72805023]
[379.59991455 -62.92155838]
[368.01495361 -53.06033707]
[352.49230957 -54.35821533]
[340.93460083 -44.79685593]
[340.88604736 -34.53784180]
[335.06164551 -25.82646370]
[325.19415283 -21.69078636]
[314.46676636 -23.72792816]
[302.57327271 -14.58760738]
[290.67980957 -5.44728661]
[278.78634644 3.69303346]
[266.89288330 12.83335400]
[265.43597412 29.57279587]
[252.07020569 40.30304718]
[234.74266052 38.01918411]
[223.01519775 47.37152863]
[211.28771973 56.72387695]
[199.56025696 66.07622528]
[187.83277893 75.42857361]
[189.38488770 81.05408478]
[189.64671326 86.88391876]
[188.60511780 92.62592316]
[201.12370300 100.88937378]
[213.64230347 109.15283203]
[226.16090393 117.41628265]
[239.86148071 110.47438049]
[255.19657898 111.32882690]
[268.04116821 119.74977112]
[274.94009399 133.47203064]
[274.03756714 148.80438232]
[265.57641602 161.62249756]
[251.83259583 168.47837830]
[236.50314331 167.52781677]
[223.71160889 159.02651978]
[216.89884949 145.26127625]
[217.89744568 129.93489075]
[205.37886047 121.67143250]
[192.86026001 113.40797424]
[180.34165955 105.14452362]
[175.57452393 108.45465851]
[170.16708374 110.64179230]
[164.38127136 111.58602142]
[158.50048828 111.22797394]
[152.81562805 109.57240295]
[147.61080933 106.68855286]
[143.14907837 102.70738220]
[139.65917969 97.81564331]
[124.97770691 100.89040375]
[110.29622650 103.96516418]
[124.65455627 108.30548096]
[139.01287842 112.64579773]
[154.01274109 112.58049011]
[168.43774414 116.69382477]
[181.14723206 124.66055298]
[191.13624573 135.85070801]
[197.61489868 149.37945557]
[200.07092285 164.17701721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 29]
[13 28]
[14 27]
[15 25]
[16 24]
[33 84]
[34 83]
[35 82]
[36 81]
[37 80]
[38 79]
[39 75]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[61 69]
[62 68]
[63 67]
[85 166]
[86 165]
[87 164]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[103 121]
[104 120]
[107 117]
[108 116]
[139 156]
[140 155]
[141 154]
[142 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
