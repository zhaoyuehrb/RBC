%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF185)
} def

/sequence { (\
CAGAAGCCCUGCUGAAUCAAGUGAGAGGAGAGCUGCGGAGCAAUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.089499665 ubox
1 14 0.132780155 ubox
1 23 0.014803825 ubox
1 35 0.248594371 ubox
2 10 0.093667590 ubox
2 13 0.133128282 ubox
2 22 0.014469717 ubox
2 34 0.252594671 ubox
3 9 0.094201476 ubox
3 12 0.132904042 ubox
3 18 0.043876987 ubox
3 33 0.253121925 ubox
3 45 0.382722747 ubox
4 17 0.043598884 ubox
4 44 0.375443713 ubox
5 13 0.106458947 ubox
5 34 0.328983863 ubox
6 12 0.109675803 ubox
6 22 0.004243352 ubox
6 33 0.351968076 ubox
6 36 0.049924163 ubox
6 41 0.706266147 ubox
7 11 0.108961606 ubox
7 21 0.004435048 ubox
7 28 0.451509209 ubox
7 32 0.351783090 ubox
7 35 0.049912341 ubox
7 38 0.035906575 ubox
7 40 0.706706336 ubox
8 27 0.462248393 ubox
8 28 0.261308405 ubox
8 37 0.036271368 ubox
8 38 0.482031630 ubox
9 21 0.010932919 ubox
9 25 0.480088619 ubox
9 27 0.266359981 ubox
9 28 0.019416225 ubox
9 30 0.347257589 ubox
9 32 0.009147892 ubox
9 37 0.481030159 ubox
9 38 0.519298674 ubox
10 19 0.009005614 ubox
10 20 0.010673510 ubox
10 23 0.196839505 ubox
10 24 0.450865406 ubox
10 26 0.259772351 ubox
10 27 0.018681251 ubox
10 29 0.346626417 ubox
10 31 0.009956651 ubox
10 35 0.106783797 ubox
10 37 0.519586603 ubox
10 42 0.034623137 ubox
11 18 0.010008650 ubox
11 22 0.542888141 ubox
11 33 0.474871590 ubox
11 34 0.014509704 ubox
11 36 0.529643491 ubox
11 41 0.037521676 ubox
12 21 0.558076152 ubox
12 25 0.123272107 ubox
12 27 0.332478626 ubox
12 28 0.102889778 ubox
12 30 0.027777969 ubox
12 32 0.475695776 ubox
12 35 0.528756320 ubox
12 38 0.003579928 ubox
12 40 0.037534250 ubox
13 19 0.048202945 ubox
13 20 0.553235504 ubox
13 23 0.012743571 ubox
13 24 0.122319634 ubox
13 26 0.322562838 ubox
13 27 0.103430677 ubox
13 29 0.036825092 ubox
13 31 0.473736419 ubox
13 35 0.008315608 ubox
13 37 0.003702257 ubox
13 39 0.037139121 ubox
13 46 0.004126743 ubox
14 18 0.063769840 ubox
14 22 0.014079641 ubox
14 34 0.051287060 ubox
14 36 0.004154470 ubox
14 41 0.003294747 ubox
14 45 0.005115189 ubox
15 44 0.004819911 ubox
16 22 0.081389420 ubox
17 21 0.076230009 ubox
17 24 0.273720581 ubox
17 26 0.465689619 ubox
17 28 0.108337028 ubox
17 29 0.292607975 ubox
17 31 0.339842676 ubox
17 38 0.009258086 ubox
17 39 0.004384583 ubox
18 23 0.280163122 ubox
18 25 0.468341984 ubox
18 27 0.127441633 ubox
18 28 0.292324286 ubox
18 30 0.340779813 ubox
18 35 0.019356878 ubox
18 37 0.009548298 ubox
18 38 0.004976815 ubox
19 34 0.014949497 ubox
20 34 0.106949822 ubox
21 33 0.109075788 ubox
21 36 0.006469994 ubox
21 41 0.003648117 ubox
21 47 0.093371222 ubox
22 32 0.108156372 ubox
22 35 0.006358532 ubox
22 40 0.003633397 ubox
22 46 0.093656498 ubox
23 36 0.006612754 ubox
23 45 0.092502313 ubox
24 34 0.021005071 ubox
24 44 0.091209347 ubox
25 33 0.021486746 ubox
25 45 0.019842927 ubox
26 34 0.058200360 ubox
26 44 0.019972252 ubox
27 33 0.059918111 ubox
27 34 0.026150609 ubox
27 45 0.020675186 ubox
27 48 0.098230097 ubox
28 33 0.027130675 ubox
28 44 0.015452817 ubox
28 45 0.263625812 ubox
28 47 0.098607296 ubox
29 44 0.274517678 ubox
30 45 0.243582423 ubox
31 44 0.235265241 ubox
32 41 0.528515425 ubox
33 40 0.529123172 ubox
34 39 0.523839796 ubox
34 42 0.167421191 ubox
34 46 0.003959404 ubox
35 41 0.233706809 ubox
35 45 0.007756974 ubox
36 40 0.232201103 ubox
37 45 0.040642155 ubox
37 48 0.160487252 ubox
38 44 0.029239044 ubox
38 45 0.192359090 ubox
38 47 0.161311022 ubox
39 44 0.188943906 ubox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
showpage
end
%%EOF
