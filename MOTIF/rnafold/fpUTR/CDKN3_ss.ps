%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAGGCCGAGUCUUCGGCCACCCAAAGGCGGAGUAAGAAACCAGAAGCGGAUCUGAUUGGUUGCUGGAAGACGCCGCGCCCACCUCACAGAAGGACGAACCAGUGAGCUAAGCUGCGGGGCGCGGGCUCGGCCGGGGCACCGGUGAGUCGCCGGCGCUGCAGAGGGAGGCGGCACUGGUCUCGACGUGGGGCGGCCAGCG\
) } def
/len { sequence length } bind def

/coor [
[126.14636993 142.49760437]
[117.30534363 146.79962158]
[107.79237366 149.28445435]
[97.97682953 149.85565186]
[88.23985291 148.49101257]
[82.55352020 162.37141418]
[76.86719513 176.25181580]
[71.18087006 190.13223267]
[65.49454498 204.01263428]
[59.80821991 217.89303589]
[62.54691315 234.06188965]
[49.74282837 244.30822754]
[34.56770325 238.09149170]
[32.63241196 221.80694580]
[45.92781067 212.20671082]
[51.61413956 198.32630920]
[57.30046463 184.44590759]
[62.98678970 170.56549072]
[68.67311859 156.68508911]
[74.35944366 142.80468750]
[64.86406708 135.42802429]
[57.40905762 125.99404907]
[52.42733002 115.05057526]
[37.60837173 117.37404633]
[22.78941536 119.69751740]
[13.47820854 132.18507385]
[-1.58341920 134.33030701]
[-13.43101883 125.37654114]
[-28.24997520 127.70001221]
[-43.06893158 130.02348328]
[-55.50404739 139.80502319]
[-69.27619934 134.13253784]
[-84.09516144 136.45600891]
[-90.72617340 148.18466187]
[-102.72733307 153.86767578]
[-115.61896515 151.63180542]
[-124.73022461 142.51463318]
[-139.58352661 144.60736084]
[-154.43682861 146.70008850]
[-162.80862427 156.51835632]
[-175.22811890 157.95220947]
[-184.97073364 150.77459717]
[-199.85478210 152.63609314]
[-209.35780334 165.26416016]
[-225.01831055 167.39114380]
[-237.54519653 157.75514221]
[-239.50648499 142.07301331]
[-229.73858643 129.64869690]
[-214.03660583 127.85331726]
[-201.71626282 137.75204468]
[-186.83221436 135.89056396]
[-173.43640137 124.55868530]
[-156.52955627 131.84680176]
[-141.67625427 129.75407410]
[-126.82295990 127.66133881]
[-117.29331207 113.80800629]
[-100.36003113 111.07601929]
[-86.41863251 121.63705444]
[-71.59967041 119.31358337]
[-60.22451019 109.69823456]
[-45.39240265 115.20452881]
[-30.57344818 112.88105774]
[-15.75449181 110.55758667]
[-7.21578741 98.40744019]
[7.77964306 95.84000397]
[20.46594238 104.87856293]
[35.28490067 102.55509186]
[50.10385513 100.23162079]
[54.21974182 80.15442657]
[66.05921936 63.42538834]
[83.62484741 52.86685562]
[103.95313263 50.26016235]
[123.61448669 56.04508209]
[139.29183960 69.24564362]
[152.35928345 61.88072968]
[165.42672729 54.51581573]
[178.49417114 47.15090561]
[191.56161499 39.78599548]
[197.50650024 32.84109497]
[204.89004517 32.40996170]
[218.07043457 25.24916458]
[231.25083923 18.08836746]
[244.43124390 10.92756939]
[257.61163330 3.76677108]
[256.75057983 -2.73286700]
[257.29440308 -9.25124836]
[259.21145630 -15.48892689]
[262.40728760 -21.16075897]
[266.72909546 -26.00893974]
[271.97305298 -29.81471062]
[277.89395142 -32.40823746]
[284.21670532 -33.67617798]
[290.64898682 -33.56661224]
[296.89492798 -32.09115982]
[302.66851807 -29.32411003]
[307.70693970 -25.39873505]
[311.78228760 -20.50087547]
[325.91281128 -25.53362656]
[340.04333496 -30.56637573]
[354.13427734 -35.70885468]
[368.18481445 -40.96075058]
[382.23535156 -46.21265030]
[396.28588867 -51.46454620]
[410.33642578 -56.71644211]
[424.38696289 -61.96833801]
[438.43750000 -67.22023773]
[449.81420898 -81.69535828]
[466.99468994 -78.13308716]
[480.96185303 -83.60286713]
[494.92901611 -89.07263947]
[498.97381592 -106.74125671]
[512.69110107 -118.34745026]
[530.47180176 -119.39239502]
[545.19201660 -109.64633942]
[558.98229980 -115.54784393]
[572.77258301 -121.44934845]
[586.56292725 -127.35085297]
[600.35321045 -133.25234985]
[614.14349365 -139.15385437]
[623.78662109 -151.69662476]
[638.53155518 -149.59065247]
[652.32189941 -155.49214172]
[658.98614502 -161.75001526]
[666.37280273 -161.37634277]
[680.25323486 -167.06268311]
[694.13366699 -172.74900818]
[707.92395020 -178.65051270]
[721.62078857 -184.76576233]
[735.31762695 -190.88101196]
[749.01446533 -196.99626160]
[762.71130371 -203.11152649]
[769.27746582 -209.47227478]
[776.66906738 -209.21353149]
[790.45935059 -215.11503601]
[804.24963379 -221.01654053]
[818.03997803 -226.91804504]
[827.43225098 -240.36112976]
[843.74493408 -238.67933655]
[850.19689941 -223.60272217]
[840.15093994 -210.64083862]
[823.94146729 -213.12774658]
[810.15118408 -207.22624207]
[796.36083984 -201.32473755]
[782.57055664 -195.42323303]
[768.82659912 -189.41467285]
[755.12976074 -183.29942322]
[741.43286133 -177.18417358]
[727.73602295 -171.06890869]
[714.03918457 -164.95365906]
[711.52398682 -160.88600159]
[706.42352295 -158.35903931]
[699.81994629 -158.86859131]
[685.93957520 -153.18226624]
[672.05914307 -147.49594116]
[658.22338867 -141.70185852]
[644.43310547 -135.80035400]
[635.77636719 -123.67970276]
[620.04498291 -125.36356354]
[606.25469971 -119.46205902]
[592.46441650 -113.56055450]
[578.67413330 -107.65904999]
[564.88378906 -101.75754547]
[551.09350586 -95.85604095]
[550.18041992 -83.74244690]
[544.16552734 -73.10506439]
[534.13812256 -65.99493408]
[521.96765137 -63.81290436]
[509.95520020 -67.03394318]
[500.39877319 -75.10547638]
[486.43161011 -69.63570404]
[472.46444702 -64.16593170]
[467.33016968 -53.20802689]
[455.73272705 -48.53904724]
[443.68939209 -53.16970062]
[429.63885498 -47.91780090]
[415.58831787 -42.66590500]
[401.53778076 -37.41400909]
[387.48724365 -32.16211319]
[373.43670654 -26.91021538]
[359.38616943 -21.65831947]
[354.21768188 -16.36784363]
[345.07608032 -16.43586159]
[330.94555664 -11.40311241]
[316.81506348 -6.37036180]
[309.37594604 16.43137550]
[287.32409668 26.48321152]
[264.77243042 16.94717216]
[251.59204102 24.10796928]
[238.41163635 31.26876831]
[225.23124695 38.42956543]
[212.05084229 45.59036255]
[198.92651367 52.85343933]
[185.85906982 60.21834946]
[172.79162598 67.58325958]
[159.72418213 74.94817352]
[146.65673828 82.31307983]
[149.21917725 91.80545044]
[149.87051392 101.61599731]
[148.58541870 111.36379242]
[145.41381836 120.67035675]
[140.47886658 129.17431641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[23 68]
[24 67]
[25 66]
[28 63]
[29 62]
[30 61]
[32 59]
[33 58]
[37 55]
[38 54]
[39 53]
[42 51]
[43 50]
[74 196]
[75 195]
[76 194]
[77 193]
[78 192]
[80 191]
[81 190]
[82 189]
[83 188]
[84 187]
[97 184]
[98 183]
[99 182]
[100 180]
[101 179]
[102 178]
[103 177]
[104 176]
[105 175]
[106 174]
[108 171]
[109 170]
[110 169]
[114 163]
[115 162]
[116 161]
[117 160]
[118 159]
[119 158]
[121 156]
[122 155]
[124 154]
[125 153]
[126 152]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
