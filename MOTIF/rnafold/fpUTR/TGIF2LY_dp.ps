%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TGIF2LY)
} def

/sequence { (\
CAACUCUGUUAGCAAAGCUGUUUGUCUUUCUCGGAAACAACAGUAACGAUAAGCCUCUUUGAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.148625681 ubox
1 61 0.074012875 ubox
2 7 0.135281467 ubox
2 10 0.186929600 ubox
2 59 0.008961502 ubox
2 60 0.073721058 ubox
3 9 0.203935948 ubox
3 44 0.005213341 ubox
3 58 0.010020589 ubox
3 59 0.068058684 ubox
4 8 0.203994550 ubox
4 12 0.129124060 ubox
4 17 0.010426254 ubox
4 20 0.003230588 ubox
4 24 0.003311510 ubox
4 43 0.005350420 ubox
4 53 0.026593913 ubox
5 11 0.123699746 ubox
5 16 0.011098881 ubox
5 35 0.028135038 ubox
5 42 0.004573640 ubox
5 49 0.027166558 ubox
5 52 0.026115620 ubox
5 62 0.019078880 ubox
6 12 0.071317974 ubox
6 17 0.008058192 ubox
6 34 0.029602368 ubox
6 43 0.014001268 ubox
6 48 0.028608060 ubox
6 53 0.015319333 ubox
6 61 0.018286173 ubox
7 11 0.065318084 ubox
7 14 0.024099671 ubox
7 16 0.009688779 ubox
7 33 0.029580290 ubox
7 39 0.004654402 ubox
7 42 0.014204192 ubox
7 48 0.047479386 ubox
7 51 0.023370910 ubox
7 52 0.014058552 ubox
8 13 0.026432964 ubox
8 18 0.007323106 ubox
8 32 0.029418259 ubox
8 38 0.004869263 ubox
8 41 0.014266107 ubox
8 47 0.064695355 ubox
8 50 0.024952226 ubox
8 54 0.065096437 ubox
8 64 0.134681862 ubox
9 16 0.004374827 ubox
9 17 0.007324165 ubox
9 37 0.004832604 ubox
9 40 0.014075704 ubox
9 46 0.064664930 ubox
9 49 0.025026227 ubox
9 52 0.065538266 ubox
9 53 0.059716327 ubox
9 62 0.025830446 ubox
9 63 0.145895640 ubox
10 15 0.004658783 ubox
10 16 0.007172800 ubox
10 20 0.009291198 ubox
10 36 0.004606097 ubox
10 39 0.012145598 ubox
10 45 0.063997923 ubox
10 48 0.024020406 ubox
10 51 0.074285747 ubox
10 52 0.048446896 ubox
10 61 0.016544225 ubox
10 62 0.129279211 ubox
11 19 0.022423789 ubox
11 22 0.004513048 ubox
11 27 0.023879005 ubox
11 29 0.007296748 ubox
11 31 0.011956655 ubox
11 44 0.032364460 ubox
11 50 0.078470735 ubox
11 56 0.005242509 ubox
11 58 0.004576252 ubox
11 60 0.014512075 ubox
12 18 0.023587961 ubox
12 21 0.005614673 ubox
12 25 0.020370740 ubox
12 26 0.024060048 ubox
12 30 0.012684612 ubox
12 44 0.004348906 ubox
12 54 0.013250987 ubox
12 55 0.004947367 ubox
12 57 0.004718762 ubox
12 59 0.010497766 ubox
13 17 0.023445075 ubox
13 20 0.005716601 ubox
13 24 0.031997126 ubox
13 43 0.005498839 ubox
13 53 0.013475462 ubox
13 61 0.982920920 ubox
14 19 0.005159568 ubox
14 23 0.031970816 ubox
14 29 0.012688991 ubox
14 59 0.003730819 ubox
14 60 0.985726171 ubox
15 22 0.031613773 ubox
15 28 0.012885390 ubox
15 58 0.003807179 ubox
15 59 0.985670116 ubox
15 60 0.005225420 ubox
16 21 0.029891323 ubox
16 27 0.012933385 ubox
16 56 0.010356219 ubox
16 58 0.986298060 ubox
16 59 0.005064738 ubox
17 25 0.004255822 ubox
17 26 0.012832807 ubox
17 44 0.147262813 ubox
17 54 0.024613030 ubox
17 55 0.010836236 ubox
17 57 0.984936962 ubox
17 58 0.003616583 ubox
18 24 0.012519177 ubox
18 43 0.158096572 ubox
18 53 0.026618381 ubox
19 39 0.010146751 ubox
19 42 0.158161405 ubox
19 48 0.003218153 ubox
19 52 0.026243230 ubox
20 38 0.012464820 ubox
20 41 0.158186588 ubox
20 47 0.004975843 ubox
20 50 0.003698284 ubox
20 54 0.985265359 ubox
21 35 0.003753223 ubox
21 37 0.012492290 ubox
21 40 0.134637371 ubox
21 46 0.004904400 ubox
21 49 0.003675789 ubox
21 53 0.985500328 ubox
22 34 0.004954117 ubox
22 36 0.012486497 ubox
22 37 0.007828687 ubox
22 39 0.098049659 ubox
22 40 0.081524461 ubox
22 43 0.005884568 ubox
22 45 0.003696145 ubox
22 49 0.025468574 ubox
22 52 0.984032859 ubox
23 33 0.006618353 ubox
23 35 0.011732429 ubox
23 36 0.011095067 ubox
23 39 0.115851616 ubox
23 42 0.008635601 ubox
23 48 0.025600889 ubox
23 51 0.984945011 ubox
24 32 0.006791052 ubox
24 38 0.142126446 ubox
24 41 0.009063657 ubox
24 47 0.025691612 ubox
24 50 0.985506376 ubox
24 54 0.006988070 ubox
25 34 0.021994500 ubox
25 35 0.071330914 ubox
25 37 0.129978510 ubox
25 40 0.008826778 ubox
25 46 0.024167966 ubox
25 49 0.982533655 ubox
26 33 0.027290132 ubox
26 34 0.079417973 ubox
26 43 0.012836669 ubox
26 48 0.979850696 ubox
26 53 0.012637584 ubox
27 33 0.076481776 ubox
27 34 0.018076331 ubox
27 35 0.086046637 ubox
27 36 0.085677784 ubox
27 37 0.273305439 ubox
27 40 0.013998907 ubox
27 42 0.014235075 ubox
27 43 0.018144015 ubox
27 46 0.495775902 ubox
27 52 0.012969001 ubox
27 53 0.005987304 ubox
28 33 0.016075935 ubox
28 34 0.086254000 ubox
28 35 0.087660958 ubox
28 36 0.297361139 ubox
28 37 0.014135500 ubox
28 39 0.012176636 ubox
28 40 0.007907000 ubox
28 42 0.015644967 ubox
28 43 0.015166982 ubox
28 45 0.425182446 ubox
28 46 0.513636657 ubox
28 51 0.012818205 ubox
28 52 0.009413149 ubox
28 63 0.003551754 ubox
29 33 0.063843083 ubox
29 34 0.081217313 ubox
29 35 0.303814187 ubox
29 36 0.016376027 ubox
29 39 0.008415777 ubox
29 42 0.016697079 ubox
29 45 0.512044614 ubox
29 49 0.005497389 ubox
29 51 0.009936802 ubox
29 62 0.004088020 ubox
30 34 0.301931214 ubox
30 43 0.734521648 ubox
30 48 0.006305984 ubox
30 61 0.004143486 ubox
31 42 0.700711750 ubox
31 49 0.083114306 ubox
32 48 0.099097564 ubox
33 47 0.127131330 ubox
33 58 0.003755401 ubox
34 57 0.003812714 ubox
35 56 0.003661556 ubox
37 44 0.194552038 ubox
38 43 0.201156106 ubox
38 61 0.007230398 ubox
39 60 0.007198957 ubox
40 59 0.006761560 ubox
41 61 0.004994714 ubox
42 56 0.003356891 ubox
42 58 0.005285422 ubox
42 60 0.004945697 ubox
43 54 0.008454375 ubox
43 57 0.005386493 ubox
43 59 0.004389397 ubox
44 51 0.003297964 ubox
44 53 0.008627260 ubox
44 61 0.008836319 ubox
45 50 0.003765521 ubox
45 59 0.005660969 ubox
45 60 0.013819983 ubox
46 58 0.006497391 ubox
46 59 0.014094373 ubox
47 61 0.029173003 ubox
48 57 0.041121491 ubox
48 59 0.004499503 ubox
48 60 0.029251668 ubox
49 56 0.038912618 ubox
49 58 0.004959342 ubox
49 59 0.028494527 ubox
50 61 0.012116170 ubox
51 59 0.016419023 ubox
51 60 0.014529846 ubox
52 58 0.019988725 ubox
52 59 0.014301564 ubox
52 60 0.003950578 ubox
53 57 0.020046006 ubox
53 58 0.010643601 ubox
53 59 0.003720015 ubox
56 62 0.016857377 ubox
57 61 0.017556905 ubox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
showpage
end
%%EOF
