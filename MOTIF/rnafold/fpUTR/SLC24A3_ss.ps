%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGACGAGGAGGGCGACGACGAGGAGACGGGCAGCGGCGAGGAGGAGGAAGAGGAGGCGGAGGCGGCGGCCGGGUGGGAGCGCAGCGAGGACGCGCGGCUGCUGCGCGCAGGGCUGCCUCCUGCCGCUGUCCCCGCCGCGGCCGCCCGCGACAGGAGCGGCCGCCGCCCGCCGAGGCCGCCGCCCGGCCGCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[38.29101944 554.44482422]
[24.68815613 561.17730713]
[9.57145309 562.53735352]
[-5.01467896 558.34100342]
[-17.09758568 549.15582275]
[-25.04315376 536.22399902]
[-27.77681160 521.29443359]
[-24.92885208 506.38626099]
[-16.88443947 493.51568604]
[-4.73151398 484.42333984]
[9.88634014 480.33889771]
[11.31218147 465.40679932]
[12.73802185 450.47473145]
[14.16386223 435.54266357]
[15.58970356 420.61056519]
[9.82991886 417.85006714]
[4.78043795 413.91366577]
[0.67831105 408.97781372]
[-2.28211355 403.26608276]
[-3.95838833 397.03900146]
[-4.26681089 390.58221436]
[-3.18657851 384.19332886]
[-0.76105064 378.16827393]
[2.90395164 372.78750610]
[7.64474821 368.30303955]
[13.24709988 364.92654419]
[19.45589066 362.81951904]
[25.98673439 362.08538818]
[29.75395584 347.56616211]
[33.52117538 333.04690552]
[37.28839493 318.52767944]
[41.05561447 304.00845337]
[36.76273346 289.74591064]
[47.71792984 278.33123779]
[51.48514938 263.81201172]
[55.25236893 249.29278564]
[59.01958847 234.77355957]
[62.78680801 220.25433350]
[53.65088654 206.14007568]
[57.62291336 189.45571899]
[72.72154236 180.63119507]
[76.25792694 166.05401611]
[71.73929596 151.86137390]
[82.51200867 140.27433777]
[86.04839325 125.69716644]
[79.54501343 121.48851013]
[74.29112244 115.64456177]
[70.69452667 108.53166962]
[69.05672455 100.61679840]
[69.54842377 92.43695831]
[72.19376373 84.56275940]
[76.86468506 77.55864716]
[83.28598022 71.94245911]
[91.05105591 68.14732361]
[99.64745331 66.48866272]
[108.49063873 67.13868713]
[107.30188751 52.18586731]
[106.11313629 37.23304749]
[104.92438507 22.28022385]
[103.73564148 7.32740307]
[94.92900848 -5.81618404]
[101.63333893 -19.11660576]
[100.44458771 -34.06942749]
[99.25584412 -49.02225113]
[98.06709290 -63.97507095]
[96.87834167 -78.92789459]
[95.68959045 -93.88071442]
[94.50084686 -108.83353424]
[93.31209564 -123.78635406]
[92.12334442 -138.73918152]
[80.51386261 -129.24076843]
[65.81588745 -132.23568726]
[58.84859085 -145.51939392]
[64.74059296 -159.31375122]
[79.15479279 -163.46475220]
[91.48132324 -154.91612244]
[91.48132324 -169.91612244]
[91.48132324 -184.91612244]
[91.48132324 -199.91612244]
[91.48132324 -214.91612244]
[88.34922791 -223.50842285]
[91.60221100 -230.15364075]
[91.84020233 -245.15176392]
[92.07818604 -260.14987183]
[92.31617737 -275.14797974]
[92.55416870 -290.14608765]
[80.19134521 -296.70245361]
[71.90090179 -307.89379883]
[69.25609589 -321.50051880]
[72.71743774 -334.85440063]
[81.55371857 -345.36181641]
[93.99559021 -351.00741577]
[94.47151184 -365.99987793]
[94.94743347 -380.99230957]
[95.42334747 -395.98477173]
[95.89926910 -410.97720337]
[96.37519073 -425.96966553]
[96.85110474 -440.96209717]
[91.31035614 -456.98510742]
[105.17333221 -466.74493408]
[118.38938904 -456.12551880]
[111.84355164 -440.48617554]
[111.36763763 -425.49374390]
[110.89171600 -410.50128174]
[110.41579437 -395.50885010]
[109.93988037 -380.51638794]
[109.46395874 -365.52395630]
[108.98803711 -350.53149414]
[122.91956329 -342.35430908]
[130.87478638 -328.18710327]
[130.60144043 -311.84759521]
[122.07946777 -297.79388428]
[107.55228424 -289.90811157]
[107.31429291 -274.91000366]
[107.07630157 -259.91189575]
[106.83831024 -244.91377258]
[106.60032654 -229.91566467]
[106.48132324 -214.91612244]
[106.48132324 -199.91612244]
[106.48132324 -184.91612244]
[106.48132324 -169.91612244]
[106.48132324 -154.91612244]
[107.07616425 -139.92793274]
[108.26491547 -124.97510529]
[109.45366669 -110.02228546]
[110.64241791 -95.06946564]
[111.83116150 -80.11664581]
[113.01991272 -65.16381836]
[114.20866394 -50.21099854]
[115.39741516 -35.25817871]
[116.58615875 -20.30535507]
[125.30776215 -8.23129463]
[118.68846130 6.13865376]
[119.87721252 21.09147453]
[121.06595612 36.04429626]
[122.25470734 50.99711990]
[123.44345856 65.94994354]
[134.05006409 76.55654144]
[149.00288391 77.74529266]
[163.95570374 78.93404388]
[178.90852356 80.12278748]
[193.86134338 81.31153870]
[208.81416321 82.50028992]
[223.76698303 83.68904114]
[238.71981812 84.87778473]
[253.68159485 85.94787598]
[268.65139771 86.89923096]
[280.34588623 76.26840210]
[296.12805176 77.10395813]
[306.63467407 88.91018677]
[305.63229370 104.68265533]
[293.71563721 115.06384277]
[277.95465088 113.89477539]
[267.70004272 101.86903381]
[252.73023987 100.91767883]
[245.84811401 103.63379669]
[237.53106689 99.83061218]
[222.57824707 98.64186096]
[207.62541199 97.45310974]
[192.67259216 96.26435852]
[177.71977234 95.07561493]
[162.76695251 93.88686371]
[147.81413269 92.69811249]
[132.86131287 91.50936127]
[132.12709045 106.43606567]
[125.18149567 119.07468414]
[113.82773590 127.09030151]
[100.62556458 129.23355103]
[97.08917999 143.81072998]
[101.35486603 159.04602051]
[90.83509827 169.59039307]
[87.29871368 184.16757202]
[95.58918762 194.79089355]
[96.23464203 208.05595398]
[89.22320557 219.10519409]
[77.30603790 224.02154541]
[73.53881836 238.54078674]
[69.77159882 253.06001282]
[66.00437927 267.57925415]
[62.23715973 282.09848022]
[66.26058197 297.39953613]
[55.57484436 307.77566528]
[51.80762482 322.29492188]
[48.04040527 336.81414795]
[44.27318573 351.33337402]
[40.50596619 365.85260010]
[55.21902847 385.42636108]
[50.82482910 409.26190186]
[30.52178192 422.03640747]
[29.09594154 436.96850586]
[27.67010117 451.90057373]
[26.24426079 466.83264160]
[24.81841850 481.76473999]
[38.39912033 488.54180908]
[48.61169052 499.76980591]
[54.07495499 513.93023682]
[54.05006027 529.10797119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[41 172]
[42 171]
[44 169]
[45 168]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[69 124]
[70 123]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
[145 157]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
