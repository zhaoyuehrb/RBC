%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUUUUCCCCGGCGUGGUCUCACUCGCGAUUUAAGGCAUAGGUGUCGCCGAGCCGGGAGGCUGGGAGUCGCCAGGCGUGCGGGGGAGAGGCCUGGGCCGCGCCGCGGCGGGGGGUGGAGGAAGAGGGCAGGCGAGGCGGGAAGGUGGGCUCUGGCCGCCGGGAGCCGGGGACGGAGCCGCCGCCGUUGCCCCUAGCGGGGAGCAGCCGGGAGGAGGGGGCCGCAGUCGGGAGAGGGGACCCCACC\
) } def
/len { sequence length } bind def

/coor [
[104.03057098 549.50805664]
[107.65609741 534.71697998]
[116.98937988 522.68328857]
[130.41336060 515.49188232]
[129.27893066 500.53485107]
[128.14450073 485.57778931]
[127.01007080 470.62075806]
[125.87564087 455.66372681]
[124.74120331 440.70669556]
[123.60677338 425.74963379]
[122.47234344 410.79260254]
[121.33791351 395.83557129]
[117.70723724 389.41961670]
[120.28473663 380.68286133]
[119.33910370 365.71270752]
[118.39346313 350.74252319]
[117.35340881 335.77862549]
[116.21897888 320.82159424]
[115.08454895 305.86456299]
[113.95011902 290.90753174]
[112.81568909 275.95046997]
[111.68125916 260.99343872]
[110.54682159 246.03639221]
[109.41239166 231.07936096]
[97.37873077 215.92584229]
[106.45382690 197.90766907]
[104.94238281 182.98402405]
[103.43093109 168.06036377]
[94.45056152 156.17750549]
[100.75793457 141.66793823]
[99.24648285 126.74427795]
[92.65874481 123.15934753]
[93.03730011 138.15457153]
[80.24037933 145.98010254]
[67.06477356 138.81050110]
[66.68593597 123.81527710]
[79.48326111 115.98949432]
[72.89552307 112.40457153]
[59.54333878 119.23970795]
[46.19115448 126.07485199]
[32.83896637 132.90998840]
[24.39259338 146.96669006]
[8.00290585 146.40975952]
[0.53020871 131.81213379]
[9.66177273 118.19058990]
[26.00382805 119.55780029]
[39.35601425 112.72266388]
[52.70819855 105.88752747]
[66.06038666 99.05238342]
[64.05078125 91.82663727]
[58.02196121 70.14938354]
[43.05805969 71.18943787]
[29.82758141 79.86497498]
[16.59445953 73.02876282]
[1.63056099 74.06881714]
[-13.33333874 75.10887146]
[-28.29723740 76.14892578]
[-41.58681488 85.75720978]
[-56.43995667 78.80622864]
[-57.57702637 62.44654846]
[-43.82830048 53.50761032]
[-29.33729172 61.18502808]
[-14.37339211 60.14497375]
[0.59050697 59.10491943]
[15.55440617 58.06486511]
[27.71456718 49.46371841]
[42.01800537 56.22553635]
[56.98190689 55.18548203]
[67.92667389 58.02168655]
[77.61914062 62.65553665]
[85.80497742 68.83425140]
[92.27154541 76.27196503]
[85.69031525 62.79282379]
[79.10907745 49.31367874]
[72.52783966 35.83453369]
[57.85324097 30.61017799]
[51.37094498 16.84665680]
[56.44200516 2.88886571]
[49.86077118 -10.59027863]
[36.85314560 -19.59651184]
[38.22187805 -34.42809296]
[31.64064026 -47.90723801]
[25.05940437 -61.38638306]
[8.99231434 -58.50263596]
[-7.22295713 -60.25646210]
[-22.27604485 -66.49821472]
[-34.95272827 -76.71589661]
[-44.23287201 -90.07714844]
[-49.37253189 -105.49703979]
[-49.96356201 -121.72619629]
[-45.96603775 -137.45198059]
[-37.71084595 -151.40472412]
[-25.87229729 -162.46015930]
[-32.79153061 -175.76895142]
[-39.71076584 -189.07775879]
[-46.63000107 -202.38656616]
[-63.41405106 -207.35940552]
[-71.24329376 -222.63725281]
[-65.70023346 -238.52714539]
[-72.78682709 -251.74760437]
[-79.87342072 -264.96804810]
[-86.96001434 -278.18847656]
[-94.04660797 -291.40893555]
[-106.85865784 -302.51242065]
[-99.73582458 -317.89755249]
[-82.98017120 -315.31207275]
[-80.82616425 -298.49551392]
[-73.73957062 -285.27508545]
[-66.65297699 -272.05462646]
[-59.56637955 -258.83419800]
[-52.47978592 -245.61373901]
[-39.75873184 -243.65596008]
[-30.34204865 -234.59907532]
[-27.81621170 -221.58216858]
[-33.32119751 -209.30578613]
[-26.40196419 -195.99699402]
[-19.48273087 -182.68818665]
[-12.56349659 -169.37939453]
[0.82578182 -172.50454712]
[14.58372974 -172.33010864]
[27.90861511 -168.86148071]
[40.02280426 -162.29620361]
[50.21814728 -153.01266479]
[57.89736938 -141.54829407]
[62.60906982 -128.56849670]
[64.07423401 -114.82797241]
[62.20277786 -101.12689209]
[57.09905243 -88.26423645]
[49.05603790 -76.99127197]
[38.53854752 -67.96762085]
[45.11978531 -54.48847580]
[51.70102310 -41.00933075]
[64.23791504 -32.96721649]
[63.33991241 -17.17151451]
[69.92115021 -3.69237089]
[84.04595947 0.89297360]
[90.91228485 14.46899033]
[86.00698090 29.25329781]
[92.58821869 42.73244095]
[99.16945648 56.21158600]
[105.75069427 69.69072723]
[120.17655182 73.80102539]
[132.87382507 65.81482697]
[136.48620605 53.44976044]
[147.20561218 47.05592728]
[159.01866150 49.58615875]
[171.81567383 41.76078796]
[184.61268616 33.93541336]
[197.40969849 26.11004257]
[210.20671082 18.28466988]
[215.87756348 11.15613747]
[223.21490479 10.44247055]
[236.10963440 2.77917433]
[249.00436401 -4.88412189]
[261.89907837 -12.54741859]
[274.79379272 -20.21071434]
[282.70422363 -33.91239166]
[297.59808350 -33.76322556]
[310.49279785 -41.42652130]
[316.25314331 -48.48294067]
[323.59890747 -49.10397720]
[336.58929443 -56.60397720]
[349.57968140 -64.10398102]
[362.57003784 -71.60398102]
[373.26397705 -84.75982666]
[388.86605835 -78.12573242]
[386.81030273 -61.29687881]
[370.07003784 -58.61359787]
[357.07968140 -51.11359787]
[344.08929443 -43.61359787]
[331.09890747 -36.11359787]
[318.15609741 -28.53179741]
[305.26138306 -20.86850166]
[298.27328491 -7.71495533]
[282.45709229 -7.31599092]
[269.56237793 0.34730515]
[256.66766357 8.01060104]
[243.77293396 15.67389774]
[230.87820435 23.33719444]
[218.03208923 31.08168221]
[205.23507690 38.90705490]
[192.43806458 46.73242950]
[179.64103699 54.55780029]
[166.84402466 62.38317490]
[159.28349304 78.23167419]
[140.86001587 78.51209259]
[128.16275024 86.49829865]
[130.14410400 101.36685944]
[144.48959351 105.74942017]
[158.83508301 110.13198090]
[173.18058777 114.51454163]
[187.52607727 118.89709473]
[201.89892578 123.18907166]
[216.29856873 127.39029694]
[230.69821167 131.59150696]
[245.09785461 135.79273987]
[261.99652100 134.42463684]
[267.98916626 150.28416443]
[254.40837097 160.43296814]
[240.89663696 150.19238281]
[226.49699402 145.99116516]
[212.09735107 141.78993225]
[197.69770813 137.58871460]
[190.41455078 138.72955322]
[183.14350891 133.24258423]
[168.79801941 128.86003113]
[154.45252991 124.47747040]
[140.10704041 120.09491730]
[125.76154327 115.71235657]
[114.17013550 125.23282623]
[115.68158722 140.15647888]
[124.77006531 153.10678101]
[118.35458374 166.54890442]
[119.86603546 181.47256470]
[121.37748718 196.39622498]
[130.16403198 202.75437927]
[133.93624878 212.68873596]
[131.67907715 222.84820557]
[124.36943054 229.94491577]
[125.50386810 244.90196228]
[126.63829803 259.85900879]
[127.77272797 274.81604004]
[128.90716553 289.77307129]
[130.04159546 304.73013306]
[131.17602539 319.68716431]
[132.31045532 334.64419556]
[136.07180786 342.94039917]
[133.36363220 349.79690552]
[134.30926514 364.76705933]
[135.25489807 379.73724365]
[136.29495239 394.70114136]
[137.42938232 409.65817261]
[138.56381226 424.61520386]
[139.69824219 439.57223511]
[140.83267212 454.52929688]
[141.96710205 469.48632812]
[143.10154724 484.44335938]
[144.23597717 499.40042114]
[145.37040710 514.35748291]
[159.72546387 519.44195557]
[170.76695251 529.93029785]
[176.58184814 544.00531006]
[176.16270447 559.22845459]
[169.58212280 572.96221924]
[157.98023987 582.82714844]
[143.36715698 587.11401367]
[128.27465820 585.08020020]
[115.31762695 577.07800293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 239]
[5 238]
[6 237]
[7 236]
[8 235]
[9 234]
[10 233]
[11 232]
[12 231]
[14 230]
[15 229]
[16 228]
[17 226]
[18 225]
[19 224]
[20 223]
[21 222]
[22 221]
[23 220]
[24 219]
[26 215]
[27 214]
[28 213]
[30 211]
[31 210]
[38 49]
[39 48]
[40 47]
[41 46]
[51 68]
[52 67]
[54 65]
[55 64]
[56 63]
[57 62]
[72 141]
[73 140]
[74 139]
[75 138]
[78 135]
[79 134]
[81 132]
[82 131]
[83 130]
[93 118]
[94 117]
[95 116]
[96 115]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[142 187]
[143 186]
[146 184]
[147 183]
[148 182]
[149 181]
[150 180]
[152 179]
[153 178]
[154 177]
[155 176]
[156 175]
[158 173]
[159 172]
[161 171]
[162 170]
[163 169]
[164 168]
[188 209]
[189 208]
[190 207]
[191 206]
[192 205]
[193 203]
[194 202]
[195 201]
[196 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
