%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKK1)
} def

/sequence { (\
CGGACCCGAGGAGCAGGAAGCGGCGGCUCCUUCGGCCACCCAGGCAGCAGCCACAGCGGGGAGUGCGCGGCGCGGGGACAGGAAGAGAGGGGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.119966890 ubox
1 22 0.720145778 ubox
1 25 0.201430238 ubox
1 34 0.004912472 ubox
2 7 0.120716870 ubox
2 21 0.729340319 ubox
2 24 0.203306026 ubox
2 28 0.008839268 ubox
2 30 0.044784354 ubox
2 33 0.004940880 ubox
2 37 0.285763799 ubox
2 40 0.003183230 ubox
3 27 0.010200583 ubox
3 29 0.045233859 ubox
3 32 0.003649849 ubox
3 36 0.285662502 ubox
3 39 0.003641475 ubox
4 28 0.044852320 ubox
5 11 0.087987325 ubox
5 17 0.071369413 ubox
5 23 0.065157574 ubox
5 26 0.013377090 ubox
5 35 0.249425959 ubox
5 76 0.019964688 ubox
5 77 0.011880443 ubox
5 82 0.003368054 ubox
5 90 0.013976241 ubox
5 91 0.178269639 ubox
5 92 0.141499713 ubox
6 10 0.087739223 ubox
6 16 0.068978756 ubox
6 17 0.784584786 ubox
6 22 0.062945943 ubox
6 23 0.228150590 ubox
6 25 0.020241626 ubox
6 26 0.126804720 ubox
6 34 0.244654245 ubox
6 35 0.192586704 ubox
6 75 0.020012404 ubox
6 76 0.011900554 ubox
6 89 0.013067774 ubox
6 90 0.178634356 ubox
6 91 0.141984402 ubox
6 92 0.007292054 ubox
7 16 0.786060022 ubox
7 22 0.229836064 ubox
7 25 0.319973673 ubox
7 34 0.200823482 ubox
7 74 0.019902689 ubox
7 75 0.011794557 ubox
7 89 0.178232647 ubox
7 90 0.141599300 ubox
7 91 0.007346632 ubox
8 21 0.222305054 ubox
8 24 0.322530487 ubox
8 29 0.036668670 ubox
8 32 0.266765865 ubox
8 33 0.207683974 ubox
8 73 0.012423322 ubox
9 28 0.037007314 ubox
9 31 0.343492260 ubox
9 32 0.148229617 ubox
10 27 0.037090363 ubox
10 30 0.383988346 ubox
10 31 0.024911474 ubox
10 33 0.004132637 ubox
10 37 0.018144016 ubox
11 29 0.384498872 ubox
11 30 0.017124223 ubox
11 32 0.004147247 ubox
11 33 0.011316090 ubox
11 36 0.018134910 ubox
12 28 0.384762875 ubox
12 32 0.011059074 ubox
13 21 0.366612776 ubox
13 24 0.169312503 ubox
13 27 0.384670052 ubox
13 31 0.004360585 ubox
13 36 0.005653059 ubox
13 93 0.006964958 ubox
14 20 0.367246907 ubox
14 23 0.169554154 ubox
14 26 0.384290819 ubox
14 35 0.005777264 ubox
14 72 0.003208354 ubox
14 92 0.006962105 ubox
15 31 0.051521034 ubox
15 32 0.003730076 ubox
16 30 0.060523267 ubox
16 31 0.004685163 ubox
17 29 0.060812022 ubox
17 30 0.005022530 ubox
18 28 0.042945867 ubox
19 28 0.049150556 ubox
20 27 0.066790385 ubox
20 71 0.007609829 ubox
20 93 0.009002901 ubox
21 26 0.066907617 ubox
21 70 0.007630313 ubox
21 92 0.008990492 ubox
23 68 0.007833890 ubox
23 93 0.055732701 ubox
24 67 0.007839835 ubox
24 92 0.055591100 ubox
25 37 0.003716563 ubox
25 66 0.007705929 ubox
26 36 0.003719941 ubox
26 64 0.007637334 ubox
26 93 0.907761563 ubox
27 35 0.003717217 ubox
27 63 0.008087149 ubox
27 87 0.004960343 ubox
27 89 0.059892018 ubox
27 91 0.012881075 ubox
27 92 0.915631146 ubox
28 34 0.003428030 ubox
28 62 0.008108238 ubox
28 86 0.004971460 ubox
28 88 0.060228636 ubox
28 90 0.011514628 ubox
28 91 0.911591344 ubox
28 92 0.028958316 ubox
29 61 0.008101586 ubox
29 85 0.003861664 ubox
29 87 0.060280166 ubox
29 89 0.011944233 ubox
29 90 0.912243688 ubox
29 91 0.092352530 ubox
30 60 0.008082444 ubox
30 77 0.003868500 ubox
30 85 0.066048972 ubox
30 87 0.011203786 ubox
30 89 0.912217062 ubox
30 90 0.092859143 ubox
31 59 0.006775142 ubox
31 76 0.004152133 ubox
31 83 0.005986964 ubox
31 84 0.067394736 ubox
31 86 0.009758503 ubox
31 87 0.484204201 ubox
31 88 0.768401929 ubox
31 89 0.093732445 ubox
32 58 0.004526707 ubox
32 59 0.003639979 ubox
32 75 0.005024950 ubox
32 82 0.008296163 ubox
32 83 0.070260317 ubox
32 85 0.004407468 ubox
32 86 0.796431512 ubox
32 87 0.456626126 ubox
32 88 0.116388946 ubox
33 58 0.005136070 ubox
33 74 0.007432889 ubox
33 81 0.012203213 ubox
33 82 0.071582988 ubox
33 85 0.905070293 ubox
33 87 0.134648777 ubox
33 89 0.004959260 ubox
34 41 0.003189172 ubox
34 57 0.004449479 ubox
34 73 0.007446311 ubox
35 45 0.028903423 ubox
35 57 0.005398609 ubox
35 64 0.003302865 ubox
35 71 0.007860177 ubox
35 93 0.019068862 ubox
36 44 0.028948871 ubox
36 56 0.005869400 ubox
36 63 0.003524816 ubox
36 70 0.007874396 ubox
36 77 0.014612070 ubox
36 82 0.951488622 ubox
36 90 0.008921447 ubox
36 91 0.008535393 ubox
36 92 0.020195342 ubox
37 43 0.028931610 ubox
37 69 0.007855368 ubox
37 76 0.014116823 ubox
37 81 0.951120583 ubox
37 89 0.008936950 ubox
37 90 0.008574633 ubox
37 91 0.020113748 ubox
39 60 0.008510685 ubox
39 61 0.003893258 ubox
39 75 0.014633448 ubox
39 76 0.181880137 ubox
39 77 0.971413397 ubox
39 82 0.006571959 ubox
39 90 0.007740764 ubox
39 91 0.023593842 ubox
39 92 0.024636979 ubox
40 59 0.008534139 ubox
40 60 0.003912386 ubox
40 70 0.003945611 ubox
40 74 0.014580203 ubox
40 75 0.182984936 ubox
40 76 0.972030408 ubox
40 77 0.136944918 ubox
40 81 0.006124741 ubox
40 82 0.005197750 ubox
40 89 0.006619060 ubox
40 90 0.023647614 ubox
40 91 0.024729881 ubox
41 58 0.008525442 ubox
41 59 0.003901896 ubox
41 69 0.003998449 ubox
41 74 0.183232947 ubox
41 75 0.971252992 ubox
41 76 0.137429522 ubox
41 81 0.005228549 ubox
41 89 0.023602021 ubox
41 90 0.024698029 ubox
43 52 0.046947384 ubox
44 51 0.047022268 ubox
44 57 0.004025170 ubox
44 66 0.008738173 ubox
44 68 0.015686088 ubox
44 71 0.152012189 ubox
44 73 0.976138061 ubox
45 50 0.046957289 ubox
45 56 0.004024568 ubox
45 65 0.008816260 ubox
45 67 0.015650873 ubox
45 70 0.151494010 ubox
45 72 0.973467783 ubox
46 64 0.008120771 ubox
47 64 0.008238961 ubox
47 66 0.039338934 ubox
47 68 0.147080075 ubox
47 71 0.970433802 ubox
47 73 0.078722114 ubox
48 63 0.009600959 ubox
48 65 0.039406568 ubox
48 67 0.147208667 ubox
48 70 0.967194231 ubox
48 72 0.078777252 ubox
49 64 0.038450791 ubox
50 57 0.004421400 ubox
50 64 0.006466575 ubox
50 66 0.136473947 ubox
50 68 0.969170387 ubox
50 71 0.160516491 ubox
51 56 0.004419783 ubox
51 59 0.009799434 ubox
51 60 0.026358253 ubox
51 61 0.032949483 ubox
51 63 0.006005748 ubox
51 65 0.099148441 ubox
51 67 0.972730978 ubox
51 70 0.160647528 ubox
52 58 0.010079335 ubox
52 59 0.026651438 ubox
52 60 0.032960586 ubox
52 65 0.974343854 ubox
52 69 0.160492428 ubox
53 64 0.978711350 ubox
54 63 0.978608544 ubox
54 65 0.036386639 ubox
55 64 0.034113404 ubox
56 64 0.067552015 ubox
56 66 0.135979822 ubox
56 68 0.117199234 ubox
56 73 0.014716424 ubox
57 63 0.071514655 ubox
57 65 0.136041565 ubox
57 67 0.117294930 ubox
57 72 0.014733654 ubox
58 64 0.128482447 ubox
58 66 0.117111913 ubox
58 71 0.014681717 ubox
63 73 0.025196298 ubox
64 72 0.025222947 ubox
64 74 0.009710061 ubox
65 71 0.025348983 ubox
65 73 0.016728369 ubox
66 70 0.025166115 ubox
66 72 0.016744895 ubox
66 74 0.012884829 ubox
67 71 0.015683130 ubox
67 73 0.016511186 ubox
68 72 0.016398232 ubox
68 74 0.004172657 ubox
69 73 0.004578515 ubox
1 22 0.9500000 lbox
2 21 0.9500000 lbox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
26 93 0.9500000 lbox
27 92 0.9500000 lbox
28 91 0.9500000 lbox
29 90 0.9500000 lbox
30 89 0.9500000 lbox
31 88 0.9500000 lbox
32 86 0.9500000 lbox
33 85 0.9500000 lbox
36 82 0.9500000 lbox
37 81 0.9500000 lbox
39 77 0.9500000 lbox
40 76 0.9500000 lbox
41 75 0.9500000 lbox
44 73 0.9500000 lbox
45 72 0.9500000 lbox
47 71 0.9500000 lbox
48 70 0.9500000 lbox
50 68 0.9500000 lbox
51 67 0.9500000 lbox
52 65 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
showpage
end
%%EOF
