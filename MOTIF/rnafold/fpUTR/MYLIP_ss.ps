%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGGCUGCUGGAGUGCGGCGCCACCGCGGAGGACAGGGGCAGCUGGCGGGCAGCGGGUGAGGGGGUGGCGGGGACGCGAGUGGCGGCCGCGGGGCCCCGGACAAGGGUCCGCAGAGCUGCAGCCUUCGAGGGCCAGCCCUCUCCGAGUCCGGGGCUGGGUCCCACCAGUGACAAGGCGGCAGCCCCGCGCACACCAAAGAGAAGGCGGCUGUGGCGGCAGCGGCAGCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[95.96939850 462.38137817]
[102.01573944 446.54223633]
[102.01573944 431.54223633]
[102.01573944 416.54223633]
[102.01573944 401.54223633]
[102.01573944 386.54223633]
[102.01573944 371.54223633]
[101.91674042 356.54257202]
[101.71875000 341.54388428]
[101.52075195 326.54516602]
[101.32276154 311.54647827]
[101.12476349 296.54779053]
[100.92677307 281.54910278]
[93.01055145 275.12365723]
[89.86227417 265.19583130]
[92.74765778 254.96035767]
[100.94892883 247.85102844]
[101.14692688 232.85232544]
[101.34491730 217.85363770]
[98.72666931 213.87944031]
[98.56470490 208.22189331]
[101.75132751 202.46301270]
[102.34516907 187.47477722]
[102.93901062 172.48654175]
[103.53285980 157.49829102]
[104.12670135 142.51005554]
[104.72054291 127.52181244]
[88.02745819 123.03329468]
[78.31367493 110.26829529]
[78.44047546 95.47218323]
[65.68721771 87.57569885]
[52.93395996 79.67921448]
[40.18070221 71.78273773]
[27.42744637 63.88625336]
[14.67418957 55.98976898]
[6.31273556 60.82851791]
[-3.17801881 62.29116440]
[-12.49546051 60.21943665]
[-20.37614822 54.93726730]
[-25.76712227 47.20096970]
[-27.96652985 38.09115982]
[-26.71478844 28.86191559]
[-39.03353500 20.30337906]
[-51.35227966 11.74484444]
[-63.67102432 3.18630886]
[-75.98976898 -5.37222672]
[-88.30850983 -13.93076229]
[-106.69712067 -15.05054855]
[-113.53055573 -31.22293282]
[-125.96119690 -39.61811829]
[-138.39184570 -48.01330948]
[-150.82247925 -56.40849686]
[-163.25311279 -64.80368042]
[-175.68376160 -73.19886780]
[-187.91529846 -66.43341064]
[-201.80198669 -65.59799194]
[-214.63381958 -70.79859161]
[-223.93122864 -80.96882629]
[-227.92411804 -94.08805084]
[-225.88876343 -107.58268738]
[-238.20750427 -116.14122009]
[-251.08908081 -112.24485016]
[-263.68081665 -116.41241455]
[-271.46252441 -126.91211700]
[-271.77700806 -139.78280640]
[-283.98171997 -148.50320435]
[-296.18640137 -157.22358704]
[-308.39111328 -165.94398499]
[-320.59582520 -174.66436768]
[-335.98788452 -172.27239990]
[-348.24096680 -181.28997803]
[-350.42648315 -195.97871399]
[-362.63119507 -204.69911194]
[-378.35781860 -206.42654419]
[-384.21517944 -220.12109375]
[-396.41986084 -228.84149170]
[-412.14648438 -230.56892395]
[-418.00384521 -244.26347351]
[-430.20855713 -252.98385620]
[-442.41323853 -261.70425415]
[-458.41088867 -260.49810791]
[-469.22225952 -272.35110474]
[-466.55377197 -288.17068481]
[-452.45248413 -295.82138062]
[-437.73568726 -289.43426514]
[-433.69284058 -273.90896606]
[-421.48815918 -265.18856812]
[-409.28344727 -256.46817017]
[-394.42977905 -255.36448669]
[-387.69949341 -241.04618835]
[-375.49478149 -232.32579041]
[-360.64111328 -231.22210693]
[-353.91079712 -216.90380859]
[-341.70611572 -208.18342590]
[-327.10171509 -210.87559509]
[-314.60018921 -202.20574951]
[-311.87542725 -186.86907959]
[-299.67071533 -178.14868164]
[-287.46600342 -169.42829895]
[-275.26132202 -160.70790100]
[-263.05661011 -151.98750305]
[-246.59114075 -155.45249939]
[-232.44055176 -145.73811340]
[-229.64897156 -128.45996094]
[-217.33023071 -119.90143585]
[-202.87402344 -127.14051819]
[-186.64657593 -126.09010315]
[-173.08850098 -116.94261932]
[-165.95782471 -102.11919403]
[-167.28857422 -85.62950897]
[-154.85792542 -77.23432159]
[-142.42729187 -68.83913422]
[-129.99665833 -60.44394684]
[-117.56600952 -52.04875946]
[-105.13536835 -43.65357208]
[-93.21599579 -45.64741135]
[-82.79490662 -38.77068710]
[-79.74997711 -26.24950600]
[-67.43122864 -17.69097137]
[-55.11248779 -9.13243580]
[-42.79374313 -0.57390022]
[-30.47499847 7.98463535]
[-18.15625381 16.54317093]
[1.60667408 11.26707077]
[19.06254387 22.48581123]
[22.57067108 43.23651505]
[35.32392883 51.13299561]
[48.07718658 59.02947998]
[60.83044434 66.92596436]
[73.58370209 74.82244110]
[86.33695984 82.71892548]
[102.47703552 76.13372803]
[119.93871307 83.37705994]
[127.83996582 102.16101074]
[142.70947266 100.18675995]
[157.57899475 98.21250916]
[172.44850159 96.23825836]
[180.52597046 92.01361847]
[187.52716064 94.33742523]
[202.42143250 92.55962372]
[217.31570435 90.78181458]
[230.10157776 81.46344757]
[243.65617371 87.63777161]
[258.55044556 85.85996246]
[273.44473267 84.08215332]
[288.33898926 82.30434418]
[297.35018921 63.61080170]
[315.72238159 54.26627350]
[335.86160278 57.94285202]
[349.55825806 72.96929932]
[364.30285645 70.21305847]
[376.44631958 60.07172394]
[390.37863159 65.33865356]
[405.12322998 62.58241272]
[419.86782837 59.82616806]
[434.61239624 57.06992722]
[449.35699463 54.31368256]
[464.10159302 51.55743790]
[478.84619141 48.80119705]
[493.59078979 46.04495239]
[496.75717163 43.13483810]
[500.32406616 41.53343964]
[503.83438110 41.20686722]
[506.88833618 41.97732925]
[509.18499756 43.55397034]
[524.05450439 41.57971954]
[536.71624756 32.09339523]
[550.35119629 38.08826447]
[565.22070312 36.11401367]
[572.49108887 22.40559387]
[586.44537354 15.61894703]
[601.71777344 18.36367989]
[612.43572998 29.58438492]
[614.47802734 44.96647263]
[607.05938721 58.59521484]
[593.03228760 65.23008728]
[577.79058838 62.31983948]
[567.19494629 50.98352432]
[552.32543945 52.95777512]
[540.72723389 62.30288696]
[526.02874756 56.44923019]
[511.15924072 58.42348099]
[496.34704590 60.78955078]
[481.60244751 63.54579163]
[466.85784912 66.30203247]
[452.11325073 69.05828094]
[437.36865234 71.81452179]
[422.62405396 74.57076263]
[407.87945557 77.32701111]
[393.13485718 80.08325195]
[382.04602051 90.02743530]
[367.05911255 84.95765686]
[352.31451416 87.71389771]
[350.44116211 97.13818359]
[345.81817627 105.59524536]
[338.85415649 112.30082703]
[330.17565918 116.62713623]
[320.57089233 118.16151428]
[310.91815186 116.74578857]
[302.10543823 112.49238586]
[294.94879150 105.77557373]
[290.11679077 97.19862366]
[275.22253418 98.97642517]
[260.32824707 100.75423431]
[245.43397522 102.53204346]
[233.71343994 111.72325134]
[219.09350586 105.67608643]
[204.19923401 107.45389557]
[189.30496216 109.23170471]
[174.42274475 111.10777283]
[159.55323792 113.08202362]
[144.68373108 115.05627441]
[129.81422424 117.03052521]
[119.70878601 128.11566162]
[119.11493683 143.10389709]
[118.52109528 158.09213257]
[117.92725372 173.08038330]
[117.33341217 188.06861877]
[116.73956299 203.05685425]
[116.34361267 218.05163574]
[116.14562225 233.05032349]
[115.94762421 248.04901123]
[126.56990051 265.19583130]
[115.92546082 281.35110474]
[116.12345886 296.34979248]
[116.32144928 311.34848022]
[116.51944733 326.34719849]
[116.71743774 341.34588623]
[116.91543579 356.34457397]
[120.15295410 364.86581421]
[117.01573944 371.54223633]
[117.01573944 386.54223633]
[117.01573944 401.54223633]
[117.01573944 416.54223633]
[117.01573944 431.54223633]
[117.01573944 446.54223633]
[123.06208038 462.38137817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 236]
[3 235]
[4 234]
[5 233]
[6 232]
[7 231]
[8 229]
[9 228]
[10 227]
[11 226]
[12 225]
[13 224]
[17 222]
[18 221]
[19 220]
[22 219]
[23 218]
[24 217]
[25 216]
[26 215]
[27 214]
[30 131]
[31 130]
[32 129]
[33 128]
[34 127]
[35 126]
[42 123]
[43 122]
[44 121]
[45 120]
[46 119]
[47 118]
[49 115]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[60 105]
[61 104]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[72 94]
[73 93]
[75 91]
[76 90]
[78 88]
[79 87]
[80 86]
[134 213]
[135 212]
[136 211]
[137 210]
[139 209]
[140 208]
[141 207]
[143 205]
[144 204]
[145 203]
[146 202]
[150 193]
[151 192]
[153 190]
[154 189]
[155 188]
[156 187]
[157 186]
[158 185]
[159 184]
[160 183]
[165 182]
[166 181]
[168 179]
[169 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
