%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NXPE2)
} def

/sequence { (\
GAAGCUCAUAGGGAAACUCCAACCCUAAGAUAAAUGCAAAGACUGCUUUAAUCAAGGAGAGUCUCUGGACACUAUAAUUCCUGUGAGAACACGAGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.013751881 ubox
1 49 0.005159880 ubox
1 63 0.012649047 ubox
1 65 0.029966074 ubox
1 80 0.008438893 ubox
2 6 0.011986021 ubox
2 48 0.005466565 ubox
2 62 0.012608334 ubox
2 64 0.029433725 ubox
2 79 0.008404962 ubox
3 47 0.005550395 ubox
3 64 0.005585551 ubox
3 73 0.049062142 ubox
3 78 0.007427026 ubox
4 37 0.035010267 ubox
4 46 0.005558355 ubox
4 62 0.032436923 ubox
4 63 0.006610075 ubox
4 72 0.050680735 ubox
5 29 0.023973222 ubox
5 36 0.035295029 ubox
5 45 0.005553441 ubox
5 59 0.016973194 ubox
5 61 0.034585112 ubox
5 68 0.007610873 ubox
5 87 0.982621159 ubox
5 95 0.052328777 ubox
5 98 0.005028280 ubox
6 28 0.022878455 ubox
6 30 0.100383620 ubox
6 58 0.017002508 ubox
6 60 0.034595972 ubox
6 67 0.005662665 ubox
6 68 0.006729831 ubox
6 69 0.058687249 ubox
6 86 0.986911141 ubox
6 94 0.052403956 ubox
6 96 0.007637017 ubox
6 97 0.003666127 ubox
7 29 0.107341229 ubox
7 57 0.016958483 ubox
7 59 0.034554620 ubox
7 67 0.007878313 ubox
7 68 0.062271956 ubox
7 85 0.987500421 ubox
7 93 0.052218537 ubox
7 95 0.008125889 ubox
8 35 0.003195098 ubox
8 66 0.005748635 ubox
8 75 0.007500455 ubox
8 84 0.987220979 ubox
9 27 0.129576063 ubox
9 67 0.073877961 ubox
9 74 0.007931734 ubox
9 83 0.986517467 ubox
10 26 0.134341991 ubox
10 66 0.080780822 ubox
10 73 0.007997535 ubox
10 82 0.985920676 ubox
11 20 0.018324263 ubox
11 24 0.003264347 ubox
11 25 0.135064540 ubox
11 26 0.004283941 ubox
11 65 0.081953421 ubox
11 72 0.007982195 ubox
11 80 0.005085890 ubox
11 81 0.983445046 ubox
11 82 0.037706150 ubox
12 17 0.006532372 ubox
12 18 0.003820699 ubox
12 19 0.018869949 ubox
12 20 0.090840968 ubox
12 23 0.004342780 ubox
12 24 0.135156190 ubox
12 25 0.007813842 ubox
12 64 0.082096114 ubox
12 65 0.003180705 ubox
12 66 0.048680330 ubox
12 80 0.975393038 ubox
12 81 0.082125164 ubox
13 17 0.013522155 ubox
13 18 0.016765433 ubox
13 19 0.110943636 ubox
13 23 0.135299413 ubox
13 24 0.010458433 ubox
13 25 0.005919804 ubox
13 63 0.084480147 ubox
13 64 0.004180746 ubox
13 65 0.184907031 ubox
13 72 0.008914428 ubox
13 78 0.011341615 ubox
13 79 0.927885120 ubox
13 80 0.109267471 ubox
14 18 0.096863163 ubox
14 62 0.077373915 ubox
14 64 0.184202858 ubox
14 78 0.863712255 ubox
14 79 0.129483779 ubox
15 78 0.123527738 ubox
15 79 0.014029405 ubox
16 62 0.298771435 ubox
16 78 0.018677083 ubox
17 29 0.053636799 ubox
17 56 0.003914568 ubox
17 59 0.317242401 ubox
17 61 0.313255398 ubox
17 68 0.006084431 ubox
18 28 0.051804047 ubox
18 30 0.061012117 ubox
18 55 0.003785096 ubox
18 58 0.319272213 ubox
18 60 0.321658227 ubox
18 67 0.005502043 ubox
18 69 0.278974160 ubox
19 29 0.065742237 ubox
19 57 0.315887768 ubox
19 59 0.321855608 ubox
19 68 0.285390914 ubox
20 36 0.028561772 ubox
20 56 0.313212869 ubox
20 67 0.285278373 ubox
21 35 0.026399509 ubox
21 66 0.263443954 ubox
22 62 0.221782324 ubox
22 78 0.003620641 ubox
23 57 0.179350714 ubox
23 61 0.223463286 ubox
23 68 0.073428280 ubox
24 56 0.172377713 ubox
24 57 0.833368686 ubox
24 67 0.072298036 ubox
24 68 0.210537107 ubox
25 41 0.003759858 ubox
25 56 0.837790032 ubox
25 57 0.173474520 ubox
25 59 0.116322356 ubox
25 61 0.014168296 ubox
25 67 0.209887336 ubox
25 68 0.058209286 ubox
26 32 0.029970417 ubox
26 36 0.018837826 ubox
26 40 0.003921900 ubox
26 50 0.059596318 ubox
26 55 0.815688991 ubox
26 56 0.173084178 ubox
26 58 0.115410759 ubox
26 60 0.014044030 ubox
26 67 0.055913825 ubox
26 74 0.005941343 ubox
26 76 0.013562233 ubox
27 31 0.027727066 ubox
27 35 0.020049741 ubox
27 48 0.024058743 ubox
27 49 0.061241438 ubox
27 66 0.047174434 ubox
27 73 0.005061515 ubox
27 75 0.013471720 ubox
27 79 0.007716071 ubox
28 47 0.025168117 ubox
28 48 0.059482255 ubox
28 49 0.018247273 ubox
28 64 0.122943206 ubox
28 66 0.124978336 ubox
28 73 0.024097899 ubox
28 78 0.010968804 ubox
29 46 0.024203378 ubox
29 47 0.056779268 ubox
29 48 0.021075839 ubox
29 49 0.005370092 ubox
29 53 0.905355209 ubox
29 63 0.122682342 ubox
29 65 0.138323986 ubox
29 72 0.025154896 ubox
29 78 0.003753917 ubox
29 79 0.004621343 ubox
29 80 0.004620175 ubox
30 47 0.021548292 ubox
30 48 0.004959821 ubox
30 52 0.905457413 ubox
30 62 0.121439291 ubox
30 64 0.108597744 ubox
30 75 0.099521266 ubox
30 78 0.005591216 ubox
30 79 0.004551451 ubox
31 45 0.014875721 ubox
31 50 0.441396460 ubox
31 51 0.805562849 ubox
31 61 0.107674103 ubox
31 74 0.101931461 ubox
31 76 0.010502043 ubox
31 77 0.006030655 ubox
32 44 0.014323539 ubox
32 48 0.025573966 ubox
32 49 0.578707067 ubox
32 73 0.098173678 ubox
32 75 0.010652611 ubox
33 47 0.023852457 ubox
33 48 0.581083384 ubox
33 49 0.622424493 ubox
34 47 0.554881881 ubox
34 48 0.609491582 ubox
34 52 0.006335849 ubox
34 75 0.012144177 ubox
35 50 0.005788103 ubox
35 51 0.007025084 ubox
35 54 0.018379298 ubox
35 67 0.004036582 ubox
35 71 0.046007122 ubox
35 74 0.012599189 ubox
36 46 0.955134884 ubox
36 53 0.019007351 ubox
36 66 0.011129409 ubox
36 70 0.049033897 ubox
36 73 0.012531660 ubox
37 45 0.956119336 ubox
37 67 0.178627651 ubox
38 44 0.910331971 ubox
38 49 0.025880153 ubox
38 66 0.180585566 ubox
39 48 0.027688998 ubox
40 47 0.028229359 ubox
40 64 0.251779348 ubox
40 66 0.008329065 ubox
41 46 0.028149058 ubox
41 48 0.003432274 ubox
41 53 0.004979430 ubox
41 63 0.281069499 ubox
41 65 0.008348999 ubox
42 52 0.004768901 ubox
42 62 0.281330031 ubox
42 64 0.007931541 ubox
43 56 0.004933177 ubox
43 59 0.058781110 ubox
43 61 0.281588748 ubox
44 55 0.004861230 ubox
44 58 0.059454017 ubox
44 60 0.280297893 ubox
45 62 0.009219619 ubox
46 56 0.061692415 ubox
46 57 0.104293590 ubox
46 59 0.259393756 ubox
46 61 0.010918727 ubox
47 55 0.061785388 ubox
47 56 0.104671974 ubox
47 57 0.020639031 ubox
47 58 0.260192706 ubox
47 59 0.011008299 ubox
47 60 0.017750530 ubox
48 54 0.057251831 ubox
48 55 0.101874674 ubox
48 56 0.023778254 ubox
48 57 0.259226031 ubox
48 58 0.013774608 ubox
48 59 0.018393685 ubox
48 60 0.004977185 ubox
49 54 0.090832243 ubox
49 55 0.024888383 ubox
49 56 0.233676410 ubox
49 57 0.014577608 ubox
49 58 0.018175061 ubox
49 59 0.005093749 ubox
52 58 0.018994311 ubox
52 60 0.048407676 ubox
52 68 0.008113847 ubox
52 69 0.023047644 ubox
52 86 0.005067222 ubox
53 57 0.020220673 ubox
53 59 0.051720815 ubox
53 67 0.012705257 ubox
53 68 0.025185537 ubox
53 85 0.005395933 ubox
54 66 0.012356324 ubox
54 79 0.003564423 ubox
54 84 0.005027753 ubox
55 64 0.022187359 ubox
55 66 0.030936787 ubox
55 73 0.008882040 ubox
55 78 0.004601244 ubox
55 82 0.031674894 ubox
56 63 0.023468747 ubox
56 64 0.025609216 ubox
56 65 0.032178436 ubox
56 66 0.099703926 ubox
56 72 0.009036275 ubox
56 73 0.023359250 ubox
56 81 0.032996418 ubox
57 62 0.017273968 ubox
57 63 0.031607198 ubox
57 64 0.022942476 ubox
57 65 0.119876749 ubox
57 72 0.024414535 ubox
57 80 0.033011322 ubox
58 62 0.027771244 ubox
58 64 0.123489349 ubox
58 66 0.122080875 ubox
58 73 0.594230056 ubox
58 79 0.031568056 ubox
59 63 0.121244414 ubox
59 65 0.133273580 ubox
59 72 0.610641337 ubox
59 78 0.027207886 ubox
59 80 0.010856198 ubox
60 64 0.116006483 ubox
60 66 0.026112815 ubox
60 73 0.116434871 ubox
60 78 0.004116932 ubox
60 79 0.011098711 ubox
61 65 0.027578100 ubox
61 70 0.829000011 ubox
61 72 0.118454655 ubox
61 75 0.006276496 ubox
61 78 0.010733429 ubox
61 90 0.010108206 ubox
62 68 0.019654797 ubox
62 69 0.831200126 ubox
62 71 0.115406591 ubox
62 74 0.005979469 ubox
62 77 0.010594856 ubox
62 88 0.012700168 ubox
62 89 0.007191417 ubox
62 96 0.012330678 ubox
63 67 0.038081704 ubox
63 68 0.829518316 ubox
63 87 0.015902301 ubox
63 95 0.016644562 ubox
64 86 0.015947654 ubox
64 88 0.003749630 ubox
64 94 0.016775219 ubox
64 96 0.004352118 ubox
65 85 0.015944552 ubox
65 87 0.004704758 ubox
65 93 0.016833033 ubox
65 95 0.005419002 ubox
66 74 0.153042560 ubox
66 76 0.045108534 ubox
66 83 0.004220827 ubox
66 86 0.004646639 ubox
66 91 0.015533456 ubox
66 94 0.005233812 ubox
67 73 0.168480570 ubox
67 75 0.047559046 ubox
67 79 0.004545236 ubox
67 80 0.024152298 ubox
67 81 0.049789454 ubox
67 82 0.003601327 ubox
67 90 0.015724550 ubox
68 72 0.167014238 ubox
68 78 0.004489418 ubox
68 79 0.031480699 ubox
68 80 0.051640386 ubox
68 81 0.003992289 ubox
69 78 0.032275722 ubox
69 79 0.048744629 ubox
69 84 0.004473925 ubox
70 83 0.004669648 ubox
70 85 0.023659527 ubox
71 82 0.004281573 ubox
71 84 0.023792893 ubox
72 83 0.023808027 ubox
72 87 0.003253682 ubox
72 95 0.003849363 ubox
72 98 0.007660435 ubox
73 85 0.004525135 ubox
73 94 0.003754862 ubox
73 97 0.006990628 ubox
74 84 0.005407188 ubox
75 83 0.005484762 ubox
76 82 0.005393305 ubox
78 89 0.004995996 ubox
78 95 0.026289324 ubox
78 96 0.005130610 ubox
78 97 0.113038415 ubox
78 98 0.006031068 ubox
79 88 0.005804645 ubox
79 94 0.038888659 ubox
79 95 0.003925740 ubox
79 96 0.130032647 ubox
79 97 0.007495384 ubox
80 87 0.005844912 ubox
80 93 0.039905249 ubox
80 95 0.131392539 ubox
81 95 0.029701784 ubox
82 91 0.045712006 ubox
82 93 0.131186092 ubox
82 94 0.026776284 ubox
83 90 0.047638010 ubox
83 92 0.146358989 ubox
84 89 0.047169564 ubox
84 91 0.146315547 ubox
85 90 0.145449729 ubox
5 87 0.9500000 lbox
6 86 0.9500000 lbox
7 85 0.9500000 lbox
8 84 0.9500000 lbox
9 83 0.9500000 lbox
10 82 0.9500000 lbox
11 81 0.9500000 lbox
12 80 0.9500000 lbox
13 79 0.9500000 lbox
14 78 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
63 68 0.9500000 lbox
showpage
end
%%EOF
