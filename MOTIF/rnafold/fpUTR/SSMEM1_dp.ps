%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SSMEM1)
} def

/sequence { (\
AUCUUUAUCCCUUUAAGCAUGGUUUAUUUUCUGAGCAAGGAGUCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.019281293 ubox
1 20 0.023835437 ubox
1 23 0.013850731 ubox
1 43 0.014036279 ubox
1 46 0.017671191 ubox
2 7 0.020220338 ubox
2 19 0.025243132 ubox
2 22 0.015335259 ubox
2 34 0.004483154 ubox
2 40 0.031186322 ubox
2 41 0.117957289 ubox
2 42 0.010031587 ubox
2 45 0.019329292 ubox
3 17 0.029112702 ubox
3 21 0.016882889 ubox
3 22 0.006593450 ubox
3 33 0.004787819 ubox
3 35 0.010704707 ubox
3 39 0.048938690 ubox
3 40 0.125979216 ubox
3 42 0.064366933 ubox
4 16 0.028170150 ubox
4 17 0.046005985 ubox
4 21 0.006410782 ubox
4 34 0.010786731 ubox
4 35 0.007332604 ubox
4 38 0.048958751 ubox
4 39 0.125526000 ubox
4 41 0.063825569 ubox
4 42 0.020132837 ubox
5 15 0.026093371 ubox
5 16 0.064111284 ubox
5 22 0.005039590 ubox
5 33 0.010535456 ubox
5 34 0.010771524 ubox
5 35 0.005176676 ubox
5 37 0.045798861 ubox
5 38 0.122933165 ubox
5 40 0.020563719 ubox
5 41 0.023035037 ubox
5 42 0.023323196 ubox
6 15 0.068643250 ubox
6 21 0.007656606 ubox
6 26 0.062243722 ubox
6 33 0.011475623 ubox
6 34 0.007272234 ubox
6 37 0.115757635 ubox
6 39 0.013711286 ubox
6 40 0.007075610 ubox
6 41 0.027370908 ubox
7 14 0.069031541 ubox
7 20 0.008065687 ubox
7 23 0.010427461 ubox
7 25 0.065951837 ubox
7 27 0.007897487 ubox
7 32 0.011082113 ubox
7 43 0.280097960 ubox
7 46 0.095766922 ubox
8 19 0.007703278 ubox
8 22 0.010185935 ubox
8 26 0.008336168 ubox
8 34 0.109340850 ubox
8 41 0.197374153 ubox
8 42 0.288256152 ubox
8 45 0.102212048 ubox
9 21 0.010944510 ubox
9 22 0.021942808 ubox
9 33 0.109488386 ubox
9 39 0.003949608 ubox
9 40 0.184873503 ubox
10 21 0.022030636 ubox
10 22 0.101008191 ubox
10 39 0.153820031 ubox
10 40 0.842116895 ubox
11 17 0.017715938 ubox
11 21 0.101839801 ubox
11 22 0.022786416 ubox
11 35 0.041191533 ubox
11 39 0.850204260 ubox
11 40 0.138561615 ubox
11 42 0.409128300 ubox
12 16 0.016313320 ubox
12 21 0.023189162 ubox
12 34 0.041179949 ubox
12 35 0.015306986 ubox
12 38 0.851300435 ubox
12 39 0.139006071 ubox
12 40 0.010691042 ubox
12 41 0.411734334 ubox
12 42 0.017388907 ubox
13 21 0.004334288 ubox
13 22 0.004791633 ubox
13 33 0.040541554 ubox
13 34 0.017639584 ubox
13 35 0.006993899 ubox
13 37 0.822343727 ubox
13 38 0.156342872 ubox
13 39 0.014782892 ubox
13 40 0.410550446 ubox
13 41 0.021822284 ubox
13 42 0.004367917 ubox
14 21 0.011713032 ubox
14 26 0.157536137 ubox
14 33 0.018029272 ubox
14 34 0.008932533 ubox
14 37 0.145903344 ubox
14 38 0.024208231 ubox
14 39 0.396538472 ubox
14 40 0.022165159 ubox
14 41 0.005513984 ubox
15 20 0.011332643 ubox
15 24 0.006962399 ubox
15 25 0.161992077 ubox
15 28 0.007593914 ubox
15 29 0.006089096 ubox
15 30 0.009381193 ubox
15 32 0.016001702 ubox
16 23 0.007522423 ubox
16 24 0.162609094 ubox
16 25 0.004779220 ubox
16 27 0.007667658 ubox
16 28 0.006234624 ubox
16 29 0.009797277 ubox
16 30 0.011319028 ubox
16 32 0.028412032 ubox
17 23 0.162772094 ubox
17 24 0.004374642 ubox
17 27 0.004977762 ubox
17 28 0.009110002 ubox
17 29 0.011228474 ubox
17 31 0.028979437 ubox
17 36 0.948070035 ubox
17 43 0.016222433 ubox
18 22 0.161881419 ubox
18 33 0.127641893 ubox
18 35 0.948480609 ubox
18 42 0.016887949 ubox
19 27 0.024863415 ubox
19 32 0.123913498 ubox
19 46 0.049059197 ubox
20 26 0.025449602 ubox
20 33 0.869414726 ubox
20 37 0.063964298 ubox
20 45 0.053020448 ubox
21 25 0.021289762 ubox
21 28 0.014576198 ubox
21 29 0.029794681 ubox
21 30 0.064690356 ubox
21 31 0.131897015 ubox
21 32 0.934841041 ubox
21 36 0.071070925 ubox
21 44 0.054301205 ubox
21 47 0.023627906 ubox
22 27 0.010796679 ubox
22 28 0.030091155 ubox
22 29 0.065447186 ubox
22 30 0.125818501 ubox
22 31 0.939808071 ubox
22 36 0.155108208 ubox
22 43 0.052012921 ubox
22 46 0.024839639 ubox
23 34 0.071562683 ubox
23 35 0.155937962 ubox
23 41 0.005309552 ubox
23 42 0.020991732 ubox
23 45 0.024287405 ubox
24 33 0.071380883 ubox
24 34 0.156819082 ubox
24 40 0.005168762 ubox
24 41 0.019310448 ubox
25 33 0.156525774 ubox
25 34 0.003800751 ubox
25 39 0.004297294 ubox
25 40 0.016873213 ubox
26 32 0.147965144 ubox
26 43 0.024500889 ubox
26 46 0.013276197 ubox
27 34 0.011400482 ubox
27 35 0.004896993 ubox
27 38 0.011577434 ubox
27 39 0.004826140 ubox
27 40 0.003722040 ubox
27 41 0.004591321 ubox
27 42 0.023927327 ubox
27 45 0.014590869 ubox
28 33 0.011623520 ubox
28 34 0.006669195 ubox
28 35 0.003266174 ubox
28 37 0.011492300 ubox
28 38 0.006103363 ubox
28 39 0.006083623 ubox
28 40 0.004471802 ubox
28 41 0.020837244 ubox
28 42 0.108362738 ubox
29 33 0.006147507 ubox
29 34 0.003469118 ubox
29 35 0.003508659 ubox
29 37 0.005812718 ubox
29 38 0.006938825 ubox
29 39 0.004054954 ubox
29 40 0.016241668 ubox
29 41 0.137065495 ubox
29 42 0.059325222 ubox
30 37 0.006479196 ubox
30 38 0.003772462 ubox
30 39 0.009484642 ubox
30 40 0.140741737 ubox
30 41 0.076133293 ubox
31 39 0.143133473 ubox
31 40 0.077653799 ubox
31 42 0.012021464 ubox
32 38 0.142601965 ubox
32 39 0.076289569 ubox
32 41 0.012140646 ubox
32 45 0.045788384 ubox
33 44 0.050948642 ubox
33 47 0.003922687 ubox
34 43 0.049901769 ubox
34 46 0.003889184 ubox
35 43 0.013959469 ubox
36 42 0.020939480 ubox
39 47 0.005433683 ubox
40 46 0.004112389 ubox
40 47 0.027963013 ubox
41 46 0.038297001 ubox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
showpage
end
%%EOF
