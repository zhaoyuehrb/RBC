%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAGCGAAGGCAUCGCGAGCCAGGGGGCGCGGAGAAGGCGGGGAAUCAUGGCCGCCCCCAGUGUUCCGCGUCCGGGGGUUUGUGGGAGUUGCCUUGACCUGCAGCUCCGCCACCGCGGACCCGCCUUCUGCCCUCAGCAGCAGACGCUCUGUCCCGCCCGGGCAGCUCUGCGAGGCAGCGGCUGGAGAGGGAACC\
) } def
/len { sequence length } bind def

/coor [
[214.97323608 180.24909973]
[201.31707764 186.45469666]
[187.22177124 181.32418823]
[180.74983215 167.79222107]
[185.60324097 153.59910583]
[199.00523376 146.86337280]
[185.16992188 141.06820679]
[171.33460999 135.27302551]
[157.69154358 141.13838196]
[143.57801819 135.45834351]
[137.51838684 121.10847473]
[123.68307495 115.31330109]
[109.84776306 109.51812744]
[102.51679230 116.00572205]
[91.18702698 116.50332642]
[80.74993134 108.91855621]
[65.76692200 108.20482635]
[50.78391266 107.49109650]
[35.80090332 106.77736664]
[20.81789207 106.06363678]
[5.83488178 105.34990692]
[-9.14812851 104.63617706]
[-24.13113785 103.92245483]
[-33.87076950 115.85751343]
[-48.59845352 119.72387695]
[-62.61300659 114.24151611]
[-70.61621094 101.70809174]
[-85.59922791 100.99436188]
[-100.58223724 100.28063965]
[-115.56524658 99.56690979]
[-130.54824829 98.85317993]
[-145.53126526 98.13945007]
[-160.51428223 97.42572021]
[-175.49728394 96.71199036]
[-190.48030090 95.99826813]
[-205.46330261 95.28453827]
[-220.43785095 111.13196564]
[-241.95420837 110.76435852]
[-256.00323486 94.83998871]
[-270.99569702 95.31591034]
[-285.98812866 95.79182434]
[-300.98059082 96.26774597]
[-315.97302246 96.74366760]
[-323.15576172 110.31951904]
[-336.17266846 118.47159576]
[-351.52221680 119.00701904]
[-365.07550049 111.78176117]
[-373.18670654 98.73938751]
[-373.67404175 83.38822937]
[-366.40631104 69.85766602]
[-353.33859253 61.78735733]
[-337.98599243 61.34817123]
[-324.47827148 68.65824890]
[-316.44894409 81.75122070]
[-301.45651245 81.27529907]
[-286.46405029 80.79937744]
[-271.47161865 80.32346344]
[-256.47915649 79.84754181]
[-253.03477478 71.92060852]
[-247.16938782 65.51351929]
[-239.50038147 61.34255981]
[-230.84870911 59.88642883]
[-222.15110779 61.33145523]
[-214.35861206 65.54831696]
[-208.33259583 72.10303497]
[-204.74957275 80.30152893]
[-189.76657104 81.01525116]
[-174.78355408 81.72898102]
[-159.80055237 82.44271088]
[-144.81753540 83.15644073]
[-129.83453369 83.87017059]
[-114.85151672 84.58390045]
[-99.86850739 85.29763031]
[-84.88549805 86.01135254]
[-69.90248871 86.72508240]
[-60.74414062 75.00917053]
[-46.27191162 70.88380432]
[-31.97843742 76.13260651]
[-23.41740990 88.93943787]
[-8.43439960 89.65316772]
[6.54861069 90.36689758]
[21.53162003 91.08062744]
[36.51462936 91.79435730]
[51.49764252 92.50808716]
[66.48065186 93.22181702]
[81.46366119 93.93553925]
[92.23721313 83.49855804]
[91.99922180 68.50045013]
[91.76123047 53.50233459]
[91.52324677 38.50422287]
[91.28525543 23.50611305]
[91.04726410 8.50800037]
[90.80927277 -6.49011183]
[90.57128906 -21.48822403]
[77.79763794 -30.29808426]
[72.67362213 -44.94472122]
[77.16950989 -59.79620743]
[89.55654907 -69.14183807]
[105.07167053 -69.38803101]
[117.74899292 -60.44012070]
[122.71382904 -45.73875809]
[118.05709076 -30.93692017]
[105.56939697 -21.72621346]
[105.80738831 -6.72810125]
[106.04537964 8.27001095]
[106.28336334 23.26812363]
[106.52135468 38.26623535]
[106.75934601 53.26434708]
[106.99733734 68.26245880]
[107.23532104 83.26056671]
[115.64293671 95.68280792]
[129.47825623 101.47798920]
[143.31356812 107.27316284]
[157.79130554 101.52575684]
[171.73973083 107.59997559]
[177.12979126 121.43771362]
[190.96510315 127.23288727]
[204.80041504 133.02806091]
[218.89579773 138.15837097]
[233.21934509 142.61216736]
[251.07618713 138.13635254]
[262.47760010 151.47108459]
[276.86999512 155.69708252]
[291.26239014 159.92306519]
[302.94305420 154.43624878]
[314.84823608 158.26002502]
[320.75689697 168.82299805]
[335.08044434 173.27680969]
[349.40396118 177.73062134]
[363.72750854 182.18441772]
[379.20266724 178.89360046]
[389.05862427 190.06095886]
[403.38214111 194.51477051]
[417.70568848 198.96856689]
[432.06408691 203.30860901]
[446.45648193 207.53459167]
[452.97784424 206.34638977]
[458.31481934 208.33801270]
[461.23452759 212.12973022]
[475.48559570 216.81022644]
[495.00085449 211.78665161]
[507.27221680 226.72192383]
[521.66461182 230.94790649]
[536.05700684 235.17390442]
[550.44940186 239.39988708]
[564.84179688 243.62586975]
[573.96844482 243.04138184]
[579.42803955 248.03477478]
[593.75158691 252.48857117]
[608.07507324 256.94238281]
[614.61450195 255.85778809]
[619.91918945 257.93383789]
[622.77838135 261.77139282]
[636.95336914 266.67742920]
[651.12841797 271.58343506]
[665.30340576 276.48947144]
[680.30413818 270.80108643]
[694.03027344 279.10610962]
[695.95227051 295.03363037]
[684.59570312 306.36538696]
[668.67242432 304.40866089]
[660.39739990 290.66448975]
[646.22235107 285.75845337]
[632.04736328 280.85244751]
[617.87237549 275.94641113]
[603.62127686 271.26593018]
[589.29772949 266.81210327]
[574.97424316 262.35830688]
[560.61578369 258.01828003]
[546.22338867 253.79228210]
[531.83099365 249.56629944]
[517.43859863 245.34030151]
[503.04623413 241.11431885]
[494.54284668 246.80400085]
[484.09204102 246.86961365]
[475.14950562 241.04766846]
[470.80511475 231.06129456]
[456.55404663 226.38079834]
[442.23049927 221.92698669]
[427.83810425 217.70100403]
[420.52670288 218.83418274]
[413.25186157 213.29209900]
[398.92834473 208.83830261]
[384.60479736 204.38449097]
[370.15414429 207.99386597]
[359.27368164 196.50794983]
[344.95016479 192.05415344]
[330.62661743 187.60034180]
[316.30310059 183.14653015]
[299.42422485 187.93315125]
[287.03640747 174.31546021]
[272.64401245 170.08947754]
[258.25161743 165.86347961]
[247.48121643 171.38496399]
[235.45124817 167.97401428]
[228.76553345 156.93569946]
[214.44200134 152.48190308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 118]
[7 117]
[8 116]
[11 113]
[12 112]
[13 111]
[16 86]
[17 85]
[18 84]
[19 83]
[20 82]
[21 81]
[22 80]
[23 79]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[36 66]
[39 58]
[40 57]
[41 56]
[42 55]
[43 54]
[87 110]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[119 197]
[120 196]
[122 193]
[123 192]
[124 191]
[127 189]
[128 188]
[129 187]
[130 186]
[132 184]
[133 183]
[134 182]
[135 180]
[136 179]
[139 178]
[140 177]
[142 173]
[143 172]
[144 171]
[145 170]
[146 169]
[148 168]
[149 167]
[150 166]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
