%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGCUGGGAGGGUGGCAUGCUCCAACUCCACAGGGACAGAAGCUCCUACUCUAGAGACCCUUCUGGACCUCGCUGUAGGUACUUCUUCAUCUGGCUGCUCAUCUGUAUCCUUUAUAAUAAAGAAGGAAUAGUAAAACAGAAAGCAAAGAUGCUUUUUACUUUGCUGGG\
) } def
/len { sequence length } bind def

/coor [
[62.47224045 91.90404510]
[71.56342316 71.15700531]
[61.30325317 82.09908295]
[51.04308701 93.04115295]
[47.24775314 108.40038300]
[32.89801788 112.39216614]
[22.63784790 123.33423615]
[12.37767982 134.27630615]
[2.21845579 145.31216431]
[-7.83896589 156.44088745]
[-17.89638710 167.56959534]
[-27.95380974 178.69831848]
[-28.08843994 191.62065125]
[-36.72625732 200.68601990]
[-48.82582092 201.39620972]
[-59.08598709 212.33828735]
[-69.34615326 223.28034973]
[-68.58768463 239.06643677]
[-79.27550507 250.70886230]
[-95.06871796 251.30038452]
[-106.59749603 240.49008179]
[-107.02201843 224.69149780]
[-96.09042358 213.27764893]
[-80.28823090 213.02018738]
[-70.02806091 202.07810974]
[-59.76789093 191.13604736]
[-56.72021866 173.87017822]
[-39.08252335 168.64088440]
[-29.02510071 157.51217651]
[-18.96767998 146.38346863]
[-8.91025829 135.25474548]
[-6.75011158 128.15681458]
[1.43560719 124.01614380]
[11.69577503 113.07407379]
[21.95594406 102.13199615]
[25.01740074 87.55541992]
[40.10101318 82.78098297]
[50.36118317 71.83891296]
[60.62134933 60.89683914]
[60.34578705 45.89937210]
[49.69058228 35.34159851]
[39.03537750 24.78382301]
[28.38017082 14.22604847]
[17.72496414 3.66827416]
[2.14843416 3.57111979]
[-8.50706005 -7.28775215]
[-8.31844521 -22.13699532]
[-18.97364998 -32.69477081]
[-29.62885666 -43.25254440]
[-40.28406143 -53.81031799]
[-50.93926620 -64.36809540]
[-64.36224365 -61.14194489]
[-77.51940155 -64.94895935]
[-86.99450684 -74.68904877]
[-90.38275909 -87.73639679]
[-86.90048218 -100.64675903]
[-97.35993195 -111.39849854]
[-107.81938171 -122.15023804]
[-123.39150238 -122.53353119]
[-133.84571838 -133.58631897]
[-133.38433838 -148.42959595]
[-143.84378052 -159.18132019]
[-159.76280212 -163.12049866]
[-164.05030823 -178.94924927]
[-152.29568481 -190.38432312]
[-136.59107971 -185.66229248]
[-133.09205627 -169.64077759]
[-122.63259888 -158.88903809]
[-107.78224945 -158.94123840]
[-97.02171326 -148.18644714]
[-97.06764984 -132.60968018]
[-86.60819244 -121.85794830]
[-76.14874268 -111.10620880]
[-60.00325012 -113.97479248]
[-45.17473984 -106.59297180]
[-37.58036041 -91.68569946]
[-40.38149261 -75.02330017]
[-29.72628784 -64.46552277]
[-19.07108116 -53.90774918]
[-8.41587639 -43.34997559]
[2.23932910 -32.79220200]
[17.08621216 -33.11721039]
[28.04250526 -22.56191254]
[28.28273964 -6.98693132]
[38.93794632 3.57084298]
[49.59315109 14.12861729]
[60.24835587 24.68639183]
[70.90356445 35.24416733]
[78.38806152 34.76223755]
[74.09890747 20.38854027]
[65.78957367 7.90034389]
[69.50534058 -6.63214016]
[82.78913116 -13.59926033]
[96.85700989 -8.39398479]
[102.40653229 5.54168129]
[95.76738739 18.99329758]
[93.35706329 33.79837799]
[100.84156036 33.31644821]
[110.05475616 21.47933960]
[119.26794434 9.64223099]
[117.06460571 -6.00771618]
[126.63939667 -18.58145332]
[142.31176758 -20.61920738]
[154.78356934 -10.91201115]
[156.65551758 4.78102446]
[146.81700134 17.14950180]
[131.10505676 18.85542107]
[121.89186096 30.69252968]
[112.67867279 42.52963638]
[121.33866119 54.77727127]
[135.57005310 50.03730774]
[149.80145264 45.29734039]
[164.03285217 40.55737686]
[178.26425171 35.81741333]
[192.49565125 31.07744598]
[197.05357361 16.24487877]
[209.47955322 6.95108700]
[224.99555969 6.76972675]
[237.63539124 15.77053356]
[242.53874207 30.49251366]
[237.82020569 45.27476501]
[225.29412842 54.43320847]
[209.77705383 54.44623947]
[197.23562622 45.30884552]
[183.00422668 50.04881287]
[168.77282715 54.78877640]
[154.54142761 59.52873993]
[140.31002808 64.26870728]
[126.07862854 69.00867462]
[134.70339966 93.97756195]
[125.86886597 115.07409668]
[136.52406311 125.63187408]
[147.17927551 136.18965149]
[157.83447266 146.74742126]
[168.48968506 157.30519104]
[179.14489746 167.86297607]
[189.80009460 178.42074585]
[205.37663269 178.51789856]
[216.03211975 189.37677002]
[215.84350586 204.22601318]
[226.49871826 214.78378296]
[237.15391541 225.34155273]
[247.80912781 235.89933777]
[258.46432495 246.45710754]
[269.11953735 257.01489258]
[279.77474976 267.57266235]
[290.42993164 278.13043213]
[306.41864014 281.77648926]
[310.99621582 297.52380371]
[299.45364380 309.17288208]
[283.66494751 304.74017334]
[279.87216187 288.78564453]
[269.21694946 278.22787476]
[258.56176758 267.67007446]
[247.90655518 257.11230469]
[237.25134277 246.55453491]
[226.59614563 235.99676514]
[215.94093323 225.43899536]
[205.28573608 214.88121033]
[190.43884277 215.20622253]
[179.48255920 204.65092468]
[179.24232483 189.07594299]
[168.58711243 178.51817322]
[157.93191528 167.96040344]
[147.27670288 157.40261841]
[136.62150574 146.84484863]
[125.96629333 136.28707886]
[115.31108856 125.72930145]
[98.61508179 132.02313232]
[80.05857086 127.74234009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[6 35]
[7 34]
[8 33]
[9 31]
[10 30]
[11 29]
[12 28]
[15 26]
[16 25]
[17 24]
[40 88]
[41 87]
[42 86]
[43 85]
[44 84]
[47 81]
[48 80]
[49 79]
[50 78]
[51 77]
[56 73]
[57 72]
[58 71]
[61 68]
[62 67]
[98 109]
[99 108]
[100 107]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[131 168]
[132 167]
[133 166]
[134 165]
[135 164]
[136 163]
[137 162]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
