%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUCGCGGCGCCAUUUGCUGCCGCCGAGCGUGGACGCAGGCGGAUCUCUGAAGAGCUGGGUCGCCAGCCUCUCCCGCGCACGUUGCCUGGCCUCCAGCACCUACUUGGUCCCGCGCGCUCCCUCGUGUCGCCCCUCGGAGCAGCAGCCGCCGCGGUCGCCGCUACCCGGAAAGAAGUCAGAGACGCCGCGAGGUCGCCGCCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[400.45922852 486.74780273]
[394.87924194 483.13827515]
[390.65557861 477.94082642]
[388.22653198 471.64437866]
[387.85971069 464.85397339]
[389.62280273 458.23284912]
[379.05612183 447.58648682]
[368.48944092 436.94009399]
[357.92279053 426.29370117]
[347.35610962 415.64730835]
[346.20648193 430.60321045]
[334.90924072 440.47094727]
[319.93460083 439.59909058]
[309.85885620 428.48696899]
[310.45263672 413.49871826]
[321.37585449 403.21847534]
[336.37167358 403.53356934]
[326.80685425 391.97875977]
[317.24200439 380.42395020]
[307.67718506 368.86911011]
[298.11233521 357.31430054]
[288.54751587 345.75946045]
[276.53683472 344.31250000]
[268.47372437 334.76290894]
[269.09802246 321.87884521]
[259.70794678 310.18154907]
[250.31787109 298.48428345]
[240.92781067 286.78698730]
[231.53773499 275.08969116]
[216.83758545 277.49200439]
[202.81541443 272.17837524]
[193.27256775 260.48220825]
[190.84948730 245.48135376]
[196.29577637 231.18852234]
[186.90570068 219.49124146]
[177.51564026 207.79394531]
[168.12556458 196.09666443]
[158.73548889 184.39936829]
[144.73446655 179.31799316]
[142.12918091 163.71276855]
[132.73910522 152.01547241]
[126.09944916 148.76678467]
[123.29739380 140.07106018]
[114.08419800 128.23396301]
[104.87100983 116.39685059]
[106.64527893 131.29154968]
[98.93082428 144.15573120]
[84.95601654 149.60594177]
[70.56909180 145.36137390]
[61.79074478 133.19828796]
[62.29456711 118.20674896]
[71.86972046 106.66047668]
[86.51041412 103.39152527]
[72.28694916 98.62779999]
[58.06348419 93.86407471]
[43.84002304 89.10034943]
[29.58115768 84.44364929]
[15.28769779 79.89425659]
[0.99423850 75.34485626]
[-13.29922104 70.79546356]
[-29.19481659 74.82808685]
[-40.43954849 62.89125443]
[-35.46580124 47.26454926]
[-19.39013863 44.02339172]
[-8.74982452 56.50200272]
[5.54363489 61.05139923]
[19.83709526 65.60079956]
[34.13055420 70.15019226]
[41.45886612 69.18324280]
[48.60374832 74.87688446]
[62.82721329 79.64060974]
[77.05067444 84.40433502]
[91.27413940 89.16806793]
[96.90518951 84.21414948]
[93.95549774 69.50703430]
[108.16728210 74.30631256]
[113.79833221 69.35240173]
[110.88580322 54.63787842]
[107.97326660 39.92335510]
[105.06073761 25.20883179]
[94.79113007 13.17364597]
[99.90993500 -0.81374472]
[96.99739838 -15.52826691]
[81.44234467 -20.68366814]
[71.83715820 -36.10109329]
[74.49566650 -55.86894608]
[69.20092010 -69.90338898]
[63.24286652 -76.82932281]
[63.93381119 -84.18878937]
[58.85062027 -98.30123138]
[53.76743317 -112.41368103]
[42.71129990 -125.26663208]
[52.00130844 -139.44873047]
[68.20089722 -134.44778442]
[67.87987518 -117.49687195]
[72.96306610 -103.38442230]
[78.04625702 -89.27198029]
[83.23537445 -75.19813538]
[88.53011322 -61.16368484]
[103.30655670 -63.74373245]
[103.53202057 -78.74203491]
[103.75748444 -93.74034119]
[93.66198730 -106.20872498]
[97.25628662 -121.84395599]
[111.78314972 -128.65203857]
[126.09880066 -121.41037750]
[129.22151184 -105.67416382]
[118.75579071 -93.51487732]
[118.53032684 -78.51657104]
[118.30486298 -63.51826859]
[127.38874817 -46.23151779]
[123.98973846 -28.77350807]
[111.71192169 -18.44079971]
[114.62445831 -3.72627687]
[124.68573761 7.25642872]
[119.77526093 22.29630089]
[122.68778992 37.01082230]
[125.60032654 51.72534561]
[128.51284790 66.43986511]
[116.70811462 107.18366241]
[125.92131042 119.02076721]
[135.13449097 130.85787964]
[144.43638611 142.62541199]
[153.82646179 154.32269287]
[168.49913025 160.24073792]
[170.43276978 175.00930786]
[179.82284546 186.70658875]
[189.21292114 198.40386963]
[198.60299683 210.10116577]
[207.99307251 221.79844666]
[223.12544250 219.57162476]
[237.24742126 225.18110657]
[246.60337830 237.02731323]
[248.75920105 251.86672974]
[243.23501587 265.69961548]
[252.62509155 277.39691162]
[262.01516724 289.09420776]
[271.40524292 300.79147339]
[280.79531860 312.48876953]
[298.10794067 318.76000977]
[300.10232544 336.19464111]
[309.66717529 347.74945068]
[319.23199463 359.30429077]
[328.79684448 370.85910034]
[338.36166382 382.41394043]
[347.92651367 393.96875000]
[358.00250244 405.08065796]
[368.56918335 415.72702026]
[379.13583374 426.37341309]
[389.70251465 437.01980591]
[400.26916504 447.66619873]
[423.76416016 451.76086426]
[429.07144165 474.26687622]
[440.55404663 483.91827393]
[452.03665161 493.56967163]
[463.51925659 503.22109985]
[475.00189209 512.87249756]
[490.54440308 515.82891846]
[495.30883789 529.94097900]
[506.79144287 539.59240723]
[522.33398438 542.54882812]
[527.09838867 556.66082764]
[538.58099365 566.31225586]
[554.12353516 569.26867676]
[558.88793945 583.38073730]
[570.37060547 593.03216553]
[581.85321045 602.68353271]
[593.40802002 612.24841309]
[605.03442383 621.72613525]
[615.63153076 616.05065918]
[627.48767090 614.28662109]
[639.21014404 616.61773682]
[649.43005371 622.74780273]
[656.96191406 631.93872070]
[660.94128418 643.09863281]
[660.92388916 654.91223145]
[656.93511963 665.99523926]
[668.12243652 675.98742676]
[679.30975342 685.97961426]
[695.15063477 692.02130127]
[693.73028564 708.91564941]
[677.10296631 712.22760010]
[669.31756592 697.16693115]
[658.13024902 687.17474365]
[646.94293213 677.18255615]
[630.01202393 683.63647461]
[612.06439209 680.58953857]
[598.08190918 668.79986572]
[591.99017334 651.46441650]
[595.55670166 633.35247803]
[583.93029785 623.87475586]
[576.75848389 622.08471680]
[572.20178223 614.16613770]
[560.71917725 604.51477051]
[549.23657227 594.86334229]
[534.51538086 592.59722900]
[528.92962646 577.79486084]
[517.44702148 568.14349365]
[502.72579956 565.87738037]
[497.14004517 551.07501221]
[485.65744019 541.42358398]
[470.93621826 539.15747070]
[465.35046387 524.35510254]
[453.86785889 514.70367432]
[442.38525391 505.05230713]
[430.90264893 495.40087891]
[419.42004395 485.74948120]
[413.36477661 488.08773804]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[17 146]
[18 145]
[19 144]
[20 143]
[21 142]
[22 141]
[25 139]
[26 138]
[27 137]
[28 136]
[29 135]
[34 130]
[35 129]
[36 128]
[37 127]
[38 126]
[40 124]
[41 123]
[43 122]
[44 121]
[45 120]
[53 73]
[54 72]
[55 71]
[56 70]
[57 68]
[58 67]
[59 66]
[60 65]
[77 119]
[78 118]
[79 117]
[80 116]
[82 114]
[83 113]
[86 99]
[87 98]
[89 97]
[90 96]
[91 95]
[100 110]
[101 109]
[102 108]
[153 207]
[154 206]
[155 205]
[156 204]
[157 203]
[159 201]
[160 200]
[162 198]
[163 197]
[165 195]
[166 194]
[167 193]
[168 191]
[169 190]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
