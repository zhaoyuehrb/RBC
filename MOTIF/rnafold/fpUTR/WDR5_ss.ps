%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCUGGCGCCCGCCCGAGCUGCCGCCUUGUCGAGCUGAGUCCGCGCUCCCGCCCAGGCGGCGGCCGACGCGACGCCCCGAGCGCCCGGCCCCGCCGCCGCGGCCCGGCAGACUGCCUCUGUCACCGGGUCCCUCCACCCUUGUCUCCUGUGCGGCCAGCGUCAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[95.56538391 285.16790771]
[81.40871429 277.62017822]
[78.62500763 261.82046509]
[89.34969330 249.88897705]
[89.89752960 234.89898682]
[90.30844116 219.90461731]
[90.58239746 204.90711975]
[90.85636139 189.90962219]
[91.13031769 174.91212463]
[91.40428162 159.91462708]
[91.67824554 144.91712952]
[91.95220184 129.91963196]
[77.49971771 121.29996490]
[69.68451691 106.39708710]
[54.69452667 105.84925842]
[39.70453262 105.30142212]
[23.65876770 114.30070496]
[9.15599060 104.44751740]
[-5.84150743 104.17355347]
[-14.51585293 107.15431976]
[-21.10974693 103.75514221]
[-36.09973907 103.20730591]
[-51.08973312 102.65947723]
[-66.07972717 102.11164856]
[-81.06971741 101.56381989]
[-96.05970764 101.01599121]
[-111.04970551 100.46815491]
[-126.03969574 99.92032623]
[-141.02969360 99.37249756]
[-156.01968384 98.82466888]
[-172.06544495 107.82395172]
[-186.56822205 97.97075653]
[-201.56571960 97.69680023]
[-217.44444275 106.98764038]
[-232.12477112 97.40097809]
[-247.12477112 97.40097809]
[-262.12475586 97.40097809]
[-277.12475586 97.40097809]
[-292.12414551 97.53796387]
[-307.12164307 97.81192017]
[-320.88488770 106.72848511]
[-335.36337280 99.02750397]
[-335.66290283 82.63109589]
[-321.47531128 74.40647125]
[-307.39559937 82.81442261]
[-292.39810181 82.54046631]
[-285.74322510 79.26228333]
[-277.12475586 82.40097809]
[-262.12475586 82.40097809]
[-247.12477112 82.40097809]
[-232.12477112 82.40097809]
[-223.33114624 74.06081390]
[-210.81059265 73.95989990]
[-201.29176331 82.69930267]
[-186.29426575 82.97325897]
[-177.34977722 74.79510498]
[-164.82948303 74.92288208]
[-155.47184753 83.83467102]
[-140.48185730 84.38250732]
[-125.49186707 84.93033600]
[-110.50187683 85.47816467]
[-95.51187897 86.02599335]
[-80.52188873 86.57382202]
[-65.53189850 87.12165833]
[-50.54190445 87.66948700]
[-35.55191040 88.21731567]
[-20.56191635 88.76514435]
[-5.56754637 89.17605591]
[9.42995167 89.45001984]
[18.37443352 81.27185822]
[30.89473724 81.39963531]
[40.25236130 90.31143188]
[55.24235535 90.85926056]
[70.23234558 91.40708923]
[69.43931580 74.55171204]
[78.31034088 56.55886078]
[75.58579254 41.80837631]
[72.86123657 27.05788994]
[60.51359940 16.81506920]
[60.96718216 0.77842867]
[73.87403870 -8.75009155]
[89.33312988 -4.46102667]
[95.48556519 10.35541916]
[87.61172485 24.33333778]
[90.33627319 39.08382416]
[93.06082916 53.83430862]
[100.54956818 54.24506760]
[108.74951172 41.68477249]
[115.52706146 55.06658173]
[123.01580048 55.47734070]
[127.33728790 41.11333466]
[131.65876770 26.74932480]
[130.43203735 9.83981609]
[146.34112549 3.98000145]
[156.37600708 17.64519310]
[146.02278137 31.07081032]
[141.70129395 45.43481827]
[137.37980652 59.79882812]
[146.43861389 71.75450134]
[161.43611145 71.48054504]
[176.43360901 71.20658112]
[191.43110657 70.93261719]
[206.42860413 70.65866089]
[221.12686157 67.66516113]
[235.03689575 62.05170441]
[248.94694519 56.43825150]
[262.85696411 50.82479858]
[276.76702881 45.21134567]
[290.67706299 39.59788895]
[304.58709717 33.98443604]
[310.35583496 22.42127800]
[322.08630371 18.04280853]
[333.27905273 22.69129562]
[347.28927612 17.33283234]
[361.29953003 11.97436810]
[366.23727417 -2.86317134]
[379.58422852 -11.01137924]
[395.03833008 -8.62292194]
[405.30264282 3.17444587]
[405.53067017 18.81036568]
[395.61474609 30.90203667]
[380.23684692 33.74013901]
[366.65798950 25.98460960]
[352.64773560 31.34307289]
[338.63751221 36.70153809]
[328.35049438 50.89990234]
[310.20053101 47.89447403]
[296.29049683 53.50792694]
[282.38046265 59.12137985]
[268.47042847 64.73483276]
[254.56039429 70.34828949]
[240.65036011 75.96173859]
[226.74032593 81.57519531]
[241.61068726 83.54298401]
[255.35266113 89.55613708]
[266.88900757 99.14326477]
[275.31530762 111.55282593]
[279.97106934 125.81198883]
[280.49130249 140.80296326]
[276.83520508 155.35057068]
[269.28939819 168.31440735]
[258.44540405 178.67817688]
[245.15332031 185.62947083]
[230.45513916 188.62336731]
[215.50306702 187.42514038]
[201.46923828 182.12873840]
[189.45381165 173.14935303]
[180.39866638 161.19090271]
[175.01368713 147.19084167]
[173.72099304 132.24664307]
[176.62191772 117.52983093]
[183.48907471 104.19408417]
[193.78411865 93.28481293]
[206.70256042 85.65615845]
[191.70506287 85.93011475]
[176.70756531 86.20407867]
[161.71006775 86.47804260]
[146.71257019 86.75199890]
[141.21879578 111.13983154]
[125.55409241 126.53674316]
[106.94969940 130.19358826]
[106.67574310 145.19108582]
[106.40177917 160.18858337]
[106.12782288 175.18608093]
[105.85385895 190.18357849]
[105.57989502 205.18107605]
[105.30593872 220.17857361]
[108.28669739 228.85292053]
[104.88751984 235.44682312]
[104.33969116 250.43681335]
[114.16481781 263.11932373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[14 74]
[15 73]
[16 72]
[18 69]
[19 68]
[21 67]
[22 66]
[23 65]
[24 64]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[32 55]
[33 54]
[35 51]
[36 50]
[37 49]
[38 48]
[39 46]
[40 45]
[76 86]
[77 85]
[78 84]
[90 98]
[91 97]
[92 96]
[99 158]
[100 157]
[101 156]
[102 155]
[103 154]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[113 125]
[114 124]
[115 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
