%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCACCUCGCCCGGACGGCGGCCUUCGGAAGUCGGCGCCUGCCAGCUACCCGCCGCCUCCUCAGCAAUCUUAGCCGACCGGGAGGGCUCGGCCCAGGUCACCGGCAGCCCAGGCGCAGGCGGGAGCAUCCAAUCAACUUCGAGAGCGUAGGCCCCACCUAUCGUGGGUCGAGUUGCUUGGCGGUCGUGGUUCCGGAGGUUCCUCGGG\
) } def
/len { sequence length } bind def

/coor [
[37.35725784 554.11700439]
[36.94661331 569.41699219]
[29.46262550 582.76794434]
[16.62505722 591.10192871]
[1.38388920 592.50384521]
[-12.75856972 586.65155029]
[-22.55248642 574.88983154]
[-25.74728966 559.92150879]
[-21.60883713 545.18609619]
[-11.08811569 534.06976318]
[3.39728999 529.12695312]
[5.64354038 514.29608154]
[7.88979053 499.46520996]
[10.13604069 484.63436890]
[12.38229179 469.80349731]
[10.31950378 465.49450684]
[10.94279194 459.84378052]
[14.92543030 454.56329346]
[17.61646080 439.80667114]
[15.72361183 432.66128540]
[20.46043587 424.84915161]
[23.37296867 410.13464355]
[26.28550148 395.42010498]
[29.19803238 380.70559692]
[32.11056519 365.99108887]
[35.02309799 351.27655029]
[37.93563080 336.56204224]
[40.84816360 321.84750366]
[43.76069260 307.13299561]
[46.67322540 292.41845703]
[49.58575821 277.70394897]
[41.33327866 269.82333374]
[37.87465286 258.82351685]
[40.17969894 247.40319824]
[47.78904724 238.42311096]
[58.90016174 234.18945312]
[62.25367355 219.56912231]
[65.60718536 204.94879150]
[60.91113663 190.81385803]
[71.53786469 179.09280396]
[74.89138031 164.47247314]
[78.24488831 149.85214233]
[81.59840393 135.23182678]
[84.95191956 120.61149597]
[88.30543518 105.99116516]
[85.94778442 91.17761230]
[78.22113800 78.32074738]
[70.49449158 65.46388245]
[63.39057541 59.71920395]
[62.75000763 52.35518646]
[55.21748734 39.38363266]
[47.68496704 26.41208267]
[40.15244293 13.44053268]
[32.61992264 0.46898162]
[25.08740234 -12.50256920]
[17.26434898 -25.30099869]
[9.15473652 -37.91980362]
[1.04512382 -50.53860474]
[-7.06448841 -63.15740967]
[-22.18404579 -61.37967300]
[-36.51770401 -66.32267761]
[-47.23992538 -76.95536804]
[-52.26173782 -91.13078308]
[-50.63758087 -106.01942444]
[-42.74283981 -118.67401123]
[-50.85245132 -131.29281616]
[-71.46865845 -140.07220459]
[-71.66629028 -161.71415710]
[-80.51950836 -173.82286072]
[-89.37272644 -185.93154907]
[-98.22595215 -198.04023743]
[-113.59147644 -200.59729004]
[-122.39740753 -213.00334167]
[-119.86495972 -227.63626099]
[-128.71818542 -239.74496460]
[-137.57139587 -251.85365295]
[-146.42462158 -263.96234131]
[-155.27784729 -276.07104492]
[-164.22181702 -288.11285400]
[-173.25604248 -300.08709717]
[-188.88104248 -303.72561646]
[-195.64799500 -318.27169800]
[-188.36587524 -332.56680298]
[-172.62089539 -335.64498901]
[-160.49125671 -325.14489746]
[-161.28179932 -309.12133789]
[-152.24757385 -297.14709473]
[-145.70855713 -293.70025635]
[-143.16914368 -284.92425537]
[-134.31593323 -272.81558228]
[-125.46270752 -260.70687866]
[-116.60948944 -248.59817505]
[-107.75626373 -236.48948669]
[-93.04452515 -234.46458435]
[-83.89360046 -222.31076050]
[-86.11725616 -206.89346313]
[-77.26403809 -194.78477478]
[-68.41081238 -182.67607117]
[-59.55759430 -170.56738281]
[-51.69060135 -171.04530334]
[-44.18716049 -168.34236145]
[-38.29491425 -162.82908630]
[-35.02451706 -155.34948730]
[-34.97676468 -147.09236145]
[-38.23365021 -139.40242004]
[-30.12403679 -126.78362274]
[-15.33342743 -128.70802307]
[-1.11554611 -124.00044250]
[9.69272900 -113.54376221]
[14.91039371 -99.37350464]
[13.45229149 -84.28175354]
[5.55431461 -71.26702118]
[13.66392708 -58.64821625]
[21.77353859 -46.02941513]
[29.88315201 -33.41061020]
[33.23383713 -32.30808258]
[36.21656418 -29.52695465]
[38.04779434 -25.25805473]
[38.05895233 -20.03508949]
[45.59147644 -7.06353903]
[53.12399673 5.90801191]
[60.65651703 18.87956238]
[68.18903351 31.85111427]
[75.72155762 44.82266617]
[83.35135651 57.73723602]
[91.07800293 70.59410095]
[98.80464172 83.45096588]
[95.25638580 68.87667847]
[101.37190247 55.17995071]
[114.59196472 48.09263611]
[129.38418579 50.58066559]
[139.55825806 61.60283661]
[140.85649109 76.54655457]
[132.73561096 89.15810394]
[118.59280396 94.15978241]
[133.58221436 93.59622955]
[148.57162476 93.03268433]
[163.56103516 92.46913147]
[178.55044556 91.90557861]
[187.00999451 88.45552063]
[193.76904297 91.44792175]
[208.76522827 91.10974121]
[223.76141357 90.77156067]
[235.61468506 77.90714264]
[252.76683044 77.60083771]
[264.59643555 89.55388641]
[279.58584595 88.99034119]
[294.57525635 88.42678833]
[309.55999756 87.75060272]
[324.53924561 86.96180725]
[339.51849365 86.17301178]
[354.49774170 85.38422394]
[366.25524902 74.46907043]
[382.09768677 76.99835968]
[389.87207031 91.03183746]
[383.61456299 105.80422211]
[368.12539673 109.98339844]
[355.28652954 100.36347198]
[340.30728149 101.15225983]
[325.32806396 101.94105530]
[310.34881592 102.72984314]
[303.83352661 106.22132111]
[295.13882446 103.41619873]
[280.14941406 103.97975159]
[265.16000366 104.54329681]
[257.80474854 115.12409973]
[245.51472473 119.60303497]
[232.70059204 116.13416290]
[224.09959412 105.76775360]
[209.10340881 106.10593414]
[194.10722351 106.44411469]
[179.11399841 106.89498901]
[164.12458801 107.45854187]
[149.13517761 108.02209473]
[134.14576721 108.58563995]
[119.15635681 109.14919281]
[113.09966278 111.47783661]
[107.42542267 111.39919281]
[102.92575836 109.34468079]
[99.57224274 123.96500397]
[96.21873474 138.58532715]
[92.86521912 153.20565796]
[89.51170349 167.82598877]
[86.15818787 182.44631958]
[90.61437988 197.62699890]
[80.22751617 208.30230713]
[76.87400055 222.92263794]
[73.52048492 237.54295349]
[84.18788910 253.19783020]
[80.09675598 271.36737061]
[64.30027771 280.61648560]
[61.38774872 295.33099365]
[58.47521591 310.04553223]
[55.56268311 324.76004028]
[52.65015030 339.47454834]
[49.73761749 354.18908691]
[46.82508850 368.90359497]
[43.91255569 383.61813354]
[41.00002289 398.33264160]
[38.08749008 413.04718018]
[35.17495728 427.76168823]
[32.37309647 442.49768066]
[29.68206787 457.25433350]
[27.21315002 472.04974365]
[24.96689987 486.88061523]
[22.72064972 501.71145630]
[20.47439957 516.54229736]
[18.22814751 531.37316895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[18 203]
[19 202]
[21 201]
[22 200]
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[30 192]
[31 191]
[36 188]
[37 187]
[38 186]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 127]
[47 126]
[48 125]
[50 124]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[56 115]
[57 114]
[58 113]
[59 112]
[65 106]
[66 105]
[68 99]
[69 98]
[70 97]
[71 96]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 87]
[80 86]
[135 176]
[136 175]
[137 174]
[138 173]
[139 172]
[141 171]
[142 170]
[143 169]
[146 165]
[147 164]
[148 163]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
