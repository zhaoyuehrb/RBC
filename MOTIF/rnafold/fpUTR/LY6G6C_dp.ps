%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LY6G6C)
} def

/sequence { (\
UUGAAAAUCUACUCUAUCAGCUGCUGUGGUUGCCACCAUUCUCAGGACCCUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.019055962 ubox
1 20 0.285757776 ubox
1 45 0.066574987 ubox
1 46 0.005325486 ubox
1 47 0.008764878 ubox
2 6 0.019057832 ubox
2 11 0.047144875 ubox
2 16 0.037181176 ubox
2 19 0.389404354 ubox
2 35 0.034823377 ubox
2 38 0.006904631 ubox
2 44 0.084767392 ubox
2 46 0.009284309 ubox
2 53 0.088040590 ubox
3 9 0.149951461 ubox
3 10 0.046247152 ubox
3 14 0.268303424 ubox
3 15 0.019208532 ubox
3 18 0.404504621 ubox
3 34 0.039231037 ubox
3 37 0.007623409 ubox
3 41 0.023383432 ubox
3 43 0.087597653 ubox
3 52 0.119614799 ubox
4 8 0.130757107 ubox
4 13 0.266282880 ubox
4 17 0.385167856 ubox
4 40 0.023270713 ubox
4 42 0.085416968 ubox
4 51 0.116491700 ubox
5 31 0.005576067 ubox
5 39 0.019978654 ubox
5 40 0.010729213 ubox
6 30 0.004895629 ubox
6 31 0.041565658 ubox
6 39 0.009300743 ubox
6 40 0.064459291 ubox
7 17 0.021580153 ubox
7 30 0.041320234 ubox
7 39 0.066944949 ubox
8 16 0.028013161 ubox
8 29 0.027993330 ubox
8 38 0.062204802 ubox
8 46 0.014271050 ubox
8 47 0.092069379 ubox
9 20 0.099026560 ubox
9 28 0.027634665 ubox
9 29 0.046986708 ubox
9 45 0.017261250 ubox
9 46 0.095047623 ubox
10 16 0.044390689 ubox
10 19 0.099745153 ubox
10 23 0.011082983 ubox
10 28 0.047396474 ubox
10 32 0.006957704 ubox
10 44 0.016450570 ubox
10 45 0.054059913 ubox
11 15 0.040640498 ubox
11 22 0.012433051 ubox
11 27 0.053696379 ubox
11 30 0.006740403 ubox
11 31 0.007477783 ubox
12 20 0.125286266 ubox
12 26 0.053971579 ubox
12 29 0.007053314 ubox
12 45 0.013415580 ubox
12 46 0.019596453 ubox
13 19 0.120879684 ubox
13 28 0.005738629 ubox
13 29 0.003304800 ubox
13 44 0.012870464 ubox
13 45 0.009555919 ubox
13 46 0.033490513 ubox
13 47 0.081043214 ubox
14 20 0.064222117 ubox
14 28 0.005209618 ubox
14 29 0.036393338 ubox
14 45 0.041935843 ubox
14 46 0.087442951 ubox
15 19 0.058919425 ubox
15 23 0.021751304 ubox
15 26 0.004226377 ubox
15 28 0.036608823 ubox
15 32 0.006650974 ubox
15 44 0.040995428 ubox
15 45 0.062186376 ubox
16 22 0.021628822 ubox
16 25 0.005889703 ubox
16 27 0.036259097 ubox
16 30 0.058373839 ubox
16 31 0.006190516 ubox
16 39 0.014276375 ubox
17 26 0.013569669 ubox
17 29 0.059511314 ubox
17 38 0.014025347 ubox
17 46 0.017412695 ubox
17 47 0.212459995 ubox
18 26 0.061871176 ubox
18 28 0.059553609 ubox
18 32 0.075778975 ubox
18 45 0.021984600 ubox
18 46 0.230942974 ubox
19 25 0.064891222 ubox
19 27 0.053413691 ubox
19 31 0.076602352 ubox
19 40 0.014187953 ubox
19 42 0.054023518 ubox
19 51 0.105375385 ubox
20 24 0.063792648 ubox
20 27 0.035653286 ubox
20 30 0.076941593 ubox
20 33 0.026237635 ubox
20 39 0.015106028 ubox
20 41 0.055883935 ubox
20 50 0.113183674 ubox
20 54 0.081254807 ubox
21 26 0.051122188 ubox
21 29 0.076998574 ubox
21 32 0.026302112 ubox
21 45 0.926514058 ubox
21 46 0.122160775 ubox
21 53 0.079990924 ubox
22 28 0.075092902 ubox
22 35 0.003281478 ubox
22 38 0.054647540 ubox
22 44 0.932571746 ubox
22 45 0.115328136 ubox
22 53 0.009024643 ubox
23 27 0.034917624 ubox
23 30 0.024087566 ubox
23 33 0.014495616 ubox
23 37 0.057278202 ubox
23 43 0.927260461 ubox
23 52 0.024857947 ubox
23 54 0.117753597 ubox
24 29 0.024776370 ubox
24 32 0.014735367 ubox
24 45 0.175139559 ubox
24 46 0.040696061 ubox
24 53 0.117399088 ubox
25 35 0.003848353 ubox
25 38 0.038807532 ubox
25 44 0.176096591 ubox
25 45 0.039725426 ubox
25 53 0.023857007 ubox
26 34 0.003759065 ubox
26 36 0.141923086 ubox
26 37 0.029198323 ubox
26 39 0.930046077 ubox
26 43 0.168611969 ubox
26 48 0.005390274 ubox
26 52 0.063439986 ubox
26 54 0.035586668 ubox
27 35 0.146198662 ubox
27 38 0.964503827 ubox
27 47 0.004489804 ubox
27 53 0.035660616 ubox
28 34 0.146516542 ubox
28 37 0.967182244 ubox
28 40 0.005538676 ubox
28 41 0.100752882 ubox
28 42 0.013614632 ubox
28 43 0.003335048 ubox
28 49 0.118407377 ubox
28 50 0.037808725 ubox
28 51 0.010012651 ubox
28 52 0.033700171 ubox
28 55 0.014251208 ubox
29 33 0.144153572 ubox
29 36 0.966585818 ubox
29 39 0.006717971 ubox
29 40 0.092726892 ubox
29 41 0.014433928 ubox
29 48 0.119061553 ubox
29 49 0.036311752 ubox
29 50 0.018940791 ubox
29 51 0.027209140 ubox
29 54 0.014469534 ubox
30 35 0.883335094 ubox
30 38 0.006742866 ubox
30 45 0.005551355 ubox
30 47 0.116981194 ubox
30 53 0.013912115 ubox
31 38 0.099031775 ubox
31 44 0.009380992 ubox
31 45 0.004871430 ubox
31 46 0.092252034 ubox
31 53 0.003589716 ubox
32 37 0.098198103 ubox
32 43 0.011039431 ubox
32 52 0.005087284 ubox
32 54 0.016348419 ubox
33 46 0.087421431 ubox
33 53 0.016499359 ubox
34 45 0.088417335 ubox
36 46 0.066514124 ubox
37 45 0.067439242 ubox
39 45 0.003317792 ubox
39 47 0.017960318 ubox
40 44 0.004252802 ubox
40 45 0.004255346 ubox
40 46 0.021189744 ubox
40 47 0.071245791 ubox
41 45 0.021983400 ubox
41 46 0.076883531 ubox
44 51 0.037641747 ubox
45 50 0.040947331 ubox
45 51 0.016574598 ubox
45 52 0.042931701 ubox
45 55 0.066614410 ubox
46 50 0.031180949 ubox
46 51 0.037578832 ubox
46 52 0.222196154 ubox
46 54 0.079996512 ubox
47 51 0.193541730 ubox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
showpage
end
%%EOF
