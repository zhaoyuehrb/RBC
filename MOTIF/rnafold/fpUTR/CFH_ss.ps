%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCAUUAACAUUUAGUGGGAGUGCAGUGAGAAUUGGGUUUAACUUCUGGCAUUUCUGGGCUUGUGGCUUGUGGUUGAUUUUUUAUUUACUUUGCAAAAGUUUCUGAUAGGCGGAGCAUCUAGUUUCAACUUCCUUUUGCAGCAAGUUCUUUCCUGCACUAAUCACAAUUCUUGGAAGAGGAGAACUGGACGUUGUGAACAGAGUUAGCUGGUAAAUGUCCUCUUAAAAGAUCCAAAAA\
) } def
/len { sequence length } bind def

/coor [
[281.67135620 459.38674927]
[266.76745605 457.69140625]
[252.63473511 452.66488647]
[240.00749207 444.56842041]
[229.54187012 433.82269287]
[221.78167725 420.98605347]
[217.13012695 406.72549438]
[215.82891846 391.78204346]
[217.94567871 376.93215942]
[223.37042236 362.94744873]
[231.82124329 350.55456543]
[242.85905457 340.39746094]
[255.91032410 333.00390625]
[270.29687500 328.75808716]
[285.27117920 327.88061523]
[300.05517578 330.41708374]
[313.87969971 336.23513794]
[303.73181152 325.18884277]
[293.58395386 314.14251709]
[283.43609619 303.09622192]
[266.42782593 298.73883057]
[262.59210205 280.71905518]
[252.30110168 269.80596924]
[242.01011658 258.89288330]
[231.71911621 247.97979736]
[221.42813110 237.06671143]
[211.13714600 226.15361023]
[200.84614563 215.24052429]
[183.78250122 211.10522461]
[179.71221924 193.13697815]
[169.27984619 182.35896301]
[158.84747314 171.58094788]
[148.41510010 160.80293274]
[137.98272705 150.02491760]
[127.55035400 139.24690247]
[117.11798859 128.46887207]
[104.83756256 139.91304016]
[86.04784393 145.08161926]
[64.24007416 140.69911194]
[50.33557510 146.32627869]
[36.43107224 151.95343018]
[32.81670380 167.04368591]
[21.00093079 177.10188293]
[5.52716589 178.26042175]
[-7.65461493 170.07382202]
[-13.47574806 155.69001770]
[-9.69788837 140.63984680]
[2.22629881 130.71043396]
[17.71172142 129.71981812]
[30.80391884 138.04891968]
[44.70841980 132.42176819]
[58.61291885 126.79461670]
[57.63801193 119.35824585]
[42.76527786 121.30806732]
[27.89250946 123.25762939]
[25.94318771 108.38483429]
[40.81546021 106.43533325]
[55.68819427 104.48551178]
[54.71328735 97.04914856]
[39.82816315 95.19631195]
[24.94303513 93.34347534]
[10.05790806 91.49063873]
[-4.82721901 89.63780212]
[-21.29191017 93.68135071]
[-29.73531532 78.97946930]
[-17.94535637 66.79615021]
[-2.97438264 74.75267792]
[11.91074371 76.60551453]
[26.79587173 78.45835114]
[41.68099594 80.31118774]
[56.56612396 82.16402435]
[61.55325317 68.01734161]
[48.79697037 60.12574768]
[36.04068756 52.23415756]
[23.28440285 44.34256363]
[7.47783470 43.66215515]
[0.72496331 30.38631248]
[-12.03132057 22.49472046]
[-24.78760338 14.60312843]
[-41.18669510 14.64550686]
[-49.18784332 0.33070055]
[-40.56015015 -13.61544418]
[-24.17905045 -12.84632969]
[-16.89601135 1.84684503]
[-4.13972807 9.73843765]
[8.61655521 17.63002968]
[23.51070976 17.74597931]
[31.17599487 31.58628082]
[43.93227768 39.47787476]
[56.68856430 47.36946487]
[69.44484711 55.26105881]
[81.14801025 60.57747650]
[90.40816498 68.19592285]
[89.43118286 53.22777557]
[88.45420074 38.25962448]
[87.47721863 23.29147530]
[86.50023651 8.32332516]
[85.52325439 -6.64482403]
[84.54627228 -21.61297417]
[83.56929016 -36.58112335]
[82.59230804 -51.54927444]
[70.96144867 -42.07704544]
[56.27613831 -45.13344955]
[49.39020920 -58.45951462]
[55.39302063 -72.20601654]
[69.84792328 -76.21298218]
[82.07170868 -67.51828766]
[82.07170868 -82.51828766]
[78.94740295 -91.07975006]
[82.17075348 -97.71350098]
[82.36627960 -112.71222687]
[71.61777496 -123.98641968]
[72.02973175 -139.19447327]
[82.84419250 -149.37205505]
[83.03971863 -164.37077332]
[83.23525238 -179.36950684]
[83.43077850 -194.36822510]
[83.62631226 -209.36695862]
[73.50594330 -221.81515503]
[77.06903076 -237.45753479]
[91.58227539 -244.29458618]
[105.91235352 -237.08152771]
[109.06645966 -221.35157776]
[98.62503052 -209.17141724]
[98.42950439 -194.17269897]
[98.23397827 -179.17398071]
[98.03844452 -164.17524719]
[97.84291840 -149.17652893]
[108.38838959 -138.72048950]
[108.40375519 -123.50686646]
[97.36500549 -112.51670074]
[97.16947937 -97.51797485]
[97.07170868 -82.51828766]
[97.07170868 -67.51828766]
[97.56046295 -52.52625656]
[98.53744507 -37.55810547]
[99.51442719 -22.58995628]
[100.49140930 -7.62180614]
[101.46839142 7.34634352]
[102.44536591 22.31449318]
[103.42234802 37.28264236]
[104.39933014 52.25079346]
[105.37631226 67.21894073]
[124.36237335 77.41732025]
[133.09400940 97.12101746]
[127.89600372 118.03650665]
[138.32836914 128.81452942]
[148.76074219 139.59254456]
[159.19311523 150.37055969]
[169.62548828 161.14857483]
[180.05786133 171.92658997]
[190.49023438 182.70460510]
[203.33734131 183.69099426]
[211.80393982 192.86576843]
[211.75923157 204.94953918]
[222.05023193 215.86262512]
[232.34121704 226.77571106]
[242.63220215 237.68879700]
[252.92320251 248.60189819]
[263.21420288 259.51498413]
[273.50518799 270.42807007]
[286.33834839 271.58184814]
[294.68463135 280.86621094]
[294.48242188 292.94836426]
[304.63027954 303.99465942]
[314.77813721 315.04098511]
[324.92599487 326.08728027]
[330.53939819 326.94445801]
[335.03817749 329.60684204]
[337.92990112 333.41165161]
[339.03768921 337.60128784]
[351.89575195 345.32592773]
[364.75384521 353.05056763]
[377.61190796 360.77520752]
[392.76568604 357.16961670]
[405.69555664 365.18667603]
[409.03955078 379.65573120]
[421.89761353 387.38037109]
[434.75567627 395.10501099]
[447.61373901 402.82965088]
[460.47180176 410.55429077]
[473.32989502 418.27893066]
[486.18795776 426.00357056]
[505.42175293 420.13092041]
[522.49285889 430.17004395]
[526.58093262 449.23464966]
[539.73120117 456.45065308]
[552.88140869 463.66668701]
[566.03167725 470.88269043]
[579.18194580 478.09872437]
[592.47076416 485.05624390]
[605.89306641 491.75262451]
[621.69586182 490.98986816]
[629.63037109 503.59512329]
[643.05267334 510.29150391]
[656.47503662 516.98785400]
[672.80200195 515.45135498]
[682.07427979 528.97747803]
[674.75329590 543.65179443]
[658.37030029 544.37860107]
[649.77862549 530.41015625]
[636.35632324 523.71380615]
[622.93402100 517.01745605]
[608.09124756 518.25915527]
[599.19671631 505.17492676]
[585.77435303 498.47857666]
[582.34918213 499.23129272]
[578.39050293 498.37493896]
[574.65283203 495.67718506]
[571.96588135 491.24896240]
[558.81567383 484.03295898]
[545.66540527 476.81692505]
[532.51513672 469.60092163]
[519.36492920 462.38488770]
[510.67840576 467.78894043]
[500.45382690 469.12054443]
[490.51876831 466.07440186]
[482.67697144 459.13366699]
[478.38098145 449.49481201]
[478.46331787 438.86163330]
[465.60525513 431.13699341]
[452.74716187 423.41235352]
[439.88909912 415.68771362]
[427.03103638 407.96307373]
[414.17297363 400.23843384]
[401.31491089 392.51379395]
[386.97015381 396.35614014]
[373.82019043 388.70541382]
[369.88726807 373.63327026]
[357.02920532 365.90863037]
[344.17111206 358.18399048]
[331.31304932 350.45935059]
[339.78759766 362.83602905]
[345.23907471 376.81033325]
[347.38424683 391.65615845]
[346.11166382 406.60205078]
[341.48742676 420.87149048]
[333.75180054 433.72296143]
[323.30676270 444.48870850]
[310.69503784 452.60931396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 167]
[18 166]
[19 165]
[20 164]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[39 52]
[40 51]
[41 50]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[72 91]
[73 90]
[74 89]
[75 88]
[77 86]
[78 85]
[79 84]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
[98 138]
[99 137]
[100 136]
[101 135]
[107 134]
[108 133]
[110 132]
[111 131]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[171 232]
[172 231]
[173 230]
[174 229]
[177 226]
[178 225]
[179 224]
[180 223]
[181 222]
[182 221]
[183 220]
[186 214]
[187 213]
[188 212]
[189 211]
[190 210]
[191 206]
[192 205]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
