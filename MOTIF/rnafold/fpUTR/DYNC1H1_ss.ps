%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCAGUGGCUGCCUUUAGGGCGGAGCCGGCUCCCGCUCUCCUCAGUCUGCGGUGGGCUAGCGGACGGUCCGGCUUCCGGCGGCCGUUUCUGUCUCUUGCUGGCUGUCUCGCUGAGUCGCGGCCGCCUUCUCAUCGCUCCUGGAAGGUCCCGAGCGCGACACC\
) } def
/len { sequence length } bind def

/coor [
[166.10583496 146.13438416]
[162.28057861 141.08694458]
[160.02468872 135.12585449]
[159.54377747 128.72970581]
[160.89994812 122.41908264]
[149.56370544 112.59616852]
[138.22746277 102.77326202]
[126.89121246 92.95034790]
[115.55496979 83.12744141]
[118.39656830 110.43976593]
[94.51059723 118.56136322]
[85.01541138 130.17349243]
[75.52022552 141.78561401]
[66.02503967 153.39773560]
[56.52985001 165.00985718]
[47.03466415 176.62199402]
[41.68901825 192.71112061]
[24.74882507 192.02830505]
[20.71544647 175.56112671]
[35.42253876 167.12680054]
[44.91772461 155.51467896]
[54.41291046 143.90255737]
[63.90810013 132.29042053]
[73.40328217 120.67830658]
[82.89847565 109.06617737]
[80.10794067 92.80774689]
[91.28685760 78.76979828]
[76.43953705 76.63507080]
[61.67869568 82.32965088]
[50.18210220 72.85982513]
[35.33477783 70.72510529]
[20.48745728 68.59037781]
[5.64013529 66.45565796]
[-9.20718575 64.32093048]
[-24.07415771 62.32765198]
[-38.95943069 60.47599030]
[-53.84470367 58.62433243]
[-68.72997284 56.77267075]
[-76.95594788 69.62942505]
[-89.95013428 77.63654327]
[-105.13253021 79.20419312]
[-119.48866272 74.02112579]
[-130.16810608 63.11644363]
[-135.05046082 48.65527725]
[-133.16632080 33.50889969]
[-124.88978577 20.68463516]
[-111.86417389 12.72875404]
[-96.67572021 11.22090054]
[-82.34010315 16.46046066]
[-71.70368195 27.40711594]
[-66.87831879 41.88739777]
[-51.99304199 43.73905945]
[-37.10776901 45.59071732]
[-22.22249603 47.44237900]
[-15.16458321 45.13702393]
[-7.07246351 49.47361374]
[7.77485800 51.60833359]
[22.62217903 53.74305725]
[37.46950150 55.87778091]
[52.31682205 58.01250458]
[66.01567841 52.16523743]
[78.57425690 61.78775024]
[93.42157745 63.92247391]
[105.55683136 55.10569382]
[108.11466217 40.32538986]
[110.67250061 25.54508018]
[113.23033142 10.76477337]
[115.78816223 -4.01553440]
[118.34600067 -18.79584122]
[116.72225952 -27.83198547]
[121.09579468 -33.83206558]
[123.93456268 -48.56099701]
[126.77333069 -63.28992462]
[129.61210632 -78.01885986]
[132.45086670 -92.74778748]
[120.95893097 -102.84147644]
[116.09436035 -117.23705292]
[119.06873322 -132.03636169]
[128.98506165 -143.28457642]
[143.10507202 -148.02703857]
[145.94384766 -162.75596619]
[148.78260803 -177.48490906]
[151.62138367 -192.21383667]
[154.46014404 -206.94276428]
[145.39527893 -219.88894653]
[148.22201538 -235.43838501]
[161.26332092 -244.36587524]
[176.78199768 -241.37489319]
[185.57110596 -228.23994446]
[182.41622925 -212.75373840]
[169.18908691 -204.10398865]
[166.35031128 -189.37506104]
[163.51153564 -174.64613342]
[160.67277527 -159.91720581]
[157.83399963 -145.18827820]
[169.17996216 -135.53764343]
[174.20544434 -121.40962982]
[171.46640015 -106.56497192]
[161.59999084 -95.00855255]
[147.17980957 -89.90901947]
[144.34103394 -75.18009186]
[141.50225830 -60.45115662]
[138.66349792 -45.72222900]
[135.82472229 -30.99329758]
[133.12629700 -16.23800850]
[130.56846619 -1.45770156]
[128.01063538 13.32260609]
[125.45280457 28.10291290]
[122.89497375 42.88322067]
[120.33714294 57.66352844]
[125.37788391 71.79119110]
[136.71412659 81.61410522]
[148.05036926 91.43701935]
[159.38661194 101.25992584]
[170.72285461 111.08283997]
[195.07406616 113.04846191]
[202.83677673 135.47576904]
[215.37780762 143.70515442]
[227.91883850 151.93452454]
[240.45986938 160.16389465]
[253.00090027 168.39326477]
[265.54193115 176.62265015]
[280.82699585 173.62196350]
[293.42816162 182.14636230]
[296.19467163 196.73684692]
[308.73568726 204.96621704]
[321.50659180 212.83412170]
[334.49697876 220.33412170]
[347.48736572 227.83412170]
[360.47775269 235.33412170]
[373.46813965 242.83412170]
[382.50967407 244.42753601]
[386.63247681 250.60258484]
[399.47772217 258.34854126]
[414.21179199 253.11009216]
[428.84780884 258.61648560]
[436.47515869 272.26776123]
[433.49237061 287.61825562]
[421.30786133 297.41989136]
[405.67477417 297.04464722]
[393.97457886 286.66967773]
[391.73175049 271.19378662]
[378.88650513 263.44781494]
[365.96813965 255.82449341]
[352.97775269 248.32449341]
[339.98736572 240.82449341]
[326.99697876 233.32449341]
[314.00659180 225.82449341]
[310.48535156 226.40516663]
[306.50677490 225.28031921]
[302.88891602 222.25354004]
[300.50631714 217.50724792]
[287.96530151 209.27787781]
[273.47921753 212.54728699]
[260.64358521 204.38017273]
[257.31256104 189.16366577]
[244.77153015 180.93429565]
[232.23049927 172.70492554]
[219.68946838 164.47555542]
[207.14843750 156.24618530]
[194.60740662 148.01679993]
[189.26116943 151.01718140]
[183.24514771 152.39201355]
[177.04547119 152.00668335]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 115]
[6 114]
[7 113]
[8 112]
[9 111]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[16 20]
[27 63]
[28 62]
[30 60]
[31 59]
[32 58]
[33 57]
[34 56]
[35 54]
[36 53]
[37 52]
[38 51]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[117 161]
[118 160]
[119 159]
[120 158]
[121 157]
[122 156]
[125 153]
[126 152]
[127 148]
[128 147]
[129 146]
[130 145]
[131 144]
[133 143]
[134 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
