%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MFSD4A)
} def

/sequence { (\
CUCCCCAGCCCGGCCGGCCCUCCCGCGGGCGGCACUCGGGCACCGGGCUCGCCGGGACCAGAUCCGCGAGCCCGUCAGCCUGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.009576407 ubox
1 78 0.015207090 ubox
2 7 0.019309929 ubox
2 16 0.003471817 ubox
2 77 0.014728986 ubox
3 12 0.008379804 ubox
3 13 0.008483978 ubox
3 16 0.005437817 ubox
3 31 0.006740539 ubox
3 32 0.015700617 ubox
3 40 0.004198010 ubox
4 12 0.010007807 ubox
4 13 0.016525999 ubox
4 16 0.004230816 ubox
4 29 0.004941433 ubox
4 31 0.017942642 ubox
4 32 0.025940286 ubox
4 39 0.004382251 ubox
4 40 0.004253008 ubox
5 12 0.018656799 ubox
5 13 0.018650680 ubox
5 28 0.004987313 ubox
5 31 0.028325764 ubox
5 32 0.079536730 ubox
5 38 0.004465306 ubox
5 39 0.004393953 ubox
6 12 0.020924148 ubox
6 16 0.009597004 ubox
6 27 0.004974039 ubox
6 31 0.087859930 ubox
6 38 0.004460472 ubox
6 82 0.028161557 ubox
7 36 0.009104866 ubox
7 81 0.026440936 ubox
8 14 0.013500162 ubox
8 26 0.004713100 ubox
8 30 0.857972822 ubox
8 33 0.046339807 ubox
8 35 0.009399084 ubox
8 41 0.499506752 ubox
8 80 0.007742910 ubox
8 83 0.008387511 ubox
8 85 0.027208383 ubox
9 13 0.013420109 ubox
9 25 0.004658100 ubox
9 29 0.858928807 ubox
9 32 0.044378359 ubox
9 40 0.500097295 ubox
9 82 0.008059252 ubox
9 84 0.027173600 ubox
10 16 0.003438302 ubox
10 28 0.858831754 ubox
10 29 0.017058265 ubox
10 31 0.042057177 ubox
10 32 0.018525302 ubox
10 39 0.500123754 ubox
11 25 0.004336846 ubox
11 27 0.857946283 ubox
11 28 0.021754848 ubox
11 31 0.023434348 ubox
11 38 0.500100930 ubox
11 82 0.007172926 ubox
11 84 0.011620031 ubox
12 19 0.004284493 ubox
12 20 0.003595518 ubox
12 23 0.008996593 ubox
12 24 0.008654303 ubox
12 26 0.727348313 ubox
12 30 0.025028425 ubox
12 36 0.010797532 ubox
12 37 0.498132347 ubox
12 83 0.012367225 ubox
12 86 0.004113239 ubox
13 18 0.004683613 ubox
13 19 0.003878426 ubox
13 22 0.009851804 ubox
13 23 0.009239313 ubox
13 26 0.440037589 ubox
13 30 0.068558624 ubox
13 33 0.498202610 ubox
13 35 0.031523161 ubox
13 36 0.073725539 ubox
13 85 0.003937461 ubox
14 25 0.564205049 ubox
14 28 0.022244831 ubox
14 29 0.069728973 ubox
14 32 0.504347852 ubox
14 84 0.003689393 ubox
15 25 0.608692080 ubox
15 27 0.022226815 ubox
15 28 0.069694739 ubox
15 31 0.503440553 ubox
16 22 0.063724945 ubox
16 23 0.524090402 ubox
16 24 0.671797083 ubox
16 26 0.019348233 ubox
16 30 0.363526415 ubox
17 21 0.041764779 ubox
17 22 0.516791210 ubox
17 23 0.667787159 ubox
17 26 0.071021345 ubox
17 30 0.351891830 ubox
17 33 0.020181354 ubox
18 25 0.071828312 ubox
18 28 0.103582707 ubox
18 29 0.495119986 ubox
18 32 0.020122526 ubox
19 27 0.103022824 ubox
19 28 0.495297506 ubox
19 29 0.006038890 ubox
19 31 0.020041267 ubox
20 27 0.494866227 ubox
20 28 0.006577215 ubox
20 29 0.015723364 ubox
21 27 0.006507893 ubox
21 28 0.015233383 ubox
21 29 0.010919424 ubox
22 27 0.015337250 ubox
22 28 0.011971610 ubox
22 29 0.006448098 ubox
23 27 0.011921854 ubox
23 28 0.006458192 ubox
31 83 0.003163293 ubox
31 86 0.849469684 ubox
32 83 0.019768321 ubox
32 85 0.856594860 ubox
33 82 0.019533947 ubox
33 84 0.856466052 ubox
34 81 0.014005474 ubox
37 82 0.861462226 ubox
37 84 0.005652474 ubox
38 80 0.008837742 ubox
38 81 0.864813399 ubox
38 83 0.005486930 ubox
39 79 0.008599641 ubox
39 80 0.865865817 ubox
40 79 0.865882269 ubox
41 78 0.864366152 ubox
42 75 0.204272951 ubox
42 81 0.003526000 ubox
43 74 0.154325145 ubox
44 74 0.975794986 ubox
45 73 0.999918458 ubox
46 72 0.999990046 ubox
47 71 0.999994069 ubox
48 70 0.999990016 ubox
49 69 0.999849070 ubox
50 68 0.999968260 ubox
51 67 0.999767157 ubox
52 66 0.745135186 ubox
53 66 0.665889739 ubox
54 64 0.109390998 ubox
54 65 0.939521042 ubox
55 63 0.104446093 ubox
55 64 0.937362216 ubox
55 65 0.320947703 ubox
56 63 0.634134019 ubox
56 64 0.328819822 ubox
57 63 0.316334104 ubox
73 84 0.004982527 ubox
74 83 0.027703094 ubox
74 85 0.021454941 ubox
75 82 0.025050831 ubox
75 84 0.022083158 ubox
76 82 0.035062848 ubox
77 81 0.028738525 ubox
78 85 0.336931311 ubox
79 84 0.336793275 ubox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
31 86 0.9500000 lbox
32 85 0.9500000 lbox
33 84 0.9500000 lbox
37 82 0.9500000 lbox
38 81 0.9500000 lbox
39 80 0.9500000 lbox
40 79 0.9500000 lbox
41 78 0.9500000 lbox
44 74 0.9500000 lbox
45 73 0.9500000 lbox
46 72 0.9500000 lbox
47 71 0.9500000 lbox
48 70 0.9500000 lbox
49 69 0.9500000 lbox
50 68 0.9500000 lbox
51 67 0.9500000 lbox
52 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
showpage
end
%%EOF
