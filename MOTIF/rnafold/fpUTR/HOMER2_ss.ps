%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGCGCCUGGCGGCGGUGGCGGCAGUGGCAGCAGUGGCAGCCGCGCAGCCCCGCGGAAUGGAGCGGCGCCGGGGCUGAGCCGGGCGCGCACGGGCCGCCGCAUGUGCCGCGCGGGGAGCGGCUGCCGAGCGGGCGGAGAGCGAGCGCGAGAGGCCCCGUCGGAGCGGCCGCCGGAGCAGCGCCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-97.90435028 204.82427979]
[-111.64094543 210.84970093]
[-125.37754822 216.87513733]
[-131.99392700 223.19952393]
[-139.39143372 222.88455200]
[-153.22578430 228.68203735]
[-162.96307373 241.15182495]
[-177.69177246 238.93487549]
[-191.52612305 244.73236084]
[-192.39833069 259.93106079]
[-199.75303650 273.18984985]
[-212.08464050 281.90487671]
[-226.91630554 284.39135742]
[-241.29742432 280.20889282]
[-252.39051819 270.23849487]
[-266.22485352 276.03598022]
[-280.05920410 281.83346558]
[-293.89355469 287.63095093]
[-300.61361694 293.84506226]
[-308.00488281 293.40783691]
[-321.93319702 298.97579956]
[-335.86151123 304.54373169]
[-345.80364990 316.85083008]
[-360.49368286 314.39065552]
[-374.42199707 319.95861816]
[-381.24386597 326.06079102]
[-388.62689209 325.50140381]
[-402.64538574 330.83831787]
[-416.66384888 336.17520142]
[-430.68231201 341.51211548]
[-444.70077515 346.84902954]
[-454.84503174 358.99005127]
[-469.49237061 356.28732300]
[-483.51083374 361.62423706]
[-493.44104004 374.67501831]
[-509.67202759 372.33248901]
[-515.50671387 357.00643921]
[-504.94293213 344.46298218]
[-488.84774780 347.60577393]
[-474.82928467 342.26885986]
[-465.68771362 330.50958252]
[-450.03768921 332.83056641]
[-436.01922607 327.49365234]
[-422.00073242 322.15673828]
[-407.98226929 316.81982422]
[-393.96380615 311.48294067]
[-379.98995972 306.03030396]
[-366.06164551 300.46234131]
[-357.11575317 288.55352783]
[-341.42947388 290.61544800]
[-327.50115967 285.04748535]
[-313.57284546 279.47952271]
[-299.69104004 273.79660034]
[-285.85668945 267.99911499]
[-272.02233887 262.20162964]
[-258.18801880 256.40414429]
[-257.51730347 241.50395203]
[-250.41453552 228.31834412]
[-238.24134827 219.48802185]
[-223.38078308 216.80778503]
[-208.77082825 220.86195374]
[-197.32360840 230.89801025]
[-183.48925781 225.10052490]
[-174.74148560 213.04541016]
[-159.02326965 214.84768677]
[-145.18891907 209.05020142]
[-131.40298462 203.13853455]
[-117.66638184 197.11311340]
[-103.92977905 191.08767700]
[-93.67036438 174.70996094]
[-73.67639923 177.18592834]
[-60.14652634 170.70960999]
[-46.61666107 164.23329163]
[-33.08679199 157.75697327]
[-24.94751740 145.28294373]
[-9.15926933 146.30363464]
[4.37059927 139.82731628]
[17.90046692 133.35101318]
[31.43033600 126.87469482]
[36.12528229 112.78593445]
[49.75423431 106.02529144]
[64.49998474 111.04531097]
[78.02985382 104.56899261]
[91.55972290 98.09267426]
[81.83294678 86.36217499]
[82.20072174 67.81424713]
[84.66963959 53.01882935]
[87.13855743 38.22341156]
[89.60747528 23.42799187]
[92.07639313 8.63257122]
[94.42291260 -6.18275356]
[96.64686584 -21.01697159]
[98.87081909 -35.85118866]
[101.09477997 -50.68540955]
[95.48905182 -65.48021698]
[105.02783203 -76.91967010]
[107.25178528 -91.75388336]
[100.74822998 -106.80831146]
[110.74976349 -119.80451965]
[126.96766663 -117.37312317]
[132.71835327 -102.01533508]
[122.08600616 -89.52993011]
[119.86205292 -74.69570923]
[125.62684631 -60.96194458]
[115.92899323 -48.46145248]
[113.70503998 -33.62723541]
[111.48108673 -18.79301643]
[109.25713348 -3.95879889]
[111.37845612 3.13502383]
[106.87181854 11.10149002]
[104.40290070 25.89690971]
[101.93397522 40.69232941]
[99.46505737 55.48774719]
[96.99613953 70.28316498]
[101.45454407 76.31414032]
[110.17071533 64.10643005]
[124.47438049 68.62362671]
[124.59831238 83.62311554]
[110.37134552 88.37609100]
[114.82974243 94.40706635]
[129.69869995 96.38545227]
[144.56767273 98.36383057]
[159.43663025 100.34221649]
[174.30558777 102.32059479]
[189.17454529 104.29898071]
[204.04351807 106.27736664]
[218.91247559 108.25574493]
[233.81211853 109.98801422]
[248.73835754 111.47370148]
[263.66461182 112.95938110]
[275.82205200 103.22108459]
[290.93820190 104.94040680]
[300.14727783 116.59068298]
[315.07351685 118.07636261]
[329.99975586 119.56204987]
[344.92599487 121.04772949]
[352.92687988 108.09600067]
[365.70562744 99.93569946]
[380.69885254 98.14024353]
[394.92633057 103.01256561]
[405.58349609 113.53558350]
[410.59420776 127.58401489]
[425.52044678 129.06970215]
[440.23388672 121.82768250]
[453.71002197 131.17251587]
[452.08575439 147.49102783]
[437.03201294 153.99613953]
[424.03475952 143.99594116]
[409.10852051 142.51025391]
[401.42694092 155.29536438]
[388.90460205 163.51121521]
[373.99584961 165.48344421]
[359.65069580 160.76780701]
[348.73120117 150.24870300]
[343.44030762 135.97396851]
[328.51406860 134.48829651]
[313.58782959 133.00260925]
[298.66159058 131.51692200]
[287.33673096 141.12335205]
[272.17825317 139.82929993]
[262.17892456 127.88562775]
[247.25267029 126.39994049]
[232.32643127 124.91426086]
[228.11727905 127.20522308]
[222.42182922 126.86384583]
[216.93409729 123.12471008]
[202.06512451 121.14632416]
[187.19616699 119.16793823]
[172.32720947 117.18955994]
[157.45825195 115.21117401]
[142.58927917 113.23279572]
[127.72032166 111.25440979]
[112.85136414 109.27603149]
[98.03604126 111.62254333]
[84.50617218 118.09886169]
[70.97630310 124.57518005]
[65.63809204 139.20874023]
[51.82462311 145.58390808]
[37.90665054 140.40455627]
[24.37678337 146.88087463]
[10.84691429 153.35719299]
[-2.68295383 159.83351135]
[-11.78997517 172.77076721]
[-26.61047554 171.28684998]
[-40.14034271 177.76316833]
[-53.67021179 184.23947144]
[-67.20008087 190.71578979]
[-70.22588348 201.18699646]
[-78.35449982 208.11404419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[5 66]
[6 65]
[8 63]
[9 62]
[15 56]
[16 55]
[17 54]
[18 53]
[20 52]
[21 51]
[22 50]
[24 48]
[25 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[33 40]
[34 39]
[71 187]
[72 186]
[73 185]
[74 184]
[76 182]
[77 181]
[78 180]
[79 179]
[82 176]
[83 175]
[84 174]
[86 114]
[87 113]
[88 112]
[89 111]
[90 110]
[91 108]
[92 107]
[93 106]
[94 105]
[96 103]
[97 102]
[120 173]
[121 172]
[122 171]
[123 170]
[124 169]
[125 168]
[126 167]
[127 166]
[128 163]
[129 162]
[130 161]
[133 158]
[134 157]
[135 156]
[136 155]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
