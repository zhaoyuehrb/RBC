%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCAGUAUUUCCUGUUCGGAUUAUCUUUUGCUUCCCCCCAGCUGCCUCCUUACCCUCACACUCCCACUCCUCCGUUUCCGCGGUCGAAGCUGCCUUCGGCCCCGGGUGGUCUCCCCCGCCCGGGGACCCCCUGUGCCUCCCCUCCCGGGCUGCGGGGGAGCCCCUCCGAGACC\
) } def
/len { sequence length } bind def

/coor [
[-82.20938873 659.72052002]
[-82.47712708 644.72290039]
[-82.74485779 629.72528076]
[-97.50653076 627.06201172]
[-102.99851227 641.02044678]
[-108.49049377 654.97888184]
[-113.98247528 668.93731689]
[-107.44577026 683.32647705]
[-113.07640839 698.09368896]
[-127.53384399 704.47790527]
[-142.24072266 698.69146729]
[-148.47172546 684.16735840]
[-142.53010559 669.52246094]
[-127.94091797 663.44537354]
[-122.44893646 649.48693848]
[-116.95695496 635.52844238]
[-111.46497345 621.57000732]
[-80.74177551 611.09393311]
[-77.29219055 596.49597168]
[-73.84260559 581.89801025]
[-70.39301300 567.30004883]
[-66.94342804 552.70208740]
[-74.55847168 547.57482910]
[-80.47866058 540.52777100]
[-84.23458862 532.09948730]
[-85.52291107 522.93884277]
[-84.23080444 513.75500488]
[-80.44570160 505.26254272]
[-74.44953156 498.12582397]
[-66.69773102 492.90710449]
[-57.78469086 490.02215576]
[-48.39816284 489.70724487]
[-43.40789032 475.56167603]
[-38.41761780 461.41610718]
[-33.42734146 447.27053833]
[-28.43706894 433.12496948]
[-23.44679642 418.97940063]
[-18.45652390 404.83383179]
[-13.46625042 390.68826294]
[-16.52864838 376.11187744]
[-4.64097023 365.67184448]
[0.34930280 351.52627563]
[5.33957624 337.38070679]
[10.32984924 323.23513794]
[15.32012272 309.08956909]
[2.95194864 301.49114990]
[-7.56293106 291.47506714]
[-15.75988388 279.48043823]
[-21.27597427 266.03387451]
[-23.86602592 251.72631836]
[-23.41352654 237.18719482]
[-19.93586159 223.05661011]
[-13.58366108 209.95721436]
[-4.63427973 198.46678162]
[6.52031612 189.09269714]
[19.39071274 182.24955750]
[33.41152191 178.24084473]
[47.96622467 177.24549866]
[62.41426468 179.30982971]
[67.65622711 165.25558472]
[72.89819336 151.20133972]
[78.14015198 137.14709473]
[71.22399902 133.89903259]
[64.80066681 129.34915161]
[59.11651993 123.57523346]
[54.40493393 116.70169067]
[50.87748718 108.89730835]
[48.71556473 100.37123871]
[48.06273270 91.36747742]
[49.01815796 82.15786743]
[51.63130951 73.03389740]
[55.89822769 64.29752350]
[61.75947571 56.25130463]
[69.09993744 49.18813324]
[64.61772919 34.87345886]
[60.13552475 20.55878830]
[55.65332031 6.24411631]
[43.22482300 -4.45469618]
[46.54146194 -20.51495552]
[62.19135666 -25.41524506]
[74.07524109 -14.11456680]
[69.96798706 1.76191115]
[74.45019531 16.07658386]
[78.93240356 30.39125443]
[83.41460419 44.70592880]
[90.90385437 44.30449677]
[105.88235474 43.50163269]
[113.37160492 43.10020065]
[116.29795837 28.38842010]
[119.22431183 13.67664051]
[122.15066528 -1.03513873]
[116.36983490 -16.38160515]
[126.97763824 -28.88786316]
[143.06167603 -25.68854904]
[148.07608032 -10.07484055]
[136.86244202 1.89121604]
[133.93609619 16.60299492]
[131.00973511 31.31477356]
[128.08337402 46.02655411]
[140.62930298 54.24846268]
[152.95062256 45.69362259]
[165.19508362 37.02915955]
[177.36174011 28.25576019]
[189.52839661 19.48235893]
[201.69505310 10.70895958]
[213.86169434 1.93555987]
[226.02835083 -6.83784008]
[238.19500732 -15.61124039]
[250.36166382 -24.38463974]
[262.52832031 -33.15803909]
[274.69497681 -41.93143845]
[276.97528076 -57.57035446]
[289.69586182 -66.94919586]
[305.30978394 -64.50365448]
[314.55361938 -51.68463135]
[311.94314575 -36.09742737]
[299.02709961 -26.98965263]
[283.46835327 -29.76478577]
[271.30172729 -20.99138641]
[259.13507080 -12.21798611]
[246.96839905 -3.44458652]
[234.80175781 5.32881355]
[222.63510132 14.10221291]
[210.46844482 22.87561226]
[198.30178833 31.64901352]
[186.13514709 40.42241287]
[173.96849060 49.19581223]
[170.37052917 55.67946625]
[161.50546265 58.01493454]
[149.18414307 66.56977844]
[155.37530518 99.47383118]
[142.95574951 128.01847839]
[118.61103821 143.36911011]
[92.19439697 142.38905334]
[86.95243835 156.44329834]
[81.71047211 170.49754333]
[76.46851349 184.55178833]
[89.46279907 193.04322815]
[100.24559784 204.19989014]
[108.28215027 217.46405029]
[113.17488861 232.17353821]
[114.68307495 247.59489441]
[112.73468018 262.95980835]
[107.42979431 277.50350952]
[99.03549957 290.50280762]
[87.97241211 301.31201172]
[74.79363251 309.39501953]
[60.15707016 314.35195923]
[44.79260254 315.93890381]
[29.46569252 314.07986450]
[24.47542000 328.22543335]
[19.48514748 342.37100220]
[14.49487400 356.51657104]
[9.50460052 370.66213989]
[12.21006012 386.25030518]
[0.67932069 395.67852783]
[-4.31095266 409.82409668]
[-9.30122566 423.96966553]
[-14.29149914 438.11523438]
[-19.28177261 452.26080322]
[-24.27204514 466.40637207]
[-29.26231956 480.55194092]
[-34.25259018 494.69750977]
[-20.90933990 511.34558105]
[-20.26374054 532.53741455]
[-32.41460037 549.74835205]
[-52.34547043 556.15167236]
[-55.79505920 570.74963379]
[-59.24464798 585.34759521]
[-62.69423294 599.94555664]
[-66.14382172 614.54351807]
[-67.74724579 629.45758057]
[-67.47951508 644.45520020]
[-67.21177673 659.45281982]
[-64.67755890 678.66809082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 17]
[5 16]
[6 15]
[7 14]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[59 137]
[60 136]
[61 135]
[62 134]
[74 85]
[75 84]
[76 83]
[77 82]
[88 99]
[89 98]
[90 97]
[91 96]
[100 130]
[101 129]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
