%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACUGGGCUGGCUGCGGUGGCGCGCGGGCGCGGCACCCGGAAGUCGGCGGCGGUGGCGGAGGCGACCUCGCGACCUGUGUCAGCAGAGCCGCCCUGCACCACCAUGUGCAUCAUCUUCUUUAAGUUUGAUCCUCGCCCUGUUUCCAAAAACGCGUACAGGUAACCCCCUCGCUCUGCAUCUGCUGCGCCCUGCAGGGUCCUGGGUGCCCAGCCAGUUCUC\
) } def
/len { sequence length } bind def

/coor [
[88.15311432 472.94473267]
[73.13197327 476.46163940]
[58.60165024 471.27767944]
[49.19873047 459.04705811]
[47.92364502 443.67245483]
[55.18327332 430.05993652]
[68.66108704 422.55313110]
[69.50591278 407.57693481]
[70.35073853 392.60073853]
[71.19556427 377.62454224]
[72.04039001 362.64837646]
[72.88520813 347.67218018]
[73.73003387 332.69598389]
[74.57485962 317.71978760]
[75.41968536 302.74359131]
[76.26451111 287.76742554]
[69.40292358 284.73944092]
[67.88385773 299.66232300]
[53.22189713 302.82882690]
[45.67972183 289.86288452]
[55.67976379 278.68347168]
[48.81818008 275.65545654]
[38.32423782 286.37353516]
[27.83029556 297.09161377]
[17.33635139 307.80969238]
[13.78585911 323.81988525]
[-1.93383288 328.49142456]
[-13.65165329 317.01864624]
[-9.31331253 301.20376587]
[6.61827564 297.31576538]
[17.11221886 286.59768677]
[27.60616302 275.87960815]
[38.10010529 265.16152954]
[45.75209045 252.26008606]
[50.12531662 237.91174316]
[54.49853897 223.56340027]
[58.87176514 209.21505737]
[63.24498749 194.86672974]
[67.61820984 180.51838684]
[71.99143982 166.17004395]
[76.36466217 151.82170105]
[80.73788452 137.47335815]
[72.80486298 132.18238831]
[66.26473236 125.24308014]
[61.45246887 117.01085663]
[58.61455536 107.90736389]
[57.89634323 98.39887238]
[59.33461761 88.97238922]
[45.78751373 82.53221130]
[32.24040604 76.09203339]
[18.69329643 69.65185547]
[5.14619017 63.21167755]
[-8.40091705 56.77149963]
[-26.95933533 64.49087524]
[-44.92808533 56.18835068]
[-50.89070129 37.63447189]
[-64.69781494 31.77242470]
[-78.50492859 25.91037750]
[-92.31204224 20.04832840]
[-106.11915588 14.18628120]
[-121.84561920 15.91511631]
[-130.53698730 3.81927228]
[-144.34410095 -2.04277539]
[-158.15121460 -7.90482283]
[-171.99928284 -13.66946983]
[-185.88760376 -19.33642960]
[-200.35774231 -12.98106194]
[-215.05305481 -18.79683685]
[-221.25508118 -33.33335876]
[-215.28425598 -47.96636581]
[-200.68298340 -54.01435471]
[-186.11392212 -47.88916016]
[-180.22064209 -33.22475433]
[-166.33232117 -27.55779457]
[-158.95819092 -27.94077110]
[-152.28916931 -21.71193695]
[-138.48205566 -15.84988976]
[-124.67493439 -9.98784161]
[-109.93605042 -12.13596916]
[-100.25711060 0.37916750]
[-86.44999695 6.24121523]
[-72.64288330 12.10326290]
[-58.83576584 17.96531105]
[-45.02865219 23.82735825]
[-36.91081619 17.56927872]
[-26.85012817 15.22271252]
[-16.64304924 17.27538109]
[-8.14078045 23.42325974]
[-2.91353512 32.61352921]
[-1.96074009 43.22439194]
[11.58636761 49.66456985]
[25.13347435 56.10474777]
[38.68058014 62.54492569]
[52.22768784 68.98509979]
[65.77479553 75.42527771]
[69.21324921 68.64802551]
[73.99845123 62.36085510]
[80.05702972 56.83050537]
[77.11772156 42.12130737]
[74.17841339 27.41211128]
[71.23911285 12.70291424]
[57.95318985 4.14371395]
[54.69260025 -11.32056999]
[63.39178848 -24.51525307]
[78.88967896 -27.61216545]
[91.99165344 -18.77396011]
[94.92453766 -3.24419117]
[85.94830322 9.76360703]
[88.88761139 24.47280312]
[91.82691956 39.18199921]
[94.76622772 53.89119720]
[109.74800110 54.63050842]
[114.12122345 40.28216934]
[118.49444580 25.93382645]
[122.86766815 11.58548546]
[118.29739380 -6.25667810]
[131.58850098 -17.72158241]
[135.75915527 -32.13010788]
[139.92980957 -46.53863144]
[135.47917175 -62.32228851]
[147.11514282 -73.87807465]
[162.86764526 -69.31838989]
[166.53184509 -53.33384705]
[154.33833313 -42.36797333]
[150.16767883 -27.95944786]
[145.99702454 -13.55092239]
[151.55728149 -2.81419277]
[148.20709229 9.21992397]
[137.21601868 15.95870972]
[132.84278870 30.30705070]
[128.46955872 44.65539169]
[124.09633636 59.00373459]
[130.30853271 64.77484131]
[135.25793457 71.42137146]
[138.83573914 78.68247986]
[140.98477173 86.28725433]
[141.69958496 93.96459961]
[156.69027710 94.49278259]
[171.68098450 95.02096558]
[186.67167664 95.54915619]
[201.66236877 96.07733917]
[216.65307617 96.60552216]
[231.64376831 97.13371277]
[234.96539307 89.05350494]
[240.20104980 82.08364868]
[247.00648499 76.66648102]
[254.93823242 73.14276886]
[263.48251343 71.73031616]
[272.08840942 72.51047516]
[280.20358276 75.42357635]
[287.30950928 80.27333832]
[292.95477295 86.74005890]
[296.78363037 94.40172577]
[298.55853271 102.76148987]
[313.42437744 104.76302338]
[328.29025269 106.76455688]
[343.15612793 108.76609039]
[358.02197266 110.76761627]
[372.90158081 112.66439056]
[387.79415894 114.45629883]
[402.68673706 116.24821472]
[417.57931519 118.04012299]
[432.47189331 119.83203888]
[439.29870605 106.29798126]
[450.34484863 95.91729736]
[464.27645874 89.94349670]
[479.41119385 89.09795380]
[493.92150879 93.48275757]
[506.05520630 102.56843567]
[514.34704590 115.25784302]
[517.79577637 130.01866150]
[515.98498535 145.06848145]
[509.13323975 158.58992004]
[498.06799316 168.95024109]
[484.12539673 174.89834595]
[468.98910522 175.71600342]
[454.48687744 171.30447388]
[442.36996460 162.19644165]
[434.10153198 149.49177551]
[430.67999268 134.72462463]
[415.78741455 132.93270874]
[400.89483643 131.14079285]
[386.00222778 129.34889221]
[371.10964966 127.55697632]
[364.09942627 129.87664795]
[356.02044678 125.63348389]
[341.15457153 123.63195038]
[326.28872681 121.63041687]
[311.42285156 119.62888336]
[296.55700684 117.62734985]
[283.09484863 134.47019958]
[262.05786133 139.76679993]
[241.98277283 131.20346069]
[231.11558533 112.12441254]
[216.12489319 111.59622192]
[201.13418579 111.06803894]
[186.14349365 110.53985596]
[171.15280151 110.01166534]
[156.16209412 109.48348236]
[141.17140198 108.95529938]
[124.47678375 134.29531860]
[95.08622742 141.84657288]
[90.71300507 156.19491577]
[86.33978271 170.54325867]
[81.96655273 184.89160156]
[77.59333038 199.23994446]
[73.22010803 213.58828735]
[68.84687805 227.93663025]
[64.47365570 242.28497314]
[60.10043335 256.63330078]
[91.24069977 288.61224365]
[90.39587402 303.58843994]
[89.55104828 318.56460571]
[88.70622253 333.54080200]
[87.86140442 348.51699829]
[87.01657867 363.49319458]
[86.17175293 378.46939087]
[85.32692719 393.44555664]
[84.48210144 408.42175293]
[83.63727570 423.39794922]
[96.18534088 432.37289429]
[101.86798859 446.71554565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 220]
[8 219]
[9 218]
[10 217]
[11 216]
[12 215]
[13 214]
[14 213]
[15 212]
[16 211]
[22 33]
[23 32]
[24 31]
[25 30]
[34 210]
[35 209]
[36 208]
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[48 95]
[49 94]
[50 93]
[51 92]
[52 91]
[53 90]
[56 84]
[57 83]
[58 82]
[59 81]
[60 80]
[62 78]
[63 77]
[64 76]
[65 74]
[66 73]
[98 111]
[99 110]
[100 109]
[101 108]
[112 132]
[113 131]
[114 130]
[115 129]
[117 126]
[118 125]
[119 124]
[137 200]
[138 199]
[139 198]
[140 197]
[141 196]
[142 195]
[143 194]
[154 190]
[155 189]
[156 188]
[157 187]
[158 186]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
