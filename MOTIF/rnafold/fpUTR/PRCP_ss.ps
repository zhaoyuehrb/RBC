%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUCCUCGGGGAUGGGGGCGGAGUGGCUGUGGUGACCUGGCUUGGGCGGCGUCUCUGAGGAGCUGGCUGGCUUUGGGUUUCCCCUGGGAGGAGCUGUUUUGCGGCGGGCGGAGCUGCAGGCUGGGCAGGGCUUAGCCUGUGCGCUUCUGCUGGCCUCCUUUUCGCCCUCCCACCCGCACUGCAGUCUCCAGCCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[77.57816315 522.47448730]
[62.53667068 525.90332031]
[48.03696823 520.63433838]
[38.70586014 508.34884644]
[37.52086639 492.96704102]
[44.86011124 479.39727783]
[58.38167572 471.96954346]
[59.31422043 456.99856567]
[60.24676514 442.02758789]
[61.17930984 427.05661011]
[62.11185455 412.08563232]
[63.04439926 397.11462402]
[55.27499008 387.83709717]
[55.93395233 375.35247803]
[65.21274567 366.38647461]
[66.37799835 351.43182373]
[67.54325867 336.47714233]
[68.70851898 321.52249146]
[69.87377167 306.56781006]
[71.03903198 291.61312866]
[72.20429230 276.65847778]
[64.88502502 269.51547241]
[62.66285324 259.30776978]
[66.50857544 249.35873413]
[75.37631226 243.04441833]
[77.00608826 228.13322449]
[78.63587189 213.22203064]
[80.26565552 198.31083679]
[77.86559296 191.31495667]
[82.03849030 183.18106079]
[83.89997101 168.29701233]
[85.76145172 153.41296387]
[87.62293243 138.52891541]
[89.48441315 123.64486694]
[78.62421417 114.58536530]
[74.14869690 101.16938782]
[59.61071396 97.47520447]
[45.07273102 93.78102112]
[30.53474426 90.08683777]
[15.99676037 86.39265442]
[1.40308213 82.92501068]
[-13.24275875 79.68473816]
[-27.88860130 76.44447327]
[-42.53444290 73.20420837]
[-51.59692764 74.40615845]
[-57.38202286 69.79798889]
[-71.97570038 66.33034515]
[-87.19073486 70.66777802]
[-97.78456116 60.19782639]
[-112.37824249 56.73017883]
[-126.97192383 53.26253510]
[-141.56559753 49.79489136]
[-156.78062439 54.13232803]
[-167.37446594 43.66237259]
[-181.96813965 40.19472885]
[-196.56181335 36.72708511]
[-213.36967468 38.94800568]
[-220.15667725 23.41182709]
[-207.10649109 12.58921719]
[-193.09417725 22.13340569]
[-178.50050354 25.60104942]
[-163.90681458 29.06869507]
[-149.73562622 24.48322678]
[-138.09796143 35.20121384]
[-123.50427246 38.66885757]
[-108.91059875 42.13650131]
[-94.31691742 45.60414505]
[-80.14572144 41.01868057]
[-68.50805664 51.73666382]
[-53.91437531 55.20430756]
[-39.29417419 58.55836487]
[-24.64833260 61.79863358]
[-10.00249195 65.03890228]
[4.64334965 68.27916718]
[9.08579826 66.50811768]
[14.68836308 67.51409912]
[19.69094467 71.85466766]
[34.22892761 75.54885101]
[48.76691437 79.24303436]
[63.30489731 82.93721771]
[77.84288025 86.63140106]
[82.31024170 81.11270905]
[88.10932922 77.01589203]
[94.80356598 74.64937592]
[101.88900757 74.19130707]
[108.83223724 75.67617035]
[115.11055756 78.99218750]
[127.02268219 69.87619781]
[138.93479919 60.76020432]
[150.84693909 51.64421463]
[162.75906372 42.52822495]
[174.67118835 33.41223526]
[186.58331299 24.29624367]
[191.50112915 16.58986092]
[198.75231934 15.13282871]
[210.80476379 6.20319605]
[206.04328918 -8.14203835]
[205.94903564 -23.23619652]
[210.51863098 -37.60098267]
[219.29260254 -49.83341980]
[231.40144348 -58.74288940]
[245.65184021 -63.46698761]
[260.64425659 -63.55501556]
[274.91033936 -59.01093674]
[287.05682373 -50.29175568]
[299.10928345 -59.22138977]
[311.16174316 -68.15102386]
[317.64404297 -82.58328247]
[332.47644043 -83.94304657]
[344.52890015 -92.87268066]
[356.58135986 -101.80231476]
[368.63381958 -110.73194122]
[380.68627930 -119.66157532]
[392.73870850 -128.59121704]
[404.72137451 -137.61428833]
[416.63351440 -146.73028564]
[428.47436523 -155.93862915]
[440.24328613 -165.23876953]
[452.01220703 -174.53890991]
[463.78112793 -183.83906555]
[475.55001831 -193.13920593]
[487.31893921 -202.43934631]
[499.08786011 -211.73948669]
[510.85678101 -221.03962708]
[522.62567139 -230.33978271]
[534.39459229 -239.63992310]
[546.16351318 -248.94006348]
[557.93243408 -258.24020386]
[566.61096191 -272.80453491]
[583.00854492 -268.49700928]
[583.40863037 -251.54777527]
[567.23254395 -246.47129822]
[555.46368408 -237.17114258]
[543.69476318 -227.87100220]
[531.92584229 -218.57086182]
[520.15692139 -209.27072144]
[508.38800049 -199.97058105]
[496.61907959 -190.67042542]
[484.85018921 -181.37028503]
[473.08126831 -172.07014465]
[461.31234741 -162.77000427]
[449.54342651 -153.46986389]
[437.77450562 -144.16972351]
[434.47323608 -137.55125427]
[425.74948120 -134.81816101]
[413.83737183 -125.70217133]
[410.43353271 -119.13584900]
[401.66836548 -116.53875732]
[389.61590576 -107.60912323]
[377.56344604 -98.67948914]
[365.51098633 -89.74985504]
[353.45852661 -80.82022095]
[341.40609741 -71.89059448]
[335.78585815 -58.09703445]
[320.09136963 -56.09856796]
[308.03890991 -47.16893387]
[295.98645020 -38.23930359]
[300.79049683 -24.08012962]
[300.98312378 -9.10905552]
[296.53289795 5.20791435]
[287.86361694 17.46494102]
[275.81405640 26.45438766]
[261.55667114 31.28580284]
[246.48376465 31.47411728]
[232.07127380 26.98830032]
[219.73440552 18.25564957]
[207.68194580 27.18528366]
[195.69929504 36.20836639]
[183.78717041 45.32435989]
[171.87504578 54.44034958]
[159.96292114 63.55633926]
[148.05079651 72.67233276]
[136.13867188 81.78832245]
[124.22654724 90.90431213]
[122.44423676 112.88073730]
[104.36846161 125.50634766]
[102.50698090 140.39039612]
[100.64550018 155.27444458]
[98.78401947 170.15849304]
[96.92253876 185.04254150]
[95.17685699 199.94061279]
[93.54707336 214.85180664]
[91.91728973 229.76300049]
[90.28750610 244.67420959]
[99.23908234 262.73080444]
[87.15895844 277.82373047]
[85.99370575 292.77838135]
[84.82844543 307.73306274]
[83.66318512 322.68774414]
[82.49793243 337.64239502]
[81.33267212 352.59707642]
[80.16741180 367.55175781]
[88.49252319 383.97280884]
[78.01538086 398.04718018]
[77.08283997 413.01815796]
[76.15029144 427.98916626]
[75.21775055 442.96014404]
[74.28520203 457.93112183]
[73.35266113 472.90209961]
[85.84793091 481.95040894]
[91.44644928 496.32608032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[25 184]
[26 183]
[27 182]
[28 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[36 81]
[37 80]
[38 79]
[39 78]
[40 77]
[41 74]
[42 73]
[43 72]
[44 71]
[46 70]
[47 69]
[49 67]
[50 66]
[51 65]
[52 64]
[54 62]
[55 61]
[56 60]
[87 174]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[95 167]
[96 166]
[105 157]
[106 156]
[107 155]
[109 153]
[110 152]
[111 151]
[112 150]
[113 149]
[114 148]
[115 146]
[116 145]
[117 143]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
