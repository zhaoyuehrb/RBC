%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAGGUUAGUUUCAGACAAGCCUGCUUGCCGGAGCUCAGCAGACACCAGGCCUUCCGGGCAGGCCUGGCCCACCGUGGGCCUCAGAGCUGCUGCUGGGGCAUUCAGAACCGGCUCUCCAUUGGCAUUGGGACCAGAGACCCCGCAAGUGGCCUGUUUGCCUGGACAUCCACCUGUACGUCCCCAGGUUUCGGGAGGCCCAGGGGCG\
) } def
/len { sequence length } bind def

/coor [
[351.01333618 590.84954834]
[354.47540283 578.42309570]
[347.90887451 564.93676758]
[341.34237671 551.45043945]
[334.77584839 537.96411133]
[328.20935059 524.47778320]
[321.64282227 510.99148560]
[304.01113892 506.07440186]
[295.42346191 489.54867554]
[301.74649048 471.69189453]
[294.77563477 458.41006470]
[287.80477905 445.12820435]
[280.83395386 431.84637451]
[273.56399536 418.72586060]
[265.99868774 405.77340698]
[258.43338013 392.82095337]
[250.86808777 379.86849976]
[243.30278015 366.91601562]
[235.73747253 353.96356201]
[222.63728333 346.87594604]
[222.35826111 331.05718994]
[214.79295349 318.10473633]
[207.22764587 305.15228271]
[201.13822937 300.96099854]
[199.64758301 291.94659424]
[192.27876282 278.88134766]
[184.90994263 265.81610107]
[177.54112244 252.75085449]
[170.17230225 239.68562317]
[162.80348206 226.62037659]
[149.81184387 219.33570862]
[149.77175903 203.51454163]
[142.40293884 190.44931030]
[128.03111267 186.70947266]
[120.37197113 173.56443787]
[124.39210510 158.51530457]
[117.02328491 145.45005798]
[109.65446472 132.38482666]
[101.70867157 134.33186340]
[93.38902283 134.32458496]
[85.17708588 132.29743958]
[77.56378937 128.30364990]
[71.02014160 122.51576233]
[65.96825409 115.21904755]
[62.75442886 106.79772949]
[61.62607574 97.71497345]
[62.71389008 88.48745728]
[47.95959091 85.78363037]
[33.20529175 83.07980347]
[18.45099449 80.37597656]
[3.69669580 77.67214966]
[-11.05760288 74.96833038]
[-25.81190109 72.26450348]
[-40.56620026 69.56067657]
[-52.49631500 79.67039490]
[-68.13388062 79.69466400]
[-80.09531403 69.62201691]
[-82.73279572 54.20846558]
[-74.80098724 40.73180389]
[-60.04504013 35.55530167]
[-45.43227005 41.12314987]
[-37.86237335 54.80637741]
[-23.10807610 57.51020432]
[-8.35377693 60.21402740]
[6.40052128 62.91785431]
[21.15481949 65.62168121]
[35.90911865 68.32550812]
[50.66341782 71.02932739]
[65.41771698 73.73315430]
[76.41716003 63.53451920]
[74.83421326 48.61827850]
[73.25126648 33.70203781]
[71.66831970 18.78579330]
[69.74787140 3.90923977]
[67.49090576 -10.91999149]
[65.23393250 -25.74922180]
[62.86504364 -40.56098557]
[60.38436508 -55.35443878]
[57.90368652 -70.14788818]
[47.19498444 -59.64438248]
[32.28817749 -61.31385803]
[24.16830635 -73.92606354]
[28.81901550 -88.18688202]
[42.81313324 -93.58731079]
[55.83823776 -86.14764404]
[54.48075485 -101.08609009]
[53.12327194 -116.02453613]
[51.76578903 -130.96298218]
[50.40830612 -145.90142822]
[49.05082321 -160.83988953]
[47.69334030 -175.77833557]
[34.53015137 -183.78062439]
[28.67144203 -197.83511353]
[32.17054367 -212.47138977]
[43.48172379 -222.12515259]
[42.12424088 -237.06359863]
[40.76675797 -252.00204468]
[39.40927124 -266.94049072]
[28.05517960 -278.27468872]
[29.98057938 -294.20181274]
[43.70846939 -302.50387573]
[58.70798492 -296.81231689]
[63.47278595 -281.49316406]
[54.34772110 -268.29797363]
[55.70520401 -253.35952759]
[57.06268692 -238.42108154]
[58.42016983 -223.48263550]
[71.28620911 -216.02589417]
[77.36625671 -202.26010132]
[74.13690948 -187.37976074]
[62.63179016 -177.13581848]
[63.98927307 -162.19737244]
[65.34675598 -147.25891113]
[66.70423889 -132.32046509]
[68.06172180 -117.38201904]
[69.41920471 -102.44357300]
[70.77668762 -87.50512695]
[72.69713593 -72.62857056]
[75.17781830 -57.83511734]
[77.65849304 -43.04166794]
[81.86594391 -36.96340179]
[80.06316376 -28.00618935]
[82.32013702 -13.17695904]
[84.57710266 1.65227211]
[87.18740082 4.02592897]
[88.77658081 7.78280163]
[88.70660400 12.42866039]
[86.58456421 17.20284653]
[88.16751099 32.11908722]
[89.75045776 47.03533173]
[91.33340454 61.95157242]
[111.28416443 63.73813248]
[127.18598175 75.00344086]
[135.03720093 92.24508667]
[133.20162964 110.55570984]
[122.71970367 125.01599884]
[130.08851624 138.08123779]
[137.45733643 151.14648438]
[152.41587830 155.49160767]
[159.70278931 168.84658813]
[155.46818542 183.08049011]
[162.83700562 196.14573669]
[176.35571289 204.36491394]
[175.86872864 219.25155640]
[183.23754883 232.31680298]
[190.60636902 245.38203430]
[197.97518921 258.44726562]
[205.34400940 271.51251221]
[212.71282959 284.57775879]
[220.18009949 297.58697510]
[227.74540710 310.53942871]
[235.31071472 323.49188232]
[248.95201111 331.50598145]
[248.68992615 346.39825439]
[256.25524902 359.35070801]
[263.82052612 372.30319214]
[271.38583374 385.25564575]
[278.95114136 398.20809937]
[286.51644897 411.16055298]
[291.05514526 413.74826050]
[293.86492920 417.44882202]
[294.81149292 421.41662598]
[294.11578369 424.87551880]
[301.08663940 438.15737915]
[308.05746460 451.43920898]
[315.02832031 464.72103882]
[326.85263062 465.98159790]
[336.50085449 472.72534180]
[341.64157104 483.18151855]
[341.10101318 494.70050049]
[335.12915039 504.42495728]
[341.69564819 517.91131592]
[348.26217651 531.39758301]
[354.82870483 544.88391113]
[361.39520264 558.37023926]
[367.96173096 571.85656738]
[383.45556641 581.80554199]
[381.54040527 599.24871826]
[388.30987549 612.63433838]
[395.07931519 626.01995850]
[401.84878540 639.40557861]
[408.61822510 652.79119873]
[415.38769531 666.17675781]
[430.13403320 671.19500732]
[436.80856323 684.86633301]
[431.93356323 698.89379883]
[438.70300293 712.27941895]
[445.47247314 725.66503906]
[452.24191284 739.05065918]
[459.01138306 752.43627930]
[473.02639771 760.95159912]
[472.38894653 777.33837891]
[457.75479126 784.73925781]
[444.17828369 775.54083252]
[445.62576294 759.20568848]
[438.85632324 745.82012939]
[432.08685303 732.43450928]
[425.31741333 719.04888916]
[418.54794312 705.66326904]
[404.36029053 701.27630615]
[397.30441284 687.79785156]
[402.00207520 672.94622803]
[395.23263550 659.56060791]
[388.46316528 646.17498779]
[381.69372559 632.78942871]
[374.92425537 619.40380859]
[368.15481567 606.01818848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[10 166]
[11 165]
[12 164]
[13 163]
[14 159]
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[21 152]
[22 151]
[23 150]
[25 149]
[26 148]
[27 147]
[28 146]
[29 145]
[30 144]
[32 142]
[33 141]
[36 138]
[37 137]
[38 136]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[70 131]
[71 130]
[72 129]
[73 128]
[74 124]
[75 123]
[76 122]
[77 120]
[78 119]
[79 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[95 107]
[96 106]
[97 105]
[98 104]
[178 207]
[179 206]
[180 205]
[181 204]
[182 203]
[183 202]
[186 199]
[187 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
