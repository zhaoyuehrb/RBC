%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM86B2)
} def

/sequence { (\
CUCUUCAGUCCAGGCCCGGCUUCCUCCAGGUCUCCCGGCAACGGCUGCGGCCUCGCCCACGUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.089068876 ubox
1 13 0.003414557 ubox
1 50 0.009671539 ubox
2 7 0.083158446 ubox
2 12 0.004124947 ubox
2 49 0.009549049 ubox
2 50 0.008713410 ubox
3 13 0.005646341 ubox
3 49 0.011929374 ubox
3 50 0.044454837 ubox
4 12 0.006470860 ubox
4 49 0.044459718 ubox
4 50 0.004091453 ubox
5 12 0.005968846 ubox
5 40 0.003246706 ubox
5 49 0.005283105 ubox
6 13 0.005003954 ubox
6 47 0.150607900 ubox
7 33 0.008200348 ubox
7 46 0.155572214 ubox
7 53 0.004311920 ubox
7 63 0.006967637 ubox
8 32 0.008736704 ubox
8 39 0.092490281 ubox
8 42 0.006102859 ubox
8 45 0.156593791 ubox
8 51 0.003517699 ubox
8 56 0.554965232 ubox
8 60 0.166824831 ubox
8 62 0.005290127 ubox
9 38 0.089955136 ubox
9 41 0.005683963 ubox
9 44 0.153260730 ubox
9 50 0.003492448 ubox
9 55 0.546920938 ubox
9 59 0.162683716 ubox
9 61 0.003548937 ubox
10 30 0.008825372 ubox
10 37 0.089737394 ubox
10 38 0.026314808 ubox
10 43 0.151925883 ubox
10 44 0.031639336 ubox
10 49 0.003488600 ubox
11 29 0.008819576 ubox
11 37 0.026541941 ubox
11 43 0.031748704 ubox
11 47 0.003196165 ubox
12 33 0.140634901 ubox
12 53 0.924537080 ubox
13 27 0.008281513 ubox
13 32 0.146932780 ubox
13 33 0.004453664 ubox
13 35 0.008720323 ubox
13 36 0.005286263 ubox
13 52 0.975667009 ubox
13 53 0.004396629 ubox
13 54 0.003727898 ubox
13 57 0.018810699 ubox
14 26 0.008286263 ubox
14 31 0.147063592 ubox
14 32 0.004911801 ubox
14 34 0.008650825 ubox
14 35 0.005225984 ubox
14 39 0.158187795 ubox
14 51 0.975924322 ubox
14 52 0.003420483 ubox
14 56 0.018850975 ubox
15 30 0.147203960 ubox
15 38 0.153271127 ubox
15 50 0.975922245 ubox
15 55 0.018833674 ubox
16 29 0.147094771 ubox
16 30 0.005587277 ubox
16 37 0.148044386 ubox
16 38 0.044978373 ubox
16 49 0.975788756 ubox
16 50 0.004659286 ubox
17 29 0.006591508 ubox
17 37 0.060109272 ubox
17 47 0.974853668 ubox
17 49 0.006319236 ubox
18 24 0.010641540 ubox
18 25 0.007484643 ubox
18 26 0.006004024 ubox
18 27 0.146524748 ubox
18 32 0.020961775 ubox
18 33 0.006153313 ubox
18 35 0.141448023 ubox
18 36 0.071631387 ubox
18 46 0.974968853 ubox
18 48 0.006273380 ubox
18 52 0.011545855 ubox
19 23 0.010497217 ubox
19 24 0.007679117 ubox
19 25 0.004959844 ubox
19 26 0.145178204 ubox
19 31 0.021626576 ubox
19 32 0.006410223 ubox
19 34 0.141385374 ubox
19 35 0.071274086 ubox
19 45 0.975765025 ubox
19 48 0.012998459 ubox
19 51 0.011557821 ubox
20 29 0.006768399 ubox
20 30 0.025348737 ubox
20 44 0.975571030 ubox
20 47 0.013440276 ubox
20 50 0.011493486 ubox
21 28 0.006495842 ubox
21 29 0.025150279 ubox
21 41 0.028888342 ubox
21 43 0.939684516 ubox
21 44 0.004895629 ubox
21 49 0.010789668 ubox
22 28 0.022349425 ubox
22 29 0.003277884 ubox
22 30 0.010484907 ubox
22 38 0.006309711 ubox
22 40 0.059542515 ubox
22 43 0.032878135 ubox
23 29 0.012046353 ubox
23 30 0.157802687 ubox
23 37 0.006336346 ubox
23 38 0.050375889 ubox
23 43 0.016480186 ubox
23 44 0.015833090 ubox
24 29 0.157466894 ubox
24 30 0.011508462 ubox
24 37 0.050362285 ubox
24 38 0.029352128 ubox
24 43 0.018182382 ubox
25 29 0.010484239 ubox
25 37 0.028033758 ubox
25 38 0.026806344 ubox
25 43 0.004630692 ubox
26 37 0.028829783 ubox
26 38 0.961027622 ubox
26 43 0.010212266 ubox
26 44 0.008405604 ubox
27 37 0.960554807 ubox
27 43 0.009083024 ubox
27 47 0.006681942 ubox
28 46 0.006696515 ubox
28 53 0.003309500 ubox
29 35 0.706975524 ubox
29 36 0.660593870 ubox
29 45 0.006667200 ubox
29 52 0.003515980 ubox
30 34 0.696055027 ubox
30 35 0.655958383 ubox
30 39 0.048816460 ubox
30 51 0.003517239 ubox
31 38 0.048793261 ubox
31 50 0.003477544 ubox
32 37 0.048436016 ubox
32 49 0.003451461 ubox
34 50 0.003475951 ubox
35 44 0.024579372 ubox
35 49 0.003552779 ubox
36 43 0.028502442 ubox
36 47 0.005904225 ubox
36 61 0.008835742 ubox
37 42 0.030029910 ubox
37 46 0.006108998 ubox
37 57 0.109754407 ubox
37 58 0.015793598 ubox
37 60 0.004659700 ubox
38 45 0.006172151 ubox
38 48 0.006967250 ubox
38 56 0.110277594 ubox
38 57 0.014183636 ubox
39 44 0.006088015 ubox
39 47 0.007030305 ubox
39 55 0.110311573 ubox
40 46 0.006695051 ubox
40 63 0.071540774 ubox
41 62 0.085947938 ubox
42 49 0.003325857 ubox
42 55 0.003807010 ubox
42 61 0.087563635 ubox
43 48 0.003466488 ubox
43 52 0.118745034 ubox
43 57 0.005622057 ubox
43 58 0.010994230 ubox
43 60 0.087160321 ubox
43 63 0.013232174 ubox
44 51 0.119004367 ubox
44 56 0.005712524 ubox
44 57 0.011111992 ubox
44 62 0.018498245 ubox
45 50 0.118994995 ubox
45 55 0.005692056 ubox
45 61 0.020043894 ubox
46 59 0.042331610 ubox
46 61 0.004110186 ubox
47 56 0.083873032 ubox
47 58 0.049481472 ubox
47 60 0.008913302 ubox
47 62 0.009347961 ubox
48 55 0.084868597 ubox
48 61 0.019931920 ubox
49 54 0.083741224 ubox
49 57 0.148826372 ubox
49 58 0.025851844 ubox
49 60 0.016179393 ubox
50 56 0.149554330 ubox
50 57 0.024069162 ubox
50 62 0.003814704 ubox
51 55 0.148754102 ubox
51 61 0.004130400 ubox
54 61 0.240370317 ubox
55 60 0.242717494 ubox
55 62 0.156432498 ubox
56 61 0.162781517 ubox
12 53 0.9500000 lbox
13 52 0.9500000 lbox
14 51 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
21 43 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
showpage
end
%%EOF
