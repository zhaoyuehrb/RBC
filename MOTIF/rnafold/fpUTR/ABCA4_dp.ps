%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABCA4)
} def

/sequence { (\
AGGACACAGCGUCCGGAGCCAGAGGCGCUCUUAACGGCGUUUAUGUCCUUUGCUGUCUGAGGGGCCUCAGCUCUGACCAAUCUGGUCUUCGUGUGGUCAUUAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 49 0.005953901 ubox
1 88 0.009453495 ubox
1 89 0.158699106 ubox
1 101 0.066032660 ubox
2 14 0.865075710 ubox
2 48 0.006851577 ubox
2 87 0.007016368 ubox
2 88 0.226321857 ubox
2 89 0.007343807 ubox
2 90 0.010518190 ubox
2 98 0.221511088 ubox
2 100 0.066198888 ubox
2 101 0.012460772 ubox
3 13 0.866387832 ubox
3 47 0.006856239 ubox
3 86 0.003690296 ubox
3 87 0.233976980 ubox
3 89 0.006245086 ubox
3 97 0.123964130 ubox
3 98 0.362610618 ubox
3 101 0.005162152 ubox
4 12 0.866207669 ubox
4 46 0.006855789 ubox
4 86 0.234050964 ubox
4 88 0.005790759 ubox
4 94 0.043541613 ubox
4 97 0.361634367 ubox
4 100 0.005151501 ubox
5 11 0.865539669 ubox
5 45 0.006855010 ubox
5 84 0.003931668 ubox
5 85 0.233753828 ubox
5 93 0.044970406 ubox
5 95 0.301194378 ubox
5 96 0.317757406 ubox
6 12 0.004363332 ubox
6 44 0.006633407 ubox
6 83 0.004910673 ubox
6 92 0.045156754 ubox
6 94 0.347215416 ubox
6 97 0.004583191 ubox
7 11 0.005966276 ubox
7 84 0.232888795 ubox
7 91 0.045082363 ubox
7 93 0.349364413 ubox
7 95 0.149870276 ubox
7 96 0.004904273 ubox
8 41 0.005913109 ubox
8 83 0.233172071 ubox
8 88 0.004683899 ubox
8 89 0.008234605 ubox
8 92 0.286124610 ubox
8 94 0.134340743 ubox
9 40 0.006672970 ubox
9 82 0.232221541 ubox
9 86 0.003749243 ubox
9 87 0.005193633 ubox
9 88 0.007263147 ubox
9 92 0.320443115 ubox
9 94 0.024317397 ubox
9 104 0.005704092 ubox
10 39 0.006815090 ubox
10 85 0.004124872 ubox
10 91 0.420809354 ubox
10 93 0.034659326 ubox
10 103 0.005746445 ubox
11 38 0.006813522 ubox
11 77 0.216152996 ubox
11 81 0.022827161 ubox
11 90 0.406963510 ubox
11 92 0.025663825 ubox
12 37 0.004322020 ubox
12 76 0.216915236 ubox
12 80 0.022081369 ubox
12 91 0.008739194 ubox
13 36 0.004235291 ubox
13 37 0.005267869 ubox
13 75 0.155103020 ubox
13 84 0.003192624 ubox
13 85 0.006259291 ubox
13 96 0.003990911 ubox
14 36 0.005300682 ubox
14 75 0.271113424 ubox
14 84 0.006115780 ubox
14 91 0.020617774 ubox
14 95 0.004181050 ubox
15 31 0.004666748 ubox
15 35 0.004798957 ubox
15 73 0.032321670 ubox
15 74 0.891211367 ubox
15 83 0.004092827 ubox
15 88 0.008522173 ubox
15 89 0.004920802 ubox
15 90 0.020981312 ubox
15 98 0.007801530 ubox
15 101 0.004404589 ubox
16 30 0.006526018 ubox
16 72 0.014090273 ubox
16 73 0.998286388 ubox
16 82 0.003267258 ubox
16 89 0.005661550 ubox
16 98 0.010469049 ubox
17 29 0.006524436 ubox
17 72 0.999140609 ubox
17 88 0.005102591 ubox
17 97 0.008920515 ubox
18 28 0.006478387 ubox
18 71 0.999447014 ubox
18 87 0.004304086 ubox
18 97 0.014902979 ubox
19 27 0.006458514 ubox
19 70 0.998223216 ubox
19 85 0.004529565 ubox
19 96 0.017808320 ubox
20 84 0.004530133 ubox
20 95 0.017814278 ubox
21 83 0.004488145 ubox
21 94 0.015886867 ubox
22 68 0.997783947 ubox
22 82 0.003844209 ubox
23 67 0.999640132 ubox
23 81 0.003218383 ubox
24 66 0.999959587 ubox
25 65 0.999965071 ubox
26 64 0.999274139 ubox
28 61 0.032058322 ubox
28 62 0.309574957 ubox
28 63 0.948530474 ubox
29 60 0.038553066 ubox
29 61 0.051663752 ubox
29 62 0.949518886 ubox
29 63 0.003625871 ubox
30 59 0.039887896 ubox
30 61 0.997716830 ubox
30 62 0.006429512 ubox
31 60 0.997910582 ubox
31 61 0.006177121 ubox
32 59 0.995724958 ubox
32 60 0.007214055 ubox
33 58 0.969721369 ubox
34 56 0.986927477 ubox
35 55 0.999541654 ubox
36 47 0.004077229 ubox
36 54 0.999105829 ubox
36 57 0.011588702 ubox
37 46 0.004351839 ubox
37 53 0.999875806 ubox
37 56 0.011775558 ubox
38 45 0.005335834 ubox
38 52 0.999724231 ubox
38 55 0.011795734 ubox
39 44 0.006198347 ubox
39 46 0.011308238 ubox
39 51 0.924875001 ubox
39 53 0.009110280 ubox
39 54 0.006447216 ubox
40 45 0.034134319 ubox
40 52 0.009110446 ubox
42 52 0.004125211 ubox
43 51 0.020864715 ubox
45 51 0.011608149 ubox
57 103 0.006324265 ubox
58 102 0.006428370 ubox
59 101 0.006429526 ubox
60 100 0.006354374 ubox
63 98 0.007109383 ubox
64 97 0.007206131 ubox
65 96 0.007248554 ubox
66 95 0.007239700 ubox
68 93 0.006657725 ubox
69 92 0.006444649 ubox
70 92 0.012259777 ubox
70 104 0.024192814 ubox
71 91 0.013128305 ubox
71 93 0.003184227 ubox
71 103 0.024402570 ubox
72 102 0.023655927 ubox
74 91 0.003951552 ubox
74 99 0.361658883 ubox
74 102 0.004526602 ubox
75 82 0.003662482 ubox
75 87 0.669203815 ubox
75 90 0.007929163 ubox
75 98 0.671454586 ubox
76 81 0.003338221 ubox
76 86 0.698112913 ubox
76 89 0.006248944 ubox
76 97 0.672062293 ubox
77 85 0.701726965 ubox
77 96 0.672223156 ubox
78 84 0.701625518 ubox
78 93 0.003360013 ubox
78 95 0.671995751 ubox
79 83 0.568622148 ubox
79 89 0.006274492 ubox
79 92 0.006292165 ubox
79 94 0.596771683 ubox
80 86 0.017824113 ubox
80 88 0.011641682 ubox
80 92 0.138442811 ubox
80 94 0.257525110 ubox
81 85 0.016645761 ubox
81 91 0.129040994 ubox
81 93 0.360127242 ubox
82 103 0.007391917 ubox
83 91 0.479349336 ubox
83 93 0.032930226 ubox
83 99 0.009143772 ubox
83 102 0.007495497 ubox
84 90 0.580291221 ubox
84 92 0.035375728 ubox
84 94 0.003874537 ubox
84 98 0.010177178 ubox
84 101 0.007464689 ubox
85 89 0.377032454 ubox
85 92 0.010423780 ubox
85 97 0.009771434 ubox
85 100 0.007298728 ubox
86 91 0.010182616 ubox
86 93 0.009366144 ubox
86 96 0.007248258 ubox
86 99 0.006785057 ubox
87 95 0.009072479 ubox
87 96 0.011461241 ubox
87 103 0.015167520 ubox
88 95 0.019488034 ubox
88 96 0.009382112 ubox
88 102 0.039532336 ubox
88 103 0.119120123 ubox
89 95 0.009862518 ubox
89 96 0.056284935 ubox
89 102 0.147763920 ubox
90 95 0.077631146 ubox
91 97 0.005280461 ubox
91 100 0.353517469 ubox
91 104 0.051258077 ubox
92 96 0.004230097 ubox
92 99 0.369844019 ubox
92 102 0.023386301 ubox
92 103 0.050300061 ubox
93 98 0.373512138 ubox
93 100 0.021810987 ubox
93 101 0.025001238 ubox
93 104 0.081684133 ubox
94 99 0.022134482 ubox
94 102 0.029827499 ubox
94 103 0.082114022 ubox
95 101 0.032746391 ubox
96 100 0.022263215 ubox
96 104 0.041609003 ubox
97 103 0.041095855 ubox
2 14 0.9500000 lbox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
15 74 0.9500000 lbox
16 73 0.9500000 lbox
17 72 0.9500000 lbox
18 71 0.9500000 lbox
19 70 0.9500000 lbox
22 68 0.9500000 lbox
23 67 0.9500000 lbox
24 66 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
28 63 0.9500000 lbox
29 62 0.9500000 lbox
30 61 0.9500000 lbox
31 60 0.9500000 lbox
32 59 0.9500000 lbox
33 58 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
75 87 0.9500000 lbox
76 86 0.9500000 lbox
77 85 0.9500000 lbox
78 84 0.9500000 lbox
79 83 0.9500000 lbox
showpage
end
%%EOF
