%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCUGGGUGAGCCUGGGAGGGAGGAGGUGAGUUGGGCUGGACUCAGGGACCGACUCUUCCCGUCUCAUGACUGUGUUUACUGGGCUGGAUUUUGGGAAGGGGCCAGAUUGCAUCAGACAGGGCCUGAUGGGCUGGAGCCAGACUGUGGUCUGAGGAGGAGACACAGCCUUAUAAGCUGAGGGAGUGGAGAGGCCCGGGGCCAGGAAAGCAGAGACAGACAAAGCGUUAGGAGAAGAAGAGAGGCAGGGAAGAC\
AAGCCAGGCACG\
) } def
/len { sequence length } bind def

/coor [
[-25.06707764 353.87570190]
[-38.20149994 361.12048340]
[-51.33592224 368.36526489]
[-64.47034454 375.61007690]
[-77.60476685 382.85485840]
[-90.73918915 390.09963989]
[-99.08599854 403.53991699]
[-113.96736145 402.91201782]
[-127.10178375 410.15679932]
[-140.23620605 417.40161133]
[-153.37063599 424.64639282]
[-166.50505066 431.89117432]
[-179.63948059 439.13595581]
[-192.77389526 446.38073730]
[-201.12071228 459.82104492]
[-216.00207520 459.19314575]
[-229.13648987 466.43792725]
[-242.27091980 473.68270874]
[-242.67237854 488.97277832]
[-250.62074280 501.92346191]
[-263.89602661 509.10910034]
[-278.88531494 508.68792725]
[-291.56582642 500.87316895]
[-304.70022583 508.11795044]
[-317.83465576 515.36273193]
[-330.96908569 522.60754395]
[-339.31588745 536.04785156]
[-354.19726562 535.41992188]
[-367.33166504 542.66473389]
[-377.00180054 560.37780762]
[-396.31384277 559.07427979]
[-409.27481079 566.62500000]
[-422.23577881 574.17572021]
[-435.19677734 581.72637939]
[-448.15774536 589.27709961]
[-461.11871338 596.82781982]
[-474.07968140 604.37847900]
[-483.33193970 622.31347656]
[-502.66918945 621.46301270]
[-515.44958496 629.31542969]
[-528.23004150 637.16790771]
[-535.55804443 651.83868408]
[-551.94140625 652.55761719]
[-560.52636719 638.58508301]
[-552.48138428 624.29486084]
[-536.08245850 624.38751221]
[-523.30206299 616.53503418]
[-510.52166748 608.68255615]
[-509.06335449 598.61163330]
[-502.17114258 590.82983398]
[-491.92724609 588.05047607]
[-481.63040161 591.41754150]
[-468.66940308 583.86682129]
[-455.70843506 576.31610107]
[-442.74746704 568.76544189]
[-429.78649902 561.21472168]
[-416.82550049 553.66400146]
[-403.86453247 546.11334229]
[-402.17053223 536.07928467]
[-395.09780884 528.46118164]
[-384.79156494 525.92272949]
[-374.57647705 529.53027344]
[-361.44204712 522.28552246]
[-354.03469849 509.36340332]
[-338.21386719 509.47311401]
[-325.07943726 502.22833252]
[-311.94500732 494.98355103]
[-298.81060791 487.73873901]
[-298.65615845 472.84439087]
[-291.01638794 459.94131470]
[-277.85684204 452.54583740]
[-262.66268921 452.73138428]
[-249.51570129 460.54827881]
[-236.38128662 453.30349731]
[-223.24685669 446.05871582]
[-215.83950806 433.13662720]
[-200.01869202 433.24633789]
[-186.88426208 426.00152588]
[-173.74984741 418.75674438]
[-160.61541748 411.51196289]
[-147.48100281 404.26718140]
[-134.34657288 397.02239990]
[-121.21215057 389.77758789]
[-113.80480194 376.85549927]
[-97.98397827 376.96520996]
[-84.84955597 369.72042847]
[-71.71513367 362.47564697]
[-58.58071136 355.23086548]
[-45.44628906 347.98605347]
[-32.31186676 340.74127197]
[-13.35855293 329.05844116]
[3.60883880 332.37286377]
[8.94055653 318.35244751]
[14.27227497 304.33200073]
[19.60399246 290.31155396]
[24.93571091 276.29110718]
[30.26742935 262.27066040]
[20.75199890 250.81108093]
[18.23342323 236.02890015]
[23.48681641 221.87728882]
[35.19518661 212.19168091]
[50.27793884 209.65045166]
[55.60965729 195.63000488]
[60.94137192 181.60957336]
[66.27309418 167.58912659]
[71.60481262 153.56867981]
[54.06032944 144.11129761]
[39.80432129 128.84150696]
[30.76771545 108.94751740]
[28.44026756 86.25554657]
[33.66242599 63.06366730]
[46.47997665 41.90906143]
[66.08214569 25.29232979]
[61.91754532 10.88205147]
[57.75294495 -3.52822614]
[53.58834457 -17.93850327]
[49.42374420 -32.34878159]
[45.25914383 -46.75905991]
[30.88798714 -52.92378616]
[23.88784218 -66.90705872]
[27.56396103 -82.10640717]
[40.18059540 -91.34516144]
[55.78055573 -90.26106262]
[66.99801636 -79.36598969]
[68.53643799 -63.80426788]
[59.66942215 -50.92366028]
[63.83402252 -36.51338196]
[67.99861908 -22.10310364]
[72.16322327 -7.69282627]
[76.32781982 6.71745157]
[80.49242401 21.12772942]
[95.39950562 19.46074295]
[96.27818298 4.48650122]
[97.15685272 -10.48774147]
[89.32366180 -24.89513969]
[98.11386108 -38.73943329]
[114.48484802 -37.77879715]
[121.59555054 -23.00145531]
[112.13109589 -9.60906696]
[111.25241852 5.36517525]
[110.37374878 20.33941650]
[117.55398560 22.50603294]
[128.48669434 12.23589134]
[131.91445923 26.83926582]
[139.09468079 29.00588226]
[146.64538574 16.04490662]
[154.19609070 3.08393025]
[161.74679565 -9.87704563]
[169.29750061 -22.83802223]
[170.90348816 -31.79421997]
[177.01342773 -35.90592957]
[184.71554565 -48.77750778]
[192.41766357 -61.64908218]
[187.12898254 -76.36519623]
[192.58543396 -91.01992798]
[206.21064758 -98.69376373]
[221.57119751 -95.76335144]
[231.41432190 -83.61234283]
[231.09239197 -67.97807312]
[220.75740051 -56.24256897]
[205.28923035 -53.94696808]
[197.58712769 -41.07539368]
[189.88500977 -28.20381737]
[182.25846863 -15.28732014]
[174.70776367 -2.32634401]
[167.15707397 10.63463211]
[159.60636902 23.59560776]
[152.05566406 36.55658340]
[162.96850586 46.84783936]
[175.46492004 38.55087280]
[187.96133423 30.25390625]
[200.45774841 21.95693779]
[212.95414734 13.65997124]
[217.52673340 -1.71764612]
[232.45379639 -7.59662247]
[246.28457642 0.53288966]
[248.40928650 16.43462372]
[237.19802856 27.91013145]
[221.25111389 26.15638351]
[208.75471497 34.45335007]
[196.25830078 42.75031662]
[183.76188660 51.04728699]
[171.26547241 59.34425354]
[176.66880798 77.49021149]
[177.65515137 95.90279388]
[174.39764404 113.54944611]
[167.30131531 129.49223328]
[156.96885681 142.93769836]
[144.15620422 153.27604675]
[129.72106934 160.10780334]
[114.56769562 163.25688171]
[99.59121704 162.76954651]
[85.62525177 158.90040588]
[80.29353333 172.92083740]
[74.96181488 186.94128418]
[69.63009644 200.96173096]
[64.29837799 214.98216248]
[73.88134003 226.90332031]
[76.19536591 241.92138672]
[70.71794891 255.98780823]
[59.01345062 265.36120605]
[44.28786850 267.60238647]
[38.95615387 281.62283325]
[33.62443542 295.64328003]
[28.29271698 309.66372681]
[22.96099854 323.68414307]
[17.62928009 337.70458984]
[29.03006172 327.95666504]
[40.43084335 318.20874023]
[47.01905823 304.73300171]
[55.72218323 292.51596069]
[66.30591583 281.88656616]
[78.48534393 273.13088989]
[91.93257904 266.48471069]
[106.28561401 262.12689209]
[121.15805054 260.17480469]
[136.14950562 260.68096924]
[150.85639954 263.63174438]
[164.88281250 268.94772339]
[177.85115051 276.48580933]
[189.41227722 286.04302979]
[199.25495911 297.36209106]
[207.11422729 310.13830566]
[212.77851868 324.02774048]
[216.09532166 338.65643311]
[216.97535706 353.63058472]
[215.39492798 368.54711914]
[211.39657593 383.00439453]
[205.08795166 396.61325073]
[196.63890076 409.00735474]
[186.27685547 419.85299683]
[174.28077698 428.85821533]
[160.97360229 435.78060913]
[146.71359253 440.43377686]
[131.88462830 442.69247437]
[116.88591003 442.49591064]
[102.12123108 439.84936523]
[87.98806763 434.82406616]
[74.86688232 427.55532837]
[63.11092377 418.23883057]
[53.03666306 407.12533569]
[44.91531372 394.51409912]
[38.96450806 380.74160767]
[28.03316498 370.47000122]
[17.10182190 360.19842529]
[21.77050972 374.45333862]
[35.58906555 381.64260864]
[40.12071228 396.16564941]
[33.18169785 409.29522705]
[37.85038757 423.55017090]
[52.65996170 428.18225098]
[61.89145279 440.65457153]
[61.99516678 456.17129517]
[52.93121719 468.76593018]
[38.18488312 473.59555054]
[23.42643166 468.80310059]
[14.33078384 456.23135376]
[14.39540482 440.71441650]
[23.59544563 428.21884155]
[18.92675781 413.96389771]
[5.56507444 407.48309326]
[0.62729400 393.09304810]
[7.51556921 379.12203979]
[2.84688115 364.86709595]
[-4.13160849 362.11926270]
[-9.62754059 376.07614136]
[-23.58433723 370.57998657]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 90]
[2 89]
[3 88]
[4 87]
[5 86]
[6 85]
[8 83]
[9 82]
[10 81]
[11 80]
[12 79]
[13 78]
[14 77]
[16 75]
[17 74]
[18 73]
[23 68]
[24 67]
[25 66]
[26 65]
[28 63]
[29 62]
[31 58]
[32 57]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[39 48]
[40 47]
[41 46]
[92 207]
[93 206]
[94 205]
[95 204]
[96 203]
[97 202]
[102 197]
[103 196]
[104 195]
[105 194]
[106 193]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[132 141]
[133 140]
[134 139]
[145 168]
[146 167]
[147 166]
[148 165]
[149 164]
[151 163]
[152 162]
[153 161]
[169 183]
[170 182]
[171 181]
[172 180]
[173 179]
[245 264]
[246 263]
[249 260]
[250 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
