%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NOMO1)
} def

/sequence { (\
GCGGCGUGCAGUGUGAGGGGCGGGACCCGGCUGCCGGCGGUGGGUCUAGCUGGGGGAGGUCGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006796933 ubox
1 9 0.144945395 ubox
1 12 0.031856824 ubox
1 14 0.052243139 ubox
1 21 0.071995892 ubox
1 38 0.036339810 ubox
1 41 0.577331901 ubox
1 65 0.012591224 ubox
2 6 0.007053527 ubox
2 8 0.144998324 ubox
2 11 0.033199154 ubox
2 13 0.054071829 ubox
2 15 0.021633641 ubox
2 20 0.072016920 ubox
2 22 0.031627239 ubox
2 36 0.015180987 ubox
2 37 0.034747189 ubox
2 39 0.700721575 ubox
2 40 0.590771583 ubox
2 42 0.125184668 ubox
2 62 0.016984732 ubox
2 64 0.012561791 ubox
3 7 0.089465589 ubox
3 12 0.045559238 ubox
3 14 0.016317903 ubox
3 21 0.027844348 ubox
3 35 0.018447071 ubox
3 38 0.714835829 ubox
3 41 0.125099493 ubox
3 46 0.005726941 ubox
3 61 0.017348901 ubox
3 66 0.283175671 ubox
4 12 0.045520374 ubox
4 14 0.021638855 ubox
4 21 0.059790973 ubox
4 34 0.018354816 ubox
4 38 0.588035236 ubox
4 41 0.003433703 ubox
4 45 0.005757384 ubox
4 60 0.017321623 ubox
4 65 0.285249669 ubox
5 11 0.054589158 ubox
5 13 0.023227204 ubox
5 15 0.020199157 ubox
5 20 0.061851915 ubox
5 22 0.047054187 ubox
5 33 0.018254008 ubox
5 36 0.723061196 ubox
5 37 0.579395548 ubox
5 39 0.125615134 ubox
5 44 0.005766804 ubox
5 59 0.017311087 ubox
5 62 0.010936206 ubox
5 64 0.285218990 ubox
6 12 0.018527918 ubox
6 14 0.016826568 ubox
6 21 0.047637856 ubox
6 26 0.004907754 ubox
6 32 0.016637370 ubox
6 35 0.730250729 ubox
6 38 0.125619508 ubox
6 61 0.011501045 ubox
7 11 0.005299800 ubox
7 13 0.009053718 ubox
7 15 0.048170755 ubox
7 20 0.047260098 ubox
7 22 0.027355969 ubox
7 25 0.004976288 ubox
7 36 0.029442486 ubox
7 37 0.119560981 ubox
7 42 0.005253886 ubox
7 62 0.278002883 ubox
8 12 0.005403707 ubox
8 14 0.056983561 ubox
8 21 0.036691112 ubox
8 31 0.015372406 ubox
8 34 0.934663870 ubox
8 35 0.025469575 ubox
8 41 0.005399273 ubox
8 60 0.035949600 ubox
8 61 0.274335205 ubox
8 65 0.004260349 ubox
9 13 0.057088762 ubox
9 15 0.054944575 ubox
9 20 0.036692805 ubox
9 30 0.015270883 ubox
9 33 0.935222848 ubox
9 40 0.005399662 ubox
9 42 0.005076282 ubox
9 52 0.007000872 ubox
9 59 0.196090446 ubox
9 64 0.004270923 ubox
10 14 0.044621424 ubox
10 32 0.934372135 ubox
10 41 0.005175033 ubox
10 51 0.006780694 ubox
11 21 0.034692870 ubox
11 31 0.930508932 ubox
11 34 0.006176666 ubox
11 38 0.004557434 ubox
11 50 0.006538987 ubox
11 60 0.012744746 ubox
11 65 0.044124995 ubox
12 20 0.034573933 ubox
12 22 0.055633453 ubox
12 29 0.053700507 ubox
12 30 0.844085662 ubox
12 33 0.006071562 ubox
12 37 0.004421675 ubox
12 39 0.005426609 ubox
12 49 0.006004143 ubox
12 52 0.003190507 ubox
12 59 0.030553199 ubox
12 64 0.044177959 ubox
13 21 0.075198910 ubox
13 26 0.007913162 ubox
13 28 0.029518171 ubox
13 31 0.088501466 ubox
13 32 0.003668732 ubox
13 38 0.005596210 ubox
13 65 0.025106555 ubox
14 20 0.074842682 ubox
14 22 0.009175872 ubox
14 25 0.007898003 ubox
14 29 0.250954712 ubox
14 30 0.104746874 ubox
14 36 0.003880584 ubox
14 37 0.005181582 ubox
14 52 0.007733717 ubox
14 59 0.003183582 ubox
14 62 0.043338839 ubox
14 64 0.025092739 ubox
15 21 0.012456160 ubox
15 28 0.270746546 ubox
15 35 0.004946746 ubox
15 61 0.042761773 ubox
16 51 0.007560888 ubox
16 60 0.041829488 ubox
17 27 0.288841795 ubox
17 28 0.869574278 ubox
17 50 0.006699929 ubox
17 51 0.018733450 ubox
17 66 0.017311636 ubox
18 26 0.288079278 ubox
18 27 0.879216356 ubox
18 28 0.131950195 ubox
18 32 0.008281259 ubox
18 50 0.017310961 ubox
18 51 0.034128109 ubox
18 61 0.004982523 ubox
18 65 0.017401972 ubox
18 66 0.013337982 ubox
19 26 0.879124322 ubox
19 27 0.133713743 ubox
19 28 0.004844768 ubox
19 31 0.009553991 ubox
19 35 0.003168307 ubox
19 50 0.026404131 ubox
19 51 0.276049752 ubox
19 60 0.004285306 ubox
19 61 0.064428368 ubox
19 65 0.012534273 ubox
19 66 0.107683267 ubox
20 26 0.133736043 ubox
20 27 0.004882299 ubox
20 34 0.003209136 ubox
20 50 0.279444529 ubox
20 60 0.070323824 ubox
20 65 0.109044077 ubox
21 29 0.029745623 ubox
21 33 0.003230226 ubox
21 49 0.280266486 ubox
21 59 0.070830970 ubox
21 62 0.014992738 ubox
21 64 0.108901566 ubox
22 28 0.030051009 ubox
22 32 0.003225362 ubox
22 47 0.007934590 ubox
22 61 0.015827106 ubox
22 66 0.025491098 ubox
23 27 0.029568009 ubox
23 31 0.003224224 ubox
23 46 0.006691261 ubox
23 47 0.261119455 ubox
23 60 0.015603175 ubox
23 61 0.005919928 ubox
23 65 0.024413470 ubox
23 66 0.154963298 ubox
24 45 0.003539831 ubox
24 46 0.282020282 ubox
24 60 0.003677504 ubox
24 61 0.109401500 ubox
24 65 0.156930408 ubox
25 45 0.282079031 ubox
25 60 0.109716839 ubox
26 44 0.281838332 ubox
26 54 0.077944535 ubox
26 55 0.005446455 ubox
26 59 0.108512612 ubox
26 64 0.162872460 ubox
27 43 0.281535772 ubox
27 44 0.013040895 ubox
27 53 0.078285339 ubox
27 54 0.004581159 ubox
27 58 0.107317366 ubox
27 59 0.013635422 ubox
27 63 0.163155712 ubox
28 42 0.280830202 ubox
28 43 0.018383364 ubox
28 52 0.078582968 ubox
28 53 0.003456440 ubox
28 58 0.018978299 ubox
28 62 0.163158167 ubox
29 41 0.200283766 ubox
29 51 0.078596703 ubox
29 61 0.163136908 ubox
30 38 0.081080137 ubox
30 41 0.189957351 ubox
30 50 0.078673177 ubox
30 60 0.162291872 ubox
31 37 0.081253916 ubox
31 40 0.268656971 ubox
31 49 0.078670623 ubox
31 55 0.009086605 ubox
31 56 0.121427645 ubox
31 58 0.029019614 ubox
31 59 0.152547236 ubox
32 36 0.073202758 ubox
32 39 0.268294788 ubox
32 48 0.076863072 ubox
32 54 0.008553906 ubox
32 55 0.138307321 ubox
32 57 0.038997998 ubox
32 58 0.120931101 ubox
33 38 0.263443968 ubox
33 41 0.019475016 ubox
33 45 0.047602529 ubox
33 47 0.055470353 ubox
34 40 0.021132660 ubox
34 43 0.025446587 ubox
34 44 0.052723736 ubox
34 53 0.158068223 ubox
34 54 0.015876136 ubox
34 55 0.052237829 ubox
34 56 0.103891119 ubox
35 39 0.020988209 ubox
35 42 0.025793425 ubox
35 43 0.052590308 ubox
35 52 0.158860923 ubox
35 53 0.012349503 ubox
35 54 0.052099387 ubox
35 55 0.103942566 ubox
36 41 0.023146293 ubox
36 46 0.051737806 ubox
36 51 0.160919215 ubox
37 45 0.052654774 ubox
37 50 0.161284641 ubox
38 44 0.052717089 ubox
38 49 0.161207488 ubox
38 52 0.112750314 ubox
39 46 0.020841844 ubox
39 47 0.098109087 ubox
39 51 0.113831650 ubox
39 66 0.003724413 ubox
40 45 0.014597871 ubox
40 46 0.110632135 ubox
40 50 0.113987677 ubox
40 65 0.004330273 ubox
41 48 0.014285904 ubox
41 49 0.112841373 ubox
41 52 0.003822297 ubox
41 64 0.004180368 ubox
42 47 0.014695639 ubox
42 51 0.004691138 ubox
42 66 0.070912612 ubox
43 50 0.004804512 ubox
43 65 0.058050651 ubox
43 66 0.917060858 ubox
44 65 0.928609303 ubox
45 63 0.036690099 ubox
45 64 0.929156496 ubox
46 56 0.003189846 ubox
46 62 0.036946375 ubox
46 63 0.929322660 ubox
46 64 0.015651500 ubox
47 62 0.913939508 ubox
47 63 0.015401483 ubox
49 60 0.917330451 ubox
49 65 0.096699298 ubox
50 56 0.009743497 ubox
50 58 0.107484418 ubox
50 59 0.923646389 ubox
50 63 0.020478214 ubox
50 64 0.096778925 ubox
51 55 0.009183254 ubox
51 57 0.119530108 ubox
51 58 0.907248539 ubox
51 62 0.023038004 ubox
51 63 0.096299585 ubox
52 61 0.028718095 ubox
53 60 0.026937364 ubox
53 61 0.096483224 ubox
54 60 0.091805229 ubox
54 61 0.011682698 ubox
55 60 0.011596774 ubox
55 61 0.004536923 ubox
55 66 0.003195397 ubox
56 65 0.003233790 ubox
58 66 0.008236339 ubox
59 65 0.008306332 ubox
60 64 0.007770939 ubox
2 39 0.9500000 lbox
3 38 0.9500000 lbox
5 36 0.9500000 lbox
6 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
showpage
end
%%EOF
