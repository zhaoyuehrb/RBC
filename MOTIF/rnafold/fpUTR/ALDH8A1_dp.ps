%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALDH8A1)
} def

/sequence { (\
AGUCCAGACAGUGGUGGGGACAACCUGAGUGCUCAGUCGUAAAGAGGAAAGGCAGAAUUUUUCCUUGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.005697426 ubox
1 66 0.005437918 ubox
1 69 0.037656258 ubox
2 9 0.020760899 ubox
2 15 0.012560521 ubox
2 21 0.962321239 ubox
2 24 0.007972795 ubox
2 32 0.006526446 ubox
2 68 0.042750441 ubox
3 8 0.019239883 ubox
3 14 0.003218710 ubox
3 18 0.055856987 ubox
3 19 0.019334791 ubox
3 20 0.963522590 ubox
3 23 0.005850225 ubox
3 31 0.005857238 ubox
3 45 0.006094988 ubox
3 48 0.015698670 ubox
3 67 0.040286612 ubox
4 13 0.004379833 ubox
4 14 0.129825041 ubox
4 17 0.074106979 ubox
4 18 0.030604358 ubox
4 19 0.963717494 ubox
4 44 0.008822031 ubox
4 47 0.016789257 ubox
5 13 0.131121941 ubox
5 16 0.075029419 ubox
5 17 0.035901379 ubox
5 18 0.962844848 ubox
5 27 0.005238028 ubox
5 31 0.009966595 ubox
5 46 0.016757910 ubox
5 67 0.006183306 ubox
6 12 0.128785098 ubox
6 15 0.076465091 ubox
6 26 0.005268309 ubox
6 30 0.010162271 ubox
6 33 0.012454261 ubox
6 66 0.004483275 ubox
6 69 0.006145287 ubox
7 25 0.005154092 ubox
7 32 0.013292940 ubox
7 34 0.017505191 ubox
7 38 0.199315085 ubox
7 68 0.006669298 ubox
8 15 0.926634158 ubox
8 30 0.009984060 ubox
8 33 0.016774304 ubox
8 37 0.199558837 ubox
8 40 0.015684832 ubox
9 14 0.931259621 ubox
9 16 0.206946104 ubox
9 27 0.010937949 ubox
9 29 0.010154163 ubox
9 31 0.019668514 ubox
9 36 0.198551322 ubox
9 39 0.016015339 ubox
9 67 0.006066181 ubox
10 15 0.199322720 ubox
10 26 0.010721625 ubox
10 30 0.019604093 ubox
10 33 0.165039943 ubox
10 66 0.004531830 ubox
10 69 0.010661642 ubox
11 21 0.003630274 ubox
11 24 0.007698085 ubox
11 25 0.008516129 ubox
11 32 0.178236221 ubox
11 37 0.003809635 ubox
11 40 0.017091967 ubox
11 68 0.011821703 ubox
12 20 0.003625874 ubox
12 22 0.004420832 ubox
12 23 0.007743457 ubox
12 29 0.004433733 ubox
12 31 0.176846224 ubox
12 35 0.023151881 ubox
12 39 0.037514238 ubox
12 67 0.011371942 ubox
13 21 0.004829037 ubox
13 25 0.028467758 ubox
13 30 0.159007535 ubox
13 33 0.031168939 ubox
13 34 0.024647591 ubox
13 38 0.060099743 ubox
13 66 0.004153629 ubox
13 69 0.024623139 ubox
14 21 0.010083983 ubox
14 24 0.028799176 ubox
14 30 0.004958960 ubox
14 32 0.039596709 ubox
14 33 0.008854810 ubox
14 37 0.055173749 ubox
14 68 0.028360712 ubox
15 20 0.010090073 ubox
15 22 0.018745985 ubox
15 23 0.024439228 ubox
15 27 0.100725092 ubox
15 29 0.004973973 ubox
15 31 0.038949154 ubox
15 35 0.154248562 ubox
15 36 0.004988508 ubox
15 41 0.004097055 ubox
15 67 0.028390948 ubox
16 21 0.024649224 ubox
16 25 0.041534315 ubox
16 26 0.133775696 ubox
16 30 0.015119618 ubox
16 34 0.165619220 ubox
16 40 0.004452789 ubox
16 65 0.003308782 ubox
16 66 0.028089519 ubox
17 24 0.041686813 ubox
17 25 0.137327243 ubox
17 26 0.117482097 ubox
17 33 0.165679884 ubox
17 34 0.010326592 ubox
17 64 0.003686221 ubox
17 65 0.028628222 ubox
18 24 0.137449336 ubox
18 25 0.118513807 ubox
18 26 0.006740807 ubox
18 32 0.165861810 ubox
18 33 0.010408937 ubox
18 38 0.006777752 ubox
18 63 0.003689310 ubox
18 64 0.028751851 ubox
18 69 0.003504034 ubox
19 24 0.117851822 ubox
19 25 0.006879958 ubox
19 32 0.010568988 ubox
19 34 0.005394832 ubox
19 37 0.006487760 ubox
19 38 0.034795401 ubox
19 62 0.003651359 ubox
19 63 0.028745755 ubox
19 68 0.004232996 ubox
20 30 0.165330798 ubox
20 33 0.005329198 ubox
20 37 0.034736307 ubox
20 40 0.033969726 ubox
20 61 0.003687647 ubox
20 62 0.028101664 ubox
21 27 0.005758816 ubox
21 29 0.165609238 ubox
21 31 0.009074441 ubox
21 36 0.027030504 ubox
21 39 0.035562820 ubox
21 67 0.004981684 ubox
22 26 0.006204263 ubox
22 30 0.007911512 ubox
22 59 0.003862705 ubox
22 60 0.016140912 ubox
22 61 0.009203756 ubox
22 66 0.005235728 ubox
23 30 0.029504344 ubox
23 37 0.179472619 ubox
23 40 0.253928462 ubox
23 58 0.003926745 ubox
23 59 0.016357182 ubox
23 60 0.008799808 ubox
23 61 0.003519929 ubox
24 29 0.030840203 ubox
24 36 0.134776094 ubox
24 39 0.260640943 ubox
24 47 0.133213860 ubox
24 52 0.009042157 ubox
25 36 0.923776476 ubox
25 44 0.023858826 ubox
25 46 0.133899260 ubox
25 47 0.007215656 ubox
25 51 0.009607839 ubox
25 55 0.012092335 ubox
26 35 0.940602319 ubox
26 39 0.059529769 ubox
26 43 0.023527571 ubox
26 45 0.133082823 ubox
26 46 0.007172029 ubox
26 50 0.009553373 ubox
26 54 0.011990928 ubox
27 34 0.941887444 ubox
27 38 0.095794527 ubox
27 53 0.011837354 ubox
28 33 0.881134870 ubox
28 37 0.095485713 ubox
28 69 0.020261252 ubox
29 40 0.005591651 ubox
29 68 0.022141205 ubox
30 36 0.010203975 ubox
30 39 0.009486183 ubox
30 41 0.148201083 ubox
30 54 0.027536341 ubox
30 67 0.021562057 ubox
31 37 0.011991378 ubox
31 38 0.012664810 ubox
31 40 0.153455055 ubox
31 53 0.028206530 ubox
31 66 0.005565230 ubox
31 68 0.034929108 ubox
32 36 0.013791855 ubox
32 39 0.153633369 ubox
32 44 0.003730847 ubox
32 46 0.016862546 ubox
32 52 0.028140158 ubox
32 67 0.034971282 ubox
33 43 0.003685937 ubox
33 45 0.017088383 ubox
33 48 0.007120232 ubox
33 51 0.022473745 ubox
34 44 0.017246335 ubox
34 47 0.007902419 ubox
34 51 0.013947802 ubox
35 69 0.040098049 ubox
36 68 0.049453116 ubox
37 45 0.053736113 ubox
37 47 0.014510338 ubox
37 48 0.030427330 ubox
37 67 0.048489435 ubox
38 44 0.076573277 ubox
38 46 0.015832696 ubox
38 47 0.031780384 ubox
38 67 0.030401462 ubox
39 66 0.018504566 ubox
39 68 0.677832473 ubox
40 67 0.676010710 ubox
41 66 0.477175912 ubox
42 65 0.285993392 ubox
42 66 0.128172731 ubox
43 65 0.161982153 ubox
43 66 0.052987645 ubox
43 69 0.083344383 ubox
44 63 0.174163265 ubox
44 64 0.188457468 ubox
44 65 0.043690964 ubox
44 66 0.794021884 ubox
44 68 0.087633573 ubox
45 61 0.003263178 ubox
45 62 0.174425935 ubox
45 65 0.920502951 ubox
45 66 0.026195742 ubox
45 69 0.015666820 ubox
46 60 0.003784681 ubox
46 61 0.172888159 ubox
46 62 0.021614697 ubox
46 63 0.194166301 ubox
46 64 0.952792688 ubox
46 65 0.005443621 ubox
46 68 0.017324988 ubox
46 69 0.028112521 ubox
47 59 0.004230190 ubox
47 60 0.172393375 ubox
47 61 0.027981730 ubox
47 62 0.194253367 ubox
47 63 0.952958233 ubox
47 64 0.004501610 ubox
47 68 0.031646175 ubox
48 58 0.004388620 ubox
48 59 0.171681610 ubox
48 60 0.032658357 ubox
48 61 0.204529656 ubox
48 62 0.949895390 ubox
48 66 0.012628385 ubox
49 58 0.166179683 ubox
49 59 0.037078861 ubox
49 60 0.214139947 ubox
49 61 0.945205367 ubox
49 62 0.029158962 ubox
49 65 0.009091133 ubox
49 66 0.070659902 ubox
50 58 0.040744406 ubox
50 59 0.223141451 ubox
50 60 0.936692780 ubox
50 61 0.041112201 ubox
50 65 0.078138908 ubox
50 66 0.004797910 ubox
50 69 0.010877600 ubox
51 58 0.218414134 ubox
51 59 0.903990725 ubox
51 60 0.050279602 ubox
51 61 0.005288906 ubox
51 64 0.079158968 ubox
51 65 0.004994626 ubox
51 68 0.010665334 ubox
51 69 0.111162946 ubox
52 58 0.735651814 ubox
52 59 0.051411199 ubox
52 60 0.007810730 ubox
52 61 0.003215208 ubox
52 63 0.078978413 ubox
52 64 0.005032860 ubox
52 68 0.123555208 ubox
53 67 0.123750680 ubox
54 60 0.009304135 ubox
54 61 0.044219368 ubox
54 62 0.055275586 ubox
54 65 0.052069823 ubox
54 66 0.109158724 ubox
55 59 0.008874989 ubox
55 60 0.038158148 ubox
55 61 0.054430207 ubox
55 62 0.015060636 ubox
55 63 0.061704592 ubox
55 64 0.072005661 ubox
55 65 0.069227651 ubox
55 66 0.006671704 ubox
56 60 0.046540575 ubox
56 61 0.015899116 ubox
56 62 0.063267440 ubox
56 65 0.010695193 ubox
57 61 0.048378500 ubox
2 21 0.9500000 lbox
3 20 0.9500000 lbox
4 19 0.9500000 lbox
5 18 0.9500000 lbox
8 15 0.9500000 lbox
9 14 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
44 66 0.9500000 lbox
45 65 0.9500000 lbox
46 64 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
showpage
end
%%EOF
