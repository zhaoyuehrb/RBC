%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRR34)
} def

/sequence { (\
ACACGCGUCCUCCCCUCGGCGGGGAGGCCGGCUAGGGGCAGGCGGGCAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008958809 ubox
2 7 0.010280937 ubox
4 30 0.013069187 ubox
4 44 0.061939532 ubox
4 51 0.873565486 ubox
5 29 0.013169604 ubox
5 32 0.006031756 ubox
5 43 0.062184358 ubox
5 47 0.216102381 ubox
5 50 0.917457893 ubox
6 30 0.014965820 ubox
6 31 0.004974093 ubox
6 42 0.052629503 ubox
6 44 0.316949131 ubox
6 46 0.213274609 ubox
6 49 0.916112834 ubox
6 51 0.027288656 ubox
7 28 0.014926995 ubox
7 29 0.015954630 ubox
7 39 0.003794091 ubox
7 43 0.344244017 ubox
7 47 0.879001019 ubox
7 50 0.029432735 ubox
8 38 0.003360824 ubox
8 42 0.173121791 ubox
8 45 0.040582983 ubox
8 46 0.878474829 ubox
8 49 0.028877023 ubox
9 24 0.003172094 ubox
9 26 0.005508449 ubox
9 27 0.091393436 ubox
9 41 0.169907427 ubox
9 42 0.535000855 ubox
9 44 0.029542727 ubox
9 45 0.798332676 ubox
9 46 0.142576701 ubox
10 23 0.003172701 ubox
10 26 0.188616952 ubox
10 38 0.003688434 ubox
10 41 0.552892359 ubox
10 42 0.048987042 ubox
10 44 0.777481565 ubox
10 45 0.142467672 ubox
10 46 0.005398713 ubox
11 24 0.006472323 ubox
11 25 0.270768340 ubox
11 26 0.004604504 ubox
11 37 0.003190110 ubox
11 38 0.028016088 ubox
11 40 0.594998878 ubox
11 41 0.080331984 ubox
11 42 0.255461128 ubox
11 44 0.140637609 ubox
11 45 0.005377802 ubox
12 23 0.007838418 ubox
12 24 0.278025528 ubox
12 26 0.006886174 ubox
12 36 0.003280601 ubox
12 37 0.028731623 ubox
12 38 0.762722039 ubox
12 41 0.186735941 ubox
12 42 0.534060617 ubox
12 44 0.005618788 ubox
13 22 0.007885385 ubox
13 23 0.278051909 ubox
13 24 0.012206920 ubox
13 35 0.003271871 ubox
13 36 0.028497003 ubox
13 37 0.767315303 ubox
13 38 0.259760147 ubox
13 41 0.509882362 ubox
13 42 0.010426404 ubox
14 21 0.007912460 ubox
14 22 0.278043295 ubox
14 23 0.012401789 ubox
14 24 0.004099176 ubox
14 35 0.028221056 ubox
14 36 0.769042581 ubox
14 37 0.296905027 ubox
14 38 0.488591683 ubox
14 41 0.008161785 ubox
15 21 0.277827083 ubox
15 22 0.012555149 ubox
15 23 0.004108102 ubox
15 26 0.003996680 ubox
15 31 0.004858074 ubox
15 35 0.769022895 ubox
15 36 0.297058312 ubox
15 37 0.491094390 ubox
15 38 0.024408199 ubox
16 21 0.011535921 ubox
16 22 0.004015158 ubox
16 25 0.004006503 ubox
16 31 0.122615486 ubox
16 34 0.750442533 ubox
16 35 0.290827197 ubox
16 36 0.490446478 ubox
16 37 0.024343706 ubox
17 21 0.004234271 ubox
17 24 0.004004564 ubox
17 30 0.233242565 ubox
17 35 0.489132102 ubox
17 36 0.025119772 ubox
17 37 0.003362467 ubox
18 29 0.233934266 ubox
18 33 0.893182129 ubox
19 28 0.233940325 ubox
19 32 0.929987274 ubox
20 27 0.233892859 ubox
20 30 0.101541008 ubox
20 31 0.925559424 ubox
21 29 0.134066975 ubox
22 28 0.134060688 ubox
22 29 0.920948662 ubox
23 28 0.920398305 ubox
23 29 0.024340237 ubox
24 28 0.025367214 ubox
27 39 0.021705651 ubox
27 43 0.237792945 ubox
27 47 0.108903281 ubox
28 36 0.005026510 ubox
28 37 0.007087260 ubox
28 38 0.021767627 ubox
28 42 0.238146588 ubox
28 45 0.081163288 ubox
28 46 0.114543915 ubox
29 35 0.005064844 ubox
29 36 0.007303848 ubox
29 37 0.021708985 ubox
29 41 0.237263829 ubox
29 44 0.081938228 ubox
29 45 0.114450952 ubox
30 43 0.081977080 ubox
31 39 0.237573769 ubox
31 43 0.114608938 ubox
31 47 0.003397685 ubox
31 50 0.010619736 ubox
32 38 0.238408633 ubox
32 41 0.081592491 ubox
32 42 0.114586882 ubox
32 46 0.003398853 ubox
32 49 0.010629504 ubox
33 37 0.214781362 ubox
33 40 0.078575919 ubox
33 41 0.112201266 ubox
33 45 0.003321099 ubox
33 48 0.010507826 ubox
38 47 0.012569241 ubox
39 46 0.012568239 ubox
42 50 0.022350472 ubox
43 49 0.022740534 ubox
43 51 0.012970681 ubox
44 50 0.017110308 ubox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
showpage
end
%%EOF
