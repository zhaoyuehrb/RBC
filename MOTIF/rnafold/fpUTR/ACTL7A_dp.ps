%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ACTL7A)
} def

/sequence { (\
GGGAAAAUUCUCAGGGUAUCCUCUGAUGUAGGCCUUUCAGGCCUUGAAUCCAGUGGGAUUGAGAACUUUCUAAGAGUGGUGCGGCUCUUGACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.009389332 ubox
1 67 0.004317459 ubox
1 68 0.008862255 ubox
1 70 0.069420863 ubox
1 71 0.108036373 ubox
2 11 0.009526889 ubox
2 66 0.004971084 ubox
2 67 0.013173903 ubox
2 69 0.069166379 ubox
2 70 0.140949418 ubox
2 71 0.823386654 ubox
3 10 0.009656313 ubox
3 66 0.013648542 ubox
3 68 0.068763651 ubox
3 69 0.136485070 ubox
3 70 0.984185367 ubox
4 9 0.009034180 ubox
4 67 0.067670013 ubox
4 68 0.133604654 ubox
4 69 0.985019927 ubox
5 67 0.122828873 ubox
5 68 0.982357865 ubox
5 69 0.031025517 ubox
6 67 0.938321453 ubox
6 68 0.040392959 ubox
6 69 0.005078058 ubox
7 67 0.046302249 ubox
7 68 0.005778191 ubox
8 63 0.003613125 ubox
8 64 0.008420528 ubox
8 65 0.958913113 ubox
9 62 0.003918025 ubox
9 64 0.998820861 ubox
10 61 0.003937589 ubox
10 63 0.999867162 ubox
11 26 0.026330186 ubox
11 62 0.999396380 ubox
12 25 0.032128119 ubox
12 61 0.999319411 ubox
13 22 0.020555421 ubox
13 24 0.038570104 ubox
13 60 0.988460751 ubox
13 69 0.004953935 ubox
14 21 0.023022286 ubox
14 22 0.010413475 ubox
14 23 0.039556579 ubox
14 59 0.582348347 ubox
14 60 0.038367516 ubox
14 68 0.006238264 ubox
15 20 0.022970068 ubox
15 21 0.015273963 ubox
15 22 0.038017154 ubox
15 59 0.054221308 ubox
15 60 0.069695310 ubox
15 67 0.006770740 ubox
16 20 0.015063913 ubox
16 21 0.037661888 ubox
16 29 0.003894454 ubox
16 59 0.183550556 ubox
16 66 0.006851745 ubox
17 28 0.008198048 ubox
17 55 0.005308988 ubox
17 58 0.205695956 ubox
17 65 0.006815995 ubox
18 27 0.009116340 ubox
18 54 0.005299370 ubox
18 59 0.768269119 ubox
18 60 0.007524733 ubox
19 26 0.009217267 ubox
19 53 0.003728867 ubox
19 56 0.034535142 ubox
19 57 0.281818200 ubox
19 58 0.929739141 ubox
20 25 0.009191121 ubox
20 55 0.034887060 ubox
20 56 0.360996176 ubox
20 57 0.930399422 ubox
21 53 0.017647029 ubox
21 55 0.364368473 ubox
21 56 0.928947379 ubox
22 52 0.017271167 ubox
22 55 0.877561464 ubox
22 56 0.003335011 ubox
23 53 0.989157126 ubox
23 55 0.018122387 ubox
24 52 0.988038618 ubox
25 50 0.673105532 ubox
25 51 0.736877965 ubox
26 49 0.940437420 ubox
27 46 0.030108571 ubox
27 48 0.924719705 ubox
27 52 0.004681934 ubox
27 93 0.003433812 ubox
28 45 0.058076218 ubox
28 49 0.059741297 ubox
28 51 0.004722473 ubox
28 92 0.003811233 ubox
29 46 0.262206889 ubox
29 48 0.060997723 ubox
29 91 0.003672947 ubox
30 44 0.958494166 ubox
30 45 0.204374213 ubox
31 43 0.999391400 ubox
31 44 0.032404964 ubox
32 42 0.999730581 ubox
32 43 0.023002082 ubox
33 41 0.999981850 ubox
34 40 0.999694092 ubox
34 41 0.005071098 ubox
35 39 0.900609220 ubox
35 40 0.006334763 ubox
44 63 0.004503087 ubox
45 62 0.022615240 ubox
47 60 0.044167114 ubox
48 59 0.047357854 ubox
49 58 0.047941921 ubox
50 57 0.048055995 ubox
51 56 0.047972371 ubox
61 70 0.003232799 ubox
62 69 0.003189360 ubox
63 70 0.003173913 ubox
67 94 0.008385922 ubox
68 93 0.009473684 ubox
68 94 0.004299072 ubox
69 91 0.032747322 ubox
69 93 0.004640724 ubox
70 90 0.036825233 ubox
71 90 0.513018145 ubox
72 89 0.930335740 ubox
73 88 0.991925393 ubox
73 89 0.022022444 ubox
74 87 0.999868980 ubox
74 89 0.005981047 ubox
75 86 0.999777024 ubox
75 88 0.006457864 ubox
76 85 0.999887281 ubox
76 87 0.006505781 ubox
77 81 0.003419111 ubox
77 83 0.060855877 ubox
77 84 0.990776892 ubox
78 82 0.082274114 ubox
78 86 0.006872028 ubox
79 85 0.007734669 ubox
79 92 0.004121055 ubox
80 84 0.007449490 ubox
80 91 0.004136936 ubox
82 90 0.004216918 ubox
83 89 0.003888765 ubox
89 93 0.005184873 ubox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
72 89 0.9500000 lbox
73 88 0.9500000 lbox
74 87 0.9500000 lbox
75 86 0.9500000 lbox
76 85 0.9500000 lbox
77 84 0.9500000 lbox
showpage
end
%%EOF
