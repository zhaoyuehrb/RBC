%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIRT7)
} def

/sequence { (\
CGCGGCCUGCCGUGUGAGGCGGAAGCGGAAGAGCAGGUCUCCAGGGGAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.015665431 ubox
1 27 0.381646814 ubox
1 51 0.271415784 ubox
2 10 0.004446774 ubox
2 13 0.016684622 ubox
2 26 0.391519362 ubox
2 34 0.008356955 ubox
2 38 0.003693853 ubox
2 50 0.300700932 ubox
3 9 0.005823654 ubox
3 12 0.016893081 ubox
3 25 0.391475096 ubox
3 27 0.012678214 ubox
3 33 0.008346802 ubox
3 37 0.003854687 ubox
3 49 0.288802558 ubox
3 51 0.202794613 ubox
4 8 0.003682128 ubox
4 11 0.016925173 ubox
4 26 0.012721239 ubox
4 39 0.083610275 ubox
4 50 0.198311685 ubox
5 10 0.016823901 ubox
5 20 0.010065536 ubox
5 26 0.031940485 ubox
5 34 0.006021518 ubox
5 38 0.087233682 ubox
5 50 0.763525868 ubox
6 19 0.010251143 ubox
6 22 0.318406388 ubox
6 25 0.032038616 ubox
6 28 0.006043349 ubox
6 33 0.006025466 ubox
6 37 0.087626790 ubox
6 45 0.067396252 ubox
6 46 0.099202536 ubox
6 47 0.104241882 ubox
6 49 0.554386191 ubox
7 18 0.010253784 ubox
7 21 0.313917035 ubox
7 22 0.233949673 ubox
7 27 0.005805952 ubox
7 28 0.003723794 ubox
7 31 0.005501513 ubox
7 36 0.087431796 ubox
7 44 0.067634544 ubox
7 45 0.097143625 ubox
7 46 0.094341493 ubox
7 47 0.071128406 ubox
7 49 0.666457022 ubox
8 17 0.010195709 ubox
8 21 0.241277516 ubox
8 24 0.004033156 ubox
8 27 0.003743246 ubox
8 30 0.004885266 ubox
8 35 0.086871683 ubox
8 43 0.066959065 ubox
8 44 0.092451863 ubox
8 45 0.033419544 ubox
8 46 0.041737854 ubox
8 48 0.867294649 ubox
9 20 0.399907337 ubox
9 26 0.005447165 ubox
9 34 0.084377329 ubox
9 38 0.016822262 ubox
9 42 0.061437405 ubox
9 50 0.005294860 ubox
10 14 0.003247087 ubox
10 19 0.400048421 ubox
10 22 0.043699805 ubox
10 25 0.004090776 ubox
10 28 0.018043425 ubox
10 33 0.080490001 ubox
10 37 0.021488167 ubox
10 45 0.093783656 ubox
10 46 0.899036639 ubox
10 47 0.012944008 ubox
10 49 0.003939807 ubox
11 18 0.400086543 ubox
11 21 0.047719513 ubox
11 27 0.025636445 ubox
11 36 0.021462641 ubox
11 44 0.096674938 ubox
11 45 0.900276160 ubox
11 46 0.011123961 ubox
12 20 0.047759576 ubox
12 26 0.025619051 ubox
12 34 0.007356927 ubox
13 19 0.047509923 ubox
13 21 0.003354500 ubox
13 25 0.025263536 ubox
13 27 0.012446854 ubox
13 33 0.007385792 ubox
13 35 0.019312178 ubox
13 43 0.907126923 ubox
14 20 0.006888867 ubox
14 26 0.012627003 ubox
14 34 0.020141337 ubox
14 42 0.908701409 ubox
15 19 0.006450198 ubox
15 21 0.005133491 ubox
15 25 0.012515802 ubox
15 27 0.007019791 ubox
15 33 0.020068135 ubox
15 43 0.006121103 ubox
16 20 0.005711371 ubox
16 26 0.004975702 ubox
16 41 0.911161563 ubox
16 42 0.004630158 ubox
17 40 0.911201270 ubox
18 39 0.911284570 ubox
19 26 0.075731813 ubox
19 34 0.004153106 ubox
19 38 0.910964640 ubox
19 50 0.003212287 ubox
20 25 0.075750174 ubox
20 27 0.019830778 ubox
20 33 0.004193140 ubox
20 37 0.910963233 ubox
20 49 0.003213404 ubox
21 26 0.025238109 ubox
21 40 0.007690582 ubox
21 42 0.034931979 ubox
22 39 0.008704282 ubox
22 41 0.034976583 ubox
23 38 0.008740532 ubox
23 40 0.034278470 ubox
24 40 0.003896091 ubox
25 34 0.906243554 ubox
25 38 0.032119425 ubox
25 39 0.005269823 ubox
25 50 0.003336029 ubox
26 33 0.907164244 ubox
26 37 0.032896148 ubox
26 49 0.003336959 ubox
27 40 0.004285932 ubox
27 42 0.084822067 ubox
28 39 0.010482024 ubox
28 41 0.086539302 ubox
29 38 0.010833222 ubox
29 40 0.061545620 ubox
30 40 0.064788056 ubox
31 39 0.090118971 ubox
31 41 0.023154441 ubox
32 38 0.089230580 ubox
32 40 0.023240761 ubox
33 39 0.023072363 ubox
33 50 0.085032499 ubox
34 49 0.083806354 ubox
36 42 0.017466049 ubox
37 41 0.017234934 ubox
37 50 0.326156433 ubox
38 45 0.017524881 ubox
38 46 0.018051902 ubox
38 47 0.019626230 ubox
38 48 0.086291365 ubox
38 49 0.050722703 ubox
39 44 0.017626626 ubox
39 45 0.019007201 ubox
39 46 0.020895920 ubox
39 47 0.089974510 ubox
39 49 0.369887409 ubox
40 44 0.017149451 ubox
40 45 0.019268861 ubox
40 46 0.089544399 ubox
40 47 0.010210177 ubox
40 48 0.383434666 ubox
41 45 0.086496289 ubox
41 46 0.012809221 ubox
41 47 0.384728038 ubox
42 46 0.381938560 ubox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
showpage
end
%%EOF
