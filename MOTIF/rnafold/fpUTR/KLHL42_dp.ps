%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KLHL42)
} def

/sequence { (\
AACCGGCGCGCGCGUAGGGGCUGGGAGGCCGGCGCGCAGAUCUGGCGGUGAGCGCUGCCGCCCCGGGGCCCCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 15 0.093209087 ubox
3 14 0.096338996 ubox
3 18 0.972147797 ubox
3 19 0.080293407 ubox
3 66 0.018538739 ubox
4 10 0.017645159 ubox
4 12 0.098251560 ubox
4 14 0.035099646 ubox
4 17 0.973650413 ubox
4 18 0.086701575 ubox
4 65 0.018581800 ubox
5 9 0.017161810 ubox
5 11 0.100372816 ubox
5 13 0.033415888 ubox
5 64 0.018557904 ubox
5 73 0.004071903 ubox
5 77 0.064699562 ubox
6 13 0.173071721 ubox
6 15 0.922049522 ubox
6 63 0.018515637 ubox
6 76 0.065134725 ubox
7 12 0.173965116 ubox
7 14 0.967784123 ubox
7 75 0.065057586 ubox
8 13 0.942971349 ubox
8 15 0.052170777 ubox
8 61 0.018081266 ubox
8 76 0.009332595 ubox
9 14 0.053764616 ubox
9 60 0.018056749 ubox
9 75 0.009351909 ubox
10 37 0.018417775 ubox
10 76 0.031028989 ubox
11 36 0.018437961 ubox
11 75 0.031089691 ubox
12 35 0.018439034 ubox
12 69 0.006223882 ubox
12 76 0.101062802 ubox
13 34 0.018439019 ubox
13 68 0.006231451 ubox
13 75 0.101349607 ubox
14 33 0.018412923 ubox
14 76 0.033697121 ubox
15 32 0.017913636 ubox
15 75 0.033202615 ubox
17 64 0.006517306 ubox
17 71 0.052092018 ubox
17 72 0.142471921 ubox
17 73 0.017005216 ubox
18 30 0.007270353 ubox
18 63 0.006521016 ubox
18 70 0.052215821 ubox
18 71 0.142913932 ubox
18 72 0.015600076 ubox
18 77 0.009820427 ubox
19 29 0.007060506 ubox
19 30 0.017000042 ubox
19 62 0.006521102 ubox
19 69 0.052248641 ubox
19 70 0.143090464 ubox
19 71 0.014007284 ubox
19 76 0.009741795 ubox
19 77 0.973355513 ubox
20 29 0.017143435 ubox
20 61 0.006521007 ubox
20 69 0.143231411 ubox
20 70 0.012164464 ubox
20 76 0.987905710 ubox
21 27 0.006831148 ubox
21 28 0.017245949 ubox
21 60 0.006375926 ubox
21 66 0.003569605 ubox
21 67 0.086761061 ubox
21 68 0.125913057 ubox
21 75 0.988018408 ubox
22 26 0.006162478 ubox
22 27 0.016797342 ubox
22 65 0.006414849 ubox
22 66 0.110217566 ubox
22 67 0.103903624 ubox
22 74 0.987787478 ubox
23 59 0.006466116 ubox
23 63 0.009244304 ubox
23 64 0.011722656 ubox
23 73 0.988009329 ubox
24 58 0.006468459 ubox
24 62 0.009278886 ubox
24 63 0.011540307 ubox
24 64 0.151800189 ubox
24 72 0.988005860 ubox
24 73 0.003834975 ubox
25 61 0.009291806 ubox
25 62 0.009393716 ubox
25 63 0.151852145 ubox
25 71 0.987882421 ubox
25 72 0.005306010 ubox
26 56 0.006452249 ubox
27 55 0.006462477 ubox
27 59 0.011978278 ubox
27 62 0.152424088 ubox
27 63 0.006384790 ubox
27 70 0.987732083 ubox
28 53 0.006491698 ubox
28 58 0.011998092 ubox
28 61 0.152583502 ubox
28 62 0.006483284 ubox
28 69 0.987829957 ubox
29 52 0.006495862 ubox
29 57 0.008588362 ubox
29 60 0.107935346 ubox
29 66 0.060518408 ubox
29 67 0.066265771 ubox
29 68 0.983835830 ubox
30 50 0.006422779 ubox
30 57 0.012429584 ubox
30 60 0.167025150 ubox
30 65 0.089720455 ubox
30 66 0.089232475 ubox
30 67 0.970645834 ubox
31 35 0.006226680 ubox
31 42 0.004608084 ubox
31 49 0.006507880 ubox
31 56 0.036427464 ubox
31 59 0.314521972 ubox
31 62 0.923290846 ubox
31 63 0.122829112 ubox
31 64 0.158118844 ubox
32 41 0.004757413 ubox
32 55 0.037962294 ubox
32 58 0.314925366 ubox
32 61 0.925868324 ubox
32 62 0.108322843 ubox
32 63 0.157568784 ubox
33 47 0.006815800 ubox
33 54 0.037966699 ubox
33 57 0.314923001 ubox
33 60 0.927821844 ubox
33 65 0.038344144 ubox
34 46 0.007769606 ubox
34 53 0.037949470 ubox
34 55 0.322161744 ubox
34 56 0.065988401 ubox
34 58 0.014999932 ubox
34 59 0.922417206 ubox
34 61 0.179182941 ubox
34 64 0.037951286 ubox
35 44 0.003325159 ubox
35 45 0.007767067 ubox
35 52 0.037833944 ubox
35 54 0.331381038 ubox
35 57 0.020870503 ubox
35 60 0.179073258 ubox
35 65 0.004525818 ubox
36 43 0.004341252 ubox
36 46 0.006003874 ubox
36 53 0.331503258 ubox
36 55 0.010170068 ubox
36 56 0.009077871 ubox
36 58 0.928911671 ubox
36 59 0.121089278 ubox
36 61 0.034863490 ubox
36 64 0.004710264 ubox
37 44 0.012190787 ubox
37 45 0.005905786 ubox
37 50 0.028064231 ubox
37 52 0.331427699 ubox
37 54 0.010341447 ubox
37 57 0.936108701 ubox
37 60 0.034595015 ubox
38 43 0.012570994 ubox
38 49 0.026244276 ubox
38 56 0.916797296 ubox
39 55 0.896174159 ubox
40 49 0.339648212 ubox
41 48 0.339622173 ubox
41 51 0.221666806 ubox
41 66 0.005907209 ubox
41 67 0.006613433 ubox
42 47 0.337113031 ubox
42 48 0.034994448 ubox
42 50 0.227369442 ubox
42 52 0.807924039 ubox
42 65 0.006020001 ubox
42 66 0.042262418 ubox
43 47 0.031808394 ubox
43 50 0.045132787 ubox
43 51 0.805316716 ubox
43 54 0.123141892 ubox
43 57 0.016237799 ubox
43 60 0.014080571 ubox
43 65 0.042267571 ubox
44 49 0.095290897 ubox
44 53 0.112282087 ubox
44 56 0.187728544 ubox
44 59 0.081498008 ubox
44 62 0.041130361 ubox
44 63 0.003677474 ubox
44 64 0.042098993 ubox
45 53 0.248265133 ubox
45 55 0.265518490 ubox
45 58 0.088755149 ubox
45 61 0.041350174 ubox
45 63 0.042059231 ubox
46 52 0.256915729 ubox
46 54 0.282780654 ubox
46 57 0.088765684 ubox
46 60 0.041467019 ubox
47 53 0.282300788 ubox
47 56 0.088727401 ubox
47 59 0.041503201 ubox
47 62 0.042244314 ubox
48 55 0.088787232 ubox
48 58 0.041503974 ubox
48 61 0.042280452 ubox
49 54 0.085148694 ubox
49 57 0.041170010 ubox
49 60 0.042263072 ubox
50 56 0.031428824 ubox
50 59 0.042241343 ubox
52 58 0.040571265 ubox
53 57 0.040281212 ubox
58 66 0.046992012 ubox
58 67 0.005898794 ubox
59 65 0.047883947 ubox
59 66 0.010435752 ubox
60 64 0.051227409 ubox
60 69 0.006384753 ubox
61 67 0.053755967 ubox
61 68 0.008498566 ubox
62 66 0.059002417 ubox
62 67 0.011388692 ubox
63 67 0.004770520 ubox
67 77 0.017934829 ubox
68 76 0.018144277 ubox
69 75 0.018119561 ubox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
19 77 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
23 73 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
27 70 0.9500000 lbox
28 69 0.9500000 lbox
29 68 0.9500000 lbox
30 67 0.9500000 lbox
31 62 0.9500000 lbox
32 61 0.9500000 lbox
33 60 0.9500000 lbox
34 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
showpage
end
%%EOF
