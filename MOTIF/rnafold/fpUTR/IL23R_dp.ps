%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL23R)
} def

/sequence { (\
ACAAGGGUGGCAGCCUGGCUCUGAAGUGGAAUUAUGUGCUUCAAACAGGUUGAAAGAGGGAAACAGUCUUUUCCUGCUUCCAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.128177744 ubox
2 7 0.138367769 ubox
2 9 0.164299385 ubox
2 17 0.004736715 ubox
2 76 0.015116326 ubox
3 8 0.143258490 ubox
3 16 0.003277704 ubox
3 70 0.004102427 ubox
3 75 0.010499608 ubox
3 79 0.021569978 ubox
4 16 0.004960532 ubox
4 22 0.005373492 ubox
4 69 0.004634779 ubox
4 75 0.027819715 ubox
4 78 0.024109863 ubox
4 79 0.019736360 ubox
5 15 0.005552810 ubox
5 16 0.009863212 ubox
5 21 0.006425657 ubox
5 68 0.004701314 ubox
5 74 0.030261894 ubox
5 75 0.007408236 ubox
5 77 0.024238155 ubox
5 78 0.022719621 ubox
5 79 0.062521811 ubox
5 80 0.030373535 ubox
5 81 0.507782451 ubox
6 14 0.005488000 ubox
6 15 0.011104237 ubox
6 20 0.006417342 ubox
6 67 0.004637600 ubox
6 73 0.030214704 ubox
6 74 0.008344497 ubox
6 77 0.022746212 ubox
6 78 0.076545356 ubox
6 79 0.021600747 ubox
6 80 0.506891325 ubox
6 81 0.506679503 ubox
7 14 0.011241475 ubox
7 19 0.006422315 ubox
7 72 0.016291846 ubox
7 73 0.008304910 ubox
7 77 0.085605462 ubox
7 78 0.011633617 ubox
7 79 0.302416308 ubox
7 80 0.507169434 ubox
7 85 0.040259467 ubox
8 13 0.011122855 ubox
8 18 0.006148611 ubox
8 65 0.004653176 ubox
8 76 0.084080378 ubox
8 82 0.353436530 ubox
8 84 0.034473557 ubox
9 15 0.004209477 ubox
9 64 0.004596045 ubox
9 74 0.019848407 ubox
9 75 0.044901467 ubox
9 78 0.523612577 ubox
9 79 0.017247246 ubox
9 80 0.018360897 ubox
9 81 0.394809568 ubox
10 14 0.004157857 ubox
10 73 0.019668511 ubox
10 74 0.041052105 ubox
10 77 0.543480639 ubox
10 78 0.012290826 ubox
10 79 0.010955926 ubox
10 80 0.390137597 ubox
11 52 0.856483937 ubox
11 76 0.497262869 ubox
12 20 0.003166280 ubox
12 51 0.944864971 ubox
12 75 0.213261579 ubox
12 78 0.006630917 ubox
13 19 0.003471836 ubox
13 50 0.987448330 ubox
13 74 0.130573173 ubox
13 77 0.006466156 ubox
14 18 0.003452021 ubox
14 49 0.999746350 ubox
14 76 0.005027946 ubox
15 48 0.999862185 ubox
16 47 0.999583277 ubox
17 46 0.999176938 ubox
17 51 0.004042944 ubox
18 50 0.005168154 ubox
19 48 0.004977980 ubox
19 49 0.005269548 ubox
20 47 0.005021548 ubox
20 48 0.004551262 ubox
20 84 0.003699038 ubox
21 83 0.004015982 ubox
22 43 0.969520662 ubox
22 82 0.003958601 ubox
23 42 0.999794313 ubox
24 41 0.999597170 ubox
24 79 0.003957263 ubox
25 40 0.999406877 ubox
25 78 0.003971851 ubox
26 35 0.003439153 ubox
26 39 0.999932257 ubox
26 77 0.003974934 ubox
27 34 0.008728753 ubox
27 36 0.010478377 ubox
27 38 0.996095814 ubox
27 76 0.003835140 ubox
28 33 0.018380545 ubox
28 35 0.058093034 ubox
28 37 0.954602238 ubox
28 74 0.003535275 ubox
29 73 0.003552809 ubox
30 72 0.003514824 ubox
31 37 0.040356882 ubox
31 71 0.003316906 ubox
32 36 0.038882529 ubox
35 65 0.003186807 ubox
36 64 0.003217374 ubox
46 76 0.004398242 ubox
47 75 0.004709190 ubox
48 74 0.004784765 ubox
49 73 0.004920987 ubox
49 85 0.005450071 ubox
50 56 0.003709961 ubox
50 57 0.009879108 ubox
50 58 0.005131449 ubox
50 83 0.023887277 ubox
50 84 0.005582334 ubox
51 55 0.007810576 ubox
51 56 0.021071185 ubox
51 57 0.020558902 ubox
51 58 0.009239873 ubox
51 82 0.065959073 ubox
51 83 0.006146430 ubox
52 71 0.003469861 ubox
52 72 0.085378416 ubox
52 73 0.077906416 ubox
52 75 0.003220161 ubox
52 80 0.076351989 ubox
52 81 0.081714142 ubox
53 71 0.096531562 ubox
53 72 0.070017381 ubox
53 78 0.011298726 ubox
53 79 0.124923679 ubox
54 70 0.100189465 ubox
54 71 0.058144786 ubox
54 72 0.068637582 ubox
54 78 0.128033829 ubox
54 79 0.667477075 ubox
55 69 0.102469766 ubox
55 70 0.044190329 ubox
55 71 0.080301894 ubox
55 72 0.049774261 ubox
55 75 0.024758670 ubox
55 78 0.760055251 ubox
55 79 0.027651950 ubox
56 68 0.104269633 ubox
56 69 0.023578785 ubox
56 70 0.087714912 ubox
56 71 0.060367183 ubox
56 72 0.062645248 ubox
56 73 0.031378936 ubox
56 74 0.025195112 ubox
56 77 0.767219984 ubox
56 78 0.025540069 ubox
56 79 0.032696178 ubox
56 80 0.035271312 ubox
57 67 0.102844700 ubox
57 69 0.092084197 ubox
57 70 0.062404028 ubox
57 71 0.068266032 ubox
57 72 0.028586537 ubox
57 75 0.648585337 ubox
57 78 0.034876911 ubox
57 79 0.034667559 ubox
58 68 0.094410102 ubox
58 69 0.064456051 ubox
58 70 0.071416470 ubox
58 71 0.024323599 ubox
58 73 0.031751036 ubox
58 74 0.667074129 ubox
58 75 0.631876029 ubox
58 77 0.032055900 ubox
58 78 0.016528937 ubox
58 81 0.034412949 ubox
59 67 0.090480713 ubox
59 68 0.065018851 ubox
59 69 0.074875520 ubox
59 70 0.020153893 ubox
59 72 0.031878985 ubox
59 73 0.666688261 ubox
59 74 0.698131142 ubox
59 77 0.010098512 ubox
59 80 0.033185086 ubox
59 81 0.184691495 ubox
60 67 0.052742337 ubox
60 68 0.076819470 ubox
60 69 0.014850272 ubox
60 70 0.004164448 ubox
60 71 0.039564063 ubox
60 72 0.664827803 ubox
60 73 0.699015668 ubox
60 79 0.031542818 ubox
60 80 0.185149490 ubox
61 67 0.073802720 ubox
61 69 0.004926679 ubox
61 70 0.046205939 ubox
61 71 0.663983800 ubox
61 72 0.698564127 ubox
61 78 0.029800365 ubox
61 79 0.185115825 ubox
62 69 0.048204109 ubox
62 70 0.656289485 ubox
62 71 0.693997522 ubox
62 72 0.009204149 ubox
62 78 0.176207196 ubox
62 79 0.006112020 ubox
63 69 0.592417124 ubox
63 70 0.604481440 ubox
63 71 0.011932847 ubox
63 78 0.008591224 ubox
64 76 0.187600139 ubox
65 71 0.006724561 ubox
65 75 0.187784446 ubox
65 78 0.007524473 ubox
66 70 0.007635637 ubox
66 71 0.006597137 ubox
66 74 0.187115862 ubox
66 77 0.008803092 ubox
67 76 0.008716991 ubox
74 83 0.023916874 ubox
75 82 0.024615242 ubox
76 81 0.025607432 ubox
77 83 0.018517181 ubox
78 82 0.016784041 ubox
78 84 0.004603008 ubox
79 83 0.005323274 ubox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
54 79 0.9500000 lbox
55 78 0.9500000 lbox
56 77 0.9500000 lbox
58 75 0.9500000 lbox
59 74 0.9500000 lbox
60 73 0.9500000 lbox
61 72 0.9500000 lbox
62 71 0.9500000 lbox
63 70 0.9500000 lbox
showpage
end
%%EOF
