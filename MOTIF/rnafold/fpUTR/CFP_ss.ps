%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCACCGCACACUCACUUCACCCUGGUUCAACACCCCCACGAGGUUGACCCCGUCAUUAUGUUAGAGAUUAUGCAUUUUCCACAUAGGGAAACUGAGGCUCAGGGGUGUUAAGUGACUCACCCAAGGUCACACGGCUAGGAAGUUGCUGCACGCUCCUAUGCUCCAUUUCCUCUGGGAGCCUAUCAACCCAGAUAAAGCGGGACCUCCUCUCUGGUAGAGGUGCAGGGGGCAGUACUCAAC\
) } def
/len { sequence length } bind def

/coor [
[86.13626099 657.07257080]
[85.55462646 642.08386230]
[84.97299957 627.09509277]
[76.74800873 614.67742920]
[83.94438171 600.58764648]
[83.36275482 585.59887695]
[75.13777161 573.18121338]
[82.33414459 559.09143066]
[81.75251007 544.10272217]
[69.29012299 535.98931885]
[63.93151093 521.92700195]
[67.92753601 507.23394775]
[79.94799042 497.59991455]
[79.36636353 482.61117554]
[78.68785095 467.62652588]
[77.91249847 452.64657593]
[77.13714600 437.66665649]
[76.36178589 422.68670654]
[75.58643341 407.70675659]
[74.81107330 392.72680664]
[73.93890381 377.75216675]
[72.96994781 362.78350830]
[72.00099945 347.81484985]
[64.39829254 346.32723999]
[57.17135239 343.53698730]
[50.54153442 339.52954102]
[39.76491547 349.96334839]
[28.98830032 360.39715576]
[27.29240990 376.35034180]
[13.68547058 384.84921265]
[-1.39443564 379.37417603]
[-6.37929678 364.12521362]
[2.55484653 350.80001831]
[18.55448341 349.62054443]
[29.33110046 339.18673706]
[40.10771561 328.75292969]
[33.67831802 314.78369141]
[32.40665817 299.42199707]
[36.47070694 284.51531982]
[45.40518570 271.86505127]
[58.15472412 263.00869751]
[73.19846344 259.03308105]
[74.55408478 244.09446716]
[75.90971375 229.15585327]
[77.26534271 214.21723938]
[78.62096405 199.27861023]
[76.95338440 197.05059814]
[76.05821991 194.03472900]
[76.23736572 190.51847839]
[77.68442535 186.89231873]
[80.45240021 183.60966492]
[82.57839966 168.76109314]
[84.70439911 153.91252136]
[86.83039856 139.06394958]
[88.95639038 124.21537781]
[73.14901733 111.04719543]
[70.58699036 88.85218811]
[85.08547974 69.58535004]
[70.83166504 64.91322327]
[56.57785034 60.24109650]
[42.32403564 55.56896973]
[28.07022095 50.89684296]
[13.81640530 46.22471619]
[1.99152339 51.34074402]
[-9.77530766 47.17148590]
[-15.36938381 36.46129608]
[-29.56160545 31.60528946]
[-43.75382996 26.74927902]
[-57.94604874 21.89327049]
[-70.56167603 30.92795753]
[-86.07812500 30.78822708]
[-98.52899933 21.52780914]
[-103.12668610 6.70752192]
[-98.10327911 -7.97392988]
[-85.39038849 -16.87122917]
[-69.87637329 -16.56318474]
[-57.52668762 -7.16824245]
[-53.09004211 7.70104790]
[-38.89781952 12.55705738]
[-24.70559692 17.41306686]
[-10.51337433 22.26907539]
[6.51069355 17.97173691]
[18.48853111 31.97090340]
[32.74234772 36.64302826]
[46.99616241 41.31515503]
[61.24997711 45.98728180]
[75.50379181 50.65940857]
[89.75760651 55.33153534]
[102.84386444 48.00009918]
[106.30310059 33.40442657]
[109.76233673 18.80875397]
[113.22157288 4.21308088]
[116.68081665 -10.38259220]
[115.61514282 -19.43258286]
[120.28026581 -25.14400291]
[123.92790985 -39.69373703]
[119.77873993 -54.96118164]
[130.37875366 -65.42488098]
[134.02639771 -79.97461700]
[137.67404175 -94.52434540]
[129.81382751 -107.97257233]
[133.72032166 -122.67610931]
[146.58958435 -130.08674622]
[150.23722839 -144.63647461]
[153.88487244 -159.18620300]
[157.53251648 -173.73594666]
[161.18016052 -188.28567505]
[164.82778931 -202.83540344]
[168.47543335 -217.38513184]
[172.12307739 -231.93487549]
[164.26286316 -245.38310242]
[168.16935730 -260.08663940]
[181.03863525 -267.49725342]
[184.68627930 -282.04699707]
[188.33390808 -296.59674072]
[191.98155212 -311.14645386]
[195.62919617 -325.69619751]
[199.27684021 -340.24594116]
[202.92448425 -354.79565430]
[196.98127747 -366.22717285]
[200.30400085 -378.26049805]
[210.58969116 -384.60134888]
[214.42512512 -399.10272217]
[208.43505859 -408.14935303]
[208.40118408 -418.77996826]
[214.09393311 -427.49719238]
[223.43908691 -431.56500244]
[227.64816284 -445.96234131]
[231.85722351 -460.35971069]
[236.06629944 -474.75704956]
[231.65776062 -490.55252075]
[243.32450867 -502.07723999]
[259.06478882 -497.47555542]
[262.68637085 -481.48129272]
[250.46365356 -470.54797363]
[246.25457764 -456.15063477]
[242.04551697 -441.75326538]
[237.83644104 -427.35592651]
[243.76107788 -408.93688965]
[228.92648315 -395.26727295]
[225.09104919 -380.76589966]
[230.58702087 -364.09017944]
[217.47421265 -351.14801025]
[213.82656860 -336.59829712]
[210.17892456 -322.04855347]
[206.53129578 -307.49880981]
[202.88365173 -292.94909668]
[199.23600769 -278.39935303]
[195.58836365 -263.84963989]
[203.43960571 -251.24432373]
[199.94764709 -236.43685913]
[186.67280579 -228.28723145]
[183.02517700 -213.73750305]
[179.37753296 -199.18775940]
[175.72988892 -184.63803101]
[172.08224487 -170.08830261]
[168.43460083 -155.53857422]
[164.78695679 -140.98883057]
[161.13931274 -126.43910217]
[168.99055481 -113.83380127]
[165.49859619 -99.02634430]
[152.22377014 -90.87670898]
[148.57612610 -76.32697296]
[144.92848206 -61.77724075]
[149.33856201 -47.55048752]
[138.47764587 -36.04609299]
[134.83000183 -21.49636078]
[131.27648926 -6.92335415]
[127.81724548 7.67231894]
[124.35800934 22.26799202]
[120.89877319 36.86366653]
[117.43953705 51.45933914]
[126.55171204 63.37437820]
[141.54388428 63.85910797]
[156.53604126 64.34384155]
[171.52821350 64.82856750]
[186.52037048 65.31329346]
[201.51254272 65.79802704]
[209.54954529 52.70978165]
[223.06155396 45.40764236]
[238.41389465 45.85584641]
[251.47689819 53.93383408]
[258.73663330 67.46866608]
[258.24032593 82.81953430]
[250.12141418 95.85713959]
[236.56390381 103.07443237]
[221.21466064 102.52998352]
[208.20257568 94.37026978]
[201.02781677 80.79019165]
[186.03564453 80.30546570]
[171.04348755 79.82073212]
[156.05131531 79.33600616]
[141.05914307 78.85127258]
[126.06698608 78.36654663]
[131.25920105 91.39225006]
[130.59796143 104.79058075]
[124.70236969 116.16008759]
[115.08583832 123.66769409]
[103.80496216 126.34136963]
[101.67897034 141.18994141]
[99.55297089 156.03851318]
[97.42697144 170.88710022]
[95.30097961 185.73567200]
[93.55958557 200.63424683]
[92.20395660 215.57286072]
[90.84833527 230.51147461]
[89.49270630 245.45008850]
[88.13707733 260.38870239]
[103.30582428 267.76760864]
[114.65327454 280.20269775]
[120.59284210 295.91824341]
[120.30782318 312.68240356]
[113.86356354 328.12438965]
[102.19469452 340.06961060]
[86.96966553 346.84588623]
[87.93862152 361.81454468]
[88.90756989 376.78323364]
[92.57802582 385.12384033]
[89.79102325 391.95144653]
[90.56637573 406.93139648]
[91.34173584 421.91134644]
[92.11708832 436.89129639]
[92.89244843 451.87124634]
[93.66780090 466.85119629]
[97.23012543 475.23855591]
[94.35507965 482.02954102]
[94.93671417 497.01828003]
[107.66758728 505.69186401]
[112.79019165 520.03106689]
[108.53742218 534.46636963]
[96.74123383 543.52105713]
[97.32286072 558.50976562]
[105.58945465 571.99957275]
[98.35147095 585.01727295]
[98.93310547 600.00598145]
[107.19969177 613.49578857]
[99.96171570 626.51348877]
[100.54335022 641.50219727]
[101.12497711 656.49090576]
[110.32206726 670.06829834]
[102.91978455 684.70178223]
[86.53297424 685.33764648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 239]
[2 238]
[3 237]
[5 235]
[6 234]
[8 232]
[9 231]
[13 227]
[14 226]
[15 224]
[16 223]
[17 222]
[18 221]
[19 220]
[20 219]
[21 217]
[22 216]
[23 215]
[26 36]
[27 35]
[28 34]
[42 208]
[43 207]
[44 206]
[45 205]
[46 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[66 81]
[67 80]
[68 79]
[69 78]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[95 167]
[96 166]
[98 164]
[99 163]
[100 162]
[103 159]
[104 158]
[105 157]
[106 156]
[107 155]
[108 154]
[109 153]
[110 152]
[113 149]
[114 148]
[115 147]
[116 146]
[117 145]
[118 144]
[119 143]
[122 141]
[123 140]
[127 138]
[128 137]
[129 136]
[130 135]
[173 194]
[174 193]
[175 192]
[176 191]
[177 190]
[178 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
