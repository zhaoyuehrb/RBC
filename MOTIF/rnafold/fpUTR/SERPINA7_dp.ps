%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SERPINA7)
} def

/sequence { (\
GAGAUGCAGGUGGAUUCUUGGGCAUUUGCUAUUAACUUCCUUCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.004195830 ubox
1 19 0.017066854 ubox
1 26 0.003629732 ubox
1 27 0.009554158 ubox
1 33 0.137407604 ubox
1 38 0.111685251 ubox
1 39 0.149011525 ubox
1 42 0.044091126 ubox
1 43 0.077961497 ubox
2 16 0.003922078 ubox
2 18 0.018246413 ubox
2 25 0.004093672 ubox
2 26 0.009099681 ubox
2 27 0.142308522 ubox
2 30 0.019090879 ubox
2 32 0.143295086 ubox
2 33 0.093554153 ubox
2 37 0.132457835 ubox
2 38 0.145216926 ubox
2 41 0.052251628 ubox
2 42 0.076631337 ubox
3 16 0.004343184 ubox
3 17 0.018454410 ubox
3 25 0.006818386 ubox
3 26 0.153916149 ubox
3 27 0.003480360 ubox
3 29 0.011692929 ubox
3 32 0.080190867 ubox
3 33 0.537274477 ubox
3 36 0.134820422 ubox
3 37 0.080878163 ubox
3 38 0.007530430 ubox
3 39 0.029225585 ubox
3 40 0.053017813 ubox
3 41 0.047671583 ubox
3 42 0.006837975 ubox
3 43 0.065872141 ubox
4 11 0.014676332 ubox
4 15 0.007618217 ubox
4 16 0.017350564 ubox
4 25 0.155768756 ubox
4 32 0.566996405 ubox
4 37 0.007604049 ubox
4 38 0.028279529 ubox
4 41 0.006258388 ubox
4 42 0.065202461 ubox
5 10 0.014819631 ubox
5 14 0.009778401 ubox
5 24 0.156111519 ubox
5 31 0.551377157 ubox
5 34 0.040664006 ubox
5 45 0.114395841 ubox
6 23 0.156072241 ubox
6 29 0.779004073 ubox
6 30 0.107073570 ubox
6 33 0.014230228 ubox
6 44 0.126013979 ubox
7 20 0.083251363 ubox
7 22 0.148576207 ubox
7 28 0.787051783 ubox
8 16 0.003173873 ubox
8 18 0.068902160 ubox
8 19 0.122730659 ubox
8 27 0.786320331 ubox
8 38 0.020141591 ubox
8 41 0.158780850 ubox
8 42 0.080309429 ubox
9 15 0.003197065 ubox
9 17 0.070111494 ubox
9 18 0.141308593 ubox
9 19 0.014189107 ubox
9 26 0.783854036 ubox
9 30 0.020577065 ubox
9 37 0.023051189 ubox
9 40 0.167966676 ubox
9 41 0.084153651 ubox
9 42 0.020630500 ubox
9 43 0.140550580 ubox
9 44 0.529269679 ubox
10 16 0.066286551 ubox
10 17 0.142826537 ubox
10 18 0.010571253 ubox
10 23 0.009108790 ubox
10 25 0.786022828 ubox
10 29 0.021285501 ubox
10 36 0.023330557 ubox
10 39 0.167907537 ubox
10 40 0.083396942 ubox
10 41 0.022961210 ubox
10 42 0.121681670 ubox
10 43 0.529459376 ubox
11 20 0.008054569 ubox
11 22 0.009117812 ubox
11 24 0.786763534 ubox
11 28 0.021253059 ubox
11 35 0.023154517 ubox
11 45 0.044399914 ubox
12 18 0.044578693 ubox
12 19 0.010998792 ubox
12 23 0.786451117 ubox
12 27 0.020935649 ubox
12 37 0.157898616 ubox
12 38 0.012677389 ubox
12 39 0.087553985 ubox
12 40 0.555397412 ubox
12 41 0.043883545 ubox
12 44 0.049347830 ubox
13 17 0.045844229 ubox
13 18 0.017277696 ubox
13 19 0.036821414 ubox
13 26 0.021291406 ubox
13 33 0.019508263 ubox
13 36 0.162519476 ubox
13 37 0.013448224 ubox
13 38 0.087479991 ubox
13 39 0.556066733 ubox
13 40 0.041342209 ubox
13 43 0.049343753 ubox
14 18 0.031878959 ubox
14 25 0.021300712 ubox
14 32 0.022508038 ubox
14 37 0.089149989 ubox
14 38 0.549658260 ubox
14 42 0.048794172 ubox
15 21 0.092887342 ubox
15 22 0.042186787 ubox
15 24 0.020971490 ubox
15 31 0.022299337 ubox
15 35 0.157846142 ubox
16 20 0.073000471 ubox
16 21 0.043301375 ubox
16 22 0.056088934 ubox
16 34 0.159775829 ubox
17 21 0.056203189 ubox
18 35 0.116748309 ubox
18 46 0.008339195 ubox
19 31 0.158448917 ubox
19 34 0.130743345 ubox
19 45 0.009713249 ubox
20 30 0.146548257 ubox
20 33 0.121970876 ubox
20 37 0.020725104 ubox
20 38 0.004306044 ubox
20 39 0.003558429 ubox
20 40 0.009924916 ubox
20 41 0.018741968 ubox
20 44 0.010292881 ubox
21 29 0.131562267 ubox
21 30 0.566929175 ubox
21 32 0.046010219 ubox
21 33 0.004526884 ubox
21 36 0.020549471 ubox
21 37 0.005224514 ubox
21 39 0.009925927 ubox
21 40 0.019281334 ubox
21 43 0.010209082 ubox
22 29 0.580107383 ubox
22 36 0.005268134 ubox
22 38 0.007828020 ubox
22 39 0.019167050 ubox
22 42 0.007066121 ubox
23 28 0.582927372 ubox
24 32 0.006890591 ubox
25 31 0.007175626 ubox
25 35 0.006600136 ubox
26 34 0.006939754 ubox
26 35 0.015554246 ubox
26 46 0.003502193 ubox
27 34 0.016585711 ubox
27 45 0.004918135 ubox
28 33 0.014789030 ubox
28 44 0.005986421 ubox
32 46 0.009199034 ubox
32 47 0.006442369 ubox
33 45 0.009976411 ubox
33 46 0.008179335 ubox
34 42 0.020737692 ubox
35 41 0.021500832 ubox
37 46 0.036307826 ubox
37 47 0.011147759 ubox
38 45 0.036340595 ubox
38 46 0.014881408 ubox
41 47 0.012130626 ubox
42 46 0.014363816 ubox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
showpage
end
%%EOF
