%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUCGGGUUGCGCGCUGGGCCUGGAGGGAGGGGGCGGCCCCCGCACCGGUCCGAGUUGCGGCCGCGUGGACUGCGACCCGCGCCGCGCCGCACCGCGCCGCGCCCUGGGAACGCCGCUCCCCGCGCGCCAACGGACCCGGGGAAGCCCUUCUGGGGUCCGAGGCCGCGCUGCGGGGCCGCCCACGCUGCGCUCCAGGAGCCAGAGCCUGCAGGGUGGGUGUCGGGACAUGCUGAUCUUCCCUCAAGACAGCUG\
GCGGGCGCUCUGGUC\
) } def
/len { sequence length } bind def

/coor [
[80.42232513 608.09582520]
[65.86516571 602.38415527]
[58.43055725 588.62695312]
[61.62890244 573.31994629]
[73.95003510 563.69061279]
[74.29778290 548.69464111]
[74.64552307 533.69866943]
[74.99327087 518.70269775]
[75.34101868 503.70675659]
[67.90085602 490.80352783]
[75.95600891 477.18643188]
[76.30375671 462.19046021]
[76.65150452 447.19451904]
[69.21134186 434.29129028]
[77.26648712 420.67419434]
[77.61423492 405.67822266]
[77.96198273 390.68225098]
[78.30973053 375.68627930]
[78.65747833 360.69030762]
[79.00522614 345.69433594]
[65.58807373 333.20266724]
[65.59942627 314.55026245]
[79.50122070 301.63861084]
[79.50122070 286.63861084]
[71.76392365 273.91134644]
[79.50122070 260.11117554]
[79.50122070 245.11117554]
[79.50122070 230.11117554]
[79.50122070 215.11117554]
[79.50122070 200.11117554]
[79.50122070 185.11117554]
[79.50122070 170.11117554]
[79.50122070 155.11117554]
[79.50122070 140.11117554]
[80.45767975 97.59116364]
[65.73125458 94.73945618]
[51.00481796 91.88775635]
[36.27838898 89.03604889]
[23.27710533 97.61535645]
[8.38303375 94.51353455]
[0.28410295 82.06593323]
[-14.44232845 79.21422577]
[-29.16876030 76.36252594]
[-47.94305801 83.76717377]
[-61.93458176 70.39100647]
[-76.72316742 67.88147736]
[-87.65078735 74.68901825]
[-99.89767456 72.31806946]
[-107.02185822 62.56990814]
[-121.78035736 59.88911057]
[-136.53886414 57.20831299]
[-151.29736328 54.52751541]
[-166.25816345 59.67387772]
[-177.39772034 49.78653336]
[-192.15621948 47.10573578]
[-201.12203979 48.64854050]
[-207.06983948 44.30736923]
[-221.79626465 41.45566940]
[-230.77937317 42.89443588]
[-236.67643738 38.48460770]
[-251.36882019 35.46238327]
[-266.06121826 32.44015884]
[-280.75360107 29.41793251]
[-295.44598389 26.39570808]
[-310.15563965 23.45869446]
[-324.88208008 20.60699081]
[-339.62478638 17.84069443]
[-354.38327026 15.15989685]
[-369.14178467 12.47909927]
[-383.90026855 9.79830170]
[-398.65878296 7.11750412]
[-409.78274536 17.93586540]
[-425.14587402 20.11627007]
[-438.84069824 12.82030869]
[-445.60131836 -1.14657283]
[-442.82809448 -16.41382408]
[-431.58743286 -27.11087418]
[-416.20156860 -29.12448883]
[-402.58666992 -21.68039513]
[-395.97796631 -7.64099598]
[-381.21948242 -4.96019840]
[-366.46096802 -2.27940106]
[-351.70248413 0.40139663]
[-336.94396973 3.08219433]
[-329.82702637 1.19246852]
[-322.03036499 5.88055944]
[-307.30392456 8.73226261]
[-300.16555786 6.92516565]
[-292.42376709 11.70332336]
[-277.73138428 14.72554779]
[-263.03897095 17.74777222]
[-248.34660339 20.76999855]
[-233.65422058 23.79222298]
[-218.94456482 26.72923660]
[-204.21812439 29.58093834]
[-189.47541809 32.34723663]
[-174.71691895 35.02803421]
[-160.81173706 29.68992043]
[-148.61656189 39.76901245]
[-133.85806274 42.44981003]
[-119.09956360 45.13060760]
[-104.34106445 47.81140518]
[-88.14189911 41.02243423]
[-74.21363068 53.09288788]
[-59.42504883 55.60242081]
[-51.69582748 48.98616028]
[-41.38615799 47.66970444]
[-31.84839439 52.32330322]
[-26.31705666 61.63609314]
[-11.59062576 64.48780060]
[3.13580585 67.33950043]
[15.29589272 58.81495285]
[30.27121353 61.49720383]
[39.13009262 74.30962372]
[53.85652161 77.16132355]
[68.58295441 80.01302338]
[83.30938721 82.86473083]
[96.18229675 75.16484070]
[100.63526154 60.84104919]
[105.08822632 46.51725388]
[109.54119110 32.19345856]
[113.99416351 17.86966515]
[105.57265472 2.51719308]
[110.77499390 -13.84810257]
[125.90753174 -21.22302818]
[130.19415283 -35.59748077]
[134.48077393 -49.97193146]
[138.76739502 -64.34638214]
[143.05401611 -78.72084045]
[147.25724792 -93.11989594]
[151.37695312 -107.54307556]
[145.81167603 -119.15269470]
[149.51428223 -131.06480408]
[159.98638916 -137.07443237]
[164.27301025 -151.44888306]
[168.55963135 -165.82333374]
[172.84625244 -180.19778442]
[177.13287354 -194.57225037]
[181.41949463 -208.94670105]
[185.70611572 -223.32115173]
[182.23522949 -238.75692749]
[193.28698730 -248.74230957]
[197.57360840 -263.11676025]
[201.86022949 -277.49121094]
[206.14685059 -291.86566162]
[199.81324768 -306.60559082]
[207.51513672 -320.67898560]
[223.34429932 -323.28994751]
[235.15795898 -312.43557739]
[233.89367676 -296.44241333]
[220.52130127 -287.57904053]
[216.23468018 -273.20458984]
[211.94805908 -258.83013916]
[207.66143799 -244.45568848]
[211.43893433 -230.04806519]
[200.08056641 -219.03453064]
[195.79394531 -204.66007996]
[191.50732422 -190.28562927]
[187.22070312 -175.91116333]
[182.93408203 -161.53671265]
[178.64746094 -147.16226196]
[174.36083984 -132.78781128]
[179.32827759 -115.94063568]
[165.80012512 -103.42337036]
[161.68043518 -89.00019073]
[162.86083984 -81.73186493]
[157.42846680 -74.43421936]
[153.14184570 -60.05976486]
[148.85522461 -45.68531036]
[144.56860352 -31.31085968]
[140.28198242 -16.93640709]
[147.92669678 -6.58995247]
[148.23211670 6.46516943]
[140.86355591 17.48098564]
[128.31796265 22.32263374]
[123.86499023 36.64642715]
[119.41202545 50.97022247]
[114.95905304 65.29401398]
[110.50608826 79.61781311]
[119.71205139 91.46054077]
[134.69165039 90.67839050]
[149.67124939 89.89624786]
[164.65083313 89.11410522]
[179.63043213 88.33195496]
[194.61003113 87.54981232]
[209.58961487 86.76766968]
[222.96757507 78.32131195]
[236.08097839 85.38444519]
[251.06057739 84.60230255]
[266.04016113 83.82015228]
[281.01977539 83.03800964]
[295.98928833 82.08226776]
[310.94671631 80.95306396]
[325.90414429 79.82385254]
[340.86160278 78.69464111]
[348.11096191 65.07663727]
[361.58312988 57.55969238]
[376.97915649 58.54243851]
[389.38623047 67.71128845]
[394.84530640 82.14049530]
[391.61441040 97.22574615]
[380.72451782 108.15340424]
[365.65054321 111.43647766]
[351.20251465 106.02735901]
[341.99078369 93.65207672]
[327.03335571 94.78128815]
[312.07592773 95.91049957]
[297.11849976 97.03970337]
[293.40115356 99.98588562]
[287.80273438 100.65166473]
[281.80191040 98.01760101]
[266.82232666 98.79975128]
[251.84271240 99.58189392]
[236.86312866 100.36403656]
[224.55661011 108.75445557]
[210.37176514 101.74726105]
[195.39216614 102.52940369]
[180.41258240 103.31155396]
[165.43298340 104.09369659]
[150.45338440 104.87583923]
[135.47380066 105.65798950]
[120.49420166 106.44013214]
[116.37449646 120.86331177]
[128.68113708 129.43923950]
[140.98779297 138.01516724]
[153.29443359 146.59109497]
[168.80635071 143.56524658]
[181.86767578 152.46342468]
[184.72933960 168.00646973]
[175.69358826 180.97299194]
[160.12115479 183.67016602]
[147.25088501 174.49781799]
[144.71850586 158.89773560]
[132.41186523 150.32180786]
[120.10521698 141.74588013]
[107.79856873 133.16995239]
[94.50122070 140.11117554]
[94.50122070 155.11117554]
[94.50122070 170.11117554]
[94.50122070 185.11117554]
[94.50122070 200.11117554]
[94.50122070 215.11117554]
[94.50122070 230.11117554]
[94.50122070 245.11117554]
[94.50122070 260.11117554]
[102.23852539 273.91134644]
[94.50122070 286.63861084]
[94.50122070 301.63861084]
[104.34977722 308.22061157]
[109.75782776 318.62493896]
[109.49153137 330.22814941]
[103.73179626 340.16638184]
[94.00119019 346.04208374]
[93.65344238 361.03805542]
[93.30570221 376.03402710]
[92.95795441 391.02999878]
[92.61020660 406.02597046]
[92.26245880 421.02194214]
[99.67774963 434.99777222]
[91.64746857 447.54226685]
[91.29972076 462.53820801]
[90.95198059 477.53417969]
[98.36726379 491.51004028]
[90.33699036 504.05450439]
[89.98924255 519.05047607]
[89.64149475 534.04644775]
[89.29374695 549.04241943]
[88.94599915 564.03839111]
[100.80753326 574.22845459]
[103.29290009 589.66729736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 268]
[6 267]
[7 266]
[8 265]
[9 264]
[11 262]
[12 261]
[13 260]
[15 258]
[16 257]
[17 256]
[18 255]
[19 254]
[20 253]
[23 248]
[24 247]
[26 245]
[27 244]
[28 243]
[29 242]
[30 241]
[31 240]
[32 239]
[33 238]
[34 237]
[35 117]
[36 116]
[37 115]
[38 114]
[41 111]
[42 110]
[43 109]
[45 105]
[46 104]
[49 102]
[50 101]
[51 100]
[52 99]
[54 97]
[55 96]
[57 95]
[58 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 87]
[66 86]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[118 179]
[119 178]
[120 177]
[121 176]
[122 175]
[125 171]
[126 170]
[127 169]
[128 168]
[129 167]
[130 165]
[131 164]
[134 162]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[142 154]
[143 153]
[144 152]
[145 151]
[180 222]
[181 221]
[182 220]
[183 219]
[184 218]
[185 217]
[186 216]
[188 214]
[189 213]
[190 212]
[191 211]
[192 208]
[193 207]
[194 206]
[195 205]
[223 236]
[224 235]
[225 234]
[226 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
