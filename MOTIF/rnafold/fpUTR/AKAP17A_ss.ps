%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGAAAUGCGUCAUAGAGGGCGGGCGGCGACGGCGGUGGCGGCGUCGGAGGCGCCUCCGGGGGACGGUGGCGGCUCCCGGCGGUGAGGCCGCGCCUGUCCGGGGAUCGUCGAGGGACGGCGGGAGCUUGGGCCAGCGGCGGCGGCGGCCUGGGACGCAGGCGGAGCCCCGCGCAGGCCCAAGGUCCCGGAGGCU\
) } def
/len { sequence length } bind def

/coor [
[149.69009399 225.00094604]
[142.51159668 238.51861572]
[129.86682129 247.14233398]
[114.66147614 248.89041138]
[100.38961029 243.36117554]
[90.33081055 231.82518005]
[86.79650879 216.93333435]
[90.59886932 202.10765076]
[100.86412811 190.75498962]
[115.23340607 185.48408508]
[117.14188385 170.60598755]
[111.08677673 156.99772644]
[120.51701355 144.29412842]
[122.42548370 129.41604614]
[109.23390198 134.57836914]
[95.53453064 134.30142212]
[83.41229248 128.98017883]
[74.57855225 119.75106049]
[70.13055420 108.27032471]
[70.42124939 96.42461395]
[56.46230698 90.93389893]
[42.50336838 85.44318390]
[28.54442787 79.95246887]
[14.58548641 74.46174622]
[0.62654585 68.97103119]
[-13.33239460 63.48031235]
[-27.29133606 57.98959732]
[-41.25027466 52.49887848]
[-43.61281586 66.55414581]
[-55.15689468 79.51062012]
[-74.78871918 86.31237793]
[-89.06928253 90.90210724]
[-103.34983826 95.49184418]
[-117.63040161 100.08157349]
[-128.40119934 111.67037964]
[-142.88551331 108.19849396]
[-157.16607666 112.78823090]
[-167.77111816 125.29682922]
[-183.85586548 122.10106659]
[-188.87370300 106.48847198]
[-177.66271973 94.51993561]
[-161.75579834 98.50766754]
[-147.47525024 93.91793823]
[-137.72589111 82.65742493]
[-122.22013092 85.80101776]
[-107.93956757 81.21128082]
[-93.65901184 76.62155151]
[-79.37845612 72.03182220]
[-78.18368530 57.07947922]
[-91.55420685 50.28028107]
[-104.92472839 43.48108292]
[-118.29524994 36.68188477]
[-134.10345459 37.32332611]
[-141.94097900 24.65752602]
[-155.31149292 17.85832787]
[-168.68202209 11.05912876]
[-182.05255127 4.25993013]
[-197.86074829 4.90137291]
[-205.69827271 -7.76442719]
[-219.06878662 -14.56362629]
[-232.43931580 -21.36282349]
[-248.07723999 -17.78022575]
[-260.53805542 -27.88505363]
[-260.26290894 -43.92574692]
[-247.46284485 -53.59725952]
[-231.95700073 -49.48043442]
[-225.64012146 -34.73334885]
[-212.26959229 -27.93414879]
[-198.89906311 -21.13495064]
[-184.04721069 -22.26271820]
[-175.25334167 -9.11059380]
[-161.88282776 -2.31139493]
[-148.51229858 4.48780346]
[-135.14176941 11.28700256]
[-120.28992462 10.15923500]
[-111.49605560 23.31135941]
[-98.12553406 30.11055756]
[-84.75500488 36.90975571]
[-71.38448334 43.70895386]
[-60.32307816 33.57755280]
[-65.92492676 19.66283607]
[-71.52677155 5.74811840]
[-77.12860870 -8.16659832]
[-91.76525116 -14.12849903]
[-97.82213593 -28.72609138]
[-91.70582581 -43.29888153]
[-77.04500580 -49.20109177]
[-62.53769684 -42.93104935]
[-56.79082108 -28.20865250]
[-63.21389389 -13.76844215]
[-57.61205292 0.14627424]
[-52.01020813 14.06099129]
[-46.40836334 27.97570801]
[-35.75955963 38.53993988]
[-21.80061913 44.03065491]
[-7.84167767 49.52137375]
[6.11726332 55.01208878]
[20.07620430 60.50280762]
[34.03514481 65.99352264]
[47.99408340 71.48424530]
[61.95302582 76.97496033]
[75.91196442 82.46567535]
[82.98791504 74.09303284]
[92.95850372 68.58707428]
[104.66007996 66.93511200]
[116.60026550 69.65269470]
[127.14829254 76.67835236]
[134.75692749 87.34449005]
[142.08363342 74.25559235]
[149.41033936 61.16669083]
[156.73706055 48.07778931]
[164.06376648 34.98888779]
[163.30491638 18.60730743]
[177.25646973 9.98835850]
[191.56625366 17.99847794]
[191.51359558 34.39754105]
[177.15266418 42.31559753]
[169.82595825 55.40449905]
[162.49925232 68.49340057]
[155.17253113 81.58229828]
[147.84582520 94.67120361]
[153.66885376 108.49481964]
[168.15255737 112.39635468]
[182.63627625 116.29788971]
[197.11999512 120.19943237]
[211.60371399 124.10096741]
[226.94139099 120.21943665]
[237.21810913 131.00082397]
[251.70182800 134.90235901]
[266.18554688 138.80389404]
[280.66925049 142.70542908]
[295.15295410 146.60696411]
[309.63668823 150.50849915]
[324.12039185 154.41003418]
[338.60412598 158.31158447]
[353.94180298 154.43005371]
[364.21850586 165.21142578]
[378.70223999 169.11297607]
[393.18594360 173.01451111]
[402.29806519 172.22509766]
[407.86856079 177.09545898]
[422.28820801 181.22746277]
[436.70788574 185.35946655]
[445.83142090 184.71548462]
[451.32354736 189.67404175]
[465.67547607 194.03547668]
[480.02740479 198.39689636]
[499.42495728 192.93852234]
[512.02770996 207.59452820]
[526.51147461 211.49606323]
[540.99517822 215.39759827]
[555.47888184 219.29913330]
[569.96258545 223.20066833]
[584.52825928 216.47601318]
[598.80212402 223.79963684]
[601.83459473 239.55349731]
[591.29931641 251.65257263]
[575.27807617 250.81549072]
[566.06103516 237.68438721]
[551.57733154 233.78285217]
[537.09362793 229.88131714]
[522.60992432 225.97978210]
[508.12619019 222.07824707]
[499.75186157 227.95803833]
[489.30407715 228.25785828]
[480.23263550 222.63676453]
[475.66598511 212.74882507]
[461.31405640 208.38740540]
[446.96212769 204.02598572]
[432.57586670 199.77912903]
[418.15621948 195.64712524]
[403.73654175 191.51512146]
[389.28439331 187.49821472]
[374.80068970 183.59667969]
[360.31698608 179.69514465]
[346.01525879 183.85574341]
[334.70257568 172.79528809]
[320.21887207 168.89375305]
[305.73513794 164.99221802]
[291.25143433 161.09068298]
[276.76773071 157.18914795]
[262.28399658 153.28761292]
[247.80029297 149.38607788]
[233.31657410 145.48452759]
[219.01486206 149.64512634]
[207.70217896 138.58468628]
[193.21846008 134.68315125]
[178.73474121 130.78160095]
[164.25102234 126.88007355]
[149.76731873 122.97853088]
[137.30357361 131.32450867]
[135.39511108 146.20260620]
[141.31370544 160.87506104]
[132.01997375 172.51446533]
[130.11151123 187.39256287]
[142.68522644 196.11955261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 195]
[11 194]
[13 192]
[14 191]
[20 102]
[21 101]
[22 100]
[23 99]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[31 48]
[32 47]
[33 46]
[34 45]
[36 43]
[37 42]
[49 79]
[50 78]
[51 77]
[52 76]
[54 74]
[55 73]
[56 72]
[57 71]
[59 69]
[60 68]
[61 67]
[80 93]
[81 92]
[82 91]
[83 90]
[108 121]
[109 120]
[110 119]
[111 118]
[112 117]
[122 190]
[123 189]
[124 188]
[125 187]
[126 186]
[128 184]
[129 183]
[130 182]
[131 181]
[132 180]
[133 179]
[134 178]
[135 177]
[137 175]
[138 174]
[139 173]
[141 172]
[142 171]
[143 170]
[145 169]
[146 168]
[147 167]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
