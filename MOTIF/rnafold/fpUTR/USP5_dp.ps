%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (USP5)
} def

/sequence { (\
AGGGGAGGGGACUGGGAACGGUGGGAGCCGCCGUGUGUGGAGAAGCUGCUGCCGGUGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.025316840 ubox
1 50 0.014363734 ubox
2 12 0.026672420 ubox
2 13 0.044469418 ubox
2 29 0.007041130 ubox
2 49 0.015204280 ubox
2 53 0.071237160 ubox
2 59 0.012645856 ubox
3 12 0.048092513 ubox
3 13 0.037817761 ubox
3 28 0.007264656 ubox
3 29 0.014597908 ubox
3 50 0.022143481 ubox
3 52 0.062218855 ubox
3 53 0.885104487 ubox
3 58 0.005357311 ubox
3 59 0.004436708 ubox
4 12 0.039724592 ubox
4 13 0.019883707 ubox
4 28 0.014946521 ubox
4 29 0.022020976 ubox
4 47 0.015206647 ubox
4 49 0.027383888 ubox
4 50 0.021161623 ubox
4 52 0.886423944 ubox
4 53 0.092347074 ubox
4 59 0.005436021 ubox
5 12 0.020787500 ubox
5 28 0.022595477 ubox
5 46 0.015245586 ubox
5 49 0.023527220 ubox
5 52 0.092426081 ubox
5 59 0.010790689 ubox
6 13 0.072632701 ubox
6 47 0.032197224 ubox
6 50 0.889778672 ubox
6 58 0.008642569 ubox
7 12 0.074514359 ubox
7 13 0.006525492 ubox
7 29 0.007358901 ubox
7 46 0.032316869 ubox
7 47 0.023629877 ubox
7 49 0.892447030 ubox
7 50 0.009646902 ubox
7 59 0.037434151 ubox
8 12 0.006945889 ubox
8 28 0.007599554 ubox
8 46 0.028825013 ubox
8 47 0.076182459 ubox
8 49 0.010664720 ubox
8 58 0.031689169 ubox
8 59 0.378114995 ubox
9 46 0.084018060 ubox
9 47 0.885007240 ubox
9 58 0.396964680 ubox
9 59 0.031495336 ubox
10 46 0.886751922 ubox
10 58 0.029904448 ubox
10 59 0.072365820 ubox
11 22 0.034202168 ubox
11 36 0.018732056 ubox
11 38 0.068885414 ubox
11 56 0.416925626 ubox
11 58 0.073267125 ubox
12 21 0.034641330 ubox
12 35 0.018889860 ubox
12 37 0.069411888 ubox
12 40 0.359572584 ubox
12 42 0.577447468 ubox
12 45 0.517949212 ubox
12 55 0.418194042 ubox
12 57 0.073142435 ubox
13 20 0.034617485 ubox
13 33 0.004500526 ubox
13 35 0.005728760 ubox
13 37 0.010001547 ubox
13 39 0.363544943 ubox
13 41 0.574875592 ubox
13 44 0.511626053 ubox
13 54 0.417174824 ubox
14 19 0.035652432 ubox
14 32 0.005709516 ubox
14 36 0.022386299 ubox
14 38 0.397786974 ubox
14 53 0.416883057 ubox
14 56 0.003704972 ubox
14 59 0.061163162 ubox
15 31 0.005694474 ubox
15 32 0.007283189 ubox
15 52 0.414053035 ubox
15 53 0.020869674 ubox
15 58 0.063590747 ubox
15 59 0.023562938 ubox
16 31 0.007272461 ubox
16 49 0.010809566 ubox
16 52 0.026929748 ubox
16 58 0.022479590 ubox
16 59 0.022548706 ubox
17 58 0.021715568 ubox
18 34 0.952643851 ubox
18 36 0.046150154 ubox
18 38 0.052936496 ubox
18 56 0.026250693 ubox
18 58 0.015002527 ubox
19 30 0.015408182 ubox
19 33 0.962646918 ubox
19 35 0.036673018 ubox
19 37 0.043517489 ubox
19 39 0.005737711 ubox
19 48 0.154701668 ubox
19 51 0.134614314 ubox
19 54 0.154498458 ubox
19 55 0.018997145 ubox
19 57 0.016221438 ubox
20 29 0.015921260 ubox
20 32 0.964449443 ubox
20 34 0.006587893 ubox
20 36 0.018497321 ubox
20 47 0.156134056 ubox
20 50 0.135377896 ubox
20 53 0.157086843 ubox
20 56 0.016008371 ubox
21 28 0.015930916 ubox
21 31 0.964502993 ubox
21 34 0.004548368 ubox
21 46 0.156359843 ubox
21 49 0.135845522 ubox
21 52 0.157149539 ubox
22 27 0.015676437 ubox
22 30 0.964121251 ubox
22 33 0.015573320 ubox
22 45 0.155763321 ubox
22 48 0.135524204 ubox
22 51 0.156902495 ubox
22 54 0.016058438 ubox
23 29 0.964335257 ubox
23 32 0.017106947 ubox
23 47 0.134935590 ubox
23 50 0.156637932 ubox
23 53 0.016578529 ubox
24 28 0.948781168 ubox
24 31 0.017099746 ubox
24 32 0.008583854 ubox
24 46 0.135294437 ubox
24 47 0.005165402 ubox
24 49 0.157236087 ubox
24 52 0.016577278 ubox
25 31 0.008574653 ubox
25 46 0.006813536 ubox
26 47 0.156888094 ubox
26 50 0.016533690 ubox
27 46 0.157403118 ubox
27 49 0.016586431 ubox
27 58 0.003226689 ubox
28 40 0.207194822 ubox
28 45 0.155766980 ubox
28 48 0.016498833 ubox
29 37 0.010116643 ubox
29 39 0.208574347 ubox
29 57 0.014494456 ubox
30 36 0.010640329 ubox
30 38 0.208298735 ubox
30 46 0.016038417 ubox
30 56 0.031249451 ubox
31 35 0.010696756 ubox
31 37 0.208023062 ubox
31 40 0.155554876 ubox
31 45 0.015663748 ubox
31 55 0.032118140 ubox
32 39 0.155579409 ubox
32 54 0.032126454 ubox
33 38 0.100782494 ubox
33 49 0.008908087 ubox
33 52 0.004500813 ubox
33 53 0.031893225 ubox
34 48 0.009040021 ubox
34 51 0.010130061 ubox
35 46 0.062540324 ubox
35 47 0.010298492 ubox
35 49 0.080989760 ubox
35 50 0.038860953 ubox
35 52 0.034840550 ubox
35 53 0.005868573 ubox
36 45 0.062673730 ubox
36 48 0.078375062 ubox
36 51 0.038377326 ubox
37 46 0.102375263 ubox
37 47 0.014859130 ubox
37 49 0.317985807 ubox
37 50 0.003170968 ubox
37 52 0.025411496 ubox
38 45 0.101622376 ubox
38 48 0.317770114 ubox
38 51 0.034898375 ubox
38 54 0.005654619 ubox
39 47 0.318124802 ubox
39 50 0.049892500 ubox
39 53 0.008530095 ubox
40 46 0.318663902 ubox
40 49 0.051228441 ubox
40 52 0.008633598 ubox
41 47 0.034624048 ubox
41 50 0.045254142 ubox
42 46 0.034354990 ubox
42 49 0.046251944 ubox
42 59 0.012058857 ubox
43 58 0.011178343 ubox
44 50 0.014558833 ubox
45 49 0.014682154 ubox
45 52 0.020497487 ubox
45 56 0.013636943 ubox
46 51 0.027393641 ubox
46 55 0.013996193 ubox
47 54 0.013947957 ubox
48 53 0.013468804 ubox
51 58 0.004603778 ubox
52 57 0.004817274 ubox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
6 50 0.9500000 lbox
7 49 0.9500000 lbox
9 47 0.9500000 lbox
10 46 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
showpage
end
%%EOF
