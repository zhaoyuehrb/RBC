%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCGCGCGUCGUGCGUAAUGACGUCAGCGCCGGCGGAGAAUUUCAAAUUCGAACGGCUUUGGCGGGCCGAGGAAGGACCUGGUGUUUUGAUGACCGCUGUCCUGUCUAGCAGAUACUUGCACGGUUUACAGAAAUUCGGUCCCUGGGUCGUGUCAGGAAACUGGAAAAAAGGUCAUAAGC\
) } def
/len { sequence length } bind def

/coor [
[85.98873901 245.14640808]
[72.60218811 238.37882996]
[66.56513977 224.64935303]
[61.03369522 238.59220886]
[55.50225067 252.53506470]
[49.97080612 266.47790527]
[44.43936539 280.42077637]
[38.90792084 294.36361694]
[33.37647629 308.30645752]
[33.15580750 325.25897217]
[16.80471802 329.73986816]
[7.97252417 315.26818848]
[19.43362427 302.77502441]
[24.96506691 288.83218384]
[30.49651146 274.88931274]
[36.02795410 260.94647217]
[41.55939865 247.00361633]
[47.09084320 233.06076050]
[52.62228775 219.11790466]
[57.30649567 204.86805725]
[61.12656403 190.36264038]
[64.94663239 175.85722351]
[68.76669312 161.35180664]
[72.58676147 146.84638977]
[63.27762222 135.08459473]
[48.28259277 135.47082520]
[33.28756714 135.85704041]
[18.29253960 136.24325562]
[3.29751301 136.62947083]
[-10.29886436 144.71952820]
[-23.22113609 137.31250000]
[-38.21616364 137.69871521]
[-53.21118927 138.08493042]
[-68.20621490 138.47116089]
[-83.66820526 148.45039368]
[-98.75360107 139.50465393]
[-113.73978424 140.14822388]
[-128.72596741 140.79179382]
[-143.71215820 141.43536377]
[-150.74261475 155.09071350]
[-163.66749573 163.38786316]
[-179.01011658 164.09492493]
[-192.64335632 157.02171326]
[-200.89994812 144.07087708]
[-201.55891418 128.72612000]
[-194.44299316 115.11511993]
[-181.46633911 106.89916229]
[-166.11959839 106.28829193]
[-152.53097534 113.44683838]
[-144.35572815 126.44918060]
[-129.36953735 125.80561066]
[-114.38335419 125.16204071]
[-99.39717102 124.51846313]
[-90.97621155 115.81262970]
[-78.47955322 115.16784668]
[-68.59243774 123.47612762]
[-53.59740829 123.08991241]
[-38.60238266 122.70368958]
[-23.60735512 122.31747437]
[-11.08352184 114.25503540]
[2.91129422 121.63444519]
[17.90632057 121.24822998]
[32.90134811 120.86200714]
[47.89637375 120.47579193]
[62.89140320 120.08956909]
[73.51812744 77.87466431]
[108.37056732 74.52084351]
[116.85073853 62.14802551]
[125.33090973 49.77520370]
[133.81108093 37.40238190]
[135.23078918 21.64500237]
[148.80822754 15.52109337]
[157.28839111 3.14827132]
[165.76856995 -9.22455025]
[166.17089844 -14.47878933]
[168.34431458 -18.62724876]
[171.56468201 -21.17792892]
[175.01745605 -22.00061607]
[184.12332153 -33.92048264]
[193.22918701 -45.84035110]
[202.33505249 -57.76021957]
[204.56404114 -73.42362213]
[218.43873596 -78.84046173]
[227.54460144 -90.76033020]
[236.65046692 -102.68019867]
[239.38330078 -111.42293549]
[246.01637268 -114.72474670]
[255.32551575 -126.48654175]
[264.63464355 -138.24833679]
[273.94378662 -150.01013184]
[283.25292969 -161.77192688]
[281.61962891 -177.26289368]
[291.22796631 -189.05842590]
[306.00631714 -190.52006531]
[315.31546021 -202.28186035]
[324.62460327 -214.04367065]
[333.93374634 -225.80546570]
[343.24288940 -237.56726074]
[346.12539673 -246.26179504]
[352.81417847 -249.44924927]
[362.32385254 -261.04949951]
[371.83352661 -272.64978027]
[369.78549194 -290.01089478]
[380.70266724 -303.22958374]
[397.46487427 -304.45025635]
[406.77401733 -316.21206665]
[416.08316040 -327.97384644]
[425.39230347 -339.73565674]
[434.70144653 -351.49746704]
[439.79031372 -367.66964722]
[456.73922729 -367.25656128]
[461.03421021 -350.85568237]
[446.46325684 -342.18832397]
[437.15411377 -330.42651367]
[427.84497070 -318.66470337]
[418.53582764 -306.90292358]
[409.22668457 -295.14111328]
[412.49285889 -282.66177368]
[407.89923096 -270.39953613]
[396.91589355 -262.91836548]
[383.43377686 -263.14010620]
[373.92410278 -251.53984070]
[364.41442871 -239.93957520]
[355.00466919 -228.25811768]
[345.69552612 -216.49632263]
[336.38638306 -204.73452759]
[327.07723999 -192.97273254]
[317.76809692 -181.21092224]
[319.73992920 -166.49197388]
[310.46670532 -154.43122864]
[295.01473999 -152.46278381]
[285.70559692 -140.70098877]
[276.39645386 -128.93919373]
[267.08731079 -117.17739868]
[257.77816772 -105.41560364]
[248.57032776 -93.57433319]
[239.46446228 -81.65446472]
[230.35859680 -69.73459625]
[228.78091431 -54.92378616]
[214.25491333 -48.65435791]
[205.14904785 -36.73448944]
[196.04318237 -24.81462097]
[186.93731689 -12.89475346]
[178.14138794 -0.74438012]
[169.66122437 11.62844181]
[161.18104553 24.00126266]
[160.36790466 38.87365723]
[146.18389893 45.88255310]
[137.70373535 58.25537491]
[129.22355652 70.62819672]
[120.74339294 83.00101471]
[129.34281921 91.09751129]
[134.34478760 103.35488129]
[133.85238647 118.02674103]
[126.84529114 132.55717468]
[137.31445312 143.29945374]
[147.78361511 154.04173279]
[158.25277710 164.78401184]
[174.17535400 168.70880127]
[178.47715759 184.53366089]
[166.73286438 195.97935486]
[151.02400208 191.27151489]
[147.51049805 175.25317383]
[137.04133606 164.51089478]
[126.57217407 153.76861572]
[116.10301208 143.02633667]
[108.85030365 144.93635559]
[112.88773346 159.38278198]
[120.83740997 172.10295105]
[111.29673004 183.67773438]
[97.29293823 178.30242920]
[97.94673157 163.31756592]
[94.34488678 148.75642395]
[87.09217834 150.66645813]
[83.27210999 165.17187500]
[79.45204926 179.67729187]
[75.63198090 194.18270874]
[71.81191254 208.68812561]
[84.81950378 201.21801758]
[99.61033630 203.71427917]
[109.44579315 215.03964233]
[109.84490204 230.03433228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[31 59]
[32 58]
[33 57]
[34 56]
[36 53]
[37 52]
[38 51]
[39 50]
[67 151]
[68 150]
[69 149]
[70 148]
[72 146]
[73 145]
[74 144]
[78 143]
[79 142]
[80 141]
[81 140]
[83 138]
[84 137]
[85 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[100 123]
[101 122]
[102 121]
[105 117]
[106 116]
[107 115]
[108 114]
[109 113]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
