%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYOG)
} def

/sequence { (\
AAAUGGCACCCAGCAGUUGGCGUGAGGGGCUGCUGGAGCUUGGGGGCUGGUGGCAGGAACAAGCCUUUUCCGACCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.040336470 ubox
2 40 0.021971376 ubox
2 41 0.080089882 ubox
3 40 0.040323780 ubox
4 35 0.008729266 ubox
4 42 0.044860425 ubox
4 49 0.004568353 ubox
4 55 0.011791559 ubox
4 72 0.004220706 ubox
5 31 0.003583378 ubox
5 34 0.017044368 ubox
5 40 0.896632895 ubox
5 41 0.063029217 ubox
5 48 0.028622275 ubox
5 54 0.013216799 ubox
5 71 0.006827558 ubox
5 75 0.009724036 ubox
5 76 0.007208622 ubox
5 77 0.005285218 ubox
6 30 0.003729268 ubox
6 33 0.017874386 ubox
6 39 0.972347410 ubox
6 40 0.020310569 ubox
6 47 0.030046357 ubox
6 70 0.006696401 ubox
6 74 0.009630791 ubox
6 75 0.006980471 ubox
6 76 0.005128486 ubox
7 24 0.016136775 ubox
7 29 0.003709314 ubox
7 32 0.017878121 ubox
7 38 0.971532487 ubox
7 42 0.025611596 ubox
7 46 0.029603794 ubox
7 52 0.013291305 ubox
8 23 0.016186178 ubox
8 31 0.017776311 ubox
8 41 0.024660315 ubox
8 51 0.013320720 ubox
9 22 0.016190901 ubox
9 28 0.003485877 ubox
9 29 0.017815637 ubox
9 36 0.193040093 ubox
9 44 0.028904379 ubox
9 45 0.007235132 ubox
9 50 0.013273479 ubox
10 20 0.016197086 ubox
10 27 0.003497880 ubox
10 28 0.017819369 ubox
10 35 0.137169789 ubox
10 36 0.978865296 ubox
10 43 0.029008651 ubox
10 44 0.006922124 ubox
10 49 0.008609431 ubox
11 19 0.016199746 ubox
11 26 0.003480880 ubox
11 27 0.017811810 ubox
11 35 0.989762956 ubox
11 42 0.028976174 ubox
11 43 0.006572767 ubox
12 18 0.015761174 ubox
12 34 0.998903985 ubox
12 40 0.018720832 ubox
12 41 0.022267790 ubox
13 17 0.010693835 ubox
13 21 0.003294557 ubox
13 23 0.003255350 ubox
13 33 0.999257199 ubox
13 39 0.026151057 ubox
13 40 0.011489984 ubox
14 20 0.003298423 ubox
14 22 0.003282232 ubox
14 24 0.017679800 ubox
14 32 0.999255380 ubox
14 35 0.011744535 ubox
14 38 0.025841461 ubox
15 23 0.017396636 ubox
15 31 0.998424451 ubox
15 34 0.014835911 ubox
15 40 0.004054508 ubox
16 30 0.998025196 ubox
16 33 0.014914683 ubox
16 39 0.004575484 ubox
17 25 0.009186389 ubox
17 26 0.021470104 ubox
17 27 0.010666770 ubox
17 28 0.091501669 ubox
17 29 0.990860480 ubox
17 32 0.011622114 ubox
17 36 0.022832069 ubox
17 38 0.004517511 ubox
18 24 0.018214256 ubox
18 25 0.069051724 ubox
18 26 0.036700282 ubox
18 27 0.128693021 ubox
18 28 0.949634822 ubox
18 32 0.009253097 ubox
18 35 0.023229816 ubox
18 37 0.003602327 ubox
19 23 0.016849692 ubox
19 31 0.036609287 ubox
19 34 0.024734611 ubox
20 30 0.050836643 ubox
20 33 0.024930523 ubox
21 29 0.053872559 ubox
21 32 0.024922922 ubox
22 30 0.019505246 ubox
22 31 0.014917426 ubox
23 29 0.019613658 ubox
26 77 0.014190001 ubox
27 41 0.006067003 ubox
27 76 0.014312072 ubox
28 40 0.007214568 ubox
28 75 0.014312330 ubox
29 39 0.007512296 ubox
29 74 0.014270024 ubox
30 38 0.007532949 ubox
31 37 0.007499512 ubox
31 72 0.009886246 ubox
32 71 0.009914234 ubox
34 72 0.008294747 ubox
35 66 0.006393993 ubox
35 68 0.008138716 ubox
35 71 0.011178910 ubox
36 65 0.006549180 ubox
36 67 0.008624947 ubox
36 70 0.011205728 ubox
37 48 0.039947011 ubox
37 66 0.009073180 ubox
37 69 0.011133801 ubox
38 47 0.041019665 ubox
38 64 0.019232263 ubox
38 65 0.006476575 ubox
38 68 0.005841491 ubox
39 46 0.040992809 ubox
39 63 0.020345136 ubox
40 45 0.037903449 ubox
40 62 0.020376677 ubox
40 73 0.043618783 ubox
41 61 0.020385301 ubox
41 72 0.061765009 ubox
42 60 0.020385312 ubox
42 68 0.025314324 ubox
42 70 0.004701711 ubox
42 71 0.069461390 ubox
42 75 0.009243572 ubox
42 76 0.048678352 ubox
42 77 0.528469015 ubox
43 67 0.032910124 ubox
43 69 0.003827144 ubox
43 70 0.069177362 ubox
43 71 0.007207265 ubox
43 74 0.009255838 ubox
43 75 0.048739747 ubox
43 76 0.533232971 ubox
43 77 0.828244902 ubox
44 66 0.068372562 ubox
44 67 0.004096626 ubox
44 69 0.036360697 ubox
44 70 0.007101106 ubox
44 71 0.004401396 ubox
44 74 0.048321595 ubox
44 75 0.531884908 ubox
44 76 0.838689676 ubox
44 77 0.015835540 ubox
45 65 0.080671996 ubox
45 68 0.007074200 ubox
45 69 0.004114237 ubox
45 70 0.004778044 ubox
45 71 0.028863709 ubox
45 74 0.530207790 ubox
45 75 0.839609335 ubox
45 76 0.015816148 ubox
45 77 0.003864948 ubox
46 54 0.031762741 ubox
46 64 0.081266053 ubox
46 67 0.005035422 ubox
46 68 0.003703689 ubox
46 69 0.004703176 ubox
46 70 0.030625882 ubox
46 74 0.839994940 ubox
46 75 0.015354450 ubox
46 76 0.003894640 ubox
47 53 0.031809672 ubox
47 56 0.020678255 ubox
47 63 0.081276255 ubox
48 52 0.028657461 ubox
48 55 0.022049392 ubox
48 61 0.011992296 ubox
48 62 0.074923927 ubox
48 72 0.934323429 ubox
49 54 0.022312577 ubox
49 60 0.016718247 ubox
49 65 0.006887388 ubox
49 67 0.023611262 ubox
49 68 0.059403426 ubox
49 69 0.026330697 ubox
49 70 0.097622870 ubox
49 71 0.981632894 ubox
49 75 0.016533070 ubox
49 77 0.046711926 ubox
50 60 0.074882112 ubox
50 64 0.006889921 ubox
50 66 0.024686383 ubox
50 67 0.060163443 ubox
50 68 0.030893487 ubox
50 69 0.091359512 ubox
50 70 0.979125695 ubox
50 74 0.016981705 ubox
50 76 0.047322760 ubox
51 59 0.075209910 ubox
51 61 0.019808824 ubox
51 63 0.006564574 ubox
51 72 0.028230462 ubox
51 73 0.014154584 ubox
52 60 0.020919385 ubox
52 65 0.630291828 ubox
52 66 0.029617993 ubox
52 67 0.039373755 ubox
52 68 0.498212510 ubox
52 69 0.222146044 ubox
52 70 0.007578296 ubox
52 71 0.036649620 ubox
52 75 0.048401964 ubox
53 64 0.634393319 ubox
53 65 0.022071327 ubox
53 66 0.014809912 ubox
53 67 0.534643721 ubox
53 68 0.265283421 ubox
53 69 0.017710901 ubox
53 70 0.036701224 ubox
53 74 0.048430457 ubox
54 63 0.634630723 ubox
55 66 0.751600981 ubox
55 67 0.033819756 ubox
55 68 0.004093688 ubox
55 69 0.006310023 ubox
56 65 0.764575200 ubox
56 66 0.033662087 ubox
56 67 0.003764327 ubox
56 68 0.006139655 ubox
56 69 0.006088339 ubox
56 71 0.060155269 ubox
57 64 0.762514178 ubox
57 65 0.033948512 ubox
57 66 0.003724231 ubox
57 67 0.006236726 ubox
57 68 0.006515302 ubox
57 70 0.060332333 ubox
58 66 0.006077219 ubox
58 67 0.006637666 ubox
58 68 0.003220017 ubox
58 69 0.060119170 ubox
59 66 0.005984080 ubox
59 67 0.003426801 ubox
59 68 0.057849756 ubox
61 67 0.009385911 ubox
61 68 0.003704792 ubox
62 66 0.007395538 ubox
62 67 0.004749404 ubox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
7 38 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
45 75 0.9500000 lbox
46 74 0.9500000 lbox
48 72 0.9500000 lbox
49 71 0.9500000 lbox
50 70 0.9500000 lbox
52 65 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
showpage
end
%%EOF
