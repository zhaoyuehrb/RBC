%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NT5DC3)
} def

/sequence { (\
GCAGAGCGGCGCGGCGGCGGUGGCGGCAGCAGGCAGCAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.064845006 ubox
1 10 0.090741390 ubox
1 12 0.016422497 ubox
1 18 0.005380239 ubox
1 21 0.004042338 ubox
1 24 0.033472278 ubox
1 27 0.107798195 ubox
1 30 0.088135151 ubox
1 34 0.461823501 ubox
1 37 0.410564038 ubox
1 41 0.473223244 ubox
2 6 0.064460895 ubox
2 9 0.090807934 ubox
2 11 0.016432505 ubox
2 17 0.005374406 ubox
2 20 0.004184169 ubox
2 22 0.028346856 ubox
2 23 0.032806125 ubox
2 26 0.107744949 ubox
2 29 0.088120031 ubox
2 33 0.461838198 ubox
2 36 0.410617025 ubox
2 40 0.478500849 ubox
3 21 0.028910507 ubox
6 12 0.006191082 ubox
6 15 0.007643182 ubox
6 18 0.037605864 ubox
6 21 0.023899028 ubox
6 24 0.113840400 ubox
6 27 0.077900370 ubox
6 30 0.495350243 ubox
6 34 0.409163554 ubox
6 37 0.715559721 ubox
6 41 0.062973756 ubox
7 11 0.006154043 ubox
7 14 0.007643812 ubox
7 17 0.037578296 ubox
7 19 0.010733901 ubox
7 20 0.024288204 ubox
7 22 0.108662078 ubox
7 23 0.110806212 ubox
7 25 0.027046029 ubox
7 26 0.076983647 ubox
7 29 0.495297236 ubox
7 33 0.409186916 ubox
7 36 0.714152434 ubox
7 40 0.063477358 ubox
8 15 0.003281167 ubox
8 18 0.010796456 ubox
8 21 0.112296710 ubox
8 24 0.029161083 ubox
9 15 0.037500117 ubox
9 18 0.024025164 ubox
9 21 0.105111679 ubox
9 24 0.029278941 ubox
9 27 0.401630139 ubox
9 30 0.258137541 ubox
9 34 0.714650905 ubox
9 37 0.069507484 ubox
9 41 0.009120989 ubox
10 14 0.037244041 ubox
10 16 0.010811700 ubox
10 17 0.024027359 ubox
10 19 0.132918659 ubox
10 20 0.082970406 ubox
10 22 0.031317625 ubox
10 23 0.026534284 ubox
10 25 0.422963205 ubox
10 26 0.291953196 ubox
10 29 0.257819840 ubox
10 33 0.714293847 ubox
10 36 0.069509095 ubox
10 40 0.009200377 ubox
11 15 0.010179439 ubox
11 18 0.148380413 ubox
11 21 0.032957921 ubox
11 24 0.507708201 ubox
11 27 0.215845331 ubox
11 30 0.774663474 ubox
11 34 0.051776781 ubox
11 37 0.023387904 ubox
11 41 0.022132754 ubox
12 17 0.148426087 ubox
12 19 0.053689007 ubox
12 20 0.031315136 ubox
12 22 0.014706540 ubox
12 23 0.508176614 ubox
12 25 0.088509079 ubox
12 26 0.215897620 ubox
12 29 0.774896690 ubox
12 33 0.051875217 ubox
12 36 0.023333223 ubox
12 40 0.022286082 ubox
13 18 0.054806482 ubox
13 21 0.011387731 ubox
13 24 0.089951000 ubox
14 21 0.507456758 ubox
14 24 0.215457214 ubox
14 27 0.805106230 ubox
14 30 0.061892280 ubox
14 34 0.023789003 ubox
14 37 0.024515843 ubox
14 41 0.007279170 ubox
15 20 0.508272022 ubox
15 22 0.091036877 ubox
15 23 0.214944729 ubox
15 25 0.011971069 ubox
15 26 0.807678589 ubox
15 29 0.061709769 ubox
15 33 0.023867278 ubox
15 36 0.024440785 ubox
15 40 0.007360944 ubox
16 21 0.082068486 ubox
16 24 0.010804952 ubox
17 24 0.807848859 ubox
17 27 0.058058704 ubox
17 30 0.025011218 ubox
17 34 0.024562357 ubox
17 37 0.010733038 ubox
17 41 0.003581522 ubox
18 23 0.807940417 ubox
18 25 0.030580998 ubox
18 26 0.054911648 ubox
18 29 0.024933610 ubox
18 33 0.024648137 ubox
18 36 0.010704235 ubox
18 40 0.003624784 ubox
19 24 0.036216909 ubox
20 27 0.023981703 ubox
20 30 0.004877126 ubox
20 34 0.011759386 ubox
20 37 0.009712707 ubox
20 41 0.006446683 ubox
21 26 0.023755136 ubox
21 28 0.007573142 ubox
21 29 0.004009224 ubox
21 31 0.006642638 ubox
21 33 0.011708253 ubox
21 36 0.009252721 ubox
21 40 0.006472169 ubox
22 27 0.008094531 ubox
22 30 0.005476683 ubox
23 30 0.035908875 ubox
23 34 0.024605873 ubox
23 37 0.067548803 ubox
23 41 0.017633200 ubox
24 29 0.036149227 ubox
24 33 0.024661934 ubox
24 36 0.067399811 ubox
24 40 0.017835096 ubox
26 34 0.077949801 ubox
26 37 0.040369824 ubox
26 41 0.063945520 ubox
27 33 0.078136992 ubox
27 36 0.040406710 ubox
27 40 0.064685457 ubox
29 37 0.124153831 ubox
29 41 0.019109829 ubox
30 36 0.124184140 ubox
30 40 0.019259484 ubox
33 41 0.091262632 ubox
34 40 0.092261019 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
showpage
end
%%EOF
