%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCACAGGCCAAGGGCAGCAGUCAGGCCUGCUCUGUCUGUGAACGCUCCCGGCUUGGCCUCGGCUGAUGGGCCCUCACGCCUGAAGCGGGCAGGAAGCUCCGGG\
) } def
/len { sequence length } bind def

/coor [
[92.63373566 108.43040466]
[77.73902130 110.20449829]
[62.84430313 111.97859955]
[48.04314804 114.41289520]
[33.36480331 117.50257111]
[18.68645477 120.59224701]
[4.00810719 123.68193054]
[-10.67024040 126.77160645]
[-25.34858704 129.86128235]
[-40.02693558 132.95097351]
[-45.40043640 137.23820496]
[-51.24695587 137.93444824]
[-55.66537476 135.76158142]
[-70.50097656 137.97627258]
[-85.33657837 140.19097900]
[-100.17218018 142.40567017]
[-115.00778961 144.62037659]
[-129.84338379 146.83506775]
[-144.64454651 149.26936340]
[-159.40800476 151.92271423]
[-168.22337341 165.04006958]
[-183.74801636 167.99998474]
[-196.77142334 159.04641724]
[-199.56704712 143.49136353]
[-190.47628784 130.56333923]
[-174.89254761 127.93232727]
[-162.06135559 137.15925598]
[-147.29789734 134.50590515]
[-141.17314148 130.15516663]
[-132.05809021 131.99946594]
[-117.22248077 129.78477478]
[-102.38687897 127.57006836]
[-87.55127716 125.35536957]
[-72.71567535 123.14067078]
[-57.88007355 120.92597198]
[-43.11661530 118.27262115]
[-28.43826675 115.18293762]
[-13.75992012 112.09326172]
[0.91842771 109.00358582]
[15.59677505 105.91390228]
[30.27512169 102.82422638]
[44.95346832 99.73454285]
[47.21498871 96.83179474]
[51.06912613 94.95639038]
[55.97940826 94.87934875]
[61.07020569 97.08388519]
[75.96492004 95.30978394]
[90.85964203 93.53569031]
[105.72643280 91.54106903]
[120.56203461 89.32637024]
[135.39764404 87.11167145]
[150.23324585 84.89697266]
[165.06884766 82.68227386]
[179.69979858 79.37542725]
[194.04580688 74.99457550]
[208.39183044 70.61372375]
[222.73783875 66.23287201]
[233.67660522 54.80247879]
[248.10871887 58.48535538]
[262.45474243 54.10450363]
[266.22485352 50.03480911]
[270.74954224 48.12586594]
[275.03265381 48.28844452]
[278.27243042 50.03321075]
[292.95077515 46.94353104]
[307.62911987 43.85385132]
[315.39636230 33.42525101]
[327.80264282 31.22270966]
[338.00985718 37.90003967]
[352.77331543 35.24668503]
[367.53677368 32.59333420]
[382.30023193 29.93997955]
[397.06369019 27.28662491]
[405.87905884 14.16927910]
[421.40371704 11.20935249]
[434.42712402 20.16291809]
[437.22274780 35.71798325]
[428.13198853 48.64600372]
[412.54821777 51.27701187]
[399.71704102 42.05008316]
[384.95358276 44.70343781]
[370.19012451 47.35679245]
[355.42666626 50.01014709]
[340.66320801 52.66349792]
[327.98913574 64.70144653]
[310.71881104 58.53219986]
[296.04046631 61.62187958]
[281.36212158 64.71155548]
[266.83557129 68.45051575]
[252.48956299 72.83136749]
[242.57691956 83.94841766]
[227.11869812 80.57888794]
[212.77267456 84.95973969]
[198.42666626 89.34059143]
[184.08064270 93.72144318]
[183.00540161 95.96675110]
[181.02471924 97.95140839]
[178.22485352 99.35221100]
[174.79876709 99.87955475]
[171.03280640 99.31067657]
[167.28353882 97.51787567]
[152.44793701 99.73257446]
[137.61233521 101.94727325]
[122.77673340 104.16197205]
[107.94113159 106.37667084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[3 46]
[4 42]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 28]
[20 27]
[49 105]
[50 104]
[51 103]
[52 102]
[53 101]
[54 95]
[55 94]
[56 93]
[57 92]
[59 90]
[60 89]
[64 88]
[65 87]
[66 86]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
