%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCAGAGUGGGAACCAUCGCCCGGUGCGGGCCUGAACUUCCAGGGCCGGCUACUCCUCGGCAGAGCGACCGCGCGGUGUCUCAGAGCGCGGCCCGGAGCCGCACUAAGAGCGCUGGACGGCGGGAGAGAGGCUCGGAGGACCGGUAGCUCCCAGCAAAGCGGCCCAGCGG\
) } def
/len { sequence length } bind def

/coor [
[99.87295532 126.90395355]
[95.62348938 141.28942871]
[91.37401581 155.67491150]
[87.12454224 170.06039429]
[82.87507629 184.44586182]
[89.24674225 199.16937256]
[81.58123016 213.26260376]
[65.75886536 215.91445923]
[53.91720963 205.09065247]
[55.14017105 189.09428406]
[68.48959351 180.19639587]
[72.73906708 165.81091309]
[76.98854065 151.42544556]
[81.23800659 137.03996277]
[85.48748016 122.65447998]
[80.51424408 118.55111694]
[76.66008759 113.38235474]
[74.14636993 107.44503021]
[73.11743927 101.08012390]
[58.55579376 97.48033905]
[43.99414825 93.88054657]
[29.43250275 90.28075409]
[14.87085819 86.68096924]
[0.30921283 83.08117676]
[-14.94451141 87.28051758]
[-25.44300270 76.71495819]
[-40.00464630 73.11517334]
[-54.56629181 69.51538086]
[-69.12793732 65.91558838]
[-86.66092682 82.18180847]
[-115.62494659 74.30482483]
[-130.57601929 75.51526642]
[-145.52709961 76.72570801]
[-158.65789795 85.55139160]
[-171.96803284 78.86636353]
[-186.91911316 80.07680511]
[-201.87020874 81.28724670]
[-216.82128906 82.49768066]
[-226.86611938 94.69919586]
[-242.60450745 96.14101410]
[-254.69912720 85.96773529]
[-255.97447205 70.21498871]
[-245.67388916 58.22859573]
[-229.90853882 57.11987305]
[-218.03172302 67.54660034]
[-203.08064270 66.33616638]
[-188.12956238 65.12572479]
[-173.17848206 63.91528320]
[-161.11708069 55.17617798]
[-146.73754883 61.77462769]
[-131.78646851 60.56418610]
[-116.83538055 59.35374832]
[-114.39008331 52.26357651]
[-128.57043457 47.37298203]
[-143.56800842 47.10353088]
[-147.94607544 32.75666428]
[-135.65417480 24.15960693]
[-123.67983246 33.19264221]
[-109.49948883 38.08323288]
[-107.05419159 30.99306297]
[-118.08045197 20.82341766]
[-129.10670471 10.65377140]
[-145.21565247 7.58230734]
[-150.35389709 -7.99107981]
[-139.23567200 -20.04582596]
[-123.29843140 -16.18103981]
[-118.93705750 -0.37248352]
[-107.91080475 9.79716301]
[-96.88455200 19.96680832]
[-78.05041504 24.42723656]
[-66.90406799 37.05760574]
[-65.52814484 51.35394669]
[-50.96650314 54.95373535]
[-36.40485764 58.55352783]
[-21.84321213 62.15331650]
[-7.63103437 57.69649506]
[3.90900278 68.51953125]
[18.47064781 72.11932373]
[33.03229523 75.71910858]
[47.59393692 79.31890106]
[62.15558243 82.91869354]
[76.71723175 86.51847839]
[93.95416260 71.02389526]
[119.14528656 73.99060822]
[125.16422272 60.25115967]
[131.18316650 46.51171494]
[125.67147064 31.94260597]
[131.97125244 18.09459877]
[145.89463806 12.92981911]
[151.91357422 -0.80962539]
[150.36399841 -16.55476379]
[162.55805969 -25.10778236]
[168.57699585 -38.84722900]
[174.59593201 -52.58667374]
[180.61488342 -66.32611847]
[186.63381958 -80.06555939]
[182.15774536 -95.47154236]
[191.52915955 -108.49291229]
[207.55912781 -109.14079285]
[217.95082092 -96.91818237]
[214.73262024 -81.20121765]
[200.37326050 -74.04662323]
[194.35432434 -60.30717468]
[188.33538818 -46.56772995]
[182.31643677 -32.82828522]
[176.29750061 -19.08884048]
[178.27760315 -4.32644081]
[165.65303040 5.20931578]
[159.63407898 18.94876099]
[165.27726746 32.68521118]
[159.36892700 46.70470428]
[144.92260742 52.53065491]
[138.90367126 66.27010345]
[132.88473511 80.00954437]
[138.02908325 94.09981537]
[151.48466492 100.72911072]
[164.94023132 107.35840607]
[178.39579773 113.98770905]
[191.85137939 120.61700439]
[205.30694580 127.24630737]
[223.63148499 125.59610748]
[232.83496094 140.52136230]
[246.40737915 146.90805054]
[260.20028687 152.80342102]
[274.19595337 158.19989014]
[288.23947144 163.47050476]
[302.32974243 168.61486816]
[316.41998291 173.75921631]
[330.51025391 178.90357971]
[344.60052490 184.04794312]
[354.23269653 177.01176453]
[365.94763184 175.52980042]
[376.80538940 179.85687256]
[384.13760376 188.80451965]
[386.20312500 200.06469727]
[400.09963989 205.71153259]
[409.26217651 206.04771423]
[414.19345093 211.58647156]
[427.98638916 217.48184204]
[441.77929688 223.37722778]
[457.98767090 220.88311768]
[468.03939819 233.84053040]
[461.59411621 248.92001343]
[445.28219604 250.60905457]
[435.88391113 237.17013550]
[422.09100342 231.27476501]
[408.29809570 225.37939453]
[394.45281982 219.60806274]
[380.55627441 213.96122742]
[364.18203735 222.09220886]
[346.75402832 215.59292603]
[339.45617676 198.13819885]
[325.36590576 192.99385071]
[311.27563477 187.84948730]
[297.18536377 182.70512390]
[283.09509277 177.56077576]
[275.70880127 178.22264099]
[268.79946899 172.19552612]
[254.80383301 166.79907227]
[252.16683960 167.84011841]
[248.95201111 167.88145447]
[245.54469299 166.69515991]
[242.40629578 164.19932556]
[240.02069092 160.48045349]
[226.44827271 154.09376526]
[214.94271851 157.89591980]
[203.57196045 152.65901184]
[198.67764282 140.70187378]
[185.22207642 134.07257080]
[171.76651001 127.44327545]
[158.31092834 120.81398010]
[144.85536194 114.18468475]
[131.39979553 107.55538177]
[123.66518402 119.23882294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[19 82]
[20 81]
[21 80]
[22 79]
[23 78]
[24 77]
[26 75]
[27 74]
[28 73]
[29 72]
[31 52]
[32 51]
[33 50]
[35 48]
[36 47]
[37 46]
[38 45]
[60 69]
[61 68]
[62 67]
[84 114]
[85 113]
[86 112]
[89 109]
[90 108]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[115 173]
[116 172]
[117 171]
[118 170]
[119 169]
[120 168]
[122 165]
[123 164]
[124 159]
[125 158]
[126 156]
[127 155]
[128 154]
[129 153]
[130 152]
[135 149]
[136 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
