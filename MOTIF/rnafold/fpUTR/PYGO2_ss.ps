%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUCCGGUUGCUGCCGCCGCUGGCGGGCGGCGAGUCUGGAGAGAGCGCGCAGUUUGCGCGGCGGCUCGGCGCUUCCCUGUCGUCGCACUUUGUGGUUGCUGCAGCUCGGGGGCCUGGGCUGCCCCUGACACCCCUUCUGGGCGAUGGUGCAGCCCAAGGGCGCCUCCAUCCCCCGCCGCUGCCGCUAACCCGGGUCCCCCACUCC\
) } def
/len { sequence length } bind def

/coor [
[130.12512207 499.55715942]
[128.30838013 484.66760254]
[119.08656311 472.97113037]
[125.09548187 458.33541870]
[123.27873993 443.44586182]
[121.46199799 428.55627441]
[119.64525604 413.66671753]
[117.82851410 398.77713013]
[104.93457031 394.27053833]
[95.19395447 384.60125732]
[90.54814148 371.61618042]
[91.95766449 357.83074951]
[99.20412445 345.94155884]
[110.92173004 338.29904175]
[109.33116150 323.38360596]
[100.28791809 311.54852295]
[106.51825714 297.00570679]
[104.92768860 282.09027100]
[95.88443756 270.25521851]
[102.11478424 255.71240234]
[100.52421570 240.79696655]
[96.68788147 234.47720337]
[99.02445984 225.64335632]
[97.66043091 210.70550537]
[96.29640961 195.76765442]
[94.93238831 180.82978821]
[93.56836700 165.89193726]
[92.20434570 150.95408630]
[88.46436310 144.57684326]
[90.93473053 135.77946472]
[89.79756927 120.82262421]
[84.32782745 99.24089813]
[71.69226837 91.15741730]
[59.05670929 83.07393646]
[46.42115021 74.99045563]
[37.50272369 73.00092316]
[33.65646744 66.68719482]
[21.14503860 58.41288757]
[8.63361168 50.13858032]
[-7.14509916 48.97976685]
[-13.49280167 35.50549698]
[-26.00422859 27.23118782]
[-41.78293991 26.07237434]
[-48.13064194 12.59810543]
[-60.64207077 4.32379675]
[-76.42078400 3.16498280]
[-82.76848602 -10.30928707]
[-95.27991486 -18.58359528]
[-107.79133606 -26.85790253]
[-120.30276489 -35.13221359]
[-136.08148193 -36.29102707]
[-142.42918396 -49.76529694]
[-154.94061279 -58.03960419]
[-167.45204163 -66.31391144]
[-171.79991150 -66.42247772]
[-175.51257324 -67.77460480]
[-178.27677917 -70.01737976]
[-179.92625427 -72.73233032]
[-180.45040894 -75.48916626]
[-192.43678284 -84.50729370]
[-204.42317200 -93.52542877]
[-216.40954590 -102.54356384]
[-228.39591980 -111.56169128]
[-240.38230896 -120.57982635]
[-252.36868286 -129.59796143]
[-264.35507202 -138.61608887]
[-279.80136108 -136.60366821]
[-291.82879639 -145.92008972]
[-293.65213013 -160.65817261]
[-305.63848877 -169.67630005]
[-321.66098022 -168.86424255]
[-332.17733765 -180.97976685]
[-329.12033081 -196.72886658]
[-314.83502197 -204.03018188]
[-300.27987671 -197.28279114]
[-296.62036133 -181.66268921]
[-284.63400269 -172.64454651]
[-269.96777344 -174.97647095]
[-257.68341064 -166.00155640]
[-255.33692932 -150.60246277]
[-243.35055542 -141.58433533]
[-231.36416626 -132.56620789]
[-219.37779236 -123.54807281]
[-207.39141846 -114.52993774]
[-195.40502930 -105.51181030]
[-183.41865540 -96.49367523]
[-171.43228149 -87.47554779]
[-159.17773438 -78.82534027]
[-146.66630554 -70.55103302]
[-134.15487671 -62.27672195]
[-119.27106476 -61.70974350]
[-112.02845764 -47.64363861]
[-99.51702881 -39.36933136]
[-87.00559998 -31.09502220]
[-74.49417877 -22.82071495]
[-59.61036682 -22.25373459]
[-52.36776352 -8.18763065]
[-39.85633469 0.08667730]
[-24.97252464 0.65365720]
[-17.72992134 14.71976089]
[-5.21849298 22.99406815]
[9.66531658 23.56104851]
[16.90792084 37.62715149]
[29.41934776 45.90146255]
[41.93077469 54.17576981]
[54.50463104 62.35490036]
[67.14019012 70.43837738]
[79.77574921 78.52185822]
[92.41130829 86.60533905]
[107.40958405 86.83297729]
[120.28464508 79.13669586]
[128.15995789 65.41481781]
[143.05415344 65.52585602]
[155.92921448 57.82957458]
[168.80427551 50.13329315]
[181.67933655 42.43701172]
[194.43611145 34.54622269]
[207.07167053 26.46274376]
[219.70722961 18.37926483]
[232.34278870 10.29578495]
[244.97836304 2.21230578]
[257.61392212 -5.87117386]
[270.24948120 -13.95465374]
[277.70471191 -27.90922165]
[292.59542847 -28.25025749]
[305.23098755 -36.33373642]
[303.42007446 -49.12396240]
[306.57064819 -61.60346985]
[314.18017578 -71.92618561]
[325.08929443 -78.57890320]
[337.65823364 -80.60306549]
[350.01336670 -77.73272705]
[360.32641602 -70.42891693]
[373.20147705 -78.12519836]
[386.07653809 -85.82147980]
[393.58264160 -100.40196228]
[409.97357178 -100.92135620]
[418.38772583 -86.84535217]
[410.16937256 -72.65413666]
[393.77282715 -72.94641876]
[380.89776611 -65.25013733]
[368.02270508 -57.55385590]
[368.90988159 -40.36192703]
[360.92819214 -25.00888252]
[346.19561768 -15.76421261]
[328.72122192 -15.25007248]
[313.31445312 -23.69817734]
[300.67889404 -15.61469746]
[294.12744141 -2.23831367]
[278.33294678 -1.31909394]
[265.69738770 6.76438570]
[253.06182861 14.84786510]
[240.42626953 22.93134499]
[227.79071045 31.01482391]
[215.15515137 39.09830475]
[202.51959229 47.18178177]
[200.63760376 51.57432175]
[195.97456360 54.82978821]
[189.37562561 55.31207657]
[176.50054932 63.00835800]
[163.62548828 70.70463562]
[150.75042725 78.40091705]
[143.79602051 91.57231140]
[127.98092651 92.01176453]
[115.10586548 99.70804596]
[130.10018921 99.29576874]
[140.51785278 110.08801270]
[139.57635498 125.05844116]
[127.88868713 134.46047974]
[113.06414795 132.17289734]
[104.75440216 119.68546295]
[105.89156342 134.64228821]
[107.14219666 149.59007263]
[108.50621796 164.52792358]
[109.87023926 179.46577454]
[111.23426056 194.40362549]
[112.59828949 209.34147644]
[113.96231079 224.27932739]
[115.43964386 239.20640564]
[117.03021240 254.12184143]
[126.18723297 267.02374268]
[119.84312439 280.49972534]
[121.43368530 295.41516113]
[130.59069824 308.31707764]
[124.24659729 321.79302979]
[125.83716583 336.70846558]
[141.01954651 343.25354004]
[150.77439880 356.48568726]
[152.51605225 372.73794556]
[145.86335754 387.56527710]
[132.71809387 396.96038818]
[134.53483582 411.84997559]
[136.35157776 426.73953247]
[138.16831970 441.62911987]
[139.98506165 456.51867676]
[149.33682251 469.28015137]
[143.19795227 482.85086060]
[145.01469421 497.74041748]
[158.95207214 504.35504150]
[167.08137512 517.46679688]
[166.80859375 532.89172363]
[158.22077942 545.70788574]
[144.05824280 551.82556152]
[128.84022522 549.29272461]
[117.42272186 538.91754150]
[113.44902802 524.01068115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[14 186]
[15 185]
[17 183]
[18 182]
[20 180]
[21 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[30 172]
[31 171]
[32 109]
[33 108]
[34 107]
[35 106]
[37 105]
[38 104]
[39 103]
[41 101]
[42 100]
[44 98]
[45 97]
[47 95]
[48 94]
[49 93]
[50 92]
[52 90]
[53 89]
[54 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[69 77]
[70 76]
[110 165]
[111 164]
[113 162]
[114 161]
[115 160]
[116 159]
[117 156]
[118 155]
[119 154]
[120 153]
[121 152]
[122 151]
[123 150]
[125 148]
[126 147]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
