%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCGUGCGCGCUGAGGAGGAGCCGCUGCCGCCGUCGCCGUCGCCGCCACCGCCGCCACCGCUACCGAGGCCGAGCGGAGCCGUUAGCGCCGCGCCGCCGCCGCCUCCCGCCCGCCCCGGAGCAGCCCCGGGCCCGCCCGCCCGCAUCCAGAUUUUUGAAAAAUACA\
) } def
/len { sequence length } bind def

/coor [
[87.31565857 103.72501373]
[72.98206329 99.30368805]
[58.64847565 94.88236237]
[43.18079758 98.20824432]
[33.29956818 87.06326294]
[18.96597862 82.64192963]
[4.63238573 78.22060394]
[-9.70120621 73.79927826]
[-24.03479767 69.37795258]
[-38.40910339 65.09083557]
[-52.82286072 60.93830109]
[-67.23662567 56.78576660]
[-81.65038300 52.63323593]
[-96.06414032 48.48070145]
[-110.47790527 44.32817078]
[-119.72430420 50.15533447]
[-130.43086243 49.91290665]
[-139.04244995 43.92427063]
[-142.83352661 34.38056564]
[-157.08193970 29.69198799]
[-171.06256104 36.56076050]
[-185.44567871 31.60290337]
[-191.90785217 18.23218918]
[-206.15626526 13.54361248]
[-220.40466309 8.85503578]
[-234.65307617 4.16645956]
[-248.90148926 -0.52211720]
[-263.23507690 -4.94344473]
[-277.64883423 -9.09597778]
[-292.06259155 -13.24851036]
[-304.29388428 -3.88357973]
[-319.51629639 -3.52075195]
[-331.88714600 -12.08964920]
[-336.78158569 -26.13182259]
[-351.19534302 -30.28435516]
[-366.59811401 -26.66982651]
[-376.68600464 -37.62809372]
[-391.09976196 -41.78062820]
[-406.50256348 -38.16609955]
[-416.59045410 -49.12436676]
[-431.00421143 -53.27689743]
[-446.40698242 -49.66236877]
[-456.49490356 -60.62063599]
[-470.90866089 -64.77317047]
[-486.31143188 -61.15864182]
[-496.39932251 -72.11690521]
[-510.81307983 -76.26943970]
[-526.59112549 -71.79894257]
[-538.16156006 -83.42036438]
[-533.62170410 -99.17859650]
[-517.64178467 -102.86290741]
[-506.66055298 -90.68319702]
[-492.24679565 -86.53067017]
[-477.87500000 -90.44221497]
[-466.75613403 -79.18692780]
[-452.34234619 -75.03439331]
[-437.97055054 -78.94593811]
[-426.85168457 -67.69065857]
[-412.43792725 -63.53812408]
[-398.06610107 -67.44966888]
[-386.94723511 -56.19438553]
[-372.53347778 -52.04185486]
[-358.16165161 -55.95339966]
[-347.04278564 -44.69811630]
[-332.62902832 -40.54558182]
[-321.01391602 -49.83143997]
[-305.98028564 -50.50524139]
[-293.28414917 -42.09921646]
[-287.91006470 -27.66226959]
[-273.49630737 -23.50973701]
[-259.08255005 -19.35720444]
[-254.51071167 -20.86412811]
[-248.94335938 -19.48538399]
[-244.21292114 -14.77052975]
[-229.96450806 -10.08195305]
[-215.71609497 -5.39337635]
[-201.46768188 -0.70479983]
[-187.21926880 3.98377681]
[-174.08001709 -2.93690538]
[-159.56332397 1.61500382]
[-152.39335632 15.44357681]
[-138.14494324 20.13215256]
[-119.59154510 14.77272415]
[-106.32537079 29.91440964]
[-91.91160583 34.06694031]
[-77.49784851 38.21947479]
[-63.08409119 42.37200546]
[-48.67033005 46.52453995]
[-34.25656891 50.67707443]
[-26.92807198 49.50223541]
[-19.61347008 55.04435730]
[-5.27987862 59.46568680]
[9.05371380 63.88701248]
[23.38730621 68.30834198]
[37.72089767 72.72966766]
[52.16334152 69.08754730]
[63.06980133 80.54876709]
[77.40339661 84.97010040]
[91.73698425 89.39142609]
[106.67147064 87.99097443]
[119.93319702 80.98194122]
[128.51873779 67.69288635]
[143.38652039 68.58650208]
[156.64825439 61.57746887]
[162.80499268 54.77209473]
[170.22413635 54.56399918]
[183.61460876 47.80417633]
[197.00508118 41.04434967]
[197.78614807 25.70532990]
[206.14553833 12.82060528]
[219.83462524 5.85610151]
[235.17112732 6.68523502]
[248.02958679 15.08497334]
[254.95114136 28.79582787]
[254.07394409 44.12965012]
[245.63394165 56.96171570]
[231.90145874 63.84026718]
[216.57046509 62.91500473]
[203.76490784 54.43482208]
[190.37443542 61.19464874]
[176.98396301 67.95447540]
[163.65728760 74.83920288]
[150.39555359 81.84822845]
[142.75857544 94.63594818]
[126.94223022 94.24367523]
[113.68049622 101.25270081]
[114.03099060 108.74450684]
[114.73198700 123.72811890]
[115.08248138 131.21992493]
[128.94067383 136.96017456]
[142.79887390 142.70042419]
[156.65705872 148.44067383]
[170.51525879 154.18092346]
[185.01876831 147.90209961]
[199.68315125 153.79542542]
[205.80828857 168.36450195]
[199.76025391 182.96577454]
[185.12722778 188.93653870]
[170.59072876 182.73446655]
[164.77500916 168.03912354]
[150.91680908 162.29887390]
[137.05862427 156.55862427]
[123.20042419 150.81837463]
[109.34223175 145.07812500]
[118.75191498 156.75962830]
[120.15193176 171.69415283]
[118.16407776 186.56185913]
[112.88979340 200.60400391]
[104.59824371 213.10400391]
[93.71254730 223.42396545]
[80.78822327 231.03724670]
[66.48483276 235.55531311]
[51.53229141 236.74760437]
[36.69366074 234.55328369]
[22.72617912 229.08433533]
[10.34263420 220.61982727]
[0.17497851 209.59173584]
[-7.25791454 196.56283569]
[-11.57673168 182.19802856]
[-12.56107521 167.23036194]
[-10.16071320 152.42366028]
[-4.49813938 138.53355408]
[4.13767433 126.26885986]
[15.30602741 116.25547028]
[28.43697929 109.00439453]
[42.86043549 104.88566589]
[57.84033585 104.10945892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[5 95]
[6 94]
[7 93]
[8 92]
[9 91]
[10 89]
[11 88]
[12 87]
[13 86]
[14 85]
[15 84]
[19 82]
[20 81]
[23 78]
[24 77]
[25 76]
[26 75]
[27 74]
[28 71]
[29 70]
[30 69]
[34 65]
[35 64]
[37 62]
[38 61]
[40 59]
[41 58]
[43 56]
[44 55]
[46 53]
[47 52]
[100 126]
[101 125]
[103 123]
[104 122]
[106 121]
[107 120]
[108 119]
[129 144]
[130 143]
[131 142]
[132 141]
[133 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
