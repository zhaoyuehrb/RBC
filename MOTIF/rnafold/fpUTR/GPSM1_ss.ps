%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGGCGGCGGUGACAUCACGGCCACGGCGGCGGGAGGGGCGGCGGCGCCCCGCGCACAUCACUUCCUCGGCGCCUCCCCGGGGGAGGACGGGCGAACGAGGCGCGGACGGACAGGCGGACAGCAGGGCGGACAGCAGGGAGGACAGCAGGGCGGGCAGGGGGCGGACGGCCACGGCGCGGGGGGCGCUCCCGGCUCCCGCUCCCGCGUCCCCGACCC\
) } def
/len { sequence length } bind def

/coor [
[74.31914520 133.16275024]
[63.16246796 143.18914795]
[52.00579071 153.21554565]
[40.84910965 163.24192810]
[29.69243050 173.26832581]
[18.53575134 183.29470825]
[7.37907219 193.32110596]
[12.63708687 212.00801086]
[-2.41820979 232.23777771]
[-9.57715225 245.41918945]
[-16.73609543 258.60061646]
[-16.52317047 274.42037964]
[-29.39665985 281.91186523]
[-36.55560303 295.09329224]
[-43.71454620 308.27468872]
[-42.74654007 324.64523315]
[-56.58687210 333.44168091]
[-70.99779510 325.61495972]
[-71.15458679 309.21658325]
[-56.89595413 301.11575317]
[-49.73701096 287.93432617]
[-42.57806778 274.75292969]
[-43.30304718 259.87597656]
[-29.91750526 251.44166565]
[-22.75856209 238.26025391]
[-15.59961891 225.07884216]
[-20.80785179 219.68214417]
[-36.43255234 203.49206543]
[-49.86000061 210.17814636]
[-58.76459885 223.25555420]
[-73.60639191 222.00244141]
[-87.03384399 228.68852234]
[-95.93843842 241.76593018]
[-110.78023529 240.51281738]
[-124.20768738 247.19888306]
[-127.68985748 262.44384766]
[-140.18775940 271.84259033]
[-155.80026245 270.95733643]
[-167.15562439 260.20605469]
[-168.89219666 244.66520691]
[-160.19000244 231.67266846]
[-145.15797424 227.36314392]
[-130.89376831 233.77143860]
[-117.46631622 227.08535767]
[-109.52214050 214.48619080]
[-93.71991730 215.26106262]
[-80.29247284 208.57499695]
[-72.34829712 195.97581482]
[-56.54607773 196.75068665]
[-43.11862564 190.06462097]
[-21.52466583 175.32757568]
[-2.64731812 182.16442871]
[8.50936127 172.13803101]
[19.66604042 162.11163330]
[30.82271957 152.08525085]
[41.97940063 142.05885315]
[53.13607788 132.03247070]
[64.29275513 122.00608063]
[61.36020660 116.31689453]
[59.32742691 110.24774933]
[58.24175262 103.93997955]
[58.12846756 97.54045868]
[58.99020386 91.19821930]
[60.80690384 85.06092834]
[63.53625488 79.27151489]
[67.11470795 73.96479034]
[71.45893097 69.26432037]
[63.38195801 56.62459946]
[55.30498886 43.98487854]
[47.13838196 31.40288544]
[38.88255692 18.87925529]
[24.82716179 11.61589146]
[24.28215790 -3.26873946]
[16.02633286 -15.79236984]
[7.77050591 -28.31600189]
[-0.48532081 -40.83963013]
[-8.74114704 -53.36326218]
[-16.99697304 -65.88689423]
[-25.25279999 -78.41052246]
[-33.94839096 -90.63291168]
[-43.07276154 -102.53862000]
[-52.19713211 -114.44432068]
[-61.32150269 -126.35002899]
[-76.82946777 -125.81842041]
[-89.66927338 -134.53157043]
[-94.90375519 -149.13909912]
[-90.52014160 -164.02410889]
[-78.20402527 -173.46301270]
[-62.69120026 -173.82635498]
[-49.94667435 -164.97444153]
[-44.87096786 -150.31098938]
[-49.41579819 -135.47439575]
[-40.29142380 -123.56869507]
[-31.16705513 -111.66298676]
[-22.04268265 -99.75727844]
[-17.55854225 -114.07135010]
[-3.62489915 -119.62594604]
[9.47699261 -112.32249451]
[12.07960606 -97.55001068]
[2.26254392 -86.20869446]
[-12.72916985 -86.66635132]
[-4.47334290 -74.14272308]
[3.78248358 -61.61909103]
[12.03831005 -49.09545898]
[20.29413605 -36.57182693]
[28.54996300 -24.04819679]
[36.80578995 -11.52456570]
[50.27067184 -5.15697622]
[51.40618896 10.62342834]
[59.66201401 23.14706039]
[65.96318054 26.99871063]
[67.94470978 35.90790939]
[76.02168274 48.54763031]
[84.09864807 61.18735123]
[108.61299896 58.95014191]
[130.16072083 70.85200500]
[141.31997681 92.79350281]
[156.31961060 92.90011597]
[164.91592407 89.83358765]
[171.53129578 93.11637115]
[186.52789307 93.43619537]
[201.52447510 93.75601196]
[216.52107239 94.07583618]
[225.16011047 91.13180542]
[231.72814941 94.50830078]
[246.71867371 95.04126740]
[260.78503418 87.79917908]
[273.22937012 95.98381042]
[288.21990967 96.51676941]
[303.21383667 96.94317627]
[318.21041870 97.26299286]
[333.20703125 97.58281708]
[348.20361328 97.90264130]
[358.03497314 89.56098938]
[370.51455688 90.13187408]
[378.98132324 98.76486969]
[393.97186279 99.29783630]
[408.96237183 99.83079529]
[423.02874756 92.58871460]
[435.47308350 100.77334595]
[450.46359253 101.30630493]
[465.45413208 101.83927155]
[480.44467163 102.37223053]
[495.43518066 102.90519714]
[501.41006470 95.62775421]
[509.93527222 91.96564484]
[519.05261230 92.62255859]
[526.73022461 97.32547760]
[531.31524658 104.91386414]
[546.26940918 106.08544159]
[555.01275635 93.53548431]
[568.77307129 87.08950043]
[583.81237793 88.38793945]
[596.10028076 96.98233795]
[602.39404297 110.48247528]
[617.34820557 111.65404510]
[631.71057129 105.01824188]
[643.79461670 113.72596741]
[658.74884033 114.89753723]
[666.88891602 103.77933502]
[679.36004639 98.17784882]
[692.86260986 99.45789337]
[703.88171387 107.17887878]
[709.60192871 119.23757935]
[724.53796387 120.62160492]
[739.47399902 122.00563049]
[752.68536377 112.90402985]
[767.99603271 117.69604492]
[773.66088867 132.70564270]
[765.33447266 146.41876221]
[749.40399170 148.31585693]
[738.08996582 136.94165039]
[723.15393066 135.55761719]
[708.21795654 134.17359924]
[697.78198242 146.84953308]
[681.68499756 150.84477234]
[666.22619629 144.39166260]
[657.57727051 129.85171509]
[642.62304688 128.68014526]
[629.33032227 135.39974976]
[616.17663574 126.60822296]
[601.22247314 125.43665314]
[592.90307617 137.79193115]
[579.42663574 144.36784363]
[564.36865234 143.30833435]
[551.78009033 134.79806519]
[545.09783936 121.03961945]
[530.14367676 119.86804199]
[512.35400391 130.33955383]
[494.90222168 117.89572144]
[479.91168213 117.36276245]
[464.92117310 116.82979584]
[449.93063354 116.29683685]
[434.94012451 115.76387024]
[421.94595337 123.04407501]
[408.42941284 114.82132721]
[393.43887329 114.28836060]
[378.44836426 113.75540161]
[363.40979004 122.80627441]
[347.88378906 112.89923096]
[332.88720703 112.57940674]
[317.89059448 112.25958252]
[302.89401245 111.93976593]
[296.14471436 114.93753052]
[287.68692017 111.50730133]
[272.69641113 110.97433472]
[259.70227051 118.25453949]
[246.18571472 110.03179169]
[231.19519043 109.49883270]
[216.20124817 109.07242584]
[201.20465088 108.75260162]
[186.20806885 108.43278503]
[171.21147156 108.11296082]
[156.21299744 107.89974213]
[141.21336365 107.79312897]
[137.22862244 119.32108307]
[130.09565735 129.21516418]
[120.41767883 136.63868713]
[109.01308441 140.96386719]
[96.84631348 141.82498169]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 58]
[2 57]
[3 56]
[4 55]
[5 54]
[6 53]
[7 52]
[9 26]
[10 25]
[11 24]
[13 22]
[14 21]
[15 20]
[28 50]
[29 49]
[31 47]
[32 46]
[34 44]
[35 43]
[67 114]
[68 113]
[69 112]
[70 110]
[71 109]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 95]
[81 94]
[82 93]
[83 92]
[117 215]
[118 214]
[120 213]
[121 212]
[122 211]
[123 210]
[125 209]
[126 208]
[128 206]
[129 205]
[130 203]
[131 202]
[132 201]
[133 200]
[136 198]
[137 197]
[138 196]
[140 194]
[141 193]
[142 192]
[143 191]
[144 190]
[149 188]
[150 187]
[155 182]
[156 181]
[158 179]
[159 178]
[164 174]
[165 173]
[166 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
