%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCCUGUGCUGGGCCUCCCAACUGGUGCAUGGACAGGCUGAGGAAGCACAGGCCGGGCAGAGCCCUGGCCAAGAGGGGCGUCUUGCGCCCACACUCACUUGGCAAGUUUCUGCAGCACCUGCUCGCACUCCAGCUGCUUCCGCUCAAGCUGCUCAGCAUAGGGCACUGUCCAUAGAGGGGUCACCACGUCGGCCACUCGUGUUACUGGUGGCUCACUCUCACCCUCCUGUCGCCUCCUCCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[49.66693497 575.20050049]
[44.17049789 585.43847656]
[34.52143478 591.69592285]
[23.17065048 592.52081299]
[16.05783844 605.72717285]
[8.94502926 618.93353271]
[1.91600811 632.18469238]
[-5.02894163 645.48004150]
[-11.97389126 658.77545166]
[-18.91884041 672.07086182]
[-25.86379051 685.36627197]
[-32.80873871 698.66168213]
[-39.75368881 711.95709229]
[-46.69863892 725.25244141]
[-38.96771240 738.60296631]
[-39.70470428 754.01275635]
[-48.67444229 766.56451416]
[-63.01471710 772.25311279]
[-78.14959717 769.26330566]
[-89.24959564 758.54913330]
[-92.77275085 743.52941895]
[-87.59482574 728.99694824]
[-75.36808777 719.58898926]
[-59.99404144 718.30749512]
[-53.04909134 705.01214600]
[-46.10414124 691.71673584]
[-39.15919113 678.42132568]
[-32.21424103 665.12591553]
[-25.26929092 651.83050537]
[-18.32434273 638.53509521]
[-11.37939262 625.23968506]
[-11.06898975 617.87384033]
[-4.26133013 611.82067871]
[2.85147977 598.61431885]
[9.96428967 585.40795898]
[3.66939044 568.19958496]
[12.11910343 551.58062744]
[30.34767151 546.35131836]
[37.12364578 532.96899414]
[43.89962006 519.58666992]
[50.67559433 506.20437622]
[57.28150940 492.73730469]
[63.71629715 479.18762207]
[70.15108490 465.63796997]
[76.58587646 452.08828735]
[83.02066803 438.53863525]
[81.49130249 423.72274780]
[94.40056610 414.57611084]
[100.83535767 401.02642822]
[107.18419647 387.43627930]
[113.44683075 373.80618286]
[119.70946503 360.17608643]
[125.97210693 346.54598999]
[132.23474121 332.91592407]
[115.23394775 316.30255127]
[114.85456085 294.22933960]
[128.95159912 279.50619507]
[125.56088257 264.89443970]
[122.17016602 250.28271484]
[118.77944183 235.67097473]
[115.38872528 221.05923462]
[111.99800110 206.44747925]
[101.58399963 195.79864502]
[106.00152588 180.60667419]
[102.61080170 165.99493408]
[99.22007751 151.38319397]
[95.82936096 136.77145386]
[92.43863678 122.15970612]
[89.04792023 107.54795837]
[80.87302399 94.97135162]
[68.89602661 85.94075775]
[56.91904068 76.91015625]
[44.94204712 67.87956238]
[32.96505737 58.84896469]
[20.87463379 49.97080994]
[8.67271614 41.24652100]
[-3.52920032 32.52223206]
[-15.89468002 24.03135681]
[-28.41925621 15.77696705]
[-40.94383240 7.52257633]
[-53.46841049 -0.73181444]
[-65.99298859 -8.98620510]
[-78.51756287 -17.24059677]
[-95.07005310 -20.90823174]
[-96.12792969 -37.82914352]
[-80.16114807 -43.52985382]
[-70.26317596 -29.76517296]
[-57.73859787 -21.51078224]
[-45.21401978 -13.25639153]
[-32.68944168 -5.00200081]
[-20.16486549 3.25238991]
[-7.64028883 11.50678062]
[-4.15323973 11.17136383]
[-0.33015552 12.49318981]
[3.05508900 15.61217117]
[5.19508934 20.32031441]
[17.39700508 29.04460335]
[29.59892273 37.76889420]
[34.35128403 37.88903046]
[39.08409500 40.97970200]
[41.99565506 46.87197495]
[53.97264481 55.90257263]
[65.94963837 64.93316650]
[77.92662811 73.96376801]
[89.90361786 82.99436188]
[96.48413849 79.39620972]
[89.28782654 66.23516083]
[78.37675476 55.94203186]
[84.79441833 42.38424683]
[99.67180634 44.29824448]
[102.44886780 59.03884888]
[109.64517975 72.19989014]
[116.22570801 68.60173798]
[115.08670807 53.64504242]
[113.94770813 38.68834686]
[112.71400452 23.73916817]
[111.38563538 8.79810238]
[110.05727386 -6.14296293]
[100.19454193 -19.24482155]
[106.85787201 -34.22921753]
[123.19258118 -35.68149185]
[132.39494324 -22.10766602]
[124.99833679 -7.47133017]
[126.32670593 7.46973515]
[127.65506744 22.41080093]
[131.36889648 28.77944565]
[128.90440369 37.54935074]
[130.04339600 52.50604630]
[131.18240356 67.46273804]
[138.49885559 69.11179352]
[141.79719543 54.47891617]
[156.43002319 57.77747345]
[153.13179016 72.40989685]
[160.44824219 74.05894470]
[167.89332581 61.03701401]
[175.33840942 48.01507950]
[175.47099304 32.19442749]
[188.50500488 24.98583603]
[195.95008850 11.96390247]
[203.39517212 -1.05803216]
[210.84025574 -14.07996655]
[206.44407654 -29.26052094]
[214.14286804 -43.06285095]
[229.36904907 -47.29827499]
[243.08920288 -39.45399475]
[247.16342163 -24.18388176]
[239.17451477 -10.54742146]
[223.86218262 -6.63488626]
[216.41709900 6.38704824]
[208.97201538 19.40898323]
[201.52694702 32.43091583]
[201.92687988 47.32015228]
[188.36035156 55.46015930]
[180.91526794 68.48209381]
[173.47018433 81.50402832]
[163.92733765 95.90146637]
[151.98696899 106.19332886]
[138.82087708 112.05857086]
[125.62488556 113.46363068]
[113.55389404 110.65824890]
[103.65966034 104.15724182]
[107.05038452 118.76898193]
[110.44110107 133.38072205]
[113.83182526 147.99246216]
[117.22254181 162.60421753]
[120.61326599 177.21595764]
[131.26979065 188.90992737]
[126.60974121 203.05676270]
[130.00045776 217.66850281]
[133.39118958 232.28024292]
[136.78190613 246.89198303]
[140.17262268 261.50372314]
[143.56335449 276.11547852]
[160.26325989 280.71606445]
[171.49273682 295.73629761]
[171.15614319 315.92068481]
[185.41020203 320.59207153]
[199.66426086 325.26345825]
[213.91831970 329.93484497]
[228.20169067 334.51586914]
[242.51377869 339.00628662]
[256.82586670 343.49673462]
[271.13793945 347.98718262]
[285.45004272 352.47763062]
[299.76211548 356.96807861]
[314.07421875 361.45852661]
[328.38629150 365.94897461]
[342.69839478 370.43942261]
[351.79840088 370.02114868]
[357.16268921 375.07846069]
[371.41674805 379.74984741]
[380.52133179 379.44686890]
[385.82113647 384.57174683]
[400.01486206 389.42330933]
[414.20858765 394.27487183]
[427.50003052 386.03643799]
[442.96994019 388.32012939]
[453.31396484 400.04766846]
[453.64791870 415.68167114]
[443.81417847 427.84027100]
[428.45587158 430.78250122]
[414.82476807 423.11914062]
[409.35702515 408.46862793]
[395.16329956 403.61703491]
[380.96954346 398.76547241]
[366.74536133 394.00390625]
[352.49130249 389.33251953]
[338.20794678 384.75152588]
[323.89587402 380.26107788]
[309.58377075 375.77062988]
[295.27166748 371.28018188]
[280.95959473 366.78973389]
[266.64749146 362.29928589]
[252.33541870 357.80883789]
[238.02333069 353.31838989]
[223.71124268 348.82794189]
[216.40615845 349.82189941]
[209.24694824 344.18890381]
[194.99288940 339.51751709]
[180.73883057 334.84613037]
[166.48477173 330.17474365]
[179.46519470 337.69195557]
[184.05392456 351.97283936]
[177.88177490 365.64416504]
[164.13543701 371.64736938]
[149.91220093 366.88299561]
[142.55552673 353.81091309]
[145.86483765 339.17855835]
[139.60218811 352.80862427]
[133.33955383 366.43872070]
[127.07692719 380.06881714]
[120.81429291 393.69891357]
[120.07953644 402.77883911]
[114.38502502 407.46121216]
[107.95023346 421.01089478]
[109.01934814 436.79592896]
[96.57033539 444.97341919]
[90.13554382 458.52310181]
[83.70075226 472.07275391]
[77.26596832 485.62243652]
[70.83117676 499.17208862]
[70.97858429 505.74279785]
[68.21458435 510.67352295]
[64.05790710 512.98034668]
[57.28192902 526.36267090]
[50.50595474 539.74493408]
[43.72998047 553.12725830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 35]
[5 34]
[6 33]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[38 247]
[39 246]
[40 245]
[41 244]
[42 241]
[43 240]
[44 239]
[45 238]
[46 237]
[48 235]
[49 234]
[50 232]
[51 231]
[52 230]
[53 229]
[54 228]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[64 166]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 98]
[76 97]
[77 96]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[83 87]
[113 129]
[114 128]
[115 127]
[116 125]
[117 124]
[118 123]
[134 155]
[135 154]
[136 153]
[138 151]
[139 150]
[140 149]
[141 148]
[176 221]
[177 220]
[178 219]
[179 218]
[180 216]
[181 215]
[182 214]
[183 213]
[184 212]
[185 211]
[186 210]
[187 209]
[188 208]
[190 207]
[191 206]
[193 205]
[194 204]
[195 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
