%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCGGGCCGAGCCCGCGGCGCCCCAGGCCCCAGCGGCCCCACCGCCCACCAGGGCUGGGCGAGGCUUCCUCCCGGCGCCCCCACUAUCCCGCGACCUCGGGCGCCGGAGGGGAUGAGUCCCGGAUGCCCGGCGCCCAGGCCCCGAGGGAUGCCCUGAAGCGCUGGGGAGCCGCAGGCAGAGCGUCCGGCGGCCGGGAGGGACGCGGAGCCACAGCCCGACGCACGGACGGAGGGACGCCGGAGCCCGCCUGAC\
C\
) } def
/len { sequence length } bind def

/coor [
[-54.65599060 884.08068848]
[-68.08618164 886.47283936]
[-72.24815369 900.88391113]
[-76.41012573 915.29492188]
[-80.48394012 929.73114014]
[-84.46944427 944.19195557]
[-88.45494080 958.65283203]
[-92.44044495 973.11364746]
[-96.42594910 987.57446289]
[-94.80539703 1004.45080566]
[-110.57357025 1010.67980957]
[-120.92425537 997.25225830]
[-110.88678741 983.58898926]
[-106.90128326 969.12811279]
[-102.91577911 954.66729736]
[-98.93027496 940.20648193]
[-94.94477081 925.74560547]
[-96.19370270 918.48352051]
[-90.82116699 911.13293457]
[-86.65919495 896.72192383]
[-82.49722290 882.31085205]
[-93.98744202 870.93023682]
[-98.18652344 855.21520996]
[-93.85452271 839.43884277]
[-82.08457947 827.94042969]
[-66.02899933 823.93225098]
[-62.04349899 809.47143555]
[-58.05799484 795.01062012]
[-54.07249069 780.54974365]
[-50.08699036 766.08892822]
[-62.33124542 755.80029297]
[-68.88037109 741.14581299]
[-68.37429810 725.04418945]
[-60.86371231 710.72680664]
[-47.81007385 701.08892822]
[-31.80151558 698.10485840]
[-27.99307823 683.59637451]
[-24.18463898 669.08789062]
[-20.37620163 654.57940674]
[-16.74539566 640.02545166]
[-13.29276562 625.42822266]
[-9.84013653 610.83099365]
[-14.44017982 596.66455078]
[-3.73417377 585.01586914]
[-0.28154424 570.41857910]
[3.17108536 555.82135010]
[6.53443193 541.20330811]
[9.80836964 526.56494141]
[-3.75903082 516.45501709]
[-11.55498505 501.37561035]
[-11.96200562 484.34954834]
[-4.84932041 468.81393433]
[8.39090729 457.92626953]
[25.11579704 453.92276001]
[28.03091049 439.20874023]
[30.94602585 424.49475098]
[33.86113739 409.78073120]
[36.77625275 395.06671143]
[39.69136810 380.35272217]
[42.51649475 365.62115479]
[45.25152969 350.87261963]
[47.98656464 336.12405396]
[37.61798859 325.46429443]
[35.48932266 310.56689453]
[42.62438202 297.11532593]
[56.47206497 290.36642456]
[59.20709991 275.61788940]
[61.85194016 260.85290527]
[64.40648651 246.07202148]
[66.96103668 231.29113770]
[69.51558685 216.51026917]
[72.07012939 201.72938538]
[74.62467957 186.94851685]
[77.17922974 172.16763306]
[79.73377228 157.38676453]
[82.28832245 142.60588074]
[84.84287262 127.82501221]
[87.39742279 113.04413605]
[81.49767303 82.38954926]
[80.39849091 67.42987061]
[79.20789337 52.47719955]
[77.92592621 37.53208160]
[76.64396667 22.58696175]
[75.36199951 7.64184380]
[74.08003235 -7.30327463]
[56.27819824 -17.69649887]
[51.39649582 -39.55833435]
[65.08940125 -59.49737930]
[61.99464035 -74.17465210]
[58.89988327 -88.85193634]
[55.80512619 -103.52921295]
[52.71036911 -118.20648956]
[42.29232407 -130.11341858]
[47.23730087 -144.16319275]
[44.14254379 -158.84048462]
[30.02265167 -173.25408936]
[36.89352417 -191.34617615]
[33.44089508 -205.94342041]
[29.98826599 -220.54066467]
[24.98141861 -228.14500427]
[26.58380508 -235.33741760]
[23.30986786 -249.97576904]
[20.03592873 -264.61413574]
[16.76199150 -279.25247192]
[13.48805332 -293.89080811]
[10.21411514 -308.52917480]
[6.94017696 -323.16751099]
[3.66623902 -337.80587769]
[0.39230102 -352.44421387]
[-18.05842400 -362.58743286]
[-22.89044380 -382.77661133]
[-11.36418438 -399.68542480]
[-15.34968662 -414.14627075]
[-19.33518982 -428.60711670]
[-23.32069206 -443.06793213]
[-35.37253952 -454.18930054]
[-31.50360298 -470.12554932]
[-15.69391155 -474.48278809]
[-4.20711994 -462.77871704]
[-8.85985565 -447.05343628]
[-4.87435293 -432.59262085]
[-0.88885081 -418.13177490]
[3.09665155 -403.67092896]
[12.19529629 -401.79467773]
[20.04279518 -396.71539307]
[25.54816818 -389.08935547]
[27.92805099 -379.93011475]
[26.81796265 -370.47390747]
[22.32740974 -362.01281738]
[15.03065205 -355.71817017]
[18.30459023 -341.07980347]
[21.57852936 -326.44146729]
[24.85246658 -311.80310059]
[28.12640381 -297.16476440]
[31.40034294 -282.52639771]
[34.67428207 -267.88806152]
[37.94821930 -253.24971008]
[41.22215652 -238.61135864]
[44.58550262 -223.99328613]
[48.03813171 -209.39605713]
[51.49076080 -194.79881287]
[60.60326004 -190.25460815]
[65.83372498 -181.26341248]
[65.25602722 -170.65803528]
[58.81982422 -161.93524170]
[61.91458130 -147.25794983]
[72.11126709 -136.40084839]
[67.38764954 -121.30124664]
[70.48240662 -106.62397003]
[73.57716370 -91.94669342]
[76.67192078 -77.26941681]
[79.76667786 -62.59213638]
[94.29815674 -58.87244415]
[104.06425476 -70.25766754]
[102.60822296 -85.99474335]
[112.77056885 -98.09854889]
[128.52215576 -99.38812256]
[140.51785278 -89.09837341]
[141.64080811 -73.33403015]
[131.22480774 -61.44779968]
[115.44947815 -60.49156952]
[105.68338013 -49.10634613]
[108.82159424 -31.55138206]
[102.03398895 -16.48434830]
[89.02515411 -8.58523846]
[90.30712128 6.35987949]
[91.58908081 21.30499840]
[92.87104797 36.25011826]
[94.15301514 51.19523621]
[97.84511566 57.57228088]
[95.35816193 66.33068848]
[96.45734406 81.29036713]
[108.63556671 90.04769897]
[123.16704559 86.32801056]
[137.69851685 82.60831451]
[150.58038330 69.43131256]
[167.28355408 74.85390472]
[181.76847839 70.95686340]
[196.25340271 67.05982208]
[205.47451782 53.93157959]
[221.49597168 53.09946823]
[232.02749634 65.20181274]
[228.99018860 80.95472717]
[214.71401978 88.27392578]
[200.15045166 81.54474640]
[185.66552734 85.44178772]
[171.18060303 89.33882904]
[164.88719177 99.64796448]
[152.87409973 103.02490997]
[141.41821289 97.13980103]
[126.88673401 100.85948944]
[112.35525513 104.57917786]
[102.17829132 115.59868622]
[99.62374878 130.37956238]
[97.06919861 145.16043091]
[94.51464844 159.94131470]
[91.96010590 174.72218323]
[89.40555573 189.50306702]
[86.85100555 204.28393555]
[84.29646301 219.06481934]
[81.74191284 233.84568787]
[79.18736267 248.62657166]
[76.63282013 263.40744019]
[78.25274658 272.36682129]
[73.95564270 278.35290527]
[71.22061157 293.10147095]
[81.72764587 304.36682129]
[83.56510925 319.48226929]
[76.23639679 332.62588501]
[62.73511124 338.85910034]
[60.00007629 353.60763550]
[57.26504135 368.35620117]
[58.77532959 377.33471680]
[54.40537643 383.26782227]
[51.49026489 397.98184204]
[48.57514954 412.69586182]
[45.66003418 427.40985107]
[42.74492264 442.12387085]
[39.82980728 456.83789062]
[50.91056824 463.97866821]
[58.89308167 474.42922974]
[62.84813309 486.93740845]
[62.32744217 500.01373291]
[57.41435242 512.10876465]
[48.71139526 521.79663086]
[37.26647186 527.94323730]
[24.44672203 529.83886719]
[21.17278290 544.47723389]
[22.35286903 553.50506592]
[17.76832390 559.27398682]
[14.31569386 573.87121582]
[10.86306381 588.46844482]
[15.21615219 603.67901611]
[4.75710106 614.28363037]
[1.30447161 628.88085938]
[-2.14815784 643.47808838]
[-0.62896591 649.86450195]
[-2.29358578 655.26007080]
[-5.86772776 658.38787842]
[-9.67616558 672.89636230]
[-13.48460388 687.40478516]
[-17.29304314 701.91326904]
[-6.20227528 710.64868164]
[0.70523363 722.91156006]
[2.41735148 736.83795166]
[-1.29119897 750.32537842]
[-9.82982063 761.35015869]
[-21.88582420 768.27130127]
[-35.62615585 770.07440186]
[-39.61165619 784.53527832]
[-43.59716034 798.99609375]
[-47.58266068 813.45690918]
[-51.56816483 827.91778564]
[-41.25423813 837.34338379]
[-36.02669144 850.22943115]
[-36.85091019 864.04479980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[26 253]
[27 252]
[28 251]
[29 250]
[30 249]
[36 242]
[37 241]
[38 240]
[39 239]
[40 236]
[41 235]
[42 234]
[44 232]
[45 231]
[46 230]
[47 228]
[48 227]
[54 219]
[55 218]
[56 217]
[57 216]
[58 215]
[59 214]
[60 212]
[61 211]
[62 210]
[66 206]
[67 205]
[68 203]
[69 202]
[70 201]
[71 200]
[72 199]
[73 198]
[74 197]
[75 196]
[76 195]
[77 194]
[78 193]
[79 172]
[80 171]
[81 169]
[82 168]
[83 167]
[84 166]
[85 165]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[94 146]
[95 145]
[97 141]
[98 140]
[99 139]
[101 138]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[112 123]
[113 122]
[114 121]
[115 120]
[153 162]
[154 161]
[173 192]
[174 191]
[175 190]
[177 187]
[178 186]
[179 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
