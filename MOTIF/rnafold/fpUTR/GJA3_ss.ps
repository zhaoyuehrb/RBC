%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUGCAGGGAUGGCGAUCAGGGCGGGGAGGUCGGGCCCUGGCGCGGGGCGCACGCGUGAAGCAGCACCGCACGUGUGAAAGGAAUUCUUUUCAGAGCGGCCGGGAGCCCUGCUCCGGAGGAACGCACCCGGGUCGCCGCCGCGGCAGAGCGGGGUUAGGAAUCUGAAGCA\
) } def
/len { sequence length } bind def

/coor [
[326.01922607 645.31323242]
[327.13473511 631.66314697]
[334.91790771 620.26269531]
[328.83346558 606.55212402]
[322.74899292 592.84161377]
[316.66455078 579.13104248]
[310.58007812 565.42047119]
[306.49227905 562.88861084]
[303.97085571 557.74530029]
[304.53369141 551.09985352]
[298.95111084 537.17736816]
[293.52377319 532.12121582]
[293.39608765 522.95111084]
[288.06719971 508.92956543]
[282.73834229 494.90805054]
[277.40945435 480.88650513]
[272.08059692 466.86499023]
[266.75173950 452.84347534]
[261.42285156 438.82192993]
[256.09399414 424.80041504]
[241.91731262 414.48272705]
[244.96257019 396.33886719]
[239.37997437 382.41641235]
[233.67118835 368.54522705]
[227.83670044 354.72644043]
[222.00221252 340.90765381]
[201.98406982 329.30905151]
[204.69282532 305.61013794]
[197.39025879 292.50775146]
[190.08769226 279.40536499]
[182.78512573 266.30297852]
[169.99998474 264.54113770]
[160.42877197 255.59559631]
[157.72866821 242.57705688]
[163.10798645 230.20556641]
[156.04455566 216.97273254]
[148.98110962 203.73989868]
[141.91766357 190.50708008]
[134.73435974 177.33892822]
[127.43180084 164.23654175]
[120.12923431 151.13415527]
[112.82666779 138.03176880]
[105.52410126 124.92938232]
[98.22153473 111.82699585]
[58.45984650 116.82462311]
[45.70237350 108.93495178]
[32.94490051 101.04528046]
[20.18742752 93.15560913]
[4.38075638 92.47758484]
[-2.37411571 79.20275879]
[-15.13158894 71.31308746]
[-27.96017075 63.53957748]
[-40.85880280 55.88286591]
[-54.60945129 62.87738037]
[-69.95644379 61.30464554]
[-82.00260162 51.66651535]
[-86.90404510 37.03848267]
[-83.09674835 22.08829689]
[-71.79559326 11.58651161]
[-56.60674667 8.88420677]
[-42.37691116 14.84367752]
[-33.64677429 27.56327820]
[-33.20209122 42.98423386]
[-20.30345917 50.64094543]
[-12.92019176 51.35390091]
[-7.24191856 58.55561829]
[5.51555395 66.44528961]
[20.40972519 66.55899048]
[28.07709694 80.39813995]
[40.83456802 88.28781128]
[53.59204102 96.17747498]
[66.34951782 104.06714630]
[79.51824951 96.88352203]
[92.68581390 89.70054626]
[92.95819092 74.70301819]
[93.23056793 59.70549393]
[83.93820953 43.82703781]
[93.52468872 29.14601135]
[93.52468872 14.14601231]
[93.52468872 -0.85398769]
[93.52468872 -15.85398769]
[93.52468872 -30.85398865]
[93.52468872 -45.85398865]
[93.52468872 -60.85398865]
[84.86098480 -74.77779388]
[92.82511902 -89.11322784]
[109.22426605 -89.11322784]
[117.18839264 -74.77779388]
[108.52468872 -60.85398865]
[108.52468872 -45.85398865]
[108.52468872 -30.85398865]
[108.52468872 -15.85398769]
[108.52468872 -0.85398769]
[108.52468872 14.14601231]
[108.52468872 29.14601135]
[116.86449432 37.93897247]
[116.96609497 50.45877838]
[108.22809601 59.97787094]
[107.95571899 74.97539520]
[107.68334198 89.97292328]
[111.32392120 104.52442932]
[118.62648010 117.62681580]
[125.92904663 130.72920227]
[133.23161316 143.83158875]
[140.53417969 156.93397522]
[147.83674622 170.03636169]
[154.77334595 176.03561401]
[155.15049744 183.44363403]
[162.21394348 196.67646790]
[169.27737427 209.90928650]
[176.34082031 223.14212036]
[193.15473938 227.90802002]
[201.17768860 243.05325317]
[195.88751221 259.00039673]
[203.19007874 272.10278320]
[210.49264526 285.20516968]
[217.79521179 298.30755615]
[224.74655151 298.44262695]
[231.26039124 300.72137451]
[236.69786072 304.88623047]
[240.53634644 310.49621582]
[242.41969299 316.97378540]
[242.19104004 323.66397095]
[239.90541077 329.90072632]
[235.82099915 335.07318115]
[241.65548706 348.89196777]
[247.48997498 362.71075439]
[253.73307800 369.42871094]
[253.30241394 376.83383179]
[258.88500977 390.75625610]
[270.43475342 396.55017090]
[274.78753662 408.28939819]
[270.11550903 419.47155762]
[275.44439697 433.49307251]
[280.77325439 447.51458740]
[286.10211182 461.53613281]
[291.43099976 475.55764771]
[296.75985718 489.57916260]
[302.08874512 503.60070801]
[307.41760254 517.62225342]
[312.87356567 531.59478760]
[318.45614624 545.51721191]
[324.29064941 559.33599854]
[330.37509155 573.04656982]
[336.45956421 586.75714111]
[342.54400635 600.46771240]
[348.62847900 614.17822266]
[365.20025635 617.47906494]
[376.43753052 629.87512207]
[378.06872559 646.35998535]
[369.64907837 660.43304443]
[375.98150635 674.03082275]
[392.99334717 684.80187988]
[390.55383301 703.96264648]
[397.37582397 717.32153320]
[404.19781494 730.68048096]
[411.01980591 744.03936768]
[417.84179688 757.39825439]
[430.43026733 768.75463867]
[423.00253296 783.99487305]
[406.30169678 781.07635498]
[404.48287964 764.22027588]
[397.66088867 750.86138916]
[390.83889771 737.50244141]
[384.01690674 724.14355469]
[377.19491577 710.78460693]
[367.18890381 708.50738525]
[359.95022583 700.92633057]
[358.05950928 690.39276123]
[362.38369751 680.36322021]
[356.05126953 666.76544189]
[342.74743652 665.43231201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[10 142]
[11 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[22 130]
[23 129]
[24 127]
[25 126]
[26 125]
[28 117]
[29 116]
[30 115]
[31 114]
[35 111]
[36 110]
[37 109]
[38 108]
[39 106]
[40 105]
[41 104]
[42 103]
[43 102]
[44 101]
[45 72]
[46 71]
[47 70]
[48 69]
[50 67]
[51 66]
[52 64]
[53 63]
[74 100]
[75 99]
[76 98]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[151 171]
[152 170]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
