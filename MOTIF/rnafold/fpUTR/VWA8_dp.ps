%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VWA8)
} def

/sequence { (\
CACGGUGCCUGCACGGGACGCCGCUCGAUCCCCGAGCCCCCUCGCCGUCCCCGACAGCCCCCCCGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 48 0.010473295 ubox
3 11 0.008371319 ubox
3 15 0.004363453 ubox
3 23 0.018739216 ubox
3 47 0.011201411 ubox
3 53 0.012235310 ubox
3 65 0.053843895 ubox
3 68 0.008512425 ubox
4 10 0.008463580 ubox
4 14 0.005740738 ubox
4 22 0.057825677 ubox
4 46 0.011285194 ubox
4 52 0.012349513 ubox
4 59 0.007065078 ubox
4 60 0.045241607 ubox
4 61 0.041647757 ubox
4 62 0.016516181 ubox
4 63 0.013909248 ubox
4 64 0.053570216 ubox
4 67 0.007402533 ubox
4 70 0.986046810 ubox
5 9 0.008304949 ubox
5 12 0.006970870 ubox
5 14 0.042792044 ubox
5 21 0.057881857 ubox
5 45 0.011276874 ubox
5 51 0.004518850 ubox
5 58 0.007073914 ubox
5 59 0.045422045 ubox
5 60 0.041743388 ubox
5 61 0.016480081 ubox
5 62 0.015160059 ubox
5 63 0.053032994 ubox
5 69 0.993269323 ubox
6 11 0.006691641 ubox
6 13 0.042916563 ubox
6 20 0.057857495 ubox
6 44 0.011244764 ubox
6 57 0.004959599 ubox
6 65 0.006945987 ubox
6 68 0.992897801 ubox
7 12 0.042745088 ubox
7 19 0.057832266 ubox
7 43 0.011008587 ubox
7 58 0.070615275 ubox
7 64 0.006649017 ubox
7 67 0.993151609 ubox
7 69 0.007472837 ubox
8 16 0.004525788 ubox
8 17 0.057558628 ubox
8 57 0.051057092 ubox
8 66 0.992469447 ubox
8 68 0.007473542 ubox
9 15 0.004686807 ubox
9 16 0.057541895 ubox
9 17 0.006126066 ubox
9 57 0.284001009 ubox
9 65 0.951030650 ubox
9 66 0.030657771 ubox
10 15 0.053850426 ubox
10 16 0.006136072 ubox
10 53 0.073876902 ubox
10 56 0.562666868 ubox
10 65 0.042986802 ubox
10 68 0.005529814 ubox
11 21 0.012225164 ubox
11 37 0.015541703 ubox
11 43 0.014498118 ubox
11 45 0.024128863 ubox
11 52 0.075998384 ubox
11 55 0.565128675 ubox
11 58 0.735046810 ubox
11 64 0.160020544 ubox
11 67 0.010562407 ubox
11 69 0.006660453 ubox
12 20 0.012296153 ubox
12 36 0.015567284 ubox
12 44 0.024255929 ubox
12 57 0.736021914 ubox
12 66 0.010746988 ubox
12 68 0.006682307 ubox
13 48 0.026753253 ubox
14 20 0.003723803 ubox
14 23 0.016290931 ubox
14 34 0.015244350 ubox
14 44 0.010065915 ubox
14 47 0.027462709 ubox
14 53 0.739438235 ubox
14 65 0.035007931 ubox
15 19 0.003601302 ubox
15 22 0.052040093 ubox
15 32 0.015835915 ubox
15 33 0.014588937 ubox
15 39 0.004480126 ubox
15 40 0.065182257 ubox
15 41 0.062481397 ubox
15 42 0.012553474 ubox
15 43 0.015905034 ubox
15 46 0.028979421 ubox
15 51 0.726368253 ubox
15 52 0.642563446 ubox
15 59 0.009002676 ubox
15 60 0.034790002 ubox
15 61 0.124525597 ubox
15 62 0.118561274 ubox
15 63 0.068692943 ubox
15 64 0.077250115 ubox
16 21 0.052035762 ubox
16 22 0.011030589 ubox
16 31 0.016684319 ubox
16 32 0.013646592 ubox
16 38 0.004482737 ubox
16 39 0.065438935 ubox
16 40 0.062440449 ubox
16 41 0.014481925 ubox
16 42 0.014896054 ubox
16 45 0.028949492 ubox
16 46 0.005455562 ubox
16 50 0.816164811 ubox
16 51 0.525100287 ubox
16 58 0.006584614 ubox
16 59 0.034549105 ubox
16 60 0.124828646 ubox
16 61 0.118563686 ubox
16 62 0.068790788 ubox
16 63 0.077200600 ubox
16 64 0.003385652 ubox
16 70 0.005993632 ubox
17 21 0.010930860 ubox
17 30 0.017464797 ubox
17 31 0.012620086 ubox
17 38 0.065535616 ubox
17 39 0.062230185 ubox
17 40 0.014488456 ubox
17 41 0.014890625 ubox
17 43 0.033347428 ubox
17 45 0.005580181 ubox
17 49 0.896308898 ubox
17 50 0.372200030 ubox
17 58 0.029274483 ubox
17 59 0.124363680 ubox
17 60 0.117963625 ubox
17 61 0.068524791 ubox
17 62 0.076768222 ubox
17 63 0.003378690 ubox
17 69 0.006076205 ubox
18 29 0.018108943 ubox
18 42 0.033699565 ubox
18 48 0.969731172 ubox
19 27 0.019946228 ubox
19 44 0.019278684 ubox
19 47 0.970015960 ubox
19 68 0.006421970 ubox
20 26 0.019371384 ubox
20 37 0.005198321 ubox
20 43 0.027022297 ubox
20 45 0.392332750 ubox
20 46 0.885029229 ubox
20 48 0.007941576 ubox
20 58 0.044213181 ubox
20 67 0.006749117 ubox
21 36 0.004774716 ubox
21 44 0.551489003 ubox
21 47 0.008056058 ubox
21 57 0.044207714 ubox
21 66 0.006750102 ubox
22 44 0.694700636 ubox
22 53 0.006425001 ubox
22 65 0.006742880 ubox
23 37 0.957163152 ubox
23 43 0.283597790 ubox
23 45 0.013469577 ubox
23 52 0.006213002 ubox
24 36 0.999350009 ubox
24 44 0.012232474 ubox
25 35 0.999398110 ubox
25 54 0.006790452 ubox
26 34 0.999520187 ubox
26 53 0.007143723 ubox
27 33 0.993356242 ubox
27 49 0.007515621 ubox
27 52 0.006828247 ubox
28 48 0.007634165 ubox
29 35 0.005755438 ubox
29 47 0.007309112 ubox
30 34 0.005740616 ubox
33 44 0.016739005 ubox
33 47 0.004745496 ubox
34 43 0.022457945 ubox
34 46 0.004857628 ubox
35 42 0.022510394 ubox
36 41 0.022185879 ubox
36 45 0.007921247 ubox
36 67 0.004419121 ubox
37 44 0.008657315 ubox
37 66 0.004748571 ubox
38 65 0.004776668 ubox
39 65 0.003164462 ubox
41 57 0.004874521 ubox
42 54 0.023951780 ubox
42 56 0.004613938 ubox
43 53 0.025911564 ubox
43 68 0.051422010 ubox
44 52 0.025456678 ubox
44 58 0.220502247 ubox
44 67 0.054027132 ubox
44 69 0.005975772 ubox
45 57 0.221200097 ubox
45 66 0.054032790 ubox
45 68 0.005809392 ubox
46 53 0.021603001 ubox
46 65 0.054028157 ubox
47 52 0.021161422 ubox
47 55 0.229282210 ubox
47 58 0.006434354 ubox
47 64 0.051996150 ubox
48 54 0.229712944 ubox
48 57 0.006627706 ubox
49 53 0.227813056 ubox
52 65 0.020233673 ubox
53 64 0.060832632 ubox
57 67 0.048736111 ubox
57 69 0.026234606 ubox
58 66 0.050937115 ubox
58 68 0.026383243 ubox
59 65 0.054763214 ubox
59 66 0.027190141 ubox
60 65 0.035105719 ubox
60 66 0.013324931 ubox
61 65 0.017122659 ubox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 56 0.9500000 lbox
11 55 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
23 37 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
26 34 0.9500000 lbox
27 33 0.9500000 lbox
showpage
end
%%EOF
