%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LRPPRC)
} def

/sequence { (\
ACAUGCUCCUCCUGUCCUUCUGGCGGAGCGUGCUUCCCGCUGCGGGGACGUUCGAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.010760659 ubox
1 51 0.005383824 ubox
2 30 0.011499471 ubox
2 32 0.732623304 ubox
2 50 0.005482995 ubox
3 31 0.753537102 ubox
4 30 0.756023025 ubox
4 58 0.524733235 ubox
5 29 0.761483180 ubox
5 57 0.647473043 ubox
6 28 0.761638265 ubox
6 56 0.647690584 ubox
7 27 0.761521651 ubox
7 55 0.647421535 ubox
8 26 0.761576204 ubox
8 54 0.645876780 ubox
9 25 0.761255720 ubox
9 28 0.059696143 ubox
9 56 0.016828028 ubox
10 23 0.014567559 ubox
10 25 0.003903020 ubox
10 27 0.061070047 ubox
10 55 0.018644505 ubox
11 22 0.014477015 ubox
11 23 0.756108364 ubox
11 26 0.060789062 ubox
11 54 0.019606543 ubox
12 22 0.756135087 ubox
12 23 0.038972477 ubox
12 25 0.060448139 ubox
12 26 0.021696846 ubox
13 22 0.039601145 ubox
13 25 0.034420820 ubox
13 50 0.588025835 ubox
14 21 0.061933165 ubox
14 24 0.097607157 ubox
14 49 0.643418872 ubox
15 23 0.060961545 ubox
15 47 0.018849951 ubox
15 48 0.643641789 ubox
16 22 0.059810697 ubox
16 23 0.084763305 ubox
16 46 0.025149367 ubox
16 47 0.643492631 ubox
17 22 0.085272481 ubox
17 45 0.029901781 ubox
17 46 0.643225694 ubox
17 47 0.007194813 ubox
18 44 0.033788513 ubox
18 45 0.636654388 ubox
18 46 0.010105506 ubox
19 44 0.603370303 ubox
19 45 0.069362269 ubox
20 44 0.097938587 ubox
20 45 0.017406260 ubox
21 39 0.010905008 ubox
21 42 0.536976385 ubox
21 44 0.018291821 ubox
21 45 0.004972492 ubox
22 38 0.012314674 ubox
22 41 0.635202135 ubox
22 43 0.015248020 ubox
23 37 0.012316208 ubox
23 40 0.641059960 ubox
23 43 0.013086713 ubox
24 39 0.641029579 ubox
24 42 0.013315983 ubox
24 44 0.057294981 ubox
25 36 0.039280692 ubox
25 37 0.203109842 ubox
25 38 0.606781478 ubox
25 41 0.007236938 ubox
25 43 0.058777313 ubox
26 33 0.004010624 ubox
26 35 0.065490812 ubox
26 36 0.287132366 ubox
26 37 0.568438364 ubox
26 40 0.004260711 ubox
26 53 0.032002996 ubox
27 34 0.280019758 ubox
27 35 0.335677157 ubox
27 41 0.059536809 ubox
27 52 0.034815050 ubox
28 33 0.312059438 ubox
28 34 0.275550566 ubox
28 40 0.060152455 ubox
28 51 0.036674145 ubox
29 39 0.060228389 ubox
29 50 0.039341773 ubox
29 54 0.025579863 ubox
30 38 0.059519214 ubox
30 49 0.039506352 ubox
30 51 0.004530244 ubox
30 53 0.073926136 ubox
30 57 0.016759899 ubox
31 48 0.032107667 ubox
31 50 0.015976113 ubox
31 54 0.003889524 ubox
31 56 0.016705223 ubox
31 58 0.062177066 ubox
32 49 0.041692073 ubox
32 51 0.129539552 ubox
32 53 0.007833927 ubox
32 57 0.148969469 ubox
33 39 0.003492212 ubox
33 46 0.006420283 ubox
33 47 0.016085884 ubox
33 50 0.352664724 ubox
33 56 0.160985446 ubox
34 45 0.004526390 ubox
34 46 0.005988640 ubox
34 47 0.012098374 ubox
34 48 0.523554348 ubox
34 55 0.155780516 ubox
34 56 0.007242988 ubox
35 44 0.004134522 ubox
35 45 0.003861831 ubox
35 46 0.009319291 ubox
35 47 0.564805947 ubox
35 48 0.414431408 ubox
35 54 0.094945689 ubox
35 55 0.009492330 ubox
36 44 0.003880007 ubox
36 45 0.010506693 ubox
36 46 0.586508917 ubox
36 47 0.440652322 ubox
36 54 0.010342558 ubox
37 44 0.010426692 ubox
37 45 0.587036323 ubox
37 46 0.440232666 ubox
37 47 0.005750652 ubox
38 44 0.587378624 ubox
38 45 0.439621550 ubox
38 46 0.005809653 ubox
38 50 0.012198155 ubox
38 54 0.037600345 ubox
39 43 0.549863605 ubox
39 49 0.012292056 ubox
39 53 0.038622357 ubox
39 57 0.210617573 ubox
40 47 0.012323891 ubox
40 56 0.210833259 ubox
41 46 0.012093369 ubox
41 54 0.007241096 ubox
41 55 0.209694449 ubox
41 58 0.010832050 ubox
42 51 0.091427547 ubox
42 53 0.009986340 ubox
42 57 0.014216508 ubox
43 50 0.092473277 ubox
43 54 0.192842795 ubox
43 56 0.014171149 ubox
44 49 0.092284621 ubox
44 52 0.008162109 ubox
44 53 0.193629962 ubox
45 51 0.009310639 ubox
45 52 0.186627574 ubox
45 53 0.007225962 ubox
46 51 0.168587559 ubox
46 52 0.007756724 ubox
46 53 0.011459810 ubox
47 51 0.005883000 ubox
47 52 0.009568057 ubox
47 53 0.036982026 ubox
48 52 0.032302853 ubox
50 57 0.198481129 ubox
51 56 0.189194709 ubox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
4 30 0.9500000 lbox
5 29 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
39 43 0.9500000 lbox
showpage
end
%%EOF
