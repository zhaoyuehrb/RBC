%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT9)
} def

/sequence { (\
CCCUGCACUUGGGAGCCGGUAGCACUCCUAUCACUGCUUCUCAACCCGUGAGCUACCAGCUGUGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.040207278 ubox
1 13 0.946730535 ubox
2 11 0.040189833 ubox
2 12 0.950974493 ubox
2 13 0.226240447 ubox
3 11 0.950788824 ubox
3 12 0.226851550 ubox
3 13 0.015226908 ubox
3 52 0.011404610 ubox
3 59 0.004874064 ubox
4 11 0.219868915 ubox
4 12 0.015165534 ubox
4 48 0.005025660 ubox
4 50 0.010314814 ubox
4 51 0.011851004 ubox
4 58 0.004929014 ubox
4 64 0.012260282 ubox
5 10 0.122368357 ubox
5 37 0.004042725 ubox
5 47 0.006533083 ubox
5 49 0.015243089 ubox
5 53 0.003230293 ubox
5 57 0.004914668 ubox
5 63 0.019799769 ubox
5 65 0.172972954 ubox
6 36 0.004049604 ubox
6 48 0.015488527 ubox
6 50 0.074081470 ubox
6 62 0.020188070 ubox
6 64 0.181672217 ubox
7 35 0.003926176 ubox
7 49 0.074336295 ubox
7 61 0.018934105 ubox
7 63 0.181658529 ubox
7 65 0.014053925 ubox
8 48 0.074258373 ubox
8 59 0.004832453 ubox
8 62 0.181518524 ubox
8 64 0.015005909 ubox
9 44 0.094816779 ubox
9 58 0.003535369 ubox
9 59 0.025710264 ubox
10 30 0.011650178 ubox
10 43 0.103652692 ubox
10 48 0.007798264 ubox
10 58 0.030934349 ubox
11 17 0.004251927 ubox
11 29 0.012667109 ubox
11 41 0.027957894 ubox
11 42 0.104518718 ubox
11 47 0.012472035 ubox
11 57 0.031375590 ubox
11 61 0.006085283 ubox
11 63 0.004812697 ubox
11 66 0.004897144 ubox
12 16 0.004186427 ubox
12 28 0.012779009 ubox
12 40 0.069133227 ubox
12 41 0.083894360 ubox
12 46 0.012474702 ubox
12 56 0.031270069 ubox
12 57 0.006585080 ubox
12 60 0.004900677 ubox
12 61 0.006162297 ubox
12 65 0.004563849 ubox
13 27 0.012783798 ubox
13 39 0.070925964 ubox
13 40 0.083700187 ubox
13 45 0.012227582 ubox
13 56 0.006623965 ubox
13 60 0.004824393 ubox
13 65 0.003654657 ubox
13 66 0.003601990 ubox
14 26 0.012717861 ubox
14 38 0.092007583 ubox
14 39 0.060708141 ubox
14 41 0.003312784 ubox
14 54 0.021832884 ubox
14 61 0.967453427 ubox
14 65 0.005088412 ubox
15 23 0.004494534 ubox
15 25 0.012069384 ubox
15 37 0.108606774 ubox
15 38 0.017522525 ubox
15 40 0.003298458 ubox
15 53 0.028076071 ubox
15 60 0.992660530 ubox
15 63 0.003321449 ubox
15 65 0.003578984 ubox
16 22 0.004923183 ubox
16 36 0.108557027 ubox
16 52 0.027938772 ubox
16 59 0.992398577 ubox
16 62 0.003459444 ubox
16 64 0.003704029 ubox
17 36 0.018018012 ubox
17 48 0.017536868 ubox
17 50 0.017237716 ubox
17 62 0.003668869 ubox
18 28 0.004431814 ubox
18 32 0.108413107 ubox
18 35 0.019003293 ubox
18 38 0.009154367 ubox
18 40 0.004315803 ubox
18 41 0.007737112 ubox
18 46 0.018724311 ubox
18 47 0.016191375 ubox
18 49 0.006073803 ubox
18 57 0.992454793 ubox
19 27 0.004433175 ubox
19 31 0.108737638 ubox
19 34 0.018928283 ubox
19 37 0.009996578 ubox
19 39 0.004108695 ubox
19 40 0.008602423 ubox
19 45 0.020198885 ubox
19 46 0.014370202 ubox
19 56 0.993331250 ubox
20 30 0.108985001 ubox
20 33 0.017362925 ubox
20 36 0.010041457 ubox
20 44 0.021365430 ubox
20 55 0.993086730 ubox
21 29 0.109300367 ubox
21 35 0.010057750 ubox
21 38 0.027524844 ubox
21 54 0.993015094 ubox
22 28 0.108545144 ubox
22 34 0.010022098 ubox
22 37 0.029609725 ubox
22 53 0.993204032 ubox
23 36 0.030134913 ubox
23 50 0.035556318 ubox
23 52 0.990561738 ubox
24 35 0.027644801 ubox
24 49 0.076134434 ubox
25 48 0.080132617 ubox
25 52 0.036003190 ubox
26 51 0.073835125 ubox
27 50 0.074292407 ubox
28 52 0.013614302 ubox
29 36 0.011953830 ubox
29 50 0.011356065 ubox
29 51 0.017839083 ubox
30 35 0.011776472 ubox
30 49 0.016864256 ubox
31 48 0.016906609 ubox
31 51 0.965899766 ubox
32 50 0.972249325 ubox
32 64 0.010346004 ubox
33 49 0.971984509 ubox
33 63 0.010608008 ubox
34 48 0.969412331 ubox
34 59 0.005286649 ubox
34 62 0.010567886 ubox
35 43 0.214988807 ubox
35 48 0.051200405 ubox
35 50 0.010683085 ubox
35 51 0.004634998 ubox
35 58 0.005338339 ubox
36 42 0.215811509 ubox
36 47 0.220564546 ubox
36 49 0.028805901 ubox
36 53 0.004727259 ubox
36 57 0.005326658 ubox
36 60 0.010868944 ubox
37 48 0.030593728 ubox
37 52 0.005127736 ubox
37 59 0.010892458 ubox
38 44 0.174176654 ubox
38 51 0.005557163 ubox
38 52 0.003823483 ubox
38 58 0.010530911 ubox
39 43 0.154936900 ubox
39 50 0.004386879 ubox
39 51 0.035702426 ubox
40 50 0.036103843 ubox
40 52 0.046866545 ubox
41 51 0.091721428 ubox
42 50 0.093084176 ubox
43 49 0.087104701 ubox
44 65 0.003729327 ubox
45 64 0.004228970 ubox
47 64 0.011733673 ubox
48 56 0.003341710 ubox
48 60 0.003576110 ubox
48 63 0.011362211 ubox
49 55 0.003319649 ubox
49 58 0.003726701 ubox
49 62 0.003997759 ubox
50 57 0.004230388 ubox
51 61 0.105157796 ubox
52 60 0.108114127 ubox
52 63 0.004868872 ubox
52 65 0.003610656 ubox
53 59 0.108106267 ubox
53 62 0.005358090 ubox
53 64 0.003889435 ubox
54 58 0.097391423 ubox
54 64 0.004689010 ubox
55 63 0.005788503 ubox
56 62 0.005836636 ubox
57 64 0.004940779 ubox
58 63 0.004916098 ubox
59 65 0.003926043 ubox
60 64 0.004075198 ubox
1 13 0.9500000 lbox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
showpage
end
%%EOF
