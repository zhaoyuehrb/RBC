%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCCCGGCUCCGCUGGGGGCGGGACGGCGGGCGGCGGGCGGGGCCGUGUGCGCCUGCGUGGUGUCUGUCCCGGCCGCAGCCCCACGCCGGCUGCAGCUCCGCGAGCCGAGCCGGAUCUCGAGCGGGGUACACGGGCUGAGGCGGCGGCGGCGGCCCCGCCCCGGGGCUCCAUUGUUAAGGCGGCUGCGGCUCUGUCGGCUGUUCAGCUGCGCUCCAGUCGGCCCAGGCGCCGCGGCGAGGAGCGAGCGCUGC\
GAGGUGGCGGCCUGAGCA\
) } def
/len { sequence length } bind def

/coor [
[96.27024078 165.90876770]
[95.41078949 150.93341064]
[94.55133820 135.95805359]
[93.69187927 120.98270416]
[83.20758820 110.25518799]
[68.25587463 109.05258179]
[53.30415726 107.84998322]
[38.35244370 106.64737701]
[23.40073013 105.44477844]
[8.43054581 104.49948120]
[-6.55368137 103.81178284]
[-21.53790855 103.12408447]
[-36.52213669 102.43638611]
[-51.50636292 101.74868774]
[-66.49059296 101.06098938]
[-81.47481537 100.37329102]
[-96.45904541 99.68559265]
[-110.59943390 106.78206635]
[-122.95859528 98.46939850]
[-137.94282532 97.78170013]
[-152.92704773 97.09400177]
[-166.37696838 103.73475647]
[-174.94143677 116.04937744]
[-171.90116882 131.55848694]
[-180.78717041 144.62808228]
[-196.32754517 147.50421143]
[-209.30247498 138.48052979]
[-212.01414490 122.91060638]
[-202.85377502 110.03181458]
[-187.25605774 107.48490906]
[-178.69158936 95.17028809]
[-187.11430359 82.75828552]
[-201.72164917 86.16791534]
[-216.32897949 89.57755280]
[-230.93632507 92.98718262]
[-242.61648560 103.65884399]
[-256.76934814 99.01710510]
[-271.37670898 102.42674255]
[-285.98403931 105.83637238]
[-300.59136963 109.24600983]
[-312.27154541 119.91767120]
[-326.42440796 115.27593231]
[-341.03173828 118.68556213]
[-355.63909912 122.09519958]
[-370.24642944 125.50482941]
[-384.85375977 128.91445923]
[-399.46112061 132.32409668]
[-402.63317871 142.44210815]
[-409.65014648 150.28404236]
[-419.20742798 154.49169922]
[-429.56866455 154.37339783]
[-438.88143921 150.01687622]
[-445.50817871 142.26165771]
[-460.22415161 145.16691589]
[-474.94009399 148.07218933]
[-489.65606689 150.97746277]
[-504.37200928 153.88272095]
[-514.46264648 166.35505676]
[-530.50360107 166.09820557]
[-540.18975830 153.30918884]
[-536.09057617 137.79866028]
[-521.35070801 131.46496582]
[-507.27728271 139.16676331]
[-492.56134033 136.26150513]
[-477.84536743 133.35623169]
[-463.12942505 130.45095825]
[-448.41345215 127.54570007]
[-438.73220825 110.60472870]
[-419.40072632 106.23567963]
[-402.87072754 117.71675873]
[-388.26339722 114.30712128]
[-373.65606689 110.89749146]
[-359.04870605 107.48785400]
[-344.44137573 104.07822418]
[-329.83404541 100.66858673]
[-319.19869995 90.24080658]
[-304.00100708 94.63866425]
[-289.39367676 91.22903442]
[-274.78631592 87.81939697]
[-260.17898560 84.40976715]
[-249.54364014 73.98198700]
[-234.34596252 78.37984467]
[-219.73861694 74.97020721]
[-205.13127136 71.56057739]
[-190.52394104 68.15093994]
[-188.40344238 60.95695114]
[-202.79136658 56.71574402]
[-198.54992676 42.32789230]
[-184.16246033 46.56896973]
[-182.04196167 39.37498093]
[-192.46458435 28.58753777]
[-202.88720703 17.80009651]
[-213.30982971 7.01265430]
[-223.73246765 -3.77478743]
[-234.15509033 -14.56222916]
[-247.53652954 -13.24000072]
[-259.07373047 -19.76035309]
[-264.67669678 -31.55505753]
[-262.50753784 -44.23436356]
[-272.80578613 -55.14059830]
[-283.10406494 -66.04682922]
[-293.40231323 -76.95306396]
[-308.67285156 -84.31829834]
[-305.82278442 -101.03096771]
[-288.97427368 -102.91878510]
[-282.49609375 -87.25131989]
[-272.19781494 -76.34508514]
[-261.89956665 -65.43885040]
[-251.60131836 -54.53262329]
[-234.76821899 -54.75842667]
[-222.75645447 -42.48541641]
[-223.36764526 -24.98485374]
[-212.94502258 -14.19741154]
[-202.52239990 -3.40997028]
[-192.09977722 7.37747145]
[-181.67713928 18.16491318]
[-171.25451660 28.95235443]
[-152.97367859 46.09445190]
[-147.14106750 66.00622559]
[-152.23934937 82.10977173]
[-137.25512695 82.79747009]
[-122.27089691 83.48517609]
[-109.20227814 76.33950806]
[-95.77134705 84.70136261]
[-80.78711700 85.38906097]
[-65.80289459 86.07676697]
[-50.81866455 86.76446533]
[-35.83443832 87.45216370]
[-20.85021019 88.13986206]
[-5.86598253 88.82756042]
[9.11824512 89.51525879]
[11.93650723 87.45532227]
[15.88114262 86.63795471]
[20.36649132 87.57286072]
[24.60333443 90.49306488]
[39.55504608 91.69566345]
[54.50675964 92.89826965]
[69.45847321 94.10086823]
[84.41018677 95.30347443]
[97.10451508 87.31259155]
[102.48538208 73.31094360]
[100.21351624 57.65370178]
[112.00143433 48.54907608]
[117.38230133 34.54742432]
[122.76317596 20.54577255]
[128.14404297 6.54412174]
[133.52491760 -7.45752907]
[133.67765808 -16.55242920]
[139.04858398 -21.58828354]
[144.58963013 -35.52732086]
[150.13069153 -49.46635818]
[147.22328186 -65.60572052]
[159.91964722 -75.98522186]
[175.15887451 -69.92731476]
[177.26412964 -53.66386414]
[164.06971741 -43.92530441]
[158.52867126 -29.98626900]
[152.98762512 -16.04723167]
[147.52656555 -2.07665801]
[142.14569092 11.92499256]
[136.76483154 25.92664337]
[131.38395691 39.92829514]
[126.00308228 53.92994690]
[128.65983582 68.58569336]
[116.48703003 78.69181061]
[111.10616302 92.69346619]
[125.23265839 84.64788055]
[139.92370605 77.60099792]
[155.12602234 71.58203888]
[170.11026001 72.26973724]
[185.09448242 72.95743561]
[200.07870483 73.64513397]
[215.06294250 74.33283234]
[223.74136353 71.60785675]
[230.21473694 75.11529541]
[245.19009399 75.97474670]
[260.16543579 76.83420563]
[275.14080811 77.69365692]
[290.11614990 78.55310822]
[301.85522461 68.31434631]
[317.03012085 69.39928436]
[326.71887207 80.65378571]
[341.69421387 81.51323700]
[356.66958618 82.37269592]
[371.64492798 83.23214722]
[385.86575317 76.29826355]
[398.12881470 84.75209045]
[413.10415649 85.61154175]
[428.07952881 86.47099304]
[436.78860474 83.84570312]
[443.22134399 87.42712402]
[458.18588257 88.45822144]
[473.15039062 89.48931885]
[465.23229980 76.74947357]
[470.14453125 62.57661438]
[484.24829102 57.46943283]
[497.09609985 65.21112823]
[499.17080688 80.06695557]
[488.93493652 91.03253937]
[503.81579590 92.91936493]
[518.69665527 94.80618286]
[533.57751465 96.69300842]
[548.45837402 98.57983398]
[563.33923340 100.46665955]
[571.49932861 93.34640503]
[582.01123047 91.90129852]
[591.39422607 96.36740112]
[596.67358398 105.06278229]
[611.50726318 107.29032135]
[626.34094238 109.51785278]
[642.90240479 105.89070129]
[650.97241211 120.80078888]
[638.87902832 132.68298340]
[624.11346436 124.35153198]
[609.27972412 122.12400055]
[594.44604492 119.89646149]
[576.97955322 128.24121094]
[561.45239258 115.34751129]
[546.57153320 113.46069336]
[531.69067383 111.57386780]
[516.80981445 109.68704224]
[501.92895508 107.80021667]
[487.04812622 105.91339874]
[472.11929321 104.45383453]
[457.15478516 103.42273712]
[442.19024658 102.39164734]
[427.22006226 101.44635010]
[412.24472046 100.58689880]
[397.26934814 99.72744751]
[384.11965942 106.72280121]
[370.78549194 98.20750427]
[355.81011963 97.34805298]
[340.83477783 96.48859406]
[325.85940552 95.62914276]
[314.94671631 105.70129395]
[299.74731445 105.04301453]
[289.25671387 93.52846527]
[274.28134155 92.66901398]
[259.30599976 91.80956268]
[244.33062744 90.95010376]
[229.35527039 90.09065247]
[214.37524414 89.31706238]
[199.39100647 88.62936401]
[184.40678406 87.94166565]
[169.42256165 87.25396729]
[154.43832397 86.56626892]
[150.12086487 92.69892883]
[156.42550659 106.30963898]
[141.48594666 104.96424866]
[137.16847229 111.09690857]
[142.86898804 124.97149658]
[148.56948853 138.84608459]
[154.26998901 152.72067261]
[159.97048950 166.59526062]
[165.67100525 180.46984863]
[177.28309631 192.82281494]
[168.62745667 207.40074158]
[152.22311401 203.11894226]
[151.79640198 186.17036438]
[146.09590149 172.29577637]
[140.39540100 158.42117310]
[134.69490051 144.54658508]
[128.99438477 130.67199707]
[123.29388428 116.79740906]
[108.66723633 120.12324524]
[109.52669525 135.09860229]
[110.38614655 150.07395935]
[111.24559784 165.04931641]
[123.20816803 175.37756348]
[124.28047180 191.14543152]
[113.82633972 202.99813843]
[98.04801178 203.90367126]
[86.30649567 193.32479858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 268]
[2 267]
[3 266]
[4 265]
[5 139]
[6 138]
[7 137]
[8 136]
[9 135]
[10 131]
[11 130]
[12 129]
[13 128]
[14 127]
[15 126]
[16 125]
[17 124]
[19 122]
[20 121]
[21 120]
[22 31]
[23 30]
[32 85]
[33 84]
[34 83]
[35 82]
[37 80]
[38 79]
[39 78]
[40 77]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[99 109]
[100 108]
[101 107]
[102 106]
[140 166]
[141 165]
[143 163]
[144 162]
[145 161]
[146 160]
[147 159]
[149 158]
[150 157]
[151 156]
[169 246]
[170 245]
[171 244]
[172 243]
[173 242]
[175 241]
[176 240]
[177 239]
[178 238]
[179 237]
[182 234]
[183 233]
[184 232]
[185 231]
[187 229]
[188 228]
[189 227]
[191 226]
[192 225]
[193 224]
[199 223]
[200 222]
[201 221]
[202 220]
[203 219]
[204 218]
[208 216]
[209 215]
[210 214]
[250 264]
[251 263]
[252 262]
[253 261]
[254 260]
[255 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
