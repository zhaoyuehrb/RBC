%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C19orf57)
} def

/sequence { (\
CUGGCUGGGGCGGUGCUGACUGUCGCGGGCUGCGAGGGCGGUGUUUGCGUCGCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012985795 ubox
1 9 0.007541350 ubox
1 28 0.003678203 ubox
1 29 0.017854109 ubox
1 36 0.064650958 ubox
1 37 0.008198386 ubox
2 7 0.012556732 ubox
2 8 0.007747535 ubox
2 27 0.003365712 ubox
2 28 0.017083459 ubox
2 32 0.253440753 ubox
2 34 0.024259916 ubox
2 35 0.066638579 ubox
2 36 0.008258287 ubox
2 49 0.003593095 ubox
2 52 0.025882733 ubox
3 31 0.586392468 ubox
3 33 0.027028859 ubox
3 48 0.004655538 ubox
3 51 0.035164865 ubox
3 54 0.673960200 ubox
3 55 0.100760045 ubox
4 26 0.017869636 ubox
4 30 0.611124608 ubox
4 33 0.058504533 ubox
4 48 0.005804243 ubox
4 50 0.034841311 ubox
4 53 0.733005545 ubox
4 54 0.058478383 ubox
5 25 0.017932852 ubox
5 28 0.402086917 ubox
5 29 0.503103460 ubox
5 32 0.052234258 ubox
5 47 0.005214082 ubox
5 49 0.034419398 ubox
5 52 0.716950569 ubox
6 27 0.533733426 ubox
6 28 0.357540007 ubox
6 52 0.184493962 ubox
7 26 0.640689823 ubox
7 33 0.003451787 ubox
7 48 0.005709284 ubox
7 51 0.739986368 ubox
7 54 0.012466303 ubox
7 55 0.012037691 ubox
8 24 0.005792727 ubox
8 46 0.021769470 ubox
8 50 0.734817939 ubox
8 51 0.022057276 ubox
8 53 0.013523676 ubox
8 54 0.010404964 ubox
8 55 0.144535438 ubox
9 23 0.004139707 ubox
9 24 0.647595468 ubox
9 31 0.004081466 ubox
9 45 0.022034656 ubox
9 46 0.004316890 ubox
9 50 0.020517217 ubox
9 51 0.030048925 ubox
9 53 0.007702419 ubox
9 54 0.153306450 ubox
9 55 0.005361979 ubox
10 23 0.647851449 ubox
10 30 0.004112523 ubox
10 33 0.003241458 ubox
10 44 0.022248661 ubox
10 45 0.003642941 ubox
10 48 0.744570710 ubox
10 50 0.030269319 ubox
10 53 0.154815069 ubox
11 22 0.648065989 ubox
11 29 0.004112143 ubox
11 32 0.003244003 ubox
11 43 0.022280553 ubox
11 47 0.744532284 ubox
11 49 0.030352910 ubox
11 52 0.154981405 ubox
12 21 0.647601819 ubox
12 31 0.003241282 ubox
12 42 0.013519526 ubox
12 45 0.124243533 ubox
12 46 0.718656658 ubox
12 48 0.029929489 ubox
12 51 0.154900625 ubox
13 20 0.648015034 ubox
13 30 0.003240850 ubox
13 44 0.172387043 ubox
13 45 0.656749490 ubox
13 48 0.013878692 ubox
13 50 0.147251302 ubox
14 19 0.641531419 ubox
14 27 0.003189233 ubox
14 40 0.011471238 ubox
14 43 0.269058102 ubox
14 47 0.014566232 ubox
14 49 0.144007287 ubox
15 26 0.003907021 ubox
15 39 0.011465038 ubox
15 42 0.739161295 ubox
15 44 0.017858246 ubox
15 48 0.151805133 ubox
16 22 0.004098219 ubox
16 25 0.003885877 ubox
16 38 0.010907231 ubox
16 41 0.745768012 ubox
16 43 0.017240897 ubox
16 47 0.151416008 ubox
17 37 0.006975305 ubox
17 40 0.745551267 ubox
17 43 0.005566529 ubox
18 39 0.745444969 ubox
18 42 0.003380458 ubox
18 45 0.048061434 ubox
18 46 0.006669561 ubox
19 42 0.140994791 ubox
19 44 0.049510743 ubox
19 45 0.005376652 ubox
20 28 0.003516245 ubox
20 36 0.005572643 ubox
20 37 0.038162945 ubox
20 38 0.744824393 ubox
20 41 0.142530943 ubox
20 43 0.045029260 ubox
21 27 0.003903705 ubox
21 35 0.003408060 ubox
21 36 0.034623267 ubox
21 37 0.742387403 ubox
21 40 0.143129569 ubox
22 26 0.003904256 ubox
22 39 0.143573766 ubox
22 42 0.007794304 ubox
22 51 0.004466734 ubox
23 35 0.746622388 ubox
23 37 0.012819589 ubox
23 38 0.137936631 ubox
23 41 0.025603284 ubox
24 34 0.748917593 ubox
24 36 0.017504540 ubox
24 37 0.131238715 ubox
24 40 0.026576232 ubox
24 49 0.009905712 ubox
25 33 0.749511838 ubox
25 39 0.026591192 ubox
25 42 0.003452355 ubox
25 48 0.026209794 ubox
25 53 0.008850798 ubox
26 32 0.749218573 ubox
26 34 0.127757298 ubox
26 38 0.026559970 ubox
26 41 0.003440968 ubox
26 47 0.026231682 ubox
26 52 0.008860029 ubox
27 31 0.462262480 ubox
27 33 0.127759558 ubox
27 46 0.024909190 ubox
27 51 0.008619169 ubox
27 55 0.021855663 ubox
28 45 0.021384930 ubox
28 50 0.008008423 ubox
28 51 0.008064402 ubox
28 54 0.023989974 ubox
29 39 0.011091275 ubox
29 42 0.078448110 ubox
29 44 0.011272259 ubox
29 50 0.009254578 ubox
29 53 0.039780030 ubox
29 54 0.004488272 ubox
30 36 0.007556291 ubox
30 37 0.007870576 ubox
30 38 0.011099243 ubox
30 41 0.080843423 ubox
30 43 0.009932540 ubox
30 49 0.009561338 ubox
30 52 0.039794581 ubox
31 35 0.007003117 ubox
31 36 0.007804236 ubox
31 37 0.011022662 ubox
31 40 0.081268328 ubox
31 49 0.015544702 ubox
32 39 0.083266928 ubox
32 48 0.025391960 ubox
32 50 0.036343961 ubox
32 51 0.003860067 ubox
32 53 0.438239358 ubox
33 38 0.083248253 ubox
33 40 0.003954046 ubox
33 47 0.025407932 ubox
33 49 0.036931041 ubox
33 52 0.439299527 ubox
34 39 0.003943987 ubox
34 46 0.025210621 ubox
34 48 0.036653527 ubox
34 51 0.438492637 ubox
34 55 0.311819026 ubox
35 45 0.025006083 ubox
35 46 0.007684358 ubox
35 50 0.432759040 ubox
35 54 0.314365801 ubox
36 44 0.023860768 ubox
36 45 0.008055828 ubox
36 46 0.030617803 ubox
36 51 0.006157025 ubox
36 53 0.314067841 ubox
36 54 0.006491170 ubox
36 55 0.321928588 ubox
37 44 0.007776115 ubox
37 45 0.038311962 ubox
37 46 0.003453951 ubox
37 50 0.007741436 ubox
37 51 0.316695846 ubox
37 53 0.005324917 ubox
37 54 0.340495723 ubox
37 55 0.011720926 ubox
38 44 0.039316478 ubox
38 48 0.435251829 ubox
38 50 0.319821575 ubox
38 53 0.343355852 ubox
39 43 0.039176916 ubox
39 47 0.435484518 ubox
39 49 0.321512962 ubox
39 52 0.343436901 ubox
40 46 0.399374906 ubox
40 48 0.319166062 ubox
40 51 0.343252646 ubox
40 54 0.018653767 ubox
41 45 0.259574346 ubox
41 48 0.048173295 ubox
41 50 0.324495416 ubox
41 53 0.020440814 ubox
42 47 0.057075818 ubox
42 49 0.298085405 ubox
42 52 0.020487700 ubox
43 48 0.309148664 ubox
43 51 0.021355522 ubox
43 53 0.010486387 ubox
44 49 0.006844214 ubox
44 52 0.010256586 ubox
47 51 0.004086589 ubox
47 53 0.031960602 ubox
48 52 0.031783431 ubox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 52 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
showpage
end
%%EOF
