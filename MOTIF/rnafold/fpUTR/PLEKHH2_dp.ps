%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLEKHH2)
} def

/sequence { (\
GAGAGUCCGGGGAUCCCGGGGGCCAGUCGCGGCCGGGACAUCGGGCGCUGCGGCCGGGGACCCGCUGCUGAGAUAGACAGAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.105980629 ubox
1 28 0.010129787 ubox
2 6 0.092561218 ubox
2 27 0.010084997 ubox
2 49 0.058898054 ubox
2 66 0.045088759 ubox
2 69 0.176358488 ubox
3 48 0.060281335 ubox
3 65 0.046332162 ubox
3 68 0.180730457 ubox
4 66 0.223028249 ubox
4 69 0.428559731 ubox
5 23 0.008876803 ubox
5 46 0.063799159 ubox
5 61 0.009052650 ubox
5 65 0.226362650 ubox
5 68 0.440198241 ubox
5 74 0.069662036 ubox
5 78 0.155564072 ubox
5 83 0.013659636 ubox
6 20 0.097798578 ubox
6 21 0.003403902 ubox
6 22 0.008244698 ubox
6 45 0.063848466 ubox
6 60 0.008962432 ubox
6 64 0.191570659 ubox
6 67 0.432807777 ubox
6 71 0.024842818 ubox
6 73 0.071507778 ubox
6 77 0.155688523 ubox
6 81 0.014429656 ubox
6 82 0.013983200 ubox
7 19 0.132463445 ubox
7 20 0.009228620 ubox
7 21 0.005886411 ubox
7 44 0.063890297 ubox
7 59 0.008586424 ubox
7 70 0.026458089 ubox
7 72 0.071823884 ubox
7 76 0.155246408 ubox
7 80 0.013967094 ubox
8 18 0.132856460 ubox
8 19 0.008482783 ubox
8 20 0.005395266 ubox
8 43 0.063889022 ubox
8 58 0.008230122 ubox
8 64 0.714154730 ubox
8 67 0.099688629 ubox
8 70 0.052337744 ubox
9 17 0.133267737 ubox
9 42 0.063581281 ubox
9 62 0.006727916 ubox
9 63 0.734164390 ubox
9 66 0.102692648 ubox
9 69 0.051308721 ubox
10 16 0.133256444 ubox
10 17 0.008416507 ubox
10 41 0.062121326 ubox
10 42 0.006632024 ubox
10 61 0.006842343 ubox
10 62 0.728034180 ubox
10 63 0.650794926 ubox
10 65 0.101119464 ubox
10 68 0.039646511 ubox
11 15 0.131103182 ubox
11 16 0.008476134 ubox
11 41 0.008803010 ubox
11 61 0.720298840 ubox
11 62 0.658541810 ubox
11 63 0.119093370 ubox
11 66 0.003465254 ubox
12 61 0.665239906 ubox
12 62 0.119028613 ubox
12 65 0.003802901 ubox
14 38 0.062541244 ubox
14 58 0.114549005 ubox
14 59 0.451430177 ubox
14 60 0.830170139 ubox
15 37 0.063944442 ubox
15 57 0.114723812 ubox
15 58 0.495870961 ubox
15 59 0.847605726 ubox
16 36 0.063948189 ubox
16 56 0.114320310 ubox
16 57 0.496542000 ubox
16 58 0.847389249 ubox
16 59 0.013102278 ubox
17 35 0.063935721 ubox
17 56 0.496788170 ubox
17 57 0.844909754 ubox
17 58 0.014564527 ubox
17 64 0.004981522 ubox
18 34 0.057342807 ubox
18 55 0.281807360 ubox
18 63 0.006404947 ubox
19 33 0.055590759 ubox
19 54 0.201196225 ubox
19 55 0.172183610 ubox
19 62 0.006524723 ubox
19 63 0.005320722 ubox
20 28 0.003460089 ubox
20 54 0.121882416 ubox
20 55 0.145302628 ubox
20 61 0.006628082 ubox
20 62 0.006149945 ubox
20 63 0.040925206 ubox
21 27 0.003319040 ubox
21 34 0.033143073 ubox
21 54 0.109627849 ubox
21 55 0.926677222 ubox
21 61 0.006035063 ubox
21 62 0.041001029 ubox
22 30 0.053848366 ubox
22 33 0.035977901 ubox
22 51 0.065426193 ubox
22 54 0.962091172 ubox
22 61 0.040962591 ubox
23 29 0.053859749 ubox
23 32 0.038151652 ubox
23 50 0.055562030 ubox
23 53 0.991033679 ubox
23 57 0.016051878 ubox
23 58 0.014789514 ubox
23 59 0.035540484 ubox
24 31 0.038121714 ubox
24 50 0.044253540 ubox
24 52 0.987387211 ubox
24 56 0.016129117 ubox
24 57 0.015412635 ubox
24 58 0.035253610 ubox
24 70 0.003239019 ubox
25 49 0.056327313 ubox
25 69 0.003208433 ubox
26 48 0.046821999 ubox
26 51 0.984951638 ubox
26 54 0.041755395 ubox
26 74 0.011318002 ubox
26 78 0.014710830 ubox
27 47 0.015728490 ubox
27 50 0.973892866 ubox
27 53 0.042001745 ubox
27 71 0.007330607 ubox
27 73 0.011612761 ubox
27 77 0.014720862 ubox
28 47 0.041039685 ubox
28 50 0.096593274 ubox
28 52 0.042042224 ubox
28 70 0.007841009 ubox
28 72 0.011627979 ubox
28 76 0.014702514 ubox
29 46 0.041896229 ubox
29 48 0.994759537 ubox
29 49 0.020526636 ubox
29 51 0.041280700 ubox
29 68 0.017444488 ubox
30 45 0.041709760 ubox
30 47 0.995740012 ubox
30 50 0.041099168 ubox
30 67 0.017602088 ubox
30 70 0.009465100 ubox
31 46 0.995327075 ubox
31 49 0.038855965 ubox
31 66 0.017641730 ubox
31 69 0.009543936 ubox
32 46 0.031889789 ubox
32 48 0.036239847 ubox
32 65 0.017655120 ubox
32 68 0.009553970 ubox
33 44 0.996229155 ubox
33 45 0.041039399 ubox
33 47 0.026941654 ubox
33 64 0.012586666 ubox
33 67 0.009512668 ubox
34 43 0.996675479 ubox
34 44 0.040930088 ubox
34 47 0.005067759 ubox
34 64 0.015742750 ubox
35 42 0.994553306 ubox
35 46 0.007148794 ubox
35 63 0.026668942 ubox
36 41 0.881483952 ubox
36 42 0.044390165 ubox
36 62 0.026684303 ubox
37 41 0.032070929 ubox
37 61 0.026644349 ubox
41 57 0.021867319 ubox
41 58 0.014650804 ubox
42 56 0.022237526 ubox
42 57 0.014895008 ubox
43 55 0.022138117 ubox
44 54 0.022014762 ubox
44 55 0.015192481 ubox
45 54 0.015371016 ubox
46 52 0.021860411 ubox
46 53 0.015518891 ubox
47 51 0.020466602 ubox
47 68 0.006646647 ubox
48 67 0.006661140 ubox
48 72 0.008148010 ubox
49 71 0.007683963 ubox
50 65 0.007685356 ubox
50 68 0.064467320 ubox
51 64 0.007746330 ubox
51 67 0.064869199 ubox
51 70 0.007273591 ubox
52 63 0.007740532 ubox
52 66 0.064834489 ubox
52 69 0.007340233 ubox
53 62 0.007712194 ubox
53 65 0.064878656 ubox
53 68 0.007352375 ubox
54 64 0.050605760 ubox
54 67 0.007290513 ubox
55 64 0.043915782 ubox
56 62 0.038906401 ubox
56 63 0.115108518 ubox
56 66 0.004598558 ubox
57 61 0.038367206 ubox
57 62 0.114801223 ubox
57 63 0.037929704 ubox
57 65 0.004821443 ubox
57 66 0.007201256 ubox
58 62 0.037397513 ubox
58 65 0.007622619 ubox
59 65 0.003201812 ubox
65 72 0.104146877 ubox
65 76 0.055235849 ubox
65 80 0.806113341 ubox
66 71 0.103592583 ubox
66 75 0.055889403 ubox
66 79 0.809716114 ubox
67 74 0.050495446 ubox
67 78 0.810743120 ubox
68 76 0.804691055 ubox
68 80 0.227374316 ubox
69 75 0.796943587 ubox
69 79 0.229131285 ubox
70 74 0.663484007 ubox
70 78 0.230827126 ubox
73 83 0.013361272 ubox
74 82 0.014504283 ubox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
65 80 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
70 74 0.9500000 lbox
showpage
end
%%EOF
