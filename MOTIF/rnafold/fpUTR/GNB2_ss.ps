%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGCGGGCGGGAUCCCUCCGCUCUGGGGAGGCAGCGCUGGCGGCGGGGCUGGGGCCACUGAGGAAAUCCAUCCGCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCUCCGCCGCGGAGGAAGACAGCGCCGCCCGCGCACCGCCAGCGACCUCCGCCGCAGAGUCCCACCGCCACAGGCCUCGGGCCAGCGGCCAGGAGCUGCCUCCCCCAGCCCCCGUCCCGCGGCCCCCAGCCGCCCCCAACCCUG\
CCCCACGGGCCCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[268.53976440 227.51333618]
[259.56756592 217.76028442]
[257.81347656 204.42858887]
[244.93925476 196.73088074]
[232.06504822 189.03317261]
[219.19084167 181.33546448]
[206.31663513 173.63775635]
[193.44241333 165.94004822]
[181.66329956 168.58805847]
[170.88401794 162.31170654]
[167.13864136 149.99487305]
[154.35353088 142.15007019]
[141.56842041 134.30525208]
[128.78332520 126.46044922]
[115.99821472 118.61563873]
[80.13603973 130.52470398]
[53.76499176 86.05509949]
[38.80047226 85.02400970]
[23.83595276 83.99291229]
[8.87143230 82.96181488]
[-6.09308672 81.93071747]
[-21.05760574 80.89962006]
[-36.02212524 79.86852264]
[-40.64564896 82.12716675]
[-45.22009659 82.38562012]
[-48.99961472 80.99153137]
[-51.48072433 78.53591919]
[-66.40093231 76.99079895]
[-81.32975006 75.53123474]
[-96.26669312 74.15728760]
[-111.20363617 72.78333282]
[-126.14057922 71.40938568]
[-141.07751465 70.03543091]
[-156.01446533 68.66147614]
[-170.46533203 75.10220337]
[-182.43038940 66.23165131]
[-197.36734009 64.85769653]
[-212.30427551 63.48374939]
[-226.75514221 69.92446899]
[-238.72019958 61.05392075]
[-253.65715027 59.67996979]
[-268.59408569 58.30601883]
[-283.53103638 56.93206406]
[-298.46798706 55.55811310]
[-313.40490723 54.18416214]
[-328.34185791 52.81021118]
[-343.27880859 51.43626022]
[-358.21575928 50.06230927]
[-373.16030884 48.77400970]
[-388.11203003 47.57140732]
[-403.06375122 46.36880493]
[-411.83074951 48.79371643]
[-418.17965698 45.06573486]
[-433.11660767 43.69178391]
[-448.06118774 42.40348434]
[-463.01290894 41.20088196]
[-477.96463013 39.99827957]
[-480.73544312 46.60903168]
[-485.58731079 52.34040451]
[-492.22503662 56.53309250]
[-500.14483643 58.63127899]
[-508.67153931 58.24810410]
[-517.01617432 55.21759033]
[-524.34869385 49.62695312]
[-539.34478760 49.28301239]
[-554.34082031 48.93907166]
[-565.59490967 60.03507996]
[-581.39801025 59.83976746]
[-592.37438965 48.46900940]
[-592.01202393 32.66887665]
[-580.52581787 21.81330490]
[-564.73040771 22.34271622]
[-553.99688721 33.94301605]
[-539.00085449 34.28695679]
[-524.00476074 34.63089752]
[-521.77722168 19.79721451]
[-536.21289062 15.72147083]
[-550.64855957 11.64572620]
[-566.40258789 16.20015335]
[-578.03472900 4.64048386]
[-573.57879639 -11.14168453]
[-557.61871338 -14.91101074]
[-546.57281494 -2.78993511]
[-532.13714600 1.28580976]
[-517.70147705 5.36155462]
[-489.98455811 5.08734608]
[-476.76202393 25.04656601]
[-461.81030273 26.24916840]
[-446.85858154 27.45177078]
[-439.96533203 24.86533356]
[-431.74267578 28.75484085]
[-416.80572510 30.12879181]
[-401.86114502 31.41709137]
[-386.90942383 32.61969376]
[-371.95773315 33.82229614]
[-365.06445312 31.23585892]
[-356.84179688 35.12536621]
[-341.90484619 36.49931717]
[-326.96789551 37.87326813]
[-312.03097534 39.24721909]
[-297.09402466 40.62117004]
[-282.15707397 41.99512482]
[-267.22015381 43.36907578]
[-252.28320312 44.74302673]
[-237.34625244 46.11697769]
[-223.96377563 39.57798004]
[-210.93032837 48.54680634]
[-195.99337769 49.92075729]
[-181.05644226 51.29470825]
[-167.67396545 44.75571060]
[-154.64051819 53.72453690]
[-139.70356750 55.09848785]
[-124.76662445 56.47243881]
[-109.82968903 57.84638977]
[-94.89274597 59.22034073]
[-79.95580292 60.59429550]
[-73.03334045 58.08705902]
[-64.85581207 62.07058716]
[-49.93560410 63.61570740]
[-34.99102783 64.90400696]
[-20.02651024 65.93510437]
[-5.06199074 66.96620178]
[9.90252876 67.99729156]
[24.86704826 69.02838898]
[39.83156586 70.05948639]
[54.79608536 71.09058380]
[60.39453888 66.09986115]
[46.15186691 61.39386749]
[43.10594940 46.70637894]
[54.30266571 36.72472000]
[68.54542542 41.43044662]
[71.59143829 56.11840820]
[77.18989563 51.12768173]
[77.87759399 36.14345551]
[78.56529236 21.15922546]
[79.25299072 6.17499876]
[69.54664612 -6.59866095]
[73.62120819 -22.11566544]
[88.35103607 -28.47269821]
[102.43665314 -20.79318619]
[105.07278442 -4.96819401]
[94.23721313 6.86269760]
[93.54951477 21.84692574]
[92.86181641 36.83115387]
[92.17411804 51.81538010]
[99.42592621 53.72882080]
[109.99169922 43.08153915]
[113.92955017 57.55570221]
[121.18135834 59.46914673]
[127.97588348 46.09624863]
[124.72668457 33.63932800]
[130.63183594 22.65230942]
[142.05653381 18.74899292]
[149.00395203 5.45487642]
[155.95135498 -7.83923960]
[152.54281616 -23.51601791]
[162.78553772 -35.86373901]
[178.82217407 -35.41028976]
[188.35079956 -22.50351715]
[184.06185913 -7.04439020]
[169.24546814 -0.89183128]
[162.29806519 12.40228462]
[155.35064697 25.69639969]
[157.01588440 43.18212509]
[141.34878540 52.89077759]
[134.55426025 66.26367188]
[136.75466919 78.95039368]
[135.13041687 90.39848328]
[130.47944641 99.58905792]
[123.84302521 105.83052826]
[136.62812805 113.67533875]
[149.41323853 121.52014923]
[162.19834900 129.36495972]
[174.98344421 137.20976257]
[193.41465759 137.29115295]
[201.14012146 153.06584167]
[214.01432800 160.76354980]
[226.88854980 168.46124268]
[239.76275635 176.15895081]
[252.63696289 183.85665894]
[265.51116943 191.55436707]
[282.41470337 186.98114014]
[297.09680176 195.88870239]
[300.70321655 212.33248901]
[313.66485596 219.88208008]
[326.62646484 227.43167114]
[342.44555664 227.69152832]
[349.54904175 240.78309631]
[362.51068115 248.33268738]
[375.47229004 255.88229370]
[388.43392944 263.43188477]
[401.39553833 270.98147583]
[414.35717773 278.53106689]
[427.31878662 286.08065796]
[442.72216797 279.04971313]
[459.11541748 282.56411743]
[470.06344604 295.04116821]
[471.39010620 311.42037964]
[484.43743896 318.82086182]
[500.25845337 318.89932251]
[507.51159668 331.90859985]
[520.55889893 339.30908203]
[533.60626221 346.70956421]
[546.65356445 354.11004639]
[570.10534668 341.40390015]
[598.70050049 356.57360840]
[613.47918701 359.14068604]
[628.25787354 361.70776367]
[643.03656006 364.27484131]
[654.87255859 354.05508423]
[670.50921631 353.88598633]
[682.56341553 363.84744263]
[685.34356689 379.23590088]
[677.53686523 392.78543091]
[662.82952881 398.09835815]
[648.16577148 392.66607666]
[640.46954346 379.05355835]
[625.69079590 376.48648071]
[610.91210938 373.91940308]
[596.13342285 371.35232544]
[592.89031982 378.11489868]
[606.41552734 384.60101318]
[619.94067383 391.08712769]
[633.46588135 397.57324219]
[641.93621826 409.95278931]
[626.97973633 411.09841919]
[613.45458984 404.61230469]
[599.92938232 398.12619019]
[586.40423584 391.64007568]
[583.16119385 398.40267944]
[594.41510010 408.31976318]
[605.66906738 418.23687744]
[616.92297363 428.15396118]
[628.17694092 438.07107544]
[644.21429443 438.49911499]
[653.76330566 451.39077759]
[649.49890137 466.85668945]
[634.69226074 473.03268433]
[620.70178223 465.18112183]
[618.25982666 449.32501221]
[607.00592041 439.40789795]
[595.75195312 429.49081421]
[584.49804688 419.57369995]
[573.24407959 409.65661621]
[563.67010498 409.17904663]
[554.92187500 406.36904907]
[547.53161621 401.60693359]
[541.89538574 395.38470459]
[538.25225830 388.26245117]
[536.67724609 380.82220459]
[537.08612061 373.62246704]
[539.25311279 367.15737915]
[526.20574951 359.75689697]
[513.15844727 352.35641479]
[500.11111450 344.95593262]
[485.22332764 345.40679932]
[477.03695679 331.86819458]
[463.98962402 324.46771240]
[452.41998291 331.08843994]
[438.98190308 331.13763428]
[427.17565918 324.49578857]
[420.12905884 312.80010986]
[419.76919556 299.04226685]
[406.80758667 291.49267578]
[393.84594727 283.94308472]
[380.88433838 276.39349365]
[367.92269897 268.84390259]
[354.96109009 261.29431152]
[341.99945068 253.74472046]
[327.10748291 254.02487183]
[319.07687378 240.39329529]
[306.11526489 232.84370422]
[293.15362549 225.29411316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[6 178]
[7 177]
[8 176]
[11 174]
[12 173]
[13 172]
[14 171]
[15 170]
[17 126]
[18 125]
[19 124]
[20 123]
[21 122]
[22 121]
[23 120]
[27 119]
[28 118]
[29 116]
[30 115]
[31 114]
[32 113]
[33 112]
[34 111]
[36 109]
[37 108]
[38 107]
[40 105]
[41 104]
[42 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 95]
[50 94]
[51 93]
[53 92]
[54 91]
[55 89]
[56 88]
[57 87]
[64 75]
[65 74]
[66 73]
[76 85]
[77 84]
[78 83]
[133 145]
[134 144]
[135 143]
[136 142]
[149 166]
[150 165]
[153 163]
[154 162]
[155 161]
[184 273]
[185 272]
[186 271]
[188 269]
[189 268]
[190 267]
[191 266]
[192 265]
[193 264]
[194 263]
[198 258]
[199 257]
[201 255]
[202 254]
[203 253]
[204 252]
[206 220]
[207 219]
[208 218]
[209 217]
[230 244]
[231 243]
[232 242]
[233 241]
[234 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
