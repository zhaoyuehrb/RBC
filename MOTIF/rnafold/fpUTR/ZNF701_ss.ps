%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCAACCUUUAGGCGCCUGAAGCGCAAACGUCGCGAUCCCAGUCUCAGGGAGGCCGAGUUCUCUGCCUGGUGCUGGGAUCUUGUGGACCCCACCGAAGGCGUCGUCGCACCCCACCUCCCGCCUCAUGCUGGGCCUUGCUGCACCCCAAGUCUCCCCUUAGCAGUCACCACUUUCCUUGAGCCAGCGUUGGGGAGGUGCCAGGGGCCAGUCCUGUGACACGAG\
) } def
/len { sequence length } bind def

/coor [
[107.66333008 382.98416138]
[106.62160492 368.02035522]
[105.57987976 353.05657959]
[96.97737885 340.89736938]
[103.73759460 326.59320068]
[102.69586945 311.62939453]
[90.77281189 305.63580322]
[83.30611420 294.44512939]
[82.33350372 280.91885376]
[88.21543121 268.57968140]
[99.51319885 260.69406128]
[98.67958069 245.71725464]
[95.17327881 239.22052002]
[97.93993378 230.52673340]
[97.31457520 215.53977966]
[96.68921661 200.55282593]
[88.42803955 188.15917969]
[95.58327484 174.04844666]
[94.95791626 159.06147766]
[94.33255768 144.07452393]
[93.70720673 129.08757019]
[81.33261871 123.17788696]
[72.92161560 112.34693146]
[70.26007080 98.89438629]
[55.89466858 94.57754517]
[41.52926254 90.26070404]
[36.46990967 91.45496368]
[31.91136932 90.67405701]
[28.52029228 88.43727112]
[26.66183662 85.45281982]
[12.48889256 80.54083252]
[-1.68405139 75.62883759]
[-17.25702667 78.42044067]
[-26.74885178 66.94200134]
[-40.92179489 62.03001404]
[-55.09473801 57.11802292]
[-96.19310760 79.76375580]
[-111.14096069 78.51412964]
[-126.08882141 77.26450348]
[-141.03668213 76.01487732]
[-155.98452759 74.76525116]
[-170.93238831 73.51562500]
[-185.88024902 72.26599884]
[-200.82810974 71.01636505]
[-215.77595520 69.76673889]
[-230.17274475 76.32747650]
[-242.21119690 67.55678558]
[-257.15905762 66.30715179]
[-272.10690308 65.05752563]
[-287.05474854 63.80790329]
[-302.00262451 62.55827332]
[-316.39941406 69.11901093]
[-328.43783569 60.34831619]
[-343.38571167 59.09868622]
[-358.33355713 57.84906006]
[-368.36602783 69.68668365]
[-383.44839478 73.33386230]
[-397.78118896 67.38819885]
[-405.85311890 54.13591003]
[-404.56042480 38.67277527]
[-394.40014648 26.94468498]
[-379.27908325 23.46132851]
[-365.01165771 29.56212997]
[-357.08392334 42.90120316]
[-342.13607788 44.15082932]
[-327.18823242 45.40045929]
[-313.86062622 38.75034332]
[-300.75299072 47.61041641]
[-285.80514526 48.86004639]
[-270.85726929 50.10967255]
[-255.90942383 51.35929871]
[-240.96156311 52.60892487]
[-227.63395691 45.95880890]
[-214.52633667 54.81888580]
[-199.57847595 56.06851196]
[-184.63061523 57.31813812]
[-169.68276978 58.56776428]
[-154.73490906 59.81739044]
[-139.78704834 61.06702042]
[-124.83919525 62.31664658]
[-109.89133453 63.56627274]
[-94.94348145 64.81589508]
[-91.29930115 58.26074982]
[-84.01095581 45.15044785]
[-80.36678314 38.59529877]
[-89.31796265 26.55884171]
[-98.26914215 14.52238274]
[-107.22032928 2.48592496]
[-121.52402496 -6.61575222]
[-116.73770905 -22.88005257]
[-99.78403473 -22.78318787]
[-95.18386841 -6.46525812]
[-86.23268890 5.57119989]
[-77.28150177 17.60765839]
[-68.33032227 29.64411545]
[-66.43144989 14.76479149]
[-54.16531372 6.13102865]
[-39.51783371 9.36387825]
[-32.02532196 22.35857964]
[-36.56581116 36.65486908]
[-50.18275070 42.94507980]
[-36.00980377 47.85707092]
[-21.83686066 52.76905823]
[-7.27763033 49.62612152]
[3.22793865 61.45589447]
[17.40088272 66.36788940]
[31.57382774 71.27987671]
[45.84610367 75.89529419]
[60.21150970 80.21213531]
[74.57691193 84.52898407]
[82.64007568 75.82731628]
[93.46168518 70.96663666]
[105.32221985 70.71929169]
[116.33706665 75.12458801]
[124.75598907 83.48252869]
[138.92892456 78.57054138]
[153.10188293 73.65855408]
[167.27482605 68.74655914]
[181.44776917 63.83457184]
[195.62071228 58.92258072]
[209.79365540 54.01058960]
[223.96659851 49.09860229]
[226.07914734 38.66023636]
[232.28186035 30.10240173]
[241.40417480 24.92610168]
[251.77120972 24.00480270]
[261.51113892 27.43770027]
[268.89315796 34.54382324]
[283.25854492 30.22698212]
[297.62396240 25.91013908]
[311.98937988 21.59329605]
[326.35476685 17.27645302]
[340.72018433 12.95961094]
[355.08557129 8.64276791]
[351.66213989 3.03966284]
[350.01516724 -4.10932302]
[350.63583374 -12.25050163]
[353.84893799 -20.69569397]
[359.77938843 -28.67032242]
[368.33187866 -35.36929321]
[381.87216187 -41.82382202]
[395.41244507 -48.27835083]
[408.95269775 -54.73287964]
[422.49298096 -61.18740845]
[420.50378418 -76.18402100]
[423.24813843 -91.06097412]
[430.45718384 -104.36077881]
[441.42465210 -114.78045654]
[455.07604980 -121.29919434]
[470.07400513 -123.27835846]
[484.94909668 -120.52404022]
[498.24407959 -113.30608368]
[508.65640259 -102.33163452]
[515.16601562 -88.67584991]
[517.13513184 -73.67658997]
[514.37084961 -58.80332947]
[507.14398193 -45.51319504]
[496.16253662 -35.10822296]
[482.50241089 -28.60778236]
[467.50183105 -26.64872360]
[452.63040161 -29.42297363]
[439.34512329 -36.65874100]
[428.94750977 -47.64713669]
[415.40722656 -41.19260406]
[401.86697388 -34.73807526]
[388.32669067 -28.28354645]
[374.78640747 -21.82901573]
[375.56692505 -14.36973953]
[389.27294922 -20.46441650]
[399.30468750 -9.31256294]
[391.79861450 3.67430520]
[377.12792969 0.54881340]
[377.90844727 8.00809002]
[392.49154663 11.51990700]
[407.07467651 15.03172493]
[421.45480347 7.91896677]
[435.91992188 14.85727119]
[439.37359619 30.52416420]
[429.16650391 42.90134811]
[413.12863159 42.49410248]
[403.56286621 29.61483574]
[388.97973633 26.10301781]
[374.39663696 22.59120178]
[359.40243530 23.00817299]
[345.03701782 27.32501602]
[330.67160034 31.64185905]
[316.30621338 35.95870209]
[301.94079590 40.27554321]
[287.57540894 44.59238815]
[273.20999146 48.90922928]
[265.25119019 66.70031738]
[246.47871399 72.98310852]
[228.87858582 63.27154541]
[214.70564270 68.18353271]
[200.53269958 73.09552765]
[186.35975647 78.00751495]
[172.18681335 82.91950226]
[158.01387024 87.83149719]
[143.84092712 92.74348450]
[129.66798401 97.65547943]
[124.60034943 116.74839020]
[108.69416046 128.46220398]
[109.31951904 143.44917297]
[109.94487762 158.43612671]
[110.57023621 173.42308044]
[118.87614441 186.88868713]
[111.67617798 199.92745972]
[112.30152893 214.91442871]
[112.92688751 229.90138245]
[113.65639496 244.88363647]
[114.49002075 259.86044312]
[128.83198547 268.83697510]
[134.93315125 284.43975830]
[130.57196045 300.44314575]
[117.65965271 310.58767700]
[118.70137787 325.55145264]
[127.37839508 338.78097534]
[120.54366302 352.01486206]
[121.58538818 366.97863770]
[122.62711334 381.94241333]
[134.71455383 392.12423706]
[135.97875977 407.87789917]
[125.66970825 419.85699463]
[109.90357971 420.95458984]
[98.03413391 410.51947021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 220]
[2 219]
[3 218]
[5 216]
[6 215]
[11 211]
[12 210]
[14 209]
[15 208]
[16 207]
[18 205]
[19 204]
[20 203]
[21 202]
[24 110]
[25 109]
[26 108]
[30 107]
[31 106]
[32 105]
[34 103]
[35 102]
[36 101]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[47 72]
[48 71]
[49 70]
[50 69]
[51 68]
[53 66]
[54 65]
[55 64]
[85 95]
[86 94]
[87 93]
[88 92]
[115 200]
[116 199]
[117 198]
[118 197]
[119 196]
[120 195]
[121 194]
[122 193]
[128 190]
[129 189]
[130 188]
[131 187]
[132 186]
[133 185]
[134 184]
[140 167]
[141 166]
[142 165]
[143 164]
[144 163]
[173 183]
[174 182]
[175 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
