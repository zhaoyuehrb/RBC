%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCGCCGGUCCCGUCGCCGCCGCCCCGCACUCGGGCGAGCGCGGGAGCCGCGCAGUAGACGGAGCGCGCCCGGCCGAGCGGGCCAUGGCCGCGGGGGCCGCCGCCGCAGGUGGUGGCGCGCGGUGAGGAGAGCGCGGCGCCCCCUCCGGGGCGGAUGGAACGCGGCUCGGCGGGCGGGCAGUGCCGGCGUCCGCGGCUGGAAUGGUGCUGGCUGUGUUGGUCGGUGCCUGCGUUCUGAAGCCCGAGAGGAGC\
CACA\
) } def
/len { sequence length } bind def

/coor [
[74.23999786 98.84864044]
[77.12461853 92.98921967]
[64.88372040 84.31970978]
[52.64282227 75.65019989]
[40.40192032 66.98069763]
[28.16102219 58.31118774]
[15.92012119 49.64167786]
[3.67922139 40.97217178]
[-8.56167889 32.30266190]
[-20.80257797 23.63315582]
[-33.04347992 14.96364784]
[-48.77715302 13.30170250]
[-54.69146347 -0.36834452]
[-66.93236542 -9.03785229]
[-79.22541809 -17.63324928]
[-91.57017517 -26.15422058]
[-103.91493225 -34.67518997]
[-116.69886017 -33.12047958]
[-126.79936218 -40.44667816]
[-129.13529968 -52.29594803]
[-141.37620544 -60.96545792]
[-153.61711121 -69.63496399]
[-165.91015625 -78.23036194]
[-178.25491333 -86.75133514]
[-190.59967041 -95.27230072]
[-202.94442749 -103.79327393]
[-215.28918457 -112.31424713]
[-227.63395691 -120.83522034]
[-239.97871399 -129.35618591]
[-252.32347107 -137.87716675]
[-264.61672974 -131.23846436]
[-278.50436401 -130.54069519]
[-291.27908325 -135.86293030]
[-300.47500610 -146.11619568]
[-304.34368896 -159.26576233]
[-302.18634033 -172.73483276]
[-314.42724609 -181.40434265]
[-326.66812134 -190.07385254]
[-338.90902710 -198.74334717]
[-351.14993286 -207.41285706]
[-369.53289795 -208.70439148]
[-376.20907593 -224.94792175]
[-388.55383301 -233.46888733]
[-400.89859009 -241.98986816]
[-413.24334717 -250.51083374]
[-429.68261719 -242.03428650]
[-448.06225586 -243.10060120]
[-463.26913452 -253.32598877]
[-471.11721802 -269.79083252]
[-469.49954224 -287.87274170]
[-482.14498901 -295.94073486]
[-494.79046631 -304.00872803]
[-507.43591309 -312.07672119]
[-520.08135986 -320.14468384]
[-532.72686768 -328.21267700]
[-545.37231445 -336.28067017]
[-538.14288330 -323.13778687]
[-533.67370605 -308.81903076]
[-535.68682861 -293.95474243]
[-543.80364990 -281.34060669]
[-556.49761963 -273.34906006]
[-571.38110352 -271.48324585]
[-585.65490723 -276.09399414]
[-596.63427734 -286.31420898]
[-602.25433350 -300.22155762]
[-601.45855713 -315.19839478]
[-586.55480957 -316.89489746]
[-600.44744873 -322.55130005]
[-614.34002686 -328.20773315]
[-623.43701172 -328.54107666]
[-628.36572266 -334.01733398]
[-642.18896484 -339.84121704]
[-656.01220703 -345.66506958]
[-674.24078369 -342.95944214]
[-684.26477051 -357.37966919]
[-698.15740967 -363.03610229]
[-712.05004883 -368.69250488]
[-725.94262695 -374.34893799]
[-741.22589111 -369.47021484]
[-754.48864746 -378.49682617]
[-755.55682373 -394.50427246]
[-743.61102295 -405.21304321]
[-727.81506348 -402.40826416]
[-720.28619385 -388.24154663]
[-706.39361572 -382.58514404]
[-692.50097656 -376.92871094]
[-678.60833740 -371.27227783]
[-667.36260986 -375.67633057]
[-655.75372314 -371.10180664]
[-650.18835449 -359.48834229]
[-636.36511230 -353.66445923]
[-622.54180908 -347.84060669]
[-608.68365479 -342.10034180]
[-594.79101562 -336.44393921]
[-580.89837646 -330.78750610]
[-575.85748291 -336.34082031]
[-586.96398926 -346.42279053]
[-576.88189697 -357.52911377]
[-565.77575684 -347.44747925]
[-560.73486328 -353.00082397]
[-567.70568848 -366.28265381]
[-574.67651367 -379.56448364]
[-581.64739990 -392.84634399]
[-588.61822510 -406.12817383]
[-595.58911133 -419.41003418]
[-602.55993652 -432.69186401]
[-609.53076172 -445.97369385]
[-616.50164795 -459.25555420]
[-629.21618652 -470.47052002]
[-621.95922852 -485.79281616]
[-605.22680664 -483.06112671]
[-603.21978760 -466.22637939]
[-596.24896240 -452.94454956]
[-589.27807617 -439.66271973]
[-582.30725098 -426.38085938]
[-575.33636475 -413.09902954]
[-568.36553955 -399.81719971]
[-561.39471436 -386.53533936]
[-554.42382812 -373.25350952]
[-547.45300293 -359.97167969]
[-537.30432129 -348.92611694]
[-524.65887451 -340.85812378]
[-512.01336670 -332.79016113]
[-499.36795044 -324.72216797]
[-486.72247314 -316.65417480]
[-474.07702637 -308.58621216]
[-461.43154907 -300.51821899]
[-451.88601685 -307.32864380]
[-440.57336426 -310.54345703]
[-428.80392456 -309.76617432]
[-417.94897461 -305.06408691]
[-409.28103638 -296.96313477]
[-403.82482910 -286.38916016]
[-402.23596191 -274.56219482]
[-404.72238159 -262.85559082]
[-392.37762451 -254.33462524]
[-380.03286743 -245.81364441]
[-367.68811035 -237.29267883]
[-355.75698853 -239.16632080]
[-345.40866089 -232.19454956]
[-342.48043823 -219.65376282]
[-330.23953247 -210.98425293]
[-317.99862671 -202.31474304]
[-305.75772095 -193.64523315]
[-293.51681519 -184.97572327]
[-278.98986816 -192.08450317]
[-262.76736450 -190.88148499]
[-249.29304504 -181.60104370]
[-242.30581665 -166.70315552]
[-243.80249023 -150.22192383]
[-231.45773315 -141.70094299]
[-219.11297607 -133.17997742]
[-206.76821899 -124.65900421]
[-194.42346191 -116.13803101]
[-182.07870483 -107.61706543]
[-169.73394775 -99.09609222]
[-157.38919067 -90.57511902]
[-150.12156677 -89.36559296]
[-144.94760132 -81.87586212]
[-132.70669556 -73.20635986]
[-120.46579742 -64.53684998]
[-102.91754913 -63.84247971]
[-95.39396667 -47.01995087]
[-83.04920197 -38.49897766]
[-70.70444489 -29.97800636]
[-63.43682480 -28.76848412]
[-58.26285553 -21.27875328]
[-46.02195740 -12.60924435]
[-31.16383362 -11.56739998]
[-24.37397003 2.72274780]
[-12.13307095 11.39225578]
[0.10782917 20.06176376]
[12.34872913 28.73127174]
[24.58963013 37.40077972]
[36.83052826 46.07028580]
[49.07143021 54.73979568]
[61.31232834 63.40930176]
[73.55323029 72.07881165]
[85.79412842 80.74832153]
[112.85649109 72.41262054]
[136.87348938 97.67844391]
[151.19430542 102.14099121]
[165.51510620 106.60353088]
[179.83592224 111.06607819]
[194.18344116 115.44202423]
[208.55712891 119.73120880]
[222.93081665 124.02039337]
[237.30450439 128.30958557]
[251.67819214 132.59877014]
[266.05187988 136.88795471]
[280.42556763 141.17713928]
[292.74520874 131.92874146]
[307.97036743 131.71044922]
[320.25930786 140.39640808]
[325.02020264 154.48442078]
[339.39389038 158.77360535]
[353.76757812 163.06278992]
[368.14126587 167.35197449]
[382.51495361 171.64115906]
[396.88864136 175.93034363]
[411.26232910 180.21952820]
[425.63601685 184.50871277]
[440.00970459 188.79789734]
[452.96658325 180.04270935]
[468.51440430 181.71578979]
[479.31198120 193.02713013]
[480.26098633 208.63589478]
[470.91336060 221.17208862]
[455.68276978 224.71649170]
[441.76062012 217.59556580]
[435.72052002 203.17158508]
[421.34683228 198.88240051]
[406.97314453 194.59321594]
[392.59945679 190.30403137]
[378.22576904 186.01484680]
[363.85208130 181.72566223]
[349.47839355 177.43647766]
[335.10470581 173.14729309]
[320.73101807 168.85810852]
[309.02825928 178.03327942]
[293.98892212 178.56431580]
[281.37313843 170.03814697]
[276.13638306 155.55082703]
[261.76269531 151.26164246]
[247.38900757 146.97245789]
[233.01531982 142.68327332]
[218.64163208 138.39408875]
[204.26794434 134.10490417]
[189.89425659 129.81571960]
[182.60856628 130.91120911]
[175.37338257 125.38689423]
[161.05256653 120.92434692]
[146.73175049 116.46179962]
[132.41093445 111.99925232]
[127.01239777 117.20557404]
[137.44062805 127.98758698]
[147.86886597 138.76960754]
[158.25015259 149.59683228]
[147.45295715 160.00933838]
[137.00930786 149.24247742]
[126.61230469 138.43034363]
[116.21530914 127.61820221]
[110.81675720 132.82450867]
[114.75737000 147.29765320]
[118.78534698 161.74670410]
[122.90055084 176.17117310]
[135.05177307 187.18388367]
[131.32611084 203.15420532]
[115.55617523 207.65325928]
[103.96474457 196.05279541]
[108.47608185 180.28637695]
[104.36088562 165.86190796]
[99.51863098 160.30908203]
[100.28424072 151.23826599]
[96.34362793 136.76512146]
[87.90804291 132.93687439]
[81.11388397 127.33674622]
[76.28488922 120.52867126]
[73.57131195 113.11972809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[13 168]
[14 167]
[15 165]
[16 164]
[17 163]
[20 161]
[21 160]
[22 159]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[36 145]
[37 144]
[38 143]
[39 142]
[40 141]
[42 138]
[43 137]
[44 136]
[45 135]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[67 95]
[68 94]
[69 93]
[71 92]
[72 91]
[73 90]
[75 87]
[76 86]
[77 85]
[78 84]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[181 234]
[182 233]
[183 232]
[184 231]
[185 229]
[186 228]
[187 227]
[188 226]
[189 225]
[190 224]
[191 223]
[195 219]
[196 218]
[197 217]
[198 216]
[199 215]
[200 214]
[201 213]
[202 212]
[203 211]
[243 255]
[244 254]
[245 252]
[246 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
