%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCUUUCUUAUCCUGGGUGAACAACGCUCAGCGAAAUUGACUGCCCCACUGUCAUCUGCCUCUCAAUUUGGUACUCUGUAACUCUGUGACCACCAAGAAGCCUUUUUCCGUCCCCCACAAAGCUCUUUUUGGAAAAUUCCCUACGGGAGCUGAAUUUUAAGCCCAUUUACUUUAUAGGAAGAAACAGAAAGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[-75.83706665 394.86758423]
[-75.34628296 405.56597900]
[-77.10689545 416.12145996]
[-81.03728485 426.06585693]
[-86.95966339 434.95889282]
[-94.60811615 442.40759277]
[-103.64058685 448.08370972]
[-113.65411377 451.73815918]
[-124.20284271 453.21194458]
[-134.81787109 452.44311523]
[-145.02807617 449.46926880]
[-154.38105774 444.42581177]
[-164.55870056 455.44470215]
[-174.64860535 466.54397583]
[-184.65014648 477.72293091]
[-194.65167236 488.90188599]
[-204.65321350 500.08087158]
[-214.65473938 511.25982666]
[-224.65628052 522.43878174]
[-234.65782166 533.61773682]
[-235.20658875 549.65142822]
[-248.16978455 559.10314941]
[-263.60314941 554.72241211]
[-269.66751099 539.86968994]
[-261.71081543 525.93878174]
[-245.83677673 523.61621094]
[-235.83525085 512.43725586]
[-225.83370972 501.25830078]
[-215.83218384 490.07931519]
[-205.83064270 478.90036011]
[-195.82910156 467.72140503]
[-185.82757568 456.54241943]
[-183.70834351 449.45373535]
[-175.57757568 445.26705933]
[-165.39993286 434.24816895]
[-174.51606750 416.92614746]
[-176.35511780 397.40744019]
[-170.61686707 378.62866211]
[-158.14289856 363.42413330]
[-140.79324341 354.09793091]
[-121.16905975 352.07485962]
[-102.22264099 357.68283081]
[-93.32902527 345.60379028]
[-84.43540192 333.52471924]
[-75.54178619 321.44567871]
[-66.64816284 309.36660767]
[-71.32949066 295.25198364]
[-66.74768829 280.91772461]
[-54.46025085 271.92480469]
[-39.05554199 271.89111328]
[-30.16192245 259.81207275]
[-21.26830482 247.73301697]
[-12.37468529 235.65396118]
[-13.87949085 223.64462280]
[-6.55974913 213.50677490]
[6.09951496 210.99958801]
[15.18366051 199.06315613]
[24.26780510 187.12672424]
[25.81851578 172.31306458]
[40.33308411 166.01719666]
[49.41722870 154.08076477]
[58.50137329 142.14434814]
[49.06469727 130.91328430]
[42.62462997 117.61358643]
[39.62223434 103.03502655]
[40.29265594 88.05788422]
[44.64764023 73.59976959]
[52.47157288 60.55942154]
[63.33159637 49.76082993]
[76.60131073 41.90127563]
[68.69292450 29.15539169]
[60.78454208 16.40951157]
[52.87616348 3.66362953]
[44.86691284 -9.01911163]
[36.75730133 -21.63791466]
[21.51658058 -20.23112297]
[7.37225246 -26.07890511]
[-2.42542195 -37.83748245]
[-5.62500858 -52.80482101]
[-1.49126577 -67.54153442]
[9.02590275 -78.66123962]
[23.50972748 -83.60870361]
[38.63193512 -81.24703217]
[50.91754913 -72.11892700]
[57.54342651 -58.32196045]
[56.98698807 -43.02656937]
[49.37610245 -29.74752617]
[57.48571396 -17.12872314]
[63.75338745 -13.19716835]
[65.62203979 -4.24475241]
[73.53042603 8.50112915]
[81.43880463 21.24701118]
[89.34719086 33.99289322]
[104.33020020 33.27916336]
[110.99119568 19.83925629]
[117.65219879 6.39935017]
[124.31319427 -7.04055643]
[130.97419739 -20.48046303]
[137.63519287 -33.92036819]
[144.29618835 -47.36027527]
[150.95719910 -60.80018234]
[149.35900879 -79.13991547]
[164.32768250 -88.29121399]
[170.77459717 -101.83511353]
[177.22152710 -115.37901306]
[183.66844177 -128.92291260]
[173.73684692 -140.46774292]
[169.36579895 -155.05587769]
[171.31262207 -170.15985107]
[179.24000549 -183.16278076]
[191.77450562 -191.81185913]
[206.74441528 -194.60855103]
[221.55612183 -191.06834412]
[233.64341736 -181.80458069]
[240.91209412 -168.42227173]
[242.10279846 -153.23997498]
[237.00924683 -138.88812256]
[226.51393127 -127.85324860]
[212.43522644 -122.04723358]
[197.21234131 -122.47598267]
[190.76542664 -108.93209076]
[184.31849670 -95.38819122]
[177.87158203 -81.84429169]
[181.62196350 -70.33676910]
[176.35310364 -58.99684906]
[164.39709473 -54.13918304]
[157.73609924 -40.69927597]
[151.07510376 -27.25937080]
[144.41410828 -13.81946373]
[137.75309753 -0.37955746]
[131.09210205 13.06034946]
[124.43110657 26.50025558]
[117.77010345 39.94016266]
[127.33467102 43.54524231]
[136.19888306 48.66439056]
[144.12457275 55.16562271]
[150.89791870 62.87974930]
[156.33517456 71.60476685]
[160.28762817 81.11118317]
[175.13494873 78.97645569]
[189.98226929 76.84173584]
[204.82958984 74.70700836]
[219.64701843 66.46807098]
[231.66586304 78.42566681]
[223.50271606 93.28498840]
[206.96432495 89.55433655]
[192.11698914 91.68905640]
[177.26966858 93.82377625]
[162.42234802 95.95850372]
[161.58978271 110.93537903]
[176.10900879 114.70259857]
[190.62825012 118.46981812]
[202.52340698 108.50563812]
[218.00585938 107.46983337]
[231.12231445 115.76069641]
[236.82920837 130.19021606]
[232.93212891 145.20994568]
[220.92958069 155.04449463]
[205.43678284 155.91229248]
[192.41104126 147.47962952]
[186.86102295 132.98904419]
[172.34179688 129.22183228]
[157.82255554 125.45460510]
[154.11293030 132.04492188]
[149.66058350 138.11532593]
[144.53639221 143.58319092]
[138.82022095 148.37533569]
[132.59980774 152.42898560]
[125.96932983 155.69264221]
[119.02803040 158.12663269]
[111.87872314 159.70367432]
[104.62625885 160.40908813]
[97.37601471 160.24090576]
[90.23234558 159.20982361]
[83.29707336 157.33888245]
[76.66805267 154.66302490]
[70.43779755 151.22848511]
[61.35365677 163.16491699]
[52.26951218 175.10134888]
[50.06904221 190.76878357]
[36.20423508 196.21087646]
[27.12008858 208.14729309]
[18.03594208 220.08372498]
[16.13443565 238.39450073]
[-0.29563159 244.54757690]
[-9.18925095 256.62664795]
[-18.08286858 268.70568848]
[-26.97648811 280.78472900]
[-22.43469048 295.50473022]
[-27.37363625 309.90820312]
[-39.70102692 318.53952026]
[-54.56911087 318.26025391]
[-63.46273041 330.33929443]
[-72.35634613 342.41833496]
[-81.24996948 354.49740601]
[-90.14358521 366.57644653]
[-83.40039062 374.92889404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 35]
[13 34]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[42 196]
[43 195]
[44 194]
[45 193]
[46 192]
[50 188]
[51 187]
[52 186]
[53 185]
[56 183]
[57 182]
[58 181]
[60 179]
[61 178]
[62 177]
[70 93]
[71 92]
[72 91]
[73 90]
[74 88]
[75 87]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[100 127]
[101 126]
[103 123]
[104 122]
[105 121]
[106 120]
[139 149]
[140 148]
[141 147]
[142 146]
[150 163]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
