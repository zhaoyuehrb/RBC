%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGCCGCCUGCCAGGGUCGCGCGCCUGAGCCGGGCCUGGGUCGCCAGCGCCCGCAGCAGAGGAGCCAGGGUGUCUCGCACCUUGACCCCGGGGGCGGGUGUCCCCAGGCGGCGCGUGACUCCGCCCCGGCCCGCCCCGCCUCGCCUGCACCGCAGACACACGCCCCAGUCCUCCAGUCCUCCGUGCGCGUCGGGCCCGAGCCCACAGAGUCC\
) } def
/len { sequence length } bind def

/coor [
[95.92311096 159.26249695]
[95.05495453 144.28764343]
[94.18679810 129.31278992]
[93.31864166 114.33792877]
[85.96142578 112.88140869]
[83.04838562 127.59583282]
[73.16864014 138.88258362]
[68.33396912 124.68279266]
[71.24700928 109.96836853]
[63.88979721 108.51184845]
[57.38154221 122.02638245]
[50.87328339 135.54090881]
[44.36502838 149.05545044]
[46.12944412 165.35940552]
[32.73410034 174.81967163]
[17.95897865 167.70434570]
[17.00345802 151.33306885]
[30.85049629 142.54719543]
[37.35875320 129.03265381]
[43.86700821 115.51812744]
[50.37526321 102.00359344]
[53.50101852 87.33288574]
[53.06675720 72.33917236]
[52.63249588 57.34545898]
[52.19823837 42.35174561]
[51.76397705 27.35803223]
[51.32971573 12.36432076]
[50.89545441 -2.62939215]
[38.96766663 -11.72487926]
[24.39360237 -8.17570591]
[9.81953716 -4.62653351]
[3.84938383 9.57429218]
[-9.18554497 17.44474411]
[-24.17811584 16.14596939]
[-35.39677811 6.38484383]
[-49.97084427 9.93401623]
[-64.54490662 13.48318958]
[-79.11897278 17.03236198]
[-93.69303894 20.58153534]
[-108.24103546 24.23611259]
[-122.76219177 27.99589920]
[-137.28334045 31.75568771]
[-151.80450439 35.51547623]
[-163.11224365 47.39264297]
[-178.98626709 43.27596664]
[-183.09675598 27.40032768]
[-171.21517944 16.09722328]
[-155.56428528 20.99431801]
[-141.04313660 17.23453140]
[-126.52198029 13.47474289]
[-112.00081635 9.71495533]
[-106.31600189 4.99747801]
[-97.24221039 6.00747061]
[-82.66814423 2.45829749]
[-68.09408569 -1.09087539]
[-53.52001572 -4.64004850]
[-38.94595337 -8.18922138]
[-33.47146988 -22.01557350]
[-20.75477409 -30.06229210]
[-5.56064606 -29.06636810]
[6.27036381 -19.20059776]
[20.84442902 -22.74977112]
[35.41849518 -26.29894447]
[43.73396683 -54.74412918]
[69.31919861 -62.55578232]
[74.83298492 -76.50562286]
[80.34677887 -90.45546722]
[85.86057281 -104.40531158]
[69.83969879 -124.45332336]
[75.21831512 -153.26733398]
[63.90796661 -163.12005615]
[52.59761810 -172.97277832]
[41.28726959 -182.82548523]
[29.97692108 -192.67820740]
[18.66657257 -202.53092957]
[7.35622549 -212.38363647]
[-3.95412254 -222.23635864]
[-19.86872101 -228.08117676]
[-18.65791893 -244.99183655]
[-2.07295418 -248.50968933]
[5.89859438 -233.54670715]
[17.20894241 -223.69398499]
[28.51929092 -213.84127808]
[39.82963943 -203.98855591]
[51.13998795 -194.13583374]
[62.45033264 -184.28312683]
[73.76068115 -174.43040466]
[85.07102966 -164.57768250]
[92.54726410 -165.17425537]
[84.03784180 -177.52697754]
[90.48100281 -191.07266235]
[105.43350220 -192.26545715]
[113.94265747 -179.91255188]
[107.49974060 -166.36737061]
[114.97597504 -166.96392822]
[124.58077240 -178.48556519]
[134.18557739 -190.00718689]
[143.79035950 -201.52880859]
[153.39515686 -213.05044556]
[162.99995422 -224.57206726]
[165.89340210 -240.12643433]
[179.98600769 -244.94801331]
[189.59080505 -256.46963501]
[199.19560242 -267.99127197]
[208.80039978 -279.51290894]
[218.40519714 -291.03451538]
[209.89613342 -296.46221924]
[203.92474365 -306.82910156]
[202.82582092 -320.76852417]
[208.20845032 -335.93582153]
[216.05055237 -348.72259521]
[223.89266968 -361.50933838]
[231.73477173 -374.29611206]
[239.57687378 -387.08288574]
[247.41899109 -399.86962891]
[248.03814697 -415.67874146]
[261.28771973 -422.48300171]
[269.12982178 -435.26974487]
[276.97192383 -448.05651855]
[271.97998047 -457.47653198]
[271.35092163 -468.03808594]
[275.13125610 -477.83343506]
[282.57708740 -485.12109375]
[292.29949951 -488.63534546]
[302.52322388 -487.80569458]
[310.91311646 -500.23992920]
[319.30300903 -512.67413330]
[323.15014648 -529.18585205]
[340.08154297 -530.05993652]
[345.60855103 -514.03216553]
[331.73721313 -504.28424072]
[323.34732056 -491.85003662]
[314.95742798 -479.41580200]
[320.06109619 -460.61120605]
[309.52099609 -443.86108398]
[289.75869751 -440.21441650]
[281.91659546 -427.42764282]
[274.07449341 -414.64086914]
[274.01623535 -399.74639893]
[260.20574951 -392.02752686]
[252.36364746 -379.24075317]
[244.52153015 -366.45401001]
[236.67942810 -353.66723633]
[228.83732605 -340.88046265]
[220.99520874 -328.09371948]
[225.45614624 -322.06460571]
[237.51449585 -330.98626709]
[246.43595886 -318.92776489]
[234.37800598 -310.00637817]
[238.83892822 -303.97729492]
[253.36007690 -307.73706055]
[267.88125610 -311.49685669]
[281.69921875 -321.32031250]
[294.96395874 -310.76174927]
[288.49005127 -295.09249878]
[271.64102173 -296.97570801]
[257.11987305 -293.21591187]
[242.59870911 -289.45611572]
[229.92681885 -281.42971802]
[220.32202148 -269.90811157]
[210.71722412 -258.38647461]
[201.11242676 -246.86485291]
[191.50762939 -235.34323120]
[189.30119324 -220.61294556]
[174.52159119 -214.96726990]
[164.91679382 -203.44564819]
[155.31199646 -191.92401123]
[145.70719910 -180.40238953]
[136.10240173 -168.88076782]
[126.49760437 -157.35913086]
[136.50187683 -141.17320251]
[137.06478882 -123.07824707]
[128.95045471 -107.93558502]
[115.13647461 -99.36588287]
[99.81040955 -98.89151764]
[94.29662323 -84.94167328]
[88.78282928 -70.99182892]
[83.26903534 -57.04198837]
[88.99796295 -52.11278915]
[93.23809052 -45.62907028]
[95.56932068 -38.04259491]
[95.70906067 -29.91769028]
[93.54200745 -21.88935471]
[89.13710785 -14.61362648]
[82.74987030 -8.71413326]
[74.80918884 -4.72915411]
[65.88916779 -3.06365299]
[66.32342529 11.93005943]
[66.75769043 26.92377281]
[67.19194794 41.91748428]
[67.62621307 56.91119766]
[68.06047058 71.90490723]
[68.49473572 86.89862061]
[89.62071228 61.68254471]
[127.31545258 63.89224243]
[150.85034180 99.44194031]
[157.35859680 112.95647430]
[163.86685181 126.47100830]
[170.37510681 139.98553467]
[184.22215271 148.77140808]
[183.26663208 165.14270020]
[168.49150085 172.25802612]
[155.09616089 162.79774475]
[156.86058044 146.49378967]
[150.35232544 132.97926331]
[143.84407043 119.46472931]
[137.33581543 105.95019531]
[130.07522583 107.83009338]
[108.29349518 113.46977234]
[109.16165161 128.44462585]
[110.02980804 143.41947937]
[110.89796448 158.39433289]
[121.87527466 170.09384155]
[119.42996979 185.94944763]
[105.43788147 193.79808044]
[90.63254547 187.61895752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 212]
[2 211]
[3 210]
[4 209]
[10 21]
[11 20]
[12 19]
[13 18]
[22 193]
[23 192]
[24 191]
[25 190]
[26 189]
[27 188]
[28 187]
[29 63]
[30 62]
[31 61]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 51]
[41 50]
[42 49]
[43 48]
[65 178]
[66 177]
[67 176]
[68 175]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[77 81]
[95 170]
[96 169]
[97 168]
[98 167]
[99 166]
[100 165]
[102 163]
[103 162]
[104 161]
[105 160]
[106 159]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[115 140]
[117 138]
[118 137]
[119 136]
[125 133]
[126 132]
[127 131]
[150 158]
[151 157]
[152 156]
[196 207]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
