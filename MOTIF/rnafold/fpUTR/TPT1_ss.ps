%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGUGCCACGUCACCGCCUGCGUCGCUUCCGGAGGCGCAGCGGGCGAUGACGUAGAGGGACGUGCCCUCUAUAUGAGGUUGGGGAGCGGCUGAGUCGGCCUUUUCCGCCCGCUCCCCCCUCCCCCCGAGCGCCGCUCCGGCUGCACCGCGCUCGCUCCGAGUUUCAGGCUCGUGCUAAGCUAGCGCCGUCGUCGUCUCCCUUCAGUCGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[66.54095459 272.56872559]
[51.79457092 268.46960449]
[40.65018845 257.97860718]
[35.66871262 243.50642395]
[37.99484253 228.37872314]
[47.09405518 216.07168579]
[60.87541580 209.41340637]
[61.31168747 194.41975403]
[53.94782639 181.47283936]
[62.08322906 167.90353394]
[62.51950073 152.90988159]
[49.26505661 145.88708496]
[37.10420609 154.66851807]
[24.94335747 163.44996643]
[12.78250694 172.23139954]
[6.12402773 186.58323669]
[-8.72391224 187.76135254]
[-20.88476372 196.54278564]
[-33.04561234 205.32423401]
[-45.20646286 214.10568237]
[-57.36731339 222.88711548]
[-69.52816772 231.66856384]
[-81.68901825 240.44999695]
[-84.33690643 255.80012512]
[-96.79483795 264.53253174]
[-111.41251373 261.91357422]
[-123.57336426 270.69500732]
[-135.73422241 279.47644043]
[-147.89506531 288.25790405]
[-160.05592346 297.03933716]
[-166.27227783 312.21459961]
[-182.55679321 314.15026855]
[-192.15733337 300.85510254]
[-185.19769287 286.00601196]
[-168.83735657 284.87847900]
[-156.67651367 276.09704590]
[-144.51565552 267.31558228]
[-132.35481262 258.53414917]
[-120.19396210 249.75271606]
[-118.08206940 235.05320740]
[-105.87433624 225.97433472]
[-90.47045898 228.28915405]
[-78.30960846 219.50770569]
[-66.14875793 210.72627258]
[-53.98790359 201.94482422]
[-41.82705307 193.16339111]
[-29.66620445 184.38194275]
[-17.50535393 175.60049438]
[-11.71670055 161.87677002]
[4.00106525 160.07055664]
[16.16191483 151.28910828]
[28.32276535 142.50767517]
[40.48361588 133.72622681]
[37.98638916 118.93556213]
[23.61654472 114.63351440]
[9.24670219 110.33146667]
[-5.12314034 106.02941895]
[-19.49298286 101.72737122]
[-33.86282730 97.42532349]
[-48.23266983 93.12326813]
[-62.60251236 88.82122040]
[-77.34921265 95.13899994]
[-91.41432953 87.42200470]
[-94.00830841 71.59004974]
[-83.14126587 59.78805542]
[-67.14947510 61.06950760]
[-58.30046082 74.45137787]
[-43.93061829 78.75342560]
[-29.56077766 83.05548096]
[-15.19093418 87.35752869]
[-0.82109189 91.65957642]
[13.54875088 95.96162415]
[27.91859436 100.26367188]
[42.28843689 104.56571960]
[48.12053680 81.49314880]
[62.26562119 63.82810211]
[81.42756653 54.15834808]
[77.96833038 39.56267548]
[74.50908661 24.96700096]
[71.04985046 10.37132740]
[66.80199432 5.31297255]
[65.88162994 -0.29025728]
[67.70881653 -4.69908667]
[64.67556000 -19.38919640]
[61.64229202 -34.07930374]
[58.60902786 -48.76941299]
[55.57576752 -63.45952225]
[52.54250336 -78.14963531]
[49.50923920 -92.83974457]
[46.47597504 -107.52985382]
[43.33596420 -122.19751740]
[40.08937073 -136.84194946]
[29.54856873 -148.64035034]
[34.34777832 -162.74058533]
[31.10118484 -177.38504028]
[27.85459137 -192.02947998]
[13.57133865 -198.09317017]
[5.60897064 -211.41159058]
[7.02917862 -226.86352539]
[17.28586578 -238.50741577]
[32.43512344 -241.86592102]
[46.65175629 -235.64764404]
[54.46917725 -222.24363708]
[52.88142776 -206.80799866]
[42.49903107 -195.27606201]
[45.74562454 -180.63162231]
[48.99221802 -165.98718262]
[59.30080032 -155.23626709]
[54.73381042 -140.08854675]
[57.98040390 -125.44410706]
[62.49531174 -119.59642029]
[61.16608429 -110.56311798]
[64.19934845 -95.87300873]
[67.23261261 -81.18289948]
[70.26587677 -66.49279022]
[73.29914093 -51.80267715]
[76.33240509 -37.11256790]
[79.36566925 -22.42246056]
[82.39892578 -7.73235035]
[85.64552307 6.91208982]
[89.10475922 21.50776291]
[92.56400299 36.10343552]
[96.02323914 50.69910812]
[105.08393860 50.80095291]
[113.97400665 52.55403519]
[122.39507294 55.89950943]
[130.06451416 60.72510147]
[136.72491455 66.86885071]
[149.25723267 58.62621689]
[161.78955078 50.38358307]
[174.32186890 42.14094543]
[186.85418701 33.89831161]
[199.38650513 25.65567780]
[211.91882324 17.41304207]
[220.14810181 -0.99185723]
[239.48445129 -1.26761270]
[251.77172852 -9.87125969]
[252.95429993 -25.46406364]
[263.91998291 -36.61251068]
[279.49111938 -38.05265045]
[292.31549072 -29.10448456]
[296.33779907 -13.99307060]
[289.65887451 0.14644794]
[275.43228149 6.63782120]
[260.37539673 2.41602135]
[248.08810425 11.01966763]
[247.22708130 21.19697952]
[240.77230835 29.39376068]
[230.66410828 32.75599289]
[220.16145325 29.94536018]
[207.62913513 38.18799591]
[195.09681702 46.43062973]
[182.56449890 54.67326355]
[170.03218079 62.91589737]
[157.49986267 71.15853119]
[144.96754456 79.40116882]
[147.71549988 86.97605133]
[149.19703674 94.89659882]
[149.37281799 102.95259857]
[148.23818970 110.93023682]
[145.82325745 118.61776733]
[158.70318604 126.30590820]
[171.58311462 133.99404907]
[184.32971191 125.67024994]
[199.36503601 123.71417236]
[213.69999695 128.46066284]
[224.50816345 138.91744995]
[229.68305969 152.97198486]
[228.24853516 167.81811523]
[241.12846375 175.50625610]
[254.00839233 183.19438171]
[266.67987061 180.80009460]
[277.24838257 187.46568298]
[280.34097290 199.15779114]
[293.10772705 207.03244019]
[305.87448120 214.90708923]
[318.64123535 222.78173828]
[331.40798950 230.65638733]
[344.17471313 238.53103638]
[360.82986450 241.70007324]
[362.39526367 258.58160400]
[346.60684204 264.75909424]
[336.30007935 251.29779053]
[323.53332520 243.42314148]
[310.76657104 235.54849243]
[297.99981689 227.67384338]
[285.23306274 219.79919434]
[272.46633911 211.92454529]
[254.92109680 212.35838318]
[246.32025146 196.07431030]
[233.44032288 188.38618469]
[220.56039429 180.69804382]
[208.17364502 189.00669861]
[193.34681702 191.12202454]
[179.01318359 186.57144165]
[168.03193665 176.20648193]
[162.61790466 162.04402161]
[163.89497375 146.87397766]
[151.01504517 139.18583679]
[138.13511658 131.49769592]
[132.54904175 138.82713318]
[125.54322815 145.14447021]
[117.30553436 150.17364502]
[108.07750702 153.67425537]
[98.14749908 155.45213318]
[87.84162903 155.36825562]
[77.51315308 153.34616089]
[77.07688141 168.33981323]
[84.40953827 182.35917664]
[76.30534363 194.85603333]
[75.86907196 209.84968567]
[89.23997498 217.29800415]
[97.60820007 230.11329651]
[99.05079651 245.35066223]
[93.23625946 259.50869751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 211]
[8 210]
[10 208]
[11 207]
[12 53]
[13 52]
[14 51]
[15 50]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[77 123]
[78 122]
[79 121]
[80 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 110]
[92 109]
[94 107]
[95 106]
[96 105]
[128 156]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[136 146]
[137 145]
[161 200]
[162 199]
[163 198]
[169 192]
[170 191]
[171 190]
[174 188]
[175 187]
[176 186]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
