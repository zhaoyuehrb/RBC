%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAACCGGCCGAGCCCCUAAAGGUGCGGAUGCUUAUUAUAGAUCGACGCGACACCAGCGCCCGGUGCCAGGUUCUCCCCUGAGGCUUUUCGGAGCGAGCUCCUCAAAUCGCAUCCAGAUUUUCGGGUCCGAGGGAAGGAGGACCCUGCGAAAGCUGCGACGACUAUCUUCCCCUGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[28.89113998 489.48562622]
[27.17097664 504.56561279]
[20.11599541 518.00402832]
[8.68032455 527.98352051]
[-5.58945560 533.15435791]
[-20.76347351 532.81732178]
[-34.78956985 527.01788330]
[-45.77082825 516.54046631]
[-52.22212219 502.80203247]
[-53.27096939 487.66055298]
[-48.77552414 473.16381836]
[-39.34375381 461.27236938]
[-26.25123215 453.59448242]
[-11.26861191 451.16845703]
[-8.18371296 436.48910522]
[-5.09881449 421.80975342]
[-2.01391602 407.13040161]
[1.07098246 392.45104980]
[-0.56071961 389.29779053]
[-0.73082870 385.19186401]
[0.99415940 380.83599854]
[4.71424246 377.10079956]
[8.55482864 362.60079956]
[12.39541531 348.10079956]
[10.92911625 344.86734009]
[10.97176361 340.75808716]
[12.91990662 336.49734497]
[16.82834053 332.95971680]
[21.41431808 318.67794800]
[26.00029564 304.39617920]
[19.96458626 299.02197266]
[15.76463413 292.07794189]
[13.79105854 284.17132568]
[14.23873997 276.00057983]
[17.08776855 268.29351807]
[22.10345078 261.74249268]
[28.85551262 256.94229126]
[36.75497055 254.33615112]
[45.10548782 254.17477417]
[51.14339447 240.44364929]
[57.18130493 226.71252441]
[63.21921158 212.98139954]
[63.03298187 205.57354736]
[69.48166656 199.06680298]
[75.75568390 185.44194031]
[82.02970123 171.81709290]
[80.32513428 157.02033997]
[93.12527466 147.72157288]
[99.39929199 134.09672546]
[105.67330933 120.47187042]
[93.50418091 124.78684998]
[78.83575439 121.26816559]
[66.78153229 108.87956238]
[53.62199402 101.68050385]
[40.46245193 94.48143768]
[27.30291367 87.28237915]
[12.80212021 93.13567352]
[-2.05248284 88.24948883]
[-10.24700737 74.93093872]
[-7.91224861 59.46863174]
[3.84939122 49.16339874]
[19.48442459 48.88105392]
[31.61046982 58.75490952]
[34.50197601 74.12284088]
[47.66151428 81.32189941]
[60.82105637 88.52096558]
[73.98059845 95.72002411]
[79.19156647 90.32597351]
[94.82448578 74.14382935]
[87.17549896 61.24061203]
[79.52650452 48.33739853]
[71.87751770 35.43418121]
[56.50553513 31.76298714]
[48.30312729 18.25387764]
[52.13663864 2.92156672]
[65.73171997 -5.13755512]
[81.02263641 -1.14215529]
[88.93757629 12.53736687]
[84.78073120 27.78519440]
[92.42972565 40.68840790]
[100.07871246 53.59162521]
[107.72769928 66.49484253]
[122.86238098 84.15903473]
[121.05793762 102.80127716]
[133.68945312 94.71147919]
[146.32096863 86.62168121]
[158.95246887 78.53187561]
[171.58398438 70.44207764]
[184.21549988 62.35227585]
[189.77262878 55.06930542]
[197.13560486 54.23404312]
[209.90486145 46.36347580]
[217.59294128 32.53582001]
[232.48725891 32.44440842]
[245.25653076 24.57383919]
[244.91920471 9.28222561]
[252.23294067 -4.03716516]
[265.14575195 -11.85544300]
[280.13787842 -12.15856647]
[293.18096924 -4.96524334]
[305.95022583 -12.83581066]
[318.71948242 -20.70637703]
[331.48876953 -28.57694435]
[344.25802612 -36.44751358]
[343.92068481 -51.73912811]
[351.23443604 -65.05851746]
[364.14724731 -72.87679291]
[379.13937378 -73.17991638]
[392.18246460 -65.98659515]
[404.95172119 -73.85716248]
[417.72097778 -81.72772980]
[425.40905762 -95.55538177]
[440.30337524 -95.64679718]
[453.07266235 -103.51736450]
[465.84191895 -111.38793182]
[478.61117554 -119.25849915]
[479.65426636 -134.74047852]
[489.62402344 -146.63095093]
[504.68688965 -150.35778809]
[519.05090332 -144.48796082]
[527.19281006 -131.27851868]
[525.98181152 -115.80876160]
[515.88366699 -104.02713776]
[500.78121948 -100.46392059]
[486.48175049 -106.48923492]
[473.71249390 -98.61866760]
[460.94320679 -90.74810028]
[448.17395020 -82.87753296]
[441.39923096 -69.61283112]
[425.59155273 -68.95846558]
[412.82229614 -61.08789444]
[400.05300903 -53.21732712]
[400.61798096 -38.33289337]
[393.61016846 -25.07595062]
[380.82308960 -17.05364418]
[365.63769531 -16.50529671]
[352.12860107 -23.67824554]
[339.35931396 -15.80767822]
[326.59005737 -7.93711090]
[313.82080078 -0.06654381]
[301.05151367 7.80402374]
[301.61648560 22.68845940]
[294.60867310 35.94540024]
[281.82159424 43.96770859]
[266.63619995 44.51605606]
[253.12710571 37.34310532]
[240.35783386 45.21367264]
[233.58309937 58.47837448]
[217.77543640 59.13274384]
[205.00616455 67.00331116]
[192.30529785 74.98378754]
[179.67378235 83.07359314]
[167.04228210 91.16339111]
[154.41076660 99.25318909]
[141.77925110 107.34299469]
[129.14773560 115.43279266]
[119.29817200 126.74588776]
[113.02415466 140.37074280]
[106.75013733 153.99559021]
[108.00594330 169.76689148]
[95.65455627 178.09111023]
[89.38053894 191.71595764]
[83.10652161 205.34082031]
[76.95033264 219.01931763]
[70.91242218 232.75044250]
[64.87451172 246.48155212]
[58.83660507 260.21267700]
[68.76430511 280.36605835]
[60.71278000 301.04589844]
[40.28206253 308.98214722]
[35.69608307 323.26391602]
[31.11010551 337.54568481]
[26.89541245 351.94137573]
[23.05482483 366.44137573]
[19.21423912 380.94137573]
[15.75033569 395.53594971]
[12.66543674 410.21530151]
[9.58053780 424.89465332]
[6.49563980 439.57400513]
[3.41074109 454.25335693]
[16.14941597 462.50506592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[22 175]
[23 174]
[24 173]
[28 172]
[29 171]
[30 170]
[39 167]
[40 166]
[41 165]
[42 164]
[44 163]
[45 162]
[46 161]
[48 159]
[49 158]
[50 157]
[53 67]
[54 66]
[55 65]
[56 64]
[69 82]
[70 81]
[71 80]
[72 79]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[91 150]
[92 149]
[94 147]
[95 146]
[100 141]
[101 140]
[102 139]
[103 138]
[104 137]
[109 132]
[110 131]
[111 130]
[113 128]
[114 127]
[115 126]
[116 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
