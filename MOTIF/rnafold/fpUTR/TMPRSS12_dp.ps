%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMPRSS12)
} def

/sequence { (\
GGGCGGGUGGGAAGUACCUGCCGCCAUCUUGCUCACCAGCCUCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.023818351 ubox
1 25 0.058662009 ubox
1 28 0.037404538 ubox
1 29 0.006148057 ubox
1 30 0.006926530 ubox
1 34 0.104625986 ubox
1 37 0.014892814 ubox
1 41 0.036282158 ubox
1 42 0.613200820 ubox
1 43 0.199166815 ubox
1 44 0.306268722 ubox
2 21 0.016894493 ubox
2 22 0.341043459 ubox
2 24 0.041779278 ubox
2 25 0.410802477 ubox
2 27 0.006166499 ubox
2 28 0.004432040 ubox
2 29 0.004743112 ubox
2 33 0.104381208 ubox
2 36 0.010398468 ubox
2 37 0.006952953 ubox
2 40 0.023370765 ubox
2 41 0.734539541 ubox
2 42 0.026004282 ubox
2 43 0.297810223 ubox
2 44 0.262653503 ubox
3 21 0.343724250 ubox
3 24 0.412444209 ubox
3 28 0.004842049 ubox
3 32 0.104728792 ubox
3 36 0.006975513 ubox
3 40 0.738135429 ubox
3 41 0.027588179 ubox
3 42 0.284358961 ubox
3 43 0.263305013 ubox
4 20 0.344148080 ubox
4 23 0.412903640 ubox
4 31 0.104699633 ubox
4 39 0.736113378 ubox
5 19 0.343927977 ubox
5 22 0.375597379 ubox
5 28 0.004497165 ubox
5 29 0.053720441 ubox
5 30 0.088403625 ubox
5 34 0.009832056 ubox
5 37 0.030639469 ubox
5 41 0.389977949 ubox
5 42 0.028322815 ubox
6 18 0.344275247 ubox
6 21 0.333953365 ubox
6 22 0.174916088 ubox
6 25 0.044692436 ubox
6 28 0.076392274 ubox
6 29 0.053377072 ubox
6 33 0.009632618 ubox
6 36 0.024659504 ubox
6 37 0.735433019 ubox
6 40 0.389987578 ubox
6 41 0.030464834 ubox
7 17 0.344363391 ubox
7 21 0.245039384 ubox
7 24 0.045048067 ubox
7 27 0.076672210 ubox
7 28 0.052764934 ubox
7 32 0.009903873 ubox
7 36 0.738423127 ubox
7 40 0.030510502 ubox
8 16 0.343935310 ubox
8 20 0.298253585 ubox
8 23 0.045145319 ubox
8 26 0.089179846 ubox
8 31 0.009881682 ubox
8 35 0.738441934 ubox
8 38 0.390304224 ubox
8 39 0.018118186 ubox
9 15 0.338510540 ubox
9 18 0.256010681 ubox
9 19 0.323358751 ubox
9 22 0.045101135 ubox
9 25 0.089369330 ubox
9 30 0.009816396 ubox
9 33 0.040643977 ubox
9 34 0.737593234 ubox
9 37 0.391271571 ubox
10 17 0.256310509 ubox
10 18 0.325464029 ubox
10 19 0.008285006 ubox
10 21 0.044947050 ubox
10 22 0.025297441 ubox
10 24 0.088625553 ubox
10 25 0.028763205 ubox
10 29 0.012710224 ubox
10 32 0.241242519 ubox
10 33 0.696658471 ubox
10 36 0.391248168 ubox
10 37 0.003711210 ubox
11 17 0.324603461 ubox
11 18 0.011531793 ubox
11 21 0.026749714 ubox
11 24 0.029672748 ubox
11 28 0.013836713 ubox
11 30 0.003611541 ubox
11 32 0.695194213 ubox
11 34 0.092440716 ubox
11 36 0.003927928 ubox
12 27 0.013914920 ubox
12 29 0.007667493 ubox
12 30 0.716970854 ubox
12 33 0.066632342 ubox
13 19 0.046939212 ubox
13 29 0.722729695 ubox
13 30 0.052379420 ubox
13 33 0.385198998 ubox
14 18 0.047544257 ubox
14 21 0.070174456 ubox
14 24 0.035909569 ubox
14 27 0.026012470 ubox
14 28 0.721299129 ubox
14 29 0.054869581 ubox
14 32 0.391426961 ubox
15 20 0.068290632 ubox
15 23 0.039211516 ubox
15 26 0.089449624 ubox
15 31 0.390190149 ubox
16 30 0.358859522 ubox
19 26 0.288216384 ubox
20 25 0.300670554 ubox
20 30 0.004160324 ubox
20 32 0.010154827 ubox
21 31 0.010247718 ubox
22 31 0.015605441 ubox
23 30 0.013968723 ubox
23 32 0.158064693 ubox
23 40 0.043596290 ubox
24 31 0.157023856 ubox
24 39 0.043563276 ubox
25 31 0.025588090 ubox
26 30 0.025540491 ubox
28 39 0.025383371 ubox
29 38 0.024328377 ubox
29 39 0.040042499 ubox
29 46 0.042019942 ubox
29 47 0.010331855 ubox
30 38 0.052962079 ubox
30 45 0.046182474 ubox
30 46 0.014360479 ubox
31 37 0.054866010 ubox
31 40 0.458498661 ubox
31 44 0.035890119 ubox
32 39 0.460108998 ubox
33 38 0.420508379 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
showpage
end
%%EOF
