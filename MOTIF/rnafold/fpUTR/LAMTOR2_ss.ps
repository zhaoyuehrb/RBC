%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGGGCGGGGUUGAGUCGGAACCACAAUAGCCAGGCGAAGAAACUACAACUCCCAGGGCGUCCCGGAGCAGGCCAACGGGACUACGGGAAGCAGCGGGCAGCGGCCCGCGGGAGGCACCUCGGAGAUCUGGGUGCAAAAGCCCAGGGUUAGGAACCGUAGGC\
) } def
/len { sequence length } bind def

/coor [
[25.02355194 228.21864319]
[7.68384600 223.12890625]
[-2.66733932 233.98490906]
[-2.46531606 249.56044006]
[-13.11753750 260.42251587]
[-27.96766472 260.51913452]
[-38.31884766 271.37515259]
[-48.67003632 282.23114014]
[-46.73943710 303.12637329]
[-60.58792877 318.50213623]
[-80.98795319 318.75283813]
[-90.48313904 330.36495972]
[-99.97832489 341.97708130]
[-109.47351074 353.58920288]
[-106.38524628 368.91882324]
[-113.91851807 382.62222290]
[-128.51634216 388.22915649]
[-143.28607178 383.09213257]
[-151.25390625 369.63674927]
[-148.65765381 354.21618652]
[-136.72320557 344.11157227]
[-121.08563232 344.09402466]
[-111.59044647 332.48190308]
[-102.09526062 320.86978149]
[-92.60007477 309.25765991]
[-96.38952637 300.59478760]
[-96.74036407 291.08770752]
[-93.56112671 282.05947876]
[-87.25460052 274.78213501]
[-78.66725922 270.29751587]
[-68.97581482 269.26818848]
[-59.52604675 271.87997437]
[-49.17486191 261.02395630]
[-38.82367325 250.16793823]
[-39.43376923 235.33004761]
[-29.09084511 224.17304993]
[-13.52334976 223.63372803]
[-3.17216468 212.77770996]
[-8.05978489 201.98176575]
[-9.00415802 190.13381958]
[-5.87017679 178.63294983]
[0.99428326 168.84519958]
[10.79681396 161.94140625]
[22.39189529 158.75709534]
[34.41474152 159.69146729]
[45.44193268 164.65748596]
[56.39599228 154.41011047]
[67.35005188 144.16275024]
[78.30411530 133.91537476]
[64.55129242 105.32522583]
[76.03018951 79.66771698]
[99.60181427 72.98593903]
[103.55302429 58.51569748]
[107.50423431 44.04545212]
[111.45544434 29.57520866]
[107.62655640 14.22430706]
[118.44313812 3.98463750]
[122.39434814 -10.48560619]
[126.34555817 -24.95585060]
[130.15882874 -39.46305466]
[133.83383179 -54.00590134]
[129.71337891 -69.28112030]
[140.33303833 -79.72486877]
[144.00804138 -94.26771545]
[147.68302917 -108.81056213]
[151.35803223 -123.35341644]
[150.07440186 -138.29838562]
[143.97335815 -152.00157166]
[129.13081360 -157.43061829]
[122.55034637 -171.79978943]
[128.13601685 -186.58410645]
[142.57395935 -193.01228333]
[157.29838562 -187.27061462]
[163.57356262 -172.76551819]
[157.67654419 -158.10261536]
[163.77758789 -144.39944458]
[171.14205933 -145.81881714]
[185.87098694 -148.65759277]
[193.23544312 -150.07698059]
[193.80650330 -165.06610107]
[182.88224792 -176.48696899]
[183.31692505 -192.28527832]
[194.85264587 -203.08818054]
[210.64547729 -202.48649597]
[221.32582092 -190.83720398]
[220.55718994 -175.05162048]
[208.79563904 -164.49504089]
[208.22457886 -149.50592041]
[215.07617188 -146.45538330]
[221.17721558 -160.15856934]
[222.74533081 -175.07638550]
[237.41761780 -178.19468689]
[244.91712952 -165.20402527]
[234.88040161 -154.05752563]
[228.77934265 -140.35433960]
[235.63093567 -137.30381775]
[246.38790894 -147.75787354]
[257.14489746 -158.21194458]
[267.90185547 -168.66600037]
[278.65884399 -179.12007141]
[289.41583252 -189.57412720]
[293.36297607 -205.49116516]
[309.19384766 -209.77075195]
[320.62304688 -198.01039124]
[315.89315796 -182.30816650]
[299.86987305 -178.81715393]
[289.11291504 -168.36309814]
[278.35592651 -157.90902710]
[267.59896851 -147.45497131]
[256.84197998 -137.00090027]
[246.08500671 -126.54683685]
[165.90087891 -119.67841339]
[162.22587585 -105.13556671]
[158.55088806 -90.59272003]
[154.87588501 -76.04987335]
[159.25920105 -61.81485367]
[148.37667847 -50.33090210]
[144.70167542 -35.78805542]
[146.11814880 -28.49954224]
[140.81579590 -21.00464249]
[136.86459351 -6.53439808]
[132.91337585 7.93584585]
[137.02488708 22.25173950]
[125.92568207 33.52641678]
[121.97447968 47.99666214]
[118.02326965 62.46690369]
[114.07205963 76.93714905]
[127.19158936 84.23386383]
[135.83245850 98.99806213]
[135.90403748 118.21714783]
[148.59947205 126.20626831]
[161.29490662 134.19538879]
[173.99034119 142.18449402]
[186.68576050 150.17361450]
[199.38119507 158.16273499]
[214.73408508 154.41247559]
[228.19848633 162.68807983]
[231.78620911 178.07975769]
[223.36872864 191.45590210]
[207.93997192 194.88069153]
[194.65356445 186.32226562]
[191.39208984 170.85816956]
[178.69665527 162.86904907]
[166.00122070 154.87992859]
[153.30578613 146.89080811]
[140.61035156 138.90170288]
[127.91491699 130.91258240]
[116.76774597 140.94953918]
[123.38606262 154.41052246]
[130.00437927 167.87149048]
[136.62269592 181.33247375]
[149.03723145 192.87870789]
[141.37890625 208.00439453]
[124.72430420 204.83258057]
[123.16172028 187.95079041]
[116.54340363 174.48980713]
[109.92508698 161.02883911]
[103.30677032 147.56785583]
[88.55148315 144.86943054]
[77.59741974 155.11680603]
[66.64336395 165.36416626]
[55.68930054 175.61154175]
[60.49344635 193.38343811]
[55.67505264 211.06378174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 38]
[3 37]
[6 34]
[7 33]
[8 32]
[11 25]
[12 24]
[13 23]
[14 22]
[46 162]
[47 161]
[48 160]
[49 159]
[52 127]
[53 126]
[54 125]
[55 124]
[57 122]
[58 121]
[59 120]
[60 118]
[61 117]
[63 115]
[64 114]
[65 113]
[66 112]
[67 76]
[68 75]
[79 88]
[80 87]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[148 158]
[149 157]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
