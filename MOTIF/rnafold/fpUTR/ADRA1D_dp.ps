%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADRA1D)
} def

/sequence { (\
CCUGCCGGCCGCUCGUUCUGUGCCCCGGCCCGGCCACCGACGGCCGCGCGUUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.006930115 ubox
2 32 0.007021752 ubox
2 55 0.055948609 ubox
3 36 0.013772880 ubox
3 48 0.067507159 ubox
3 50 0.752737058 ubox
3 53 0.014548665 ubox
3 54 0.049452255 ubox
4 29 0.079447065 ubox
4 34 0.064667227 ubox
4 35 0.010992590 ubox
4 47 0.091830364 ubox
4 49 0.989063602 ubox
4 51 0.011315759 ubox
5 28 0.079919644 ubox
5 33 0.065798068 ubox
5 46 0.064999175 ubox
5 48 0.989407075 ubox
5 50 0.011843466 ubox
6 27 0.080938595 ubox
6 32 0.065787670 ubox
6 46 0.991616904 ubox
6 53 0.003719924 ubox
7 24 0.011205921 ubox
7 25 0.013778077 ubox
7 26 0.079699277 ubox
7 30 0.041541687 ubox
7 31 0.053751191 ubox
7 45 0.994297397 ubox
7 52 0.003638187 ubox
8 23 0.011716487 ubox
8 24 0.018609040 ubox
8 25 0.078512296 ubox
8 29 0.056272939 ubox
8 30 0.038092594 ubox
8 44 0.994318798 ubox
8 51 0.003654644 ubox
9 22 0.009127236 ubox
9 28 0.067858448 ubox
9 43 0.994318259 ubox
9 50 0.003646524 ubox
10 20 0.003996487 ubox
10 22 0.065791160 ubox
10 27 0.067840013 ubox
10 42 0.994276686 ubox
10 48 0.003548401 ubox
11 19 0.003330602 ubox
11 21 0.066963042 ubox
11 23 0.053583464 ubox
11 26 0.061655361 ubox
11 29 0.004002404 ubox
11 41 0.993114999 ubox
11 47 0.003551434 ubox
12 20 0.067187635 ubox
12 22 0.054907751 ubox
12 28 0.004063929 ubox
12 46 0.003538738 ubox
13 27 0.003302165 ubox
13 40 0.987043548 ubox
14 20 0.046446842 ubox
14 22 0.015251848 ubox
14 39 0.990245360 ubox
14 42 0.008006304 ubox
15 19 0.028852518 ubox
15 21 0.012326492 ubox
15 23 0.055374059 ubox
15 34 0.004001874 ubox
15 37 0.071375047 ubox
15 38 0.985306435 ubox
15 41 0.015690630 ubox
16 20 0.003799646 ubox
16 22 0.055117507 ubox
16 33 0.003957682 ubox
16 36 0.091292217 ubox
16 40 0.016445795 ubox
17 32 0.003353956 ubox
17 33 0.006292935 ubox
17 39 0.013155969 ubox
17 40 0.082207666 ubox
18 28 0.004181573 ubox
18 32 0.006947905 ubox
18 33 0.196231388 ubox
18 39 0.083016886 ubox
19 27 0.004215113 ubox
19 32 0.196691925 ubox
19 36 0.825322501 ubox
20 26 0.006361257 ubox
20 29 0.006719783 ubox
20 31 0.196138524 ubox
20 34 0.013749506 ubox
20 35 0.835662155 ubox
20 37 0.491880200 ubox
20 38 0.004465916 ubox
21 28 0.006908821 ubox
21 32 0.007362791 ubox
21 33 0.012370502 ubox
21 36 0.491911765 ubox
22 26 0.003344852 ubox
22 29 0.197158416 ubox
22 31 0.007181826 ubox
22 34 0.866241351 ubox
22 35 0.443517463 ubox
23 28 0.196726108 ubox
23 33 0.888663390 ubox
24 32 0.884692461 ubox
24 33 0.327367419 ubox
25 32 0.330807450 ubox
25 33 0.226689706 ubox
26 32 0.233563895 ubox
26 39 0.003223309 ubox
26 53 0.004635091 ubox
27 31 0.230933335 ubox
27 35 0.024454135 ubox
27 38 0.003373474 ubox
27 45 0.003483432 ubox
27 52 0.004494791 ubox
28 34 0.025857369 ubox
28 37 0.003379917 ubox
28 44 0.003485361 ubox
28 49 0.015979007 ubox
28 51 0.004208625 ubox
29 33 0.025670880 ubox
29 43 0.003420151 ubox
29 48 0.017050345 ubox
29 50 0.004411103 ubox
30 42 0.003337451 ubox
31 39 0.004863037 ubox
31 46 0.080039376 ubox
32 38 0.005122659 ubox
32 45 0.082948330 ubox
33 37 0.005053110 ubox
33 44 0.082959436 ubox
34 43 0.082959458 ubox
35 42 0.082885832 ubox
35 53 0.010768896 ubox
36 52 0.010619150 ubox
38 50 0.011164540 ubox
38 53 0.064819440 ubox
39 49 0.011225430 ubox
39 52 0.065244009 ubox
40 51 0.065350371 ubox
41 48 0.011274503 ubox
41 50 0.065362088 ubox
42 47 0.011259587 ubox
42 49 0.064709418 ubox
43 49 0.007920646 ubox
44 48 0.011073677 ubox
47 53 0.010466376 ubox
48 52 0.006556579 ubox
3 50 0.9500000 lbox
4 49 0.9500000 lbox
5 48 0.9500000 lbox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
showpage
end
%%EOF
