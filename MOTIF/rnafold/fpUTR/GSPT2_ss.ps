%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUGGGGUUUGGGGGAGGAGAUCCGCUCACACACAAGAGGAGAGUGUUGAGCCGCCAUAUCUGCUGCUGCCGCCGCAGUUGCGAAUGCAGCAUCGGCGCUUAGCUGCCUCCGCGGUGCAGCUAAGGUUCGUGUCGCUACCCCUUGGCCCUUCGCUCUUGCUGCCUUAACCCCGCCGGCGGAGCCCGCUCUUCUGGCCUGUUGAGCCCGCUCCCUCACUGCCACACAGCAAGUUCCGAGACC\
) } def
/len { sequence length } bind def

/coor [
[327.58514404 342.16278076]
[316.28363037 332.29998779]
[304.98208618 322.43716431]
[297.89120483 320.41149902]
[293.59924316 312.37304688]
[282.42614746 302.36492920]
[271.25308228 292.35681152]
[260.07998657 282.34872437]
[248.90689087 272.34060669]
[237.73381042 262.33251953]
[230.66972351 260.21536255]
[226.48204041 252.12208557]
[215.43927002 241.97036743]
[204.39649963 231.81866455]
[193.35372925 221.66694641]
[178.74765015 218.74945068]
[173.82464600 203.71368408]
[162.78187561 193.56196594]
[147.86203003 195.11061096]
[139.13964844 207.31388855]
[130.41726685 219.51716614]
[131.62081909 235.51501465]
[119.76603699 246.32444763]
[103.94689941 243.65339661]
[96.29849243 229.55085754]
[102.68802643 214.83509827]
[118.21398163 210.79478455]
[126.93636322 198.59150696]
[135.65875244 186.38822937]
[122.53517151 193.65264893]
[108.32035828 188.86317444]
[102.26892853 175.13800049]
[108.32068634 161.41297913]
[122.53561401 156.62384033]
[135.65875244 163.88822937]
[126.93636322 151.68495178]
[118.21398163 139.48165894]
[109.49160004 127.27838135]
[100.76921844 115.07510376]
[77.10916901 106.81009674]
[63.26026917 101.04745483]
[49.41136932 95.28481293]
[35.56247330 89.52217865]
[26.45893097 89.11779785]
[21.57255745 83.59448242]
[7.79931498 77.65328217]
[-6.01204348 71.80123901]
[-19.86094284 66.03860474]
[-33.70983887 60.27596283]
[-47.55873871 54.51332474]
[-61.40763855 48.75068283]
[-75.25653839 42.98804474]
[-89.10543060 37.22540665]
[-98.20897675 36.82102585]
[-103.09535217 31.29770851]
[-116.86859131 25.35651207]
[-130.64183044 19.41531563]
[-139.23031616 25.68156052]
[-149.56370544 27.81256676]
[-159.77328491 25.49113274]
[-168.04090881 19.19914055]
[-172.92263794 10.11936665]
[-173.60083008 -0.08639714]
[-187.13334656 -6.55718803]
[-200.66586304 -13.02797890]
[-214.19836426 -19.49876976]
[-227.73088074 -25.96956062]
[-241.26339722 -32.44035339]
[-254.87059021 -25.21883011]
[-269.94470215 -27.36922455]
[-280.73452759 -37.85939407]
[-283.24826050 -52.51610565]
[-296.78079224 -58.98689651]
[-310.31329346 -65.45768738]
[-324.47332764 -58.82240677]
[-339.57226562 -62.89133072]
[-348.48083496 -75.74324036]
[-346.99267578 -91.30985260]
[-335.81045532 -102.24108887]
[-320.21408081 -103.37555695]
[-307.56768799 -94.17759705]
[-303.84249878 -78.99019623]
[-290.30999756 -72.51940918]
[-276.77746582 -66.04861450]
[-263.79104614 -73.29367828]
[-248.85189819 -71.48110962]
[-237.71438599 -61.09798813]
[-234.79260254 -45.97286224]
[-221.26008606 -39.50207138]
[-207.72756958 -33.03128052]
[-194.19506836 -26.56048965]
[-180.66255188 -20.08969879]
[-167.13003540 -13.61890888]
[-149.25955200 -21.41985703]
[-131.14714050 -13.40820599]
[-124.70063782 5.64207363]
[-110.92739105 11.58327007]
[-97.15415192 17.52446747]
[-83.34279633 23.37650681]
[-69.49389648 29.13914680]
[-55.64499664 34.90178680]
[-41.79610062 40.66442490]
[-27.94720078 46.42706299]
[-14.09830284 52.18970490]
[-0.24940412 57.95234299]
[7.11767626 57.62096405]
[13.74051189 63.88003922]
[27.51375389 69.82123566]
[41.32511139 75.67327881]
[55.17401123 81.43591309]
[69.02291107 87.19855499]
[82.87180328 92.96119690]
[96.52725220 86.75403595]
[101.29141998 72.53071594]
[106.05558777 58.30740356]
[110.81975555 44.08408737]
[102.01228333 33.49706268]
[99.59979248 20.04831505]
[104.10633087 7.26412010]
[114.25586700 -1.55690479]
[127.33131409 -4.19482660]
[132.27896118 -18.35536194]
[137.22660828 -32.51589966]
[142.17425537 -46.67643356]
[147.12190247 -60.83697128]
[152.06954956 -74.99750519]
[157.01719666 -89.15804291]
[151.74618530 -98.64165497]
[152.53622437 -109.24295044]
[158.88735962 -117.49279785]
[168.51963806 -120.82419586]
[173.83174133 -134.85208130]
[179.14382935 -148.87997437]
[175.97257996 -164.96957397]
[188.49732971 -175.55554199]
[203.83367920 -169.74795532]
[206.20492554 -153.52114868]
[193.17172241 -143.56787109]
[187.85961914 -129.53997803]
[182.54753113 -115.51210022]
[187.02700806 -96.68932343]
[171.17773438 -84.21039581]
[166.23008728 -70.04985809]
[161.28244019 -55.88932037]
[156.33479309 -41.72878647]
[151.38714600 -27.56825066]
[146.43949890 -13.40771484]
[141.49185181 0.75282156]
[151.27598572 13.94635868]
[151.26022339 30.53824615]
[141.25238037 43.98002625]
[125.04306793 48.84825516]
[120.27890015 63.07157135]
[115.51473236 77.29488373]
[110.75056458 91.51820374]
[112.97250366 106.35272217]
[121.69488525 118.55600739]
[130.41726685 130.75927734]
[139.13964844 142.96257019]
[147.86203003 155.16584778]
[172.93357849 182.51919556]
[183.97634888 192.67091370]
[199.37228394 196.31452942]
[203.50544739 210.62417603]
[214.54821777 220.77589417]
[225.59098816 230.92759705]
[236.63375854 241.07931519]
[247.74191284 251.15943909]
[258.91500854 261.16754150]
[270.08807373 271.17562866]
[281.26116943 281.18374634]
[292.43426514 291.19183350]
[303.60736084 301.19995117]
[314.84490967 311.13562012]
[326.14642334 320.99844360]
[337.44796753 330.86126709]
[358.31506348 328.10827637]
[374.17098999 341.49722290]
[374.93048096 361.94061279]
[386.72674561 371.20605469]
[398.52297974 380.47152710]
[410.31921387 389.73696899]
[422.11547852 399.00244141]
[433.91171265 408.26788330]
[449.39651489 406.57711792]
[461.22760010 416.14166260]
[462.74404907 430.91445923]
[474.54028320 440.17993164]
[486.33651733 449.44537354]
[499.26705933 444.70635986]
[512.74462891 446.95202637]
[523.27197266 455.49136353]
[528.17071533 468.01437378]
[526.26275635 481.21609497]
[537.93823242 490.63330078]
[549.61370850 500.05047607]
[561.28918457 509.46765137]
[574.15954590 508.87084961]
[583.68731689 516.93701172]
[585.12591553 528.93420410]
[596.67864990 538.50152588]
[605.26422119 541.55541992]
[608.31787109 548.26800537]
[619.74597168 557.98388672]
[631.17407227 567.69976807]
[646.22192383 563.91253662]
[660.60931396 569.72467041]
[668.80413818 582.90136719]
[667.65527344 598.37579346]
[657.60443115 610.19787598]
[642.51647949 613.82165527]
[628.19293213 607.85375977]
[620.14154053 594.58898926]
[621.45819092 579.12786865]
[610.03009033 569.41198730]
[598.60198975 559.69610596]
[587.11132812 550.05426025]
[575.55859375 540.48693848]
[558.11596680 538.47686768]
[551.87200928 521.14312744]
[540.19653320 511.72595215]
[528.52105713 502.30877686]
[516.84558105 492.89157104]
[501.13195801 497.67489624]
[485.50961304 492.08618164]
[476.21105957 478.14434814]
[477.07107544 461.24163818]
[465.27484131 451.97616577]
[453.47857666 442.71072388]
[438.76705933 444.73712158]
[426.67199707 435.50866699]
[424.64627075 420.06411743]
[412.85000610 410.79867554]
[401.05377197 401.53323364]
[389.25753784 392.26776123]
[377.46127319 383.00231934]
[365.66503906 373.73684692]
[357.21533203 377.63888550]
[347.86785889 378.21066284]
[338.89550781 375.33224487]
[331.53543091 369.35644531]
[326.81832886 361.06616211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[12 167]
[13 166]
[14 165]
[15 164]
[17 162]
[18 161]
[19 29]
[20 28]
[21 27]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 112]
[41 111]
[42 110]
[43 109]
[45 108]
[46 107]
[47 105]
[48 104]
[49 103]
[50 102]
[51 101]
[52 100]
[53 99]
[55 98]
[56 97]
[57 96]
[63 93]
[64 92]
[65 91]
[66 90]
[67 89]
[68 88]
[72 84]
[73 83]
[74 82]
[113 155]
[114 154]
[115 153]
[116 152]
[121 148]
[122 147]
[123 146]
[124 145]
[125 144]
[126 143]
[127 142]
[131 140]
[132 139]
[133 138]
[179 237]
[180 236]
[181 235]
[182 234]
[183 233]
[184 232]
[187 229]
[188 228]
[189 227]
[194 223]
[195 222]
[196 221]
[197 220]
[200 218]
[201 217]
[203 216]
[204 215]
[205 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
