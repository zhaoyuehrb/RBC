%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUGGUCUGGAGCAGCUGAAACCGGUUUGAGCGUGGCUGCUUCCUGCCGCUCGACGCCGCGGCAGGCCGCCUGGGGGGAGCGCUGGCGAGGCACGGACGGCGGGCGCCCGGUACCUCUGCCCGCGGUCCUCGCUCUCGGGCGGGGCGGCGGCGACGCGGACCUGCGGACUAGCGAACCCGGAGCACGACAUCAUAAAAUAAAUCCAUCAGA\
) } def
/len { sequence length } bind def

/coor [
[258.30328369 648.84729004]
[271.16012573 640.97552490]
[266.60870361 626.68267822]
[262.05731201 612.38989258]
[257.40112305 598.13085938]
[252.64039612 583.90637207]
[241.26371765 574.29284668]
[244.22105408 558.75048828]
[239.46032715 544.52600098]
[234.69960022 530.30151367]
[229.93887329 516.07708740]
[225.17813110 501.85260010]
[210.55516052 499.01812744]
[199.23904419 489.17935181]
[194.33459473 474.90304565]
[197.25367737 459.99078369]
[207.31060791 448.46664429]
[202.54988098 434.24218750]
[197.78915405 420.01773071]
[193.02841187 405.79324341]
[180.80680847 401.71554565]
[173.04895020 391.18640137]
[172.76699829 377.91632080]
[180.28782654 366.74426270]
[175.73641968 352.45144653]
[171.18501282 338.15863037]
[155.37478638 337.06515503]
[141.16036987 329.97058105]
[130.73188782 317.93499756]
[125.70879364 302.78225708]
[126.88843536 286.82360840]
[134.11965942 272.50531006]
[146.32142639 262.03347778]
[141.56069946 247.80900574]
[136.79997253 233.58454895]
[132.03924561 219.36007690]
[120.66256714 209.74650574]
[123.61990356 194.20416260]
[118.85917664 179.97969055]
[114.09844971 165.75521851]
[109.33771515 151.53076172]
[104.57698822 137.30628967]
[99.81625366 123.08182526]
[79.93619537 117.08386230]
[70.72118378 95.51099396]
[55.77933502 94.19146729]
[40.83748627 92.87194824]
[25.89563560 91.55242157]
[10.95378685 90.23290253]
[-3.98806214 88.91337585]
[-18.92991066 87.59385681]
[-33.87176132 86.27433014]
[-43.95948029 98.06490326]
[-59.05873489 101.64151001]
[-73.36355591 95.62887573]
[-81.37344360 82.33897400]
[-80.00843048 66.88205719]
[-69.79340363 55.20161438]
[-54.65623474 51.78901672]
[-40.41748428 57.95647812]
[-32.55223846 71.33248138]
[-17.61038780 72.65200806]
[-2.66853929 73.97152710]
[12.27330971 75.29105377]
[27.21515846 76.61057281]
[42.15700912 77.93009949]
[57.09885788 79.24961853]
[72.04071045 80.56914520]
[83.10399628 70.43979645]
[83.10399628 55.43980026]
[83.10399628 40.43980026]
[83.10399628 25.43980026]
[83.10399628 10.43980026]
[83.10399628 -4.56019974]
[83.10399628 -19.56019974]
[83.10399628 -34.56019974]
[83.10399628 -49.56019974]
[82.66365051 -64.55373383]
[81.78334045 -79.52787781]
[80.90302277 -94.50202942]
[80.02271271 -109.47617340]
[71.48884583 -122.79847717]
[78.46587372 -135.95790100]
[77.58556366 -150.93203735]
[76.70524597 -165.90618896]
[68.17138672 -179.22848511]
[75.14841461 -192.38790894]
[74.26810455 -207.36206055]
[73.38778687 -222.33619690]
[72.39758301 -237.30348206]
[71.29754639 -252.26309204]
[70.19750977 -267.22268677]
[69.09747314 -282.18231201]
[55.64643478 -293.36831665]
[54.47146606 -310.48471069]
[65.81242371 -322.90469360]
[64.49289703 -337.84655762]
[63.17337418 -352.78839111]
[54.25209427 -365.85443115]
[60.83980179 -379.21301270]
[59.52027893 -394.15484619]
[48.19502258 -405.51785278]
[50.16088486 -421.44000244]
[63.90982056 -429.70718384]
[78.89482880 -423.97753906]
[83.62068939 -408.64633179]
[74.46212769 -395.47436523]
[75.78165436 -380.53253174]
[84.60855103 -368.53521729]
[78.11522675 -354.10791016]
[79.43474579 -339.16607666]
[80.75427246 -324.22421265]
[91.69127655 -317.41412354]
[96.78564453 -305.36862183]
[93.97149658 -292.39730835]
[84.05708313 -283.28234863]
[85.15711975 -268.32272339]
[86.25715637 -253.36312866]
[87.35719299 -238.40351868]
[90.98187256 -231.96472168]
[88.36193085 -223.21650696]
[89.24224854 -208.24237061]
[90.12255859 -193.26821899]
[98.59346008 -181.01696777]
[91.67939758 -166.78649902]
[92.55970764 -151.81234741]
[93.44002533 -136.83821106]
[101.91091919 -124.58695984]
[94.99685669 -110.35648346]
[95.87716675 -95.38233948]
[96.75748444 -80.40819550]
[97.63779449 -65.43405151]
[99.63843536 -63.47356796]
[100.98395538 -60.60337830]
[101.32431030 -57.06870651]
[100.40448761 -53.23674393]
[98.10399628 -49.56019974]
[98.10399628 -34.56019974]
[98.10399628 -19.56019974]
[98.10399628 -4.56019974]
[98.10399628 10.43980026]
[98.10399628 25.43980026]
[98.10399628 40.43980026]
[98.10399628 55.43980026]
[98.10399628 70.43979645]
[115.19374847 76.49711609]
[124.67202759 90.74226379]
[123.76161957 106.80609894]
[114.04072571 118.32109833]
[118.80145264 132.54556274]
[123.56217957 146.77003479]
[128.32290649 160.99449158]
[133.08364868 175.21896362]
[137.84437561 189.44343567]
[149.56156921 200.07441711]
[146.26370239 214.59934998]
[151.02442932 228.82380676]
[155.78517151 243.04827881]
[160.54589844 257.27273560]
[174.77563477 257.84915161]
[187.92648315 263.23645020]
[198.42671204 272.76873779]
[205.02894592 285.28610229]
[206.95823669 299.27563477]
[204.00309753 313.05438232]
[196.53836060 324.97174072]
[185.47784424 333.60723877]
[190.02925110 347.90005493]
[194.58064270 362.19287109]
[210.26567078 369.94125366]
[215.39190674 386.31417847]
[207.25288391 401.03253174]
[212.01361084 415.25698853]
[216.77433777 429.48144531]
[221.53507996 443.70593262]
[236.50279236 446.85464478]
[247.81016541 457.00552368]
[252.48733521 471.35791016]
[249.37339783 486.02621460]
[239.40260315 497.09185791]
[244.16333008 511.31634521]
[248.92405701 525.54083252]
[253.68479919 539.76525879]
[258.44552612 553.98974609]
[270.16271973 564.62072754]
[266.86486816 579.14562988]
[271.62557983 593.37011719]
[277.31558228 600.51287842]
[276.35012817 607.83850098]
[280.90155029 622.13128662]
[285.45294189 636.42413330]
[300.49420166 635.41204834]
[315.34045410 638.02966309]
[329.12857056 644.12481689]
[341.05697632 653.34313965]
[350.43209839 665.14862061]
[356.70889282 678.85504150]
[359.52249146 693.66540527]
[358.70925903 708.71868896]
[354.31649780 723.13977051]
[346.59957886 736.09014893]
[336.00717163 746.81695557]
[323.15509033 754.69653320]
[308.79055786 759.27081299]
[293.74871826 760.27374268]
[278.90402222 757.64715576]
[265.11959839 751.54364014]
[253.19680786 742.31805420]
[243.82884216 730.50689697]
[237.56033325 716.79669189]
[234.75573730 701.98461914]
[235.57809448 686.93182373]
[239.97961426 672.51342773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 187]
[6 186]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[17 175]
[18 174]
[19 173]
[20 172]
[24 169]
[25 168]
[26 167]
[33 159]
[34 158]
[35 157]
[36 156]
[38 154]
[39 153]
[40 152]
[41 151]
[42 150]
[43 149]
[45 68]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 132]
[79 131]
[80 130]
[81 129]
[83 127]
[84 126]
[85 125]
[87 123]
[88 122]
[89 121]
[90 119]
[91 118]
[92 117]
[93 116]
[96 112]
[97 111]
[98 110]
[100 108]
[101 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
