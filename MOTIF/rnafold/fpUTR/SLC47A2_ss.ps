%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCCCUAGGAGGCAGGGCUCAUCCCACAAGUUGCCAUGGUAGCCCCUCCUCCUGCCCCUUACUCAUCAGCCAGGCUGUACCGACACGGGCUGCCCAGGCAGGGGGUGGCUCGCUGGACAAAGCUGGCCGUGCAGGCGCUCAGGCGUGCAGGGUAGCCAGUGCCCCGGCCAGGA\
) } def
/len { sequence length } bind def

/coor [
[112.36079407 125.20435333]
[109.95841980 110.39797974]
[103.16426086 113.57435608]
[98.17398834 127.71992493]
[93.18371582 141.86549377]
[88.19343567 156.01106262]
[95.23956299 170.15771484]
[90.13957977 185.11651611]
[75.91922760 192.01268005]
[61.01518250 186.75483704]
[54.26975250 172.46237183]
[59.68487930 157.61474609]
[74.04786682 151.02079773]
[79.03813934 136.87522888]
[84.02841187 122.72965240]
[89.01868439 108.58408356]
[85.43894958 94.01749420]
[74.46053314 83.79622650]
[63.48211670 73.57495880]
[52.50370026 63.35368729]
[44.06122971 59.78035736]
[41.42261505 52.85065842]
[30.62838745 42.43506241]
[19.83415794 32.01946640]
[9.03992844 21.60387421]
[-1.75430107 11.18827915]
[-12.54853058 0.77268404]
[-15.07876682 15.55774117]
[-28.12628174 22.95789909]
[-42.11420822 17.54144859]
[-46.77541351 3.28405833]
[-38.68857574 -9.34935284]
[-23.78802299 -11.08539104]
[-33.61093140 -22.42163467]
[-43.43384552 -33.75787735]
[-53.25675583 -45.09412384]
[-63.07966614 -56.43036652]
[-78.60386658 -57.70980453]
[-88.40420532 -69.34629822]
[-87.08878326 -84.13836670]
[-96.91169739 -95.47460938]
[-106.73461151 -106.81085205]
[-116.55751801 -118.14709473]
[-126.38043213 -129.48333740]
[-136.20333862 -140.81958008]
[-146.02624512 -152.15582275]
[-155.84916687 -163.49206543]
[-175.16595459 -169.18157959]
[-178.07373047 -188.27886963]
[-188.29499817 -199.25727844]
[-203.77957153 -194.31086731]
[-219.81481934 -196.59640503]
[-233.20436096 -205.60711670]
[-241.30152893 -219.50086975]
[-242.53242493 -235.47645569]
[-236.70162964 -250.33839417]
[-247.11721802 -261.13262939]
[-257.53280640 -271.92684937]
[-277.12643433 -276.57427979]
[-281.05221558 -295.48855591]
[-291.84643555 -305.90414429]
[-307.10269165 -303.07107544]
[-321.09600830 -309.77685547]
[-328.44561768 -323.44296265]
[-326.32550049 -338.81451416]
[-315.55087280 -349.98083496]
[-300.26477051 -352.64825439]
[-286.34506226 -345.79107666]
[-279.14410400 -332.04605103]
[-281.43084717 -316.69839478]
[-270.63662720 -306.28280640]
[-260.43792725 -307.38220215]
[-251.13055420 -302.57015991]
[-245.91644287 -293.22915649]
[-246.73858643 -282.34243774]
[-236.32298279 -271.54821777]
[-225.90739441 -260.75399780]
[-212.94602966 -265.74780273]
[-199.01649475 -265.41729736]
[-186.22720337 -259.77944946]
[-176.52662659 -249.65698242]
[-171.40641785 -236.55865479]
[-171.67210388 -222.45426941]
[-177.31658936 -209.47854614]
[-167.09530640 -198.50013733]
[-156.85240173 -199.05209351]
[-147.81591797 -193.74877930]
[-143.10925293 -184.14208984]
[-144.51292419 -173.31498718]
[-134.69000244 -161.97874451]
[-124.86709595 -150.64250183]
[-115.04418945 -139.30625916]
[-105.22127533 -127.97000885]
[-95.39836121 -116.63376617]
[-85.57545471 -105.29752350]
[-75.75254059 -93.96128082]
[-60.92383194 -93.15818024]
[-50.80051422 -81.80154419]
[-51.74342346 -66.25328064]
[-41.92051315 -54.91703415]
[-32.09759903 -43.58079147]
[-22.27468872 -32.24454498]
[-12.45177841 -20.90830231]
[-2.13293576 -10.02154541]
[8.66129398 0.39404938]
[19.45552254 10.80964375]
[30.24975204 21.22523880]
[41.04398346 31.64083290]
[51.83821106 42.05642700]
[62.72496796 52.37527084]
[73.70338440 62.59653854]
[84.68180084 72.81781006]
[95.66022491 83.03907776]
[135.58287048 86.81460571]
[149.63711548 92.05657196]
[163.69136047 97.29853058]
[177.74560547 102.54049683]
[191.79985046 107.78245544]
[201.24734497 99.54005432]
[213.23687744 96.12889862]
[225.46562195 98.14010620]
[235.61204529 105.12942505]
[241.77655029 115.71351624]
[242.83702087 127.84338379]
[256.69522095 133.58363342]
[270.55340576 139.32388306]
[284.41159058 145.06413269]
[298.26977539 150.80438232]
[312.27670288 156.17156982]
[326.42227173 161.16184998]
[342.01043701 158.45639038]
[351.43865967 169.98712158]
[365.58422852 174.97740173]
[379.72979736 179.96766663]
[393.87536621 184.95794678]
[409.46353149 182.25248718]
[418.89175415 193.78321838]
[433.03732300 198.77349854]
[447.18395996 191.72737122]
[462.14276123 196.82736206]
[469.03894043 211.04771423]
[463.78109741 225.95175171]
[449.48861694 232.69718933]
[434.64099121 227.28205872]
[428.04705811 212.91906738]
[413.90148926 207.92880249]
[399.32510376 210.99119568]
[388.88510132 199.10351562]
[374.73950195 194.11323547]
[360.59393311 189.12297058]
[346.44836426 184.13269043]
[331.87197876 187.19509888]
[321.43197632 175.30741882]
[307.28640747 170.31713867]
[303.94104004 171.52427673]
[299.84027100 171.15103149]
[295.74249268 168.85827637]
[292.52954102 164.66258240]
[278.67135620 158.92233276]
[264.81314087 153.18208313]
[250.95495605 147.44181824]
[237.09675598 141.70156860]
[222.51448059 151.61766052]
[204.74148560 150.81266785]
[190.87292480 139.41986084]
[186.55789185 121.83670044]
[172.50364685 116.59474182]
[158.44940186 111.35277557]
[144.39515686 106.11081696]
[130.34091187 100.86885071]
[123.54674530 104.04522705]
[133.36737061 115.38344574]
[143.65496826 126.29974365]
[140.83874512 141.03300476]
[127.25028992 147.38546753]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[6 13]
[17 113]
[18 112]
[19 111]
[20 110]
[22 109]
[23 108]
[24 107]
[25 106]
[26 105]
[27 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[40 96]
[41 95]
[42 94]
[43 93]
[44 92]
[45 91]
[46 90]
[47 89]
[49 85]
[50 84]
[56 77]
[57 76]
[58 75]
[60 71]
[61 70]
[114 170]
[115 169]
[116 168]
[117 167]
[118 166]
[124 162]
[125 161]
[126 160]
[127 159]
[128 158]
[129 154]
[130 153]
[132 151]
[133 150]
[134 149]
[135 148]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
