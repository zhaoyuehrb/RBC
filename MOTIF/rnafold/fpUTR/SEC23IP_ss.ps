%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGCUAGACGCGGGCGUGAAGACAGUGUCGCCAUGUUGAUAUCUGGCGUCGCCGUGUAGGGGAAGGGAGAGGGCGGCUGACUAGCUACCCGUAAUUUCGGCUCCUGUGCGCAAGUGCGGAAGUGCGCUGGCCAGGAGCGUGAUCGGUUUCCGGUCAGUGGUGUGGUACCGGGUACCCGGAGACGUGUAUCGGACGGUGGGCCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[109.95275116 151.61190796]
[98.82617950 152.54966736]
[87.75257874 151.11601257]
[77.23167419 147.37561035]
[67.73824310 141.49728394]
[56.93608475 151.90466309]
[46.13392639 162.31202698]
[35.33177185 172.71940613]
[24.52961540 183.12678528]
[13.72745895 193.53414917]
[17.31080627 208.40380859]
[12.99865437 222.97441101]
[2.04510713 233.36123657]
[-12.53921223 236.84744263]
[-26.81419182 232.59413147]
[-37.61634827 243.00151062]
[-48.41850281 253.40888977]
[-59.22066116 263.81625366]
[-70.02281952 274.22363281]
[-80.82497406 284.63101196]
[-81.28350830 300.20108032]
[-92.38668823 310.60177612]
[-107.22756195 310.06866455]
[-118.02971649 320.47604370]
[-128.83187866 330.88342285]
[-136.04322815 346.22723389]
[-152.78370667 343.54528809]
[-154.84080505 326.71661377]
[-139.23924255 320.08126831]
[-128.43708801 309.67388916]
[-117.63493347 299.26651001]
[-117.61537170 284.41607666]
[-106.80870819 273.70764160]
[-91.23234558 273.82885742]
[-80.43019104 263.42147827]
[-69.62803650 253.01409912]
[-58.82587814 242.60673523]
[-48.02371979 232.19935608]
[-37.22156525 221.79197693]
[-40.94068527 207.36860657]
[-36.91415787 192.92413330]
[-26.12689781 182.36470032]
[-11.40592670 178.59776306]
[3.32008553 182.73199463]
[14.12224197 172.32461548]
[24.92439842 161.91725159]
[35.72655487 151.50987244]
[46.52870941 141.10250854]
[57.33086777 130.69512939]
[49.86671829 115.79556274]
[47.44177246 99.30829620]
[32.62470245 96.97280884]
[17.78813934 102.46707153]
[6.42077446 92.84250641]
[-8.39629364 90.50701904]
[-22.16219139 98.74592590]
[-37.13539505 92.98548126]
[-41.82974243 77.64459991]
[-32.64413071 64.49149323]
[-16.62497902 63.61610413]
[-6.06080675 75.68994904]
[8.75626087 78.02543640]
[22.53300858 72.36412048]
[34.96018982 82.15573883]
[49.77725983 84.49122620]
[54.80887985 73.15584564]
[62.35630035 63.31488419]
[53.21749496 51.42025375]
[44.07869339 39.52561951]
[34.93989182 27.63098717]
[16.07518196 25.88828468]
[4.67051983 11.16257381]
[7.60020590 -6.90763998]
[-1.88869250 -18.52490425]
[-11.37759113 -30.14216614]
[-26.09990311 -35.93561935]
[-28.15867233 -50.68725204]
[-37.64757156 -62.30451584]
[-47.13647079 -73.92178345]
[-56.62536621 -85.53904724]
[-72.14337158 -90.84220886]
[-75.04377747 -106.98283386]
[-62.34289932 -117.35681915]
[-47.10630798 -111.29230499]
[-45.00810242 -95.02793884]
[-35.51920700 -83.41068268]
[-26.03030777 -71.79341888]
[-16.54140854 -60.17615128]
[-2.49780607 -55.21364594]
[0.23967248 -39.63106537]
[9.72857094 -28.01380157]
[19.21747017 -16.39653778]
[30.54720497 -17.73940849]
[41.22885513 -13.40142822]
[48.56520844 -4.35312176]
[50.64384842 7.23049402]
[46.83452606 18.49218559]
[55.97332764 30.38681793]
[65.11212921 42.28145218]
[74.25093079 54.17608261]
[94.92096710 47.68318558]
[116.45393372 50.07892227]
[123.13412476 36.64854813]
[129.81431580 23.21817207]
[136.49452209 9.78779507]
[143.17471313 -3.64258075]
[149.85490417 -17.07295609]
[156.53509521 -30.50333214]
[157.55496216 -39.58065033]
[163.41604614 -44.08282471]
[170.29545593 -57.41225433]
[171.45034790 -66.47338104]
[177.37780762 -70.88779449]
[184.45491028 -84.11331940]
[185.74458313 -93.15625000]
[191.73710632 -97.48191833]
[199.01034546 -110.60061646]
[206.28356934 -123.71930695]
[213.55679321 -136.83799744]
[220.83003235 -149.95669556]
[220.00433350 -166.33503723]
[233.92059326 -175.01086426]
[248.26295471 -167.05920410]
[248.27722168 -150.66006470]
[233.94873047 -142.68347168]
[226.67549133 -129.56477356]
[219.40226746 -116.44607544]
[212.12902832 -103.32738495]
[204.85580444 -90.20868683]
[197.68043518 -77.03621674]
[190.60333252 -63.81068802]
[183.62487793 -50.53284073]
[176.74546814 -37.20341110]
[169.96546936 -23.82313728]
[163.28527832 -10.39276218]
[156.60508728 3.03761387]
[149.92489624 16.46798897]
[143.24470520 29.89836502]
[136.56449890 43.32874298]
[129.88430786 56.75911713]
[140.95544434 67.05312347]
[148.63883972 80.07241821]
[163.18846130 76.42433167]
[177.73808289 72.77624512]
[192.28770447 69.12815094]
[206.83732605 65.48006439]
[221.38694763 61.83197784]
[235.93656921 58.18389130]
[249.82962036 48.46692657]
[263.01281738 59.12710953]
[256.41873169 74.74613953]
[239.58465576 72.73351288]
[225.03503418 76.38159943]
[210.48541260 80.02968597]
[195.93579102 83.67777252]
[181.38616943 87.32585907]
[166.83654785 90.97395325]
[152.28692627 94.62203979]
[151.93725586 108.08504486]
[148.17799377 121.01728821]
[141.25596619 132.56979370]
[151.58262634 143.44912720]
[161.99000549 154.25128174]
[172.47750854 164.97566223]
[182.96501160 175.70004272]
[193.45251465 186.42442322]
[203.94001770 197.14880371]
[214.42750549 207.87318420]
[225.07351685 218.44023132]
[235.87567139 228.84759521]
[246.67782593 239.25497437]
[257.47998047 249.66235352]
[268.51187134 259.82589722]
[279.76797485 269.74053955]
[291.02404785 279.65518188]
[302.28015137 289.56985474]
[313.53625488 299.48449707]
[329.00616455 302.79995728]
[333.44262695 317.01852417]
[344.69869995 326.93316650]
[360.87371826 329.63519287]
[366.36703491 345.08691406]
[355.52755737 357.39294434]
[339.50607300 353.89389038]
[334.78405762 338.18927002]
[323.52795410 328.27462769]
[308.86315918 325.66830444]
[303.62161255 310.74060059]
[292.36550903 300.82595825]
[281.10940552 290.91128540]
[269.85330200 280.99664307]
[258.59722900 271.08200073]
[255.07417297 270.93887329]
[251.44540405 269.08224487]
[248.51551819 265.48098755]
[247.07261658 260.46450806]
[236.27046204 250.05712891]
[225.46830750 239.64974976]
[214.66615295 229.24238586]
[209.95916748 228.43402100]
[205.71003723 224.66020203]
[203.70312500 218.36068726]
[193.21563721 207.63630676]
[182.72813416 196.91192627]
[172.24063110 186.18754578]
[161.75312805 175.46316528]
[151.26562500 164.73878479]
[144.34155273 162.15438843]
[140.70329285 153.77578735]
[130.37663269 142.89645386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[23 31]
[24 30]
[25 29]
[51 65]
[52 64]
[54 62]
[55 61]
[67 100]
[68 99]
[69 98]
[70 97]
[73 92]
[74 91]
[75 90]
[77 88]
[78 87]
[79 86]
[80 85]
[102 140]
[103 139]
[104 138]
[105 137]
[106 136]
[107 135]
[108 134]
[110 133]
[111 132]
[113 131]
[114 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
[161 210]
[162 209]
[163 207]
[164 206]
[165 205]
[166 204]
[167 203]
[168 202]
[169 199]
[170 198]
[171 197]
[172 196]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
