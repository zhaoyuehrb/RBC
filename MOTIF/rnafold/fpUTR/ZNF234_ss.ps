%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUCGCGGGCACUUCCGCUCCAGGGAAGAGGGGGCGAUUGUCACGGCACAUUCCACGGUAGUUUCUUCCAGUUCCGCGACUCGCGGGCCCCUCCUAAUGUCAGGGACUUAAGAUUGGGGCUCGCUGGGACCUGGUGGUCCGGUUAUGGGAAAAGAAGCCUCGUGGGAGAGCAGAGCCUGAAAAAGGACUGCGCGGACUGACUUCUUGGCUACUGAAAGCAAAGCUCCACUGUUCCAGGCACGAUUCUGCCUUC\
UCUCAAAUGGCAUAACUCAGGACUCUGCAAAUUCCCAGAAACAGGAGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[82.74728394 129.94798279]
[90.87210846 117.34252167]
[79.33784485 126.93214417]
[67.80358887 136.52177429]
[56.26933289 146.11138916]
[44.73507309 155.70101929]
[33.20081711 165.29063416]
[21.66655731 174.88026428]
[10.13230038 184.46989441]
[-1.40195751 194.05950928]
[-12.93621540 203.64913940]
[-12.30183506 222.00097656]
[-23.62614632 236.13731384]
[-41.18282700 239.43086243]
[-47.69108582 252.94538879]
[-54.19934082 266.45993042]
[-60.70759583 279.97445679]
[-67.21585083 293.48898315]
[-60.61982727 307.66735840]
[-64.73056793 322.75497437]
[-77.60710144 331.62789917]
[-93.16953278 330.09661865]
[-104.06974792 318.88415527]
[-105.16100311 303.28469849]
[-95.92804718 290.66381836]
[-80.73038483 286.98074341]
[-74.22212982 273.46621704]
[-67.71387482 259.95166016]
[-61.20561600 246.43713379]
[-54.69736099 232.92260742]
[-54.74645615 232.87701416]
[-54.79542923 232.83129883]
[-67.81123352 240.28709412]
[-80.82704163 247.74287415]
[-93.84284973 255.19866943]
[-106.85865021 262.65444946]
[-114.98749542 276.22769165]
[-129.87705994 275.83999634]
[-142.89286804 283.29577637]
[-155.90866089 290.75158691]
[-168.92446899 298.20736694]
[-181.94027710 305.66314697]
[-194.95608521 313.11895752]
[-207.97189331 320.57473755]
[-212.21716309 335.56192017]
[-225.52325439 342.93771362]
[-239.78506470 338.79815674]
[-252.80087280 346.25393677]
[-256.70080566 361.56948853]
[-270.33068848 369.56961060]
[-285.60415649 365.50793457]
[-293.45971680 351.79425049]
[-289.23681641 336.56457520]
[-275.44082642 328.85446167]
[-260.25665283 333.23812866]
[-247.24085999 325.78234863]
[-243.59695435 311.38589478]
[-230.50328064 303.63925171]
[-215.42767334 307.55892944]
[-202.41188049 300.10314941]
[-189.39607239 292.64733887]
[-176.38026428 285.19155884]
[-163.36445618 277.73577881]
[-150.34864807 270.27996826]
[-137.33283997 262.82418823]
[-130.13497925 249.78425598]
[-114.31443787 249.63865662]
[-101.29863739 242.18286133]
[-88.28282928 234.72708130]
[-75.26702118 227.27128601]
[-62.25121689 219.81549072]
[-61.36312485 204.77307129]
[-52.08535004 192.69889832]
[-37.47816086 187.86753845]
[-22.52583885 192.11488342]
[-10.99158192 182.52525330]
[0.54267597 172.93563843]
[12.07693386 163.34600830]
[23.61119080 153.75637817]
[35.14545059 144.16676331]
[46.67970657 134.57713318]
[58.21396637 124.98751068]
[69.74822235 115.39788818]
[81.28247833 105.80825806]
[80.44142151 90.83185577]
[67.90599060 82.59395599]
[55.37056351 74.35605621]
[42.83513260 66.11815643]
[30.29970360 57.88026047]
[17.76427460 49.64236069]
[5.22884369 41.40446091]
[-7.30658674 33.16656113]
[-19.84201622 24.92866135]
[-32.46081924 16.81904793]
[-45.16168213 8.83856773]
[-60.96311569 8.04779243]
[-67.62311554 -5.27488375]
[-80.32397461 -13.25536442]
[-93.02484131 -21.23584557]
[-101.90598297 -23.13558006]
[-105.81396484 -29.36305809]
[-118.43276978 -37.47266769]
[-131.05157471 -45.58228302]
[-147.64520264 -49.05905914]
[-148.89787292 -65.96666718]
[-132.99778748 -71.85086823]
[-122.94196320 -58.20108414]
[-110.32315826 -50.09147263]
[-97.70435333 -41.98186111]
[-85.04435730 -33.93671036]
[-72.34349060 -25.95622826]
[-59.64263153 -17.97574615]
[-44.74964905 -17.75578880]
[-37.18120193 -3.86229539]
[-24.48033905 4.11818552]
[-19.75340271 3.96193528]
[-14.86874294 6.73892736]
[-11.60411739 12.39323044]
[0.93131304 20.63113022]
[13.46674347 28.86903000]
[26.00217247 37.10692978]
[38.53760529 45.34482956]
[51.07303238 53.58272934]
[63.60846329 61.82062912]
[76.14389038 70.05852509]
[88.67932129 78.29642487]
[94.49505615 73.56069183]
[106.12652588 64.08921051]
[111.94226074 59.35346985]
[106.41470337 45.40907669]
[100.88714600 31.46468544]
[95.35958862 17.52029228]
[89.83203125 3.57589841]
[76.64704895 -6.17542601]
[78.76805115 -22.43683434]
[94.01313019 -28.47998428]
[106.69945526 -18.08819962]
[103.77642822 -1.95165956]
[109.30398560 11.99273396]
[114.83154297 25.93712616]
[120.35910034 39.88151932]
[125.88665771 53.82591248]
[119.80671692 75.11203003]
[107.90537262 92.81967163]
[122.56257629 89.63119507]
[137.21978760 86.44271088]
[150.58648682 73.74304962]
[167.08142090 79.79661560]
[181.70533752 76.45880127]
[196.32925415 73.12098694]
[210.95318604 69.78317261]
[225.57710266 66.44535828]
[240.20101929 63.10754395]
[240.94570923 56.38036728]
[242.99272156 49.95057678]
[246.25439453 44.06689835]
[250.59628296 38.95525360]
[255.84262085 34.81011200]
[261.78347778 31.78705978]
[268.18313599 29.99701118]
[274.78939819 29.50212860]
[278.27621460 14.91301537]
[281.76300049 0.32390258]
[276.57327271 -15.23240089]
[287.65155029 -27.32386398]
[303.60150146 -23.51182556]
[308.01513672 -7.71778440]
[296.35211182 3.81070399]
[292.86532593 18.39981651]
[289.37850952 32.98892975]
[300.01913452 41.31208801]
[306.50283813 53.16363144]
[321.46463013 52.09354401]
[336.42642212 51.02345657]
[351.38818359 49.95336914]
[366.34997559 48.88328171]
[381.31176758 47.81319427]
[396.26788330 46.66681290]
[411.21798706 45.44417572]
[426.16806030 44.22153473]
[441.11816406 42.99889755]
[456.06823730 41.77625656]
[464.26583862 22.61287689]
[483.00750732 11.65232468]
[505.45568848 14.08650875]
[522.69165039 29.98444366]
[537.12640381 25.90547562]
[551.56115723 21.82650566]
[565.99591064 17.74753761]
[579.44909668 2.69065499]
[597.95989990 8.37993240]
[612.30841064 4.00736427]
[626.65698242 -0.36520401]
[634.13079834 -14.03195667]
[648.74450684 -18.26196289]
[661.72760010 -11.05261707]
[676.07617188 -15.42518520]
[690.40222168 -19.87087440]
[704.70544434 -24.38956642]
[706.00213623 -40.43934250]
[713.35046387 -54.72349167]
[725.59509277 -65.06108856]
[740.83563232 -69.88661957]
[756.72174072 -68.48703003]
[770.81536865 -61.10689163]
[780.96508789 -48.90633774]
[795.22143555 -53.57068634]
[809.47778320 -58.23503494]
[820.18786621 -69.88000488]
[834.69012451 -66.48391724]
[848.94647217 -71.14826202]
[863.20281982 -75.81260681]
[870.12463379 -90.02050018]
[885.09265137 -95.09347534]
[899.22656250 -88.02184296]
[904.14099121 -73.00106049]
[896.92028809 -58.94270706]
[881.84844971 -54.18734360]
[867.86718750 -61.55624771]
[853.61083984 -56.89189911]
[839.35449219 -52.22755051]
[829.66412354 -40.91620636]
[814.14215088 -43.97867203]
[799.88580322 -39.31432343]
[785.62939453 -34.64997482]
[785.09527588 -20.65280533]
[779.81188965 -7.64786577]
[770.39300537 2.80029678]
[757.95098877 9.42726612]
[743.96582031 11.42175198]
[730.10894775 8.52486134]
[718.04333496 1.06350338]
[709.22412109 -10.08637047]
[694.92089844 -5.56767750]
[689.51733398 -0.58220136]
[680.44873047 -1.07664359]
[666.10021973 3.29592443]
[659.34411621 16.52057076]
[644.85498047 21.15937805]
[631.02954102 13.98333740]
[616.68103027 18.35590553]
[602.33245850 22.72847366]
[598.38995361 32.08767319]
[589.78057861 37.87644958]
[579.18780518 38.00153351]
[570.07489014 32.18228531]
[555.64013672 36.26125717]
[541.20538330 40.34022522]
[526.77062988 44.41919327]
[524.71166992 59.27721024]
[537.49322510 67.12773132]
[550.27484131 74.97824860]
[563.39587402 67.09807587]
[578.67675781 66.22975159]
[592.60601807 72.57280731]
[601.98278809 84.66967010]
[604.65246582 99.74055481]
[600.00146484 114.32228851]
[589.09863281 125.06409454]
[574.44927979 129.49758911]
[559.41979980 126.60397339]
[547.46380615 117.04819489]
[541.32873535 103.02609253]
[542.42431641 87.75984955]
[529.64270020 79.90933228]
[516.86114502 72.05880737]
[505.97848511 79.48812866]
[493.51507568 82.63238525]
[481.05279541 81.32093811]
[470.09680176 75.93482208]
[461.89385986 67.33367157]
[457.29089355 56.72634506]
[442.34078979 57.94898605]
[427.39071655 59.17162323]
[412.44061279 60.39426422]
[397.49053955 61.61690140]
[391.11303711 65.27497101]
[382.38183594 62.77497482]
[367.42007446 63.84506226]
[352.45828247 64.91514587]
[337.49649048 65.98523712]
[322.53472900 67.05532837]
[307.57293701 68.12541199]
[298.20239258 86.89821625]
[279.40167236 96.50107574]
[258.44363403 93.04635620]
[243.53883362 77.73146057]
[228.91491699 81.06927490]
[214.29098511 84.40708923]
[199.66706848 87.74490356]
[185.04315186 91.08271790]
[170.41923523 94.42053223]
[163.74540710 104.47091675]
[151.62835693 107.39346313]
[140.40826416 101.09991455]
[125.75105286 104.28839874]
[111.09385681 107.47687531]
[126.03245544 108.83266449]
[139.02447510 116.32984161]
[147.67326355 128.58538818]
[150.38339233 143.33853149]
[146.65490723 157.86775208]
[137.17562866 169.49285889]
[123.69416809 176.06936646]
[108.69747162 176.38410950]
[94.95197296 170.37901306]
[84.99329376 159.16184998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 84]
[3 83]
[4 82]
[5 81]
[6 80]
[7 79]
[8 78]
[9 77]
[10 76]
[11 75]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[32 71]
[33 70]
[34 69]
[35 68]
[36 67]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[47 56]
[48 55]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 115]
[95 114]
[97 112]
[98 111]
[99 110]
[101 109]
[102 108]
[103 107]
[129 142]
[130 141]
[131 140]
[132 139]
[133 138]
[144 297]
[145 296]
[146 295]
[148 292]
[149 291]
[150 290]
[151 289]
[152 288]
[153 287]
[161 170]
[162 169]
[163 168]
[172 283]
[173 282]
[174 281]
[175 280]
[176 279]
[177 278]
[178 276]
[179 275]
[180 274]
[181 273]
[182 272]
[186 249]
[187 248]
[188 247]
[189 246]
[191 242]
[192 241]
[193 240]
[196 237]
[197 236]
[198 234]
[199 233]
[206 225]
[207 224]
[208 223]
[210 221]
[211 220]
[212 219]
[250 266]
[251 265]
[252 264]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
