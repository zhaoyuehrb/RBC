%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCAGCUGUCCCCUCCCCUUUCCUCCCGCCUGAAACAUGAUCCAGCUGAAGGACUGAUUGCAGGAAAACUUGGCAGCUCCCCAACCUUGGUGGCCCAGGGAGUGUGAGGCUGCAGCCUCAGAAGGUGUGAGCAGUGGCCACGAGAGGCAGGCUGGCUGGGACAUGAGGUUGGCAGAGGGCAGGCAAGCUGGCCCUUGGUGGGCCUCGUCCUGAGCACUCGGAGGCACUCCU\
) } def
/len { sequence length } bind def

/coor [
[61.75449371 129.81710815]
[53.48322296 117.30366516]
[55.73828506 102.47414398]
[67.35539246 92.98505402]
[82.33847809 93.73646545]
[69.88043213 85.38199615]
[57.42239380 77.02751923]
[44.96435165 68.67304993]
[32.50630951 60.31857681]
[17.19196701 63.16613770]
[4.67675400 54.51604462]
[2.05641723 39.89860916]
[-10.40162373 31.54413605]
[-26.17256927 30.28403282]
[-32.43362427 16.76928139]
[-44.89166641 8.41481018]
[-57.34970474 0.06033742]
[-70.02755737 -7.95664978]
[-82.91607666 -15.63037300]
[-95.85581970 -23.21740532]
[-108.84619904 -30.71740532]
[-119.15266418 -27.30452156]
[-129.42662048 -30.06161499]
[-136.34793091 -37.84828186]
[-137.81767273 -47.94055939]
[-150.60202026 -55.78662109]
[-163.38635254 -63.63268661]
[-179.19525146 -64.25673676]
[-185.99540710 -77.50841522]
[-198.77975464 -85.35447693]
[-211.56408691 -93.20053864]
[-224.34843445 -101.04660034]
[-237.13276672 -108.89266205]
[-227.07609558 -97.76327515]
[-224.24874878 -83.03215027]
[-229.47048950 -68.97037506]
[-241.22734070 -59.65498352]
[-256.11056519 -57.78684998]
[-269.80493164 -63.90760803]
[-278.33999634 -76.24263000]
[-279.24108887 -91.21554565]
[-272.24697876 -104.48513794]
[-259.38784790 -112.20343781]
[-273.90246582 -108.41850281]
[-288.41708374 -104.63356018]
[-294.95690918 -90.42916107]
[-309.11907959 -83.79844666]
[-324.21670532 -87.87223816]
[-333.12112427 -100.72702026]
[-331.62796021 -116.29315186]
[-320.44219971 -127.22077942]
[-304.84545898 -128.35021973]
[-292.20202637 -119.14818573]
[-277.68740845 -122.93312073]
[-263.17279053 -126.71806335]
[-258.90289307 -141.09748840]
[-268.99957275 -152.19059753]
[-279.09625244 -163.28372192]
[-289.19293213 -174.37683105]
[-299.43762207 -185.33338928]
[-309.82849121 -196.15142822]
[-320.21936035 -206.96946716]
[-330.61022949 -217.78749084]
[-341.00109863 -228.60552979]
[-351.39196777 -239.42356873]
[-354.20849609 -224.69036865]
[-367.41860962 -217.58454895]
[-381.26425171 -223.35501099]
[-385.51791382 -237.73925781]
[-377.03750610 -250.11190796]
[-362.08657837 -251.33325195]
[-371.72839355 -262.82391357]
[-381.37020874 -274.31460571]
[-396.16790771 -279.91268921]
[-398.42172241 -294.63580322]
[-408.06353760 -306.12646484]
[-417.70535278 -317.61712646]
[-425.60543823 -322.16989136]
[-427.39822388 -329.32739258]
[-436.88488770 -340.94647217]
[-446.37158203 -352.56555176]
[-455.85824585 -364.18460083]
[-465.34494019 -375.80368042]
[-482.22570801 -374.62350464]
[-496.34030151 -383.65301514]
[-502.22702026 -399.16281128]
[-497.74887085 -414.96356201]
[-507.39068604 -426.45422363]
[-523.18304443 -429.27923584]
[-530.69372559 -443.45559692]
[-524.16119385 -458.10842896]
[-508.59658813 -461.99731445]
[-495.93981934 -452.13903809]
[-495.90002441 -436.09603882]
[-486.25820923 -424.60537720]
[-473.09289551 -426.76882935]
[-460.47509766 -422.11090088]
[-451.73388672 -411.74661255]
[-449.23150635 -398.31121826]
[-453.72586060 -385.29037476]
[-444.23916626 -373.67129517]
[-434.75250244 -362.05221558]
[-425.26580811 -350.43313599]
[-415.77914429 -338.81408691]
[-406.21466064 -327.25894165]
[-396.57284546 -315.76828003]
[-386.93103027 -304.27761841]
[-372.82299805 -299.50140381]
[-369.87954712 -283.95642090]
[-360.23773193 -272.46572876]
[-350.59591675 -260.97506714]
[-340.57391357 -249.81443787]
[-330.18304443 -238.99639893]
[-319.79217529 -228.17835999]
[-309.40133667 -217.36032104]
[-299.01046753 -206.54228210]
[-288.61959839 -195.72425842]
[-283.96249390 -194.73327637]
[-279.87295532 -190.81600952]
[-278.09982300 -184.47349548]
[-268.00314331 -173.38038635]
[-257.90646362 -162.28727722]
[-247.80979919 -151.19416809]
[-230.69200134 -139.29570007]
[-229.28669739 -121.67700195]
[-216.50236511 -113.83094025]
[-203.71803284 -105.98487854]
[-190.93368530 -98.13881683]
[-178.14935303 -90.29275513]
[-163.25488281 -90.22991180]
[-155.54029846 -76.41702271]
[-142.75595093 -68.57096100]
[-129.97161865 -60.72489929]
[-110.64627838 -61.60443115]
[-101.34619904 -43.70778656]
[-88.35581970 -36.20778656]
[-81.00341797 -35.58638763]
[-75.24235535 -28.51889420]
[-62.35383606 -20.84517097]
[-59.61969376 -21.39105225]
[-56.50616074 -20.89555931]
[-53.40562057 -19.20941162]
[-50.75704193 -16.32687187]
[-48.99523544 -12.39770412]
[-36.53719330 -4.04323149]
[-24.07915115 4.31124067]
[-9.19928837 4.97377634]
[-2.04715180 19.08609390]
[10.41088963 27.44056702]
[24.92896652 24.31630325]
[37.68220520 32.61145401]
[40.86078262 47.86053467]
[53.31882477 56.21500778]
[65.77686310 64.56948090]
[78.23490906 72.92395020]
[90.69294739 81.27842712]
[136.49417114 75.52021027]
[150.78471375 80.07878113]
[165.07524109 84.63735962]
[179.39605713 89.09990692]
[193.74650574 93.46622467]
[208.09695435 97.83253479]
[222.44740295 102.19884491]
[236.79783630 106.56516266]
[243.28811646 105.44810486]
[248.58030701 107.46349335]
[251.47209167 111.24613953]
[265.70013428 115.99615479]
[279.92819214 120.74617767]
[294.15621948 125.49620056]
[308.38427734 130.24621582]
[322.61230469 134.99623108]
[338.15243530 132.02719116]
[347.77456665 143.39663696]
[362.00262451 148.14665222]
[377.54272461 145.17761230]
[387.16485596 156.54704285]
[401.39291382 161.29705811]
[415.62094116 166.04708862]
[429.84899902 170.79710388]
[444.07705688 175.54711914]
[458.30508423 180.29713440]
[472.56469727 184.95153809]
[486.85522461 189.51011658]
[501.71267700 183.45732117]
[515.63739014 191.42485046]
[517.94757080 207.30068970]
[506.87100220 218.90628052]
[490.90472412 217.33877563]
[482.29666138 203.80065918]
[468.00613403 199.24208069]
[460.69024658 200.20220947]
[453.55508423 194.52519226]
[439.32702637 189.77516174]
[425.09896851 185.02514648]
[410.87094116 180.27513123]
[396.64288330 175.52511597]
[382.41482544 170.77508545]
[367.89239502 174.08387756]
[357.25259399 162.37469482]
[343.02453613 157.62467957]
[328.50210571 160.93347168]
[317.86230469 149.22428894]
[303.63424683 144.47425842]
[289.40621948 139.72424316]
[275.17816162 134.97422791]
[260.95010376 130.22419739]
[246.72206116 125.47418213]
[232.43153381 120.91560364]
[218.08108521 116.54929352]
[203.73063660 112.18298340]
[189.38018799 107.81666565]
[175.02973938 103.45035553]
[167.72741699 104.50861359]
[160.51666260 98.92789459]
[146.22613525 94.36931610]
[131.93559265 89.81074524]
[126.32176971 94.78416443]
[136.26843262 106.01197815]
[125.04046631 115.95846558]
[115.09410858 104.73100281]
[109.48027802 109.70442200]
[112.28308105 124.44023895]
[115.08589172 139.17605591]
[117.88869476 153.91186523]
[126.78814697 168.34225464]
[115.38532257 180.88864136]
[100.17263031 173.40463257]
[103.15287781 156.71467590]
[100.35007477 141.97886658]
[97.54726410 127.24304199]
[94.74446106 112.50722504]
[89.56422424 126.58434296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 156]
[6 155]
[7 154]
[8 153]
[9 152]
[12 149]
[13 148]
[15 146]
[16 145]
[17 144]
[18 139]
[19 138]
[20 136]
[21 135]
[25 133]
[26 132]
[27 131]
[29 129]
[30 128]
[31 127]
[32 126]
[33 125]
[43 55]
[44 54]
[45 53]
[56 123]
[57 122]
[58 121]
[59 120]
[60 117]
[61 116]
[62 115]
[63 114]
[64 113]
[65 112]
[71 111]
[72 110]
[73 109]
[75 107]
[76 106]
[77 105]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[87 95]
[88 94]
[157 217]
[158 216]
[159 215]
[160 213]
[161 212]
[162 211]
[163 210]
[164 209]
[167 208]
[168 207]
[169 206]
[170 205]
[171 204]
[172 203]
[174 201]
[175 200]
[177 198]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
[183 191]
[184 190]
[222 232]
[223 231]
[224 230]
[225 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
