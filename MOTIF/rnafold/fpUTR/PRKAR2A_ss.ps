%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCAGCUCGCCUGCCCGUCGGUCCCCGCGGCGGCGGCGGCUGCCCAGUGACAGCGGCGGCGGUGCCAGGUCGGCCGUGGUAGCGUAGGGUUGCGCGGCCCGGAAACGCAGAGCCGGCCAAAGAGCGGCGCGACGUGAGCCGGGGCCGUGCGCGAAGAGACCUCGCGGGCGCGGAGCGAAAGGCCGGCGUGAGUGAGCGCGGAGACAGUGGCCGCCGGCGGCCCAACCCGUCUAUCCCUUCGGCCGCCGCCGGC\
) } def
/len { sequence length } bind def

/coor [
[342.84939575 467.09954834]
[348.07299805 445.89739990]
[339.40640259 433.65444946]
[330.73977661 421.41149902]
[314.41888428 414.92974854]
[312.90652466 396.56481934]
[304.08975220 384.42956543]
[295.27297974 372.29431152]
[286.45620728 360.15905762]
[277.19702148 348.35787964]
[267.50808716 336.90692139]
[257.81918335 325.45593262]
[243.69163513 320.73770142]
[240.68435669 305.20492554]
[230.99543762 293.75396729]
[221.30651855 282.30297852]
[206.48828125 281.32556152]
[196.49920654 269.85067749]
[197.62489319 254.31455994]
[187.93597412 242.86358643]
[178.24705505 231.41261292]
[164.11950684 226.69436646]
[161.11222839 211.16160583]
[151.42330933 199.71063232]
[141.73439026 188.25965881]
[127.60684204 183.54141235]
[124.59957123 168.00865173]
[114.91064453 156.55767822]
[105.22172546 145.10670471]
[90.31384277 143.44691467]
[78.34358215 152.48643494]
[66.37332153 161.52595520]
[54.40306473 170.56547546]
[42.43280792 179.60499573]
[30.46254730 188.64451599]
[24.57216072 203.94926453]
[8.33277702 206.23277283]
[-1.54991758 193.14598083]
[5.09054613 178.15142822]
[21.42302895 176.67425537]
[33.39328766 167.63473511]
[45.36354446 158.59521484]
[57.33380508 149.55569458]
[69.30406189 140.51617432]
[81.27432251 131.47665405]
[79.66982269 124.15029144]
[65.01709747 127.35928345]
[50.36432266 130.56805420]
[47.15578079 115.91522980]
[61.80810165 112.70656586]
[76.46082306 109.49756622]
[74.85633087 102.17120361]
[60.20360184 98.96220398]
[45.55087662 95.75321198]
[30.89815331 92.54421234]
[21.32140160 102.43556213]
[8.21381474 106.27975464]
[-4.97775316 103.17713928]
[-14.83901501 94.04042053]
[-18.87191010 81.32965088]
[-33.48398972 77.94038391]
[-48.09606934 74.55111694]
[-63.28760147 78.97014618]
[-73.93747711 68.55720520]
[-88.54955292 65.16793060]
[-103.16163635 61.77866364]
[-117.77371216 58.38939667]
[-132.38578796 55.00012589]
[-147.01847839 51.70093155]
[-161.67120361 48.49193573]
[-177.12609863 53.97629547]
[-189.42584229 43.12972641]
[-185.91752625 27.11024666]
[-170.21018982 22.39732361]
[-158.46220398 33.83921051]
[-143.80947876 37.04820633]
[-136.62347412 35.41374588]
[-128.99652100 40.38804626]
[-114.38444519 43.77731705]
[-99.77236176 47.16658401]
[-85.16028595 50.55585480]
[-70.54821014 53.94512558]
[-56.40182877 49.28366470]
[-44.70679855 59.93903351]
[-30.09472084 63.32830429]
[-15.48264122 66.71757507]
[-3.41983891 55.56466675]
[13.08016491 53.79184341]
[27.52367973 62.29642105]
[34.10715103 77.89148712]
[48.75987625 81.10048676]
[63.41259766 84.30948639]
[78.06532288 87.51847839]
[89.08799744 77.34495544]
[87.06141663 62.48248291]
[85.03484344 47.62001419]
[83.00826263 32.75754547]
[80.98168182 17.89507675]
[78.95510864 3.03260827]
[76.92852783 -11.82986069]
[74.90194702 -26.69232941]
[72.78385162 -41.54203415]
[70.57433319 -56.37840652]
[56.32284546 -66.54615021]
[53.89618683 -83.54239655]
[64.31439972 -96.76071930]
[61.92226028 -111.56874847]
[59.53012085 -126.37677765]
[45.27070618 -131.90997314]
[35.75822067 -143.75942993]
[33.46927261 -158.68011475]
[38.91960907 -172.64971924]
[50.55217743 -181.95289612]
[48.16003799 -196.76092529]
[45.76790237 -211.56893921]
[43.37576675 -226.37696838]
[29.19263458 -232.44676208]
[20.56153107 -245.23376465]
[20.23661041 -260.65771484]
[28.32155228 -273.79687500]
[42.23648071 -280.45855713]
[57.54119492 -278.51708984]
[69.35201263 -268.59197998]
[73.90014648 -253.85026550]
[69.73430634 -238.99600220]
[58.18379211 -228.76910400]
[60.57593155 -213.96109009]
[62.96806717 -199.15306091]
[65.36020660 -184.34503174]
[79.33036804 -179.17781067]
[88.90207672 -167.63491821]
[91.42762756 -152.75244141]
[86.13002014 -138.51052856]
[74.33815002 -128.76890564]
[76.73028564 -113.96088409]
[79.12242126 -99.15285492]
[90.50985718 -93.15820312]
[96.46201324 -81.52964783]
[94.61138916 -68.40166473]
[85.41070557 -58.58793259]
[87.62023163 -43.75155640]
[91.70248413 -37.61598969]
[89.76441956 -28.71890831]
[91.79099274 -13.85643959]
[93.81757355 1.00602949]
[95.84415436 15.86849785]
[97.87072754 30.73096657]
[99.89730835 45.59343719]
[101.92388916 60.45590591]
[103.95046997 75.31837463]
[118.18749237 80.04141998]
[128.69563293 69.33726501]
[139.20378113 58.63311386]
[149.71192932 47.92895889]
[160.22007751 37.22480774]
[158.53329468 21.67846489]
[167.27705383 8.71387100]
[182.32281494 4.45251274]
[196.56642151 10.90647221]
[203.28248596 25.02838898]
[199.29989624 40.15032196]
[186.49908447 49.13216019]
[170.92422485 47.73295212]
[160.41607666 58.43710709]
[149.90792847 69.14125824]
[139.39979553 79.84541321]
[128.89164734 90.54956055]
[131.92669678 113.77581024]
[116.67269897 135.41778564]
[126.36162567 146.86875916]
[136.05053711 158.31973267]
[150.87110901 163.85702515]
[153.18536377 178.57073975]
[162.87428284 190.02171326]
[172.56320190 201.47268677]
[187.38375854 207.00997925]
[189.69802856 221.72369385]
[199.38694763 233.17466736]
[209.07586670 244.62564087]
[224.58395386 246.08755493]
[234.24676514 257.83850098]
[232.75749207 272.61407471]
[242.44641113 284.06503296]
[252.13533020 295.51602173]
[266.95590210 301.05331421]
[269.27014160 315.76702881]
[278.95907593 327.21798706]
[288.64797974 338.66897583]
[290.78533936 323.82202148]
[302.72619629 314.74371338]
[317.60400391 316.65454102]
[326.86325073 328.45565796]
[325.17941284 343.36083984]
[313.52078247 352.79885864]
[298.59146118 351.34228516]
[307.40823364 363.47753906]
[316.22500610 375.61279297]
[325.04177856 387.74804688]
[337.61862183 390.52526855]
[344.71469116 400.79074097]
[342.98272705 412.74487305]
[351.64935303 424.98785400]
[360.31594849 437.23080444]
[369.05075073 435.85510254]
[377.71905518 437.36657715]
[385.39675903 441.57571411]
[391.27447510 448.00683594]
[394.74295044 455.95184326]
[395.45611572 464.54809570]
[393.36538696 472.87200928]
[388.72201538 480.03829956]
[396.61849976 492.79156494]
[404.51498413 505.54479980]
[412.41146851 518.29809570]
[426.25473022 525.95806885]
[426.37637329 540.85217285]
[434.27285767 553.60540771]
[442.16934204 566.35864258]
[450.06582642 579.11193848]
[457.96231079 591.86517334]
[465.85879517 604.61846924]
[473.75527954 617.37170410]
[481.65176392 630.12493896]
[496.34091187 626.50775146]
[511.42874146 627.60882568]
[525.43713379 633.32025146]
[536.99365234 643.08258057]
[544.96606445 655.93927002]
[548.57342529 670.63085938]
[547.46228027 685.71795654]
[541.74145508 699.72247314]
[531.97137451 711.27246094]
[519.10937500 719.23626709]
[504.41537476 722.83380127]
[489.32901001 721.71252441]
[475.32830811 715.98229980]
[463.78488159 706.20452881]
[455.82968140 693.33715820]
[452.24200439 678.64074707]
[453.37341309 663.55517578]
[459.11300659 649.55828857]
[468.89849854 638.02142334]
[461.00201416 625.26818848]
[453.10552979 612.51495361]
[445.20904541 599.76165771]
[437.31256104 587.00842285]
[429.41607666 574.25512695]
[421.51959229 561.50189209]
[413.62310791 548.74865723]
[400.34469604 542.00085449]
[399.65820312 526.19458008]
[391.76174927 513.44128418]
[383.86526489 500.68804932]
[375.96878052 487.93478394]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[6 198]
[7 197]
[8 196]
[9 195]
[10 188]
[11 187]
[12 186]
[14 184]
[15 183]
[16 182]
[19 179]
[20 178]
[21 177]
[23 175]
[24 174]
[25 173]
[27 171]
[28 170]
[29 169]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[52 93]
[53 92]
[54 91]
[55 90]
[60 86]
[61 85]
[62 84]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 76]
[70 75]
[94 150]
[95 149]
[96 148]
[97 147]
[98 146]
[99 145]
[100 144]
[101 143]
[102 141]
[103 140]
[106 136]
[107 135]
[108 134]
[113 129]
[114 128]
[115 127]
[116 126]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[211 254]
[212 253]
[213 252]
[214 251]
[216 249]
[217 248]
[218 247]
[219 246]
[220 245]
[221 244]
[222 243]
[223 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
