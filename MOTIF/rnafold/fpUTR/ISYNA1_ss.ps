%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCCAGGCGGGGACCCGAUGGCCACGGUGGCUCUGGGUUGUCGGGCCUCGAACCGGGUCUCCAGACGUUGGGCCCCUCCCUCCCAGCGCGGGAGAGGCGGGGAAGGGGGCGGGGCGGGGGAGGGGCCGCAGCGCUUUUCUCCGGAGGUCGCGCGCCCGAGAGCCCGCGCUGUCCGCCGCCGCUGCCUGAGUCGACUCUGCGCCGCCCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[218.85958862 123.14591217]
[211.57928467 116.84111786]
[207.06536865 108.26814270]
[192.06575012 108.16055298]
[177.06613159 108.05296326]
[162.06651306 107.94538116]
[147.06690979 107.83779144]
[132.06729126 107.73020172]
[117.06768036 107.62261200]
[99.51213074 122.86380768]
[74.85740662 109.96545410]
[60.18073273 113.06307983]
[48.27584457 123.48345184]
[34.22509384 118.54121399]
[19.54841995 121.63883972]
[4.87174797 124.73646545]
[-9.80492496 127.83409119]
[-17.54985237 132.66554260]
[-24.71428871 130.86929321]
[-39.43388748 133.75605774]
[-54.15348434 136.64283752]
[-68.87307739 139.52961731]
[-83.59267426 142.41638184]
[-98.31227112 145.30316162]
[-113.03186798 148.18992615]
[-126.61889648 154.54545593]
[-138.26931763 163.99362183]
[-149.91973877 173.44178772]
[-161.57014465 182.88995361]
[-170.06385803 197.56282043]
[-186.51460266 193.46290588]
[-187.12893677 176.52009583]
[-171.01831055 171.23953247]
[-159.36788940 161.79136658]
[-147.71748352 152.34320068]
[-136.06706238 142.89503479]
[-141.33192444 128.84934998]
[-156.32228088 129.38719177]
[-171.31263733 129.92501831]
[-186.30299377 130.46284485]
[-201.29335022 131.00067139]
[-216.28370667 131.53849792]
[-224.99446106 144.24397278]
[-239.34854126 149.32466125]
[-253.77136230 145.02972412]
[-262.79156494 133.20712280]
[-277.78192139 133.74494934]
[-292.77227783 134.28277588]
[-307.76263428 134.82060242]
[-316.31533813 147.76785278]
[-330.85656738 153.18371582]
[-345.79498291 148.98567200]
[-355.38644409 136.78797913]
[-355.94281006 121.28087616]
[-347.25015259 108.42717743]
[-332.65100098 103.16938019]
[-317.75903320 107.52922821]
[-308.30047607 119.83025360]
[-293.31011963 119.29242706]
[-278.31976318 118.75460052]
[-263.32940674 118.21676636]
[-255.17964172 105.77814484]
[-241.10169983 100.46064758]
[-226.42041016 104.49958801]
[-216.82153320 116.54814148]
[-201.83117676 116.01031494]
[-186.84082031 115.47248840]
[-171.85046387 114.93466187]
[-156.86010742 114.39682770]
[-141.86976624 113.85900116]
[-115.91864777 133.47033691]
[-101.19905090 130.58355713]
[-86.47945404 127.69679260]
[-71.75985718 124.81001282]
[-57.04025650 121.92324066]
[-42.32065964 119.03646851]
[-27.60106277 116.14969635]
[-12.90254974 113.15741730]
[1.77412319 110.05979156]
[16.45079613 106.96216583]
[31.12746811 103.86454773]
[41.98258591 93.66573334]
[57.08311081 98.38640594]
[71.75978088 95.28878021]
[78.01768494 81.65651703]
[70.79892731 68.50777435]
[63.58016205 55.35902786]
[56.36140060 42.21028519]
[49.14263916 29.06153870]
[34.20310593 23.21433067]
[29.59782600 7.84647703]
[38.85957718 -5.25312185]
[54.88354111 -6.03557348]
[65.37749481 6.09935141]
[62.29138565 21.84277725]
[69.51014709 34.99152374]
[76.72890472 48.14026642]
[83.94766998 61.28901291]
[91.16642761 74.43775940]
[109.24551392 79.08320618]
[117.17526245 92.62300110]
[132.17488098 92.73059082]
[147.17449951 92.83817291]
[162.17410278 92.94576263]
[177.17372131 93.05335236]
[192.17333984 93.16094208]
[207.17294312 93.26852417]
[221.16978455 77.56835175]
[241.90747070 77.32109833]
[255.87248230 92.25328827]
[270.85357666 91.50048828]
[285.82888794 90.64025116]
[300.79766846 89.67262268]
[315.76641846 88.70499420]
[330.73516846 87.73736572]
[345.70391846 86.76974487]
[360.67266846 85.80211639]
[373.94497681 77.19070435]
[387.14486694 84.09087372]
[402.11364746 83.12324524]
[416.94378662 80.87241364]
[431.52557373 77.35504150]
[443.12664795 66.59745026]
[457.31338501 71.13458252]
[471.89514160 67.61721039]
[483.49621582 56.85962296]
[497.68295288 61.39675522]
[512.26470947 57.87938690]
[526.82092285 54.25751877]
[541.35070801 50.53133774]
[555.88055420 46.80515671]
[568.74194336 33.62309647]
[585.44628906 39.01017380]
[599.92114258 35.07595444]
[614.39599609 31.14173126]
[628.87091064 27.20750999]
[643.34576416 23.27328682]
[657.82061768 19.33906555]
[672.29553223 15.40484333]
[676.21508789 2.19367528]
[686.07141113 -7.28154087]
[699.21704102 -10.62400723]
[712.19342041 -7.06465054]
[721.64080811 2.36411238]
[736.17059326 -1.36206758]
[750.70043945 -5.08824730]
[765.20312500 -8.91854668]
[779.67803955 -12.85276890]
[794.15289307 -16.78699112]
[802.03881836 -30.22015381]
[816.77441406 -34.00381470]
[829.53228760 -26.40299988]
[844.00720215 -30.33722305]
[857.70599365 -40.32619858]
[871.09680176 -29.92799187]
[864.81188965 -14.18199635]
[847.94140625 -15.86235142]
[833.46655273 -11.92812920]
[826.31146240 1.08495784]
[811.68792725 5.28101826]
[798.08709717 -2.31211948]
[783.61224365 1.62210250]
[769.13739014 5.55632448]
[763.51055908 10.34112549]
[754.42663574 9.44156933]
[739.89678955 13.16774940]
[725.36700439 16.89392853]
[719.80932617 32.34318161]
[705.99871826 41.52574921]
[689.27032471 40.65629959]
[676.22973633 29.87971497]
[661.75488281 33.81393814]
[647.27996826 37.74815750]
[632.80511475 41.68238068]
[618.33026123 45.61660385]
[603.85534668 49.55082321]
[589.38049316 53.48504639]
[583.10253906 63.82061386]
[571.08013916 67.21912384]
[559.60675049 61.33497620]
[545.07690430 65.06115723]
[530.54705811 68.78733063]
[524.85217285 73.49092865]
[515.78210449 72.46115875]
[501.20034790 75.97853088]
[490.64224243 86.48453522]
[475.41253662 82.19898987]
[460.83074951 85.71635437]
[450.27267456 96.22236633]
[435.04293823 91.93681335]
[420.46118164 95.45418549]
[427.90005493 104.78615570]
[426.73727417 115.70648193]
[435.41421509 127.94211578]
[444.09115601 140.17774963]
[459.21258545 146.52389526]
[461.00869751 162.82438660]
[447.63177490 172.31068420]
[432.84283447 165.22409058]
[431.85549927 148.85469055]
[423.17855835 136.61904907]
[414.50164795 124.38341522]
[399.77618408 116.14111328]
[403.08126831 98.09200287]
[388.11248779 99.05963135]
[375.91085815 107.60182953]
[361.64031982 100.77087402]
[346.67153931 101.73850250]
[331.70278931 102.70612335]
[316.73403931 103.67375183]
[301.76528931 104.64138031]
[286.79650879 105.60900879]
[280.32827759 109.17516327]
[271.60638428 106.48158264]
[256.62530518 107.23439026]
[252.79655457 115.75522614]
[246.08834839 122.33916473]
[237.39099121 126.05338287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[11 84]
[12 83]
[14 81]
[15 80]
[16 79]
[17 78]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[25 71]
[26 36]
[27 35]
[28 34]
[29 33]
[37 70]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[46 61]
[47 60]
[48 59]
[49 58]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[110 215]
[111 214]
[112 212]
[113 211]
[114 210]
[115 209]
[116 208]
[117 207]
[119 205]
[120 204]
[121 191]
[122 190]
[124 188]
[125 187]
[127 185]
[128 184]
[129 182]
[130 181]
[131 180]
[133 177]
[134 176]
[135 175]
[136 174]
[137 173]
[138 172]
[139 171]
[144 167]
[145 166]
[146 165]
[147 163]
[148 162]
[149 161]
[152 158]
[153 157]
[193 202]
[194 201]
[195 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
