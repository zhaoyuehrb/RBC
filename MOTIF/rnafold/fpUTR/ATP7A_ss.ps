%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCGCGGCGGGGGGUGGGAAAAGAGAAGCAGAGGGAGGAGUUGUUGCUGCCGCCGCCGCAGCCGCAGCUACUGUGACUUCUCCGAUUGUGUGAGCUUUGUUGGAGCCUGCGUACGUGGAUUUAUCGCUGCCACGGUCUGCGUAGCUCCAGAGGUUUAACCAUAGGAUAGAGAAACCAGGAAUGUAAUGAGGAAAUCAAA\
) } def
/len { sequence length } bind def

/coor [
[115.26407623 192.78063965]
[111.56989288 207.31863403]
[115.67018890 222.59927368]
[105.03674316 233.02900696]
[101.34255981 247.56698608]
[97.64837646 262.10498047]
[99.60763550 278.94531250]
[83.96778870 285.48989868]
[73.34944153 272.27297974]
[83.11038971 258.41079712]
[86.80457306 243.87280273]
[90.49875641 229.33482361]
[86.13423157 215.09402466]
[97.03190613 203.62445068]
[100.72608948 189.08645630]
[100.02648926 174.10278320]
[94.99373627 159.97227478]
[89.96098328 145.84175110]
[84.92823792 131.71124268]
[87.44261932 146.49900818]
[82.53381348 160.67304993]
[71.41222382 170.73835754]
[56.82021713 174.21301270]
[42.35587692 170.24024963]
[31.58581543 159.79966736]
[27.16571426 145.46569824]
[30.18547630 130.77279663]
[39.90049362 119.34395599]
[53.91523743 113.99728394]
[68.77282715 116.05068970]
[54.49263000 111.45983124]
[40.21243668 106.86897278]
[25.93223953 102.27811432]
[11.99900055 109.24250031]
[-2.41775060 104.38328552]
[-8.97136021 91.05715179]
[-23.25155640 86.46629333]
[-37.53175354 81.87543488]
[-51.81195068 77.28457642]
[-66.09214783 72.69371796]
[-80.37234497 68.10285950]
[-94.65254211 63.51200104]
[-108.93273926 58.92114258]
[-123.21293640 54.33028412]
[-137.59632874 50.07378387]
[-152.07510376 46.15395355]
[-167.41767883 50.01610947]
[-177.68077087 39.22175217]
[-192.15954590 35.30192184]
[-206.63832092 31.38209343]
[-221.11709595 27.46226501]
[-235.59587097 23.54243469]
[-250.93843079 27.40459061]
[-261.20153809 16.61023331]
[-275.68029785 12.69040394]
[-288.40881348 21.77440071]
[-303.99438477 20.49988556]
[-315.07797241 9.46864414]
[-316.42623901 -6.11070633]
[-307.40258789 -18.88207436]
[-292.26770020 -22.81521034]
[-278.16784668 -16.05300713]
[-271.76046753 -1.78837180]
[-257.28170776 2.13145709]
[-242.97476196 -2.01107001]
[-231.67604065 9.06365967]
[-217.19726562 12.98348904]
[-202.71849060 16.90331841]
[-188.23971558 20.82314682]
[-173.76094055 24.74297523]
[-159.45399475 20.60044861]
[-148.15527344 31.67517853]
[-133.67649841 35.59500504]
[-130.44789124 34.16091156]
[-126.36293030 34.22372818]
[-122.13474274 36.16944885]
[-118.62207794 40.05008698]
[-104.34188080 44.64094543]
[-90.06168365 49.23180389]
[-75.78148651 53.82266235]
[-61.50128937 58.41352463]
[-47.22109222 63.00438309]
[-32.94089508 67.59523773]
[-18.66069794 72.18609619]
[-4.38050127 76.77695465]
[8.71102524 69.76642609]
[23.25857353 74.21878815]
[30.52309799 87.99791718]
[44.80329514 92.58877563]
[59.08349228 97.17963409]
[73.36368561 101.77049255]
[86.41543579 81.12783813]
[107.52006531 81.67200470]
[118.04386902 70.98324585]
[128.56767273 60.29449081]
[139.09147644 49.60572815]
[149.61528015 38.91696930]
[160.13908386 28.22821045]
[170.66288757 17.53945160]
[181.18667603 6.85069180]
[183.21849060 0.54686993]
[187.49037170 -3.21500206]
[192.20790100 -4.00043917]
[203.05903625 -14.35674000]
[213.91017151 -24.71303940]
[224.76129150 -35.06933975]
[235.61242676 -45.42564011]
[246.46356201 -55.78194046]
[250.51495361 -63.97703171]
[257.56491089 -66.21329498]
[268.57577515 -76.39958954]
[279.58666992 -86.58588409]
[290.59753418 -96.77217102]
[301.60839844 -106.95846558]
[312.61929321 -117.14476013]
[323.38955688 -127.58512878]
[333.91336060 -138.27388000]
[344.43716431 -148.96264648]
[354.96096802 -159.65141296]
[365.48477173 -170.34016418]
[360.75714111 -184.89723206]
[363.34747314 -199.98194885]
[372.66052246 -212.12797546]
[386.55621338 -218.54421997]
[401.84143066 -217.75630188]
[415.00372314 -209.94525146]
[423.01852417 -196.90602112]
[424.04406738 -181.63490295]
[417.84469604 -167.64111328]
[405.84497070 -158.14030457]
[390.80236816 -155.31568909]
[376.17352295 -159.81636047]
[365.64971924 -149.12760925]
[355.12591553 -138.43884277]
[344.60211182 -127.75008392]
[334.07830811 -117.06132507]
[333.74243164 -113.54454803]
[331.68200684 -110.01672363]
[327.91094971 -107.28862000]
[322.80557251 -106.13388062]
[311.79470825 -95.94758606]
[300.78381348 -85.76129913]
[289.77294922 -75.57500458]
[278.76208496 -65.38871002]
[267.75119019 -55.20241547]
[256.81985474 -44.93080902]
[245.96871948 -34.57450867]
[235.11759949 -24.21820831]
[224.26646423 -13.86190891]
[213.41532898 -3.50560856]
[202.56420898 6.85069180]
[191.87544250 17.37449455]
[181.35163879 28.06325340]
[170.82783508 38.75201416]
[160.30403137 49.44077301]
[149.78022766 60.12953186]
[139.25642395 70.81829071]
[128.73262024 81.50704956]
[118.20882416 92.19580841]
[119.18390656 113.14064789]
[99.05874634 126.67848969]
[104.09149933 140.80900574]
[109.12425232 154.93951416]
[114.15699768 169.07003784]
[116.51487732 154.25651550]
[113.60694122 139.54107666]
[114.05418396 124.54775238]
[117.83409119 110.03181458]
[124.75622559 96.72452545]
[134.47189331 85.29623413]
[146.49166870 76.32266235]
[160.21003723 70.25584412]
[174.93594360 67.40140533]
[189.92755127 67.90313721]
[204.42965698 71.73576355]
[217.71170044 78.70621490]
[229.10459900 88.46335602]
[238.03443909 100.51565552]
[244.05136108 114.25598145]
[246.85227966 128.99215698]
[246.29606628 143.98184204]
[242.41076660 158.46992493]
[235.39208984 171.72654724]
[225.59361267 183.08392334]
[213.50894165 191.96990967]
[199.74684143 197.93685913]
[185.00057983 200.68418884]
[170.01390076 200.07365417]
[159.80206299 189.08645630]
[163.49624634 203.62445068]
[167.19042969 218.16242981]
[180.18849182 227.56614685]
[180.79656982 243.59767151]
[168.54818726 253.95898438]
[152.83926392 250.70178223]
[145.72033691 236.32469177]
[152.65245056 221.85661316]
[148.95826721 207.31863403]
[145.26408386 192.78063965]
[137.76408386 192.78063965]
[130.26409912 205.77104187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[4 12]
[5 11]
[6 10]
[16 164]
[17 163]
[18 162]
[19 161]
[30 91]
[31 90]
[32 89]
[33 88]
[36 85]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[44 77]
[45 73]
[46 72]
[48 70]
[49 69]
[50 68]
[51 67]
[52 66]
[54 64]
[55 63]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[98 154]
[99 153]
[100 152]
[103 151]
[104 150]
[105 149]
[106 148]
[107 147]
[108 146]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[115 140]
[116 136]
[117 135]
[118 134]
[119 133]
[120 132]
[189 199]
[190 198]
[191 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
