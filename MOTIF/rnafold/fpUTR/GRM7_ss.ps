%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCUGGGCUGUUGGAGAGAGCGAGCAGCAAGCCGGUGAGCGCGAGCGCGGCGCGCCGGCCGGCUAACCCGAGAGCGCGAGGCGCCCCAGGCUGGCAGGCGCCGCGGGACCCCUCACCCUCUCUGGUCGCCCCUCCCCGGAUUCCCCCACCCUCCGUGCCUGCAGGAGCCCCUGGGCUUUCCCGGAGGAGCUCGCCCUGAAGGGCCCGGACCUCGGCGAGCCCACCACCGUUCCCUCCAGCGCCGCCGCCGCCA\
CCGCAGCAGCCGGAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[196.98289490 313.88781738]
[209.26472473 298.22247314]
[202.03842163 285.07788086]
[194.81211853 271.93325806]
[181.90045166 264.50775146]
[182.03242493 248.68708801]
[174.80610657 235.54249573]
[167.57980347 222.39788818]
[160.35350037 209.25329590]
[153.12719727 196.10868835]
[145.90089417 182.96409607]
[138.59962463 169.86097717]
[131.22363281 156.79978943]
[123.84763336 143.73860168]
[80.11846924 105.91802979]
[65.38416290 103.10731506]
[50.37860489 108.12167358]
[39.32659149 98.13656616]
[24.59228325 95.32584381]
[9.85797405 92.51512909]
[-7.40872717 98.96376038]
[-20.21809959 86.94500732]
[-34.98355484 84.30279541]
[-49.74901199 81.66057587]
[-64.51446533 79.01836395]
[-79.46176910 84.20381165]
[-90.62712097 74.34561157]
[-105.39257812 71.70339966]
[-120.15803528 69.06118011]
[-133.03613281 77.82431030]
[-147.97276306 74.93438721]
[-156.24771118 62.60309219]
[-171.01315308 59.96087646]
[-177.29255676 61.82598114]
[-182.76248169 60.46964264]
[-186.08410645 57.08593750]
[-200.78535461 54.10707855]
[-215.48658752 51.12822342]
[-230.18782043 48.14936829]
[-244.88906860 45.17050934]
[-259.59030151 42.19165421]
[-268.12066650 54.74188614]
[-280.77206421 63.04766083]
[-295.59945679 65.86933899]
[-310.33758545 62.80754089]
[-322.74694824 54.35932159]
[-330.95407104 41.83779526]
[-333.73434448 27.16811943]
[-348.43560791 24.18926239]
[-363.13684082 21.21040535]
[-377.83807373 18.23154831]
[-392.53930664 15.25269222]
[-407.24053955 12.27383518]
[-421.94177246 9.29497814]
[-436.64303589 6.31612062]
[-451.37731934 3.50540113]
[-466.14279175 0.86318547]
[-480.90823364 -1.77903020]
[-495.67370605 -4.42124557]
[-510.43914795 -7.06346130]
[-525.20458984 -9.70567703]
[-539.97009277 -12.34789276]
[-554.77862549 -14.73671246]
[-569.62597656 -16.87143517]
[-584.47326660 -19.00615692]
[-592.75054932 -12.02331161]
[-603.28448486 -10.75348568]
[-612.59143066 -15.37470627]
[-617.72546387 -24.15605164]
[-632.52014160 -26.62941933]
[-647.32867432 -29.01823807]
[-662.15063477 -31.32243347]
[-674.76049805 -21.79525566]
[-690.40197754 -24.05775452]
[-699.79534912 -36.76763153]
[-697.36755371 -52.38433838]
[-684.55908203 -61.64276505]
[-668.96893311 -59.05004883]
[-659.84643555 -46.14439774]
[-645.02447510 -43.84020615]
[-637.95928955 -45.91007614]
[-630.04675293 -41.42409515]
[-615.25207520 -38.95072937]
[-597.64904785 -47.00416565]
[-582.33856201 -33.85347748]
[-567.49121094 -31.71875572]
[-552.64392090 -29.58403397]
[-549.63977051 -31.36115265]
[-545.63513184 -31.79288483]
[-541.26190186 -30.42879677]
[-537.32788086 -27.11334801]
[-522.56237793 -24.47113228]
[-507.79693604 -21.82891846]
[-493.03149414 -19.18670273]
[-478.26602173 -16.54448700]
[-463.50057983 -13.90227032]
[-448.73510742 -11.26005554]
[-444.40112305 -13.18337250]
[-438.81600952 -12.43085194]
[-433.66415405 -8.38511753]
[-418.96292114 -5.40626049]
[-404.26168823 -2.42740369]
[-389.56045532 0.55145341]
[-374.85922241 3.53031039]
[-360.15798950 6.50916719]
[-345.45672607 9.48802471]
[-330.75549316 12.46688175]
[-322.48406982 0.03657591]
[-310.05001831 -8.30251217]
[-295.33084106 -11.25377464]
[-280.56329346 -8.33695030]
[-268.00384521 0.03403086]
[-259.58355713 12.60947704]
[-256.61145020 27.49041367]
[-241.91020203 30.46927071]
[-227.20896912 33.44812775]
[-212.50773621 36.42698669]
[-197.80648804 39.40584183]
[-183.10525513 42.38470078]
[-168.37094116 45.19541931]
[-153.60548401 47.83763504]
[-141.56771851 39.14120483]
[-126.55581665 41.61045074]
[-117.51582336 54.29572678]
[-102.75036621 56.93794250]
[-87.98490906 59.58015823]
[-74.09373474 54.20571899]
[-61.87225342 64.25290680]
[-47.10679626 66.89511871]
[-32.34133911 69.53733826]
[-17.57588387 72.17955017]
[-7.49699783 65.53359222]
[4.80579472 67.58771515]
[12.66869354 77.78081512]
[27.40300179 80.59153748]
[42.13731003 83.40225983]
[56.08897400 78.18685913]
[68.19488525 88.37300110]
[82.92919159 91.18372345]
[95.21373749 82.57617950]
[97.60256195 67.76761627]
[88.14756012 55.10354996]
[90.49936676 39.47522354]
[103.26269531 30.15464783]
[118.86528015 32.67155457]
[128.05039978 45.53270721]
[125.36866760 61.10781097]
[112.41112518 70.15643311]
[110.02230072 84.96499634]
[116.23741913 89.16288757]
[124.63341522 76.73279572]
[137.06336975 85.12899017]
[128.66766357 97.55867767]
[134.88278198 101.75656891]
[147.72801208 94.01060486]
[160.57324219 86.26464081]
[173.41848755 78.51868439]
[181.24072266 64.76647949]
[196.13523865 64.81997681]
[208.98046875 57.07401276]
[221.82571411 49.32805252]
[234.67094421 41.58209229]
[243.21873474 25.25238991]
[260.77935791 25.64635277]
[273.53524780 17.75415611]
[286.29116821 9.86195946]
[299.04708862 1.96976280]
[311.66586304 -6.13984919]
[324.14385986 -14.46449566]
[336.62185669 -22.78914261]
[349.05209351 -31.18492699]
[361.43417358 -39.65157318]
[373.76770020 -48.18881226]
[386.05224609 -56.79635620]
[398.33679199 -65.40390015]
[410.62133789 -74.01144409]
[422.90588379 -82.61898804]
[429.33752441 -97.70429230]
[445.64791870 -99.40809631]
[455.05834961 -85.97769165]
[447.88815308 -71.22911072]
[431.51342773 -70.33444214]
[419.22888184 -61.72689819]
[406.94433594 -53.11935043]
[394.65979004 -44.51180649]
[382.37524414 -35.90426254]
[378.71456909 -29.51668358]
[369.90081787 -27.26949692]
[357.51873779 -18.80284882]
[353.78533936 -12.45750523]
[344.94650269 -10.31115055]
[332.46850586 -1.98650467]
[319.99050903 6.33814192]
[318.94079590 9.66696167]
[316.24795532 12.66231060]
[312.08163452 14.56690979]
[306.93927002 14.72567272]
[294.18334961 22.61786842]
[281.42745972 30.51006699]
[268.67153931 38.40226364]
[265.60626221 50.07945251]
[255.07626343 56.76507950]
[242.41690063 54.42732620]
[229.57167053 62.17328644]
[216.72644043 69.91925049]
[203.88119507 77.66521454]
[196.97773743 90.86337280]
[181.16444397 91.36391449]
[168.31921387 99.10987854]
[155.47396851 106.85584259]
[142.62873840 114.60179901]
[157.58270264 113.42743683]
[167.20074463 124.93799591]
[163.38751221 139.44520569]
[149.35253906 144.73854065]
[136.90882874 136.36260986]
[144.28482056 149.42379761]
[151.66081238 162.48498535]
[158.57875061 168.39042664]
[159.04548645 175.73779297]
[166.27180481 188.88238525]
[173.49810791 202.02699280]
[180.72441101 215.17158508]
[187.95071411 228.31619263]
[195.17701721 241.46078491]
[208.60554504 249.82649231]
[207.95671082 264.70697021]
[215.18301392 277.85156250]
[222.40931702 290.99615479]
[232.70811462 288.82653809]
[243.21508789 289.15496826]
[253.33372498 291.95681763]
[262.49093628 297.06710815]
[270.16958618 304.19039917]
[275.93768311 312.91769409]
[279.47265625 322.75000000]
[280.57940674 333.12686157]
[279.20108032 343.45831299]
[275.42190552 353.15838623]
[269.46212769 361.67837524]
[261.66519165 368.53781128]
[267.97427368 382.14648438]
[280.79827881 391.41226196]
[279.13180542 406.21334839]
[285.44088745 419.82202148]
[291.82757568 433.39440918]
[298.29168701 446.93011475]
[311.22070312 456.04879761]
[309.72341919 470.86798096]
[316.18753052 484.40368652]
[329.11657715 493.52236938]
[327.61929321 508.34152222]
[334.08340454 521.87719727]
[347.90170288 530.70825195]
[346.89273071 547.07629395]
[332.09448242 554.14337158]
[318.73007202 544.63940430]
[320.54769897 528.34130859]
[314.08358765 514.80560303]
[301.61691284 506.65509033]
[302.65182495 490.86776733]
[296.18771362 477.33209229]
[283.72103882 469.18154907]
[284.75598145 453.39422607]
[278.29187012 439.85852051]
[272.59533691 435.19473267]
[271.83221436 426.13107300]
[265.52316284 412.52239990]
[253.15039062 404.23001099]
[254.36560059 388.45553589]
[248.05653381 374.84686279]
[228.40640259 375.61111450]
[210.37484741 367.64413452]
[197.64671326 352.52767944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 229]
[3 228]
[4 227]
[6 225]
[7 224]
[8 223]
[9 222]
[10 221]
[11 220]
[12 218]
[13 217]
[14 216]
[15 139]
[16 138]
[18 136]
[19 135]
[20 134]
[22 131]
[23 130]
[24 129]
[25 128]
[27 126]
[28 125]
[29 124]
[32 121]
[33 120]
[36 119]
[37 118]
[38 117]
[39 116]
[40 115]
[41 114]
[48 107]
[49 106]
[50 105]
[51 104]
[52 103]
[53 102]
[54 101]
[55 100]
[56 97]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[62 91]
[63 87]
[64 86]
[65 85]
[69 83]
[70 82]
[71 80]
[72 79]
[140 149]
[141 148]
[154 211]
[155 210]
[156 209]
[157 208]
[159 206]
[160 205]
[161 204]
[162 203]
[164 200]
[165 199]
[166 198]
[167 197]
[168 193]
[169 192]
[170 191]
[171 189]
[172 188]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
[241 271]
[242 270]
[244 268]
[245 267]
[246 265]
[247 264]
[249 262]
[250 261]
[252 259]
[253 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
