%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYBB)
} def

/sequence { (\
AUUGGAAGAAGAAGCAUAGUAUAGAAGAAAGGCAAACACAACACAUUCAACCUCUGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.029868724 ubox
1 20 0.119792573 ubox
1 22 0.020016765 ubox
2 8 0.013377087 ubox
2 9 0.073319071 ubox
2 10 0.078183736 ubox
2 11 0.052666636 ubox
2 12 0.052380000 ubox
2 13 0.091436256 ubox
2 14 0.029155198 ubox
2 16 0.023770695 ubox
2 19 0.124456378 ubox
2 21 0.020730335 ubox
2 24 0.019666102 ubox
2 25 0.019592272 ubox
2 26 0.020920869 ubox
2 27 0.011026549 ubox
2 28 0.016747734 ubox
2 29 0.019449972 ubox
2 30 0.018419435 ubox
2 35 0.008146889 ubox
2 41 0.007659351 ubox
2 50 0.016281255 ubox
3 7 0.015074876 ubox
3 8 0.077260862 ubox
3 9 0.089081088 ubox
3 10 0.076375804 ubox
3 11 0.055856108 ubox
3 12 0.104828561 ubox
3 13 0.037932018 ubox
3 16 0.187094070 ubox
3 18 0.124248526 ubox
3 21 0.022852462 ubox
3 23 0.028743590 ubox
3 24 0.020657920 ubox
3 25 0.023644342 ubox
3 26 0.015885740 ubox
3 27 0.017712423 ubox
3 28 0.022019185 ubox
3 29 0.020794420 ubox
3 30 0.010742777 ubox
3 34 0.009363526 ubox
3 38 0.004154056 ubox
3 40 0.009197597 ubox
3 43 0.006390959 ubox
3 45 0.006352804 ubox
3 49 0.019530687 ubox
3 56 0.015510975 ubox
3 59 0.299156134 ubox
4 15 0.208455254 ubox
4 17 0.121659664 ubox
4 20 0.024641456 ubox
4 22 0.029088903 ubox
4 33 0.009553299 ubox
4 37 0.004685634 ubox
4 39 0.009430228 ubox
4 42 0.007186703 ubox
4 44 0.007059511 ubox
4 48 0.019880516 ubox
4 52 0.055243857 ubox
4 53 0.003271675 ubox
4 55 0.026285494 ubox
4 58 0.337523917 ubox
4 61 0.036683905 ubox
5 47 0.019344587 ubox
5 48 0.011091689 ubox
5 51 0.055292336 ubox
5 52 0.003651730 ubox
5 54 0.027238476 ubox
5 57 0.336254259 ubox
5 60 0.036999213 ubox
6 46 0.018101760 ubox
6 47 0.011398246 ubox
6 53 0.025348945 ubox
7 46 0.011212163 ubox
7 53 0.029090776 ubox
7 55 0.294536199 ubox
8 48 0.057525615 ubox
8 52 0.031303905 ubox
8 54 0.331847454 ubox
9 47 0.057523743 ubox
9 53 0.297627887 ubox
10 46 0.056378642 ubox
10 47 0.006223918 ubox
10 53 0.119068401 ubox
10 55 0.025777415 ubox
11 46 0.004995898 ubox
11 47 0.006659687 ubox
11 48 0.189820945 ubox
11 52 0.166308784 ubox
11 54 0.027634738 ubox
12 46 0.007147404 ubox
12 47 0.190231592 ubox
12 53 0.024457472 ubox
13 46 0.185097461 ubox
13 47 0.010357473 ubox
13 53 0.014587536 ubox
13 55 0.004004650 ubox
14 20 0.140270236 ubox
14 33 0.082730098 ubox
14 46 0.009607040 ubox
14 52 0.021999565 ubox
14 54 0.004190352 ubox
14 57 0.163256236 ubox
15 19 0.142549786 ubox
15 32 0.082732240 ubox
15 56 0.163903756 ubox
16 22 0.028847815 ubox
16 46 0.050991045 ubox
16 55 0.160380027 ubox
17 21 0.027128540 ubox
17 23 0.035105132 ubox
17 45 0.053133987 ubox
17 56 0.018222117 ubox
18 22 0.032886753 ubox
18 47 0.017919565 ubox
18 53 0.147891616 ubox
18 55 0.022966850 ubox
19 33 0.029930126 ubox
19 37 0.048670141 ubox
19 39 0.074470391 ubox
19 42 0.087559519 ubox
19 44 0.084692374 ubox
19 46 0.019885861 ubox
19 51 0.074809970 ubox
19 52 0.148172506 ubox
19 54 0.026511707 ubox
19 57 0.030894463 ubox
19 60 0.050069274 ubox
20 32 0.029598637 ubox
20 36 0.047607559 ubox
20 38 0.071636428 ubox
20 41 0.085212767 ubox
20 43 0.081451290 ubox
20 45 0.019502396 ubox
20 50 0.080249002 ubox
20 56 0.030628678 ubox
20 59 0.049616317 ubox
21 46 0.005862572 ubox
21 55 0.027518942 ubox
22 45 0.005844382 ubox
22 56 0.040498465 ubox
23 47 0.006538782 ubox
23 53 0.027238515 ubox
23 55 0.045324832 ubox
24 46 0.004931745 ubox
24 47 0.011943532 ubox
24 48 0.175239826 ubox
24 52 0.028954953 ubox
24 54 0.046578015 ubox
25 46 0.011776850 ubox
25 47 0.174997953 ubox
25 53 0.039402847 ubox
26 46 0.169759684 ubox
26 47 0.004096572 ubox
26 53 0.017674128 ubox
26 55 0.036967395 ubox
27 46 0.003751773 ubox
27 47 0.004216899 ubox
27 48 0.049169416 ubox
27 52 0.024768548 ubox
27 54 0.039120460 ubox
28 46 0.004694839 ubox
28 47 0.048597892 ubox
28 53 0.031035146 ubox
29 46 0.042917276 ubox
29 47 0.008756962 ubox
30 46 0.010454171 ubox
30 47 0.005072658 ubox
30 53 0.070209305 ubox
30 55 0.006669528 ubox
31 46 0.005952024 ubox
31 47 0.003629723 ubox
31 48 0.015585789 ubox
31 52 0.100984926 ubox
31 54 0.006966792 ubox
31 58 0.918257583 ubox
31 61 0.005481880 ubox
32 46 0.003381257 ubox
32 47 0.012344686 ubox
32 51 0.100724028 ubox
32 52 0.004438668 ubox
32 53 0.005355882 ubox
32 57 0.919218373 ubox
32 60 0.005260561 ubox
33 56 0.919105410 ubox
34 47 0.020352133 ubox
34 55 0.860059258 ubox
35 46 0.022890610 ubox
35 47 0.033750336 ubox
36 46 0.030372033 ubox
37 56 0.005429255 ubox
38 55 0.007121191 ubox
39 56 0.005800697 ubox
40 47 0.085471420 ubox
40 55 0.006602729 ubox
41 46 0.072869526 ubox
42 56 0.005763442 ubox
43 55 0.005936760 ubox
44 56 0.007256511 ubox
45 55 0.007350982 ubox
48 56 0.009211661 ubox
49 55 0.009955902 ubox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
showpage
end
%%EOF
