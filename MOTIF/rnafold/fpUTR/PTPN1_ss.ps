%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUCUGCUUCAGGGGCGGAGCCCCUGGCAGGCGUGAUGCGUAGUUCCGGCUGCCGGUUGACAUGAAGAAGCAGCAGCGGCUAGGGCGGCGGUAGCUGCAGGGGUCGGGGAUUGCAGCGGGCCUCGGGGCUAAGAGCGCGACGCGGCCUAGAGCGGCAGACGGCGCAGUGGGCCGAGAAGGAGGCGCAGCAGCCGCCCUGGCCCGUC\
) } def
/len { sequence length } bind def

/coor [
[-132.26383972 226.93882751]
[-137.87814331 222.57731628]
[-151.82144165 228.10760498]
[-161.79681396 240.38778687]
[-176.48013306 237.88790894]
[-190.42344666 243.41821289]
[-204.36676025 248.94850159]
[-218.31005859 254.47879028]
[-232.25337219 260.00909424]
[-246.19668579 265.53936768]
[-260.13998413 271.06967163]
[-271.73513794 280.58557129]
[-279.87939453 293.18206787]
[-288.02362061 305.77853394]
[-296.16784668 318.37503052]
[-304.31207275 330.97152710]
[-312.45632935 343.56799316]
[-315.97863770 360.15200806]
[-332.88964844 361.35824585]
[-338.73016357 345.44207764]
[-325.05279541 335.42376709]
[-316.90856934 322.82727051]
[-308.76434326 310.23080444]
[-300.62008667 297.63430786]
[-292.47586060 285.03781128]
[-284.33163452 272.44134521]
[-293.58242798 260.63357544]
[-307.76190186 265.52664185]
[-321.94140625 270.41967773]
[-336.12091064 275.31271362]
[-350.30041504 280.20574951]
[-360.82177734 292.02148438]
[-375.37680054 288.85906982]
[-389.55627441 293.75213623]
[-396.64971924 299.51101685]
[-403.98706055 298.61022949]
[-418.23883057 303.28854370]
[-422.86090088 318.10125732]
[-435.32696533 327.34118652]
[-450.84362793 327.45538330]
[-463.44439697 318.39996338]
[-468.28396606 303.65689087]
[-463.50149536 288.89520264]
[-450.93591309 279.79104614]
[-435.41891479 279.84518433]
[-422.91714478 289.03677368]
[-408.66537476 284.35845947]
[-394.44934082 279.57263184]
[-380.26983643 274.67959595]
[-370.76266479 263.21383667]
[-355.19345093 266.02624512]
[-341.01394653 261.13320923]
[-326.83444214 256.24017334]
[-312.65496826 251.34713745]
[-298.47546387 246.45408630]
[-313.26498413 243.95011902]
[-319.77938843 230.43855286]
[-320.37191772 215.45025635]
[-314.94448853 201.46659851]
[-304.39562988 190.80258179]
[-290.47171021 185.22366333]
[-275.47784424 185.65345764]
[-261.89636230 192.02079773]
[-251.97566223 203.27157593]
[-247.35815430 217.54316711]
[-248.80828857 232.47291565]
[-256.08523560 245.58830261]
[-265.67028809 257.12637329]
[-251.72697449 251.59606934]
[-237.78366089 246.06578064]
[-223.84036255 240.53549194]
[-209.89704895 235.00518799]
[-195.95373535 229.47489929]
[-182.01043701 223.94461060]
[-173.03237915 212.05999756]
[-157.35174561 214.16430664]
[-143.40843201 208.63401794]
[-131.45741272 189.62800598]
[-108.53862000 193.19606018]
[-95.05229950 186.62954712]
[-81.56597900 180.06303406]
[-68.07965088 173.49652100]
[-54.59333038 166.93000793]
[-41.10700989 160.36347961]
[-27.62068939 153.79696655]
[-14.13436699 147.23045349]
[-0.64804506 140.66394043]
[12.83827686 134.09742737]
[26.32459831 127.53090668]
[39.81092072 120.96439362]
[47.86671829 108.43628693]
[63.66143036 109.35153198]
[77.14775085 102.78501892]
[69.03752136 80.20606995]
[84.51006317 51.95920944]
[85.64176941 37.00196075]
[86.77348328 22.04471588]
[87.90518951 7.08746815]
[89.03689575 -7.86977863]
[90.16860962 -22.82702637]
[91.30031586 -37.78427124]
[78.57135773 -46.37899017]
[71.85954285 -60.19372940]
[72.97032166 -75.51240540]
[81.60488892 -88.21436310]
[95.44060516 -94.88284302]
[110.75572205 -93.72405243]
[123.43054962 -85.04970551]
[130.05563354 -71.19316101]
[128.84884644 -55.88175201]
[120.13481140 -43.23417664]
[106.25756836 -36.65256119]
[105.12585449 -21.69531631]
[103.99414825 -6.73806953]
[102.86243439 8.21917725]
[101.73072815 23.17642403]
[100.59901428 38.13367081]
[99.46730804 53.09091949]
[106.47992706 55.75045395]
[127.51779938 63.72906494]
[136.58918762 51.78294373]
[145.66058350 39.83681870]
[154.73197937 27.89069748]
[156.25268555 11.56221104]
[171.26487732 4.96173716]
[184.32528687 14.87927723]
[181.99848938 31.11251640]
[166.67810059 36.96208954]
[157.60670471 48.90821457]
[148.53530884 60.85433578]
[139.46391296 72.80046082]
[142.22906494 79.77210999]
[156.17247009 74.24205017]
[161.70230103 88.18553925]
[147.75935364 93.71542358]
[150.52450562 100.68707275]
[165.31796265 103.16775513]
[180.11140442 105.64843750]
[194.90486145 108.12911224]
[206.49163818 92.78273773]
[224.19195557 85.48034668]
[243.06704712 88.16960144]
[257.89584351 100.02269745]
[264.61920166 117.68869019]
[279.53543091 119.27163696]
[294.45169067 120.85458374]
[309.36791992 122.43753052]
[324.28417969 124.02047729]
[339.20040894 125.60342407]
[354.11663818 127.18637085]
[366.33731079 117.52752686]
[381.44195557 119.34535217]
[390.57485962 131.05540466]
[405.49111938 132.63835144]
[420.40734863 134.22129822]
[430.70153809 122.61054993]
[445.86154175 119.30091095]
[460.05804443 125.56499481]
[467.83221436 138.99415588]
[466.19470215 154.42457581]
[455.77517700 165.92297363]
[440.58013916 169.06796265]
[426.45242310 162.65023804]
[418.82440186 149.13754272]
[403.90817261 147.55459595]
[388.99191284 145.97164917]
[377.60470581 155.50405884]
[362.45495605 154.11120605]
[352.53369141 142.10261536]
[337.61746216 140.51966858]
[322.70123291 138.93672180]
[307.78497314 137.35377502]
[292.86874390 135.77082825]
[277.95248413 134.18788147]
[263.03625488 132.60493469]
[258.09301758 142.49151611]
[250.35539246 150.42231750]
[240.54669189 155.63270569]
[229.59100342 157.61346436]
[218.52610779 156.16050720]
[208.40509033 151.39581299]
[200.19619751 143.75727844]
[194.69020081 133.95858765]
[192.42417908 122.92256927]
[177.63072205 120.44188690]
[162.83728027 117.96120453]
[148.04382324 115.48052979]
[108.61465454 135.72482300]
[83.71426392 116.27133942]
[70.22794342 122.83785248]
[61.20751572 135.83563232]
[46.37743378 134.45071411]
[32.89111328 141.01722717]
[19.40479279 147.58374023]
[5.91847038 154.15025330]
[-7.56785107 160.71678162]
[-21.05417252 167.28329468]
[-34.54049301 173.84980774]
[-48.02681732 180.41632080]
[-61.51313782 186.98283386]
[-74.99945831 193.54934692]
[-88.48577881 200.11587524]
[-101.97210693 206.68238831]
[-102.77093506 214.15771484]
[-106.08213806 220.83120728]
[-111.45252991 225.89564514]
[-118.18324280 228.75686646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 77]
[3 76]
[5 74]
[6 73]
[7 72]
[8 71]
[9 70]
[10 69]
[11 68]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[33 49]
[34 48]
[36 47]
[37 46]
[79 203]
[80 202]
[81 201]
[82 200]
[83 199]
[84 198]
[85 197]
[86 196]
[87 195]
[88 194]
[89 193]
[90 192]
[92 190]
[93 189]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[120 131]
[121 130]
[122 129]
[123 128]
[136 187]
[137 186]
[138 185]
[139 184]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[153 166]
[154 165]
[155 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
