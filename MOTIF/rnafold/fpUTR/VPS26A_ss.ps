%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUCACGUGUGAGGGGCGGCCCGAGGUCACGUGACGGAGCGCCGGAGCGGAGGGAGCCGGGGCUGGGAGUUCUCCUGAGGGAAGAGGAGUGGAGUAGGGGGGACGCGGCGGCGGCGUUGACAAUGAGUUUUCUUGGAGGCUUUUUUGGUCCAAUUUGUGAGAUCGAUAUUGUUCUUAAUGAUGGGGAAACCAGGAAAAUGGCAGAAAUGAAAACUGAAGAUGGCAAAGUAGAAAAACACUAUCUCUUCU\
) } def
/len { sequence length } bind def

/coor [
[137.31668091 115.57462311]
[128.85791016 128.32534790]
[116.26694489 137.02012634]
[101.34670258 140.41398621]
[86.23363495 138.02091980]
[78.59961700 150.93299866]
[70.96559906 163.84507751]
[63.33157730 176.75715637]
[55.69755936 189.66923523]
[48.06354141 202.58131409]
[40.42952347 215.49339294]
[32.79550552 228.40547180]
[40.48925018 244.84841919]
[36.78435135 262.45919800]
[23.35486984 274.20086670]
[5.72150087 275.49822998]
[-1.58952796 288.59591675]
[-8.90055656 301.69357300]
[-8.12209320 318.07421875]
[-22.06331253 326.70986938]
[-36.38268280 318.71691895]
[-36.34966278 302.31777954]
[-21.99822235 294.38253784]
[-14.68719387 281.28488159]
[-7.37616491 268.18722534]
[-14.03768539 258.07467651]
[-15.78835869 246.01959229]
[-12.23672104 234.29197693]
[-3.99560761 225.12644958]
[7.42263222 220.29649353]
[19.88342667 220.77145386]
[27.51744461 207.85937500]
[35.15146255 194.94729614]
[42.78548050 182.03521729]
[50.41949844 169.12313843]
[58.05351639 156.21105957]
[65.68753815 143.29898071]
[73.32155609 130.38690186]
[68.44783020 128.19180298]
[63.73421478 125.24598694]
[59.29275131 121.55860901]
[44.68680191 124.97419739]
[30.08085442 128.38978577]
[18.40504456 139.06620789]
[4.25028849 134.43025208]
[-10.35566044 137.84584045]
[-24.96160889 141.26142883]
[-39.56755829 144.67701721]
[-43.34579849 159.50886536]
[-53.59258270 170.87820435]
[-67.95326996 176.17247009]
[-83.12789154 174.17504883]
[-95.62940979 165.34497070]
[-102.58509064 151.71128845]
[-102.39655304 136.40693665]
[-95.10712433 122.94875336]
[-82.39186859 114.42931366]
[-67.17265320 112.80632782]
[-52.94674301 118.45275116]
[-42.98315048 130.07107544]
[-28.37719917 126.65548706]
[-13.77125072 123.23989105]
[0.83469754 119.82430267]
[11.46579266 109.39218140]
[26.66526413 113.78384399]
[41.27121353 110.36824799]
[55.87716293 106.95265961]
[56.06341553 91.95381927]
[41.54678726 88.17658234]
[27.03016090 84.39934540]
[12.51353168 80.62210846]
[-3.14323545 85.50039673]
[-15.01122189 74.18302155]
[-10.88165951 58.31233597]
[4.99731159 54.21473694]
[16.29076767 66.10548401]
[30.80739594 69.88272095]
[45.32402420 73.65995026]
[59.84065247 77.43718719]
[75.29331970 62.80041504]
[95.09634399 57.02888489]
[114.70196533 60.82467270]
[129.88475037 72.76022339]
[142.65240479 64.88704681]
[155.42005920 57.01386261]
[168.18771362 49.14068222]
[180.95536804 41.26750183]
[193.72302246 33.39432144]
[206.49067688 25.52114105]
[219.25834656 17.64796066]
[231.97686768 9.69566154]
[244.64578247 1.66455090]
[257.31469727 -6.36655951]
[269.98358154 -14.39766979]
[255.01525879 -13.42350578]
[241.62414551 -6.66495132]
[226.62423706 -6.71847200]
[213.28169250 -13.57241440]
[204.50178528 -25.73436928]
[202.19628906 -40.55613327]
[206.86720276 -54.81034088]
[217.49748230 -65.39321899]
[231.77241516 -70.00039673]
[246.58372498 -67.62868500]
[258.70632935 -58.79451370]
[265.50030518 -45.42257309]
[276.98959351 -35.77910995]
[271.53012085 -49.75030136]
[266.07064819 -63.72149277]
[252.93341064 -73.53701782]
[255.13371277 -89.78788757]
[270.40808105 -95.75659943]
[283.04357910 -85.30304718]
[280.04187012 -69.18096161]
[285.50131226 -55.20977020]
[290.96078491 -41.23857498]
[304.71896362 -35.26256180]
[318.65597534 -40.80866623]
[328.61743164 -53.10014343]
[343.30355835 -50.61693192]
[357.24060059 -56.16303635]
[371.17761230 -61.70914078]
[381.13906860 -74.00061798]
[395.82519531 -71.51741028]
[409.76223755 -77.06351471]
[413.73239136 -94.77796936]
[427.43478394 -106.44458771]
[445.24099731 -107.52004242]
[459.98501587 -97.76135254]
[473.78002930 -103.65183258]
[487.57504272 -109.54231262]
[501.37005615 -115.43279266]
[515.16503906 -121.32327271]
[528.96008301 -127.21376038]
[542.75506592 -133.10423279]
[542.65625000 -148.27874756]
[548.35925293 -162.29725647]
[558.96624756 -173.03529358]
[572.83874512 -178.87843323]
[587.85064697 -178.96496582]
[601.71423340 -173.31285095]
[612.32867432 -162.81222534]
[626.12365723 -168.70271301]
[639.91864014 -174.59318542]
[653.60156250 -180.73957825]
[667.16760254 -187.13975525]
[680.73370361 -193.53991699]
[694.29974365 -199.94009399]
[707.86578369 -206.34025574]
[721.43182373 -212.74041748]
[734.99792480 -219.14059448]
[748.56396484 -225.54075623]
[762.00848389 -232.19248962]
[775.32672119 -239.09346008]
[784.02001953 -252.31227112]
[798.88006592 -251.29782104]
[812.19836426 -258.19879150]
[825.51660156 -265.09976196]
[830.38934326 -279.89483643]
[843.99426270 -286.70367432]
[858.06909180 -281.96710205]
[871.38739014 -288.86807251]
[884.70562744 -295.76904297]
[898.02392578 -302.67001343]
[911.34222412 -309.57101440]
[920.03552246 -322.78982544]
[934.89550781 -321.77536011]
[948.21380615 -328.67633057]
[956.59069824 -342.77456665]
[972.98291016 -342.29855347]
[980.52758789 -327.73800659]
[971.46337891 -314.07153320]
[955.11480713 -315.35806274]
[941.79650879 -308.45706177]
[934.05578613 -295.73187256]
[918.24316406 -296.25271606]
[904.92492676 -289.35174561]
[891.60662842 -282.45077515]
[878.28833008 -275.54980469]
[864.97009277 -268.64883423]
[860.72302246 -254.41862488]
[847.31475830 -247.23033142]
[832.41760254 -251.78147888]
[819.09930420 -244.88050842]
[805.78100586 -237.97953796]
[798.04034424 -225.25433350]
[782.22772217 -225.77519226]
[768.90942383 -218.87420654]
[767.49981689 -215.66999817]
[764.48260498 -212.98083496]
[760.11279297 -211.54849243]
[754.96411133 -211.97470093]
[741.39807129 -205.57453918]
[727.83203125 -199.17437744]
[714.26593018 -192.77420044]
[700.69989014 -186.37403870]
[687.13385010 -179.97386169]
[673.56781006 -173.57369995]
[660.00177002 -167.17352295]
[658.47375488 -164.02403259]
[655.35852051 -161.44911194]
[650.93835449 -160.18051147]
[645.80914307 -160.79818726]
[632.01416016 -154.90769958]
[618.21911621 -149.01721191]
[618.46313477 -134.08839417]
[612.95794678 -120.16580200]
[602.51354980 -109.38248444]
[588.69915771 -103.40331268]
[573.60754395 -103.16799164]
[559.53784180 -108.74352264]
[548.64556885 -119.30923462]
[534.85052490 -113.41874695]
[521.05554199 -107.52826691]
[507.26052856 -101.63778687]
[493.46551514 -95.74730682]
[479.67053223 -89.85682678]
[465.87551880 -83.96633911]
[464.96060181 -71.89148712]
[458.97235107 -61.28342056]
[448.98953247 -54.17748260]
[436.86373901 -51.96676254]
[424.87609863 -55.12932205]
[415.30831909 -63.12648773]
[401.37130737 -57.58038330]
[392.40673828 -45.68560028]
[376.72372437 -47.77211380]
[362.78671265 -42.22600937]
[348.84967041 -36.67990494]
[339.88510132 -24.78512192]
[324.20208740 -26.87163925]
[310.26507568 -21.32553291]
[310.94165039 -16.70123863]
[310.12661743 -11.71569538]
[307.68508911 -6.86307240]
[303.64712524 -2.67928815]
[298.21868896 0.31276339]
[291.77450562 1.66020679]
[284.83306885 1.03361881]
[278.01470947 -1.72876036]
[265.34579468 6.30235004]
[252.67687988 14.33345985]
[240.00798035 22.36457062]
[236.05209351 28.58331490]
[227.13151550 30.41561508]
[214.36386108 38.28879547]
[201.59620667 46.16197586]
[188.82855225 54.03515625]
[176.06089783 61.90834045]
[163.29324341 69.78151703]
[150.52558899 77.65470123]
[137.75793457 85.52787781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 38]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[16 25]
[17 24]
[18 23]
[41 67]
[42 66]
[43 65]
[45 63]
[46 62]
[47 61]
[48 60]
[68 79]
[69 78]
[70 77]
[71 76]
[83 252]
[84 251]
[85 250]
[86 249]
[87 248]
[88 247]
[89 246]
[90 245]
[91 243]
[92 242]
[93 241]
[94 240]
[107 116]
[108 115]
[109 114]
[117 232]
[118 231]
[120 229]
[121 228]
[122 227]
[124 225]
[125 224]
[129 218]
[130 217]
[131 216]
[132 215]
[133 214]
[134 213]
[135 212]
[142 205]
[143 204]
[144 203]
[145 199]
[146 198]
[147 197]
[148 196]
[149 195]
[150 194]
[151 193]
[152 192]
[153 188]
[154 187]
[156 185]
[157 184]
[158 183]
[161 180]
[162 179]
[163 178]
[164 177]
[165 176]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
