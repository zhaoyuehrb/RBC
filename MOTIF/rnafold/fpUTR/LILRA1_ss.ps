%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAACCCACAAUCCAGUGUCAAGAAAGAAGUCAACUUUUCUUCCCCUAUUUCCCUGCAUUUCUCCUCUGUGCUCACUGCCACACGCAGCUCAACCUGAGCUACACAGCCAGAUGCGAGAUGCUUCUCUGCUGAUCUGAGUCUGCCUGCAGCAUGGACCUUGGUCUUCCCUGAAGCAUCUCCAGGGCUGGAGGGACGACUGCCAUGCACCGAGGGCUCAUCCAUCCGCAGAGCAGGGCAGUGGGAGGAGACGCU\
) } def
/len { sequence length } bind def

/coor [
[42.38437653 421.83328247]
[47.43989182 436.12374878]
[47.29978561 451.28146362]
[41.98098373 465.47604370]
[32.12575150 476.99343872]
[18.92416000 484.44284058]
[3.97036242 486.92471313]
[-10.92989540 484.13937378]
[-23.97733498 476.42315674]
[-33.59641647 464.70782471]
[-38.62558365 450.40805054]
[-38.45754623 435.25064087]
[-33.11259460 421.06588745]
[-23.23615456 409.56668091]
[-10.02085590 402.14160156]
[4.93748999 399.68728638]
[7.69373274 384.94268799]
[10.44997501 370.19808960]
[13.20621777 355.45349121]
[15.96246147 340.70889282]
[18.71870422 325.96429443]
[5.50292969 318.86758423]
[-7.71166182 311.77148438]
[-18.48034096 322.21350098]
[-29.24901962 332.65551758]
[-40.01770020 343.09750366]
[-50.78637695 353.53952026]
[-61.55505753 363.98153687]
[-59.23071671 379.32354736]
[-66.39796448 393.08618164]
[-80.30084991 399.97741699]
[-95.59342957 397.34747314]
[-106.39539337 386.20758057]
[-108.55316162 370.84124756]
[-101.23703766 357.15719604]
[-87.26021576 350.41714478]
[-71.99706268 353.21286011]
[-61.22838593 342.77084351]
[-50.45970917 332.32882690]
[-39.69102859 321.88681030]
[-28.92234993 311.44482422]
[-18.15367126 301.00280762]
[-9.41181183 288.81347656]
[-2.97500324 275.26477051]
[3.46180606 261.71606445]
[9.81503391 248.12796021]
[16.08443832 234.50097656]
[22.35384369 220.87399292]
[28.62324905 207.24702454]
[34.89265442 193.62004089]
[41.16205978 179.99305725]
[39.45248413 165.19688416]
[52.24948120 155.89379883]
[58.51888275 142.26681519]
[64.78829193 128.63983154]
[71.05769348 115.01286316]
[67.39898682 100.46590424]
[55.42873001 91.42638397]
[43.45847321 82.38686371]
[31.48821449 73.34734344]
[19.51795578 64.30783081]
[7.54769707 55.26830673]
[-4.42256165 46.22878647]
[-19.19657898 50.59165573]
[-33.53907394 45.47831726]
[-42.02017593 33.04710770]
[-41.56051636 18.18350601]
[-53.53077698 9.14398575]
[-65.50103760 0.10446648]
[-77.47129059 -8.93505287]
[-86.17889404 -11.59810734]
[-89.53242493 -18.16040993]
[-101.39041138 -27.34671211]
[-113.24839783 -36.53301620]
[-126.11118317 -28.91595650]
[-141.56422424 -27.68010712]
[-156.50537109 -33.55856323]
[-167.72332764 -45.80752945]
[-172.58500671 -62.26798630]
[-185.92906189 -69.11897278]
[-201.58076477 -65.59703827]
[-214.00230408 -75.75010681]
[-213.66496277 -91.78961182]
[-200.82749939 -101.41142273]
[-185.33773804 -97.23450470]
[-179.07807922 -82.46303558]
[-165.73402405 -75.61204529]
[-156.99215698 -87.80138397]
[-167.76083374 -98.24339294]
[-178.52951050 -108.68540192]
[-189.29820251 -119.12741089]
[-200.06687927 -129.56941223]
[-210.83555603 -140.01142883]
[-226.41571045 -146.69685364]
[-224.30458069 -163.51884460]
[-207.55558777 -166.14700317]
[-200.39353943 -150.78010559]
[-189.62486267 -140.33810425]
[-178.85618591 -129.89608765]
[-168.08750916 -119.45407867]
[-157.31883240 -109.01206970]
[-146.55015564 -98.57006073]
[-128.84855652 -99.17568207]
[-113.30316162 -91.95552826]
[-103.05558014 -78.93592834]
[-99.91696167 -63.24957275]
[-104.06209564 -48.39100266]
[-92.20410919 -39.20470047]
[-80.34612274 -30.01839638]
[-68.43177032 -20.90531158]
[-56.46151352 -11.86579227]
[-44.49125671 -2.82627249]
[-32.52099991 6.21324730]
[-18.35059547 1.70351791]
[-4.07297754 6.45889902]
[4.77017355 18.85454559]
[4.61695814 34.25852966]
[16.58721733 43.29804993]
[28.55747414 52.33757019]
[40.52773285 61.37709045]
[52.49799347 70.41661072]
[64.46824646 79.45613098]
[76.43850708 88.49564362]
[89.50725555 78.23598480]
[104.78251648 78.42105865]
[115.51782227 87.31336212]
[129.83969116 82.85420990]
[144.16156006 78.39505768]
[158.48342896 73.93590546]
[172.80529785 69.47675323]
[187.12716675 65.01760101]
[198.00334167 53.52762222]
[212.45535278 57.13160324]
[226.77722168 52.67245102]
[241.09909058 48.21329880]
[254.12205505 32.80230331]
[272.77944946 37.94148254]
[286.98712158 33.13082886]
[301.19476318 28.32017517]
[315.40243530 23.50952148]
[329.61010742 18.69886780]
[343.81774902 13.88821411]
[358.02542114 9.07756042]
[362.25564575 -0.90472090]
[371.09024048 -6.80262470]
[381.49316406 -6.87846994]
[390.04449463 -1.34782422]
[404.36636353 -5.80697680]
[411.75747681 -19.51862144]
[426.34539795 -23.83681679]
[439.37182617 -16.70602036]
[453.69369507 -21.16517258]
[468.01556396 -25.62432480]
[482.33743286 -30.08347893]
[496.65930176 -34.54262924]
[510.98117065 -39.00178528]
[513.77325439 -42.24431610]
[517.11114502 -44.24506378]
[520.54284668 -44.98422623]
[523.65545654 -44.58910370]
[526.11944580 -43.30899811]
[540.64361572 -47.05724335]
[555.16772461 -50.80548859]
[569.69189453 -54.55373383]
[584.21600342 -58.30197906]
[595.64495850 -69.24224854]
[609.90191650 -64.93073273]
[624.42602539 -68.67897797]
[638.95019531 -72.42722321]
[653.47430420 -76.17546844]
[667.99847412 -79.92371368]
[676.05603027 -93.25463104]
[690.83898926 -96.84898376]
[703.49829102 -89.08515930]
[718.02246094 -92.83340454]
[732.54656982 -96.58164978]
[740.04870605 -101.74235535]
[747.27276611 -100.28543091]
[761.84197998 -103.85446167]
[773.30450439 -115.58231354]
[789.12316895 -111.25780487]
[793.02514648 -95.32962799]
[780.99633789 -84.18331909]
[765.41101074 -89.28524017]
[750.84179688 -85.71621704]
[736.29486084 -82.05751038]
[721.77069092 -78.30926514]
[707.24658203 -74.56101990]
[699.92517090 -61.64077377]
[685.24902344 -57.63261795]
[671.74670410 -65.39957428]
[657.22259521 -61.65132904]
[642.69842529 -57.90308380]
[628.17431641 -54.15483856]
[613.65014648 -50.40659714]
[603.26007080 -39.73442459]
[587.96429443 -43.77783966]
[573.44012451 -40.02959442]
[558.91595459 -36.28134918]
[544.39184570 -32.53310394]
[529.86767578 -28.78485870]
[515.44030762 -24.67991447]
[501.11843872 -20.22076035]
[486.79656982 -15.76160812]
[472.47470093 -11.30245590]
[458.15283203 -6.84330320]
[443.83096313 -2.38415027]
[437.15490723 10.88106155]
[422.69403076 15.60729790]
[408.82550049 8.51489258]
[394.50363159 12.97404575]
[382.43023682 28.09826851]
[362.83605957 23.28522110]
[348.62841797 28.09587479]
[334.42074585 32.90652847]
[320.21307373 37.71718216]
[306.00543213 42.52783585]
[291.79776001 47.33848953]
[277.59011841 52.14914322]
[273.92276001 61.64987946]
[265.46203613 67.70320129]
[254.84800720 68.12454224]
[245.55824280 62.53516769]
[231.23637390 66.99432373]
[216.91450500 71.45347595]
[207.06272888 82.62450409]
[191.58633423 79.33946991]
[177.26445007 83.79862213]
[162.94258118 88.25777435]
[148.62071228 92.71692657]
[134.29884338 97.17607880]
[119.97697449 101.63523102]
[109.69918060 121.00030518]
[84.68467712 121.28226471]
[78.41526794 134.90924072]
[72.14586639 148.53622437]
[65.87645721 162.16320801]
[67.13760376 177.93406677]
[54.78903961 186.26246643]
[48.51963425 199.88945007]
[42.25022888 213.51641846]
[35.98082352 227.14340210]
[29.71141815 240.77038574]
[23.44201279 254.39735413]
[22.70345688 263.47308350]
[17.01051331 268.15286255]
[10.57370472 281.70156860]
[4.13689566 295.25027466]
[33.46329880 328.72055054]
[30.70705795 343.46511841]
[27.95081520 358.20971680]
[25.19457245 372.95431519]
[22.43832970 387.69891357]
[19.68208694 402.44351196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 254]
[17 253]
[18 252]
[19 251]
[20 250]
[21 249]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[43 248]
[44 247]
[45 246]
[46 244]
[47 243]
[48 242]
[49 241]
[50 240]
[51 239]
[53 237]
[54 236]
[55 235]
[56 234]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
[67 113]
[68 112]
[69 111]
[70 110]
[72 109]
[73 108]
[74 107]
[79 87]
[80 86]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[126 232]
[127 231]
[128 230]
[129 229]
[130 228]
[131 227]
[133 225]
[134 224]
[135 223]
[137 219]
[138 218]
[139 217]
[140 216]
[141 215]
[142 214]
[143 213]
[147 211]
[148 210]
[151 207]
[152 206]
[153 205]
[154 204]
[155 203]
[156 202]
[161 201]
[162 200]
[163 199]
[164 198]
[165 197]
[167 195]
[168 194]
[169 193]
[170 192]
[171 191]
[174 188]
[175 187]
[176 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
