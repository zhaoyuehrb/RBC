%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BAX)
} def

/sequence { (\
UCACGUGACCCGGGCGCGCUGCGGCCGCCCGCGCGGACCCGGCGAGAGGCGGCGGCGGGAGCGGCGGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.216271615 ubox
1 13 0.004139161 ubox
1 14 0.010934331 ubox
1 37 0.035857604 ubox
1 45 0.003458036 ubox
1 47 0.040415748 ubox
1 67 0.008931761 ubox
2 7 0.245061724 ubox
2 12 0.005189356 ubox
2 13 0.020933638 ubox
2 36 0.040082648 ubox
2 44 0.003575048 ubox
2 46 0.043084193 ubox
2 48 0.008848972 ubox
2 66 0.011982155 ubox
2 69 0.095502497 ubox
3 68 0.097104109 ubox
4 12 0.035691847 ubox
4 16 0.015512363 ubox
4 18 0.008986448 ubox
4 33 0.004176240 ubox
4 35 0.049520961 ubox
4 44 0.048056323 ubox
4 51 0.023194098 ubox
4 63 0.022844977 ubox
4 66 0.039831886 ubox
4 67 0.085435923 ubox
4 69 0.068083414 ubox
5 11 0.035730893 ubox
5 15 0.016123740 ubox
5 17 0.009478783 ubox
5 28 0.007356831 ubox
5 32 0.004394457 ubox
5 34 0.050038935 ubox
5 43 0.048259184 ubox
5 50 0.023501848 ubox
5 62 0.023049244 ubox
5 65 0.043247566 ubox
5 68 0.065906100 ubox
6 12 0.003214434 ubox
6 14 0.016065186 ubox
6 16 0.009488657 ubox
6 27 0.007186152 ubox
6 33 0.050024292 ubox
6 42 0.016013486 ubox
6 44 0.014186807 ubox
6 49 0.023400410 ubox
6 61 0.023025710 ubox
6 64 0.040307103 ubox
6 66 0.051584929 ubox
6 67 0.004103479 ubox
6 69 0.036824643 ubox
7 11 0.004951837 ubox
7 15 0.009479342 ubox
7 26 0.007066402 ubox
7 32 0.049798694 ubox
7 43 0.016682987 ubox
7 62 0.003504248 ubox
7 65 0.057818185 ubox
7 68 0.040870794 ubox
8 68 0.425744326 ubox
9 24 0.007113146 ubox
9 36 0.003930384 ubox
9 42 0.008940707 ubox
9 58 0.007386421 ubox
9 59 0.022555314 ubox
9 64 0.052864063 ubox
9 67 0.396228520 ubox
10 23 0.007123797 ubox
10 35 0.003939090 ubox
10 41 0.006422734 ubox
10 42 0.068337369 ubox
10 57 0.007180603 ubox
10 58 0.022557342 ubox
10 59 0.003285124 ubox
10 63 0.051255583 ubox
10 64 0.043104352 ubox
10 66 0.348634031 ubox
10 67 0.898110969 ubox
11 18 0.004358445 ubox
11 21 0.007076489 ubox
11 27 0.031280119 ubox
11 31 0.101063382 ubox
11 41 0.071513808 ubox
11 57 0.022319247 ubox
11 58 0.003251462 ubox
11 63 0.045052553 ubox
11 66 0.922233124 ubox
11 69 0.012689052 ubox
12 17 0.005784895 ubox
12 20 0.008818002 ubox
12 26 0.032596949 ubox
12 30 0.116888101 ubox
12 40 0.071843989 ubox
12 56 0.019134822 ubox
12 62 0.042780636 ubox
12 65 0.937737721 ubox
12 68 0.012792666 ubox
13 19 0.008994477 ubox
13 25 0.032601736 ubox
13 29 0.117375323 ubox
13 39 0.071856530 ubox
14 22 0.004348221 ubox
14 28 0.117543360 ubox
14 38 0.071839186 ubox
14 53 0.012251061 ubox
14 56 0.003453892 ubox
14 62 0.221286240 ubox
14 65 0.134372698 ubox
14 68 0.014274897 ubox
15 21 0.004367782 ubox
15 23 0.033513286 ubox
15 27 0.117543752 ubox
15 35 0.006366291 ubox
15 51 0.009852611 ubox
15 52 0.010631697 ubox
15 54 0.007554878 ubox
15 55 0.003733699 ubox
15 61 0.221388420 ubox
15 63 0.954047773 ubox
15 64 0.105808752 ubox
15 66 0.013716825 ubox
15 67 0.014624719 ubox
15 69 0.004195638 ubox
16 22 0.033566688 ubox
16 25 0.006867659 ubox
16 26 0.117280569 ubox
16 34 0.006507312 ubox
16 50 0.011584016 ubox
16 53 0.007541984 ubox
16 62 0.960491108 ubox
16 65 0.014299023 ubox
16 68 0.004323902 ubox
17 21 0.033323450 ubox
17 24 0.009694673 ubox
17 33 0.006505068 ubox
17 35 0.071558329 ubox
17 44 0.006897998 ubox
17 49 0.010660401 ubox
17 51 0.009284816 ubox
17 52 0.006122299 ubox
17 54 0.003816971 ubox
17 57 0.044443439 ubox
17 61 0.959884718 ubox
17 63 0.062781961 ubox
17 64 0.010334831 ubox
17 66 0.021262507 ubox
17 69 0.006568657 ubox
18 25 0.117134674 ubox
18 32 0.006382444 ubox
18 34 0.071570065 ubox
18 43 0.013146956 ubox
18 50 0.010112054 ubox
18 53 0.003845599 ubox
18 56 0.045687564 ubox
18 62 0.063797054 ubox
18 65 0.021750234 ubox
18 68 0.007102482 ubox
19 24 0.117128719 ubox
19 31 0.006329692 ubox
19 33 0.069955948 ubox
19 42 0.013157219 ubox
19 49 0.010083751 ubox
19 52 0.003845116 ubox
19 55 0.045760121 ubox
19 58 0.966531305 ubox
19 59 0.177329230 ubox
19 61 0.061826437 ubox
19 64 0.021749447 ubox
19 67 0.007371653 ubox
20 33 0.014980893 ubox
20 41 0.013156447 ubox
20 44 0.003423961 ubox
20 48 0.009478083 ubox
20 51 0.003837600 ubox
20 54 0.045715169 ubox
20 57 0.977184189 ubox
20 58 0.124767172 ubox
20 60 0.053320091 ubox
20 63 0.021709762 ubox
20 66 0.007368852 ubox
21 28 0.005418653 ubox
21 32 0.071549459 ubox
21 40 0.013181741 ubox
21 43 0.006842530 ubox
21 50 0.003777289 ubox
21 53 0.045533216 ubox
21 56 0.988205013 ubox
21 62 0.021652704 ubox
21 65 0.007364100 ubox
21 68 0.005498599 ubox
22 27 0.005418082 ubox
22 31 0.071582400 ubox
22 42 0.006250775 ubox
22 49 0.003762264 ubox
22 52 0.045496633 ubox
22 54 0.006743257 ubox
22 55 0.987898621 ubox
22 57 0.004517793 ubox
22 61 0.021638347 ubox
22 64 0.007358470 ubox
22 67 0.005751642 ubox
23 29 0.003812382 ubox
23 30 0.071545580 ubox
23 39 0.014684950 ubox
23 40 0.003887905 ubox
23 53 0.006689103 ubox
23 56 0.004400608 ubox
24 28 0.004328909 ubox
24 29 0.070673292 ubox
24 38 0.014746095 ubox
24 39 0.003692711 ubox
24 43 0.007828116 ubox
24 50 0.045474205 ubox
24 53 0.987982090 ubox
24 56 0.006152195 ubox
24 62 0.007175930 ubox
24 65 0.005906101 ubox
25 36 0.015334396 ubox
25 42 0.007865652 ubox
25 49 0.045493493 ubox
25 52 0.988393121 ubox
25 55 0.006223304 ubox
25 58 0.021435419 ubox
25 61 0.007162069 ubox
25 64 0.005915503 ubox
26 35 0.015343654 ubox
26 41 0.007865145 ubox
26 48 0.045478121 ubox
26 51 0.988378558 ubox
26 54 0.006223561 ubox
26 57 0.021445104 ubox
26 63 0.005916880 ubox
27 34 0.015343491 ubox
27 40 0.007842568 ubox
27 50 0.988381362 ubox
27 53 0.006222061 ubox
27 56 0.021446914 ubox
27 62 0.005897510 ubox
27 68 0.003358140 ubox
28 33 0.015301447 ubox
28 49 0.987983417 ubox
28 52 0.005896630 ubox
28 55 0.019481880 ubox
28 59 0.007595665 ubox
28 61 0.005437227 ubox
28 67 0.003767057 ubox
29 36 0.007477870 ubox
29 48 0.985345907 ubox
29 49 0.028337975 ubox
29 51 0.005477304 ubox
29 54 0.017106903 ubox
29 55 0.009007689 ubox
29 58 0.007998454 ubox
29 59 0.004816585 ubox
29 67 0.033565072 ubox
30 35 0.007487172 ubox
30 41 0.003836115 ubox
30 44 0.870198050 ubox
30 48 0.039898808 ubox
30 51 0.004467056 ubox
30 54 0.012716635 ubox
30 57 0.008038479 ubox
30 58 0.004757420 ubox
30 66 0.035386178 ubox
31 40 0.003924365 ubox
31 43 0.873536964 ubox
31 50 0.004914714 ubox
31 53 0.015556677 ubox
31 56 0.008435462 ubox
31 65 0.063780190 ubox
31 68 0.003540244 ubox
32 41 0.036821491 ubox
32 42 0.872171326 ubox
32 44 0.458396324 ubox
32 49 0.004644812 ubox
32 51 0.015169180 ubox
32 52 0.014611522 ubox
32 55 0.008269017 ubox
32 57 0.004888943 ubox
32 63 0.043430059 ubox
32 64 0.063759635 ubox
32 66 0.072986621 ubox
32 67 0.003589924 ubox
33 40 0.050201418 ubox
33 43 0.462269040 ubox
33 50 0.016062700 ubox
33 56 0.005179193 ubox
33 62 0.045985793 ubox
33 65 0.075783728 ubox
34 41 0.852748780 ubox
34 42 0.452153859 ubox
34 44 0.042750878 ubox
34 49 0.015999301 ubox
34 51 0.013181294 ubox
34 54 0.008042146 ubox
34 55 0.005038686 ubox
34 61 0.045974605 ubox
34 63 0.082162851 ubox
34 64 0.058250315 ubox
35 40 0.849464808 ubox
35 43 0.042767460 ubox
35 50 0.013092147 ubox
35 53 0.008075695 ubox
35 62 0.095824233 ubox
37 68 0.009739207 ubox
38 49 0.008283137 ubox
38 59 0.116968765 ubox
38 67 0.009313066 ubox
39 48 0.008371747 ubox
39 49 0.011556201 ubox
39 52 0.010954286 ubox
39 55 0.006537621 ubox
39 58 0.117109503 ubox
39 66 0.008185434 ubox
39 67 0.028761410 ubox
40 48 0.011805111 ubox
40 51 0.011833969 ubox
40 54 0.007158530 ubox
40 57 0.117109634 ubox
40 66 0.029239371 ubox
41 50 0.010242165 ubox
41 53 0.007291254 ubox
41 56 0.117048766 ubox
41 65 0.029454470 ubox
42 50 0.015419414 ubox
42 53 0.010757269 ubox
43 49 0.016762891 ubox
43 51 0.009260883 ubox
43 52 0.010752955 ubox
43 54 0.116514938 ubox
43 63 0.029418442 ubox
44 50 0.009432243 ubox
44 53 0.116215313 ubox
44 62 0.029365065 ubox
49 56 0.027784142 ubox
49 65 0.006343368 ubox
49 68 0.063899863 ubox
50 55 0.027784424 ubox
50 57 0.010448457 ubox
50 64 0.006348175 ubox
50 66 0.005084787 ubox
50 67 0.066040187 ubox
50 69 0.009592330 ubox
51 56 0.010437432 ubox
51 65 0.004685030 ubox
51 68 0.010390853 ubox
52 62 0.006376877 ubox
52 65 0.071710974 ubox
52 68 0.003951909 ubox
53 61 0.006379123 ubox
53 63 0.003990272 ubox
53 64 0.071767557 ubox
53 66 0.014889440 ubox
53 67 0.003995965 ubox
54 62 0.003247902 ubox
54 65 0.015062684 ubox
55 62 0.071837491 ubox
55 65 0.004034640 ubox
56 61 0.071877763 ubox
56 63 0.015286257 ubox
56 64 0.003814387 ubox
57 62 0.015293360 ubox
61 68 0.018196639 ubox
62 67 0.019108479 ubox
62 69 0.003444849 ubox
63 68 0.003254580 ubox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
15 63 0.9500000 lbox
16 62 0.9500000 lbox
17 61 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
