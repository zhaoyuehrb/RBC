%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAGGAGCAGCUGGGACUGAGUCAUGGCAGGAAGCUGAGGAGGGCGGGAGAUCACACCAGACAAUUAUAAAAGAAGAGCUGGUCCUGAAGCUCACAACCGUAACAGCCACCAGACAAGCUUCAGUGGCCGGCCCUUCACAUCCAGACUUGCCUGAGAGGACCCACCUCUGAGUGUCCAGUGGUCAGUUGCCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[-59.29055405 383.66223145]
[-62.74520874 391.00073242]
[-67.49035645 397.56967163]
[-73.36078644 403.14505005]
[-80.15296936 407.53732300]
[-87.63212585 410.59799194]
[-95.54032135 412.22445679]
[-103.60540009 412.36355591]
[-111.55028534 411.01324463]
[-119.10256195 408.22262573]
[-126.00379181 404.09011841]
[-136.77568054 414.52880859]
[-147.54757690 424.96749878]
[-158.31947327 435.40618896]
[-169.09136963 445.84487915]
[-166.95993042 457.55160522]
[-170.70986938 468.71801758]
[-179.29852295 476.60311890]
[-190.51094055 479.33062744]
[-201.53036499 476.33450317]
[-212.62483215 486.42968750]
[-223.71929932 496.52487183]
[-221.88275146 511.93289185]
[-229.48292542 525.46124268]
[-243.59739685 531.90808105]
[-258.79885864 528.79437256]
[-269.24206543 517.31744385]
[-270.91134644 501.89044189]
[-263.16485596 488.44531250]
[-248.98127747 482.15197754]
[-233.81448364 485.43041992]
[-222.72001648 475.33520508]
[-211.62554932 465.24002075]
[-211.87142944 446.94198608]
[-198.44035339 434.04742432]
[-179.53005981 435.07299805]
[-168.75816345 424.63430786]
[-157.98626709 414.19561768]
[-147.21438599 403.75692749]
[-136.44248962 393.31823730]
[-143.93954468 372.06140137]
[-139.76504517 349.84326172]
[-124.97676849 332.65600586]
[-103.50414276 325.16906738]
[-81.10435486 329.46069336]
[-72.28757477 317.32543945]
[-63.47079849 305.19015503]
[-54.65401840 293.05490112]
[-45.83723831 280.91964722]
[-37.02046204 268.78439331]
[-39.59688568 254.15916443]
[-30.82829094 241.72669983]
[-15.47052479 239.12345886]
[-6.65374613 226.98820496]
[2.16303253 214.85295105]
[10.97981167 202.71769714]
[19.79659081 190.58244324]
[28.61336899 178.44718933]
[24.42613220 167.82308960]
[25.90677261 156.37907410]
[32.80178833 146.97702026]
[43.48926544 142.02439880]
[55.35918045 142.85833740]
[64.55278778 131.00601196]
[73.74639130 119.15368652]
[82.93999481 107.30136108]
[69.32886505 113.60508728]
[54.37279892 112.45785522]
[41.88231659 104.15196228]
[35.03975296 90.80358124]
[35.58845520 75.81361389]
[43.38862228 63.00122452]
[56.45292664 55.63074875]
[71.45284271 55.58004379]
[84.56668091 62.86202621]
[92.45310974 75.62079620]
[96.18346405 61.09205246]
[99.91381073 46.56330490]
[103.64415741 32.03455734]
[99.58190155 16.74375534]
[110.24126434 6.34052181]
[113.97161102 -8.18822575]
[117.70195770 -22.71697235]
[121.43231201 -37.24571991]
[125.16265869 -51.77446747]
[128.89300537 -66.30321503]
[132.62335205 -80.83196259]
[136.23948669 -95.38955688]
[139.74116516 -109.97510529]
[143.24284363 -124.56066132]
[146.74452209 -139.14620972]
[150.24620056 -153.73175049]
[153.74787903 -168.31730652]
[157.24955750 -182.90284729]
[160.75123596 -197.48840332]
[147.35681152 -204.40596008]
[136.00753784 -214.32852173]
[127.36325073 -226.67922974]
[121.92652893 -240.74000549]
[120.01345062 -255.69338989]
[121.73523712 -270.66998291]
[126.99178314 -284.79913330]
[135.47749329 -297.25930786]
[146.69900513 -307.32614136]
[160.00392151 -314.41433716]
[174.61871338 -318.11181641]
[189.69369507 -318.20358276]
[204.35243225 -314.68432617]
[217.74266052 -307.75866699]
[229.08592224 -297.82922363]
[237.72271729 -285.47326660]
[243.15090942 -271.40921021]
[245.05493164 -256.45468140]
[243.32406616 -241.47909546]
[238.05894470 -227.35316467]
[229.56568909 -214.89813232]
[218.33807373 -204.83810425]
[205.02885437 -197.75798035]
[190.41181946 -194.06936646]
[175.33679199 -193.98672485]
[171.83511353 -179.40116882]
[168.33343506 -164.81562805]
[164.83175659 -150.23007202]
[161.33006287 -135.64453125]
[157.82838440 -121.05897522]
[154.32670593 -106.47342682]
[150.82502747 -91.88787842]
[152.32176208 -84.64348602]
[147.15209961 -77.10161591]
[143.42175293 -62.57286835]
[139.69140625 -48.04412079]
[135.96105957 -33.51537323]
[132.23071289 -18.98662567]
[128.50036621 -4.45787764]
[124.77001190 10.07087040]
[129.09909058 24.32247925]
[118.17290497 35.76490402]
[114.44255829 50.29365158]
[110.71221161 64.82240295]
[106.98185730 79.35115051]
[117.22100067 68.38939667]
[121.08361053 53.89525223]
[130.39779663 42.13745117]
[143.62332153 35.06032944]
[158.57312012 33.83419800]
[172.77502441 38.66182327]
[183.88052368 48.74487305]
[190.05314636 62.41596603]
[190.27215576 77.41436768]
[184.50132751 91.25985718]
[173.69497681 101.66287231]
[159.64009094 106.90309906]
[144.66085815 106.11399841]
[131.23472595 99.42636108]
[116.24093628 99.85771942]
[129.60603333 106.66757965]
[145.41473389 106.03874207]
[153.24215698 118.71078491]
[166.60725403 125.52064514]
[179.97235107 132.33050537]
[193.33744812 139.14036560]
[206.70254517 145.95021057]
[222.34332275 142.38009644]
[234.79608154 152.49484253]
[234.50813293 168.53532410]
[221.70037842 178.19662476]
[206.19781494 174.06742859]
[199.89268494 159.31530762]
[186.52758789 152.50546265]
[173.16249084 145.69560242]
[159.79739380 138.88574219]
[146.43229675 132.07588196]
[131.57955933 133.19180298]
[122.79617310 120.03267670]
[109.43107605 113.22281647]
[94.79232025 116.49496460]
[85.59871674 128.34729004]
[76.40511322 140.19961548]
[67.21150970 152.05194092]
[70.30598450 170.73548889]
[58.96316147 185.50042725]
[40.74862289 187.26396179]
[31.93184471 199.39921570]
[23.11506653 211.53448486]
[14.29828739 223.66973877]
[5.48150873 235.80499268]
[-3.33527017 247.94024658]
[-1.06527817 263.35079956]
[-10.17961693 275.53207397]
[-24.88520622 277.60119629]
[-33.70198441 289.73645020]
[-42.51876450 301.87170410]
[-51.33554077 314.00695801]
[-60.15232086 326.14221191]
[-68.96910095 338.27746582]
[-63.88160324 344.65185547]
[-60.06125259 351.84902954]
[-57.63682938 359.62045288]
[-56.68898392 367.69836426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[20 33]
[21 32]
[22 31]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[50 190]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[63 179]
[64 178]
[65 177]
[66 176]
[76 140]
[77 139]
[78 138]
[79 137]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[155 175]
[156 174]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
