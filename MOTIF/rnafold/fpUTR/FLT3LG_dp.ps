%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FLT3LG)
} def

/sequence { (\
AAAUUUCCUUUCACUUUCGGUCUCUGGCUGUCACCCGGCUUGGCCCCUUCCACACCCAACUGGGGCAAGCCUGACCCGGCGACAGGAGGCAUGAGGGGCCCCCGGCCGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 96 0.004736134 ubox
4 109 0.020056935 ubox
4 110 0.028161240 ubox
5 88 0.003276231 ubox
5 95 0.006194859 ubox
5 98 0.012399162 ubox
5 108 0.020265859 ubox
5 109 0.036388213 ubox
5 110 0.021007233 ubox
6 87 0.004253968 ubox
6 94 0.006664761 ubox
6 96 0.008918800 ubox
6 97 0.064475276 ubox
6 98 0.007945128 ubox
6 108 0.034902733 ubox
6 109 0.027956895 ubox
7 86 0.004345673 ubox
7 93 0.006697560 ubox
7 95 0.008901065 ubox
7 96 0.987874909 ubox
7 97 0.041351427 ubox
7 98 0.041193392 ubox
7 108 0.025736279 ubox
8 85 0.004345183 ubox
8 95 0.990238799 ubox
8 96 0.077936586 ubox
8 97 0.056677697 ubox
9 84 0.004279963 ubox
9 94 0.986302442 ubox
9 95 0.070480048 ubox
9 96 0.092759744 ubox
10 93 0.971430393 ubox
10 94 0.065286294 ubox
10 95 0.109806372 ubox
10 110 0.005278598 ubox
11 89 0.004858871 ubox
11 93 0.055553006 ubox
11 94 0.136573005 ubox
11 109 0.007182688 ubox
12 88 0.004674280 ubox
12 93 0.152229847 ubox
12 108 0.007350688 ubox
13 92 0.142397662 ubox
14 88 0.128047598 ubox
14 89 0.985901451 ubox
14 95 0.005290270 ubox
14 96 0.016896018 ubox
14 97 0.007142118 ubox
15 87 0.123068002 ubox
15 88 0.988115350 ubox
15 89 0.039707895 ubox
15 94 0.005168844 ubox
15 95 0.016125386 ubox
15 96 0.014181023 ubox
16 86 0.116821771 ubox
16 87 0.989041002 ubox
16 88 0.048659541 ubox
16 93 0.004848191 ubox
16 94 0.015222443 ubox
16 95 0.017095364 ubox
16 110 0.004700422 ubox
17 85 0.106485801 ubox
17 86 0.989363910 ubox
17 87 0.053975796 ubox
17 93 0.013888917 ubox
17 94 0.018777450 ubox
17 109 0.006395447 ubox
18 85 0.972438282 ubox
18 86 0.057527762 ubox
18 93 0.019636945 ubox
18 108 0.006552467 ubox
19 92 0.017457528 ubox
19 107 0.006538473 ubox
20 83 0.991355788 ubox
20 90 0.026182561 ubox
20 106 0.006465896 ubox
21 82 0.999321260 ubox
21 89 0.026203521 ubox
21 105 0.006393940 ubox
22 81 0.998674348 ubox
22 88 0.026216371 ubox
22 104 0.006264479 ubox
23 79 0.016654481 ubox
23 87 0.026050764 ubox
24 78 0.016571652 ubox
24 79 0.998969202 ubox
24 85 0.006585699 ubox
24 86 0.025368432 ubox
25 78 0.998550795 ubox
25 84 0.008804557 ubox
25 85 0.011805477 ubox
26 76 0.005488022 ubox
26 77 0.999423457 ubox
26 83 0.009319901 ubox
27 75 0.005989369 ubox
27 76 0.994272639 ubox
27 80 0.019511965 ubox
28 79 0.019583772 ubox
28 85 0.021516601 ubox
29 78 0.018506795 ubox
29 84 0.023588842 ubox
30 75 0.989538486 ubox
30 77 0.009772530 ubox
30 83 0.023650478 ubox
31 74 0.999384870 ubox
31 82 0.023649650 ubox
32 73 0.999549079 ubox
32 81 0.023638840 ubox
33 72 0.985736783 ubox
34 79 0.023340217 ubox
35 78 0.023268918 ubox
35 79 0.003755953 ubox
36 73 0.018611510 ubox
36 78 0.004060161 ubox
37 71 0.999287083 ubox
37 72 0.005382998 ubox
38 70 0.999975413 ubox
38 71 0.004461206 ubox
39 69 0.999971002 ubox
40 68 0.998318630 ubox
40 69 0.003944643 ubox
41 67 0.960160445 ubox
41 68 0.022506295 ubox
42 66 0.688247902 ubox
43 66 0.725280780 ubox
44 64 0.154146779 ubox
44 65 0.987546504 ubox
45 63 0.152947519 ubox
45 64 0.987857079 ubox
45 65 0.016381712 ubox
46 62 0.151349534 ubox
46 63 0.987911321 ubox
46 64 0.017967655 ubox
47 62 0.987573453 ubox
47 63 0.019226517 ubox
48 59 0.100454814 ubox
48 62 0.019983760 ubox
49 58 0.112607291 ubox
49 64 0.003282532 ubox
50 63 0.014973641 ubox
51 62 0.020838454 ubox
52 61 0.031900733 ubox
53 62 0.009100071 ubox
54 61 0.016363255 ubox
56 63 0.003858827 ubox
57 62 0.004550875 ubox
85 103 0.004534152 ubox
86 102 0.004596736 ubox
88 100 0.005766033 ubox
88 107 0.003558153 ubox
89 99 0.005774591 ubox
89 106 0.003580125 ubox
90 98 0.005774081 ubox
90 105 0.003574743 ubox
93 103 0.003253600 ubox
95 103 0.003223303 ubox
96 102 0.003242695 ubox
96 107 0.006433435 ubox
97 101 0.003196004 ubox
97 103 0.004386880 ubox
97 106 0.005279775 ubox
97 107 0.994440360 ubox
98 102 0.004335310 ubox
98 106 0.998856696 ubox
99 105 0.999026570 ubox
100 104 0.991759982 ubox
7 96 0.9500000 lbox
8 95 0.9500000 lbox
9 94 0.9500000 lbox
10 93 0.9500000 lbox
14 89 0.9500000 lbox
15 88 0.9500000 lbox
16 87 0.9500000 lbox
17 86 0.9500000 lbox
18 85 0.9500000 lbox
20 83 0.9500000 lbox
21 82 0.9500000 lbox
22 81 0.9500000 lbox
24 79 0.9500000 lbox
25 78 0.9500000 lbox
26 77 0.9500000 lbox
27 76 0.9500000 lbox
30 75 0.9500000 lbox
31 74 0.9500000 lbox
32 73 0.9500000 lbox
33 72 0.9500000 lbox
37 71 0.9500000 lbox
38 70 0.9500000 lbox
39 69 0.9500000 lbox
40 68 0.9500000 lbox
41 67 0.9500000 lbox
42 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
97 107 0.9500000 lbox
98 106 0.9500000 lbox
99 105 0.9500000 lbox
100 104 0.9500000 lbox
showpage
end
%%EOF
