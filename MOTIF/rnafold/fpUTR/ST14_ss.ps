%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAGCUGCAGCCGGAGAAAGAGGAAGAGGGAGAGAGAGCGCGCCAGGGCGAGGGCACCGCCGCCGGUCGGGCGCGCUGGGCCUGCCCGGAAUCCCGCCGCCUGCGCCCCGCGCCCCGCGCCCUGCGGGCCAUGGGAGCCGGCCGCCGGCAGGGACGACGCCUGUGAGACCCGCGAGCGGCCUCGGGGACC\
) } def
/len { sequence length } bind def

/coor [
[189.12399292 143.44071960]
[186.71817017 135.41409302]
[172.42259216 130.87133789]
[158.12701416 126.32859039]
[143.83143616 121.78583527]
[129.35862732 125.30532837]
[118.54977417 113.75199890]
[104.25420380 109.20925140]
[96.21654510 109.96337891]
[89.76498413 104.47546387]
[75.54484558 99.70182037]
[61.32471085 94.92816925]
[47.10457230 90.15452576]
[31.55954170 93.09774780]
[21.95631218 81.71235657]
[7.73617458 76.93871307]
[-6.48396349 72.16506195]
[-12.80531311 78.51071167]
[-20.80915451 82.43346405]
[-29.61090660 83.53131104]
[-38.24799347 81.71273041]
[-45.78511429 77.20357513]
[-51.41552353 70.51947784]
[-54.54736328 62.40702438]
[-54.86577988 53.76037598]
[-68.65323639 47.85223770]
[-82.44068909 41.94410324]
[-96.84232330 50.80181503]
[-113.52070618 49.34981918]
[-125.92632294 38.35694885]
[-129.30598450 22.29951096]
[-143.18730164 16.61540985]
[-157.06861877 10.93130875]
[-170.99549866 5.35978937]
[-184.96704102 -0.09878481]
[-196.97457886 9.37573814]
[-212.01298523 11.55354595]
[-226.02919006 5.94886684]
[-235.29612732 -5.84010935]
[-237.40373230 -20.58539772]
[-251.37527466 -26.04397202]
[-265.34683228 -31.50254631]
[-279.31835938 -36.96112061]
[-293.28991699 -42.41969299]
[-307.26144409 -47.87826920]
[-321.23300171 -53.33684158]
[-335.20452881 -58.79541779]
[-350.87414551 -56.61056519]
[-359.91314697 -68.44888306]
[-373.88467407 -73.90745544]
[-389.55432129 -71.72261047]
[-398.59329224 -83.56092834]
[-412.56484985 -89.01950073]
[-426.89923096 -82.92331696]
[-440.99060059 -88.65811920]
[-446.71401978 -102.36132812]
[-460.68557739 -107.81990051]
[-474.65710449 -113.27847290]
[-491.61053467 -113.41062927]
[-496.17672729 -129.73809814]
[-481.75140381 -138.64573669]
[-469.19854736 -127.25001526]
[-455.22698975 -121.79144287]
[-441.25546265 -116.33286285]
[-427.75836182 -122.52676392]
[-413.51147461 -117.19001770]
[-407.10626221 -102.99104309]
[-393.13473511 -97.53247070]
[-378.46444702 -100.10774994]
[-368.42611694 -87.87899780]
[-354.45455933 -82.42042542]
[-339.78430176 -84.99571228]
[-329.74594116 -72.76696014]
[-315.77441406 -67.30838013]
[-301.80285645 -61.84981155]
[-287.83132935 -56.39123535]
[-273.85980225 -50.93266296]
[-259.88824463 -45.47408676]
[-245.91670227 -40.01551437]
[-231.94515991 -34.55693817]
[-220.39979553 -43.96811295]
[-205.59539795 -46.35260773]
[-191.49198914 -40.97116470]
[-181.91290283 -29.17548943]
[-179.50846863 -14.07032585]
[-165.53692627 -8.61175251]
[-158.15209961 -9.10666847]
[-151.38452148 -2.95000935]
[-137.50320435 2.73409128]
[-123.62187958 8.41819191]
[-112.96012115 0.36963060]
[-99.60606384 -1.37007582]
[-87.03755951 3.76010084]
[-78.58133698 14.51788998]
[-76.53255463 28.15664673]
[-62.74509811 34.06478500]
[-48.95764160 39.97291946]
[-30.07632446 30.25975037]
[-9.90286732 37.74285889]
[-1.71031857 57.94492722]
[12.50981903 62.71857071]
[26.72995758 67.49221802]
[41.25786972 64.20755005]
[51.87821579 75.93438721]
[66.09835815 80.70803070]
[80.31848907 85.48168182]
[94.53862762 90.25532532]
[108.79695129 94.91367340]
[123.09252930 99.45642853]
[138.58786011 96.26186371]
[148.37419128 107.49026489]
[162.66976929 112.03301239]
[176.96534729 116.57576752]
[191.26091003 121.11851501]
[212.72267151 114.69809723]
[226.73295593 131.18881226]
[241.29260254 134.79667664]
[255.85224915 138.40455627]
[270.41189575 142.01243591]
[284.97152710 145.62030029]
[302.53378296 140.10610962]
[314.69796753 152.74679565]
[329.31411743 156.11843872]
[343.93026733 159.49006653]
[358.57324219 162.74325562]
[373.24209595 165.87776184]
[387.93582153 168.89340210]
[402.65350342 171.78997803]
[417.37118530 174.68653870]
[432.08883667 177.58311462]
[446.80651855 180.47967529]
[465.55444336 173.09710693]
[479.57019043 186.40603638]
[494.37393188 188.82449341]
[509.17767334 191.24296570]
[523.98144531 193.66142273]
[538.78515625 196.07989502]
[553.58892822 198.49835205]
[564.85443115 194.70939636]
[573.82415771 200.30540466]
[588.82220459 200.54829407]
[603.82025146 200.79119873]
[618.81829834 201.03408813]
[633.81628418 201.27699280]
[649.75128174 195.48793030]
[659.72534180 209.19757080]
[649.31256104 222.57705688]
[633.57342529 216.27502441]
[618.57537842 216.03211975]
[603.57733154 215.78923035]
[588.57934570 215.54632568]
[573.58129883 215.30343628]
[584.84259033 225.21218872]
[589.94915771 239.31619263]
[587.64184570 254.13766479]
[578.48962402 266.02197266]
[564.74920654 272.03863525]
[549.80865479 270.70413208]
[537.35211182 262.34747314]
[530.45098877 249.02925110]
[530.80706787 234.03347778]
[538.33245850 221.05780029]
[551.17047119 213.30210876]
[536.36669922 210.88363647]
[521.56298828 208.46517944]
[506.75921631 206.04670715]
[491.95547485 203.62825012]
[477.15170288 201.20979309]
[469.41137695 207.90728760]
[459.04379272 209.25947571]
[449.44943237 204.57891846]
[443.90994263 195.19735718]
[429.19229126 192.30078125]
[414.47460938 189.40422058]
[399.75692749 186.50764465]
[385.03924561 183.61106873]
[377.85897827 185.40669250]
[370.10757446 180.54660034]
[355.43875122 177.41209412]
[348.23031616 179.09118652]
[340.55862427 174.10623169]
[325.94247437 170.73458862]
[311.32632446 167.36296082]
[300.89727783 173.50933838]
[288.68566895 170.80970764]
[281.36364746 160.17994690]
[266.80401611 156.57208252]
[252.24436951 152.96420288]
[237.68472290 149.35632324]
[223.12507629 145.74845886]
[217.37677002 151.18099976]
[209.85818481 153.92379761]
[201.77430725 153.45799255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 114]
[3 113]
[4 112]
[5 111]
[7 109]
[8 108]
[10 107]
[11 106]
[12 105]
[13 104]
[15 102]
[16 101]
[17 100]
[25 97]
[26 96]
[27 95]
[31 90]
[32 89]
[33 88]
[34 86]
[35 85]
[40 80]
[41 79]
[42 78]
[43 77]
[44 76]
[45 75]
[46 74]
[47 73]
[49 71]
[50 70]
[52 68]
[53 67]
[56 64]
[57 63]
[58 62]
[116 190]
[117 189]
[118 188]
[119 187]
[120 186]
[122 183]
[123 182]
[124 181]
[125 179]
[126 178]
[127 176]
[128 175]
[129 174]
[130 173]
[131 172]
[133 168]
[134 167]
[135 166]
[136 165]
[137 164]
[138 163]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
