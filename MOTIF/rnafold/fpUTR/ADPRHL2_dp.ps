%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADPRHL2)
} def

/sequence { (\
AAGUAGGGAAACUGUGAGGGCGGCACCGGAAGUGGCGAGCAGUCUGCGCGCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.250017285 ubox
2 45 0.007919707 ubox
3 12 0.266539430 ubox
3 15 0.015791709 ubox
3 21 0.004678139 ubox
3 24 0.004626419 ubox
3 33 0.004974131 ubox
3 44 0.008152395 ubox
3 47 0.669203726 ubox
3 49 0.240774037 ubox
3 51 0.074833834 ubox
4 11 0.258696932 ubox
4 14 0.050399942 ubox
4 16 0.017457447 ubox
4 20 0.004446335 ubox
4 23 0.003572416 ubox
4 32 0.005212222 ubox
4 34 0.006245769 ubox
4 46 0.669604012 ubox
4 48 0.239300782 ubox
4 50 0.072829748 ubox
5 13 0.137805205 ubox
5 15 0.018852720 ubox
5 33 0.006268545 ubox
5 45 0.668489844 ubox
6 12 0.150142049 ubox
6 13 0.109091886 ubox
6 27 0.193200942 ubox
6 44 0.666569611 ubox
6 45 0.057416100 ubox
7 12 0.127238057 ubox
7 13 0.028394649 ubox
7 26 0.193305682 ubox
7 27 0.164575100 ubox
7 43 0.327017254 ubox
7 44 0.072034337 ubox
7 45 0.243892017 ubox
8 12 0.029604207 ubox
8 26 0.164535278 ubox
8 43 0.040875961 ubox
8 44 0.245377649 ubox
9 43 0.182893269 ubox
11 33 0.174238097 ubox
11 43 0.606232094 ubox
12 18 0.007240113 ubox
12 19 0.019335817 ubox
12 20 0.012606786 ubox
12 23 0.301382714 ubox
12 29 0.015959526 ubox
12 32 0.179697192 ubox
12 39 0.008571285 ubox
12 42 0.719933034 ubox
12 53 0.342529188 ubox
13 17 0.006563228 ubox
13 18 0.018886673 ubox
13 19 0.012583635 ubox
13 22 0.302605952 ubox
13 25 0.018081394 ubox
13 28 0.015909273 ubox
13 31 0.178651550 ubox
13 37 0.003535975 ubox
13 38 0.008387979 ubox
13 41 0.720326229 ubox
13 48 0.010471803 ubox
13 50 0.269128554 ubox
13 52 0.347506266 ubox
14 21 0.303725325 ubox
14 24 0.020493676 ubox
14 26 0.023079144 ubox
14 27 0.011093779 ubox
14 36 0.004462555 ubox
14 40 0.720514164 ubox
14 47 0.018187543 ubox
14 49 0.468952977 ubox
14 51 0.353032261 ubox
15 20 0.300171593 ubox
15 22 0.007103202 ubox
15 23 0.019902743 ubox
15 25 0.025505153 ubox
15 28 0.006028969 ubox
15 32 0.005318927 ubox
15 35 0.004433586 ubox
15 39 0.715791834 ubox
15 41 0.011497743 ubox
15 46 0.017683491 ubox
15 48 0.469364003 ubox
15 50 0.352135816 ubox
16 21 0.009799268 ubox
16 24 0.025545042 ubox
16 27 0.003650644 ubox
16 40 0.014209650 ubox
16 44 0.012523332 ubox
16 45 0.003649004 ubox
16 47 0.461573324 ubox
16 49 0.343797052 ubox
16 51 0.003355815 ubox
17 43 0.012876012 ubox
17 45 0.040781437 ubox
18 27 0.189380996 ubox
18 44 0.037532201 ubox
18 45 0.543776727 ubox
19 26 0.189388215 ubox
19 27 0.030448368 ubox
19 43 0.029967595 ubox
19 44 0.583224309 ubox
19 45 0.017188791 ubox
20 26 0.030464687 ubox
20 33 0.012896705 ubox
20 36 0.695222227 ubox
20 40 0.026994714 ubox
20 43 0.583307212 ubox
20 44 0.017777632 ubox
20 47 0.031976774 ubox
20 49 0.008649737 ubox
20 51 0.041378080 ubox
21 28 0.013612478 ubox
21 32 0.012989036 ubox
21 34 0.006326948 ubox
21 35 0.695278210 ubox
21 37 0.193129065 ubox
21 39 0.025938744 ubox
21 42 0.581866452 ubox
21 46 0.031996915 ubox
21 48 0.008805473 ubox
21 50 0.041406933 ubox
21 52 0.007633183 ubox
22 27 0.013664152 ubox
22 33 0.005806024 ubox
22 36 0.204566335 ubox
22 44 0.008779866 ubox
22 45 0.030152736 ubox
22 47 0.007622338 ubox
22 49 0.040179311 ubox
22 51 0.007505471 ubox
23 33 0.688274338 ubox
23 36 0.017076862 ubox
23 40 0.577901668 ubox
23 43 0.008631685 ubox
23 44 0.027897827 ubox
23 47 0.036892481 ubox
23 49 0.011842312 ubox
24 32 0.689127859 ubox
24 34 0.264133826 ubox
24 35 0.012930629 ubox
24 39 0.579817794 ubox
24 42 0.015052084 ubox
24 46 0.036884617 ubox
24 48 0.014867448 ubox
25 33 0.264956798 ubox
25 43 0.020201908 ubox
25 45 0.033376827 ubox
26 32 0.264611583 ubox
26 35 0.564329220 ubox
26 42 0.019993766 ubox
26 53 0.069752667 ubox
27 34 0.564927690 ubox
27 37 0.138907729 ubox
27 46 0.020911995 ubox
27 52 0.070663932 ubox
28 33 0.500790627 ubox
28 36 0.139540197 ubox
28 44 0.009078146 ubox
28 45 0.024990218 ubox
28 51 0.070007052 ubox
29 43 0.008673985 ubox
29 44 0.028375783 ubox
30 43 0.028036560 ubox
32 40 0.013718390 ubox
32 47 0.062579518 ubox
32 49 0.033877989 ubox
32 51 0.043438262 ubox
33 39 0.013647102 ubox
33 41 0.027817932 ubox
33 46 0.061322685 ubox
33 48 0.033888886 ubox
33 50 0.043381002 ubox
33 52 0.020391611 ubox
34 40 0.028003730 ubox
34 44 0.053041559 ubox
34 45 0.041306848 ubox
34 47 0.033268431 ubox
34 49 0.042243955 ubox
34 51 0.021849777 ubox
35 43 0.053953919 ubox
35 44 0.041097399 ubox
35 47 0.042478735 ubox
35 49 0.019761460 ubox
35 51 0.352089000 ubox
36 42 0.066389296 ubox
36 46 0.042914313 ubox
36 48 0.021832573 ubox
36 50 0.353048522 ubox
36 52 0.010625110 ubox
37 44 0.048285567 ubox
37 45 0.021825723 ubox
37 47 0.020218396 ubox
37 49 0.351979644 ubox
37 51 0.010970145 ubox
38 43 0.047470103 ubox
38 45 0.021934409 ubox
39 44 0.022653573 ubox
39 47 0.355612925 ubox
39 49 0.012329321 ubox
39 51 0.007014506 ubox
40 46 0.356255489 ubox
40 48 0.012425189 ubox
40 50 0.007005923 ubox
41 45 0.288722276 ubox
42 49 0.006288345 ubox
43 48 0.005954306 ubox
44 52 0.006052981 ubox
44 53 0.033621162 ubox
45 52 0.034662424 ubox
46 51 0.034929110 ubox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
6 44 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
showpage
end
%%EOF
