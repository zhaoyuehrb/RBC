%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CXCR4)
} def

/sequence { (\
AACUUCAGUUUGUUGGCUGCGGCAGCAGGUAGCAAAGUGACGCCGAGGGCCUGAGUGCUCCAGUAGCCACCGCAUCUGGAGAACCAGCGGUUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 92 0.278710076 ubox
2 9 0.005955205 ubox
2 38 0.007491232 ubox
2 56 0.017317871 ubox
2 64 0.004546413 ubox
2 91 0.309066652 ubox
3 8 0.006786780 ubox
3 37 0.007739847 ubox
3 47 0.051246615 ubox
3 48 0.029010587 ubox
3 49 0.005536650 ubox
3 55 0.017846596 ubox
3 63 0.004713178 ubox
3 81 0.007672910 ubox
3 87 0.005098004 ubox
3 90 0.312531660 ubox
4 36 0.007199865 ubox
4 40 0.041016113 ubox
4 46 0.051259033 ubox
4 47 0.028994333 ubox
4 48 0.005691902 ubox
4 54 0.016901028 ubox
4 55 0.003316257 ubox
4 62 0.004414391 ubox
4 80 0.007714299 ubox
4 86 0.004188122 ubox
4 89 0.292212693 ubox
4 90 0.005337581 ubox
5 35 0.005076737 ubox
5 39 0.008001295 ubox
5 40 0.922145998 ubox
5 45 0.026896483 ubox
5 46 0.018087928 ubox
5 53 0.011132926 ubox
5 54 0.005796193 ubox
5 79 0.007711240 ubox
5 89 0.005961797 ubox
6 39 0.997740189 ubox
6 45 0.016263909 ubox
6 53 0.007054923 ubox
6 78 0.007718390 ubox
7 38 0.996194602 ubox
7 52 0.007057015 ubox
7 77 0.007714072 ubox
8 41 0.007705619 ubox
8 43 0.010237289 ubox
8 51 0.007003596 ubox
8 76 0.007697461 ubox
9 36 0.990693296 ubox
9 37 0.005224957 ubox
9 40 0.007371929 ubox
9 42 0.009464812 ubox
10 35 0.998374243 ubox
10 36 0.005135952 ubox
10 39 0.005970578 ubox
11 34 0.999342881 ubox
11 35 0.003847853 ubox
11 74 0.006852667 ubox
12 33 0.999952136 ubox
12 73 0.006948845 ubox
13 32 0.999464607 ubox
13 72 0.006756397 ubox
14 31 0.997986973 ubox
14 69 0.007348261 ubox
15 30 0.995196249 ubox
15 68 0.007857579 ubox
16 30 0.009629312 ubox
16 67 0.007858372 ubox
17 28 0.999787725 ubox
17 29 0.009402257 ubox
17 66 0.007858004 ubox
18 27 0.999704436 ubox
18 28 0.004643012 ubox
18 65 0.007852699 ubox
19 26 0.999950229 ubox
19 64 0.007851616 ubox
20 25 0.999563807 ubox
20 63 0.007845189 ubox
21 59 0.006228076 ubox
21 61 0.004159285 ubox
22 58 0.006552982 ubox
22 60 0.004103111 ubox
23 57 0.006594139 ubox
24 56 0.006559253 ubox
24 59 0.004060577 ubox
25 58 0.004079102 ubox
26 53 0.006613616 ubox
26 57 0.004041006 ubox
27 52 0.006709552 ubox
27 56 0.003799362 ubox
28 51 0.006797446 ubox
29 50 0.006783969 ubox
30 49 0.006686397 ubox
31 52 0.003271178 ubox
32 43 0.005245995 ubox
33 42 0.005268234 ubox
37 43 0.003194479 ubox
37 94 0.054136865 ubox
38 93 0.054277896 ubox
39 92 0.053668589 ubox
40 56 0.003686674 ubox
40 64 0.007077360 ubox
40 91 0.052152383 ubox
41 53 0.005288515 ubox
41 55 0.004318749 ubox
41 57 0.023395027 ubox
41 63 0.008500959 ubox
41 89 0.042260553 ubox
41 90 0.052319128 ubox
42 50 0.441386822 ubox
42 56 0.023687165 ubox
42 64 0.010068605 ubox
42 67 0.009565322 ubox
42 73 0.006620716 ubox
42 88 0.038780729 ubox
42 91 0.837467932 ubox
43 49 0.442350727 ubox
43 55 0.023710343 ubox
43 63 0.010372519 ubox
43 66 0.009570364 ubox
43 72 0.004786167 ubox
43 87 0.035625634 ubox
43 90 0.873483741 ubox
44 48 0.439183402 ubox
44 53 0.016666256 ubox
44 72 0.006262865 ubox
44 89 0.873803138 ubox
45 52 0.013529291 ubox
45 60 0.034128795 ubox
45 71 0.008121065 ubox
45 88 0.856689349 ubox
45 92 0.034673747 ubox
46 52 0.018562314 ubox
46 59 0.034267395 ubox
46 91 0.035369684 ubox
46 92 0.022249184 ubox
47 51 0.018524549 ubox
47 58 0.034352270 ubox
47 60 0.010795550 ubox
47 61 0.008975785 ubox
47 85 0.057386484 ubox
47 91 0.023178182 ubox
47 92 0.010756708 ubox
47 95 0.063612272 ubox
48 59 0.011040379 ubox
48 60 0.008951995 ubox
48 68 0.020979602 ubox
48 84 0.057195472 ubox
48 85 0.251735046 ubox
48 91 0.010131784 ubox
48 92 0.113359124 ubox
48 94 0.063812562 ubox
48 95 0.012749581 ubox
49 56 0.037950885 ubox
49 58 0.015362553 ubox
49 67 0.021026851 ubox
49 84 0.245967022 ubox
49 88 0.201182319 ubox
49 91 0.137050995 ubox
49 94 0.012669951 ubox
50 55 0.043363053 ubox
50 57 0.025899553 ubox
50 66 0.020895831 ubox
50 79 0.004093717 ubox
50 87 0.152239972 ubox
50 90 0.139046425 ubox
51 63 0.020879642 ubox
51 78 0.004086100 ubox
51 81 0.010544307 ubox
51 87 0.936379112 ubox
51 89 0.125816747 ubox
51 90 0.061128747 ubox
52 62 0.021127333 ubox
52 80 0.006720346 ubox
52 86 0.957330027 ubox
52 89 0.061545818 ubox
52 93 0.010699965 ubox
53 60 0.004626554 ubox
53 61 0.020679212 ubox
53 68 0.003509995 ubox
53 76 0.003801602 ubox
53 85 0.958901272 ubox
53 88 0.065847642 ubox
53 92 0.011862885 ubox
54 59 0.005906987 ubox
54 75 0.003467071 ubox
54 91 0.011968169 ubox
55 84 0.956261368 ubox
55 88 0.003850875 ubox
55 94 0.004185157 ubox
56 65 0.004442804 ubox
56 74 0.004149770 ubox
56 83 0.866386490 ubox
56 86 0.015222400 ubox
56 89 0.011846764 ubox
56 93 0.004074438 ubox
57 64 0.004529998 ubox
57 67 0.004448942 ubox
57 73 0.004261867 ubox
57 85 0.015435460 ubox
57 88 0.011992309 ubox
58 63 0.004535865 ubox
58 66 0.004681038 ubox
58 72 0.004257291 ubox
58 81 0.992217687 ubox
58 87 0.011096483 ubox
59 65 0.004457790 ubox
59 80 0.998693208 ubox
59 86 0.006832525 ubox
60 79 0.999000258 ubox
61 78 0.998996440 ubox
62 77 0.998592250 ubox
63 73 0.005518659 ubox
63 75 0.035597563 ubox
63 76 0.995961917 ubox
63 94 0.028260062 ubox
64 69 0.003275033 ubox
64 72 0.006657110 ubox
64 74 0.226393966 ubox
64 93 0.028347772 ubox
65 92 0.028207235 ubox
66 73 0.988646459 ubox
66 91 0.021062452 ubox
67 72 0.988122980 ubox
67 90 0.019635834 ubox
68 89 0.018674271 ubox
69 91 0.034984808 ubox
70 90 0.037646268 ubox
71 89 0.038141247 ubox
72 88 0.040093924 ubox
73 87 0.035692703 ubox
76 87 0.024596650 ubox
77 86 0.042781324 ubox
78 85 0.043197348 ubox
79 84 0.042931827 ubox
82 92 0.045495880 ubox
83 91 0.048201708 ubox
84 90 0.048552491 ubox
85 89 0.048215332 ubox
89 95 0.025923465 ubox
90 94 0.022251262 ubox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
7 38 0.9500000 lbox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
42 91 0.9500000 lbox
43 90 0.9500000 lbox
44 89 0.9500000 lbox
45 88 0.9500000 lbox
51 87 0.9500000 lbox
52 86 0.9500000 lbox
53 85 0.9500000 lbox
55 84 0.9500000 lbox
56 83 0.9500000 lbox
58 81 0.9500000 lbox
59 80 0.9500000 lbox
60 79 0.9500000 lbox
61 78 0.9500000 lbox
62 77 0.9500000 lbox
63 76 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
showpage
end
%%EOF
