%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAACCUUUCAGGGCUGCUCCGAGGGCCGCAGCUAGAGUCGGCGCCACGAGGGGGCCGAGCAGGGUGCGGCGGCGGCGGGGCGCUCCGGGGAGGCCAGGACAGCUGAUGGUUGUGGCAGAAACAUCUCAAGGUAGCUGGUCCGCCCCCACUUCCCCAUCUACCUCUUGUCCUCCCCCCAACACCACCACCACCCUGGCUCCCCUCCCUC\
) } def
/len { sequence length } bind def

/coor [
[-35.02854919 255.92166138]
[-47.90749359 263.61145020]
[-62.50600815 267.05868530]
[-77.46440887 265.94226074]
[-91.38947296 260.36618042]
[-102.98423767 250.84980774]
[-111.16877747 238.27946472]
[-115.18078613 223.82597351]
[-114.64659882 208.83547974]
[-109.61596680 194.70422363]
[-100.55743408 182.74833679]
[-88.31401825 174.08106995]
[-103.23184967 175.64900208]
[-118.14967346 177.21693420]
[-133.06750488 178.78485107]
[-141.27577209 182.79441833]
[-148.21998596 180.26293945]
[-163.15959167 181.60752869]
[-178.09921265 182.95211792]
[-193.03881836 184.29670715]
[-207.97843933 185.64129639]
[-222.91806030 186.98588562]
[-231.74891663 202.82098389]
[-248.17317200 210.12171936]
[-265.53854370 206.13761902]
[-276.93475342 192.64775085]
[-291.82745361 194.43867493]
[-306.72015381 196.22958374]
[-321.61285400 198.02049255]
[-336.50555420 199.81141663]
[-351.39825439 201.60232544]
[-364.17593384 210.93194580]
[-377.73596191 204.76954651]
[-392.62866211 206.56045532]
[-398.42706299 219.06571960]
[-409.55914307 227.00971985]
[-423.05493164 228.40443420]
[-435.37811279 222.99194336]
[-443.35266113 212.28399658]
[-458.27047729 213.85192871]
[-473.18829346 215.41984558]
[-488.10614014 216.98777771]
[-503.02395630 218.55570984]
[-515.93975830 227.69313049]
[-529.40606689 221.32858276]
[-544.32391357 222.89649963]
[-555.49694824 234.40924072]
[-571.44958496 232.70854187]
[-579.94439697 219.09904480]
[-574.46478271 204.02079773]
[-559.21435547 199.04052734]
[-545.89184570 207.97866821]
[-530.97399902 206.41075134]
[-519.12524414 197.38546753]
[-504.59188843 203.63787842]
[-489.67407227 202.06994629]
[-474.75622559 200.50201416]
[-459.83840942 198.93409729]
[-444.92059326 197.36616516]
[-437.17257690 182.89431763]
[-422.17520142 175.82124329]
[-405.75415039 179.11343384]
[-394.41958618 191.66775513]
[-379.52688599 189.87684631]
[-367.81442261 180.67532349]
[-353.18917847 186.70962524]
[-338.29647827 184.91870117]
[-323.40377808 183.12779236]
[-308.51107788 181.33688354]
[-293.61837769 179.54597473]
[-278.72567749 177.75505066]
[-274.45059204 166.39195251]
[-265.69793701 157.87458801]
[-254.08615112 153.86349487]
[-241.79902649 155.17797852]
[-231.17512512 161.62957764]
[-224.26264954 172.04627991]
[-209.32302856 170.70167542]
[-194.38340759 169.35708618]
[-179.44380188 168.01249695]
[-164.50418091 166.66790771]
[-149.56457520 165.32331848]
[-134.63543701 163.86701965]
[-119.71760559 162.29910278]
[-104.79977417 160.73117065]
[-89.88194275 159.16323853]
[-82.33577728 153.31068420]
[-71.68682861 154.86689758]
[-57.64330292 149.59626770]
[-43.59978104 144.32565308]
[-29.55625725 139.05502319]
[-15.51273537 133.78439331]
[-1.46921206 128.51377869]
[3.68893433 123.22001648]
[12.82401466 123.27107239]
[26.94481087 118.21112061]
[41.06560898 113.15117645]
[55.18640518 108.09122467]
[69.30720520 103.03127289]
[70.98328400 89.54692841]
[78.29156494 78.09154510]
[89.81349182 70.88863373]
[103.31264496 69.33629608]
[116.16880035 73.73583221]
[125.88656616 83.23329926]
[140.08148193 78.38515472]
[150.64018250 66.60278320]
[165.18511963 69.81122589]
[179.38003540 64.96308136]
[193.57493591 60.11494064]
[207.76985168 55.26679230]
[221.89065552 50.20684433]
[235.93417358 44.93622208]
[242.86967468 38.99053192]
[250.22740173 39.69351578]
[264.34820557 34.63356781]
[271.15371704 20.62204552]
[285.54629517 15.69169331]
[298.86218262 22.26605797]
[312.98300171 17.20610809]
[324.55990601 2.88677597]
[341.69134521 6.69058752]
[355.73486328 1.41996539]
[369.77841187 -3.85065699]
[371.62936401 -14.35906124]
[377.62982178 -23.08432198]
[386.64163208 -28.48976898]
[397.00393677 -29.65735626]
[406.83914185 -26.44297409]
[414.39297485 -19.49045563]
[428.65884399 -24.12571144]
[442.92468262 -28.76096535]
[457.19052124 -33.39622116]
[471.45639038 -38.03147507]
[485.72222900 -42.66672897]
[496.45602417 -54.28982925]
[510.95132446 -50.86416245]
[525.21716309 -55.49941635]
[539.48303223 -60.13467026]
[540.29473877 -75.29071045]
[546.53021240 -89.12845612]
[557.34613037 -99.77647400]
[571.27978516 -105.79470062]
[586.44665527 -106.36922455]
[600.79559326 -101.42234039]
[612.38604736 -91.62307739]
[619.65051270 -78.29670715]
[621.60650635 -63.24550629]
[617.98950195 -48.50503159]
[609.28863525 -36.06880951]
[596.68066406 -27.61873627]
[581.87072754 -24.29761505]
[566.86169434 -26.55460167]
[553.68347168 -34.08445358]
[544.11828613 -45.86882401]
[529.85241699 -41.23357010]
[515.58660889 -36.59831238]
[505.87316895 -25.30676079]
[490.35748291 -28.40088272]
[476.09164429 -23.76562881]
[461.82577515 -19.13037300]
[447.55993652 -14.49511814]
[433.29409790 -9.85986328]
[419.02822876 -5.22460842]
[411.48275757 12.73519230]
[392.87496948 19.46033859]
[375.04901123 10.19286633]
[361.00549316 15.46348858]
[346.96197510 20.73410988]
[341.67520142 31.61474991]
[330.01782227 36.12047195]
[318.04293823 31.32690620]
[303.92214966 36.38685608]
[297.81219482 49.92214966]
[283.56378174 55.25481415]
[269.40814209 48.75436401]
[255.28735352 53.81431580]
[241.20480347 58.97974396]
[227.16127014 64.25036621]
[224.40534973 68.15173340]
[219.16903687 70.36283875]
[212.61799622 69.46170807]
[198.42309570 74.30985260]
[184.22817993 79.15799713]
[170.03326416 84.00614166]
[160.48986816 95.44173431]
[144.92962646 92.58006287]
[130.73471069 97.42820740]
[127.85713196 113.23694611]
[117.41821289 125.45274353]
[102.25141907 130.75984192]
[86.47352600 127.71769714]
[74.36714935 117.15206909]
[60.24635696 122.21202087]
[46.12555695 127.27197266]
[32.00476074 132.33192444]
[17.88396454 137.39187622]
[3.80141044 142.55729675]
[-10.24211311 147.82792664]
[-24.28563499 153.09854126]
[-38.32915878 158.36917114]
[-52.37268066 163.63978577]
[-66.41620636 168.91041565]
[-51.58972168 171.18534851]
[-38.13984680 177.82620239]
[-27.31929779 188.21444702]
[-20.13588715 201.38253784]
[-17.25867081 216.10401917]
[-18.95562935 231.00772095]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 86]
[13 85]
[14 84]
[15 83]
[17 82]
[18 81]
[19 80]
[20 79]
[21 78]
[22 77]
[26 71]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[33 64]
[34 63]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[45 53]
[46 52]
[88 203]
[89 202]
[90 201]
[91 200]
[92 199]
[93 198]
[95 197]
[96 196]
[97 195]
[98 194]
[99 193]
[105 188]
[106 187]
[108 185]
[109 184]
[110 183]
[111 182]
[112 179]
[113 178]
[115 177]
[116 176]
[119 173]
[120 172]
[122 169]
[123 168]
[124 167]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[135 159]
[137 157]
[138 156]
[139 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
