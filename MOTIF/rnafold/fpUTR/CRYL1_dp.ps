%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRYL1)
} def

/sequence { (\
GCCCUCCCCGGAGCCCAGAGCUCGCAGCUCCGCCGGCGCCUGGUCCCAGCGCCCGCGGCGCCGCGUCCCCGGCCCAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.096070650 ubox
1 21 0.005714330 ubox
1 25 0.005092525 ubox
1 56 0.003317476 ubox
1 59 0.017440680 ubox
1 73 0.201328892 ubox
2 11 0.082137689 ubox
2 13 0.096399619 ubox
2 20 0.005635308 ubox
2 24 0.005091388 ubox
2 55 0.003307936 ubox
2 58 0.017420967 ubox
2 72 0.201457071 ubox
3 10 0.082500633 ubox
3 11 0.135325251 ubox
3 57 0.016259957 ubox
3 71 0.200369652 ubox
3 72 0.018178473 ubox
4 10 0.141124883 ubox
4 11 0.028396718 ubox
4 13 0.034222746 ubox
4 18 0.005343455 ubox
4 20 0.029128483 ubox
4 71 0.021398068 ubox
5 10 0.026665888 ubox
5 11 0.006382736 ubox
5 12 0.038683634 ubox
5 17 0.005201155 ubox
5 19 0.029628997 ubox
6 10 0.018029466 ubox
6 11 0.039308988 ubox
6 18 0.029658212 ubox
6 71 0.003606743 ubox
6 72 0.019428383 ubox
7 71 0.019549513 ubox
7 72 0.037615391 ubox
8 71 0.035473948 ubox
8 72 0.293036466 ubox
9 24 0.004617418 ubox
9 32 0.010402037 ubox
9 63 0.018391406 ubox
9 65 0.036661120 ubox
9 71 0.296033872 ubox
10 16 0.030748454 ubox
10 23 0.009626688 ubox
10 31 0.022320346 ubox
10 62 0.018573310 ubox
10 64 0.017395723 ubox
10 67 0.009296163 ubox
10 68 0.035626928 ubox
10 69 0.034786115 ubox
10 70 0.296331435 ubox
10 74 0.013312923 ubox
10 75 0.912983249 ubox
10 79 0.024281008 ubox
11 15 0.030271955 ubox
11 22 0.004514754 ubox
11 23 0.221594992 ubox
11 30 0.022354160 ubox
11 61 0.017939968 ubox
11 67 0.035249048 ubox
11 68 0.035122880 ubox
11 69 0.277565867 ubox
11 73 0.010972971 ubox
11 74 0.913839264 ubox
11 78 0.024334620 ubox
12 22 0.342639332 ubox
12 29 0.022358201 ubox
12 66 0.029914126 ubox
13 21 0.354995769 ubox
13 28 0.022357322 ubox
13 33 0.007831744 ubox
13 59 0.018834375 ubox
13 61 0.004942779 ubox
13 66 0.010665040 ubox
13 73 0.924698015 ubox
14 20 0.354550486 ubox
14 27 0.022318152 ubox
14 32 0.007868029 ubox
14 58 0.018827795 ubox
14 60 0.004940529 ubox
14 65 0.009523715 ubox
14 72 0.922364735 ubox
15 57 0.017162278 ubox
15 58 0.004570561 ubox
15 71 0.918204290 ubox
15 72 0.086707956 ubox
16 57 0.004486858 ubox
16 71 0.110432093 ubox
18 30 0.077392599 ubox
18 67 0.482602738 ubox
19 29 0.078081751 ubox
19 66 0.478693186 ubox
20 28 0.078180160 ubox
20 64 0.019547989 ubox
20 66 0.153174975 ubox
20 73 0.071545606 ubox
21 27 0.078159614 ubox
21 63 0.019278139 ubox
21 65 0.146502812 ubox
21 72 0.071718409 ubox
22 26 0.070413854 ubox
22 71 0.071253627 ubox
23 63 0.084138856 ubox
23 65 0.954703228 ubox
24 61 0.007588912 ubox
24 62 0.082653589 ubox
24 64 0.992320345 ubox
24 66 0.008410590 ubox
25 60 0.007997144 ubox
25 63 0.991642089 ubox
25 65 0.008782301 ubox
27 59 0.008981509 ubox
27 61 0.996022719 ubox
28 58 0.007121234 ubox
28 60 0.996052311 ubox
29 57 0.003323277 ubox
29 58 0.003819195 ubox
30 57 0.003281625 ubox
30 58 0.996279651 ubox
31 57 0.996960700 ubox
31 60 0.003204004 ubox
31 65 0.056369077 ubox
32 56 0.997936444 ubox
32 59 0.006211974 ubox
32 64 0.057805068 ubox
32 66 0.019612287 ubox
32 73 0.004617890 ubox
33 55 0.996260775 ubox
33 58 0.006225742 ubox
33 63 0.040879922 ubox
33 65 0.020965694 ubox
33 72 0.004646907 ubox
34 55 0.048095865 ubox
34 57 0.006210366 ubox
34 63 0.047177395 ubox
34 71 0.004633575 ubox
35 53 0.995643723 ubox
35 54 0.060413007 ubox
35 62 0.062515201 ubox
35 70 0.004299011 ubox
36 52 0.996675508 ubox
36 53 0.051792417 ubox
36 61 0.062531482 ubox
36 69 0.004085836 ubox
37 51 0.997147724 ubox
37 60 0.062531311 ubox
37 65 0.003300904 ubox
38 50 0.996929551 ubox
38 52 0.041395042 ubox
38 59 0.062532107 ubox
38 64 0.003310492 ubox
38 73 0.003203607 ubox
39 49 0.717334141 ubox
39 51 0.041399709 ubox
39 58 0.062531501 ubox
39 63 0.003273132 ubox
39 72 0.003205657 ubox
40 49 0.693635418 ubox
40 57 0.062499460 ubox
40 71 0.003200457 ubox
41 48 0.979461517 ubox
41 55 0.036096651 ubox
42 47 0.979443352 ubox
42 53 0.051716617 ubox
42 54 0.034804908 ubox
42 62 0.004081667 ubox
43 52 0.053098918 ubox
43 53 0.032570424 ubox
43 61 0.004081255 ubox
44 51 0.052497032 ubox
44 60 0.004023034 ubox
46 58 0.004011427 ubox
47 57 0.004000951 ubox
49 56 0.005149750 ubox
49 61 0.003701397 ubox
50 55 0.005145954 ubox
50 60 0.003729808 ubox
51 59 0.003768064 ubox
52 58 0.003768241 ubox
53 57 0.003740856 ubox
54 65 0.004694217 ubox
55 64 0.004806433 ubox
56 63 0.004806686 ubox
57 62 0.004741440 ubox
57 67 0.003677412 ubox
57 75 0.037180711 ubox
58 64 0.003253701 ubox
58 66 0.005140919 ubox
58 74 0.038734837 ubox
59 63 0.003234643 ubox
59 65 0.005528742 ubox
60 64 0.005177778 ubox
60 73 0.048833704 ubox
61 72 0.048897325 ubox
62 71 0.048929438 ubox
63 70 0.047486266 ubox
63 73 0.005728746 ubox
64 72 0.005691222 ubox
65 70 0.031772036 ubox
65 73 0.029845927 ubox
65 78 0.003319214 ubox
66 72 0.029879897 ubox
66 77 0.003196281 ubox
67 71 0.028947336 ubox
71 79 0.022018159 ubox
72 78 0.022222644 ubox
10 75 0.9500000 lbox
11 74 0.9500000 lbox
13 73 0.9500000 lbox
14 72 0.9500000 lbox
15 71 0.9500000 lbox
23 65 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
