%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COL6A2)
} def

/sequence { (\
GCUUACUCGGCGCCCGCGCCUCGGGCCGUCGGGAGCGGAGCCUCCUCGGGACCAGGACUUCAGGGCCACAGGUGCUGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.010346627 ubox
1 36 0.987324519 ubox
1 41 0.021842838 ubox
1 78 0.010155489 ubox
2 10 0.010353074 ubox
2 35 0.987681633 ubox
2 38 0.005083651 ubox
2 40 0.021932600 ubox
2 56 0.003935181 ubox
2 77 0.010106913 ubox
2 82 0.014925121 ubox
3 9 0.009912204 ubox
3 33 0.004304719 ubox
3 34 0.912057128 ubox
3 35 0.033486950 ubox
3 37 0.004885973 ubox
3 39 0.021705459 ubox
3 55 0.003910857 ubox
3 81 0.015179883 ubox
4 32 0.004834662 ubox
4 33 0.379897698 ubox
4 34 0.180333758 ubox
4 37 0.003603010 ubox
4 38 0.020434584 ubox
4 54 0.003581543 ubox
4 80 0.014117067 ubox
6 32 0.215204292 ubox
6 33 0.910056571 ubox
6 35 0.007391556 ubox
6 40 0.029082858 ubox
6 50 0.005355122 ubox
6 82 0.040495474 ubox
7 31 0.036225339 ubox
7 32 0.959247934 ubox
7 33 0.004890961 ubox
7 34 0.006904163 ubox
7 39 0.029372189 ubox
7 49 0.005377463 ubox
7 81 0.040746338 ubox
8 28 0.008528962 ubox
8 31 0.996435219 ubox
8 32 0.005853285 ubox
8 33 0.005751540 ubox
8 38 0.029484567 ubox
8 48 0.005389649 ubox
8 77 0.006806130 ubox
9 27 0.008533542 ubox
9 30 0.997368599 ubox
9 42 0.012176790 ubox
9 47 0.004899236 ubox
9 76 0.007018366 ubox
9 79 0.060067120 ubox
10 26 0.007788855 ubox
10 29 0.997118494 ubox
10 36 0.030255307 ubox
10 41 0.012216962 ubox
10 45 0.003334721 ubox
10 75 0.007042041 ubox
10 78 0.060138670 ubox
11 25 0.007086727 ubox
11 28 0.997122140 ubox
11 35 0.030224474 ubox
11 40 0.012214709 ubox
11 74 0.007042101 ubox
11 77 0.060115431 ubox
12 26 0.704747321 ubox
12 27 0.705629593 ubox
12 41 0.008431501 ubox
12 66 0.003223906 ubox
12 73 0.006940266 ubox
12 75 0.003306897 ubox
12 76 0.057040821 ubox
12 78 0.008133079 ubox
13 24 0.006447565 ubox
13 25 0.996517076 ubox
13 33 0.030326030 ubox
13 40 0.008452489 ubox
13 65 0.003242163 ubox
13 72 0.006927679 ubox
13 74 0.003355181 ubox
13 77 0.008147048 ubox
14 23 0.006416078 ubox
14 24 0.996569651 ubox
14 25 0.043192631 ubox
14 32 0.030378991 ubox
14 38 0.016067405 ubox
14 64 0.003252360 ubox
14 71 0.006851492 ubox
15 23 0.996504665 ubox
15 24 0.043287268 ubox
15 31 0.030376518 ubox
15 37 0.016197814 ubox
15 63 0.003252753 ubox
16 22 0.966294869 ubox
16 29 0.005792631 ubox
16 30 0.029793227 ubox
16 36 0.016274227 ubox
16 66 0.003740917 ubox
16 75 0.060150712 ubox
17 23 0.027181803 ubox
17 28 0.027585851 ubox
17 35 0.016251644 ubox
17 65 0.003743851 ubox
17 74 0.060190923 ubox
18 22 0.028268809 ubox
18 26 0.023696172 ubox
18 27 0.019623002 ubox
18 66 0.006063044 ubox
18 73 0.060186341 ubox
19 25 0.030628605 ubox
19 33 0.013274322 ubox
19 56 0.003401344 ubox
19 64 0.003884881 ubox
19 65 0.006035167 ubox
19 72 0.060210093 ubox
20 24 0.030407169 ubox
20 32 0.013246411 ubox
20 33 0.009475856 ubox
20 55 0.003404294 ubox
20 63 0.003941165 ubox
20 64 0.005998138 ubox
20 71 0.060204550 ubox
21 32 0.009566384 ubox
21 54 0.003381710 ubox
21 62 0.003905601 ubox
21 63 0.005653180 ubox
21 70 0.058380580 ubox
22 31 0.016120624 ubox
23 30 0.016242170 ubox
23 53 0.004313313 ubox
23 60 0.004715967 ubox
23 61 0.003726661 ubox
23 67 0.006800036 ubox
24 29 0.014634216 ubox
24 52 0.004309294 ubox
24 59 0.005561902 ubox
24 66 0.006751768 ubox
24 67 0.059767894 ubox
25 58 0.006019810 ubox
25 66 0.059797565 ubox
26 49 0.004329694 ubox
26 56 0.006577098 ubox
26 64 0.007068162 ubox
26 65 0.059745780 ubox
27 48 0.004563498 ubox
27 55 0.006559636 ubox
27 63 0.007433465 ubox
27 64 0.059575700 ubox
28 36 0.005999194 ubox
28 47 0.004937946 ubox
28 52 0.021424838 ubox
28 58 0.022736497 ubox
29 35 0.005871400 ubox
29 49 0.013049189 ubox
29 51 0.021324454 ubox
29 57 0.022702349 ubox
30 37 0.004725481 ubox
30 48 0.019653491 ubox
30 50 0.020992153 ubox
30 56 0.022541817 ubox
30 63 0.008937100 ubox
31 36 0.006399949 ubox
31 46 0.024712564 ubox
31 47 0.020355912 ubox
31 53 0.009637856 ubox
31 59 0.013356295 ubox
31 60 0.011369278 ubox
31 61 0.003325402 ubox
31 79 0.003636376 ubox
32 45 0.032816205 ubox
32 52 0.009675779 ubox
32 53 0.016593963 ubox
32 58 0.013804727 ubox
32 59 0.012780662 ubox
32 61 0.040536166 ubox
32 78 0.003806825 ubox
33 44 0.032884345 ubox
33 47 0.006185593 ubox
33 52 0.016570106 ubox
33 58 0.012894016 ubox
33 60 0.040638931 ubox
34 43 0.032912460 ubox
34 46 0.006246771 ubox
34 59 0.040682513 ubox
34 76 0.006050311 ubox
35 41 0.012403296 ubox
35 42 0.030520691 ubox
35 45 0.006097008 ubox
35 58 0.040525248 ubox
35 75 0.006137844 ubox
35 78 0.100018135 ubox
36 40 0.016902644 ubox
36 48 0.010470910 ubox
36 74 0.006135232 ubox
36 77 0.100310444 ubox
37 43 0.003640704 ubox
37 44 0.006472711 ubox
37 45 0.069144347 ubox
37 46 0.005742486 ubox
37 47 0.009409907 ubox
37 53 0.225040122 ubox
37 59 0.006173582 ubox
37 60 0.005133066 ubox
37 61 0.118302725 ubox
37 67 0.004516207 ubox
37 73 0.003717646 ubox
37 76 0.099911778 ubox
37 79 0.945060602 ubox
38 42 0.003895969 ubox
38 43 0.005086233 ubox
38 44 0.069224089 ubox
38 45 0.007382289 ubox
38 46 0.006188760 ubox
38 47 0.035086367 ubox
38 52 0.225189232 ubox
38 58 0.006603700 ubox
38 59 0.004901605 ubox
38 60 0.138083823 ubox
38 61 0.008757291 ubox
38 66 0.004416433 ubox
38 75 0.099334998 ubox
38 78 0.945046979 ubox
39 43 0.060229224 ubox
39 46 0.035549823 ubox
39 59 0.141416304 ubox
39 60 0.008390619 ubox
39 76 0.946724806 ubox
40 45 0.035080465 ubox
40 58 0.141764902 ubox
40 59 0.006670073 ubox
40 66 0.006616910 ubox
40 73 0.094087450 ubox
40 75 0.950655631 ubox
40 78 0.010653442 ubox
41 49 0.214688236 ubox
41 50 0.071248618 ubox
41 56 0.135727765 ubox
41 64 0.003977537 ubox
41 65 0.006674602 ubox
41 72 0.098849262 ubox
41 74 0.950149268 ubox
41 77 0.010713468 ubox
42 48 0.214543948 ubox
42 49 0.071342954 ubox
42 50 0.019481517 ubox
42 55 0.135705566 ubox
42 56 0.006704542 ubox
42 63 0.004011057 ubox
42 64 0.006576273 ubox
42 71 0.098941255 ubox
42 72 0.045592529 ubox
42 82 0.012935772 ubox
43 48 0.064749847 ubox
43 49 0.018378346 ubox
43 50 0.025381059 ubox
43 51 0.097025124 ubox
43 54 0.093713550 ubox
43 55 0.004807924 ubox
43 57 0.061745417 ubox
43 63 0.005098624 ubox
43 65 0.019630741 ubox
43 70 0.094622383 ubox
43 71 0.038647282 ubox
43 72 0.045841039 ubox
43 81 0.012833939 ubox
44 48 0.019914273 ubox
44 49 0.047056136 ubox
44 50 0.122425109 ubox
44 56 0.065643208 ubox
44 64 0.037743001 ubox
44 65 0.042533451 ubox
44 71 0.048287231 ubox
44 72 0.948975175 ubox
45 49 0.121566599 ubox
45 55 0.065647513 ubox
45 63 0.037831040 ubox
45 64 0.042498616 ubox
45 65 0.013497647 ubox
45 71 0.949469733 ubox
45 72 0.014383514 ubox
45 82 0.007134917 ubox
46 54 0.063334155 ubox
46 56 0.004557748 ubox
46 57 0.012558887 ubox
46 62 0.037122806 ubox
46 63 0.040824835 ubox
46 64 0.013569793 ubox
46 70 0.920871965 ubox
46 71 0.013377785 ubox
46 81 0.008033209 ubox
47 55 0.006419047 ubox
47 56 0.013852468 ubox
47 63 0.016597794 ubox
47 64 0.003573849 ubox
47 71 0.003431552 ubox
47 77 0.066869473 ubox
48 59 0.029983321 ubox
48 60 0.026416690 ubox
48 61 0.034718098 ubox
48 67 0.145192464 ubox
48 76 0.070659971 ubox
48 79 0.014334143 ubox
49 58 0.031528740 ubox
49 59 0.028439204 ubox
49 60 0.033664247 ubox
49 61 0.022912685 ubox
49 66 0.144475417 ubox
49 67 0.942731218 ubox
49 75 0.071092429 ubox
49 78 0.014279482 ubox
49 79 0.016289409 ubox
50 58 0.029116124 ubox
50 59 0.031900957 ubox
50 60 0.022783433 ubox
50 61 0.017403270 ubox
50 66 0.933477195 ubox
50 78 0.016271815 ubox
51 59 0.021782537 ubox
51 60 0.017201991 ubox
51 73 0.071609723 ubox
52 64 0.711603377 ubox
52 65 0.630176990 ubox
52 72 0.071861351 ubox
53 63 0.716339131 ubox
53 64 0.629004287 ubox
53 71 0.071822930 ubox
53 77 0.018773912 ubox
54 60 0.043977344 ubox
54 76 0.019363175 ubox
55 59 0.035632205 ubox
55 61 0.709749424 ubox
55 67 0.072128559 ubox
55 75 0.019423552 ubox
55 79 0.178194446 ubox
56 60 0.462202309 ubox
56 66 0.071782472 ubox
56 78 0.178266253 ubox
57 73 0.019387293 ubox
58 64 0.038138839 ubox
58 65 0.059054291 ubox
58 72 0.019434201 ubox
58 82 0.098920262 ubox
59 63 0.035114341 ubox
59 64 0.054619008 ubox
59 71 0.019197916 ubox
59 81 0.100182558 ubox
59 82 0.004391053 ubox
60 70 0.016716654 ubox
60 80 0.085918088 ubox
60 81 0.007018439 ubox
61 77 0.244457893 ubox
62 76 0.267655341 ubox
63 75 0.269948208 ubox
63 76 0.004734543 ubox
63 79 0.011947307 ubox
64 75 0.005088399 ubox
64 76 0.006505560 ubox
64 78 0.011767230 ubox
64 79 0.034575823 ubox
65 73 0.269908213 ubox
65 75 0.008116421 ubox
65 78 0.034657776 ubox
66 72 0.270390303 ubox
66 74 0.007888606 ubox
66 77 0.033704133 ubox
67 71 0.268427843 ubox
67 74 0.020294830 ubox
67 77 0.006302091 ubox
68 73 0.017151766 ubox
68 76 0.008251782 ubox
69 77 0.007544934 ubox
70 76 0.011648971 ubox
71 75 0.011514992 ubox
71 79 0.016027630 ubox
72 78 0.016039293 ubox
73 77 0.015004748 ubox
76 81 0.003524070 ubox
1 36 0.9500000 lbox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
37 79 0.9500000 lbox
38 78 0.9500000 lbox
39 76 0.9500000 lbox
40 75 0.9500000 lbox
41 74 0.9500000 lbox
44 72 0.9500000 lbox
45 71 0.9500000 lbox
46 70 0.9500000 lbox
49 67 0.9500000 lbox
50 66 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
showpage
end
%%EOF
