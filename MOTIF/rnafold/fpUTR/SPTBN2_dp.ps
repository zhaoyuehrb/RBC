%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPTBN2)
} def

/sequence { (\
CCACUGAGCAGCCAACCGCAGCCUCUGGCCACAAGGAGAGCGGAGCACAGGAGCAGGAAGCCGCCUACCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.232712004 ubox
1 36 0.009155374 ubox
1 43 0.027243953 ubox
1 51 0.070062129 ubox
1 57 0.060780892 ubox
2 27 0.235919283 ubox
2 35 0.009167856 ubox
2 42 0.027349231 ubox
2 50 0.064629880 ubox
2 56 0.060711913 ubox
3 26 0.219528966 ubox
4 11 0.048746869 ubox
4 21 0.012612050 ubox
4 28 0.056400720 ubox
4 35 0.009545967 ubox
4 36 0.008476175 ubox
4 40 0.020897802 ubox
4 43 0.007277878 ubox
4 45 0.016874223 ubox
4 50 0.425312414 ubox
4 51 0.056268404 ubox
4 53 0.110398004 ubox
4 56 0.075152561 ubox
4 57 0.015509978 ubox
4 60 0.008334549 ubox
5 10 0.048335210 ubox
5 14 0.086098420 ubox
5 20 0.012895092 ubox
5 27 0.053252955 ubox
5 31 0.016574016 ubox
5 33 0.021666223 ubox
5 34 0.010986965 ubox
5 35 0.008464291 ubox
5 39 0.020360724 ubox
5 42 0.007261995 ubox
5 44 0.016683727 ubox
5 47 0.029665732 ubox
5 49 0.443438351 ubox
5 50 0.054885877 ubox
5 52 0.110392795 ubox
5 55 0.077031200 ubox
5 56 0.015337735 ubox
5 59 0.008288468 ubox
5 63 0.142789201 ubox
5 67 0.046686933 ubox
5 70 0.051005558 ubox
6 13 0.092948512 ubox
6 17 0.003216526 ubox
6 19 0.011112260 ubox
6 25 0.245831926 ubox
6 26 0.011166893 ubox
6 30 0.018588749 ubox
6 32 0.023336047 ubox
6 41 0.006824433 ubox
6 46 0.027536945 ubox
6 48 0.445388754 ubox
6 54 0.077308709 ubox
6 62 0.194058935 ubox
6 66 0.050005699 ubox
6 69 0.057118867 ubox
7 24 0.246458177 ubox
7 26 0.008664181 ubox
7 66 0.030008171 ubox
8 19 0.063713077 ubox
8 22 0.187620909 ubox
8 23 0.182633670 ubox
8 25 0.009275499 ubox
8 29 0.007738910 ubox
8 41 0.005016793 ubox
8 46 0.342646420 ubox
8 54 0.079731333 ubox
8 61 0.234536624 ubox
8 64 0.115318139 ubox
8 65 0.023478114 ubox
9 18 0.063913663 ubox
9 21 0.249711697 ubox
9 27 0.009867274 ubox
9 28 0.006960331 ubox
9 40 0.005010326 ubox
9 45 0.342314421 ubox
9 53 0.079829233 ubox
9 60 0.234607795 ubox
9 63 0.117143802 ubox
10 24 0.003663757 ubox
10 26 0.010329359 ubox
10 66 0.004851374 ubox
11 19 0.263964935 ubox
11 22 0.055184760 ubox
11 25 0.008746376 ubox
11 29 0.079419486 ubox
11 41 0.038082382 ubox
11 46 0.805940523 ubox
11 54 0.031951041 ubox
11 61 0.108911691 ubox
11 64 0.018637164 ubox
11 65 0.004111706 ubox
12 18 0.264021761 ubox
12 21 0.055525958 ubox
12 28 0.079612030 ubox
12 36 0.004139187 ubox
12 40 0.038050293 ubox
12 43 0.060561644 ubox
12 45 0.806690168 ubox
12 51 0.075436253 ubox
12 53 0.031883672 ubox
12 57 0.234949528 ubox
12 60 0.108197856 ubox
12 63 0.018803020 ubox
13 27 0.079597742 ubox
13 35 0.004148256 ubox
13 42 0.058921766 ubox
13 50 0.075453056 ubox
13 56 0.235021581 ubox
14 26 0.075132322 ubox
16 28 0.004971186 ubox
16 36 0.039322931 ubox
16 43 0.948757044 ubox
16 51 0.049678620 ubox
16 57 0.037033138 ubox
17 27 0.004988432 ubox
17 35 0.039370140 ubox
17 42 0.950030070 ubox
17 50 0.049718279 ubox
17 56 0.037066499 ubox
18 26 0.004157001 ubox
18 29 0.007222120 ubox
18 41 0.949701634 ubox
18 46 0.058797066 ubox
18 54 0.023223303 ubox
19 27 0.006670626 ubox
19 28 0.006623323 ubox
19 40 0.947491931 ubox
19 45 0.058741275 ubox
19 53 0.023259359 ubox
20 26 0.008133829 ubox
21 25 0.008446054 ubox
21 29 0.079876705 ubox
21 41 0.107216387 ubox
21 46 0.039545595 ubox
21 54 0.021953929 ubox
22 28 0.080781165 ubox
22 36 0.428307624 ubox
22 40 0.107958498 ubox
22 43 0.044518228 ubox
22 45 0.032876967 ubox
22 51 0.024163576 ubox
22 53 0.021873867 ubox
23 27 0.080208353 ubox
23 35 0.429124463 ubox
23 36 0.109850196 ubox
23 38 0.840865219 ubox
23 40 0.037458094 ubox
23 42 0.044847671 ubox
23 43 0.022207035 ubox
23 45 0.032291118 ubox
23 50 0.024068876 ubox
23 51 0.007628692 ubox
23 53 0.003332192 ubox
24 34 0.422734110 ubox
24 35 0.104518949 ubox
24 36 0.053902456 ubox
24 37 0.841266155 ubox
24 39 0.071296342 ubox
24 42 0.021807476 ubox
24 44 0.039382766 ubox
24 49 0.023153683 ubox
24 51 0.019586338 ubox
24 52 0.003961168 ubox
25 35 0.086838510 ubox
25 36 0.838977669 ubox
25 38 0.071615273 ubox
25 40 0.050233695 ubox
25 43 0.039568078 ubox
25 50 0.022224511 ubox
25 51 0.003300650 ubox
26 33 0.474515019 ubox
26 34 0.089172186 ubox
26 35 0.810672612 ubox
26 37 0.067010952 ubox
26 39 0.050497122 ubox
26 42 0.039184738 ubox
26 47 0.021896036 ubox
26 49 0.022398457 ubox
26 70 0.014303813 ubox
27 32 0.522437236 ubox
27 41 0.037225646 ubox
27 46 0.022011422 ubox
27 48 0.022440715 ubox
27 69 0.016146005 ubox
27 72 0.005804964 ubox
28 41 0.010960587 ubox
28 46 0.021548351 ubox
28 68 0.016075820 ubox
28 71 0.005879414 ubox
29 36 0.100674308 ubox
29 40 0.014059232 ubox
29 43 0.022565686 ubox
29 45 0.021175155 ubox
30 35 0.102334522 ubox
30 42 0.022939771 ubox
34 66 0.005647053 ubox
35 65 0.005842844 ubox
35 69 0.272833812 ubox
35 72 0.011134622 ubox
36 64 0.005385364 ubox
36 68 0.272862893 ubox
36 71 0.011223096 ubox
37 66 0.273151425 ubox
38 65 0.274407845 ubox
39 66 0.018803419 ubox
40 46 0.010634768 ubox
40 54 0.004796806 ubox
40 61 0.006376905 ubox
40 64 0.279726831 ubox
40 65 0.013422091 ubox
41 45 0.010575396 ubox
41 53 0.004804196 ubox
41 60 0.006400606 ubox
41 63 0.280097108 ubox
42 62 0.279984741 ubox
42 69 0.013397139 ubox
42 72 0.010083609 ubox
43 61 0.277502834 ubox
43 68 0.013390842 ubox
43 71 0.010176607 ubox
44 66 0.008612285 ubox
45 54 0.348425945 ubox
45 61 0.031348132 ubox
45 64 0.010350695 ubox
45 65 0.008230017 ubox
46 53 0.348930830 ubox
46 60 0.041822545 ubox
46 63 0.010687091 ubox
49 66 0.291805948 ubox
50 62 0.033469283 ubox
50 65 0.306683386 ubox
50 66 0.216275611 ubox
50 69 0.654694234 ubox
50 72 0.114609170 ubox
51 61 0.032714415 ubox
51 64 0.305167285 ubox
51 65 0.256391612 ubox
51 68 0.657933936 ubox
51 71 0.119732808 ubox
52 66 0.398685995 ubox
53 61 0.317631832 ubox
53 64 0.472735059 ubox
53 65 0.365728218 ubox
54 60 0.318226652 ubox
54 63 0.499242955 ubox
55 66 0.556791667 ubox
56 62 0.539912231 ubox
56 65 0.571863990 ubox
56 66 0.021997665 ubox
56 69 0.188459109 ubox
56 72 0.015920554 ubox
57 61 0.531445916 ubox
57 64 0.570442185 ubox
57 65 0.023181174 ubox
57 68 0.188579314 ubox
57 71 0.016083734 ubox
59 66 0.179077408 ubox
60 65 0.178704996 ubox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
50 69 0.9500000 lbox
51 68 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
showpage
end
%%EOF
