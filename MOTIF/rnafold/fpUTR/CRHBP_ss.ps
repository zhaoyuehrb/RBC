%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUCAUUCUUGGUGAAUAAUGCUGGGCCACGCUGAAAAUUUGUGGCUGAGAGCUGGACCCUCGUCAUCGCCACGUACUCUGUCAAUGAGACAGGGUAACCCAUGGUUACUGAGCUCCGAUCAGUUAAGGGGCAGAGAGCCUCCGCUCCCCACUGCUCUAUAAAAGAGACCCAGCAAAGGGACCCUACCAGCUUCUAGCUCUCAGUCUGCGCGAGGGUGUAGGAAGGAAAGCCCAGGACCUCCGGAGCAGAGCA\
CAGCAGCUGCAGAGGCAAGGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[96.75112915 738.74664307]
[92.47939301 756.57794189]
[79.77909088 769.68426514]
[62.25605774 774.46972656]
[59.09365463 789.13256836]
[55.93124771 803.79541016]
[52.76884460 818.45831299]
[58.30230331 833.89569092]
[47.49488449 846.22985840]
[31.46433449 842.77246094]
[26.70150948 827.08020020]
[38.10599518 815.29589844]
[41.26839828 800.63305664]
[44.43080139 785.97021484]
[47.59320831 771.30731201]
[37.89899826 764.73913574]
[30.95303917 755.26904297]
[27.58074188 743.98333740]
[28.19598007 732.18603516]
[32.75044632 721.24859619]
[40.73656082 712.45019531]
[51.24395752 706.82830811]
[63.06320572 705.05627441]
[66.71553040 690.50775146]
[70.36785889 675.95916748]
[74.02018738 661.41064453]
[77.67251587 646.86206055]
[76.25902557 639.63891602]
[81.44785309 632.17175293]
[85.26260376 617.66491699]
[98.36650848 600.87725830]
[114.78118134 595.03454590]
[128.17796326 599.05078125]
[130.51618958 584.23419189]
[132.85443115 569.41754150]
[135.19267273 554.60089111]
[121.81610870 561.38824463]
[108.12216187 555.26647949]
[104.25923920 540.77239990]
[113.09011078 528.64739990]
[128.07031250 527.87719727]
[138.09783936 539.03125000]
[141.26025391 524.36840820]
[144.42265320 509.70553589]
[147.58505249 495.04269409]
[150.74746704 480.37982178]
[189.84800720 413.77804565]
[185.38853455 399.45626831]
[180.92907715 385.13449097]
[176.46960449 370.81271362]
[172.01014709 356.49093628]
[167.55067444 342.16915894]
[163.09120178 327.84741211]
[158.63174438 313.52563477]
[154.17227173 299.20385742]
[149.71281433 284.88208008]
[145.25334167 270.56030273]
[140.79386902 256.23852539]
[136.33441162 241.91676331]
[123.06904602 235.24099731]
[118.34249878 220.78021240]
[125.43459320 206.91154480]
[120.97512817 192.58978271]
[109.80388641 182.73825073]
[113.08857727 167.26177979]
[108.62911224 152.94000244]
[87.09749603 152.06372070]
[67.64840698 142.78410339]
[53.42101288 126.59893799]
[46.71168518 106.12057495]
[48.60334778 84.65431976]
[34.97156143 78.39537811]
[21.33977699 72.13642883]
[7.70799065 65.87747955]
[-10.78629303 73.82297516]
[-28.85434341 65.67145538]
[-34.94446945 47.13142014]
[-48.77847290 41.33311844]
[-62.61248016 35.53481674]
[-76.44648743 29.73651695]
[-90.28048706 23.93821526]
[-104.11449432 18.13991356]
[-117.94850159 12.34161186]
[-131.78250122 6.54331017]
[-145.61651611 0.74500847]
[-160.94888306 5.46705198]
[-174.11856079 -3.69478893]
[-175.02287292 -19.71233368]
[-162.96812439 -30.29829407]
[-147.20167542 -27.33202553]
[-139.81820679 -13.08899689]
[-125.98420715 -7.29069519]
[-112.15019989 -1.49239349]
[-98.31619263 4.30590820]
[-84.48218536 10.10420990]
[-70.64818573 15.90251160]
[-56.81417847 21.70081329]
[-42.98017120 27.49911499]
[-29.14616776 33.29741669]
[-21.10287285 27.03217125]
[-11.11117649 24.63165855]
[-0.94139802 26.58962440]
[7.57621098 32.62144852]
[12.88083744 41.70335388]
[13.96693897 52.24569321]
[27.59872437 58.50464249]
[41.23051071 64.76358795]
[54.86229324 71.02253723]
[47.35304260 53.49481583]
[44.41810226 33.26176453]
[37.18592072 20.12039566]
[29.95373917 6.97902870]
[22.72155571 -6.16233826]
[15.48937321 -19.30370522]
[0.11421175 -22.15649796]
[-9.79015541 -34.25763321]
[-9.54718971 -49.89332962]
[0.72838897 -61.68088531]
[16.18476677 -64.05458069]
[29.52391243 -55.89362717]
[34.44749069 -41.05137634]
[28.63074112 -26.53588867]
[35.86292267 -13.39452076]
[43.09510422 -0.25315383]
[50.32728958 12.88821316]
[57.55947113 26.02958107]
[64.81288147 24.12220573]
[68.76258850 9.65155315]
[79.31969452 20.30745697]
[86.57310486 18.40008163]
[86.40540314 3.40101933]
[86.23770905 -11.59804344]
[86.07000732 -26.59710503]
[85.90231323 -41.59616852]
[78.01121521 -55.30897522]
[85.60574341 -68.12195587]
[85.43804169 -83.12101746]
[85.27034760 -98.12007904]
[79.04730988 -113.89062500]
[92.47882080 -124.23619080]
[106.13829041 -114.19351959]
[100.26940918 -98.28778076]
[100.43710327 -83.28871155]
[100.60480499 -68.28964996]
[108.48390961 -55.64967728]
[100.90137482 -41.76386642]
[101.06906891 -26.76480293]
[101.23677063 -11.76574039]
[101.40446472 3.23332214]
[101.57216644 18.23238373]
[108.84644318 20.05854797]
[112.49877167 5.50999165]
[116.15133667 -9.03850460]
[130.69976807 -5.38569403]
[127.04732513 9.16231918]
[123.39499664 23.71087646]
[130.66928101 25.53704071]
[137.90145874 12.39567280]
[145.13363647 -0.74569476]
[152.36582947 -13.88706207]
[149.29579163 -29.63363075]
[159.80212402 -41.75783539]
[175.82528687 -40.95902252]
[185.07365417 -27.84997559]
[180.45269775 -12.48683071]
[165.50718689 -6.65487957]
[158.27500916 6.48648787]
[151.04283142 19.62785530]
[143.81063843 32.76922226]
[149.76292419 37.33216095]
[167.61975098 51.02097702]
[178.43182373 40.62390900]
[189.24391174 30.22684479]
[189.30247498 14.42266369]
[200.57783508 3.34828615]
[216.38050842 3.57394290]
[227.33505249 14.96575546]
[226.94233704 30.76516533]
[215.43534851 41.59865952]
[199.64097595 41.03892136]
[188.82888794 51.43598938]
[178.01681519 61.83305359]
[179.83735657 84.55931854]
[175.57989502 105.51922607]
[166.29812622 123.21622467]
[153.37911987 136.57925415]
[138.39578247 145.02621460]
[122.95088196 148.48054504]
[127.41035461 162.80230713]
[138.90057373 173.67822266]
[135.29690552 188.13031006]
[139.75636292 202.45208740]
[153.46817017 209.84289551]
[157.78669739 224.43074036]
[150.65617371 237.45730591]
[155.11564636 251.77906799]
[159.57511902 266.10086060]
[164.03457642 280.42260742]
[168.49404907 294.74438477]
[172.95350647 309.06616211]
[177.41297913 323.38793945]
[181.87245178 337.70971680]
[186.33190918 352.03146362]
[190.79138184 366.35324097]
[195.25083923 380.67501831]
[199.71031189 394.99679565]
[204.16978455 409.31857300]
[215.76161194 418.83853149]
[230.67709351 420.42868042]
[245.59255981 422.01882935]
[260.50802612 423.60900879]
[275.42352295 425.19915771]
[290.33898926 426.78933716]
[305.10278320 419.65051270]
[318.51315308 429.08947754]
[316.77465820 445.39620972]
[301.67572021 451.79577637]
[288.74880981 441.70480347]
[273.83334351 440.11465454]
[258.91787720 438.52447510]
[244.00239563 436.93432617]
[229.08692932 435.34414673]
[214.17144775 433.75399780]
[211.34980774 440.70297241]
[225.24777222 446.34625244]
[239.14573669 451.98953247]
[253.04360962 457.63302612]
[247.39990234 471.53082275]
[233.50245667 465.88748169]
[219.60449219 460.24420166]
[205.70652771 454.60095215]
[202.88488770 461.54992676]
[214.68667603 470.80831909]
[226.54002380 480.00061035]
[238.44458008 489.12646484]
[247.12094116 491.84738159]
[250.43045044 498.42153931]
[262.23223877 507.67993164]
[278.53475952 509.45758057]
[284.89797974 524.57183838]
[274.77600098 537.47448730]
[258.58142090 534.89233398]
[252.97384644 519.48168945]
[241.17205811 510.22329712]
[229.31871033 501.03103638]
[217.41415405 491.90515137]
[210.22315979 490.33612061]
[205.42828369 482.61010742]
[193.62649536 473.35171509]
[186.57244873 475.89932251]
[191.66748047 490.00750732]
[177.55921936 495.10232544]
[172.46435547 480.99459839]
[165.41030884 483.54223633]
[162.24790955 498.20507812]
[159.08551025 512.86791992]
[155.92309570 527.53076172]
[152.76069641 542.19366455]
[150.00930786 556.93914795]
[147.67106628 571.75579834]
[145.33282471 586.57238770]
[142.99459839 601.38903809]
[144.08369446 616.34942627]
[148.54315186 630.67120361]
[153.00262451 644.99298096]
[165.41410828 655.71154785]
[162.07197571 671.76647949]
[146.41432190 676.64196777]
[134.54840088 665.32238770]
[138.68084717 649.45245361]
[134.22138977 635.13067627]
[129.76191711 620.80889893]
[114.76499939 621.14434814]
[99.76941681 621.47967529]
[95.95466614 635.98651123]
[92.22106934 650.51440430]
[88.56874847 665.06292725]
[84.91641998 679.61151123]
[81.26409149 694.16009521]
[77.61176300 708.70861816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[7 12]
[23 280]
[24 279]
[25 278]
[26 277]
[27 276]
[29 275]
[30 274]
[33 262]
[34 261]
[35 260]
[36 259]
[42 258]
[43 257]
[44 256]
[45 255]
[46 254]
[47 207]
[48 206]
[49 205]
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[56 198]
[57 197]
[58 196]
[59 195]
[62 192]
[63 191]
[65 189]
[66 188]
[71 108]
[72 107]
[73 106]
[74 105]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[110 126]
[111 125]
[112 124]
[113 123]
[114 122]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[136 144]
[137 143]
[138 142]
[157 169]
[158 168]
[159 167]
[160 166]
[171 182]
[172 181]
[173 180]
[208 223]
[209 222]
[210 221]
[211 220]
[212 219]
[213 218]
[232 249]
[233 248]
[234 246]
[235 245]
[237 244]
[238 243]
[263 272]
[264 271]
[265 270]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
