%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRYBB3)
} def

/sequence { (\
AGACAGGCGAGUCUGCAGACGGCCGUGGCUCCUCUGUUCUUCCCGAGGCUACAGCAACAGCCAGAGGUGUUCCUGGGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.031804716 ubox
1 30 0.004408565 ubox
1 38 0.025438007 ubox
1 40 0.283005139 ubox
1 41 0.006941118 ubox
2 13 0.033689385 ubox
2 29 0.005007344 ubox
2 34 0.003281884 ubox
2 37 0.025300119 ubox
2 38 0.878264061 ubox
2 39 0.347696570 ubox
2 40 0.009320661 ubox
3 12 0.033703346 ubox
3 26 0.007383891 ubox
3 37 0.961821328 ubox
3 38 0.245952460 ubox
4 11 0.033676225 ubox
4 15 0.003723814 ubox
4 25 0.007543567 ubox
4 27 0.011734719 ubox
4 36 0.999116328 ubox
5 14 0.003891124 ubox
5 26 0.011294603 ubox
5 35 0.998934864 ubox
6 13 0.003902820 ubox
6 24 0.015867250 ubox
6 33 0.036708256 ubox
6 34 0.998346840 ubox
6 35 0.005269858 ubox
7 23 0.015911233 ubox
7 26 0.003368226 ubox
7 32 0.319945975 ubox
7 33 0.913061393 ubox
7 34 0.007342024 ubox
8 22 0.015892754 ubox
8 25 0.003722303 ubox
9 24 0.003734041 ubox
9 31 0.998258415 ubox
10 30 0.999067856 ubox
11 20 0.016106526 ubox
11 23 0.003818298 ubox
11 29 0.999198831 ubox
12 19 0.016145762 ubox
12 22 0.003468019 ubox
12 28 0.933032805 ubox
12 79 0.007044175 ubox
13 18 0.016130993 ubox
13 21 0.003719704 ubox
13 22 0.034389848 ubox
13 27 0.928097720 ubox
13 28 0.356479758 ubox
13 78 0.007570718 ubox
14 21 0.040240230 ubox
14 25 0.287622163 ubox
14 27 0.358150885 ubox
14 77 0.007597060 ubox
15 20 0.039807252 ubox
15 23 0.754307299 ubox
15 24 0.247232610 ubox
15 26 0.548413402 ubox
15 37 0.032179643 ubox
16 22 0.776231248 ubox
16 25 0.560379668 ubox
16 27 0.023271897 ubox
16 36 0.033991652 ubox
16 75 0.007839573 ubox
17 26 0.026932274 ubox
17 35 0.034000545 ubox
17 74 0.007820535 ubox
18 34 0.034006845 ubox
18 72 0.003876849 ubox
18 73 0.006738843 ubox
19 26 0.055378239 ubox
19 33 0.033572433 ubox
19 71 0.005342959 ubox
20 25 0.055673373 ubox
20 27 0.004389049 ubox
20 69 0.003412965 ubox
21 26 0.005670442 ubox
21 30 0.022471431 ubox
21 31 0.020753904 ubox
21 32 0.013841326 ubox
22 29 0.031000206 ubox
22 30 0.003375927 ubox
22 31 0.013652095 ubox
22 68 0.007500562 ubox
23 28 0.031049142 ubox
23 67 0.007887519 ubox
24 66 0.007882581 ubox
26 63 0.007697513 ubox
27 38 0.003600993 ubox
27 62 0.007948166 ubox
28 37 0.005632539 ubox
28 61 0.007949163 ubox
29 36 0.005806867 ubox
29 60 0.007948382 ubox
29 80 0.011065925 ubox
30 59 0.007716422 ubox
30 79 0.011394276 ubox
31 78 0.011440825 ubox
32 77 0.011440220 ubox
33 76 0.011370597 ubox
34 54 0.007664415 ubox
34 75 0.011316574 ubox
35 53 0.007693603 ubox
36 52 0.007697487 ubox
37 51 0.007512602 ubox
38 48 0.004665524 ubox
38 79 0.005749379 ubox
39 47 0.005660195 ubox
39 48 0.004633906 ubox
39 67 0.003402346 ubox
39 78 0.007347162 ubox
39 80 0.604403167 ubox
40 46 0.005636128 ubox
40 47 0.004553833 ubox
40 66 0.003415763 ubox
40 77 0.004573319 ubox
40 78 0.003839916 ubox
40 79 0.616443258 ubox
40 80 0.433754264 ubox
41 45 0.005081450 ubox
41 46 0.003701328 ubox
41 65 0.003428143 ubox
41 76 0.004044655 ubox
41 77 0.004015018 ubox
41 78 0.610877215 ubox
41 79 0.758175714 ubox
42 64 0.003430178 ubox
42 67 0.009221314 ubox
42 75 0.003989653 ubox
42 76 0.004635755 ubox
42 77 0.612620222 ubox
42 78 0.789974026 ubox
43 66 0.009197891 ubox
43 67 0.006933522 ubox
43 75 0.004706323 ubox
43 76 0.612609155 ubox
43 77 0.790119596 ubox
44 66 0.007019990 ubox
44 75 0.611976158 ubox
44 76 0.790026350 ubox
45 71 0.037107152 ubox
45 72 0.029007145 ubox
45 74 0.223016865 ubox
46 70 0.046748283 ubox
46 71 0.028169258 ubox
46 74 0.810292694 ubox
47 62 0.561570141 ubox
47 70 0.015544699 ubox
47 71 0.008660274 ubox
47 72 0.034969806 ubox
47 73 0.823020932 ubox
47 74 0.010600229 ubox
48 55 0.053577617 ubox
48 61 0.562373465 ubox
48 68 0.058081434 ubox
48 70 0.015691363 ubox
48 71 0.028802920 ubox
48 72 0.820547742 ubox
48 73 0.012934057 ubox
49 54 0.055626482 ubox
49 60 0.562444393 ubox
49 64 0.041715555 ubox
49 66 0.162364105 ubox
49 67 0.090206745 ubox
49 69 0.034557942 ubox
49 78 0.004307017 ubox
50 59 0.556811685 ubox
50 63 0.041310029 ubox
50 65 0.161717072 ubox
50 66 0.086623800 ubox
50 69 0.145616587 ubox
50 77 0.003297785 ubox
51 68 0.155278176 ubox
51 70 0.540537351 ubox
52 67 0.155599480 ubox
52 69 0.544175077 ubox
52 75 0.033332337 ubox
53 68 0.507094125 ubox
53 71 0.287162516 ubox
53 74 0.036108547 ubox
54 61 0.433186056 ubox
54 68 0.112534524 ubox
54 70 0.297021466 ubox
54 73 0.037034810 ubox
55 60 0.433038063 ubox
55 67 0.177685542 ubox
55 69 0.297254959 ubox
56 68 0.206807141 ubox
56 71 0.459977152 ubox
57 68 0.161786631 ubox
57 70 0.471039569 ubox
58 67 0.227444347 ubox
58 69 0.470717750 ubox
59 68 0.396965993 ubox
59 71 0.017710185 ubox
60 68 0.334335867 ubox
60 70 0.017596546 ubox
61 67 0.503623144 ubox
61 69 0.016161864 ubox
62 66 0.500581403 ubox
62 69 0.023447900 ubox
62 75 0.007470657 ubox
63 68 0.024632517 ubox
63 71 0.004570346 ubox
63 74 0.033825134 ubox
64 70 0.004725406 ubox
64 71 0.016015736 ubox
64 72 0.052171594 ubox
64 73 0.037597467 ubox
65 70 0.016807909 ubox
65 71 0.051610521 ubox
65 74 0.517296336 ubox
66 70 0.035053730 ubox
66 72 0.027285632 ubox
66 73 0.556267088 ubox
66 74 0.011480101 ubox
67 71 0.017840583 ubox
67 72 0.554923102 ubox
67 73 0.013923958 ubox
71 79 0.004948510 ubox
72 78 0.005115481 ubox
73 77 0.005079124 ubox
2 38 0.9500000 lbox
3 37 0.9500000 lbox
4 36 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
39 80 0.9500000 lbox
40 79 0.9500000 lbox
41 78 0.9500000 lbox
42 77 0.9500000 lbox
43 76 0.9500000 lbox
44 75 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
65 74 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
showpage
end
%%EOF
