%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGCCGUGGGAGAGGCUUAAAACAAACGCCGGAAGCAACUCCCAGCCCCAUAAAGAUCUGUGACCGGCAGCCCCAGACCUGCCUGCCUUCCUGACUUCUGUUCCAGAGCAAAGGUCAUUCAGCCGCUUGAAUCAGCCUUUUCCCCCCACCCGGUCCCCAACUUUGUUUACCCGAUAAGGAAGGUCAGCAUUCAAAGUCAAGAAGCGCCAUUUAUCUUCCCGUGCGCUCUACAAAUAGUUCCGUGAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[162.85026550 205.15534973]
[152.40956116 194.38540649]
[141.96887207 183.61544800]
[131.52816772 172.84550476]
[121.08747101 162.07554626]
[110.64677429 151.30560303]
[100.20607758 140.53564453]
[87.84506226 132.03828430]
[74.05005646 126.14779663]
[60.25504684 120.25731659]
[46.46004105 114.36683655]
[32.66503143 108.47634888]
[18.72800636 102.93024445]
[4.65755558 97.73194122]
[-9.41289520 92.53363037]
[-23.48334694 87.33531952]
[-37.55379868 82.13701630]
[-51.62424850 76.93870544]
[-65.69470215 71.74039459]
[-69.88184357 79.12203979]
[-75.81573486 85.57999420]
[-83.28417969 90.69847870]
[-91.97590637 94.11241913]
[-101.49315643 95.53102875]
[-111.36975098 94.75811768]
[-121.09394073 91.70799255]
[-130.13484192 86.41569519]
[-137.97114563 79.04098511]
[-144.12052917 69.86538696]
[-148.16812134 59.28235626]
[-162.36331177 64.12966156]
[-176.55850220 68.97696686]
[-190.75370789 73.82427216]
[-204.94889832 78.67157745]
[-211.96408081 92.57930756]
[-226.42907715 97.29295349]
[-239.64474487 90.51934052]
[-253.83995056 95.36664581]
[-268.03515625 100.21395111]
[-275.05032349 114.12168884]
[-289.51531982 118.83532715]
[-302.73098755 112.06172180]
[-316.92617798 116.90902710]
[-318.25015259 132.08027649]
[-325.63604736 145.39825439]
[-337.80419922 154.55552673]
[-352.64642334 157.96556091]
[-367.59121704 155.03752136]
[-380.04928589 146.27873230]
[-387.86218262 133.20668030]
[-389.67633057 118.08620453]
[-385.17736816 103.53701019]
[-375.14477539 92.07982635]
[-361.31677246 85.69968414]
[-346.08914185 85.50198364]
[-332.10015869 91.52097321]
[-321.77349854 102.71382904]
[-307.57830811 97.86652374]
[-301.26574707 84.42451477]
[-286.93884277 79.30644226]
[-272.88244629 86.01875305]
[-258.68725586 81.17144775]
[-244.49205017 76.32414246]
[-238.17951965 62.88214111]
[-223.85261536 57.76406860]
[-209.79620361 64.47637939]
[-195.60101318 59.62907410]
[-181.40582275 54.78176880]
[-167.21061707 49.93446350]
[-153.01542664 45.08715820]
[-151.03681946 37.85285568]
[-165.81820679 35.30122757]
[-180.80856323 34.76372528]
[-185.72113037 20.59097481]
[-174.27909851 10.89148235]
[-161.10212708 18.05795097]
[-147.07962036 23.38424873]
[-145.10102844 16.14994431]
[-154.85336304 4.75293303]
[-164.60569763 -6.64407873]
[-174.35804749 -18.04109001]
[-184.11038208 -29.43810272]
[-194.95127869 -29.64986038]
[-203.71395874 -35.65643692]
[-207.65499878 -45.28565598]
[-205.70182800 -55.28190613]
[-215.16813660 -66.91757965]
[-224.63446045 -78.55324554]
[-234.17283630 -90.12992096]
[-243.78291321 -101.64714813]
[-255.57249451 -100.39112854]
[-266.39846802 -104.92391968]
[-273.62713623 -114.01781464]
[-275.56042480 -125.35131836]
[-271.83370972 -136.10118103]
[-281.15481567 -147.85350037]
[-290.47592163 -159.60581970]
[-305.91616821 -165.13125610]
[-308.58450317 -181.31185913]
[-295.73599243 -191.50241089]
[-280.58804321 -185.21974182]
[-278.72360229 -168.92692566]
[-269.40249634 -157.17460632]
[-260.08139038 -145.42228699]
[-241.78417969 -144.40327454]
[-229.85876465 -130.06980896]
[-232.26568604 -111.25721741]
[-222.65560913 -99.73999023]
[-215.97534180 -96.62620544]
[-212.99879456 -88.01956177]
[-203.53247070 -76.38389587]
[-194.06616211 -64.74822998]
[-175.53656006 -59.16788864]
[-172.71336365 -39.19044113]
[-162.96102905 -27.79343033]
[-153.20869446 -16.39641762]
[-143.45635986 -4.99940586]
[-133.70401001 6.39760637]
[-119.63356018 1.19929790]
[-119.63356018 -13.80070210]
[-119.63356018 -28.80070305]
[-119.63356018 -43.80070114]
[-119.63356018 -58.80070114]
[-119.63356018 -73.80070496]
[-128.29727173 -87.72450256]
[-120.33313751 -102.05993652]
[-103.93399048 -102.05993652]
[-95.96985626 -87.72450256]
[-104.63356018 -73.80070496]
[-104.63356018 -58.80070114]
[-104.63356018 -43.80070114]
[-104.63356018 -28.80070305]
[-104.63356018 -13.80070210]
[-104.63356018 1.19929790]
[-65.82615662 20.86657524]
[-60.49639130 57.66994476]
[-46.42594147 62.86825180]
[-32.35548782 68.06655884]
[-18.28503799 73.26486969]
[-4.21458721 78.46318054]
[9.85586357 83.66148376]
[23.92631531 88.85979462]
[26.50790024 87.83460999]
[29.64585114 87.75625610]
[32.98658752 88.83972931]
[36.10590744 91.16998291]
[38.55551529 94.68134308]
[52.35052109 100.57182312]
[66.14553070 106.46231079]
[79.94053650 112.35279083]
[93.73554230 118.24327087]
[72.79946899 112.37652588]
[62.49943542 84.76020813]
[81.44610596 52.41531372]
[91.75226593 41.51655197]
[98.24179840 25.85378647]
[115.08894348 27.75382423]
[117.92691040 44.46855545]
[102.65102386 51.82271576]
[92.34486389 62.72147751]
[96.74571991 68.79457092]
[105.54741669 80.94076538]
[109.94827271 87.01386261]
[123.51432800 80.61369324]
[137.08038330 74.21352386]
[150.64643860 67.81335449]
[164.21249390 61.41318893]
[177.77854919 55.01301956]
[191.34460449 48.61285019]
[198.09553528 34.05934525]
[213.71652222 30.40362549]
[226.22447205 40.45004272]
[226.02436829 56.49184799]
[213.26971436 66.22313690]
[197.74476624 62.17890549]
[184.17871094 68.57907867]
[170.61265564 74.97924042]
[157.04660034 81.37940979]
[143.48054504 87.77957916]
[129.91448975 94.17974854]
[116.34844208 100.57991791]
[115.00534058 107.95867920]
[112.31912994 122.71619415]
[110.97602844 130.09495544]
[121.41672516 140.86489868]
[131.85742188 151.63485718]
[142.29812622 162.40480042]
[152.73881531 173.17475891]
[163.17951965 183.94470215]
[173.62020874 194.71464539]
[190.01138306 184.44473267]
[208.33822632 178.27949524]
[227.59056091 176.55549622]
[246.70796204 179.36454773]
[264.63818359 186.54890442]
[280.39505005 197.71003723]
[293.11267090 212.23083496]
[302.09313965 229.30963135]
[306.84463501 248.00451660]
[307.10855103 267.28527832]
[302.87347412 286.09017944]
[294.37567139 303.38439941]
[306.18563843 312.63235474]
[317.99560547 321.88031006]
[326.65618896 324.69604492]
[329.89382935 331.31716919]
[341.58807373 340.71105957]
[353.28228760 350.10498047]
[364.97650146 359.49887085]
[378.09963989 351.87341309]
[393.09185791 349.50735474]
[407.92553711 352.72073364]
[420.59460449 361.07891846]
[429.38565063 373.45156860]
[433.10971069 388.16534424]
[431.26321411 403.23037720]
[424.09582520 416.60922241]
[412.57690430 426.49246216]
[398.26428223 431.54354858]
[383.09362793 431.07928467]
[369.11663818 425.16250610]
[358.22360229 414.59341431]
[351.88769531 400.80136108]
[350.96578979 385.65161133]
[355.58261108 371.19308472]
[343.88839722 361.79919434]
[332.19415283 352.40530396]
[320.49993896 343.01138306]
[308.74761963 333.69027710]
[296.93768311 324.44232178]
[285.12771606 315.19436646]
[277.04058838 322.71374512]
[268.01596069 329.08111572]
[258.21679688 334.18084717]
[247.82002258 337.92019653]
[237.01358032 340.23107910]
[225.99278259 341.07110596]
[214.95692444 340.42462158]
[204.10568237 338.30273438]
[193.63539124 334.74328613]
[183.73564148 329.81021118]
[174.58572388 323.59219360]
[166.35142517 316.20129395]
[159.18206787 307.77078247]
[153.20771790 298.45278931]
[148.53691101 288.41561890]
[145.25457764 277.84054565]
[143.42063904 266.91867065]
[143.06878662 255.84750366]
[144.20590210 244.82727051]
[146.81198120 234.05732727]
[150.84037781 223.73263550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 187]
[5 186]
[6 185]
[7 184]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[30 70]
[31 69]
[32 68]
[33 67]
[34 66]
[37 63]
[38 62]
[39 61]
[42 58]
[43 57]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[86 112]
[87 111]
[88 110]
[89 108]
[90 107]
[95 104]
[96 103]
[97 102]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[154 160]
[155 159]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
[202 231]
[203 230]
[204 229]
[206 228]
[207 227]
[208 226]
[209 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
