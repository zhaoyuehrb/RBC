%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAACCCGACACCUCCCGCUGGCUGAGGUCAGGGAGCCGGGAGCGAGCCAGUGGCCCGGGAGUGGGCGGCGUUGCGUUUGGGUGUGUCCUCGGCGGCGACAGCAGCAGGUGUUUCUUGGCCGGGGCCCCGGAAGCUCCACCUCCCCAGCGGGCCCGAGCUGCCGCCGCCGAGCAGCCCCGGGUGAGAUAAGCAGUUUAGACAAACACUGGGCGACGGUGGCUCCAGCAUGUAUCAGCCGAGGUGGAGCUGCGGGG\
CCCUGGC\
) } def
/len { sequence length } bind def

/coor [
[85.74924469 110.29952240]
[71.00562286 113.06095123]
[56.26199341 115.82237244]
[41.51836395 118.58379364]
[26.77473831 121.34521484]
[12.04786682 124.19464874]
[-2.66172361 127.13198090]
[-6.53219366 141.85546875]
[-16.37137222 153.39138794]
[-30.18696213 159.48643494]
[-45.21710587 158.98069763]
[-58.48246002 152.02799988]
[-67.37677002 140.05484009]
[-82.08636475 142.99217224]
[-90.87054443 155.85592651]
[-105.83000183 158.62525940]
[-118.03948212 150.17160034]
[-132.74906921 153.10894775]
[-147.45866394 156.04627991]
[-162.16825867 158.98362732]
[-176.87783813 161.92095947]
[-184.65068054 166.65603638]
[-191.78062439 164.80442810]
[-206.52426147 167.56584167]
[-221.26788330 170.32727051]
[-236.01150513 173.08869934]
[-250.75514221 175.85011292]
[-265.49877930 178.61154175]
[-277.63867188 188.75714111]
[-291.57281494 183.49510193]
[-306.31643677 186.25653076]
[-310.12637329 198.12388611]
[-318.56188965 207.20137024]
[-329.98486328 211.81596375]
[-342.21466064 211.15266418]
[-352.94451904 205.39782715]
[-360.17654419 195.69233704]
[-374.98193359 198.10078430]
[-389.78732300 200.50921631]
[-404.59271240 202.91764832]
[-419.39810181 205.32608032]
[-431.77688599 215.17878723]
[-445.58135986 209.58540344]
[-460.38674927 211.99383545]
[-475.19213867 214.40226746]
[-489.99752808 216.81071472]
[-504.78823853 219.30752563]
[-519.56378174 221.89263916]
[-534.33935547 224.47775269]
[-537.51800537 227.32868958]
[-541.07720947 228.88307190]
[-544.56866455 229.17886353]
[-547.60125732 228.39393616]
[-549.88116455 226.81578064]
[-564.76330566 228.69223022]
[-579.64550781 230.56866455]
[-594.52764893 232.44511414]
[-609.40979004 234.32154846]
[-622.14044189 244.65901184]
[-637.35955811 238.55075073]
[-639.41101074 222.28042603]
[-626.18450928 212.58555603]
[-611.28625488 219.43937683]
[-596.40411377 217.56294250]
[-581.52191162 215.68649292]
[-566.63977051 213.81005859]
[-551.75756836 211.93360901]
[-536.92449951 209.70219421]
[-522.14892578 207.11708069]
[-507.37335205 204.53196716]
[-501.34576416 200.29725647]
[-492.40594482 202.00532532]
[-477.60055542 199.59689331]
[-462.79516602 197.18844604]
[-447.98980713 194.78001404]
[-436.66998291 185.09957886]
[-421.80651855 190.52070618]
[-407.00112915 188.11225891]
[-392.19577026 185.70382690]
[-377.39038086 183.29539490]
[-362.58499146 180.88696289]
[-355.35052490 164.74931335]
[-339.72753906 156.13035583]
[-321.90594482 158.66154480]
[-309.07788086 171.51289368]
[-294.33422852 168.75148010]
[-283.24890137 158.80339050]
[-268.26019287 163.86790466]
[-253.51655579 161.10649109]
[-238.77293396 158.34506226]
[-224.02931213 155.58364868]
[-209.28567505 152.82221985]
[-194.54205322 150.06079102]
[-179.81518555 147.21136475]
[-165.10559082 144.27403259]
[-150.39599609 141.33668518]
[-135.68641663 138.39935303]
[-120.97682190 135.46202087]
[-112.95045471 122.96749878]
[-98.07467651 119.77907562]
[-85.02369690 128.28259277]
[-70.31410980 125.34525299]
[-66.70037079 110.87437439]
[-57.12264252 99.36018372]
[-43.43944168 93.12071228]
[-28.34252930 93.44226074]
[-14.82742977 100.31460571]
[-5.59906101 112.42239380]
[9.11052895 109.48505402]
[15.03523827 105.10756683]
[24.01331520 106.60158539]
[38.75694275 103.84016418]
[53.50056839 101.07874298]
[68.24419403 98.31732178]
[82.98782349 95.55590057]
[88.08899689 87.06585693]
[96.96971893 82.68002319]
[106.81199646 83.79010010]
[114.49272156 90.04383850]
[129.29811096 87.63539886]
[144.10350037 85.22696686]
[158.90887451 82.81852722]
[173.71426392 80.41009521]
[188.51965332 78.00165558]
[203.32502747 75.59321594]
[218.13041687 73.18478394]
[232.93580627 70.77634430]
[247.74119568 68.36791229]
[262.54656982 65.95947266]
[277.35195923 63.55103683]
[285.49246216 53.57342911]
[297.85067749 51.85766220]
[307.74472046 58.78201675]
[322.57781982 56.55060196]
[337.41091919 54.31918335]
[352.24401855 52.08776855]
[367.07711792 49.85635376]
[381.91021729 47.62493896]
[396.74331665 45.39352417]
[411.57641602 43.16210938]
[426.40951538 40.93069077]
[441.24261475 38.69927597]
[456.07571411 36.46786118]
[460.58941650 28.25455093]
[468.25125122 23.09946442]
[477.28729248 22.04466820]
[485.67352295 25.19990730]
[491.58917236 31.74585724]
[506.49270630 30.04731369]
[519.32794189 20.79710007]
[532.84948730 27.04344749]
[547.75305176 25.34490585]
[557.58087158 13.25975227]
[572.71936035 11.74949455]
[584.18017578 21.19333458]
[599.08367920 19.49479103]
[611.91894531 10.24457741]
[625.44049072 16.49092484]
[640.34405518 14.79238224]
[655.24755859 13.09383965]
[670.15106201 11.39529705]
[679.97894287 -0.68985635]
[695.11743164 -2.20011377]
[706.57818604 7.24372530]
[721.48175049 5.54518270]
[736.38525391 3.84663987]
[751.28875732 2.14809728]
[766.19226074 0.44955447]
[781.09582520 -1.24898827]
[795.99932861 -2.94753098]
[801.42626953 -13.48194504]
[811.15637207 -20.03404808]
[822.71997070 -21.07978821]
[833.24835205 -16.47540283]
[840.18499756 -7.46464205]
[855.12481689 -8.80668259]
[870.06469727 -10.14872265]
[885.00451660 -11.49076271]
[890.57830811 -14.94948864]
[896.21948242 -15.07895279]
[900.31658936 -12.68204784]
[915.28424072 -13.66681957]
[930.25189209 -14.65159130]
[945.21954346 -15.63636303]
[948.50109863 -30.38113022]
[955.80499268 -43.60344696]
[966.53912354 -54.23143768]
[979.83343506 -61.40354156]
[994.61004639 -64.53834534]
[1009.67126465 -63.38172531]
[1023.79602051 -58.02744675]
[1035.83923340 -48.90955353]
[1044.82482910 -36.76718903]
[1050.02416992 -22.58468819]
[1051.01586914 -7.51175928]
[1047.71948242 7.22970390]
[1040.40234375 20.44467545]
[1029.65747070 31.06187820]
[1016.35601807 38.22062302]
[1001.57623291 41.34057999]
[986.51623535 40.16883087]
[972.39685059 34.80036545]
[960.36273193 25.67037582]
[951.38940430 13.51899433]
[946.20428467 -0.66872364]
[931.23663330 0.31604815]
[916.26904297 1.30081999]
[901.30139160 2.28559184]
[886.34655762 3.44908071]
[871.40673828 4.79112101]
[856.46685791 6.13316107]
[841.52703857 7.47520161]
[830.62835693 22.21222687]
[812.09674072 24.30630493]
[797.69787598 11.95599079]
[782.79437256 13.65453339]
[767.89080811 15.35307598]
[752.98730469 17.05161858]
[738.08380127 18.75016212]
[723.18023682 20.44870377]
[708.27673340 22.14724731]
[699.23486328 33.92775726]
[684.14477539 35.86262512]
[671.84960938 26.29881859]
[656.94610596 27.99736023]
[642.04260254 29.69590378]
[627.13903809 31.39444542]
[615.36981201 40.52317047]
[600.78222656 34.39831161]
[585.87872314 36.09685516]
[576.83685303 47.87736511]
[561.74676514 49.81223297]
[549.45159912 40.24842834]
[534.54803467 41.94696808]
[522.77880859 51.07569122]
[508.19122314 44.95083618]
[493.28771973 46.64937973]
[477.78042603 60.29401016]
[458.30712891 51.30096054]
[443.47402954 53.53237534]
[428.64093018 55.76379013]
[413.80783081 57.99520493]
[398.97473145 60.22661972]
[384.14163208 62.45803452]
[369.30853271 64.68945312]
[354.47543335 66.92086792]
[339.64233398 69.15228271]
[324.80923462 71.38369751]
[309.97616577 73.61511230]
[296.84173584 85.27414703]
[279.76040649 78.35642242]
[264.95501709 80.76485443]
[250.14962769 83.17329407]
[235.34423828 85.58173370]
[220.53886414 87.99016571]
[205.73347473 90.39860535]
[190.92808533 92.80703735]
[176.12269592 95.21547699]
[161.31732178 97.62391663]
[146.51193237 100.03234863]
[131.70654297 102.44078827]
[116.90116119 104.84922028]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 113]
[4 112]
[5 111]
[6 109]
[7 108]
[13 102]
[14 101]
[17 98]
[18 97]
[19 96]
[20 95]
[21 94]
[23 93]
[24 92]
[25 91]
[26 90]
[27 89]
[28 88]
[30 86]
[31 85]
[37 81]
[38 80]
[39 79]
[40 78]
[41 77]
[43 75]
[44 74]
[45 73]
[46 72]
[47 70]
[48 69]
[49 68]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[119 262]
[120 261]
[121 260]
[122 259]
[123 258]
[124 257]
[125 256]
[126 255]
[127 254]
[128 253]
[129 252]
[130 251]
[133 249]
[134 248]
[135 247]
[136 246]
[137 245]
[138 244]
[139 243]
[140 242]
[141 241]
[142 240]
[143 239]
[148 237]
[149 236]
[151 234]
[152 233]
[155 230]
[156 229]
[158 227]
[159 226]
[160 225]
[161 224]
[164 221]
[165 220]
[166 219]
[167 218]
[168 217]
[169 216]
[170 215]
[175 212]
[176 211]
[177 210]
[178 209]
[181 208]
[182 207]
[183 206]
[184 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
