%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUBP1)
} def

/sequence { (\
GAGAAUCAGAUUGUGCCCACAAGGCGGAAAUGUACGACAGCGGGUUCCGGUGACCACGAAGGCGGCAAAGGCGACGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.237144542 ubox
1 12 0.039201106 ubox
1 47 0.003744403 ubox
2 6 0.206521567 ubox
2 11 0.043900299 ubox
2 12 0.009128559 ubox
2 46 0.004180250 ubox
3 11 0.008320564 ubox
3 12 0.018608280 ubox
3 45 0.003952405 ubox
3 46 0.004037753 ubox
3 47 0.057525689 ubox
4 11 0.020332443 ubox
4 12 0.032788974 ubox
4 45 0.004200999 ubox
4 46 0.063360673 ubox
5 11 0.035268380 ubox
5 14 0.014509250 ubox
5 31 0.019741288 ubox
5 33 0.063100312 ubox
5 45 0.067484527 ubox
5 51 0.012676837 ubox
6 10 0.032314461 ubox
6 13 0.013466797 ubox
6 24 0.003375871 ubox
6 27 0.003290242 ubox
6 28 0.014720395 ubox
6 30 0.020419161 ubox
6 32 0.027672463 ubox
6 37 0.041510689 ubox
6 43 0.009390010 ubox
6 44 0.067777136 ubox
6 50 0.013018863 ubox
6 53 0.023000103 ubox
6 59 0.022663105 ubox
6 62 0.088696615 ubox
6 65 0.024338029 ubox
6 71 0.063791627 ubox
6 74 0.143954130 ubox
6 77 0.041626259 ubox
6 78 0.105410352 ubox
7 13 0.028083464 ubox
7 15 0.011762233 ubox
7 23 0.004798355 ubox
7 26 0.004989932 ubox
7 27 0.015723526 ubox
7 32 0.251018432 ubox
7 36 0.045152605 ubox
7 42 0.012431987 ubox
7 43 0.067963828 ubox
7 49 0.013445948 ubox
7 52 0.025115623 ubox
7 58 0.023963889 ubox
7 61 0.149098143 ubox
7 64 0.053673642 ubox
7 70 0.086432847 ubox
7 73 0.157211149 ubox
7 76 0.063718752 ubox
7 77 0.120729001 ubox
8 12 0.023193544 ubox
8 14 0.013430716 ubox
8 31 0.252776523 ubox
8 51 0.023378661 ubox
9 46 0.003941441 ubox
9 47 0.011620258 ubox
10 31 0.098572023 ubox
10 33 0.035927861 ubox
10 45 0.004350913 ubox
10 46 0.011692468 ubox
10 51 0.023736519 ubox
11 22 0.031151063 ubox
11 27 0.005514545 ubox
11 28 0.052375586 ubox
11 29 0.396042037 ubox
11 30 0.090781126 ubox
11 32 0.032176749 ubox
11 37 0.075899008 ubox
11 40 0.016130818 ubox
11 43 0.003846503 ubox
11 44 0.004051572 ubox
11 50 0.025563442 ubox
11 59 0.553410013 ubox
11 60 0.042925431 ubox
11 61 0.010716727 ubox
11 62 0.004604310 ubox
11 65 0.003959079 ubox
11 68 0.273832839 ubox
11 69 0.045628255 ubox
11 70 0.045642507 ubox
11 71 0.016906056 ubox
11 74 0.066614284 ubox
11 77 0.244159065 ubox
11 78 0.034383026 ubox
12 19 0.003717219 ubox
12 21 0.035225983 ubox
12 26 0.005219240 ubox
12 27 0.049479150 ubox
12 28 0.445503227 ubox
12 29 0.077025965 ubox
12 32 0.003387666 ubox
12 36 0.082597143 ubox
12 39 0.020083747 ubox
12 42 0.005442777 ubox
12 49 0.026722526 ubox
12 56 0.004496514 ubox
12 58 0.595556923 ubox
12 59 0.038003807 ubox
12 60 0.007780815 ubox
12 61 0.004409755 ubox
12 64 0.007270477 ubox
12 67 0.309913842 ubox
12 68 0.041354508 ubox
12 69 0.046230193 ubox
12 70 0.020008936 ubox
12 73 0.072362461 ubox
12 76 0.379170611 ubox
12 77 0.030705544 ubox
13 18 0.004163512 ubox
13 20 0.035895832 ubox
13 25 0.004412093 ubox
13 31 0.005834004 ubox
13 35 0.085854233 ubox
13 38 0.020423410 ubox
13 41 0.006038824 ubox
13 48 0.027258459 ubox
13 54 0.005529250 ubox
13 55 0.004941680 ubox
13 57 0.618940351 ubox
13 63 0.007976857 ubox
13 66 0.315945254 ubox
13 72 0.074137028 ubox
13 75 0.434261238 ubox
14 19 0.033582730 ubox
14 21 0.004802728 ubox
14 24 0.003949698 ubox
14 26 0.468095083 ubox
14 30 0.005577981 ubox
14 34 0.085476808 ubox
14 37 0.018762791 ubox
14 40 0.005584664 ubox
14 42 0.005331004 ubox
14 53 0.005455293 ubox
14 56 0.618954435 ubox
14 62 0.007083820 ubox
14 64 0.240183902 ubox
14 65 0.225205691 ubox
14 67 0.112928751 ubox
14 71 0.065676693 ubox
14 73 0.281372176 ubox
14 74 0.356258103 ubox
14 76 0.004137919 ubox
15 20 0.005622523 ubox
15 25 0.488672161 ubox
15 33 0.084193925 ubox
15 41 0.006646721 ubox
15 45 0.126150315 ubox
15 51 0.003828780 ubox
15 55 0.618384950 ubox
15 63 0.338067741 ubox
15 66 0.127779924 ubox
15 72 0.455982946 ubox
15 75 0.004250420 ubox
16 24 0.488255599 ubox
16 27 0.009959028 ubox
16 32 0.083969880 ubox
16 40 0.006637694 ubox
16 43 0.003415049 ubox
16 44 0.132351566 ubox
16 50 0.004616245 ubox
16 62 0.338591362 ubox
16 65 0.127685861 ubox
16 71 0.455569383 ubox
16 77 0.015808879 ubox
17 23 0.486233989 ubox
17 24 0.082972485 ubox
17 26 0.010578615 ubox
17 27 0.069602217 ubox
17 42 0.003418598 ubox
17 43 0.132472634 ubox
17 44 0.007223046 ubox
17 49 0.003657241 ubox
17 61 0.337751128 ubox
17 62 0.042298592 ubox
17 64 0.126274289 ubox
17 65 0.008597360 ubox
17 70 0.451098746 ubox
17 71 0.090786010 ubox
17 76 0.015733090 ubox
17 77 0.022050002 ubox
18 23 0.132792675 ubox
18 26 0.070078826 ubox
18 32 0.004176097 ubox
18 42 0.132253593 ubox
18 43 0.007577988 ubox
18 52 0.654161946 ubox
18 61 0.044361470 ubox
18 64 0.011490593 ubox
18 70 0.094608543 ubox
18 76 0.022067663 ubox
19 31 0.003971058 ubox
19 33 0.019075613 ubox
19 51 0.654546866 ubox
20 32 0.019944682 ubox
20 50 0.653945419 ubox
20 52 0.051668373 ubox
21 31 0.018484593 ubox
21 51 0.049141245 ubox
23 46 0.012066573 ubox
23 47 0.019012802 ubox
23 48 0.040844985 ubox
23 55 0.307144310 ubox
24 33 0.065927657 ubox
24 41 0.024876759 ubox
24 45 0.018481537 ubox
24 46 0.014999188 ubox
24 47 0.040040734 ubox
24 51 0.050300051 ubox
24 54 0.307258106 ubox
24 63 0.149740026 ubox
24 66 0.081245975 ubox
24 72 0.019092857 ubox
25 32 0.067580328 ubox
25 36 0.167856262 ubox
25 40 0.024835811 ubox
25 42 0.008576248 ubox
25 44 0.022093123 ubox
25 49 0.819832943 ubox
25 50 0.041166347 ubox
25 52 0.043940614 ubox
25 58 0.006015424 ubox
25 62 0.148577624 ubox
25 64 0.065008348 ubox
25 65 0.075593923 ubox
25 71 0.019063999 ubox
25 73 0.014959701 ubox
25 76 0.003805395 ubox
26 31 0.059058772 ubox
26 35 0.172491599 ubox
26 41 0.008895873 ubox
26 46 0.010603037 ubox
26 47 0.016832872 ubox
26 48 0.830620694 ubox
26 51 0.010814191 ubox
26 55 0.011157875 ubox
26 57 0.006328854 ubox
26 63 0.070933927 ubox
26 72 0.024513370 ubox
26 75 0.005964670 ubox
27 45 0.010135381 ubox
27 46 0.025623186 ubox
27 47 0.830706657 ubox
27 54 0.011146873 ubox
28 45 0.043080222 ubox
28 46 0.826100267 ubox
29 45 0.773617733 ubox
29 46 0.049571027 ubox
30 45 0.069195410 ubox
30 51 0.004123328 ubox
31 39 0.085127806 ubox
31 42 0.754866073 ubox
31 44 0.077705548 ubox
31 50 0.004039834 ubox
31 56 0.052082333 ubox
31 58 0.132114209 ubox
31 64 0.020254300 ubox
31 67 0.176786220 ubox
31 73 0.009074931 ubox
31 76 0.050029109 ubox
32 38 0.092933231 ubox
32 41 0.771109111 ubox
32 45 0.035335715 ubox
32 48 0.003886156 ubox
32 54 0.046551780 ubox
32 55 0.053104153 ubox
32 57 0.154209794 ubox
32 63 0.028224182 ubox
32 66 0.197294337 ubox
32 72 0.015088553 ubox
32 75 0.072490076 ubox
33 37 0.083822171 ubox
33 40 0.756741504 ubox
33 44 0.037642308 ubox
33 52 0.007585053 ubox
33 53 0.047847139 ubox
33 56 0.150374672 ubox
33 62 0.027909714 ubox
33 65 0.187141821 ubox
33 71 0.014685772 ubox
33 74 0.071390697 ubox
34 45 0.070825425 ubox
34 51 0.008781033 ubox
35 42 0.330615774 ubox
35 44 0.078423413 ubox
35 49 0.005150302 ubox
35 50 0.008807008 ubox
35 52 0.012011867 ubox
35 58 0.046181070 ubox
35 64 0.284790366 ubox
35 73 0.055203948 ubox
35 76 0.102845320 ubox
36 41 0.325295430 ubox
36 46 0.033063789 ubox
36 47 0.004228536 ubox
36 48 0.004936587 ubox
36 51 0.006104952 ubox
36 57 0.046591507 ubox
36 63 0.287797260 ubox
36 72 0.049566741 ubox
36 75 0.102396580 ubox
37 45 0.041405485 ubox
37 46 0.004055204 ubox
37 51 0.015731993 ubox
38 44 0.042599894 ubox
38 50 0.016577658 ubox
38 52 0.338384829 ubox
39 51 0.339676070 ubox
40 51 0.007882967 ubox
40 63 0.011005789 ubox
40 66 0.024714021 ubox
40 72 0.084938499 ubox
41 49 0.343977755 ubox
41 50 0.007421692 ubox
41 58 0.304614670 ubox
41 62 0.010499637 ubox
41 64 0.011570671 ubox
41 65 0.024189180 ubox
41 71 0.084897009 ubox
41 73 0.017678594 ubox
41 76 0.080049949 ubox
42 48 0.344250196 ubox
42 55 0.010237622 ubox
42 57 0.304671409 ubox
42 63 0.012628255 ubox
42 72 0.017795281 ubox
42 75 0.080233949 ubox
43 47 0.338693998 ubox
43 54 0.010066945 ubox
43 55 0.311006733 ubox
44 54 0.311280601 ubox
44 63 0.015772427 ubox
44 66 0.033269691 ubox
44 72 0.041299602 ubox
44 75 0.167756668 ubox
45 53 0.303288881 ubox
45 60 0.016514619 ubox
45 61 0.010097576 ubox
45 62 0.015224098 ubox
45 65 0.032098372 ubox
45 68 0.020956032 ubox
45 69 0.006124806 ubox
45 70 0.003383620 ubox
45 71 0.038759505 ubox
45 74 0.168004287 ubox
45 78 0.006126192 ubox
46 52 0.282024073 ubox
46 53 0.066202774 ubox
46 59 0.017557552 ubox
46 60 0.010037232 ubox
46 61 0.013023531 ubox
46 64 0.029706447 ubox
46 67 0.023949004 ubox
46 68 0.005947532 ubox
46 69 0.003249658 ubox
46 70 0.034153530 ubox
46 71 0.006384817 ubox
46 73 0.164975335 ubox
46 74 0.003880131 ubox
46 78 0.169582329 ubox
47 52 0.093021853 ubox
47 58 0.015765866 ubox
47 61 0.003223620 ubox
47 62 0.032446897 ubox
47 65 0.078434718 ubox
47 70 0.007683569 ubox
47 71 0.187697138 ubox
47 73 0.003414709 ubox
47 77 0.202980889 ubox
48 58 0.029606971 ubox
48 61 0.032558110 ubox
48 64 0.078888736 ubox
48 70 0.188837043 ubox
48 73 0.014373872 ubox
48 76 0.204417800 ubox
49 55 0.047022288 ubox
49 57 0.032761851 ubox
49 63 0.077637741 ubox
49 72 0.014591324 ubox
49 75 0.201469886 ubox
50 54 0.046563532 ubox
50 57 0.047015249 ubox
50 63 0.028060985 ubox
50 66 0.340803403 ubox
50 72 0.034927863 ubox
50 75 0.039234532 ubox
51 56 0.044115152 ubox
51 58 0.029217246 ubox
51 62 0.027832829 ubox
51 64 0.097850192 ubox
51 65 0.336152950 ubox
51 67 0.227363773 ubox
51 71 0.034406335 ubox
51 73 0.120641359 ubox
51 74 0.049656552 ubox
52 57 0.032756446 ubox
52 63 0.141170873 ubox
52 66 0.238501892 ubox
52 72 0.177598042 ubox
54 62 0.424396275 ubox
54 65 0.280646949 ubox
54 71 0.184607033 ubox
54 77 0.077474406 ubox
55 61 0.425097257 ubox
55 64 0.280993888 ubox
55 70 0.184248406 ubox
55 76 0.077090214 ubox
57 64 0.154436772 ubox
57 73 0.017452706 ubox
57 76 0.148268377 ubox
58 63 0.155003896 ubox
58 72 0.015256205 ubox
58 75 0.150844175 ubox
62 72 0.498975703 ubox
63 71 0.499463002 ubox
63 73 0.184625789 ubox
63 76 0.230708321 ubox
64 72 0.169887534 ubox
64 75 0.230137280 ubox
65 72 0.446314521 ubox
66 71 0.453201107 ubox
11 59 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
62 72 0.9500000 lbox
63 71 0.9500000 lbox
showpage
end
%%EOF
