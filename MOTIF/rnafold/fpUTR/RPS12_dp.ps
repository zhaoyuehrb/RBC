%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS12)
} def

/sequence { (\
CUCUUUCCCUGCCGCCGCCGAGUCGCGCGGAGGCGGAGGCUUGGGUGCGUUCAAGAUUCAACUUCACCCGUAACCCACCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.003749182 ubox
1 38 0.052176054 ubox
1 39 0.005592139 ubox
1 45 0.003285972 ubox
2 35 0.003216039 ubox
2 37 0.062681757 ubox
2 38 0.003285234 ubox
2 39 0.019258550 ubox
2 44 0.003366351 ubox
3 36 0.062050601 ubox
3 38 0.043789156 ubox
3 39 0.033562800 ubox
3 43 0.007621396 ubox
4 35 0.058372862 ubox
4 36 0.003268090 ubox
4 37 0.047951404 ubox
4 38 0.035871375 ubox
4 39 0.028810917 ubox
5 32 0.005364434 ubox
5 35 0.006970243 ubox
5 36 0.034812400 ubox
5 37 0.069836495 ubox
5 38 0.065287314 ubox
5 39 0.004745483 ubox
6 31 0.025352282 ubox
6 35 0.030848238 ubox
6 36 0.067468326 ubox
6 37 0.259812645 ubox
6 38 0.008292281 ubox
6 39 0.048412781 ubox
7 30 0.026439023 ubox
7 32 0.004246343 ubox
7 33 0.007395617 ubox
7 35 0.068633667 ubox
7 36 0.268457236 ubox
7 38 0.109306863 ubox
7 39 0.219323955 ubox
8 29 0.026289373 ubox
8 30 0.010533885 ubox
8 32 0.008458002 ubox
8 33 0.092645758 ubox
8 35 0.262226608 ubox
8 36 0.241678056 ubox
8 38 0.233818490 ubox
8 39 0.083368181 ubox
9 29 0.010554235 ubox
9 30 0.030761837 ubox
9 32 0.102016735 ubox
9 33 0.062541918 ubox
9 35 0.241539673 ubox
9 36 0.895491705 ubox
9 38 0.087411773 ubox
9 39 0.008617898 ubox
10 27 0.024309752 ubox
10 29 0.030885784 ubox
10 31 0.104951682 ubox
10 32 0.057387557 ubox
10 35 0.899437688 ubox
10 37 0.088185425 ubox
10 38 0.008408242 ubox
11 26 0.024782187 ubox
11 28 0.033314340 ubox
11 34 0.969475167 ubox
11 40 0.030328089 ubox
12 25 0.024531974 ubox
12 27 0.026160802 ubox
12 30 0.197023281 ubox
12 33 0.969844047 ubox
12 36 0.124841138 ubox
12 39 0.030378439 ubox
13 20 0.003336390 ubox
13 25 0.015453314 ubox
13 27 0.021162287 ubox
13 29 0.197578550 ubox
13 32 0.967598785 ubox
13 35 0.125121140 ubox
13 38 0.030307572 ubox
14 19 0.003185890 ubox
14 23 0.023611864 ubox
14 24 0.015427849 ubox
14 26 0.029524789 ubox
14 28 0.197599167 ubox
14 34 0.125151758 ubox
15 22 0.027559702 ubox
15 25 0.028666758 ubox
15 27 0.151525894 ubox
15 30 0.969203504 ubox
15 33 0.125139873 ubox
15 36 0.030399492 ubox
16 25 0.081613191 ubox
16 27 0.126961928 ubox
16 29 0.970830099 ubox
16 32 0.124830239 ubox
16 35 0.030450784 ubox
17 23 0.026430966 ubox
17 24 0.078854531 ubox
17 26 0.179602510 ubox
17 28 0.970818618 ubox
17 34 0.030451145 ubox
18 22 0.043406992 ubox
18 25 0.177653462 ubox
18 27 0.962338179 ubox
18 30 0.124821744 ubox
18 33 0.030449391 ubox
19 25 0.869971814 ubox
19 27 0.127032673 ubox
19 29 0.125023586 ubox
19 32 0.030434277 ubox
20 24 0.814620003 ubox
20 26 0.178122181 ubox
20 28 0.123971962 ubox
22 28 0.024458296 ubox
23 27 0.023121022 ubox
23 30 0.005211744 ubox
23 31 0.011686263 ubox
24 29 0.005951714 ubox
24 30 0.011781403 ubox
32 82 0.166506295 ubox
33 81 0.173532685 ubox
34 80 0.175052201 ubox
35 76 0.003664535 ubox
35 79 0.176576405 ubox
35 82 0.044874508 ubox
36 75 0.003646152 ubox
36 78 0.176253823 ubox
36 81 0.045788341 ubox
38 75 0.080901305 ubox
38 76 0.171221537 ubox
38 79 0.134952402 ubox
38 82 0.917547836 ubox
39 71 0.010069506 ubox
39 74 0.081502753 ubox
39 75 0.170916682 ubox
39 78 0.134888717 ubox
39 81 0.936376662 ubox
40 70 0.012219512 ubox
40 80 0.935993287 ubox
41 73 0.062939577 ubox
42 70 0.193489282 ubox
42 72 0.043204780 ubox
42 77 0.939713979 ubox
43 69 0.222241475 ubox
43 71 0.006820624 ubox
43 75 0.015902259 ubox
43 76 0.974482557 ubox
44 68 0.222451811 ubox
44 74 0.016486570 ubox
44 75 0.974605063 ubox
44 76 0.010359730 ubox
44 79 0.014983601 ubox
45 67 0.222459681 ubox
45 74 0.974481823 ubox
45 75 0.010107220 ubox
45 78 0.015048970 ubox
46 66 0.222372451 ubox
46 70 0.010014284 ubox
46 72 0.670699955 ubox
46 73 0.700403903 ubox
46 77 0.015045657 ubox
47 65 0.221697197 ubox
47 69 0.021739682 ubox
47 71 0.952967365 ubox
47 76 0.014950867 ubox
48 70 0.970578805 ubox
49 57 0.007755142 ubox
49 62 0.205462341 ubox
49 67 0.075287181 ubox
49 69 0.961374044 ubox
49 71 0.007208879 ubox
49 74 0.014589288 ubox
50 56 0.013030194 ubox
50 61 0.206063438 ubox
50 66 0.089102313 ubox
50 70 0.006773982 ubox
50 73 0.014515980 ubox
51 55 0.011895262 ubox
51 60 0.200950946 ubox
51 72 0.013270230 ubox
53 64 0.823058410 ubox
54 63 0.878943209 ubox
54 64 0.071176417 ubox
55 62 0.879131475 ubox
55 63 0.068561174 ubox
55 64 0.090822461 ubox
55 65 0.314092892 ubox
56 63 0.089467541 ubox
56 64 0.311953114 ubox
61 71 0.004516687 ubox
62 70 0.004668264 ubox
70 78 0.018703836 ubox
70 79 0.008957836 ubox
70 81 0.020694957 ubox
71 77 0.018276953 ubox
71 80 0.020636687 ubox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
38 82 0.9500000 lbox
39 81 0.9500000 lbox
40 80 0.9500000 lbox
42 77 0.9500000 lbox
43 76 0.9500000 lbox
44 75 0.9500000 lbox
45 74 0.9500000 lbox
46 73 0.9500000 lbox
47 71 0.9500000 lbox
48 70 0.9500000 lbox
49 69 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
showpage
end
%%EOF
