%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUUAGCCGCCACCGCGCGCUUCGGAAGGCCAGAGGGAGGGGGAGGCCUGUCAGUCUCGCGCGUUGCCUGGGCGAAGGGGGCGGAGCUUUGGCGUGGGGCGGCCAAUAGUGGGGGUGGCUGCGUGGGUCGCCAUGGGGACGGGGCUGUUCCCGGGGAGGCUGUGAUGGGUUGACAGGUGCGUGACAGUGGGAGCUGCUCUCGGCACAAGC\
) } def
/len { sequence length } bind def

/coor [
[88.60353088 215.01788330]
[91.07950592 195.79499817]
[91.30177307 180.79663086]
[91.52404785 165.79827881]
[91.74632263 150.79992676]
[62.02662277 134.73872375]
[48.66784286 103.71024323]
[33.70899963 102.59985352]
[18.75015450 101.48945618]
[3.79131079 100.37905884]
[-11.16753387 99.26866150]
[-26.12637711 98.15826416]
[-34.91535568 100.64368439]
[-41.29812622 96.91896820]
[-56.23887253 95.58702850]
[-71.17961884 94.25508881]
[-86.12036896 92.92315674]
[-101.06111908 91.59121704]
[-116.00186157 90.25927734]
[-130.97552490 89.37066650]
[-145.96893311 88.92617035]
[-160.96234131 88.48166656]
[-175.95576477 88.03717041]
[-190.94917297 87.59266663]
[-189.60661316 93.78793335]
[-190.28158569 100.81424713]
[-193.23857117 108.06092834]
[-198.56741333 114.84974670]
[-206.16836548 120.48259735]
[-215.74972534 124.29216003]
[-230.38067627 127.59901428]
[-242.13557434 138.18829346]
[-256.25546265 133.44715881]
[-270.88641357 136.75401306]
[-285.51736450 140.06085205]
[-293.97479248 153.14173889]
[-308.85977173 156.28692627]
[-321.27828979 148.14344788]
[-335.90924072 151.45028687]
[-347.66412354 162.03956604]
[-361.78402710 157.29843140]
[-376.41497803 160.60528564]
[-391.04592896 163.91213989]
[-402.71719360 175.43228149]
[-418.45565796 170.82443237]
[-422.07095337 154.82875061]
[-409.84396362 143.90022278]
[-394.35275269 149.28117371]
[-379.72180176 145.97433472]
[-365.09085083 142.66748047]
[-354.38244629 132.31474304]
[-339.21606445 136.81933594]
[-324.58511353 133.51248169]
[-316.87594604 120.81980133]
[-302.08520508 117.25775909]
[-288.82421875 125.42990112]
[-274.19326782 122.12305450]
[-259.56231689 118.81620789]
[-248.85391235 108.46346283]
[-233.68753052 112.96805573]
[-219.05657959 109.66120911]
[-217.62065125 102.29994965]
[-214.74882507 87.57743073]
[-213.31291199 80.21617126]
[-225.62844849 71.65303802]
[-237.94400024 63.08989716]
[-253.69148254 61.56431961]
[-259.72399902 47.94602203]
[-272.03955078 39.38288498]
[-284.35510254 30.81974792]
[-299.86386108 33.86170197]
[-312.93441772 24.97710800]
[-315.81225586 9.43704033]
[-306.78994751 -3.53885627]
[-291.22033691 -6.25221252]
[-278.34054565 2.90675855]
[-275.79196167 18.50420189]
[-263.47640991 27.06733894]
[-251.16085815 35.63047409]
[-236.29426575 36.54356003]
[-229.38085938 50.77435303]
[-217.06532288 59.33749008]
[-204.74977112 67.90062714]
[-190.50466919 72.59925842]
[-175.51126099 73.04375458]
[-160.51785278 73.48825836]
[-145.52442932 73.93275452]
[-130.53102112 74.37725830]
[-128.40110779 72.55584717]
[-125.42164612 71.46805573]
[-121.86832428 71.44156647]
[-118.13023376 72.69838715]
[-114.66992950 75.31852722]
[-99.72917938 76.65046692]
[-84.78842926 77.98240662]
[-69.84768677 79.31434631]
[-54.90693665 80.64628601]
[-39.96618652 81.97821808]
[-25.01598167 83.19942474]
[-10.05713749 84.30981445]
[4.90170670 85.42021179]
[19.86055183 86.53060913]
[34.81939697 87.64100647]
[49.77824020 88.75140381]
[52.17315292 80.99082184]
[55.75910187 73.70362854]
[60.44678497 67.07129669]
[66.11946869 61.25899506]
[72.63587189 56.41146088]
[79.83374023 52.64941406]
[87.53379822 50.06654358]
[95.54431152 48.72716904]
[103.66577911 48.66464996]
[111.69596100 49.88053513]
[119.43487549 52.34455109]
[127.06284332 39.42889786]
[134.69081116 26.51324463]
[142.31878662 13.59758949]
[149.94674683 0.68193555]
[157.57470703 -12.23371887]
[165.20268250 -25.14937210]
[162.61230469 -40.98191833]
[173.48202515 -52.78143692]
[189.47352600 -51.49635315]
[198.31948853 -38.11246490]
[193.23405457 -22.89675331]
[178.11833191 -17.52140617]
[170.49037170 -4.60575199]
[162.86239624 8.30990219]
[155.23443604 21.22555733]
[147.60646057 34.14121246]
[139.97850037 47.05686569]
[132.35054016 59.97251892]
[137.66394043 64.92602539]
[142.22698975 70.57828522]
[145.94877625 76.81669617]
[148.75515747 83.51696777]
[150.59022522 90.54562378]
[151.41741943 97.76264191]
[151.22024536 105.02422333]
[150.00263977 112.18571472]
[163.90298462 117.82312775]
[177.80332947 123.46054077]
[191.70367432 129.09796143]
[205.64541626 134.63221741]
[219.62776184 140.06303406]
[235.29301453 137.84707642]
[244.35551453 149.66741943]
[258.33786011 155.09822083]
[272.32022095 160.52903748]
[286.30258179 165.95985413]
[300.28491211 171.39067078]
[314.26727295 176.82148743]
[309.22262573 162.69522095]
[315.51998901 149.08114624]
[329.55157471 143.77882385]
[343.27859497 149.82600403]
[348.83679199 163.75822449]
[343.04180908 177.59361267]
[329.21459961 183.40580750]
[342.65948486 190.05674744]
[356.10437012 196.70768738]
[369.54925537 203.35862732]
[382.99414062 210.00956726]
[398.79428101 209.19335938]
[406.77136230 221.77172852]
[420.21627808 228.42266846]
[433.66116333 235.07359314]
[449.46130371 234.25740051]
[457.43838501 246.83575439]
[470.88327026 253.48669434]
[484.32815552 260.13763428]
[500.64987183 258.54589844]
[509.96783447 272.04061890]
[502.69653320 286.73959351]
[486.31604004 287.52178955]
[477.67721558 273.58251953]
[464.23233032 266.93157959]
[450.78744507 260.28063965]
[435.94897461 261.57257080]
[427.01022339 248.51849365]
[413.56533813 241.86755371]
[400.12042236 235.21661377]
[385.28195190 236.50852966]
[376.34320068 223.45445251]
[362.89831543 216.80351257]
[349.45343018 210.15257263]
[336.00854492 203.50163269]
[322.56365967 196.85069275]
[308.83645630 190.80384827]
[294.85412598 185.37303162]
[280.87176514 179.94221497]
[266.88940430 174.51139832]
[252.90704346 169.08058167]
[238.92469788 163.64976501]
[224.25955200 166.25418091]
[214.19694519 154.04539490]
[200.21459961 148.61457825]
[192.84202576 149.12304688]
[186.06626892 142.99829102]
[172.16592407 137.36088562]
[158.26557922 131.72346497]
[144.36523438 126.08605957]
[138.92559814 133.66828918]
[132.20626831 140.14364624]
[124.42812347 145.29925537]
[115.84689331 148.96562195]
[106.74468231 151.02220154]
[106.52240753 166.02055359]
[106.30013275 181.01890564]
[106.07785797 196.01725769]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 211]
[3 210]
[4 209]
[5 208]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[12 99]
[14 98]
[15 97]
[16 96]
[17 95]
[18 94]
[19 93]
[20 88]
[21 87]
[22 86]
[23 85]
[24 84]
[30 61]
[31 60]
[33 58]
[34 57]
[35 56]
[38 53]
[39 52]
[41 50]
[42 49]
[43 48]
[64 83]
[65 82]
[66 81]
[68 79]
[69 78]
[70 77]
[115 133]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[141 203]
[142 202]
[143 201]
[144 200]
[145 198]
[146 197]
[148 195]
[149 194]
[150 193]
[151 192]
[152 191]
[153 190]
[160 189]
[161 188]
[162 187]
[163 186]
[164 185]
[166 183]
[167 182]
[168 181]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
