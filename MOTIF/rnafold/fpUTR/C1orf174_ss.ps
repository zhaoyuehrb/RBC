%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUGACGUCGGACGCCGCCGCGGCGCGCUCUGCAGACUCCGGGUCGCCGCUCCGCCGGGACGCGUUGGCCGGGGCGCGCGGUGCUUGGCUGCGGUGCUCACACUC\
) } def
/len { sequence length } bind def

/coor [
[78.94929504 141.16146851]
[67.74391937 151.13340759]
[56.53854752 161.10534668]
[45.33317184 171.07728577]
[34.12779617 181.04922485]
[22.92241859 191.02116394]
[18.50211906 199.19624329]
[11.24307251 201.11436462]
[-0.24759375 210.75617981]
[-5.84569836 225.55387878]
[-20.56879425 227.80769348]
[-32.05946350 237.44950867]
[-43.55012894 247.09132385]
[-51.79709625 261.90429688]
[-68.31414795 258.08026123]
[-69.21193695 241.15008545]
[-53.19194412 235.60066223]
[-41.70127487 225.95884705]
[-30.21060944 216.31703186]
[-25.43439484 202.20898438]
[-9.88940811 199.26551819]
[1.60125875 189.62370300]
[12.95048046 179.81578064]
[24.15585709 169.84384155]
[35.36123276 159.87191772]
[46.56660843 149.89997864]
[57.77198410 139.92803955]
[68.97736359 129.95610046]
[78.78527069 118.60687256]
[87.02790833 106.07455444]
[88.03251648 92.12886047]
[100.43977356 85.68280792]
[108.68241119 73.15048981]
[116.92504120 60.61817169]
[125.16767883 48.08585739]
[133.41030884 35.55353928]
[141.65295410 23.02122116]
[141.95550537 17.49430466]
[144.21086121 13.14340782]
[147.60054016 10.53313065]
[151.20046997 9.79947376]
[160.50399780 -1.96676135]
[169.80754089 -13.73299599]
[179.11106873 -25.49923134]
[188.41459656 -37.26546478]
[197.71813965 -49.03170013]
[206.67550659 -61.06354904]
[215.27915955 -73.35083008]
[223.88279724 -85.63810730]
[232.30683899 -98.04922485]
[240.54946899 -110.58154297]
[248.79209900 -123.11385345]
[257.03472900 -135.64617920]
[265.27737427 -148.17849731]
[273.52001953 -160.71081543]
[281.76263428 -173.24311829]
[289.82214355 -185.89399719]
[297.69677734 -198.66075134]
[305.57144165 -211.42749023]
[313.44607544 -224.19424438]
[309.55795288 -239.51280212]
[317.71215820 -253.05105591]
[333.07095337 -256.77700806]
[346.52224731 -248.48013306]
[350.08560181 -233.08280945]
[341.64697266 -219.71998596]
[326.21282959 -216.31959534]
[318.33819580 -203.55284119]
[310.46353149 -190.78610229]
[302.58889771 -178.01934814]
[301.74307251 -170.55894470]
[294.29495239 -165.00048828]
[286.05233765 -152.46817017]
[277.80969238 -139.93585205]
[269.56704712 -127.40354156]
[261.32443237 -114.87122345]
[253.08178711 -102.33890533]
[244.83915710 -89.80658722]
[243.77671814 -82.37393951]
[236.17008972 -77.03446198]
[227.56643677 -64.74718475]
[218.96279907 -52.45990372]
[218.93351746 -47.54175568]
[215.70713806 -42.62582779]
[209.48437500 -39.72816849]
[200.18083191 -27.96193314]
[190.87730408 -16.19569969]
[181.57377625 -4.42946386]
[172.27023315 7.33677101]
[162.96670532 19.10300636]
[154.18525696 31.26385689]
[145.94262695 43.79617310]
[137.69999695 56.32849121]
[129.45736694 68.86080933]
[121.21472931 81.39312744]
[112.97209167 93.92544556]
[111.96748352 107.87113953]
[99.56022644 114.31719208]
[91.31758881 126.84951019]
[105.93924713 123.50180817]
[120.11830902 128.39611816]
[129.56155396 140.05052185]
[131.40971375 154.93623352]
[125.10319519 168.54608154]
[112.55151367 176.75918579]
[97.55513763 177.08877563]
[84.65474701 169.43502808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[8 22]
[9 21]
[11 19]
[12 18]
[13 17]
[29 99]
[30 98]
[32 96]
[33 95]
[34 94]
[35 93]
[36 92]
[37 91]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 82]
[48 81]
[49 80]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 70]
[58 69]
[59 68]
[60 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
