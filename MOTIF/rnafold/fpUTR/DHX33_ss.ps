%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCCUUCCCAAGCCCCCAAGGCAUGCUGGGAGAUGCAGUCCCUUUUUCUAAAGACUGGGGCGGCCGUGAGGUCAUCGGUGGUCGCCGGGAGCCGCCAGCACGUGGCGGCGAGGAAGGGGCGGUGUGCUCCUGUUGUCUGCACCUGAGAGGGGGCAGGAGCUCUCGGCGCUUGCGCCUCCCGCCGCGGUGCCCUCCCGAC\
) } def
/len { sequence length } bind def

/coor [
[58.44548798 259.03955078]
[49.18371964 267.78079224]
[37.34659576 272.35070801]
[24.70712280 272.10272217]
[18.37959671 285.70281982]
[12.05207157 299.30288696]
[5.72454548 312.90298462]
[-0.60297984 326.50308228]
[8.73474789 338.63012695]
[11.35574722 353.70956421]
[6.65773201 368.27621460]
[-4.27972794 378.98275757]
[-18.94328499 383.36895752]
[-33.96335983 380.42687988]
[-45.88845062 370.83255005]
[-51.97826004 356.79074097]
[-50.83338928 341.52810669]
[-42.71692657 328.55191040]
[-29.49397469 320.84399414]
[-14.20306873 320.17553711]
[-7.87554359 306.57546997]
[-1.54801786 292.97537231]
[4.77950764 279.37527466]
[11.10703278 265.77520752]
[0.71557021 252.05473328]
[-1.31022441 234.87329102]
[5.67671347 218.94921875]
[19.83588219 208.70152283]
[37.32307053 207.02371216]
[43.22457504 193.23341370]
[49.12607956 179.44311523]
[55.02758408 165.65281677]
[60.92908478 151.86251831]
[66.83058929 138.07221985]
[87.99340820 92.71480560]
[79.25228882 80.52494049]
[70.51117706 68.33506775]
[61.77005768 56.14520264]
[47.44035339 49.43922424]
[46.31142807 34.58746338]
[37.57031250 22.39759445]
[28.82919693 10.20772648]
[20.08808136 -1.98214269]
[11.34696674 -14.17201138]
[2.60585093 -26.36187935]
[-6.13526440 -38.55175018]
[-14.87637997 -50.74161911]
[-23.61749649 -62.93148804]
[-32.35861206 -75.12135315]
[-41.09972763 -87.31122589]
[-44.78562927 -83.31552887]
[-49.84167480 -80.14151764]
[-56.06420517 -78.16631317]
[-63.15628815 -77.71450043]
[-70.74122620 -79.03659058]
[-78.38084412 -82.29077148]
[-85.59772491 -87.52923584]
[-96.92007446 -97.36816406]
[-108.24241638 -107.20709229]
[-119.56475830 -117.04602814]
[-130.96327209 -126.79661560]
[-142.43725586 -136.45826721]
[-153.91123962 -146.11991882]
[-169.45112610 -149.09024048]
[-174.20295715 -163.20652771]
[-185.67694092 -172.86817932]
[-197.15092468 -182.52984619]
[-208.62490845 -192.19149780]
[-220.17369080 -201.76364136]
[-231.79653931 -211.24568176]
[-248.06214905 -213.33428955]
[-254.13563538 -228.56730652]
[-243.76913452 -241.27430725]
[-227.62681580 -238.38340759]
[-222.31449890 -222.86854553]
[-210.69163513 -213.38648987]
[-203.51631165 -211.59284973]
[-198.96325684 -203.66548157]
[-187.48927307 -194.00382996]
[-176.01528931 -184.34217834]
[-164.54129028 -174.68051147]
[-149.82211304 -172.40126038]
[-144.24958801 -157.59391785]
[-132.77560425 -147.93225098]
[-121.30161285 -138.27059937]
[-114.15504456 -136.36558533]
[-109.72583008 -128.36836243]
[-98.40348816 -118.52944183]
[-87.08113861 -108.69051361]
[-75.75879669 -98.85157776]
[-68.88680267 -101.85586548]
[-55.14281845 -107.86442566]
[-48.27082443 -110.86870575]
[-47.80432510 -125.86145020]
[-47.33782578 -140.85418701]
[-46.87133026 -155.84693909]
[-46.40483093 -170.83967590]
[-45.93833160 -185.83242798]
[-45.47183609 -200.82516479]
[-55.36562729 -213.45419312]
[-51.52049255 -229.02964783]
[-36.88608551 -235.60334778]
[-22.68867302 -228.13253784]
[-19.81929398 -212.34817505]
[-30.47909164 -200.35867310]
[-30.94558907 -185.36592102]
[-31.41208649 -170.37318420]
[-31.87858391 -155.38043213]
[-32.34508133 -140.38769531]
[-32.81158066 -125.39495087]
[-33.27807999 -110.40220642]
[-28.90985870 -96.05233765]
[-20.16874313 -83.86247253]
[-11.42762661 -71.67259979]
[-2.68651128 -59.48273468]
[6.05460405 -47.29286575]
[14.79572010 -35.10299683]
[23.53683472 -22.91312790]
[32.27795029 -10.72325802]
[41.01906586 1.46661043]
[49.76018143 13.65647888]
[58.50129700 25.84634781]
[72.20578003 31.68042374]
[73.95993042 47.40408707]
[82.70104218 59.59395599]
[91.44216156 71.78382111]
[100.18327332 83.97369385]
[114.15043640 89.44346619]
[128.84489441 86.43135834]
[143.53935242 83.41925049]
[158.23382568 80.40714264]
[172.92828369 77.39504242]
[187.62274170 74.38293457]
[202.31721497 71.37082672]
[217.01167297 68.35871887]
[231.70613098 65.34661865]
[243.67150879 54.99574661]
[257.69323730 60.01971817]
[272.38769531 57.00761032]
[287.08215332 53.99550629]
[292.55075073 39.56990433]
[304.96389771 30.40924263]
[320.36056519 29.43665314]
[333.82775879 36.96248245]
[341.06814575 50.58527374]
[339.77133179 65.95803833]
[330.35113525 78.17537689]
[315.81350708 83.33879852]
[300.79736328 79.80065918]
[290.09426880 68.68996429]
[275.39981079 71.70207214]
[260.70535278 74.71417999]
[249.79101562 84.84960175]
[234.71823120 80.04107666]
[220.02377319 83.05318451]
[205.32931519 86.06529236]
[190.63485718 89.07739258]
[175.94038391 92.08950043]
[161.24592590 95.10160828]
[146.55146790 98.11371613]
[131.85700989 101.12582397]
[117.16254425 104.13792419]
[114.64616394 111.20318604]
[128.77659607 116.23616791]
[123.74337769 130.36651611]
[109.61341858 125.33369446]
[107.09703827 132.39895630]
[116.57908630 144.02180481]
[126.06113434 155.64466858]
[135.54318237 167.26751709]
[145.02522278 178.89038086]
[154.50727844 190.51324463]
[162.36286926 195.18902588]
[164.04470825 202.39137268]
[173.34484863 214.16029358]
[182.64498901 225.92921448]
[198.14335632 225.16738892]
[211.11112976 233.68893433]
[216.56192017 248.21713257]
[212.39979553 263.16558838]
[200.22518921 272.78631592]
[184.71948242 273.37997437]
[171.84492493 264.71826172]
[166.55204773 250.13177490]
[170.87608337 235.22935486]
[161.57594299 223.46043396]
[152.27580261 211.69152832]
[142.88441467 199.99528503]
[133.40237427 188.37242126]
[123.92032623 176.74957275]
[114.43827820 165.12670898]
[104.95623016 153.50386047]
[95.47418213 141.88099670]
[80.62088776 143.97372437]
[74.71938324 157.76402283]
[68.81787872 171.55432129]
[62.91637421 185.34461975]
[57.01486969 199.13491821]
[51.11336517 212.92520142]
[59.80683899 222.48605347]
[64.22019196 234.58163452]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[29 199]
[30 198]
[31 197]
[32 196]
[33 195]
[34 194]
[35 127]
[36 126]
[37 125]
[38 124]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 113]
[50 112]
[57 90]
[58 89]
[59 88]
[60 87]
[61 85]
[62 84]
[63 83]
[65 81]
[66 80]
[67 79]
[68 78]
[69 76]
[70 75]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[128 162]
[129 161]
[130 160]
[131 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[138 152]
[139 151]
[140 150]
[167 193]
[168 192]
[169 191]
[170 190]
[171 189]
[172 188]
[174 187]
[175 186]
[176 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
