%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIKE1)
} def

/sequence { (\
GUAAUGCUGAGACAGACUCCCAGAAGAUCUGAGCGAGUCGCGUAGCUGAGCCCGGCAGGGGCUGGGGUGGUGCUGCUGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.161646331 ubox
1 13 0.179991372 ubox
1 17 0.015756617 ubox
1 28 0.006321457 ubox
1 38 0.004227806 ubox
1 41 0.028941707 ubox
1 46 0.015639847 ubox
1 51 0.024495365 ubox
1 73 0.005617177 ubox
1 76 0.027684278 ubox
1 79 0.091299801 ubox
2 6 0.151439410 ubox
2 9 0.045304825 ubox
2 12 0.175397666 ubox
2 16 0.015468427 ubox
2 27 0.006957399 ubox
2 37 0.013581584 ubox
2 40 0.028590849 ubox
2 44 0.003163134 ubox
2 45 0.015775465 ubox
2 48 0.004799940 ubox
2 50 0.024333076 ubox
2 72 0.005581805 ubox
2 75 0.027618511 ubox
2 78 0.090959135 ubox
3 8 0.046628722 ubox
3 47 0.004596984 ubox
3 71 0.004930155 ubox
3 74 0.025767052 ubox
3 77 0.082603082 ubox
4 28 0.003423562 ubox
4 38 0.014133154 ubox
4 43 0.028681132 ubox
5 14 0.193106177 ubox
5 22 0.005890517 ubox
5 27 0.003431061 ubox
5 35 0.096995747 ubox
5 37 0.011445940 ubox
5 42 0.030154221 ubox
5 48 0.003611634 ubox
5 72 0.011513400 ubox
5 75 0.005874878 ubox
6 13 0.213459454 ubox
6 21 0.006623317 ubox
6 34 0.155748319 ubox
6 38 0.036211973 ubox
6 39 0.011702108 ubox
6 41 0.083478360 ubox
6 46 0.077913941 ubox
6 51 0.114629885 ubox
6 68 0.003229645 ubox
6 71 0.015053841 ubox
6 73 0.017696317 ubox
6 76 0.049788933 ubox
6 79 0.118262750 ubox
7 15 0.071792890 ubox
7 23 0.035200890 ubox
7 33 0.155853406 ubox
7 37 0.039589511 ubox
7 40 0.083488302 ubox
7 45 0.079403293 ubox
7 50 0.115951682 ubox
7 67 0.003250444 ubox
7 70 0.015160194 ubox
7 72 0.017694284 ubox
7 75 0.049806924 ubox
7 78 0.118214277 ubox
8 14 0.122779730 ubox
8 22 0.035291898 ubox
8 32 0.155107830 ubox
8 35 0.004865854 ubox
8 36 0.039172053 ubox
8 44 0.079241217 ubox
8 49 0.115645918 ubox
8 69 0.013896270 ubox
9 13 0.127318261 ubox
9 19 0.087452251 ubox
9 21 0.034810161 ubox
9 34 0.008090459 ubox
9 39 0.007866980 ubox
9 41 0.009255137 ubox
9 43 0.075533342 ubox
9 68 0.006063953 ubox
9 74 0.004606658 ubox
9 77 0.008754108 ubox
10 18 0.087875431 ubox
10 30 0.136973593 ubox
10 38 0.006712396 ubox
10 47 0.115156928 ubox
10 74 0.015895791 ubox
10 77 0.036473385 ubox
10 80 0.032812503 ubox
11 17 0.087612685 ubox
11 19 0.034802468 ubox
11 29 0.137267944 ubox
11 39 0.025561019 ubox
11 46 0.114880597 ubox
11 73 0.016277273 ubox
11 76 0.038701662 ubox
11 79 0.035307451 ubox
12 18 0.033196670 ubox
12 28 0.132921090 ubox
12 38 0.025096339 ubox
12 43 0.090426761 ubox
12 68 0.004669316 ubox
12 71 0.012897300 ubox
13 31 0.130394537 ubox
13 37 0.024269858 ubox
13 42 0.096643745 ubox
13 67 0.004714676 ubox
13 70 0.012928846 ubox
13 72 0.011130711 ubox
13 75 0.037212813 ubox
13 78 0.037292811 ubox
14 30 0.130863083 ubox
14 71 0.008541357 ubox
14 74 0.035100650 ubox
14 77 0.034643351 ubox
14 80 0.005828528 ubox
15 29 0.131006123 ubox
15 39 0.971365965 ubox
15 73 0.017846003 ubox
15 76 0.007742983 ubox
16 28 0.130233542 ubox
16 38 0.974249917 ubox
16 68 0.007018310 ubox
16 71 0.010144412 ubox
17 23 0.081069310 ubox
17 26 0.104169079 ubox
17 33 0.022677443 ubox
17 37 0.974742017 ubox
17 67 0.007101184 ubox
17 70 0.010165709 ubox
18 22 0.073313726 ubox
18 24 0.042999886 ubox
18 25 0.096539931 ubox
18 27 0.104733834 ubox
18 32 0.022211780 ubox
18 36 0.974596257 ubox
18 66 0.006587180 ubox
18 67 0.003341466 ubox
18 69 0.008962592 ubox
19 23 0.050144553 ubox
19 26 0.105035124 ubox
19 31 0.018267012 ubox
19 35 0.974000760 ubox
19 65 0.006594585 ubox
19 66 0.006531790 ubox
19 67 0.006977727 ubox
20 64 0.006569308 ubox
20 65 0.006567893 ubox
20 66 0.006921562 ubox
21 31 0.979110050 ubox
21 48 0.004140905 ubox
21 64 0.006554184 ubox
21 65 0.006695311 ubox
22 30 0.980189371 ubox
22 47 0.004306970 ubox
22 63 0.004887037 ubox
23 29 0.980039373 ubox
23 46 0.004322042 ubox
23 62 0.004234161 ubox
24 28 0.852649765 ubox
25 47 0.004535646 ubox
26 39 0.006089532 ubox
26 46 0.004631245 ubox
27 38 0.006035898 ubox
28 37 0.003812757 ubox
29 37 0.004438225 ubox
29 45 0.009970603 ubox
30 36 0.004472544 ubox
30 44 0.010103128 ubox
31 43 0.010001428 ubox
32 47 0.004842547 ubox
32 77 0.092509361 ubox
32 80 0.103987684 ubox
33 41 0.028113092 ubox
33 46 0.004930798 ubox
33 76 0.095332489 ubox
33 79 0.113804288 ubox
34 40 0.028143819 ubox
34 45 0.004928457 ubox
34 75 0.095251272 ubox
34 78 0.113733703 ubox
35 39 0.026675489 ubox
35 41 0.003802788 ubox
35 74 0.050554349 ubox
35 77 0.059326386 ubox
36 74 0.088317992 ubox
36 77 0.117571294 ubox
36 80 0.041554691 ubox
37 73 0.100169570 ubox
37 76 0.130944459 ubox
37 79 0.045424339 ubox
38 72 0.016444557 ubox
38 75 0.129082011 ubox
38 78 0.037576443 ubox
39 69 0.003955454 ubox
39 72 0.109493783 ubox
39 75 0.011072368 ubox
39 78 0.027581652 ubox
40 46 0.003779688 ubox
40 68 0.004251083 ubox
40 71 0.116691653 ubox
40 73 0.153649723 ubox
40 74 0.003226356 ubox
40 76 0.047460917 ubox
40 77 0.034636429 ubox
40 79 0.935862892 ubox
41 45 0.003880210 ubox
41 50 0.003181959 ubox
41 67 0.004270673 ubox
41 69 0.006715500 ubox
41 70 0.117036078 ubox
41 72 0.153732372 ubox
41 75 0.047430038 ubox
41 78 0.936589848 ubox
42 68 0.004918406 ubox
42 71 0.085242028 ubox
42 73 0.021995592 ubox
42 74 0.035756417 ubox
42 76 0.966129419 ubox
42 77 0.034160857 ubox
42 79 0.041158815 ubox
43 69 0.168762367 ubox
43 70 0.038029964 ubox
43 72 0.021062930 ubox
43 75 0.966734481 ubox
43 78 0.041179556 ubox
44 68 0.182157223 ubox
44 71 0.016152867 ubox
44 74 0.967163356 ubox
44 77 0.041192984 ubox
45 68 0.052868621 ubox
45 71 0.034286070 ubox
45 73 0.967654593 ubox
45 76 0.041202046 ubox
46 65 0.006153113 ubox
46 66 0.197362885 ubox
46 67 0.046753585 ubox
46 70 0.040351059 ubox
46 72 0.966631079 ubox
46 75 0.040941579 ubox
47 64 0.007142947 ubox
47 65 0.210390069 ubox
47 66 0.038776288 ubox
47 69 0.050699388 ubox
47 72 0.010934935 ubox
48 53 0.003531899 ubox
48 68 0.058106757 ubox
48 71 0.064706517 ubox
49 63 0.219963234 ubox
49 74 0.007711580 ubox
49 80 0.003295993 ubox
50 62 0.220704551 ubox
50 68 0.651407472 ubox
50 71 0.011826105 ubox
50 73 0.008335324 ubox
50 79 0.003591612 ubox
51 60 0.010694785 ubox
51 61 0.220489322 ubox
51 66 0.780224929 ubox
51 67 0.572297548 ubox
51 70 0.008864738 ubox
51 72 0.006348498 ubox
51 78 0.003444711 ubox
52 59 0.014710468 ubox
52 60 0.220256793 ubox
52 65 0.842456674 ubox
52 66 0.477438013 ubox
52 69 0.006336858 ubox
53 58 0.017830215 ubox
53 59 0.219994073 ubox
53 64 0.899619544 ubox
53 65 0.358041175 ubox
53 78 0.013718921 ubox
54 63 0.952744455 ubox
54 77 0.014414512 ubox
54 80 0.103736417 ubox
55 62 0.967499849 ubox
55 76 0.014519863 ubox
55 79 0.115179768 ubox
56 61 0.965875668 ubox
56 64 0.030949430 ubox
56 75 0.014514653 ubox
56 78 0.115231748 ubox
57 63 0.031237087 ubox
57 74 0.013870142 ubox
57 77 0.115209253 ubox
58 62 0.030595663 ubox
58 73 0.011742713 ubox
58 74 0.004374196 ubox
58 76 0.115206780 ubox
59 73 0.009006972 ubox
60 74 0.114803304 ubox
61 68 0.003398828 ubox
61 71 0.014451475 ubox
61 73 0.115171068 ubox
62 67 0.003409278 ubox
62 70 0.014672737 ubox
62 72 0.115098635 ubox
63 69 0.014764780 ubox
64 68 0.007395132 ubox
64 71 0.016435426 ubox
65 74 0.004143620 ubox
66 73 0.004826114 ubox
66 74 0.006868513 ubox
66 77 0.006295767 ubox
66 80 0.059713830 ubox
67 73 0.008166683 ubox
67 76 0.007915806 ubox
67 79 0.079176514 ubox
68 72 0.007653135 ubox
68 75 0.007790519 ubox
68 78 0.079102404 ubox
69 74 0.004858621 ubox
69 77 0.079216388 ubox
69 80 0.007512403 ubox
70 76 0.079545155 ubox
70 79 0.008707249 ubox
71 75 0.074414409 ubox
71 78 0.008534761 ubox
72 77 0.004496341 ubox
72 79 0.044444251 ubox
73 78 0.044511483 ubox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
40 79 0.9500000 lbox
41 78 0.9500000 lbox
42 76 0.9500000 lbox
43 75 0.9500000 lbox
44 74 0.9500000 lbox
45 73 0.9500000 lbox
46 72 0.9500000 lbox
51 66 0.9500000 lbox
52 65 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
