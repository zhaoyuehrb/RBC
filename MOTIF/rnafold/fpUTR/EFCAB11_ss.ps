%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUUCAGCUUGGCCUGGGCCUCUCGCUUCCUCUCCCGUGUCUGGGUCUCACUCUGCCGGGUGUGCAGAUAAGACCUGGGCUGCCUGUCCAAAGGGUCGUGGUUAAUGACUGAUCCUGGAGCUGCAGGGCUCCUGGCUCCCCGUCCAGGACUACGGCUACCUCCAAGUUCCAUCUCCUUUCUCUCUAUAUAGUCUAUUA\
) } def
/len { sequence length } bind def

/coor [
[160.74386597 366.04049683]
[155.68707275 351.91854858]
[150.63026428 337.79663086]
[134.66921997 335.29922485]
[122.07154083 325.03604126]
[116.33356476 309.73345947]
[119.10917664 293.53262329]
[129.73449707 280.86898804]
[124.45760345 266.82781982]
[119.18070984 252.78666687]
[113.90381622 238.74549866]
[108.62692261 224.70433044]
[103.35002899 210.66316223]
[98.07314301 196.62199402]
[88.41685486 193.24986267]
[82.08116913 184.94227600]
[81.35320282 174.29965210]
[86.71479797 164.82421875]
[81.87933350 150.62498474]
[67.21201324 147.48338318]
[56.98489380 158.45634460]
[56.10971451 174.47550964]
[42.95672989 183.66130066]
[27.61578751 178.96714783]
[21.85514450 163.99401855]
[30.09387207 150.22801208]
[46.01192474 148.22923279]
[56.23904419 137.25625610]
[54.49675369 129.96144104]
[40.26089096 134.68798828]
[26.02502823 139.41453552]
[11.78916645 144.14108276]
[-0.88824040 152.15876770]
[-14.78349686 146.50881958]
[-18.26860237 131.91931152]
[-8.42710686 120.59919739]
[6.50629997 122.02216339]
[21.34159088 119.80537415]
[36.17687988 117.58858490]
[51.01217270 115.37179565]
[49.26988220 108.07697296]
[35.18790436 102.90997314]
[21.10592842 97.74296570]
[7.02395010 92.57596588]
[-7.05802679 87.40896606]
[-21.14000511 82.24195862]
[-35.22198105 77.07495880]
[-49.30395889 71.90795135]
[-63.38593674 66.74095154]
[-77.46791077 61.57394791]
[-88.96156311 68.60539246]
[-102.21276855 67.74329376]
[-112.39544678 59.52627182]
[-115.93051910 47.13055420]
[-129.93002319 41.74409485]
[-143.92951965 36.35763168]
[-157.92903137 30.97117043]
[-171.92852783 25.58470917]
[-185.52287292 33.31307602]
[-200.89505005 30.44423676]
[-210.78678894 18.33276749]
[-210.52749634 2.69733334]
[-200.23960876 -9.07949066]
[-184.78076172 -11.43704796]
[-171.45014954 -3.26217365]
[-166.54206848 11.58520794]
[-152.54255676 16.97166824]
[-138.54306030 22.35813141]
[-124.54356384 27.74459267]
[-110.54405975 33.13105392]
[-95.48503113 25.65163040]
[-79.35707092 31.48901176]
[-72.30091095 47.49197388]
[-58.21893311 52.65897369]
[-44.13695526 57.82597733]
[-30.05497932 62.99298096]
[-15.97300148 68.15998077]
[-1.89102423 73.32698822]
[12.19095325 78.49398804]
[26.27293015 83.66098785]
[40.35490799 88.82799530]
[54.43688583 93.99499512]
[62.37115097 78.86888123]
[74.67279816 68.58225250]
[88.97965240 64.09912872]
[84.36669922 49.82605362]
[79.75374603 35.55297852]
[65.57089233 28.58002472]
[60.55187225 13.59386444]
[67.67438507 -0.51447779]
[82.71277618 -5.37477303]
[96.74502563 1.89650619]
[101.44605255 16.98543930]
[94.02682495 30.94002724]
[98.63977814 45.21310425]
[103.25272369 59.48617935]
[117.72633362 63.42504883]
[128.93603516 53.45797729]
[140.14573669 43.49090576]
[151.35545349 33.52383423]
[162.56515503 23.55676079]
[173.77485657 13.58968830]
[184.98455811 3.62261629]
[196.19425964 -6.34445572]
[207.40397644 -16.31152725]
[206.02043152 -31.65401840]
[213.84486389 -44.71662140]
[227.69685364 -50.59761810]
[242.18229675 -47.23456192]
[253.39199829 -57.20163345]
[264.60171509 -67.16870117]
[270.07147217 -86.56538391]
[289.15362549 -89.66024780]
[300.04632568 -99.97280884]
[304.74832153 -115.07915497]
[319.31005859 -118.21052551]
[330.20275879 -128.52308655]
[334.90475464 -143.62942505]
[349.46649170 -146.76080322]
[360.35919189 -157.07336426]
[371.25192261 -167.38591003]
[382.14462280 -177.69847107]
[393.03732300 -188.01103210]
[403.93005371 -198.32357788]
[408.08493042 -214.18766785]
[423.97039795 -218.25993347]
[435.24487305 -206.35119629]
[430.31011963 -190.71212769]
[414.24261475 -187.43087769]
[403.34988403 -177.11831665]
[392.45718384 -166.80575562]
[381.56448364 -156.49320984]
[370.67175293 -146.18064880]
[359.77905273 -135.86808777]
[355.85617065 -121.49935913]
[340.51531982 -117.63037109]
[329.62261963 -107.31781006]
[325.69973755 -92.94908905]
[310.35888672 -89.08009338]
[299.46618652 -78.76753998]
[300.10586548 -68.55941010]
[294.90826416 -59.49620056]
[285.38232422 -54.69498444]
[274.56878662 -55.95899963]
[263.35906982 -45.99192810]
[252.14936829 -36.02485657]
[253.79519653 -21.24550438]
[246.33448792 -8.17638206]
[232.44642639 -1.93338871]
[217.37104797 -5.10182333]
[206.16133118 4.86524868]
[194.95162964 14.83232117]
[183.74192810 24.79939270]
[172.53222656 34.76646423]
[161.32252502 44.73353577]
[150.11280823 54.70061111]
[138.90310669 64.66767883]
[127.69340515 74.63475037]
[140.28800964 102.32765198]
[128.25567627 132.62010193]
[96.07856750 145.78952026]
[100.91403198 159.98875427]
[116.66764069 172.55751038]
[112.11430359 191.34509277]
[117.39119720 205.38626099]
[122.66809082 219.42742920]
[127.94498444 233.46859741]
[133.22187805 247.50976562]
[138.49877930 261.55093384]
[143.77566528 275.59210205]
[157.67996216 277.15939331]
[169.49519348 284.53088379]
[176.94447327 296.21881104]
[178.62138367 309.91030884]
[174.25506592 322.92501831]
[164.75219727 332.73983765]
[169.80899048 346.86175537]
[174.86578369 360.98370361]
[189.88186646 359.58078003]
[204.77494812 361.95712280]
[218.60884094 367.96331787]
[230.51393127 377.22180176]
[239.74185181 389.15060425]
[245.71253967 402.99984741]
[248.05065918 417.89895630]
[246.60925293 432.91140747]
[241.47891235 447.09344482]
[232.98213196 459.55361938]
[221.65303040 469.50863647]
[208.20378113 476.33273315]
[193.47979736 479.59692383]
[178.40664673 479.09606934]
[163.93182373 474.86160278]
[150.96525574 467.15972900]
[140.32202148 456.47457886]
[132.67117310 443.47784424]
[128.49362183 428.98651123]
[128.05198669 413.91149902]
[131.37403870 399.20043945]
[138.25094604 385.77810669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[13 165]
[14 164]
[18 162]
[19 161]
[20 28]
[21 27]
[41 82]
[42 81]
[43 80]
[44 79]
[45 78]
[46 77]
[47 76]
[48 75]
[49 74]
[50 73]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[85 96]
[86 95]
[87 94]
[97 158]
[98 157]
[99 156]
[100 155]
[101 154]
[102 153]
[103 152]
[104 151]
[105 150]
[109 146]
[110 145]
[111 144]
[113 140]
[114 139]
[116 137]
[117 136]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
