%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PUSL1)
} def

/sequence { (\
GUCCGCGCGCGCGCAGGAUUCCUGCGCUGGAGGCCGCCUCUGACGCCACCGGCUGGGCUCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.289571765 ubox
1 10 0.306837954 ubox
1 12 0.007615203 ubox
1 19 0.014943483 ubox
1 44 0.005520005 ubox
1 53 0.010227316 ubox
1 58 0.054535179 ubox
1 63 0.041005399 ubox
2 7 0.273644464 ubox
2 9 0.296183760 ubox
2 11 0.007419871 ubox
2 18 0.016592738 ubox
2 31 0.011635789 ubox
2 43 0.005523469 ubox
2 57 0.054563990 ubox
2 62 0.037672779 ubox
3 17 0.016908414 ubox
3 30 0.012636001 ubox
3 42 0.005490215 ubox
3 52 0.012448100 ubox
3 56 0.054650430 ubox
4 11 0.013731852 ubox
4 13 0.006402105 ubox
4 16 0.016897420 ubox
4 29 0.012794702 ubox
4 51 0.012588652 ubox
4 55 0.054632374 ubox
4 62 0.015269771 ubox
5 10 0.065308430 ubox
5 12 0.039373995 ubox
5 14 0.016465294 ubox
5 27 0.005184199 ubox
5 28 0.013515500 ubox
5 37 0.006369155 ubox
5 46 0.005945573 ubox
5 50 0.012652936 ubox
5 53 0.027251535 ubox
5 54 0.041344671 ubox
5 58 0.009010697 ubox
5 61 0.005766312 ubox
5 63 0.312364322 ubox
6 11 0.039493474 ubox
6 13 0.016523392 ubox
6 26 0.005024198 ubox
6 29 0.003979708 ubox
6 36 0.006388287 ubox
6 45 0.005971063 ubox
6 51 0.006039463 ubox
6 52 0.027562902 ubox
6 57 0.009022588 ubox
6 62 0.312314968 ubox
7 12 0.016219820 ubox
7 14 0.004042280 ubox
7 25 0.004059396 ubox
7 27 0.009952303 ubox
7 28 0.012436626 ubox
7 35 0.006284134 ubox
7 44 0.005933196 ubox
7 46 0.022963170 ubox
7 50 0.006975265 ubox
7 53 0.035597568 ubox
7 58 0.008718357 ubox
7 61 0.072629124 ubox
7 63 0.308342312 ubox
8 13 0.004043389 ubox
8 24 0.003843639 ubox
8 26 0.009583834 ubox
8 29 0.046265305 ubox
8 42 0.003671940 ubox
8 45 0.022993180 ubox
8 51 0.014956506 ubox
8 52 0.035501116 ubox
8 55 0.008934757 ubox
8 57 0.008988839 ubox
8 62 0.308284411 ubox
9 25 0.007372584 ubox
9 27 0.021083401 ubox
9 28 0.083367969 ubox
9 34 0.006208035 ubox
9 44 0.022717113 ubox
9 46 0.012870712 ubox
9 50 0.013632249 ubox
9 53 0.007780203 ubox
9 54 0.005881083 ubox
9 58 0.025079843 ubox
9 61 0.054531125 ubox
9 63 0.321689194 ubox
10 24 0.006849745 ubox
10 26 0.020259998 ubox
10 29 0.026115341 ubox
10 33 0.006261058 ubox
10 42 0.013658604 ubox
10 45 0.012940375 ubox
10 51 0.012587601 ubox
10 52 0.007824504 ubox
10 55 0.008817005 ubox
10 57 0.025085965 ubox
10 62 0.321609673 ubox
11 23 0.003869501 ubox
11 25 0.015447835 ubox
11 27 0.996954034 ubox
11 28 0.008945550 ubox
11 44 0.003245882 ubox
11 58 0.003457196 ubox
11 63 0.003617393 ubox
12 24 0.014287121 ubox
12 26 0.998331466 ubox
12 55 0.015409707 ubox
12 57 0.003457795 ubox
12 62 0.003420327 ubox
13 23 0.007153038 ubox
13 25 0.999655694 ubox
14 24 0.999708491 ubox
15 23 0.999534677 ubox
16 22 0.999699846 ubox
16 23 0.005393942 ubox
17 21 0.983551650 ubox
17 22 0.010490027 ubox
26 53 0.020256494 ubox
26 63 0.044501405 ubox
27 52 0.020338511 ubox
27 62 0.044109712 ubox
28 42 0.032612518 ubox
28 51 0.031496083 ubox
28 62 0.611890418 ubox
29 41 0.050865775 ubox
29 50 0.037593510 ubox
29 60 0.003563839 ubox
29 61 0.993058161 ubox
29 64 0.003993668 ubox
30 40 0.052954073 ubox
30 49 0.037540626 ubox
30 60 0.997684271 ubox
30 63 0.003963685 ubox
31 39 0.052967072 ubox
31 59 0.997415899 ubox
32 38 0.052973151 ubox
32 47 0.037794596 ubox
32 58 0.996667405 ubox
32 59 0.019132574 ubox
32 61 0.003989519 ubox
32 64 0.011373670 ubox
33 37 0.052117486 ubox
33 46 0.037839568 ubox
33 53 0.003682773 ubox
33 58 0.041265042 ubox
33 60 0.003963855 ubox
33 63 0.011473493 ubox
34 45 0.035052786 ubox
34 52 0.003688561 ubox
34 56 0.996119510 ubox
34 57 0.054406648 ubox
34 62 0.011461487 ubox
35 42 0.013801907 ubox
35 45 0.014108271 ubox
35 51 0.003689352 ubox
35 55 0.995752972 ubox
35 56 0.053589532 ubox
36 41 0.009719845 ubox
36 44 0.019935940 ubox
36 50 0.003502951 ubox
36 53 0.973489183 ubox
36 54 0.215970320 ubox
36 58 0.012393682 ubox
37 52 0.995892912 ubox
37 57 0.012426196 ubox
38 51 0.995167350 ubox
38 52 0.024487320 ubox
38 56 0.012411755 ubox
39 51 0.023267758 ubox
39 52 0.004104644 ubox
39 55 0.011201764 ubox
40 51 0.007998323 ubox
40 52 0.038014309 ubox
40 55 0.003964060 ubox
41 48 0.935917982 ubox
41 51 0.038568914 ubox
42 47 0.945960178 ubox
42 50 0.057743713 ubox
42 60 0.009402724 ubox
43 59 0.009434147 ubox
44 51 0.016555720 ubox
44 55 0.006953355 ubox
45 50 0.019762359 ubox
45 53 0.053591698 ubox
45 58 0.014296512 ubox
46 52 0.053659575 ubox
46 56 0.006921975 ubox
46 57 0.014255512 ubox
47 51 0.053293260 ubox
47 55 0.007050315 ubox
47 56 0.014126279 ubox
48 54 0.006622740 ubox
49 56 0.004216300 ubox
50 55 0.004463990 ubox
51 64 0.007948594 ubox
52 63 0.008060379 ubox
53 62 0.007934825 ubox
55 61 0.008019253 ubox
55 64 0.004465208 ubox
56 60 0.007897056 ubox
56 63 0.004481838 ubox
56 64 0.011797631 ubox
57 63 0.012019022 ubox
58 62 0.011945300 ubox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
