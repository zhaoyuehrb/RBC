%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUUGAGUGUCAUUCAAGGGACAGCACAACCUCAUCCAAGCUCUCCUACCUCUGCCCAGCCGUCCCUCUCAUCCUCCCCAUUCCUCGUCCACACUCCAUCCAAAGAAGAGGGAAAGCACCGAAUAGAGGGGGGCGAAGGCAAAGUCUGCUGUUCUUCCCCCUGGGCCCCCUUGCUCCUCCAUCCUCAUUCUCUCACCACCAGCCCCCCUAACCCCAAGGAGCCCAGGAACUGAGGCGACUCGCCCCACUGCC\
) } def
/len { sequence length } bind def

/coor [
[79.88291168 157.76887512]
[79.51335144 142.77342224]
[72.01562500 142.95820618]
[67.64477539 157.30728149]
[63.27393341 171.65634155]
[58.90308762 186.00540161]
[54.53224182 200.35447693]
[50.16139603 214.70353699]
[45.79054642 229.05261230]
[41.41970062 243.40167236]
[42.58829498 260.31530762]
[26.65916061 266.12039185]
[16.67131996 252.42076111]
[27.07063484 239.03082275]
[31.44148254 224.68176270]
[35.81232834 210.33268738]
[40.18317413 195.98362732]
[44.55401993 181.63456726]
[48.92486572 167.28549194]
[53.29571152 152.93643188]
[57.66655731 138.58735657]
[52.76847839 124.40960693]
[40.47237015 115.81858063]
[28.17626381 107.22754669]
[15.88015652 98.63652039]
[3.58404922 90.04549408]
[-8.71205807 81.45446777]
[-21.00816536 72.86344147]
[-13.51515961 85.85785675]
[-9.41735363 100.28726959]
[-8.96219349 115.28036499]
[-12.17716312 129.93177795]
[-18.86812782 143.35679626]
[-28.63105392 154.74473572]
[-40.87641144 163.40795898]
[-54.86475754 168.82330322]
[-69.75141907 170.66380310]
[-84.63745117 168.81829834]
[-98.62397766 163.39823914]
[-110.86641693 154.73089600]
[-120.62551117 143.33967590]
[-127.31195831 129.91239929]
[-130.52198792 115.25991058]
[-130.06178284 100.26696777]
[-125.95912170 85.83893585]
[-118.46174622 72.84703827]
[-108.02237701 62.07580185]
[-95.27140045 54.17563629]
[-80.97878265 49.62359619]
[-66.00758362 48.69455719]
[-51.26183319 51.44461441]
[-37.63586426 57.70529175]
[-47.32478714 46.25431442]
[-62.14534760 40.71702576]
[-64.45960999 26.00331116]
[-74.14852905 14.55233574]
[-83.83744812 3.10136175]
[-93.52636719 -8.34961224]
[-110.99584961 -9.49196053]
[-122.00640869 -22.66498947]
[-120.10722351 -39.38791656]
[-129.93647766 -50.71865845]
[-139.76573181 -62.04940033]
[-147.72937012 -66.46466827]
[-149.64524841 -73.58081055]
[-159.33416748 -85.03178406]
[-169.02308655 -96.48275757]
[-178.71200562 -107.93373108]
[-188.40092468 -119.38470459]
[-198.08984375 -130.83567810]
[-207.77877808 -142.28665161]
[-223.28684998 -143.74856567]
[-232.94967651 -155.49951172]
[-231.46038818 -170.27508545]
[-241.14930725 -181.72605896]
[-255.37377930 -176.54051208]
[-270.48574829 -176.53450012]
[-284.66131592 -181.68943787]
[-296.19619751 -191.36505127]
[-303.71054077 -204.37872314]
[-306.31417847 -219.15016174]
[-303.71188354 -233.89320374]
[-296.23672485 -246.83180237]
[-305.92562866 -258.28277588]
[-315.61456299 -269.73373413]
[-325.30346680 -281.18472290]
[-334.99240112 -292.63568115]
[-344.68130493 -304.08666992]
[-359.50189209 -309.62396240]
[-361.81613159 -324.33767700]
[-371.50506592 -335.78863525]
[-385.84121704 -330.80480957]
[-401.00955200 -331.34024048]
[-414.95861816 -337.32254028]
[-425.80194092 -347.94265747]
[-432.07305908 -361.76428223]
[-432.92382812 -376.91818237]
[-428.23922729 -391.35488892]
[-418.65280151 -403.12197876]
[-405.46099854 -410.62805176]
[-390.44793701 -412.85797119]
[-375.64401245 -409.51013184]
[-363.05130005 -401.03732300]
[-354.37289429 -388.58544922]
[-350.78247070 -373.83847046]
[-352.76559448 -358.79080200]
[-360.05407715 -345.47756958]
[-350.36517334 -334.02658081]
[-336.23760986 -329.30834961]
[-333.23034668 -313.77560425]
[-323.54141235 -302.32461548]
[-313.85250854 -290.87362671]
[-304.16357422 -279.42266846]
[-294.47467041 -267.97167969]
[-284.78573608 -256.52072144]
[-270.78814697 -261.75070190]
[-255.81773376 -261.87634277]
[-241.68116760 -256.86312866]
[-230.09109497 -247.29800415]
[-222.45864868 -234.32049561]
[-219.72166443 -219.48712158]
[-222.22943115 -204.58467102]
[-229.69833374 -191.41497803]
[-220.00941467 -179.96400452]
[-205.19117737 -178.98657227]
[-195.20211792 -167.51168823]
[-196.32778931 -151.97557068]
[-186.63887024 -140.52459717]
[-176.94995117 -129.07362366]
[-167.26103210 -117.62265778]
[-157.57211304 -106.17167664]
[-147.88319397 -94.72070312]
[-138.19427490 -83.26972961]
[-128.43499756 -71.87865448]
[-118.60573578 -60.54791641]
[-108.77648163 -49.21717453]
[-95.93890381 -50.11512756]
[-84.75663757 -43.36173630]
[-79.41908264 -31.22587013]
[-82.07539368 -18.03853416]
[-72.38647461 -6.58755922]
[-62.69755554 4.86341524]
[-53.00863266 16.31439018]
[-38.88108826 21.03262711]
[-35.87381363 36.56539536]
[-26.18489075 48.01636887]
[-20.17296028 49.02610397]
[-14.95008087 53.43101501]
[-12.41713810 60.56733322]
[-0.12103084 69.15836334]
[12.17507648 77.74938965]
[24.47118378 86.34041595]
[36.76729202 94.93144226]
[49.06339645 103.52246857]
[61.35950470 112.11349487]
[61.93457031 93.72879028]
[70.38339233 78.39015198]
[84.15947723 69.07469177]
[99.79301453 67.17066956]
[113.74531555 72.31012726]
[123.20747375 82.61396790]
[126.66357422 95.26113892]
[141.58140564 96.82907104]
[156.49923706 98.39699554]
[171.41705322 99.96492004]
[186.33488464 101.53285217]
[201.25271606 103.10077667]
[216.17054749 104.66870117]
[226.64996338 97.18061829]
[239.02690125 98.77615356]
[246.75166321 108.06213379]
[261.64904785 109.81372070]
[276.54641724 111.56530762]
[291.44378662 113.31690216]
[306.34118652 115.06848907]
[310.24844360 100.55810547]
[316.22686768 86.77129364]
[324.14901733 74.00191498]
[333.84606934 62.52214813]
[345.11132812 52.57669449]
[357.70465088 44.37753296]
[371.35760498 38.09943390]
[385.77920532 33.87621307]
[400.66201782 31.79789162]
[415.68884277 31.90876579]
[430.53936768 34.20647430]
[444.89709473 38.64204025]
[458.45593262 45.12092209]
[470.92687988 53.50501633]
[482.04412842 63.61562347]
[491.57073975 75.23722839]
[499.30361938 88.12211609]
[505.07797241 101.99565125]
[508.77066040 116.56211090]
[510.30303955 131.51101685]
[509.64239502 146.52372742]
[506.80285645 161.28024292]
[501.84490967 175.46603394]
[494.87426758 188.77871704]
[486.03945923 200.93455505]
[475.52883911 211.67442322]
[463.56646729 220.76942444]
[450.40725708 228.02566528]
[436.33172607 233.28851318]
[421.63989258 236.44575500]
[406.64492798 237.43013000]
[391.66644287 236.22062683]
[377.02371216 232.84303284]
[363.02883911 227.36935425]
[349.98010254 219.91625977]
[338.15567017 210.64260864]
[327.80758667 199.74606323]
[319.15637207 187.45887756]
[312.38650513 174.04298401]
[307.64221191 159.78431702]
[305.02462769 144.98681641]
[304.58959961 129.96586609]
[289.69219971 128.21427917]
[274.79483032 126.46269226]
[259.89746094 124.71109772]
[245.00007629 122.95951080]
[229.26237488 130.75117493]
[214.60261536 119.58653259]
[199.68478394 118.01860809]
[184.76696777 116.45067596]
[169.84913635 114.88275146]
[154.93130493 113.31482697]
[140.01347351 111.74689484]
[125.09564972 110.17897034]
[125.46881104 116.66173553]
[124.17870331 123.60137177]
[121.07842255 130.58079529]
[116.12285614 137.14671326]
[121.19522858 151.26304626]
[133.14337158 161.63380432]
[130.16571045 176.22773743]
[135.23808289 190.34408569]
[140.31045532 204.46041870]
[145.38282776 218.57675171]
[156.42910767 231.43817139]
[147.12823486 245.61315918]
[130.93247986 240.59979248]
[131.26649475 223.64913940]
[126.19411469 209.53279114]
[121.12174225 195.41645813]
[116.04936981 181.30010986]
[104.46404266 171.93905640]
[107.07889557 156.33541870]
[102.00651550 142.21908569]
[94.50879669 142.40386963]
[94.87835693 157.39930725]
[95.24791718 172.39476013]
[95.61723328 187.39021301]
[80.62177277 187.75927734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[10 14]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[52 146]
[53 145]
[55 143]
[56 142]
[57 141]
[58 140]
[61 136]
[62 135]
[63 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[74 124]
[75 123]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[90 108]
[91 107]
[162 229]
[163 228]
[164 227]
[165 226]
[166 225]
[167 224]
[168 223]
[171 221]
[172 220]
[173 219]
[174 218]
[175 217]
[233 249]
[234 248]
[236 246]
[237 245]
[238 244]
[239 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
