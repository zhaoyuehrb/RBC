%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAGUAUCUCAUUUCUGAACACCUGGAUUGUAGCUUUCCCUUGACUGUCAAAGGAGGUGGUUUUAAAAAUCAAGCCAAACAGGUUUCCAUCUUUUAGGAAGACCCUGGAACGUGCCAGUUGAUUCUGACCAUUUCUCAUGAACAGAAACACCUAGGAAGGGAGAACUGGGAUUUAUUUA\
) } def
/len { sequence length } bind def

/coor [
[-30.27209854 546.71343994]
[-49.75202179 548.31921387]
[-53.57209015 562.82464600]
[-57.39215469 577.33001709]
[-49.21582794 590.85498047]
[-53.07891846 606.17980957]
[-66.68952179 614.21270752]
[-81.97270203 610.18780518]
[-89.86122894 596.49304199]
[-85.67498016 581.25329590]
[-71.89757538 573.50994873]
[-68.07750702 559.00457764]
[-64.25743866 544.49914551]
[-73.58299255 539.29730225]
[-81.61289215 532.24572754]
[-87.98592377 523.65692139]
[-92.41444397 513.91271973]
[-94.69732666 503.44708252]
[-94.72909546 492.72705078]
[-92.50482178 482.23168945]
[-88.12046814 472.43084717]
[-81.76877594 463.76394653]
[-73.73079681 456.62045288]
[-64.36341858 451.32223511]
[-54.08358383 448.10916138]
[-43.34967041 447.12817383]
[-32.64109802 448.42666626]
[-27.10965538 434.48379517]
[-21.57821083 420.54095459]
[-16.04676819 406.59811401]
[-10.51532364 392.65524292]
[-4.98387909 378.71240234]
[-7.48253536 364.02886963]
[4.79845858 354.05450439]
[10.32990265 340.11166382]
[15.86134720 326.16882324]
[13.36269093 311.48529053]
[25.64368439 301.51092529]
[31.17512894 287.56808472]
[36.70657349 273.62521362]
[42.23801804 259.68237305]
[47.76946259 245.73951721]
[53.30090332 231.79667664]
[58.83234787 217.85382080]
[64.36379242 203.91096497]
[52.39509583 183.62448120]
[59.25854492 160.82792664]
[80.89356232 150.29969788]
[84.21344757 135.67170715]
[87.53332520 121.04370117]
[90.85320282 106.41570282]
[94.04740143 91.75974274]
[97.11568451 77.07691193]
[88.72879028 63.95068359]
[92.04962921 49.10390854]
[104.61515808 41.18918228]
[107.68344116 26.50634766]
[110.75172424 11.82351112]
[113.82000732 -2.85932374]
[116.88828278 -17.54216003]
[119.95656586 -32.22499466]
[123.02484894 -46.90782928]
[126.09313202 -61.59066391]
[129.16140747 -76.27349854]
[132.22969055 -90.95633698]
[124.31598663 -98.17610168]
[120.15720367 -107.96025085]
[120.44615173 -118.50672150]
[125.06309509 -127.90325928]
[133.10964966 -134.47415161]
[143.08285522 -137.07894897]
[146.90290833 -151.58436584]
[150.72297668 -166.08978271]
[154.54304504 -180.59519958]
[158.36311340 -195.10061646]
[162.18318176 -209.60603333]
[165.62849426 -224.20498657]
[168.69677734 -238.88783264]
[155.33605957 -250.27116394]
[149.59579468 -266.76437378]
[152.96739197 -283.80880737]
[164.43679810 -296.74139404]
[180.78721619 -302.07043457]
[183.34965515 -316.84994507]
[185.91209412 -331.62945557]
[188.47454834 -346.40896606]
[190.78291321 -361.23028564]
[192.83650208 -376.08905029]
[194.89009094 -390.94778442]
[196.94367981 -405.80654907]
[198.99726868 -420.66531372]
[187.71766663 -431.32131958]
[184.88882446 -446.57836914]
[191.59846497 -460.56979370]
[205.26661682 -467.91561890]
[220.63758850 -465.79125977]
[231.80091858 -455.01351929]
[234.46409607 -439.72668457]
[227.60305786 -425.80886841]
[213.85603333 -418.61172485]
[211.80244446 -403.75296021]
[209.74884033 -388.89419556]
[207.69525146 -374.03546143]
[205.64166260 -359.17669678]
[207.77487183 -354.87841797]
[207.21310425 -349.19171143]
[203.25405884 -343.84652710]
[200.69160461 -329.06701660]
[198.12916565 -314.28750610]
[195.56671143 -299.50799561]
[206.10345459 -292.48794556]
[213.22161865 -281.96072388]
[215.83071899 -269.47576904]
[213.50712585 -256.88696289]
[206.56236267 -246.07736206]
[196.00189209 -238.67752075]
[183.37960815 -235.81954956]
[180.31134033 -221.13671875]
[181.94575500 -217.98597717]
[182.12055969 -213.88157654]
[180.40185547 -209.52502441]
[176.68859863 -205.78596497]
[172.86853027 -191.28054810]
[169.04846191 -176.77513123]
[165.22839355 -162.26971436]
[161.40832520 -147.76429749]
[157.58825684 -133.25888062]
[168.62075806 -117.22825623]
[164.27838135 -97.94678497]
[146.91252136 -87.88805389]
[143.84423828 -73.20521545]
[140.77597046 -58.52238464]
[137.70768738 -43.83955002]
[134.63940430 -29.15671349]
[131.57112122 -14.47387791]
[128.50283813 0.20895718]
[125.43455505 14.89179230]
[122.36627960 29.57462692]
[119.29799652 44.25746155]
[127.64252472 56.54177856]
[124.74001312 71.47596741]
[111.79851532 80.14518738]
[108.73023224 94.82802582]
[110.29721069 102.75688934]
[105.48120117 109.73558044]
[102.16132355 124.36357880]
[98.84144592 138.99157715]
[95.52156830 153.61958313]
[101.26984406 157.56771851]
[105.94347382 162.71871948]
[109.29800415 168.79069519]
[111.16088867 175.45387268]
[111.44030762 182.34863281]
[110.12967682 189.10479736]
[107.30754852 195.36163330]
[103.13296509 200.78698730]
[97.83648682 205.09498596]
[91.70751190 208.06112671]
[85.07843781 209.53385925]
[78.30664825 209.44241333]
[72.77519989 223.38525391]
[67.24375916 237.32810974]
[61.71231461 251.27096558]
[56.18087006 265.21380615]
[50.64942551 279.15667725]
[45.11798096 293.09951782]
[39.58653641 307.04238892]
[41.68954849 322.72317505]
[29.80419922 331.70025635]
[24.27275467 345.64309692]
[18.74131012 359.58596802]
[20.84432220 375.26678467]
[8.95897293 384.24383545]
[3.42752886 398.18670654]
[-2.10391498 412.12954712]
[-7.63535881 426.07238770]
[-13.16680336 440.01525879]
[-18.69824600 453.95809937]
[-3.91373515 467.02249146]
[4.79301071 484.69296265]
[6.14004993 504.31521606]
[-0.05099348 522.95159912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[34 171]
[35 170]
[36 169]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[48 148]
[49 147]
[50 146]
[51 145]
[52 143]
[53 142]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 118]
[78 117]
[83 110]
[84 109]
[85 108]
[86 107]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
