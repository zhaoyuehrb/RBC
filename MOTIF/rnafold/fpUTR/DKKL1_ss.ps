%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGCUCCUGGGUGAGGCCGGCAAGUUUGGAGCGUGGUCAGACAAUAGGGGCGUGGCUACGGCUCGCGGAGCGCAACCAACGCUCUAGACCAGACCUGGGCUCGAGACCAUAACUGUUUGGCUUUAACAGUACGUGGGCGGCCGGAAUCCGGGAGUCCGGUGACCCGGGCUGUGGUCUAGCAUAAAGGCGGAGCCCAGAAGAAGGGGCGGGGU\
) } def
/len { sequence length } bind def

/coor [
[318.94799805 332.34350586]
[308.45828247 321.62130737]
[297.96856689 310.89910889]
[287.47882080 300.17691040]
[276.98910522 289.45471191]
[266.49935913 278.73251343]
[256.00964355 268.01031494]
[245.51991272 257.28811646]
[235.03018188 246.56590271]
[224.54045105 235.84370422]
[214.05072021 225.12150574]
[203.56098938 214.39930725]
[193.07125854 203.67710876]
[182.58154297 192.95491028]
[165.77082825 193.48846436]
[153.53570557 181.46080017]
[153.79132080 163.96781921]
[143.14604187 153.40002441]
[132.50076294 142.83224487]
[121.85549164 132.26446533]
[111.21021271 121.69667816]
[100.93965149 125.36593628]
[89.67168427 124.23609161]
[79.61663818 118.17083740]
[72.89734650 108.03465271]
[71.10533142 95.58346558]
[74.93832397 83.16348267]
[61.13313293 77.29691315]
[47.32793808 71.43034363]
[31.60090828 73.15402222]
[22.91350555 61.05533600]
[9.10831356 55.18876266]
[-4.69687891 49.32219315]
[-18.50207138 43.45562363]
[-34.60339737 50.29792786]
[-50.36074066 43.51049805]
[-56.21465683 27.74292946]
[-70.10409546 22.07869911]
[-83.99353790 16.41447067]
[-97.88297272 10.75024033]
[-106.78379822 20.81745338]
[-118.33356476 27.64129257]
[-131.40161133 30.57003784]
[-144.71365356 29.33248520]
[-156.97602844 24.06299210]
[-167.00143433 15.28704929]
[-173.82386780 3.86891198]
[-176.79173279 -9.07350063]
[-175.62997437 -22.27805328]
[-189.34797668 -28.34571457]
[-203.06597900 -34.41337204]
[-216.78396606 -40.48103333]
[-230.50196838 -46.54869080]
[-244.21997070 -52.61635208]
[-257.93795776 -58.68401337]
[-271.69992065 -64.65128326]
[-285.50512695 -70.51786041]
[-296.22671509 -61.53652191]
[-309.70748901 -58.06677628]
[-323.30300903 -60.73040771]
[-334.37158203 -68.95178223]
[-340.78759766 -81.08104706]
[-341.34957886 -94.72499084]
[-355.06756592 -100.79264832]
[-368.78555298 -106.86030579]
[-382.50357056 -112.92796326]
[-399.43478394 -113.80548096]
[-403.27859497 -130.31794739]
[-388.47549438 -138.58264160]
[-376.43591309 -126.64596558]
[-362.71789551 -120.57830811]
[-348.99990845 -114.51064301]
[-335.28189087 -108.44298553]
[-322.46765137 -118.28940582]
[-306.34335327 -120.34088898]
[-291.29888916 -113.94345856]
[-281.47833252 -100.75638580]
[-279.63854980 -84.32305145]
[-265.83337402 -78.45648193]
[-258.45016479 -78.73340607]
[-251.87031555 -72.40200806]
[-238.15231323 -66.33435059]
[-224.43431091 -60.26669312]
[-210.71630859 -54.19903183]
[-196.99830627 -48.13137436]
[-183.28031921 -42.06371307]
[-169.56231689 -35.99605179]
[-157.78398132 -47.76944733]
[-142.35256958 -54.12867355]
[-125.62553406 -54.07166672]
[-110.17000580 -47.57891846]
[-98.36885834 -35.62080383]
[-92.05329895 -20.01264763]
[-92.21874237 -3.13919830]
[-78.32930756 2.52503109]
[-64.43986511 8.18926048]
[-50.55043030 13.85348988]
[-39.49078369 7.24527454]
[-26.44964981 8.22732735]
[-16.20388603 16.66457558]
[-12.63550091 29.65042877]
[1.16969168 35.51699829]
[14.97488403 41.38357162]
[28.78007698 47.25014114]
[43.51966858 45.10684204]
[53.19450760 57.62514877]
[66.99970245 63.49172211]
[80.80489349 69.35829163]
[94.89193726 64.20510864]
[101.65292358 50.81522751]
[108.41391754 37.42534256]
[115.17490387 24.03545570]
[113.71881104 5.67754984]
[128.76828003 -3.35159469]
[135.33290100 -16.83883858]
[141.89752197 -30.32608223]
[148.46214294 -43.81332779]
[155.02676392 -57.30057144]
[161.59138489 -70.78781891]
[155.05461121 -84.99360657]
[159.22830200 -100.06391907]
[172.14176941 -108.88301086]
[187.69766235 -107.28677368]
[198.55097961 -96.02890778]
[199.57710266 -80.42502594]
[190.29153442 -67.84281158]
[175.07862854 -64.22319794]
[168.51400757 -50.73595047]
[161.94938660 -37.24870682]
[155.38476562 -23.76146317]
[148.82014465 -10.27421761]
[142.25552368 3.21302605]
[145.90527344 14.74385548]
[140.54902649 26.03305054]
[128.56478882 30.79644585]
[121.80380249 44.18632889]
[115.04280853 57.57621765]
[108.28182220 70.96610260]
[125.02545166 89.07353210]
[121.77799988 111.05139923]
[132.42327881 121.61918640]
[143.06855774 132.18696594]
[153.71382141 142.75476074]
[164.35910034 153.32254028]
[177.73100281 151.72306824]
[189.41253662 158.02423096]
[195.24639893 169.72900391]
[193.30374146 182.46517944]
[203.79347229 193.18737793]
[214.28318787 203.90957642]
[224.77291870 214.63177490]
[235.26264954 225.35397339]
[245.75238037 236.07618713]
[256.24209595 246.79838562]
[266.73184204 257.52056885]
[277.22155762 268.24276733]
[287.71130371 278.96499634]
[298.20101929 289.68719482]
[308.69076538 300.40939331]
[319.18048096 311.13159180]
[329.67022705 321.85379028]
[349.95849609 317.58047485]
[368.57409668 326.38781738]
[378.00833130 344.53665161]
[374.56893921 364.55838013]
[385.81335449 374.48626709]
[397.05776978 384.41415405]
[408.79498291 393.75427246]
[420.99432373 402.48214722]
[433.19369507 411.21002197]
[445.39303589 419.93789673]
[457.59237671 428.66580200]
[473.31793213 430.40289307]
[479.16687012 444.10101318]
[491.36621094 452.82891846]
[500.16357422 455.27597046]
[503.67880249 461.77450562]
[515.74932861 470.67971802]
[527.81982422 479.58493042]
[542.97662354 475.73718262]
[557.03814697 482.57876587]
[563.36499023 496.87930298]
[558.96978760 511.88650513]
[545.92779541 520.51440430]
[530.39709473 518.68927002]
[519.71081543 507.27273560]
[518.91461182 491.65542603]
[506.84411621 482.75024414]
[494.77359009 473.84503174]
[482.63833618 465.02825928]
[470.43899536 456.30038452]
[455.58602905 455.18756104]
[448.86450195 440.86514282]
[436.66516113 432.13726807]
[424.46578979 423.40936279]
[412.26644897 414.68148804]
[400.06710815 405.95361328]
[402.63058472 420.73294067]
[395.20129395 433.76385498]
[381.17727661 439.08618164]
[366.97302246 434.26547241]
[359.08541870 421.50674438]
[361.12219238 406.64566040]
[372.15173340 396.47958374]
[387.12988281 395.65856934]
[375.88546753 385.73068237]
[364.64105225 375.80279541]
[356.02117920 380.14196777]
[346.46716309 381.69805908]
[336.85745239 380.31002808]
[328.08111572 376.08837891]
[320.95538330 369.40661621]
[316.14971924 360.86816406]
[314.12289429 351.25198364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 158]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[10 152]
[11 151]
[12 150]
[13 149]
[14 148]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[27 108]
[28 107]
[29 106]
[31 104]
[32 103]
[33 102]
[34 101]
[37 97]
[38 96]
[39 95]
[40 94]
[49 87]
[50 86]
[51 85]
[52 84]
[53 83]
[54 82]
[55 81]
[56 79]
[57 78]
[63 73]
[64 72]
[65 71]
[66 70]
[109 138]
[110 137]
[111 136]
[112 135]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[165 207]
[166 206]
[167 205]
[168 197]
[169 196]
[170 195]
[171 194]
[172 193]
[174 191]
[175 190]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
