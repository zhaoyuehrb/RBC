%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUCCACUUCCUGGACUGCGCGACCGGAGGCCUAGCGGGCGCGCGCCCGCACCAUCGACUCGCCAACGAGAGAAGGUCCUGGGGCACGGACACCGACGGGUUGCGACUGUGACGUGAGGUGUUCUCGCGCGCGCUAGCGCGCGUCUCCGGGUGCCGCUGACGGGCGUGCGCGCUUGUGCGGAGCCGGAGGUGGGGGCCGAACCAGCCAAGGUUGCGGGGGCCGCAGAGCCGGACGAAGACGGAGGGCGGAGCC\
GGCUUCGGGACUGCGGAGACUACACACCGAGCGAGCGCCUGGGCCCGAAGGGAGCG\
) } def
/len { sequence length } bind def

/coor [
[445.30578613 269.04968262]
[460.20852661 267.34448242]
[474.66329956 271.34936523]
[461.17700195 264.78286743]
[447.69067383 258.21633911]
[434.20434570 251.64982605]
[420.71801758 245.08331299]
[407.23171997 238.51679993]
[393.74539185 231.95028687]
[380.25906372 225.38377380]
[366.77273560 218.81724548]
[353.28640747 212.25073242]
[339.80010986 205.68421936]
[332.44976807 205.58172607]
[326.21154785 198.98309326]
[312.79202271 192.28111267]
[295.33264160 194.26091003]
[285.35009766 178.75854492]
[271.86376953 172.19203186]
[258.37744141 165.62551880]
[244.89112854 159.05899048]
[231.40480042 152.49247742]
[217.91848755 145.92596436]
[204.43215942 139.35945129]
[190.94584656 132.79293823]
[176.79115295 127.82856750]
[162.15769958 124.53283691]
[147.52423096 121.23711395]
[132.89077759 117.94138336]
[118.25731659 114.64565277]
[103.62385559 111.34992218]
[88.66661072 112.48163605]
[74.69563293 117.94165802]
[60.72465897 123.40167999]
[46.75368500 128.86170959]
[40.05773163 151.34156799]
[14.09168816 159.26264954]
[2.37768078 168.63185120]
[-9.33632660 178.00106812]
[-21.05033302 187.37026978]
[-32.76433945 196.73947144]
[-44.47834778 206.10868835]
[-49.94044876 221.57145691]
[-66.10997772 224.30610657]
[-76.35311127 211.49946594]
[-70.13259125 196.32589722]
[-53.84755325 194.39466858]
[-42.13354874 185.02546692]
[-30.41954041 175.65626526]
[-18.70553398 166.28704834]
[-6.99152613 156.91784668]
[4.72248125 147.54864502]
[-1.91184914 134.09555054]
[-16.47597694 137.68528748]
[-31.04010391 141.27502441]
[-42.58761215 152.09008789]
[-56.79670715 147.62345886]
[-71.36083221 151.21319580]
[-78.66383362 161.80287170]
[-90.82907104 164.51368713]
[-101.24581146 158.42927551]
[-115.84534454 161.87217712]
[-130.44488525 165.31507874]
[-145.04441833 168.75798035]
[-156.60792542 180.38627625]
[-172.38862610 175.92514038]
[-176.15266418 159.96382141]
[-164.02793884 148.92193604]
[-148.48731995 154.15844727]
[-133.88778687 150.71554565]
[-119.28825378 147.27264404]
[-104.68872070 143.82974243]
[-92.54394531 131.13113403]
[-74.95056915 136.64906311]
[-60.38644409 133.05932617]
[-49.88066101 122.50102234]
[-34.62983704 126.71089172]
[-20.06571198 123.12115479]
[-5.50158405 119.53142548]
[2.39384747 109.58582306]
[13.10651779 104.10457611]
[24.46401024 103.59031677]
[34.39231110 107.59490967]
[41.29365921 114.89073181]
[55.26463318 109.43070984]
[69.23561096 103.97068024]
[83.20658112 98.51065826]
[84.07311249 91.06088257]
[85.80617523 76.16133881]
[86.67269897 68.71156311]
[74.32794189 60.19059372]
[61.98318481 51.66962433]
[49.63842773 43.14865112]
[37.29367065 34.62768173]
[24.94891167 26.10670853]
[12.60415459 17.58573723]
[-0.16511735 19.14162445]
[-10.26123238 11.83341408]
[-12.61456394 0.00165916]
[-24.87289810 -8.64317989]
[-40.60988617 -10.27343655]
[-46.55171585 -23.93154526]
[-58.81005096 -32.57638550]
[-71.06838226 -41.22122192]
[-83.32672119 -49.86606216]
[-95.58505249 -58.51090240]
[-111.95698547 -59.45533371]
[-119.08231354 -74.22563171]
[-109.63111115 -87.62738037]
[-93.32596588 -85.87400818]
[-86.94021606 -70.76923370]
[-74.68187714 -62.12439728]
[-62.42354584 -53.47955704]
[-50.16521072 -44.83472061]
[-37.90687561 -36.18988037]
[-23.04668617 -35.17795944]
[-16.22805786 -20.90151405]
[-3.96972442 -12.25667477]
[13.58879089 -11.58691406]
[21.12512589 5.24097967]
[33.46988297 13.76195145]
[45.81464005 22.28292274]
[58.15940094 30.80389404]
[70.50415802 39.32486343]
[82.84891510 47.84583664]
[95.19367218 56.36680603]
[101.02701569 51.65277481]
[118.52705383 37.51068115]
[112.78679657 23.65248680]
[107.04654694 9.79429436]
[101.30629730 -4.06389809]
[95.56604767 -17.92209053]
[89.82579041 -31.78028488]
[84.08554077 -45.63847733]
[70.75291443 -55.18693924]
[72.62487793 -71.47889709]
[87.77571106 -77.75457764]
[100.61954498 -67.55809784]
[97.94373322 -51.37872696]
[103.68398285 -37.52053452]
[109.42424011 -23.66234207]
[115.16448975 -9.80414963]
[120.90473938 4.05404329]
[126.64498901 17.91223526]
[132.38523865 31.77042961]
[129.41163635 70.59132385]
[106.91958618 96.71646118]
[121.55304718 100.01219177]
[136.18650818 103.30792236]
[150.81996155 106.60365295]
[165.45343018 109.89937592]
[180.08688354 113.19510651]
[192.43164062 104.67413330]
[194.53918457 89.82292938]
[196.64671326 74.97172546]
[198.75425720 60.12052155]
[200.78700256 45.25889206]
[202.74488831 30.38722038]
[204.70278931 15.51554680]
[206.66067505 0.64387429]
[199.88851929 -14.29164886]
[209.65565491 -27.46491432]
[225.91450500 -25.32439613]
[231.93934631 -10.07207584]
[221.53234863 2.60176730]
[219.57446289 17.47344017]
[217.61656189 32.34511185]
[215.65867615 47.21678543]
[217.88906860 54.22131348]
[213.60546875 62.22805786]
[211.49792480 77.07926178]
[209.39038086 91.93046570]
[207.28285217 106.78166962]
[204.40879822 111.29025269]
[201.14363098 115.47415924]
[197.51235962 119.30661011]
[210.99867249 125.87313080]
[224.48500061 132.43965149]
[237.97132874 139.00616455]
[251.45764160 145.57267761]
[264.94396973 152.13919067]
[278.43029785 158.70570374]
[291.91659546 165.27221680]
[304.30639648 161.81272888]
[315.38720703 167.51863098]
[319.49398804 178.86158752]
[332.91351318 185.56356812]
[346.36660767 192.19789124]
[359.85293579 198.76441956]
[373.33926392 205.33093262]
[386.82559204 211.89744568]
[400.31188965 218.46395874]
[413.79821777 225.03047180]
[427.28454590 231.59698486]
[440.77087402 238.16351318]
[454.25717163 244.73002625]
[467.74349976 251.29653931]
[481.22982788 257.86306763]
[496.22506714 257.48550415]
[509.36386108 250.24861145]
[522.50262451 243.01171875]
[535.60479736 235.70877075]
[548.67004395 228.33995056]
[561.73529053 220.97113037]
[574.80053711 213.60231018]
[578.80249023 198.31311035]
[592.48547363 190.40408325]
[607.73150635 194.56748962]
[615.49542236 208.33328247]
[611.17102051 223.53443909]
[597.32391357 231.15240479]
[582.16931152 226.66755676]
[569.10412598 234.03637695]
[556.03887939 241.40519714]
[542.97363281 248.77400208]
[538.71380615 254.76499939]
[529.73950195 256.15048218]
[516.60076904 263.38739014]
[503.46197510 270.62426758]
[503.23541260 285.62255859]
[516.14959717 293.25299072]
[529.06384277 300.88339233]
[541.97802734 308.51382446]
[554.89221191 316.14425659]
[559.12915039 311.07156372]
[564.95587158 307.07580566]
[572.07415771 304.64117432]
[580.04278564 304.16339111]
[588.30462646 305.90869141]
[596.22564697 309.98150635]
[603.14221191 316.30334473]
[618.10498047 317.35974121]
[633.06774902 318.41613770]
[642.94641113 306.44989014]
[657.98040771 302.60812378]
[672.38879395 308.36813354]
[680.63128662 321.51501465]
[679.53851318 336.99356079]
[669.53057861 348.85192871]
[654.45581055 352.53036499]
[640.11071777 346.61441040]
[632.01135254 333.37887573]
[617.04858398 332.32250977]
[602.08581543 331.26611328]
[599.14605713 338.16595459]
[590.32684326 358.86547852]
[601.45373535 368.92486572]
[612.58068848 378.98425293]
[623.70764160 389.04364014]
[634.83459473 399.10302734]
[652.31280518 397.91598511]
[664.97436523 409.52783203]
[665.28778076 426.36636353]
[676.51544189 436.31323242]
[687.79302979 446.20339966]
[699.12023926 456.03668213]
[710.44750977 465.86996460]
[722.16149902 475.23916626]
[734.24328613 484.12911987]
[746.32507324 493.01904297]
[758.40679932 501.90896606]
[770.48858643 510.79891968]
[786.07330322 508.17343140]
[798.90118408 517.40496826]
[801.36175537 533.01654053]
[791.99511719 545.74609375]
[776.35839844 548.04144287]
[763.72857666 538.54077148]
[761.59863281 522.88067627]
[749.51690674 513.99072266]
[737.43511963 505.10079956]
[725.35333252 496.21087646]
[713.27160645 487.32095337]
[716.93902588 501.86569214]
[711.42950439 515.81719971]
[698.81372070 523.93157959]
[683.83361816 523.15887451]
[672.11975098 513.78955078]
[668.07482910 499.34521484]
[673.21936035 485.25500488]
[685.61956787 476.81494141]
[700.61425781 477.19720459]
[689.28698730 467.36392212]
[677.95971680 457.53063965]
[670.88635254 455.52923584]
[666.56860352 447.54089355]
[655.34094238 437.59402466]
[642.74597168 440.16488647]
[630.78479004 434.94909668]
[623.89599609 423.63864136]
[624.77520752 410.22998047]
[613.64825439 400.17059326]
[602.52130127 390.11120605]
[591.39434814 380.05181885]
[580.26745605 369.99243164]
[549.62048340 356.26892090]
[547.26184082 329.05844116]
[534.34759521 321.42803955]
[521.43341064 313.79760742]
[508.51919556 306.16717529]
[495.60501099 298.53677368]
[495.78765869 313.53564453]
[490.33489990 327.50946045]
[480.04177856 338.42056274]
[466.40927124 344.67791748]
[451.42520142 345.36907959]
[437.27453613 340.39328003]
[426.02069092 330.47610474]
[419.30465698 317.06359863]
[418.10577393 302.11160278]
[422.59884644 287.80032349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[15 187]
[16 186]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 152]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[32 87]
[33 86]
[34 85]
[35 84]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[53 79]
[54 78]
[55 77]
[57 75]
[58 74]
[61 72]
[62 71]
[63 70]
[64 69]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[99 118]
[100 117]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
[133 140]
[134 139]
[153 173]
[154 172]
[155 171]
[156 170]
[157 168]
[158 167]
[159 166]
[160 165]
[199 219]
[200 218]
[201 217]
[202 215]
[203 214]
[204 213]
[205 212]
[220 301]
[221 300]
[222 299]
[223 298]
[224 297]
[231 244]
[232 243]
[233 242]
[246 295]
[247 294]
[248 293]
[249 292]
[250 291]
[253 287]
[254 286]
[255 284]
[256 283]
[257 282]
[258 273]
[259 272]
[260 271]
[261 270]
[262 269]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
