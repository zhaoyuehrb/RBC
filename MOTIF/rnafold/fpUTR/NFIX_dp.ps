%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NFIX)
} def

/sequence { (\
AGACGGACACUGUGCCGGGGCGAGCUGACAGGAGUUCACGGCUGCGAUAGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.042192330 ubox
1 43 0.027764505 ubox
2 10 0.046202694 ubox
2 36 0.003437172 ubox
2 42 0.028524079 ubox
3 13 0.616998692 ubox
3 35 0.003851170 ubox
4 12 0.634676108 ubox
4 14 0.033580265 ubox
4 17 0.279519106 ubox
4 34 0.004040756 ubox
4 40 0.031297750 ubox
4 44 0.009285692 ubox
4 46 0.045630403 ubox
5 11 0.630618401 ubox
5 13 0.032372790 ubox
5 16 0.295673990 ubox
5 37 0.082481257 ubox
5 39 0.029880317 ubox
5 43 0.009131369 ubox
5 45 0.045930841 ubox
6 10 0.617250198 ubox
6 15 0.296958949 ubox
6 36 0.084042230 ubox
6 37 0.025517618 ubox
6 42 0.006695848 ubox
7 13 0.129167069 ubox
7 35 0.085739688 ubox
7 36 0.020390099 ubox
8 12 0.128553928 ubox
8 14 0.211734476 ubox
8 34 0.086983958 ubox
8 44 0.033734054 ubox
9 13 0.171659806 ubox
9 35 0.010329282 ubox
9 43 0.033574040 ubox
10 18 0.010706068 ubox
10 19 0.007554826 ubox
10 31 0.088288530 ubox
10 32 0.010417691 ubox
10 34 0.010481544 ubox
10 41 0.012675084 ubox
10 50 0.534737973 ubox
11 17 0.010707543 ubox
11 18 0.007475882 ubox
11 30 0.088366255 ubox
11 31 0.009039706 ubox
11 33 0.010306903 ubox
11 40 0.012694123 ubox
11 44 0.017608949 ubox
11 46 0.285914693 ubox
11 49 0.537064512 ubox
12 16 0.010315720 ubox
12 29 0.088385856 ubox
12 39 0.012702162 ubox
12 43 0.022496073 ubox
12 45 0.356083956 ubox
12 48 0.534185183 ubox
12 53 0.023638544 ubox
13 22 0.003561250 ubox
13 27 0.006361891 ubox
13 28 0.082666875 ubox
13 30 0.013819204 ubox
13 38 0.012328001 ubox
13 44 0.343923070 ubox
13 46 0.022711588 ubox
13 47 0.504520220 ubox
13 49 0.084417557 ubox
13 52 0.023800628 ubox
14 21 0.015417463 ubox
14 25 0.055457300 ubox
14 29 0.014506645 ubox
14 37 0.006219826 ubox
14 42 0.546971531 ubox
14 43 0.041843374 ubox
14 45 0.110338970 ubox
14 48 0.116159103 ubox
15 20 0.015397368 ubox
15 24 0.055640193 ubox
15 32 0.003758759 ubox
15 41 0.549298177 ubox
15 44 0.102906966 ubox
16 22 0.051528599 ubox
16 27 0.067689285 ubox
16 31 0.003741567 ubox
16 40 0.549335340 ubox
16 44 0.159531345 ubox
16 46 0.741569020 ubox
17 21 0.048297452 ubox
17 26 0.069143966 ubox
17 39 0.546219242 ubox
17 43 0.161431475 ubox
17 45 0.755225140 ubox
18 25 0.069284880 ubox
18 26 0.005686432 ubox
18 37 0.414656195 ubox
18 42 0.159461708 ubox
18 43 0.105074627 ubox
19 25 0.006729801 ubox
19 36 0.414448612 ubox
19 37 0.066877777 ubox
19 42 0.113848741 ubox
19 43 0.759880273 ubox
20 25 0.003178634 ubox
20 35 0.414498531 ubox
20 36 0.057616878 ubox
20 42 0.762942422 ubox
20 45 0.237879853 ubox
21 34 0.414541957 ubox
21 40 0.133171900 ubox
21 41 0.759784806 ubox
21 44 0.237832225 ubox
21 46 0.091949063 ubox
22 36 0.010612985 ubox
22 37 0.852605758 ubox
22 39 0.095831853 ubox
22 43 0.116516065 ubox
22 45 0.092845046 ubox
23 35 0.010159162 ubox
23 36 0.859360747 ubox
23 43 0.227187634 ubox
24 35 0.865639757 ubox
24 42 0.256513531 ubox
25 31 0.254742449 ubox
25 32 0.186036648 ubox
25 34 0.866250709 ubox
25 41 0.256512543 ubox
26 30 0.229800427 ubox
26 31 0.182391553 ubox
26 33 0.860997835 ubox
26 38 0.048301737 ubox
26 40 0.253169973 ubox
27 36 0.095151890 ubox
27 37 0.061389414 ubox
27 39 0.233759963 ubox
28 35 0.175190388 ubox
28 36 0.050326662 ubox
29 34 0.180138799 ubox
30 36 0.048714154 ubox
31 35 0.035349828 ubox
31 37 0.089721290 ubox
32 36 0.058309384 ubox
34 53 0.014537510 ubox
35 52 0.014729536 ubox
36 51 0.014921369 ubox
37 50 0.015005603 ubox
39 46 0.070281413 ubox
40 45 0.071269127 ubox
42 50 0.024999094 ubox
43 49 0.027850248 ubox
44 48 0.023558072 ubox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
6 10 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
showpage
end
%%EOF
