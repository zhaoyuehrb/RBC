%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCACUCGAUAUCUCGGCUGAAGCUGCCUGGCGCUAGAACCAGGAAGGCGCUGAGCUUAAACUGAAGCAAGUUCGGUGGACGCCGGCGGCGCCCUGAUCUAAAGAAACGACUCAGGGACUGCGGCGCUUGCACGUCAACGGGAGGUGUGAGCCCAAAGGUCUGGACCCAGAA\
) } def
/len { sequence length } bind def

/coor [
[82.84864807 323.86541748]
[95.14138031 332.46127319]
[104.43759155 344.23327637]
[109.94947815 358.18389893]
[111.20994568 373.13082886]
[108.11217499 387.80746460]
[100.91868591 400.97006226]
[90.23907471 411.50314331]
[76.97837830 418.51412964]
[62.26034546 421.40887451]
[47.33223343 419.94204712]
[33.45911026 414.23797607]
[21.81662178 404.78005981]
[13.39140034 392.36975098]
[8.89742661 378.05877686]
[8.71553421 363.05987549]
[12.86275387 348.64056396]
[2.02083135 359.00650024]
[-8.82109165 369.37243652]
[-19.66301537 379.73837280]
[-23.73990631 395.62268066]
[-39.60519791 399.77291870]
[-50.93803406 387.91970825]
[-46.08016968 372.25659180]
[-30.02895355 368.89645386]
[-19.18703079 358.53051758]
[-8.34510803 348.16458130]
[2.49681449 337.79864502]
[4.66485453 329.12069702]
[13.14034939 323.68884277]
[20.12953186 310.41662598]
[27.11871338 297.14443970]
[34.10789490 283.87222290]
[29.46479416 269.76629639]
[36.36375046 256.20684814]
[51.19082642 251.43237305]
[58.18000793 238.16017151]
[65.16918945 224.88796997]
[72.15837097 211.61576843]
[79.14755249 198.34356689]
[79.48315430 190.93525696]
[86.38318634 184.89750671]
[93.60948944 171.75289917]
[91.75785065 152.52511597]
[109.09472656 142.28245544]
[115.84452820 128.88693237]
[99.64939117 131.61039734]
[84.85391235 126.21708679]
[75.08847809 114.73490906]
[72.39785767 100.58953094]
[76.83544922 87.60176849]
[66.18135834 77.04287720]
[55.52725983 66.48398590]
[44.87316132 55.92509079]
[34.21906281 45.36619568]
[23.56496811 34.80730438]
[12.91087055 24.24841118]
[2.25677347 13.68951893]
[-8.39732361 3.13062596]
[-19.05142021 -7.42826700]
[-33.84766388 -3.30919719]
[-48.71711349 -7.15563822]
[-59.65995407 -17.93291664]
[-63.73262787 -32.74200058]
[-59.83959579 -47.59931564]
[-49.02806854 -58.50832748]
[-34.20629501 -62.53455734]
[-19.36125183 -58.59497452]
[-8.48618507 -47.74930573]
[-4.50643301 -32.91498566]
[-8.49252796 -18.08236313]
[2.16156912 -7.52347136]
[12.81566620 3.03542161]
[23.46976280 13.59431458]
[34.12385941 24.15320778]
[44.77795792 34.71210098]
[55.43205261 45.27099228]
[66.08615112 55.82988358]
[76.74024963 66.38877869]
[87.39434814 76.94766998]
[98.90516663 72.07936096]
[112.12854004 72.98752594]
[124.17199707 80.14878082]
[132.10656738 92.60591888]
[141.13975525 80.63088989]
[150.17295837 68.65586090]
[159.20616150 56.68083191]
[161.88920593 47.91349792]
[168.51055908 44.57385635]
[177.75726318 32.76291275]
[187.00396729 20.95196724]
[186.22558594 8.05539513]
[194.19808960 -1.59648383]
[206.21392822 -3.16293097]
[215.67115784 -14.80598545]
[225.12838745 -26.44903946]
[234.58563232 -38.09209442]
[244.04286194 -49.73514938]
[253.50009155 -61.37820435]
[262.85244751 -73.10567474]
[272.09915161 -84.91661835]
[266.92465210 -99.45030975]
[270.45135498 -114.46916199]
[281.55386353 -125.18071747]
[296.68945312 -128.16696167]
[311.02838135 -122.47498322]
[319.99517822 -109.92108154]
[320.72851562 -94.51116180]
[312.99444580 -81.16246796]
[299.26086426 -74.13452148]
[283.91009521 -75.66991425]
[274.66339111 -63.85897064]
[273.01037598 -56.62965012]
[265.14315796 -51.92096710]
[255.68591309 -40.27791595]
[246.22868347 -28.63485909]
[236.77145386 -16.99180603]
[227.31420898 -5.34875107]
[217.85697937 6.29430342]
[216.04075623 23.73472786]
[198.81491089 30.19867325]
[189.56820679 42.00962067]
[180.32150269 53.82056427]
[171.18118286 65.71402740]
[162.14797974 77.68906403]
[153.11479187 89.66409302]
[144.08158875 101.63912201]
[148.33105469 116.02459717]
[162.42132568 121.16895294]
[176.51159668 126.31331635]
[190.60185242 131.45767212]
[204.69212341 136.60202026]
[218.78239441 141.74638367]
[232.87265015 146.89074707]
[246.96292114 152.03509521]
[262.57968140 149.49992371]
[271.88150024 161.13287354]
[285.97177124 166.27723694]
[301.06628418 160.84263611]
[314.65042114 169.37794495]
[316.30352783 185.33560181]
[304.75753784 196.47425842]
[288.86953735 194.24928284]
[280.82742310 180.36749268]
[266.73715210 175.22314453]
[252.12820435 178.12628174]
[241.81855774 166.12536621]
[227.72830200 160.98100281]
[213.63803101 155.83665466]
[199.54776001 150.69229126]
[185.45750427 145.54794312]
[171.36723328 140.40357971]
[157.27696228 135.25921631]
[143.18670654 130.11486816]
[129.24005127 135.63673401]
[122.49024963 149.03225708]
[126.50141907 159.18792725]
[124.28797913 169.65557861]
[116.82229614 177.00917053]
[106.75408936 178.97921753]
[99.52778625 192.12380981]
[92.41975403 205.33274841]
[85.43057251 218.60494995]
[78.44139099 231.87715149]
[71.45220947 245.14935303]
[64.46302795 258.42153931]
[68.91524506 273.34854126]
[61.63815308 286.70889282]
[47.38009644 290.86141968]
[40.39091492 304.13360596]
[33.40173340 317.40582275]
[26.41255188 330.67800903]
[39.13451004 322.73120117]
[53.60615158 318.78512573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 28]
[18 27]
[19 26]
[20 25]
[30 172]
[31 171]
[32 170]
[33 169]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[42 161]
[43 160]
[45 156]
[46 155]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[84 127]
[85 126]
[86 125]
[87 124]
[89 123]
[90 122]
[91 121]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 112]
[101 111]
[128 154]
[129 153]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
[135 147]
[137 145]
[138 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
