%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf123)
} def

/sequence { (\
CUUUUACGACGCGCCGGAAAGCAACGGCAAGGGCCGCAGCCAGCACCGGGCGGAGAGGGCUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.006289517 ubox
1 31 0.009431150 ubox
1 32 0.007169241 ubox
1 53 0.008122077 ubox
1 55 0.097826652 ubox
1 57 0.606676460 ubox
1 58 0.404700055 ubox
1 59 0.401125759 ubox
2 9 0.021039708 ubox
2 20 0.006496125 ubox
2 30 0.009428347 ubox
2 31 0.007550053 ubox
2 52 0.003906293 ubox
2 53 0.003503468 ubox
2 54 0.097826842 ubox
2 55 0.025651505 ubox
2 56 0.614451949 ubox
2 57 0.404375041 ubox
2 58 0.407719924 ubox
2 59 0.092604971 ubox
3 8 0.021049772 ubox
3 9 0.015508891 ubox
3 19 0.006515951 ubox
3 20 0.003228964 ubox
3 29 0.009123716 ubox
3 30 0.007699135 ubox
3 53 0.096739139 ubox
3 54 0.031785682 ubox
3 55 0.614156645 ubox
3 56 0.402924757 ubox
3 57 0.409095155 ubox
3 58 0.121862697 ubox
3 59 0.046926026 ubox
4 8 0.015394199 ubox
4 18 0.006434573 ubox
4 19 0.003439597 ubox
4 29 0.007609437 ubox
4 52 0.021009789 ubox
4 53 0.033350736 ubox
4 54 0.606553662 ubox
4 55 0.393901871 ubox
4 56 0.410540954 ubox
4 57 0.133191780 ubox
4 58 0.059073000 ubox
4 59 0.029595317 ubox
5 17 0.005847978 ubox
5 52 0.007828605 ubox
5 53 0.600072204 ubox
5 54 0.246919767 ubox
5 55 0.397694231 ubox
5 56 0.142257519 ubox
5 57 0.056663437 ubox
5 58 0.037244891 ubox
5 62 0.003872573 ubox
6 61 0.003895239 ubox
7 16 0.007461998 ubox
7 26 0.008324765 ubox
7 48 0.011360724 ubox
7 52 0.083656414 ubox
8 12 0.004184757 ubox
8 15 0.007488111 ubox
8 25 0.008366786 ubox
8 47 0.011430812 ubox
8 51 0.038738150 ubox
10 48 0.006992855 ubox
10 52 0.985428897 ubox
11 22 0.009883356 ubox
11 34 0.003512482 ubox
11 44 0.011770258 ubox
11 47 0.006639112 ubox
11 51 0.994142454 ubox
11 60 0.012505929 ubox
12 21 0.009887278 ubox
12 33 0.003648644 ubox
12 43 0.011774299 ubox
12 50 0.993975643 ubox
12 52 0.066759356 ubox
12 59 0.012493283 ubox
13 28 0.070998885 ubox
13 44 0.004918603 ubox
13 51 0.067589350 ubox
13 60 0.010024162 ubox
14 27 0.071081522 ubox
14 43 0.004922661 ubox
14 49 0.994815051 ubox
14 50 0.055444277 ubox
14 58 0.011603833 ubox
14 59 0.010005848 ubox
15 26 0.071083091 ubox
15 48 0.996435279 ubox
15 49 0.039666592 ubox
15 57 0.011637255 ubox
15 58 0.009971168 ubox
16 25 0.071058216 ubox
16 41 0.004844230 ubox
16 47 0.997168347 ubox
17 40 0.004339848 ubox
17 46 0.995520633 ubox
21 28 0.006275736 ubox
21 37 0.005509696 ubox
21 40 0.978896046 ubox
21 44 0.158718424 ubox
21 51 0.015175755 ubox
22 27 0.006196066 ubox
22 36 0.005046676 ubox
22 39 0.979898568 ubox
22 43 0.158344800 ubox
22 50 0.015161733 ubox
25 36 0.991692427 ubox
25 48 0.015349616 ubox
26 35 0.994500685 ubox
26 41 0.072770181 ubox
26 47 0.015383226 ubox
27 34 0.994512702 ubox
27 37 0.008420495 ubox
27 40 0.072806723 ubox
27 44 0.007768431 ubox
27 46 0.015331204 ubox
28 33 0.992821979 ubox
28 36 0.008435032 ubox
28 39 0.072749445 ubox
28 43 0.007813411 ubox
31 41 0.003403927 ubox
31 47 0.006017943 ubox
31 61 0.024486367 ubox
31 64 0.012016058 ubox
32 40 0.003211303 ubox
32 41 0.027427092 ubox
32 46 0.006013454 ubox
32 47 0.003219898 ubox
32 60 0.025300293 ubox
32 61 0.058925832 ubox
32 63 0.011700421 ubox
33 40 0.027480452 ubox
33 44 0.005788407 ubox
33 46 0.003223702 ubox
33 60 0.062210272 ubox
34 39 0.027415571 ubox
34 43 0.005790394 ubox
34 53 0.012076222 ubox
34 58 0.025498441 ubox
34 59 0.062204123 ubox
35 52 0.012164182 ubox
35 57 0.025686594 ubox
35 58 0.062101927 ubox
36 44 0.025853364 ubox
36 51 0.012199290 ubox
37 43 0.026547491 ubox
37 50 0.012143478 ubox
38 61 0.010285633 ubox
39 51 0.038771739 ubox
39 60 0.010810940 ubox
40 49 0.012542062 ubox
40 50 0.038660100 ubox
40 53 0.054621295 ubox
40 59 0.010811784 ubox
41 48 0.012995732 ubox
41 49 0.038511452 ubox
41 52 0.054440180 ubox
41 58 0.010804498 ubox
42 61 0.011159547 ubox
43 51 0.054635937 ubox
43 60 0.011721973 ubox
44 50 0.054621237 ubox
44 59 0.011715270 ubox
46 53 0.010976562 ubox
46 58 0.011756271 ubox
47 52 0.010981443 ubox
47 57 0.011765630 ubox
49 61 0.009352476 ubox
50 60 0.011490113 ubox
51 59 0.011501578 ubox
52 61 0.009335561 ubox
52 64 0.037971110 ubox
53 60 0.024270370 ubox
53 63 0.051606644 ubox
54 61 0.091083918 ubox
55 60 0.092615002 ubox
57 64 0.407577327 ubox
58 63 0.424754646 ubox
58 64 0.124176644 ubox
59 63 0.124188126 ubox
1 57 0.9500000 lbox
2 56 0.9500000 lbox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
showpage
end
%%EOF
