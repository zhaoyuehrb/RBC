%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf146)
} def

/sequence { (\
ACCCUGAGCGGUCUCUGAGGACCUGGUGAGCAGAUUGUUGCACCAUUAGAAGCUAGGUUGAUCCACAGACAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.066697027 ubox
1 58 0.202386762 ubox
2 11 0.076864608 ubox
2 57 0.219801953 ubox
3 10 0.077479134 ubox
3 11 0.035404056 ubox
3 20 0.032236919 ubox
3 56 0.201479288 ubox
3 57 0.926850036 ubox
4 10 0.037297623 ubox
4 11 0.006326085 ubox
4 19 0.032604049 ubox
4 49 0.041954896 ubox
4 52 0.006544713 ubox
4 56 0.942012861 ubox
4 57 0.093590974 ubox
4 68 0.146968392 ubox
4 72 0.060106867 ubox
5 10 0.006331201 ubox
5 18 0.032392062 ubox
5 48 0.042025733 ubox
5 51 0.006379381 ubox
5 55 0.921548721 ubox
5 56 0.090270325 ubox
5 65 0.004916474 ubox
5 67 0.147340479 ubox
5 71 0.061407047 ubox
6 13 0.017140334 ubox
6 15 0.009405098 ubox
6 47 0.041607709 ubox
6 54 0.568691642 ubox
6 63 0.005188504 ubox
6 64 0.005471099 ubox
6 66 0.146788339 ubox
6 70 0.060939624 ubox
7 12 0.016737820 ubox
7 14 0.009552833 ubox
7 16 0.031375445 ubox
7 46 0.038525777 ubox
7 54 0.788017071 ubox
7 59 0.018576168 ubox
7 62 0.005108091 ubox
8 13 0.009452761 ubox
8 15 0.031026719 ubox
8 53 0.975263265 ubox
8 58 0.019836427 ubox
9 52 0.974157378 ubox
9 57 0.019912386 ubox
9 60 0.005818520 ubox
10 23 0.985361483 ubox
10 24 0.004351503 ubox
10 54 0.028711580 ubox
10 63 0.034604538 ubox
10 64 0.020359906 ubox
11 22 0.986916486 ubox
11 23 0.003853370 ubox
11 53 0.032256625 ubox
11 62 0.035043919 ubox
11 63 0.020254073 ubox
11 70 0.104673064 ubox
12 20 0.018998976 ubox
12 21 0.986616157 ubox
12 50 0.016039394 ubox
12 52 0.031531159 ubox
12 61 0.038867327 ubox
12 69 0.105195854 ubox
13 19 0.036231530 ubox
13 20 0.985854868 ubox
13 49 0.016045364 ubox
13 52 0.005738261 ubox
13 60 0.038904086 ubox
13 68 0.105316839 ubox
13 72 0.006978902 ubox
14 18 0.042807613 ubox
14 19 0.906229742 ubox
14 20 0.010940250 ubox
14 21 0.004351360 ubox
14 48 0.015012251 ubox
14 50 0.049836191 ubox
14 51 0.004740330 ubox
14 57 0.014313674 ubox
14 61 0.009272169 ubox
14 67 0.102381308 ubox
14 69 0.087210391 ubox
14 71 0.004336091 ubox
15 19 0.110477823 ubox
15 20 0.005753246 ubox
15 49 0.054100576 ubox
15 56 0.017193020 ubox
15 57 0.027876177 ubox
15 60 0.009364351 ubox
15 68 0.094225300 ubox
16 48 0.054231838 ubox
16 55 0.016827795 ubox
16 56 0.026543157 ubox
16 65 0.093147517 ubox
16 67 0.094465062 ubox
17 47 0.054480937 ubox
17 54 0.011228406 ubox
17 63 0.052557038 ubox
17 64 0.087980032 ubox
17 66 0.094333561 ubox
18 46 0.054176818 ubox
18 47 0.004626334 ubox
18 54 0.028825720 ubox
18 62 0.061143556 ubox
19 46 0.004977180 ubox
19 47 0.003747095 ubox
19 53 0.032610904 ubox
19 54 0.005098149 ubox
19 63 0.034151580 ubox
19 64 0.092699870 ubox
20 46 0.004117977 ubox
20 47 0.007795973 ubox
20 53 0.005343300 ubox
20 59 0.105476030 ubox
20 62 0.020983854 ubox
20 63 0.092097733 ubox
21 46 0.007652679 ubox
21 58 0.125579311 ubox
21 62 0.070720370 ubox
22 57 0.143479055 ubox
23 49 0.042709919 ubox
23 56 0.143471188 ubox
24 45 0.891311448 ubox
24 48 0.058638212 ubox
24 51 0.003777219 ubox
24 55 0.133664707 ubox
25 44 0.990126414 ubox
25 47 0.059090269 ubox
25 54 0.124412100 ubox
26 41 0.003267820 ubox
26 43 0.990350931 ubox
26 46 0.060113142 ubox
26 53 0.124100147 ubox
27 40 0.003411538 ubox
27 42 0.988737762 ubox
27 45 0.062107832 ubox
27 48 0.009557593 ubox
27 52 0.122057372 ubox
28 39 0.004930762 ubox
28 41 0.976893071 ubox
28 44 0.065435317 ubox
28 47 0.023420136 ubox
29 35 0.003391596 ubox
29 36 0.004088647 ubox
29 38 0.010604818 ubox
29 39 0.961142417 ubox
29 46 0.023307610 ubox
29 47 0.003567200 ubox
30 38 0.974128559 ubox
30 41 0.195111868 ubox
31 37 0.974837191 ubox
31 40 0.208458462 ubox
32 36 0.790055623 ubox
32 39 0.202621294 ubox
32 47 0.007608726 ubox
33 38 0.154520151 ubox
33 39 0.006200685 ubox
33 46 0.006949062 ubox
33 47 0.036513460 ubox
34 38 0.007892131 ubox
34 46 0.037956590 ubox
35 45 0.035454392 ubox
35 49 0.003435052 ubox
36 42 0.010069771 ubox
36 45 0.025139723 ubox
36 48 0.003862403 ubox
37 41 0.010357132 ubox
37 43 0.035110979 ubox
37 44 0.027596451 ubox
37 47 0.003769792 ubox
38 42 0.031769044 ubox
39 45 0.004434264 ubox
40 44 0.004575862 ubox
45 58 0.003444006 ubox
45 62 0.010814144 ubox
46 52 0.005773455 ubox
46 56 0.027724027 ubox
46 57 0.003901805 ubox
46 61 0.015579294 ubox
47 51 0.025942992 ubox
47 55 0.071093015 ubox
47 56 0.004012237 ubox
47 60 0.016464632 ubox
48 54 0.074104236 ubox
48 59 0.016392473 ubox
49 53 0.072897418 ubox
49 58 0.015517281 ubox
49 63 0.009500099 ubox
50 59 0.007892031 ubox
50 62 0.009202721 ubox
51 58 0.008091298 ubox
51 59 0.018326899 ubox
52 58 0.020418129 ubox
53 57 0.020453384 ubox
53 68 0.024161673 ubox
53 72 0.005916592 ubox
54 67 0.023530552 ubox
54 71 0.005647263 ubox
56 63 0.012503217 ubox
56 64 0.168173488 ubox
57 62 0.008679926 ubox
57 63 0.168295404 ubox
57 66 0.028026629 ubox
57 70 0.125760136 ubox
58 65 0.028490043 ubox
58 68 0.214134172 ubox
58 69 0.137379196 ubox
58 72 0.262137946 ubox
59 65 0.066405426 ubox
59 67 0.266900199 ubox
59 68 0.137663993 ubox
59 71 0.410509393 ubox
60 64 0.074013596 ubox
60 66 0.274732276 ubox
60 70 0.430268329 ubox
62 69 0.436719829 ubox
63 68 0.441064922 ubox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
showpage
end
%%EOF
