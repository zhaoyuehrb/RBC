%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:47:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UNC5CL)
} def

/sequence { (\
AACUGGACCAGCCAGCAGCCUCUAAGAGCUCCUAGACGGCCUUUGGCUUUGGCUGGCACAGGGGUGAAGGAGAGCCAGCGGCAUUGAGUAACCAGGCGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 65 0.006001863 ubox
2 89 0.031884765 ubox
3 15 0.032354756 ubox
3 61 0.951496735 ubox
3 62 0.050338882 ubox
3 64 0.005264084 ubox
3 78 0.014560493 ubox
3 88 0.033048147 ubox
3 95 0.287759926 ubox
3 96 0.010695366 ubox
4 14 0.032575060 ubox
4 58 0.003192899 ubox
4 60 0.954902992 ubox
4 61 0.027075981 ubox
4 63 0.003858332 ubox
4 77 0.014646066 ubox
4 87 0.032991303 ubox
4 94 0.288606568 ubox
4 95 0.005716373 ubox
5 13 0.032620889 ubox
5 57 0.003643104 ubox
5 59 0.955862149 ubox
5 76 0.014650081 ubox
5 93 0.288819985 ubox
6 12 0.032556011 ubox
6 75 0.014600714 ubox
6 85 0.032519682 ubox
6 92 0.287828673 ubox
7 84 0.032336593 ubox
7 89 0.257796200 ubox
8 52 0.003238020 ubox
8 56 0.958820306 ubox
8 62 0.003451170 ubox
8 88 0.275366829 ubox
9 51 0.004138825 ubox
9 55 0.958975922 ubox
9 61 0.003457405 ubox
9 86 0.274943767 ubox
10 48 0.009718932 ubox
10 54 0.958753414 ubox
10 85 0.254841374 ubox
11 47 0.011048405 ubox
11 53 0.958978222 ubox
11 57 0.004223935 ubox
11 82 0.278622647 ubox
11 84 0.029071667 ubox
11 89 0.012197034 ubox
12 46 0.011070267 ubox
12 52 0.958983349 ubox
12 56 0.004242566 ubox
12 81 0.280607443 ubox
12 88 0.012394396 ubox
13 45 0.011080303 ubox
13 51 0.958964672 ubox
13 55 0.004242748 ubox
13 80 0.279568334 ubox
13 86 0.012761936 ubox
14 33 0.004253962 ubox
14 44 0.011046884 ubox
14 48 0.031878433 ubox
14 49 0.011807155 ubox
14 50 0.955804373 ubox
14 54 0.004241716 ubox
14 85 0.012630111 ubox
15 32 0.005359296 ubox
15 43 0.010399502 ubox
15 47 0.047128931 ubox
15 48 0.006107435 ubox
15 49 0.930124324 ubox
15 53 0.004242587 ubox
15 75 0.004078626 ubox
15 79 0.275591743 ubox
15 82 0.006220969 ubox
15 84 0.011198753 ubox
16 45 0.024450315 ubox
16 46 0.044543774 ubox
16 52 0.004221281 ubox
16 74 0.004081053 ubox
16 78 0.275379275 ubox
16 81 0.006207468 ubox
17 30 0.008325510 ubox
17 42 0.022361360 ubox
17 43 0.006249126 ubox
17 44 0.028592915 ubox
17 48 0.949208609 ubox
17 49 0.009752733 ubox
18 29 0.008785326 ubox
18 40 0.051705791 ubox
18 41 0.016188915 ubox
18 47 0.957503471 ubox
18 75 0.275960562 ubox
18 79 0.006882346 ubox
18 82 0.014045068 ubox
18 97 0.031762596 ubox
19 28 0.007984812 ubox
19 39 0.054421769 ubox
19 46 0.957292046 ubox
19 74 0.274887627 ubox
19 78 0.006893665 ubox
19 81 0.014065344 ubox
19 96 0.031800625 ubox
20 26 0.005778579 ubox
20 28 0.006768287 ubox
20 38 0.054438388 ubox
20 45 0.955223618 ubox
20 46 0.018917376 ubox
20 72 0.273597888 ubox
20 74 0.055672335 ubox
20 80 0.014058265 ubox
20 95 0.031779375 ubox
21 25 0.005266760 ubox
21 27 0.009527124 ubox
21 36 0.076797247 ubox
21 45 0.022312935 ubox
21 46 0.005040144 ubox
21 70 0.004551295 ubox
21 71 0.273604315 ubox
21 73 0.062274382 ubox
21 94 0.030426346 ubox
22 26 0.009662068 ubox
22 35 0.077253141 ubox
22 45 0.035144380 ubox
22 46 0.008381400 ubox
22 69 0.009566419 ubox
22 70 0.273479063 ubox
22 72 0.062313784 ubox
22 78 0.013762121 ubox
23 34 0.077114810 ubox
23 45 0.017496379 ubox
23 68 0.012318681 ubox
23 69 0.265079359 ubox
23 71 0.061657957 ubox
23 77 0.013280295 ubox
24 33 0.070194646 ubox
24 43 0.872419537 ubox
24 44 0.097296658 ubox
25 33 0.030914895 ubox
25 42 0.932340187 ubox
25 43 0.096389726 ubox
25 44 0.142986966 ubox
26 32 0.043528219 ubox
26 41 0.936489387 ubox
26 42 0.089370419 ubox
26 43 0.148296779 ubox
26 44 0.017743908 ubox
27 33 0.004408891 ubox
27 42 0.149558079 ubox
27 43 0.017311163 ubox
28 32 0.004917960 ubox
28 40 0.944145681 ubox
28 41 0.137934092 ubox
28 42 0.014626569 ubox
28 65 0.279734302 ubox
28 75 0.004257805 ubox
28 89 0.030275580 ubox
29 35 0.014920116 ubox
29 39 0.943474457 ubox
29 63 0.003381091 ubox
29 64 0.280660820 ubox
29 72 0.016089540 ubox
29 74 0.004249415 ubox
29 88 0.030884153 ubox
30 34 0.014498951 ubox
30 36 0.110535334 ubox
30 38 0.829653966 ubox
30 39 0.074624583 ubox
30 63 0.280434021 ubox
30 71 0.016268971 ubox
30 73 0.004172877 ubox
30 87 0.030871009 ubox
31 35 0.143113431 ubox
31 38 0.374773096 ubox
31 39 0.124191714 ubox
31 62 0.280620705 ubox
31 63 0.005685979 ubox
31 70 0.016370506 ubox
31 72 0.004017691 ubox
31 86 0.030774986 ubox
32 38 0.136753105 ubox
32 39 0.020508925 ubox
32 61 0.280596610 ubox
32 62 0.005687801 ubox
32 69 0.016376006 ubox
32 70 0.003471386 ubox
33 38 0.022759079 ubox
33 60 0.272097342 ubox
33 61 0.005489485 ubox
33 68 0.015972078 ubox
33 69 0.003345794 ubox
34 42 0.004009161 ubox
34 85 0.007242162 ubox
35 41 0.004098820 ubox
35 84 0.007856815 ubox
35 85 0.019175979 ubox
36 84 0.019247803 ubox
37 55 0.277574269 ubox
37 66 0.008818429 ubox
38 48 0.009210157 ubox
38 54 0.277925553 ubox
38 65 0.006811458 ubox
39 47 0.009941784 ubox
39 53 0.278174580 ubox
39 57 0.037348141 ubox
39 65 0.015328803 ubox
39 82 0.031239105 ubox
40 46 0.009999535 ubox
40 52 0.278150125 ubox
40 56 0.037354164 ubox
40 63 0.004051977 ubox
40 64 0.016419760 ubox
40 81 0.031251676 ubox
41 45 0.010119755 ubox
41 51 0.278044259 ubox
41 52 0.003795533 ubox
41 55 0.037270996 ubox
41 62 0.004051999 ubox
41 63 0.016438177 ubox
41 80 0.031258803 ubox
42 51 0.005345438 ubox
42 61 0.003696616 ubox
42 62 0.016419935 ubox
43 61 0.016448892 ubox
43 78 0.030078972 ubox
44 60 0.016580762 ubox
44 77 0.033133792 ubox
45 50 0.007265883 ubox
45 54 0.036645379 ubox
45 59 0.016652016 ubox
45 76 0.033496782 ubox
46 53 0.037160875 ubox
46 57 0.016932231 ubox
46 75 0.033497772 ubox
47 52 0.037137708 ubox
47 56 0.016949275 ubox
47 74 0.033495129 ubox
48 55 0.016664821 ubox
48 73 0.033357154 ubox
49 72 0.032671086 ubox
50 71 0.026551750 ubox
50 72 0.003308027 ubox
52 79 0.010035830 ubox
53 69 0.010762129 ubox
53 70 0.031176470 ubox
53 78 0.010151789 ubox
54 68 0.010721804 ubox
54 69 0.031327227 ubox
54 77 0.010152697 ubox
55 76 0.010156580 ubox
56 75 0.010156872 ubox
56 82 0.003871141 ubox
57 64 0.003749334 ubox
57 66 0.078011066 ubox
57 74 0.010069437 ubox
57 81 0.004313626 ubox
57 88 0.003894068 ubox
57 96 0.003433716 ubox
58 65 0.078202474 ubox
59 64 0.078058474 ubox
59 66 0.008420674 ubox
59 86 0.008177355 ubox
60 65 0.008113571 ubox
60 85 0.008186629 ubox
61 76 0.003905267 ubox
61 84 0.007975405 ubox
61 93 0.010692217 ubox
62 75 0.004233714 ubox
62 76 0.039198215 ubox
62 92 0.012197246 ubox
62 93 0.236425088 ubox
63 75 0.037730245 ubox
63 76 0.234333456 ubox
63 85 0.005850443 ubox
63 92 0.233089746 ubox
63 93 0.881312387 ubox
64 75 0.234868991 ubox
64 79 0.029093130 ubox
64 82 0.012145819 ubox
64 84 0.007190066 ubox
64 92 0.883292920 ubox
64 97 0.018518641 ubox
65 74 0.234563474 ubox
65 77 0.004751810 ubox
65 78 0.028807014 ubox
65 80 0.034084725 ubox
65 81 0.010463485 ubox
65 83 0.007313049 ubox
65 88 0.006998470 ubox
65 90 0.140211750 ubox
65 91 0.874769521 ubox
65 94 0.004997387 ubox
65 96 0.018348411 ubox
65 98 0.003283892 ubox
66 76 0.005382913 ubox
66 79 0.044858045 ubox
66 82 0.007196981 ubox
66 89 0.200421703 ubox
66 93 0.005668326 ubox
66 97 0.004135356 ubox
68 85 0.012954321 ubox
69 76 0.072974645 ubox
69 84 0.010405261 ubox
69 85 0.047058308 ubox
69 93 0.022838646 ubox
70 75 0.072735858 ubox
70 84 0.044575856 ubox
70 85 0.324081380 ubox
70 92 0.022850105 ubox
71 84 0.324153457 ubox
71 85 0.702703413 ubox
72 84 0.703012267 ubox
72 85 0.282185733 ubox
73 84 0.283183538 ubox
73 85 0.015547949 ubox
74 82 0.917415696 ubox
74 89 0.013536289 ubox
74 97 0.116239444 ubox
75 81 0.917974107 ubox
75 88 0.013878344 ubox
75 96 0.116382660 ubox
76 80 0.911298305 ubox
76 86 0.014708463 ubox
76 95 0.116260470 ubox
77 85 0.014590921 ubox
78 84 0.012172405 ubox
78 89 0.045314945 ubox
78 97 0.058466575 ubox
79 86 0.010022201 ubox
79 88 0.046262029 ubox
79 96 0.058435074 ubox
79 98 0.082036958 ubox
80 85 0.007752455 ubox
80 93 0.093813874 ubox
80 97 0.062810525 ubox
81 89 0.071088335 ubox
81 92 0.093438381 ubox
81 97 0.225457605 ubox
82 88 0.073620553 ubox
82 96 0.231852885 ubox
83 89 0.019051425 ubox
84 88 0.018195335 ubox
84 91 0.019700272 ubox
84 95 0.207652886 ubox
84 99 0.006223098 ubox
85 90 0.020171823 ubox
85 94 0.234680819 ubox
85 98 0.007287961 ubox
86 93 0.235179815 ubox
86 97 0.007646553 ubox
88 97 0.029406216 ubox
89 96 0.028972600 ubox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
19 46 0.9500000 lbox
20 45 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
63 93 0.9500000 lbox
64 92 0.9500000 lbox
65 91 0.9500000 lbox
71 85 0.9500000 lbox
72 84 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
76 80 0.9500000 lbox
showpage
end
%%EOF
