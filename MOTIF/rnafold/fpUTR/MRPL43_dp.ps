%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL43)
} def

/sequence { (\
CCGGAAGCCUCGAGGUUUAGUCCCGCCCCCCUCUCCUCGCUGCUUAGGCUCCGCGGCCUCCAAGCUGUAGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.077198148 ubox
1 56 0.020347372 ubox
2 12 0.005247842 ubox
2 25 0.053558778 ubox
2 42 0.003696571 ubox
2 47 0.115536939 ubox
2 53 0.580278381 ubox
2 55 0.019920742 ubox
2 67 0.016865758 ubox
3 9 0.017439256 ubox
3 10 0.006522583 ubox
3 11 0.007610044 ubox
3 22 0.003886763 ubox
3 23 0.036602232 ubox
3 24 0.054895582 ubox
3 27 0.005403579 ubox
3 28 0.005200647 ubox
3 29 0.005831251 ubox
3 30 0.010463459 ubox
3 31 0.008449140 ubox
3 34 0.005909182 ubox
3 36 0.047000999 ubox
3 41 0.004050515 ubox
3 44 0.011932066 ubox
3 45 0.008464513 ubox
3 50 0.004548811 ubox
3 51 0.006847734 ubox
3 52 0.860610940 ubox
3 54 0.016227435 ubox
3 60 0.003360491 ubox
3 61 0.198485953 ubox
3 66 0.016852897 ubox
3 72 0.004838891 ubox
4 8 0.017179747 ubox
4 9 0.007552907 ubox
4 10 0.006202284 ubox
4 11 0.011841703 ubox
4 21 0.003530841 ubox
4 22 0.037643057 ubox
4 23 0.054206781 ubox
4 26 0.005413519 ubox
4 27 0.005200464 ubox
4 28 0.005837086 ubox
4 29 0.010491496 ubox
4 30 0.008424305 ubox
4 33 0.006527768 ubox
4 35 0.047063854 ubox
4 38 0.004662048 ubox
4 40 0.004076946 ubox
4 43 0.012663891 ubox
4 44 0.003794436 ubox
4 45 0.040745527 ubox
4 49 0.005017911 ubox
4 50 0.004226340 ubox
4 51 0.861047228 ubox
4 60 0.198656082 ubox
4 65 0.016787014 ubox
4 71 0.005178870 ubox
5 10 0.011114529 ubox
5 18 0.056676194 ubox
5 21 0.035287552 ubox
5 32 0.006064866 ubox
5 34 0.045773092 ubox
5 37 0.003846925 ubox
5 44 0.030262445 ubox
5 45 0.429612847 ubox
5 50 0.608860924 ubox
5 59 0.188288046 ubox
6 17 0.067395420 ubox
6 18 0.003439062 ubox
6 32 0.028452482 ubox
6 34 0.008685256 ubox
6 37 0.003729066 ubox
6 41 0.019465879 ubox
6 44 0.459877023 ubox
6 45 0.009459726 ubox
6 50 0.607193613 ubox
6 59 0.008129282 ubox
6 72 0.015704946 ubox
7 16 0.068487493 ubox
7 26 0.010935564 ubox
7 31 0.028816082 ubox
7 33 0.011783752 ubox
7 36 0.004628425 ubox
7 40 0.020702931 ubox
7 43 0.464176982 ubox
7 49 0.859587487 ubox
7 57 0.189404393 ubox
7 58 0.008155499 ubox
7 71 0.017431308 ubox
8 15 0.068715242 ubox
8 25 0.010360603 ubox
8 39 0.019512027 ubox
8 42 0.463942785 ubox
8 48 0.859693295 ubox
8 56 0.189741024 ubox
8 70 0.017299303 ubox
9 14 0.068491539 ubox
9 47 0.859655231 ubox
9 55 0.189632606 ubox
10 46 0.852132309 ubox
10 47 0.003353226 ubox
11 25 0.036135633 ubox
11 39 0.972997123 ubox
11 42 0.025689983 ubox
11 53 0.187016997 ubox
11 67 0.008633574 ubox
12 22 0.004083910 ubox
12 24 0.037499557 ubox
12 33 0.053726402 ubox
12 35 0.008481663 ubox
12 38 0.975890974 ubox
12 41 0.005354157 ubox
12 45 0.034307262 ubox
12 51 0.057622778 ubox
12 52 0.178528041 ubox
13 21 0.004056204 ubox
13 32 0.054045326 ubox
13 34 0.008538970 ubox
13 37 0.975792849 ubox
13 41 0.005056922 ubox
13 44 0.034632710 ubox
13 45 0.028149935 ubox
13 50 0.078809939 ubox
14 23 0.039622991 ubox
14 24 0.011642424 ubox
14 27 0.025708517 ubox
14 28 0.003342166 ubox
14 30 0.003854890 ubox
14 31 0.054085382 ubox
14 33 0.008370369 ubox
14 34 0.003235189 ubox
14 35 0.005366371 ubox
14 36 0.975696577 ubox
14 40 0.005025730 ubox
14 41 0.013916484 ubox
14 43 0.033931023 ubox
14 44 0.033419632 ubox
14 49 0.078369732 ubox
14 50 0.162825794 ubox
14 51 0.034987004 ubox
15 22 0.039771505 ubox
15 23 0.011633138 ubox
15 26 0.027768936 ubox
15 27 0.003446903 ubox
15 29 0.004714721 ubox
15 30 0.053890073 ubox
15 31 0.005156161 ubox
15 32 0.006623690 ubox
15 33 0.008024249 ubox
15 34 0.005936562 ubox
15 35 0.974185033 ubox
15 36 0.003417614 ubox
15 40 0.014948556 ubox
15 43 0.033900083 ubox
15 49 0.170369928 ubox
16 20 0.006235586 ubox
16 25 0.030398226 ubox
16 39 0.014585873 ubox
16 42 0.031795529 ubox
16 47 0.075590495 ubox
16 48 0.170307938 ubox
17 46 0.068614647 ubox
17 47 0.168885673 ubox
18 42 0.027789972 ubox
18 46 0.163776267 ubox
19 32 0.416388671 ubox
19 34 0.325136712 ubox
19 37 0.012731039 ubox
19 41 0.038023494 ubox
19 44 0.136393631 ubox
19 45 0.125683414 ubox
20 26 0.136723648 ubox
20 31 0.442558624 ubox
20 33 0.329003588 ubox
20 36 0.013089654 ubox
20 40 0.039239330 ubox
20 43 0.173329721 ubox
20 44 0.064025224 ubox
21 25 0.128453420 ubox
21 39 0.037544459 ubox
21 42 0.171978594 ubox
24 39 0.098559470 ubox
24 42 0.026361087 ubox
25 38 0.095428828 ubox
25 40 0.154234463 ubox
25 41 0.008351413 ubox
25 43 0.020826215 ubox
25 49 0.004068944 ubox
25 71 0.003744346 ubox
26 39 0.154199956 ubox
26 42 0.020794208 ubox
26 48 0.004071845 ubox
26 70 0.003721634 ubox
27 47 0.004057567 ubox
33 70 0.004626473 ubox
34 69 0.004662374 ubox
35 48 0.003500140 ubox
36 47 0.003649006 ubox
36 70 0.023389883 ubox
37 46 0.003647342 ubox
37 69 0.023520957 ubox
38 53 0.008850445 ubox
38 55 0.003420432 ubox
38 67 0.005879998 ubox
39 49 0.017460258 ubox
39 52 0.010890752 ubox
39 54 0.013728264 ubox
39 57 0.003254045 ubox
39 65 0.015144416 ubox
39 66 0.003550464 ubox
39 68 0.043503833 ubox
39 71 0.077221627 ubox
40 47 0.003480010 ubox
40 48 0.017515498 ubox
40 53 0.013800619 ubox
40 56 0.003283164 ubox
40 64 0.015203387 ubox
40 67 0.045491497 ubox
40 70 0.077372693 ubox
41 46 0.004407349 ubox
41 47 0.017307101 ubox
41 55 0.003293671 ubox
41 62 0.004010113 ubox
41 63 0.014631130 ubox
41 69 0.076483060 ubox
42 49 0.022426183 ubox
42 54 0.005289198 ubox
42 61 0.005566030 ubox
42 65 0.086320455 ubox
42 68 0.035428978 ubox
42 71 0.005069209 ubox
43 48 0.022435211 ubox
43 53 0.005287795 ubox
43 64 0.086975842 ubox
43 67 0.034055071 ubox
43 70 0.005078919 ubox
44 63 0.087741009 ubox
44 64 0.009339545 ubox
44 69 0.005056843 ubox
45 62 0.078620268 ubox
45 63 0.011463660 ubox
46 59 0.122999723 ubox
46 72 0.023827215 ubox
47 58 0.132581018 ubox
47 66 0.006831727 ubox
47 71 0.019365693 ubox
47 72 0.390979511 ubox
48 54 0.004072206 ubox
48 57 0.132623454 ubox
48 65 0.006911093 ubox
48 71 0.442555931 ubox
49 53 0.004089635 ubox
49 56 0.132569336 ubox
49 64 0.006920531 ubox
49 70 0.444522961 ubox
50 55 0.120284828 ubox
50 63 0.006634985 ubox
50 69 0.420929821 ubox
51 55 0.015934958 ubox
52 67 0.017516876 ubox
53 65 0.021831319 ubox
53 66 0.006434519 ubox
53 68 0.754306865 ubox
53 71 0.055813776 ubox
54 64 0.022190698 ubox
54 67 0.960903601 ubox
54 70 0.054715241 ubox
55 61 0.044695804 ubox
55 66 0.966649578 ubox
55 72 0.033555500 ubox
56 60 0.044030488 ubox
56 65 0.967940638 ubox
56 68 0.014974268 ubox
56 71 0.037252450 ubox
57 64 0.962762542 ubox
57 67 0.015636280 ubox
57 70 0.034236214 ubox
58 64 0.080058857 ubox
58 70 0.016283627 ubox
59 63 0.101641959 ubox
59 69 0.021384005 ubox
61 67 0.027998413 ubox
62 66 0.022788837 ubox
63 72 0.181997881 ubox
64 71 0.202016419 ubox
65 70 0.201450710 ubox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
9 47 0.9500000 lbox
10 46 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
15 35 0.9500000 lbox
53 68 0.9500000 lbox
54 67 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
showpage
end
%%EOF
