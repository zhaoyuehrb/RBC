%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FN3K)
} def

/sequence { (\
CCCCGCAGCGCCUCAGCCGACAGGGGCUUCCGAGCGAGCAGAGUCCCGCGCCCCGCACUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.004064668 ubox
1 25 0.035982815 ubox
1 26 0.046004548 ubox
2 23 0.004117810 ubox
2 24 0.036003199 ubox
2 25 0.082246812 ubox
2 26 0.003179262 ubox
3 23 0.035853995 ubox
3 24 0.082425035 ubox
3 25 0.004866621 ubox
4 10 0.004292842 ubox
4 19 0.049196104 ubox
4 23 0.082433902 ubox
4 24 0.004866736 ubox
4 32 0.057394381 ubox
4 36 0.218726974 ubox
4 50 0.021829683 ubox
4 55 0.385882504 ubox
5 9 0.004663134 ubox
5 11 0.012578442 ubox
5 17 0.013445546 ubox
5 18 0.048492350 ubox
5 31 0.057708050 ubox
5 35 0.220931509 ubox
5 39 0.584608249 ubox
5 44 0.006988822 ubox
5 49 0.022914294 ubox
5 51 0.153050179 ubox
5 54 0.399107911 ubox
5 56 0.577851643 ubox
6 10 0.012513175 ubox
6 16 0.014375704 ubox
6 34 0.220771956 ubox
6 38 0.584680761 ubox
6 43 0.007287742 ubox
6 48 0.022876080 ubox
6 50 0.152904719 ubox
6 55 0.578183274 ubox
7 13 0.004548281 ubox
7 28 0.193388908 ubox
7 29 0.043798727 ubox
7 59 0.019466197 ubox
8 12 0.004800897 ubox
8 17 0.099668630 ubox
8 27 0.195650980 ubox
8 28 0.042123379 ubox
8 35 0.237899529 ubox
8 39 0.126360795 ubox
8 44 0.003660406 ubox
8 49 0.163238306 ubox
8 51 0.718791090 ubox
8 56 0.029945907 ubox
8 58 0.020741254 ubox
9 16 0.099885940 ubox
9 19 0.036920178 ubox
9 26 0.195637718 ubox
9 32 0.083858520 ubox
9 34 0.237550647 ubox
9 36 0.555855958 ubox
9 38 0.124936151 ubox
9 43 0.003596382 ubox
9 48 0.163324855 ubox
9 50 0.719163900 ubox
9 55 0.029965843 ubox
10 17 0.052442573 ubox
10 18 0.028933593 ubox
10 27 0.107483075 ubox
10 31 0.081212092 ubox
10 35 0.560359857 ubox
10 39 0.030932481 ubox
10 44 0.009617432 ubox
10 47 0.162832251 ubox
10 49 0.719089179 ubox
10 51 0.005693347 ubox
10 54 0.027632766 ubox
10 56 0.021977978 ubox
11 16 0.057093722 ubox
11 24 0.195082481 ubox
11 25 0.014582510 ubox
11 26 0.108029196 ubox
11 34 0.410299367 ubox
11 38 0.030297489 ubox
11 43 0.008283969 ubox
11 48 0.718675983 ubox
11 50 0.005758829 ubox
11 55 0.021957790 ubox
12 23 0.195123848 ubox
12 24 0.014530799 ubox
12 25 0.108221907 ubox
12 34 0.406196206 ubox
12 38 0.025206449 ubox
12 41 0.008547158 ubox
12 43 0.711209172 ubox
13 20 0.102363541 ubox
13 22 0.186595953 ubox
13 23 0.011167806 ubox
13 24 0.107824507 ubox
13 33 0.557947091 ubox
13 37 0.026061829 ubox
13 40 0.007926339 ubox
13 42 0.712132550 ubox
14 19 0.115622042 ubox
14 23 0.108073124 ubox
14 32 0.558478977 ubox
14 36 0.026041672 ubox
14 41 0.709573842 ubox
15 28 0.617383177 ubox
15 29 0.038353413 ubox
16 27 0.630040798 ubox
16 28 0.006870294 ubox
16 35 0.009756619 ubox
16 39 0.709302384 ubox
16 49 0.024265289 ubox
16 51 0.021701068 ubox
16 56 0.009353358 ubox
17 24 0.025078840 ubox
17 25 0.032496023 ubox
17 26 0.629703467 ubox
17 34 0.009756086 ubox
17 38 0.710234997 ubox
17 48 0.024211924 ubox
17 50 0.019882628 ubox
17 55 0.009314320 ubox
18 23 0.026164827 ubox
18 24 0.039692541 ubox
18 25 0.629173577 ubox
18 32 0.008667786 ubox
18 36 0.708699067 ubox
18 48 0.007327515 ubox
18 50 0.011073091 ubox
19 31 0.008253927 ubox
19 35 0.707862829 ubox
19 45 0.008884088 ubox
19 47 0.003539294 ubox
19 49 0.014025314 ubox
19 60 0.020790680 ubox
20 44 0.008919036 ubox
20 59 0.020475302 ubox
21 43 0.008899829 ubox
22 28 0.006013170 ubox
23 27 0.005970954 ubox
23 30 0.017521205 ubox
23 31 0.640092675 ubox
23 47 0.183922372 ubox
23 54 0.068425314 ubox
24 29 0.014124832 ubox
24 30 0.639265922 ubox
24 31 0.301886621 ubox
24 46 0.184191643 ubox
24 47 0.008090301 ubox
24 53 0.068537677 ubox
25 29 0.414098900 ubox
25 30 0.301923972 ubox
25 31 0.055885373 ubox
25 45 0.184219269 ubox
25 46 0.008250659 ubox
25 52 0.068545188 ubox
26 30 0.055226271 ubox
26 35 0.031854878 ubox
26 39 0.078992132 ubox
26 44 0.183864941 ubox
26 45 0.008195994 ubox
26 51 0.068544967 ubox
27 34 0.032505356 ubox
27 38 0.081293097 ubox
27 43 0.184030338 ubox
27 50 0.068484403 ubox
28 33 0.030262494 ubox
28 37 0.079936434 ubox
28 38 0.023674596 ubox
28 41 0.005535290 ubox
28 42 0.178387918 ubox
28 43 0.005282803 ubox
29 33 0.003502032 ubox
29 36 0.074291551 ubox
29 37 0.054707240 ubox
29 40 0.007023021 ubox
29 41 0.162735483 ubox
29 42 0.037943916 ubox
30 36 0.062406601 ubox
30 41 0.053282256 ubox
31 48 0.041865621 ubox
31 55 0.004523422 ubox
32 45 0.019194529 ubox
32 47 0.041927735 ubox
32 49 0.004288306 ubox
32 54 0.004721735 ubox
32 60 0.012232571 ubox
33 44 0.017445964 ubox
33 59 0.012012447 ubox
34 44 0.034055482 ubox
34 49 0.051120209 ubox
34 51 0.008860055 ubox
34 56 0.035732738 ubox
34 58 0.008752208 ubox
35 43 0.037922022 ubox
35 48 0.051175797 ubox
35 50 0.008879515 ubox
35 55 0.036024994 ubox
36 45 0.050386261 ubox
36 47 0.050370104 ubox
36 49 0.007279545 ubox
36 54 0.035454050 ubox
36 60 0.004486898 ubox
37 44 0.049890482 ubox
37 59 0.004559635 ubox
38 44 0.024293892 ubox
38 49 0.030058314 ubox
38 51 0.029593416 ubox
38 56 0.010499764 ubox
38 58 0.004386532 ubox
39 43 0.025253479 ubox
39 48 0.030183324 ubox
39 50 0.029605943 ubox
39 55 0.010509492 ubox
40 59 0.003504140 ubox
41 58 0.003683071 ubox
41 60 0.660001861 ubox
42 59 0.661731984 ubox
43 49 0.011683243 ubox
43 51 0.008499339 ubox
43 56 0.003633526 ubox
43 58 0.661965594 ubox
44 48 0.010942987 ubox
44 50 0.008297691 ubox
44 55 0.003489733 ubox
44 57 0.653888951 ubox
47 55 0.097909718 ubox
48 54 0.096353143 ubox
48 56 0.657864560 ubox
49 55 0.658186191 ubox
50 54 0.615743614 ubox
50 56 0.055319344 ubox
51 55 0.054953776 ubox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
showpage
end
%%EOF
