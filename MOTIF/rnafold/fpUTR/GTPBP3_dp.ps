%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GTPBP3)
} def

/sequence { (\
ACUUUACUAGUCAAGCCGCGGAGUGGGCGGGGCCCCCUGCCCAGACUUGAAGCCACACAGGCAGGUCGGGCAGGCGGGUCGCAGGUUGUAAAUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.260495659 ubox
1 24 0.008129634 ubox
1 86 0.098863007 ubox
1 89 0.111477196 ubox
2 10 0.299519879 ubox
2 15 0.183645150 ubox
2 23 0.008617815 ubox
2 26 0.005737129 ubox
2 27 0.006318683 ubox
2 30 0.041248866 ubox
2 31 0.018400316 ubox
2 84 0.045426666 ubox
2 85 0.113585893 ubox
2 88 0.117770489 ubox
3 9 0.296112336 ubox
3 10 0.026959775 ubox
3 14 0.184238155 ubox
3 15 0.021525744 ubox
3 22 0.008598065 ubox
3 25 0.004992929 ubox
3 26 0.005332063 ubox
3 27 0.009794227 ubox
3 29 0.039733008 ubox
3 30 0.022990983 ubox
3 83 0.042722969 ubox
3 84 0.111263231 ubox
3 85 0.010183953 ubox
3 91 0.034697018 ubox
3 92 0.595525396 ubox
4 9 0.034657614 ubox
4 10 0.011569957 ubox
4 13 0.179672883 ubox
4 14 0.028400256 ubox
4 15 0.018138453 ubox
4 21 0.008397164 ubox
4 25 0.003931847 ubox
4 26 0.024346603 ubox
4 29 0.024422433 ubox
4 30 0.006428065 ubox
4 83 0.092884339 ubox
4 84 0.013453964 ubox
4 85 0.008498511 ubox
4 90 0.032675433 ubox
4 91 0.683577009 ubox
4 92 0.025213332 ubox
5 9 0.012306888 ubox
5 13 0.029119686 ubox
5 14 0.023281596 ubox
5 20 0.007497263 ubox
5 25 0.029331192 ubox
5 29 0.006688521 ubox
5 83 0.013839928 ubox
5 84 0.008600963 ubox
5 88 0.023583391 ubox
5 90 0.702905684 ubox
5 91 0.023766591 ubox
6 24 0.030467845 ubox
6 86 0.154200681 ubox
6 87 0.019524547 ubox
6 89 0.704189068 ubox
7 15 0.114876186 ubox
7 23 0.030576039 ubox
7 26 0.116422513 ubox
7 30 0.018894714 ubox
7 31 0.003334141 ubox
7 84 0.116872284 ubox
7 85 0.165481375 ubox
7 88 0.697920825 ubox
8 14 0.115427917 ubox
8 22 0.029514911 ubox
8 25 0.117045388 ubox
8 29 0.018117449 ubox
8 30 0.004050585 ubox
8 83 0.116797338 ubox
8 84 0.156623733 ubox
8 88 0.089969428 ubox
8 90 0.016347897 ubox
9 24 0.116489281 ubox
9 87 0.383794440 ubox
9 89 0.015486002 ubox
10 16 0.015334617 ubox
10 19 0.030320407 ubox
10 28 0.019043052 ubox
10 33 0.014567938 ubox
10 82 0.204381595 ubox
10 86 0.379889638 ubox
10 89 0.016374447 ubox
10 93 0.013561573 ubox
11 15 0.018193230 ubox
11 18 0.029268833 ubox
11 21 0.006020593 ubox
11 22 0.116905911 ubox
11 27 0.018994857 ubox
11 30 0.028336339 ubox
11 31 0.010863865 ubox
11 32 0.017515917 ubox
11 81 0.196322007 ubox
11 85 0.419418761 ubox
11 92 0.013677471 ubox
12 20 0.007777504 ubox
12 21 0.117155838 ubox
12 26 0.014018731 ubox
12 29 0.036194801 ubox
12 30 0.093305068 ubox
12 31 0.040522844 ubox
12 84 0.450482110 ubox
12 88 0.066030879 ubox
13 87 0.066450041 ubox
14 86 0.057689742 ubox
14 87 0.047054699 ubox
15 24 0.013063231 ubox
15 28 0.240134350 ubox
15 33 0.008585338 ubox
15 82 0.098069224 ubox
15 86 0.050279122 ubox
15 89 0.005175224 ubox
16 23 0.013157046 ubox
16 26 0.142529551 ubox
16 27 0.237565662 ubox
16 30 0.945226303 ubox
16 31 0.006930399 ubox
16 32 0.010615609 ubox
16 81 0.075220986 ubox
16 85 0.050562820 ubox
16 88 0.004125835 ubox
17 25 0.147773273 ubox
17 26 0.234643965 ubox
17 29 0.950916514 ubox
17 30 0.008175039 ubox
17 31 0.011106901 ubox
17 84 0.049308696 ubox
18 24 0.151779082 ubox
18 28 0.951563948 ubox
18 82 0.034429790 ubox
18 89 0.008359717 ubox
19 23 0.151534493 ubox
19 25 0.076160562 ubox
19 27 0.951448530 ubox
19 29 0.017346439 ubox
19 81 0.034418791 ubox
19 88 0.008619404 ubox
20 24 0.048322181 ubox
20 28 0.019760232 ubox
20 80 0.027921117 ubox
20 87 0.008360016 ubox
20 95 0.028068049 ubox
21 79 0.012401439 ubox
21 86 0.007822516 ubox
21 94 0.028274468 ubox
22 93 0.028133139 ubox
24 90 0.008456292 ubox
25 35 0.007704777 ubox
25 89 0.007973733 ubox
26 34 0.007785743 ubox
26 87 0.026851998 ubox
27 33 0.007824781 ubox
27 82 0.154259587 ubox
27 86 0.048487815 ubox
27 89 0.017462576 ubox
28 32 0.007788075 ubox
28 81 0.154264978 ubox
28 85 0.049783192 ubox
28 88 0.017748508 ubox
29 80 0.128473574 ubox
29 87 0.017391919 ubox
29 94 0.004128970 ubox
29 95 0.019109836 ubox
30 79 0.051187045 ubox
30 80 0.025443326 ubox
30 86 0.017035353 ubox
30 93 0.003452887 ubox
30 94 0.019198060 ubox
31 79 0.024199534 ubox
31 80 0.984831326 ubox
31 93 0.003850717 ubox
32 79 0.996785152 ubox
32 82 0.003792924 ubox
33 77 0.017535932 ubox
33 78 0.999645558 ubox
34 76 0.017835110 ubox
34 77 0.999795952 ubox
35 76 0.999674535 ubox
36 74 0.999859055 ubox
37 73 0.999980002 ubox
37 74 0.003712252 ubox
38 72 0.999753713 ubox
39 71 0.999989957 ubox
40 70 0.999973386 ubox
41 69 0.999941228 ubox
41 70 0.006593978 ubox
42 68 0.996126601 ubox
42 69 0.009287246 ubox
44 67 0.999120385 ubox
45 66 0.999740090 ubox
46 64 0.021621053 ubox
46 65 0.999693555 ubox
47 60 0.003187668 ubox
47 63 0.027341916 ubox
47 64 0.994681850 ubox
47 65 0.006329346 ubox
48 59 0.006024950 ubox
48 63 0.958153888 ubox
48 64 0.042164716 ubox
49 56 0.003184720 ubox
49 58 0.006459714 ubox
49 62 0.464362480 ubox
52 62 0.884939013 ubox
53 61 0.988014819 ubox
54 60 0.987556403 ubox
80 84 0.005955058 ubox
80 88 0.004023852 ubox
81 87 0.017148977 ubox
81 89 0.244162078 ubox
82 88 0.251983582 ubox
83 87 0.204588442 ubox
84 94 0.226659023 ubox
84 95 0.331837901 ubox
85 93 0.228587555 ubox
85 94 0.334665274 ubox
86 92 0.231360674 ubox
87 91 0.193042061 ubox
3 92 0.9500000 lbox
4 91 0.9500000 lbox
5 90 0.9500000 lbox
6 89 0.9500000 lbox
7 88 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
31 80 0.9500000 lbox
32 79 0.9500000 lbox
33 78 0.9500000 lbox
34 77 0.9500000 lbox
35 76 0.9500000 lbox
36 74 0.9500000 lbox
37 73 0.9500000 lbox
38 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
41 69 0.9500000 lbox
42 68 0.9500000 lbox
44 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
showpage
end
%%EOF
