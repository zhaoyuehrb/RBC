%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGUUAGUCUUUUCUUCACUUCCGUUGAGUUCCGCCUCGCCGUUUGUCCCUUGCGGUACCCGUCCGCAUACGAAUCUAGCCCGGGAACCGAGUUGCGGGAGUGCGGUCUGUGCCGUUCCGGCCAGGAGUUUGCCGACUGCAGACGUCCUGCGAACCGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[74.04433441 178.55888367]
[59.91118240 183.58422852]
[44.91711807 184.00610352]
[30.52375412 179.78343201]
[18.13415337 171.32778931]
[8.95604897 159.46345520]
[3.88412094 145.34695435]
[3.41277862 130.35437012]
[7.58796835 115.94715118]
[16.00269508 103.52972412]
[27.83669090 94.31253815]
[41.93638611 89.19408417]
[56.92734146 88.67329407]
[71.34883118 92.80120850]
[85.82032776 96.74782562]
[75.01250458 86.34634399]
[59.70388794 82.35174561]
[55.89890671 67.95134735]
[45.09108353 57.54986191]
[34.28326035 47.14837265]
[23.47543716 36.74688721]
[12.66761208 26.34539795]
[1.85978854 15.94391060]
[-8.94803524 5.54242373]
[-19.75585938 -4.85906410]
[-30.56368256 -15.26055145]
[-41.76198196 -25.24043655]
[-53.33432007 -34.78407288]
[-61.98939514 -37.85033417]
[-65.03463745 -44.62304306]
[-76.42204285 -54.38659286]
[-87.80944824 -64.15014648]
[-99.19685364 -73.91369629]
[-110.58426666 -83.67725372]
[-122.30907440 -79.19065857]
[-134.75535583 -80.12820435]
[-145.54986572 -86.24923706]
[-152.66067505 -96.33060455]
[-154.77966309 -108.41064453]
[-151.56278992 -120.17073822]
[-162.56787109 -130.36329651]
[-182.38470459 -133.88780212]
[-187.39790344 -152.53471375]
[-198.78530884 -162.29826355]
[-210.17271423 -172.06181335]
[-221.56011963 -181.82536316]
[-232.94752502 -191.58892822]
[-244.33493042 -201.35247803]
[-253.63801575 -199.36978149]
[-262.66949463 -201.88055420]
[-269.41278076 -208.19166565]
[-272.42388916 -216.77682495]
[-271.13946533 -225.64413452]
[-281.94726562 -236.04560852]
[-292.75509644 -246.44709778]
[-303.56292725 -256.84860229]
[-314.37075806 -267.25009155]
[-329.89959717 -265.40924072]
[-342.95025635 -274.02401733]
[-347.36059570 -289.02676392]
[-341.04818726 -303.33367920]
[-326.99356079 -310.18945312]
[-311.83288574 -306.35699463]
[-302.72454834 -293.64587402]
[-303.96926880 -278.05789185]
[-293.16143799 -267.65640259]
[-282.35360718 -257.25491333]
[-271.54577637 -246.85343933]
[-260.73797607 -236.45195007]
[-240.36016846 -233.34091187]
[-234.57138062 -212.73988342]
[-223.18397522 -202.97633362]
[-211.79656982 -193.21278381]
[-200.40916443 -183.44921875]
[-189.02175903 -173.68566895]
[-177.63435364 -163.92211914]
[-167.50027466 -165.61918640]
[-157.91441345 -161.34559631]
[-152.16668701 -152.30206299]
[-152.37530518 -141.36837769]
[-141.37022400 -131.17581177]
[-124.26571655 -135.41944885]
[-107.88010406 -128.51797485]
[-98.80757904 -113.04533386]
[-100.82070923 -95.06465912]
[-89.43330383 -85.30110931]
[-78.04589844 -75.53755188]
[-66.65848541 -65.77400208]
[-55.27108002 -56.01044846]
[-43.79068375 -46.35641098]
[-32.21834564 -36.81277466]
[-29.37538338 -36.97525406]
[-26.29591179 -35.99467850]
[-23.42499542 -33.77479935]
[-21.23427200 -30.38576317]
[-20.16219521 -26.06837463]
[-9.35437202 -15.66688824]
[1.45345211 -5.26540041]
[12.26127625 5.13608694]
[23.06909943 15.53757477]
[33.87692261 25.93906212]
[44.68474960 36.34054947]
[55.49257278 46.74203873]
[66.30039215 57.14352417]
[80.83596802 60.39413834]
[85.41399384 75.53851318]
[96.22181702 85.94000244]
[110.64688873 90.05307770]
[125.31510162 86.91566467]
[139.98332214 83.77825928]
[154.65155029 80.64084625]
[162.43188477 75.76451111]
[169.63067627 77.58666229]
[184.35630798 74.73079681]
[199.08193970 71.87493134]
[213.80755615 69.01906586]
[228.20579529 60.06769180]
[240.79316711 71.42525482]
[233.36399841 86.66480255]
[216.66342163 83.74468994]
[201.93780518 86.60055542]
[187.21217346 89.45642090]
[172.48655701 92.31228638]
[157.78895569 95.30906677]
[143.12072754 98.44647217]
[128.45251465 101.58388519]
[113.78429413 104.72129822]
[111.24916840 111.77984619]
[120.93983459 123.22934723]
[106.17891693 125.89694977]
[103.64379120 132.95549011]
[112.96400452 144.70852661]
[122.28422546 156.46154785]
[131.60444641 168.21456909]
[140.92466736 179.96759033]
[150.24488831 191.72061157]
[167.63575745 193.39308167]
[178.24604797 206.84646606]
[175.91300964 223.48042297]
[185.45664978 235.05276489]
[195.00027466 246.62509155]
[204.54391479 258.19744873]
[214.08755493 269.76977539]
[229.85530090 272.72912598]
[237.24501038 286.96893311]
[230.58792114 301.56561279]
[214.99079895 305.32183838]
[202.41841125 295.35617065]
[202.51521301 279.31341553]
[192.97157288 267.74105835]
[183.42794800 256.16873169]
[173.88430786 244.59638977]
[164.34066772 233.02406311]
[151.44093323 233.59323120]
[140.41200256 226.51083374]
[135.41610718 214.18261719]
[138.49186707 201.04083252]
[129.17164612 189.28779602]
[119.85142517 177.53477478]
[110.53120422 165.78175354]
[101.21098328 154.02873230]
[91.89076996 142.27571106]
[94.43533325 157.05831909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 107]
[16 106]
[18 104]
[19 103]
[20 102]
[21 101]
[22 100]
[23 99]
[24 98]
[25 97]
[26 96]
[27 91]
[28 90]
[30 89]
[31 88]
[32 87]
[33 86]
[34 85]
[40 81]
[41 80]
[43 76]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[108 127]
[109 126]
[110 125]
[111 124]
[113 123]
[114 122]
[115 121]
[116 120]
[131 162]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
