%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCAAGCACACACCAACUAGCUGUCCAGGAAGCAGCCUAACCAGAGAGAGGGGCGUGGGAGGGAGAGAGGCGGGGAAAAGCAGCGUCUCCGCUUUUCUUCUCACGUCUUGCCGCGGAGAAGUGGGUUCCUGGGCAGUGCAGAUUUUUUUUUUUUAAUUCAAGAUUUUCUUUAAUUUCCCGCCUAAAGCCUCCCCACGGUAGGGCCGCAUCCCCUGUAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[29.59514618 641.53332520]
[22.80478287 646.06115723]
[15.38575077 649.45135498]
[7.52692890 651.61920166]
[-0.57185656 652.51110840]
[-8.70492077 652.10583496]
[-16.66593933 650.41516113]
[-22.95771980 664.03179932]
[-29.24950027 677.64849854]
[-19.50419426 689.39544678]
[-15.82913876 704.20953369]
[-18.95401764 719.14935303]
[-28.25838280 731.24859619]
[-41.89484787 738.10491943]
[-57.15588379 738.35705566]
[-71.01139832 731.95489502]
[-80.71037292 720.16967773]
[-84.32705688 705.34124756]
[-81.14337158 690.41381836]
[-71.79143524 678.35131836]
[-58.12807465 671.54870605]
[-42.86616516 671.35668945]
[-36.57438278 657.74005127]
[-30.28260040 644.12335205]
[-46.00741196 627.98071289]
[-53.27589417 606.60693359]
[-50.64273071 584.14459229]
[-38.58527756 564.96313477]
[-19.41747475 552.80865479]
[3.15413570 550.07250977]
[6.88448381 535.54376221]
[10.61483192 521.01501465]
[6.28575706 506.76342773]
[17.21193886 495.32098389]
[20.94228745 480.79223633]
[16.61321259 466.54061890]
[27.53939438 455.09820557]
[31.26974297 440.56945801]
[35.00009155 426.04071045]
[38.73043823 411.51196289]
[34.40136337 397.26034546]
[45.32754517 385.81793213]
[49.05789566 371.28918457]
[52.78824234 356.76043701]
[41.31479263 347.23019409]
[35.09137344 333.60748291]
[35.40108109 318.57202148]
[42.23603821 305.10711670]
[54.28833008 295.90771484]
[69.19996643 292.84100342]
[72.93031311 278.31225586]
[76.66065979 263.78350830]
[80.39100647 249.25476074]
[83.71423340 234.62751770]
[86.62775421 219.91319275]
[84.84537506 212.74853516]
[89.68603516 205.01440430]
[92.80471039 190.34219360]
[95.92338562 175.66998291]
[99.04206085 160.99775696]
[102.16073608 146.32554626]
[105.27941132 131.65333557]
[59.02172470 99.90412903]
[48.01577377 89.71250916]
[37.00982666 79.52088928]
[26.00387955 69.32926941]
[14.99793148 59.13765335]
[3.99198365 48.94603348]
[-7.01396418 38.75441360]
[-18.01991272 28.56279373]
[-29.02585983 18.37117386]
[-40.03180695 8.17955494]
[-51.03775787 -2.01206470]
[-62.04370499 -12.20368385]
[-73.04965210 -22.39530373]
[-84.05560303 -32.58692169]
[-95.06154633 -42.77854156]
[-106.06749725 -52.97016144]
[-120.97927094 -49.01509094]
[-135.65509033 -53.77152634]
[-145.41197205 -65.72171021]
[-147.13652039 -81.05238342]
[-140.27842712 -94.87158203]
[-127.02610779 -102.76964569]
[-111.60831451 -102.22634125]
[-98.94480896 -93.41502380]
[-93.07647705 -79.14736176]
[-95.87587738 -63.97611237]
[-84.86992645 -53.78449249]
[-73.86398315 -43.59287262]
[-62.85803223 -33.40125275]
[-51.85208511 -23.20963287]
[-40.84613800 -13.01801300]
[-29.84018898 -2.82639313]
[-18.83423996 7.36522627]
[-7.82829285 17.55684662]
[3.17765522 27.74846649]
[14.18360329 37.94008636]
[25.18955040 48.13170624]
[36.19549942 58.32332611]
[47.20144653 68.51494598]
[58.20739365 78.70656586]
[69.21334076 88.89818573]
[76.47771454 87.03301239]
[80.51148224 72.58556366]
[91.00646210 83.30265808]
[98.27083588 81.43748474]
[103.00557709 67.20434570]
[100.01984406 51.66742325]
[111.37893677 42.03309250]
[116.11367035 27.79994965]
[120.84840393 13.56681061]
[125.58314514 -0.66632980]
[130.31787109 -14.89947033]
[130.05647278 -24.01980019]
[135.21936035 -29.29747391]
[140.15235901 -43.46311951]
[145.08535767 -57.62876511]
[144.95132446 -66.75185394]
[150.18739319 -71.95693207]
[155.31768799 -86.05231476]
[160.44799805 -100.14770508]
[154.99833679 -115.23680878]
[163.52009583 -128.82942200]
[179.47610474 -130.49845886]
[190.62626648 -118.96358490]
[188.41714478 -103.07335663]
[174.54338074 -95.01740265]
[169.41308594 -80.92201233]
[164.28277588 -66.82662964]
[159.25100708 -52.69576263]
[154.31800842 -38.53011703]
[149.38500977 -24.36447334]
[144.55102539 -10.16473484]
[139.81628418 4.06840563]
[135.08154297 18.30154610]
[130.34681702 32.53468704]
[125.61207581 46.76782608]
[128.93646240 61.28670120]
[117.23871613 71.93907928]
[112.50397491 86.17221832]
[117.03847504 92.14619446]
[128.01731873 81.92539215]
[138.99617004 71.70458984]
[149.97502136 61.48378754]
[160.95388794 51.26298523]
[168.32934570 38.20149612]
[182.80398560 34.26645279]
[195.77726746 41.79598999]
[199.54072571 56.31620026]
[191.85816956 69.19945526]
[177.29435730 72.79077148]
[164.49763489 80.61661530]
[151.70091248 88.44245911]
[138.90419006 96.26830292]
[126.10746002 104.09414673]
[130.64195251 110.06812286]
[145.62403870 109.33537292]
[160.60614014 108.60262299]
[175.58822632 107.86988068]
[188.99395752 99.46768188]
[202.08399963 106.57402039]
[217.06610107 105.84127045]
[232.04818726 105.10852814]
[247.03027344 104.37577820]
[262.55514526 97.56291962]
[273.39944458 110.59507751]
[263.87860107 124.62325287]
[247.76303101 119.35787201]
[232.78092957 120.09062195]
[217.79884338 120.82336426]
[202.81674194 121.55611420]
[190.48263550 129.90589905]
[176.32096863 122.85197449]
[161.33888245 123.58471680]
[146.35679626 124.31746674]
[131.37469482 125.05020905]
[119.95162201 134.77200317]
[116.83294678 149.44422913]
[113.71427155 164.11643982]
[110.59559631 178.78865051]
[107.47692108 193.46086121]
[104.35824585 208.13308716]
[101.34207916 222.82670593]
[98.42856598 237.54103088]
[99.96353149 241.57836914]
[100.12400055 245.50088501]
[99.11364746 248.89219666]
[97.25006104 251.44427490]
[94.91975403 252.98510742]
[91.18940735 267.51385498]
[87.45906067 282.04260254]
[83.72871399 296.57135010]
[95.31848145 306.44244385]
[101.44813538 320.31018066]
[100.95088959 335.40234375]
[93.97889709 348.72723389]
[81.96247864 357.66674805]
[67.31699371 360.49078369]
[63.58664322 375.01953125]
[59.85629272 389.54827881]
[63.91854858 404.83908081]
[53.25918579 415.24230957]
[49.52883911 429.77105713]
[45.79848862 444.29980469]
[42.06814194 458.82855225]
[46.13039780 474.11935425]
[35.47103500 484.52258301]
[31.74068642 499.05133057]
[35.80294037 514.34216309]
[25.14357948 524.74536133]
[21.41323090 539.27410889]
[17.68288231 553.80285645]
[24.97369957 557.60186768]
[31.56505013 562.50769043]
[37.29053116 568.39465332]
[42.00589752 575.11236572]
[45.59267044 582.48950195]
[47.96114731 590.33819580]
[49.05261230 598.45880127]
[48.84081268 606.64514160]
[47.33258438 614.68945312]
[44.56763458 622.38787842]
[40.61750031 629.54553223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[30 213]
[31 212]
[32 211]
[34 209]
[35 208]
[37 206]
[38 205]
[39 204]
[40 203]
[42 201]
[43 200]
[44 199]
[50 193]
[51 192]
[52 191]
[53 190]
[54 185]
[55 184]
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[78 88]
[107 141]
[108 140]
[110 138]
[111 137]
[112 136]
[113 135]
[114 134]
[116 133]
[117 132]
[118 131]
[120 130]
[121 129]
[122 128]
[157 177]
[158 176]
[159 175]
[160 174]
[162 172]
[163 171]
[164 170]
[165 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
