%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGCAGCCACGGCCAAUAGGCGAGAGACUUCUUGUUUCCUGGCAGAGCGGGGUCCCGGCACCGCGGCGCUCGGGUGUUUUUGGGGGCCCGGGUGGAGGGCCCGGGUGCCGGGGCCCAAGGUGCGGCCUCGCUAGCGGGAGAGGGAGCGGGAUCACCGGCCCGGAGAGAGCUCUCAGGGCCAGAGCGGGGCAGGAGGAUGCUUUCCCAGCCCCACC\
) } def
/len { sequence length } bind def

/coor [
[109.50927734 170.13322449]
[124.22630310 173.03349304]
[118.13842010 159.32446289]
[112.05053711 145.61541748]
[101.16328430 147.16596985]
[90.21282959 146.15402222]
[79.79410553 142.63453674]
[70.47315979 136.79875183]
[59.34529495 146.85710144]
[61.82810211 160.41236877]
[57.32582855 173.32234192]
[47.11497116 182.25143433]
[33.93199921 184.94871521]
[21.24049187 180.81462097]
[9.96883583 190.71157837]
[-1.30282092 200.60853577]
[-12.57447720 210.50549316]
[-13.75219917 226.03775024]
[-25.32424736 235.91409302]
[-40.12461472 234.69560242]
[-51.39627075 244.59255981]
[-62.66792679 254.48951721]
[-73.93958282 264.38647461]
[-85.21124268 274.28341675]
[-96.48289490 284.18038940]
[-107.75455475 294.07733154]
[-119.02620697 303.97430420]
[-123.77288055 319.67147827]
[-139.79986572 323.14535522]
[-150.61996460 310.82232666]
[-145.10240173 295.37924194]
[-128.92317200 292.70263672]
[-117.65151215 282.80569458]
[-106.37985229 272.90872192]
[-95.10820007 263.01177979]
[-83.83654022 253.11480713]
[-72.56488800 243.21784973]
[-61.29322815 233.32089233]
[-50.02157211 223.42393494]
[-49.31562424 208.59028625]
[-38.02554703 198.39279175]
[-22.47143364 199.23384094]
[-11.19977856 189.33688354]
[0.07187831 179.43992615]
[11.34353447 169.54296875]
[9.30968571 153.25126648]
[17.47072029 138.81382751]
[32.78173447 132.01998901]
[49.28693771 135.72924805]
[60.41480255 125.67088318]
[52.94211197 96.60337067]
[64.51177216 68.91033173]
[54.94374847 57.35814667]
[45.37572861 45.80596161]
[35.80770874 34.25377274]
[26.23968887 22.70158958]
[16.67166710 11.14940453]
[7.10364676 -0.40278092]
[-2.46437359 -11.95496655]
[-12.03239441 -23.50715065]
[-21.60041428 -35.05933762]
[-31.16843605 -46.61152267]
[-40.73645401 -58.16370773]
[-50.30447769 -69.71588898]
[-65.79633331 -71.34073639]
[-75.33509827 -83.19258881]
[-73.69058990 -97.95169830]
[-83.25861359 -109.50388336]
[-92.82663727 -121.05606842]
[-102.80455017 -132.25611877]
[-113.17941284 -143.08950806]
[-123.55428314 -153.92288208]
[-133.92913818 -164.75627136]
[-144.30401611 -175.58964539]
[-154.67887878 -186.42303467]
[-165.05374146 -197.25642395]
[-175.42860413 -208.08979797]
[-190.56167603 -212.70507812]
[-193.77650452 -227.24859619]
[-204.15138245 -238.08198547]
[-220.03903198 -242.14579773]
[-224.20234680 -258.00765991]
[-212.35845947 -269.35025024]
[-196.69134521 -264.50527954]
[-193.31799316 -248.45684814]
[-182.94313049 -237.62345886]
[-168.55213928 -233.78306580]
[-164.59521484 -218.46466064]
[-154.22035217 -207.63128662]
[-143.84548950 -196.79789734]
[-133.47062683 -185.96450806]
[-123.09576416 -175.13113403]
[-112.72090149 -164.29774475]
[-102.34603119 -153.46437073]
[-91.97116852 -142.63098145]
[-89.07175446 -157.34809875]
[-75.82654572 -164.38829041]
[-62.00582504 -158.55841064]
[-57.80439758 -144.15882874]
[-66.32143402 -131.81135559]
[-81.27445221 -130.62408447]
[-71.70642853 -119.07189941]
[-62.13840866 -107.51971436]
[-47.33126068 -106.38658905]
[-37.46336365 -94.80732727]
[-38.75229263 -79.28391266]
[-29.18427086 -67.73172760]
[-19.61625099 -56.17954254]
[-10.04822922 -44.62735748]
[-0.48020896 -33.07517242]
[9.08781147 -21.52298737]
[18.65583229 -9.97080135]
[28.22385216 1.58138371]
[37.79187393 13.13356876]
[47.35989380 24.68575478]
[56.92791367 36.23793793]
[66.49593353 47.79012299]
[76.06395721 59.34230804]
[83.81472778 53.60586929]
[92.90882111 49.40215683]
[103.03170776 47.03836060]
[113.80022430 46.75497818]
[124.77707672 48.71082687]
[135.48852539 52.97124481]
[146.17126465 42.44134521]
[146.45219421 26.86704445]
[157.43601990 16.34040642]
[172.28201294 16.70420265]
[182.96475220 6.17430115]
[193.64750671 -4.35560036]
[204.33026123 -14.88550186]
[208.72698975 -30.08350945]
[223.22267151 -33.50759125]
[233.90542603 -44.03749466]
[237.73985291 -59.98205948]
[253.54008484 -64.37351990]
[265.05218506 -52.69431686]
[260.43347168 -36.95901489]
[244.43531799 -33.35474396]
[233.75256348 -22.82484055]
[230.11994934 -8.38000298]
[214.86016846 -4.20275021]
[204.17741394 6.32715130]
[193.49465942 16.85705185]
[182.81190491 27.38695335]
[182.96173096 42.23663712]
[172.27790833 53.06763458]
[156.70117188 53.12409592]
[146.01841736 63.65399551]
[153.54959106 76.62632751]
[167.99081421 72.57032776]
[177.06709290 59.34153748]
[193.07843018 58.33339310]
[203.74232483 70.31925964]
[200.87832642 86.10460663]
[186.68347168 93.58026123]
[172.04681396 87.01155090]
[157.60560608 91.06755066]
[158.14588928 106.05781555]
[172.84164429 109.06362915]
[187.53739929 112.06944275]
[202.23313904 115.07526398]
[216.92889404 118.08107758]
[231.99961853 113.26609802]
[242.91827393 123.39685059]
[257.61401367 126.40266418]
[272.30978394 129.40847778]
[287.00552368 132.41430664]
[302.38299561 126.71648407]
[314.83175659 137.39172363]
[311.54556274 153.45823669]
[295.90499878 158.38818359]
[283.99969482 147.11004639]
[269.30395508 144.10423279]
[254.60821533 141.09841919]
[239.91246033 138.09260559]
[225.89288330 143.12257385]
[213.92308044 132.77682495]
[199.22732544 129.77101135]
[184.53158569 126.76519775]
[169.83583069 123.75937653]
[155.14007568 120.75356293]
[146.27658081 129.73139954]
[136.24487305 136.01020813]
[125.75957489 139.52754211]
[131.84745789 153.23657227]
[137.93533325 166.94561768]
[144.51306152 180.42646790]
[151.57209778 193.66165161]
[158.63113403 206.89683533]
[165.69017029 220.13201904]
[172.74919128 233.36720276]
[186.07055664 241.90252686]
[185.23307800 256.77355957]
[192.29209900 270.00875854]
[199.08825684 276.10403442]
[199.35594177 283.48590088]
[206.22351074 296.82144165]
[213.09109497 310.15698242]
[227.16827393 318.56915283]
[226.65119934 334.96014404]
[212.07177734 342.46832275]
[198.42807007 333.36987305]
[199.75555420 317.02453613]
[192.88798523 303.68902588]
[186.02040100 290.35348511]
[179.05691528 277.06777954]
[171.99789429 263.83261108]
[159.18144226 256.24395752]
[159.51402283 240.42623901]
[152.45498657 227.19105530]
[145.39595032 213.95587158]
[138.33691406 200.72068787]
[131.27787781 187.48550415]
[124.50697327 200.87037659]
[109.85150146 204.06680298]
[98.12203217 194.71696472]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 187]
[3 186]
[4 185]
[8 50]
[9 49]
[14 45]
[15 44]
[16 43]
[17 42]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[52 118]
[53 117]
[54 116]
[55 115]
[56 114]
[57 113]
[58 112]
[59 111]
[60 110]
[61 109]
[62 108]
[63 107]
[64 106]
[67 103]
[68 102]
[69 101]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[79 86]
[80 85]
[124 149]
[125 148]
[128 145]
[129 144]
[130 143]
[131 142]
[133 140]
[134 139]
[150 158]
[151 157]
[159 182]
[160 181]
[161 180]
[162 179]
[163 178]
[165 176]
[166 175]
[167 174]
[168 173]
[188 214]
[189 213]
[190 212]
[191 211]
[192 210]
[194 208]
[195 207]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
