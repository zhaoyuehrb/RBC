%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAGE6)
} def

/sequence { (\
GCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.005115854 ubox
1 74 0.027371886 ubox
1 76 0.225092269 ubox
2 36 0.004909876 ubox
2 73 0.023407345 ubox
2 75 0.233276064 ubox
3 12 0.003720018 ubox
3 62 0.050297577 ubox
3 73 0.247880843 ubox
3 75 0.015726553 ubox
3 77 0.021375482 ubox
4 11 0.003848822 ubox
4 35 0.003168696 ubox
4 49 0.032757575 ubox
4 50 0.050327368 ubox
4 51 0.735735587 ubox
4 52 0.060247031 ubox
4 53 0.036317255 ubox
4 56 0.042607300 ubox
4 58 0.007157406 ubox
4 61 0.050222266 ubox
4 72 0.247634989 ubox
4 74 0.013857260 ubox
4 76 0.016725490 ubox
5 10 0.003849949 ubox
5 35 0.005588173 ubox
5 48 0.034793952 ubox
5 49 0.053486011 ubox
5 50 0.890352341 ubox
5 51 0.057667769 ubox
5 52 0.031742743 ubox
5 53 0.011578666 ubox
5 54 0.026159006 ubox
5 55 0.048722659 ubox
5 56 0.009464760 ubox
5 57 0.007886771 ubox
5 60 0.049397129 ubox
5 68 0.005550358 ubox
5 71 0.245533973 ubox
5 72 0.008171660 ubox
6 34 0.006312373 ubox
6 47 0.034544800 ubox
6 48 0.047013944 ubox
6 49 0.980350350 ubox
6 50 0.044626467 ubox
6 51 0.016537188 ubox
6 52 0.005899803 ubox
6 53 0.014181750 ubox
6 54 0.047768114 ubox
6 55 0.012385414 ubox
6 56 0.004042995 ubox
6 58 0.020159842 ubox
6 68 0.008336866 ubox
6 70 0.084424181 ubox
6 71 0.008832046 ubox
6 72 0.009348943 ubox
7 33 0.006520237 ubox
7 46 0.034487449 ubox
7 47 0.036291045 ubox
7 48 0.997280088 ubox
7 49 0.005401885 ubox
7 50 0.012307834 ubox
7 52 0.003851337 ubox
7 53 0.017801629 ubox
7 54 0.012153922 ubox
7 57 0.022276938 ubox
7 68 0.019772895 ubox
7 71 0.008545535 ubox
8 32 0.006714610 ubox
8 47 0.997724358 ubox
8 49 0.012452513 ubox
8 51 0.003338794 ubox
8 52 0.014799511 ubox
8 53 0.011417666 ubox
8 56 0.022244093 ubox
8 67 0.018628881 ubox
8 70 0.007258403 ubox
9 21 0.003250356 ubox
9 31 0.006758507 ubox
9 46 0.997808529 ubox
9 48 0.012521672 ubox
9 51 0.012234799 ubox
9 52 0.009835043 ubox
9 55 0.022122193 ubox
9 66 0.013772141 ubox
10 20 0.003456250 ubox
10 30 0.006848073 ubox
10 44 0.999298923 ubox
10 64 0.004841964 ubox
11 19 0.003466246 ubox
11 29 0.006748146 ubox
11 43 0.998653996 ubox
11 63 0.004589742 ubox
12 18 0.003468745 ubox
12 28 0.004964240 ubox
12 42 0.997466424 ubox
12 60 0.003748485 ubox
13 17 0.003244995 ubox
13 27 0.004058947 ubox
13 39 0.003980500 ubox
13 43 0.005118053 ubox
13 59 0.003704606 ubox
14 41 0.937172864 ubox
14 42 0.005755143 ubox
14 50 0.003513765 ubox
14 51 0.015045662 ubox
14 57 0.004582357 ubox
15 40 0.913130424 ubox
15 49 0.003559852 ubox
15 50 0.015276357 ubox
15 56 0.004618077 ubox
16 24 0.006602730 ubox
16 38 0.998361348 ubox
16 48 0.003491752 ubox
16 49 0.015356249 ubox
16 55 0.004568172 ubox
17 23 0.006653232 ubox
17 37 0.999823734 ubox
17 48 0.015391047 ubox
17 54 0.004552173 ubox
18 22 0.006607330 ubox
18 36 0.999819471 ubox
19 35 0.999374283 ubox
19 47 0.016169672 ubox
20 34 0.998104206 ubox
20 46 0.016413623 ubox
21 29 0.026533209 ubox
21 30 0.013820060 ubox
21 45 0.016363956 ubox
22 28 0.030244499 ubox
22 31 0.990762604 ubox
23 27 0.030268326 ubox
23 30 0.995037851 ubox
23 44 0.016516345 ubox
24 29 0.930888322 ubox
24 43 0.016537116 ubox
25 31 0.007402098 ubox
25 42 0.016451789 ubox
26 30 0.003360264 ubox
27 40 0.010135919 ubox
28 39 0.015664647 ubox
29 38 0.016799784 ubox
30 37 0.016800862 ubox
31 36 0.016529714 ubox
42 77 0.003940634 ubox
43 55 0.005022432 ubox
43 76 0.003977899 ubox
44 54 0.005139666 ubox
45 53 0.004936806 ubox
45 74 0.004050282 ubox
46 64 0.005422554 ubox
46 73 0.004052231 ubox
47 63 0.005458193 ubox
47 65 0.004102296 ubox
48 62 0.005462218 ubox
48 64 0.004452425 ubox
49 63 0.004517014 ubox
49 65 0.004382673 ubox
50 62 0.004514735 ubox
50 64 0.005995933 ubox
50 65 0.012263100 ubox
50 79 0.005104199 ubox
50 80 0.011666385 ubox
51 63 0.007124073 ubox
51 64 0.012828302 ubox
51 65 0.049925088 ubox
51 78 0.005457178 ubox
51 79 0.015056014 ubox
51 80 0.140987030 ubox
52 62 0.007326030 ubox
52 63 0.013867106 ubox
52 64 0.057179290 ubox
52 65 0.025674426 ubox
52 77 0.005046414 ubox
52 78 0.014658853 ubox
52 79 0.188980102 ubox
52 80 0.023228389 ubox
53 62 0.013667030 ubox
53 63 0.059944512 ubox
53 64 0.009591224 ubox
53 65 0.155099555 ubox
53 77 0.011859111 ubox
53 78 0.198337523 ubox
53 79 0.022931585 ubox
54 62 0.060179718 ubox
54 64 0.118078942 ubox
54 77 0.199024826 ubox
55 64 0.914257746 ubox
56 63 0.924494271 ubox
56 65 0.097775249 ubox
56 78 0.201520839 ubox
57 62 0.924424026 ubox
57 64 0.104841793 ubox
57 77 0.211224467 ubox
58 63 0.099869146 ubox
58 73 0.006789938 ubox
58 75 0.264661402 ubox
58 77 0.131567817 ubox
59 72 0.006463985 ubox
59 74 0.274593268 ubox
59 76 0.181935604 ubox
60 73 0.273550569 ubox
60 75 0.183710944 ubox
61 69 0.037939116 ubox
61 73 0.013151221 ubox
61 75 0.003745449 ubox
62 68 0.039663535 ubox
62 71 0.266283957 ubox
62 72 0.007516247 ubox
62 74 0.007919572 ubox
63 67 0.034519249 ubox
63 70 0.264208833 ubox
63 72 0.191339686 ubox
64 71 0.193978916 ubox
65 70 0.172080091 ubox
65 74 0.030768478 ubox
65 76 0.027419766 ubox
65 81 0.105405948 ubox
66 73 0.031024404 ubox
66 75 0.027830589 ubox
66 78 0.019628284 ubox
66 79 0.749394252 ubox
66 80 0.096117315 ubox
67 77 0.010802965 ubox
67 78 0.863079168 ubox
67 79 0.071730043 ubox
68 75 0.030926791 ubox
68 77 0.876822209 ubox
69 74 0.026178046 ubox
69 76 0.860004056 ubox
69 81 0.004472107 ubox
70 75 0.796009791 ubox
70 78 0.099295810 ubox
70 80 0.003536817 ubox
71 77 0.105978599 ubox
73 81 0.016536658 ubox
74 80 0.018299168 ubox
75 81 0.005005546 ubox
76 80 0.005159887 ubox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
