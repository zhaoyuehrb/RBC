%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALDH16A1)
} def

/sequence { (\
AUUCCCAUUAGCCCCGCCCCUUUGGGCUGGAACCGGAGGUGUCGCUCUUCGGACCUCAAGGUUCCCCUUAACACAGAGCGCCCCGCAGUCUUCGCGGAAAGCGUUCGGGGUAGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.020115271 ubox
1 111 0.008961513 ubox
2 7 0.021450745 ubox
2 11 0.004559841 ubox
2 110 0.008199619 ubox
2 113 0.009997785 ubox
2 114 0.005494501 ubox
3 10 0.016766254 ubox
3 109 0.007217142 ubox
3 110 0.026784379 ubox
3 112 0.012549565 ubox
3 113 0.005502676 ubox
3 114 0.020516337 ubox
4 108 0.007323791 ubox
4 109 0.036502501 ubox
4 110 0.012930894 ubox
4 113 0.026125282 ubox
4 114 0.184114721 ubox
5 107 0.007295689 ubox
5 108 0.036550143 ubox
5 109 0.013008094 ubox
5 113 0.185273943 ubox
5 114 0.344633700 ubox
6 107 0.036520698 ubox
6 108 0.012971896 ubox
6 113 0.346667147 ubox
7 111 0.024504033 ubox
8 110 0.007352004 ubox
8 113 0.132441071 ubox
8 114 0.178803769 ubox
9 29 0.007788420 ubox
9 112 0.229122391 ubox
9 113 0.222825588 ubox
10 28 0.032971468 ubox
10 111 0.180033817 ubox
11 27 0.034545277 ubox
11 111 0.825400784 ubox
11 115 0.496877757 ubox
12 26 0.033607579 ubox
12 109 0.090647564 ubox
12 110 0.857708025 ubox
12 114 0.488485675 ubox
13 25 0.032634166 ubox
13 26 0.008438028 ubox
13 30 0.004175002 ubox
13 108 0.090510738 ubox
13 109 0.857956079 ubox
13 110 0.020291265 ubox
13 113 0.478311332 ubox
13 114 0.118655766 ubox
14 24 0.031559051 ubox
14 25 0.011660936 ubox
14 29 0.009560725 ubox
14 30 0.015641870 ubox
14 107 0.090170618 ubox
14 108 0.858036039 ubox
14 109 0.026431336 ubox
14 110 0.024844657 ubox
14 113 0.151230985 ubox
14 114 0.029814827 ubox
15 24 0.014155075 ubox
15 29 0.016464734 ubox
15 107 0.857158820 ubox
15 108 0.026574282 ubox
15 109 0.024882097 ubox
15 113 0.030674736 ubox
15 116 0.003992174 ubox
16 23 0.012405193 ubox
16 27 0.863302343 ubox
16 28 0.010247345 ubox
16 106 0.011498898 ubox
16 111 0.492386672 ubox
16 115 0.004233370 ubox
17 25 0.004429948 ubox
17 26 0.864114696 ubox
17 109 0.016992203 ubox
17 110 0.500358036 ubox
17 114 0.004201303 ubox
18 24 0.005107819 ubox
18 25 0.863760733 ubox
18 26 0.031787830 ubox
18 108 0.017018133 ubox
18 109 0.500377781 ubox
18 110 0.008072606 ubox
18 113 0.003874299 ubox
19 24 0.859546575 ubox
19 25 0.040158192 ubox
19 26 0.005581832 ubox
19 107 0.016996033 ubox
19 108 0.500364975 ubox
19 109 0.008767479 ubox
19 110 0.003230164 ubox
20 24 0.046651137 ubox
20 25 0.005899629 ubox
20 107 0.499740265 ubox
20 108 0.009283341 ubox
20 109 0.003245621 ubox
21 71 0.165453880 ubox
21 75 0.015604107 ubox
21 107 0.009070311 ubox
22 70 0.183984665 ubox
22 71 0.260379625 ubox
22 75 0.006187439 ubox
22 76 0.003561283 ubox
23 70 0.303465790 ubox
23 73 0.034557686 ubox
23 75 0.018334749 ubox
24 66 0.007122005 ubox
24 67 0.139980907 ubox
24 68 0.343659725 ubox
24 69 0.297054600 ubox
24 72 0.037414633 ubox
24 74 0.018799403 ubox
25 65 0.006223779 ubox
25 66 0.140031562 ubox
25 67 0.377879709 ubox
25 68 0.287087628 ubox
25 69 0.014638128 ubox
26 64 0.005121047 ubox
26 65 0.099247640 ubox
26 66 0.376153820 ubox
26 67 0.286594162 ubox
26 68 0.014578105 ubox
28 70 0.024785991 ubox
28 73 0.009730087 ubox
28 75 0.010634087 ubox
29 55 0.010007388 ubox
29 56 0.003520943 ubox
29 64 0.010319498 ubox
29 65 0.989446052 ubox
29 66 0.057668865 ubox
29 67 0.016535776 ubox
29 69 0.004091636 ubox
29 72 0.005423810 ubox
29 74 0.005674564 ubox
30 54 0.010013340 ubox
30 55 0.004358662 ubox
30 57 0.003444543 ubox
30 63 0.007303540 ubox
30 64 0.998716753 ubox
30 65 0.041182297 ubox
30 66 0.013920947 ubox
31 56 0.003434425 ubox
31 62 0.005323175 ubox
31 63 0.999430703 ubox
32 62 0.999382126 ubox
33 52 0.014653981 ubox
33 61 0.999865821 ubox
34 51 0.014760404 ubox
34 60 0.999410038 ubox
35 50 0.014822069 ubox
35 57 0.012959483 ubox
36 49 0.014774069 ubox
36 56 0.005803250 ubox
36 57 0.996882347 ubox
37 48 0.014777782 ubox
37 56 0.998445017 ubox
38 47 0.014746731 ubox
38 55 0.998434988 ubox
38 56 0.042108264 ubox
38 57 0.018510803 ubox
39 45 0.008353429 ubox
39 46 0.009887078 ubox
39 54 0.995753181 ubox
39 55 0.048705106 ubox
39 56 0.016904285 ubox
40 44 0.007825953 ubox
40 51 0.027260919 ubox
40 53 0.981660036 ubox
41 50 0.061802470 ubox
41 54 0.089821574 ubox
42 52 0.849683912 ubox
42 53 0.148018188 ubox
43 51 0.942642192 ubox
43 52 0.182048688 ubox
44 50 0.914836491 ubox
45 52 0.045252045 ubox
46 51 0.041151844 ubox
46 52 0.013603607 ubox
46 53 0.019636028 ubox
47 51 0.014536161 ubox
47 52 0.025826489 ubox
53 62 0.005689504 ubox
53 111 0.005037539 ubox
54 61 0.006064344 ubox
54 110 0.005194776 ubox
55 60 0.006048476 ubox
55 109 0.005196062 ubox
56 108 0.005186651 ubox
57 107 0.005163144 ubox
58 69 0.012162572 ubox
59 68 0.013456840 ubox
60 67 0.013614566 ubox
61 66 0.013512615 ubox
64 110 0.014508453 ubox
65 109 0.015517488 ubox
65 110 0.014654443 ubox
66 108 0.017844718 ubox
66 109 0.019903132 ubox
66 110 0.016352566 ubox
66 114 0.013078114 ubox
67 76 0.031084126 ubox
67 78 0.009532514 ubox
67 107 0.017883111 ubox
67 108 0.020051430 ubox
67 109 0.016434932 ubox
67 113 0.013233778 ubox
67 114 0.005981459 ubox
68 75 0.047454805 ubox
68 76 0.003980405 ubox
68 77 0.010939592 ubox
68 107 0.019830282 ubox
68 108 0.016206158 ubox
68 112 0.012462781 ubox
68 113 0.006075546 ubox
69 75 0.036314572 ubox
69 76 0.011175299 ubox
69 107 0.015691896 ubox
69 112 0.008334495 ubox
70 111 0.007073995 ubox
71 111 0.026634392 ubox
72 110 0.028095335 ubox
73 111 0.003811570 ubox
74 110 0.003973366 ubox
75 105 0.003613239 ubox
76 104 0.003857521 ubox
76 105 0.004390754 ubox
76 106 0.997315499 ubox
77 104 0.004118446 ubox
77 105 0.998586848 ubox
78 102 0.007417441 ubox
78 104 0.999375148 ubox
79 101 0.007431114 ubox
79 103 0.999930230 ubox
80 102 0.999937175 ubox
80 111 0.003954231 ubox
81 101 0.999487776 ubox
81 110 0.004079801 ubox
82 97 0.032630320 ubox
82 109 0.004081015 ubox
83 96 0.024048413 ubox
83 97 0.998896735 ubox
83 108 0.004081065 ubox
84 94 0.009312044 ubox
84 96 0.999667887 ubox
84 107 0.004077642 ubox
85 93 0.009085411 ubox
85 95 0.999903823 ubox
85 106 0.004039714 ubox
86 94 0.999373001 ubox
88 95 0.003512828 ubox
89 94 0.003602556 ubox
93 103 0.003756883 ubox
94 102 0.003788331 ubox
95 101 0.003787823 ubox
11 111 0.9500000 lbox
12 110 0.9500000 lbox
13 109 0.9500000 lbox
14 108 0.9500000 lbox
15 107 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
29 65 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
36 57 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
76 106 0.9500000 lbox
77 105 0.9500000 lbox
78 104 0.9500000 lbox
79 103 0.9500000 lbox
80 102 0.9500000 lbox
81 101 0.9500000 lbox
83 97 0.9500000 lbox
84 96 0.9500000 lbox
85 95 0.9500000 lbox
86 94 0.9500000 lbox
showpage
end
%%EOF
