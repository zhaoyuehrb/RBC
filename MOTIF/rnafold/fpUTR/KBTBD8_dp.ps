%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KBTBD8)
} def

/sequence { (\
AAGCGAAAUGACAUUUCCUUUUUAAAUAGCUGGAGUCGGGGCCCCAUCGAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.003251782 ubox
1 20 0.446148974 ubox
1 21 0.082880975 ubox
1 22 0.023434655 ubox
1 23 0.032900649 ubox
2 14 0.004339408 ubox
2 15 0.003169084 ubox
2 19 0.570086552 ubox
2 20 0.101882028 ubox
2 21 0.025874997 ubox
2 22 0.033601387 ubox
2 23 0.008801893 ubox
2 31 0.115174007 ubox
3 18 0.584456926 ubox
3 19 0.101573031 ubox
3 20 0.023714734 ubox
3 21 0.032286821 ubox
3 22 0.007019261 ubox
3 30 0.123963740 ubox
3 36 0.004363053 ubox
3 42 0.653428552 ubox
4 10 0.023908697 ubox
4 29 0.124100492 ubox
4 35 0.004839929 ubox
4 38 0.039487796 ubox
4 41 0.654807526 ubox
4 49 0.223248364 ubox
5 9 0.015080276 ubox
5 15 0.009405267 ubox
5 16 0.052404847 ubox
5 17 0.633285911 ubox
5 20 0.005541866 ubox
5 21 0.011226925 ubox
5 22 0.072962931 ubox
5 23 0.050140411 ubox
5 37 0.040946465 ubox
5 48 0.226003945 ubox
6 14 0.009370049 ubox
6 15 0.055689973 ubox
6 16 0.632791731 ubox
6 19 0.005624404 ubox
6 20 0.011663527 ubox
6 21 0.076683545 ubox
6 22 0.051534791 ubox
6 23 0.013033542 ubox
6 36 0.040392122 ubox
6 47 0.212331861 ubox
7 14 0.050478835 ubox
7 15 0.629880258 ubox
7 16 0.025161747 ubox
7 19 0.010942367 ubox
7 20 0.077679637 ubox
7 21 0.051591654 ubox
7 22 0.014297428 ubox
7 23 0.009530233 ubox
8 14 0.612637394 ubox
8 15 0.032359863 ubox
8 19 0.075242037 ubox
8 20 0.050468610 ubox
8 21 0.014112880 ubox
8 22 0.009819910 ubox
8 27 0.013293250 ubox
8 36 0.010270437 ubox
8 47 0.043377656 ubox
9 13 0.543519653 ubox
9 24 0.040259325 ubox
9 26 0.014287192 ubox
9 35 0.011606376 ubox
9 38 0.661762338 ubox
9 46 0.078928980 ubox
9 49 0.019692527 ubox
10 16 0.007235149 ubox
10 17 0.091826272 ubox
10 20 0.009516175 ubox
10 21 0.017645093 ubox
10 22 0.015240721 ubox
10 23 0.042632158 ubox
10 37 0.722212578 ubox
10 45 0.081264383 ubox
10 48 0.031870206 ubox
11 15 0.007175211 ubox
11 16 0.082875317 ubox
11 19 0.009697143 ubox
11 20 0.017833136 ubox
11 21 0.014592844 ubox
11 22 0.040050684 ubox
11 36 0.722085346 ubox
11 47 0.030985031 ubox
12 32 0.012810107 ubox
12 35 0.710661069 ubox
13 27 0.016320813 ubox
13 31 0.012264335 ubox
13 36 0.026602757 ubox
14 25 0.009111866 ubox
14 26 0.017283503 ubox
14 29 0.004890820 ubox
14 33 0.146710399 ubox
14 34 0.089093078 ubox
14 35 0.030879292 ubox
14 39 0.010879212 ubox
14 40 0.007906357 ubox
14 41 0.014475717 ubox
14 52 0.011524351 ubox
15 24 0.010290916 ubox
15 25 0.017385154 ubox
15 26 0.005987368 ubox
15 28 0.005165437 ubox
15 29 0.005049665 ubox
15 32 0.140439448 ubox
15 33 0.081232915 ubox
15 34 0.079879517 ubox
15 35 0.174972182 ubox
15 38 0.008250449 ubox
15 39 0.005928390 ubox
15 40 0.014745629 ubox
15 41 0.066317148 ubox
15 51 0.012378458 ubox
15 53 0.007329624 ubox
16 24 0.016187748 ubox
16 25 0.006573983 ubox
16 28 0.005045004 ubox
16 32 0.070965470 ubox
16 33 0.071521188 ubox
16 34 0.701563606 ubox
16 38 0.003540094 ubox
16 39 0.013883798 ubox
16 40 0.076761731 ubox
16 41 0.053308250 ubox
16 50 0.012481920 ubox
16 52 0.009939474 ubox
17 32 0.070968889 ubox
17 33 0.710153126 ubox
17 38 0.013728500 ubox
17 39 0.079761040 ubox
17 40 0.062484139 ubox
17 41 0.020410532 ubox
17 49 0.012445273 ubox
17 51 0.008941000 ubox
18 29 0.200720289 ubox
18 32 0.709726035 ubox
18 33 0.013948846 ubox
18 35 0.032179692 ubox
18 38 0.079733765 ubox
18 39 0.062597292 ubox
18 40 0.020691842 ubox
18 51 0.044792544 ubox
19 25 0.014778076 ubox
19 26 0.025093943 ubox
19 28 0.203448368 ubox
19 29 0.054625909 ubox
19 32 0.014657000 ubox
19 34 0.032900460 ubox
19 35 0.011385368 ubox
19 38 0.059922582 ubox
19 39 0.020324744 ubox
19 50 0.044945723 ubox
19 51 0.008020288 ubox
19 52 0.036809502 ubox
19 53 0.025756920 ubox
20 24 0.013952280 ubox
20 25 0.024334929 ubox
20 26 0.025816517 ubox
20 28 0.066962903 ubox
20 29 0.206266430 ubox
20 32 0.003210225 ubox
20 33 0.032711093 ubox
20 34 0.016926502 ubox
20 35 0.096291156 ubox
20 38 0.014507700 ubox
20 49 0.042954978 ubox
20 50 0.011695728 ubox
20 51 0.042507956 ubox
20 52 0.050289138 ubox
20 53 0.032656584 ubox
21 25 0.024428753 ubox
21 28 0.207867400 ubox
21 29 0.278205995 ubox
21 32 0.030845117 ubox
21 33 0.017171398 ubox
21 34 0.111270120 ubox
21 35 0.017983904 ubox
21 49 0.012023280 ubox
21 50 0.045985206 ubox
21 51 0.054499260 ubox
21 52 0.054099918 ubox
21 53 0.011552650 ubox
22 28 0.287448566 ubox
22 29 0.066674144 ubox
22 32 0.016457549 ubox
22 33 0.112348030 ubox
22 34 0.019690898 ubox
22 35 0.005251642 ubox
22 49 0.044631535 ubox
22 50 0.055372146 ubox
22 51 0.055799875 ubox
22 52 0.015535591 ubox
22 53 0.010262930 ubox
23 28 0.069251839 ubox
23 32 0.112552035 ubox
23 33 0.019017244 ubox
23 34 0.005398980 ubox
23 49 0.053379935 ubox
23 50 0.055510845 ubox
23 51 0.013823727 ubox
23 52 0.013686634 ubox
24 31 0.107619537 ubox
26 36 0.003318046 ubox
26 47 0.050443847 ubox
27 35 0.003664461 ubox
27 46 0.048767477 ubox
29 36 0.015920484 ubox
29 42 0.171751731 ubox
30 35 0.017634432 ubox
30 39 0.064844805 ubox
30 40 0.012345141 ubox
30 41 0.171949836 ubox
30 51 0.550341275 ubox
31 38 0.065659947 ubox
31 39 0.013039204 ubox
31 40 0.171077515 ubox
31 46 0.221312231 ubox
31 49 0.011578993 ubox
31 50 0.550759552 ubox
32 37 0.067705023 ubox
32 43 0.030448239 ubox
32 44 0.063200136 ubox
32 45 0.254333533 ubox
32 48 0.015909057 ubox
33 42 0.030558336 ubox
33 43 0.064158601 ubox
33 44 0.253995498 ubox
33 47 0.012340269 ubox
33 48 0.553655524 ubox
34 47 0.541785536 ubox
35 42 0.257970603 ubox
35 47 0.098070914 ubox
36 41 0.245726501 ubox
36 46 0.182357011 ubox
36 50 0.181894125 ubox
36 52 0.028079578 ubox
37 49 0.195138988 ubox
37 51 0.030034338 ubox
38 44 0.302898928 ubox
38 45 0.511859176 ubox
38 48 0.194638769 ubox
39 43 0.298636281 ubox
39 44 0.511325627 ubox
39 45 0.132818678 ubox
39 47 0.176395609 ubox
39 48 0.057870884 ubox
40 44 0.131617733 ubox
40 47 0.055426228 ubox
40 48 0.031030486 ubox
41 47 0.025371415 ubox
3 42 0.9500000 lbox
4 41 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
showpage
end
%%EOF
