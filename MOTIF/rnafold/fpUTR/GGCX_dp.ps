%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GGCX)
} def

/sequence { (\
GCACAGCCGCUGACGCGUCGGGAGGCGGAGCCUAGGGAAGCAAAUUCUCCUGGCGGCCUCCGUUCAGACGCGGCAGCUGUGACCCACCUGCCUCCUCCGCAGAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.012409741 ubox
1 80 0.010104880 ubox
1 91 0.006016009 ubox
1 105 0.116280094 ubox
2 6 0.012366521 ubox
2 79 0.010439069 ubox
2 81 0.988364657 ubox
2 90 0.005941873 ubox
2 104 0.107317731 ubox
3 78 0.010309714 ubox
3 80 0.994527206 ubox
3 89 0.005393345 ubox
4 79 0.995363574 ubox
4 81 0.037597497 ubox
5 78 0.994603377 ubox
5 80 0.032201172 ubox
6 77 0.974589193 ubox
6 80 0.058787197 ubox
6 105 0.026997645 ubox
7 76 0.968603246 ubox
7 79 0.067113705 ubox
7 104 0.026958209 ubox
8 79 0.009885391 ubox
9 74 0.943568710 ubox
9 77 0.223587165 ubox
9 105 0.007191915 ubox
10 73 0.943854034 ubox
10 76 0.246860023 ubox
10 104 0.007197128 ubox
11 72 0.455537294 ubox
11 75 0.317376099 ubox
11 103 0.007084485 ubox
12 71 0.148877652 ubox
12 74 0.309779641 ubox
14 70 0.070273044 ubox
14 72 0.885698143 ubox
15 69 0.067363650 ubox
15 71 0.988687696 ubox
15 100 0.007105147 ubox
16 70 0.996987155 ubox
16 99 0.007127391 ubox
17 69 0.997189626 ubox
17 98 0.007080367 ubox
18 68 0.996920403 ubox
19 62 0.052168200 ubox
19 67 0.991062337 ubox
20 61 0.072906149 ubox
20 64 0.105207991 ubox
20 65 0.566986077 ubox
20 96 0.006884983 ubox
21 60 0.054268702 ubox
21 61 0.825281660 ubox
21 63 0.015399127 ubox
21 64 0.213514900 ubox
21 65 0.256527473 ubox
21 95 0.007176961 ubox
22 59 0.023497845 ubox
22 60 0.836485959 ubox
22 63 0.189841639 ubox
22 64 0.226424043 ubox
22 65 0.389107733 ubox
22 94 0.007183300 ubox
23 59 0.837987187 ubox
23 63 0.177465015 ubox
23 64 0.370633492 ubox
23 93 0.007186993 ubox
24 58 0.838504629 ubox
24 60 0.003254532 ubox
24 61 0.260607796 ubox
24 63 0.261117030 ubox
24 64 0.225262009 ubox
24 65 0.012194692 ubox
24 92 0.007187497 ubox
25 57 0.838504664 ubox
25 59 0.003330596 ubox
25 60 0.260704181 ubox
25 63 0.389422052 ubox
25 64 0.009429562 ubox
25 91 0.007187353 ubox
26 55 0.024165418 ubox
26 56 0.836208727 ubox
26 62 0.477497169 ubox
26 90 0.007186958 ubox
27 54 0.022143940 ubox
27 58 0.260262752 ubox
27 59 0.014865869 ubox
27 61 0.478253725 ubox
27 89 0.007114240 ubox
28 57 0.260040310 ubox
28 58 0.015127917 ubox
28 60 0.478256763 ubox
28 88 0.007094991 ubox
29 59 0.477276798 ubox
30 54 0.876310457 ubox
30 57 0.326331026 ubox
30 58 0.339272051 ubox
31 53 0.874631634 ubox
31 56 0.460092756 ubox
32 52 0.869692372 ubox
32 53 0.246784641 ubox
32 55 0.415163466 ubox
32 56 0.023645566 ubox
33 52 0.435309307 ubox
33 55 0.020500940 ubox
34 51 0.757969712 ubox
35 48 0.009242938 ubox
35 49 0.628382281 ubox
35 50 0.766169374 ubox
35 51 0.123452826 ubox
36 47 0.014290432 ubox
36 48 0.632831220 ubox
36 49 0.763170199 ubox
36 50 0.126212262 ubox
36 51 0.006541308 ubox
37 46 0.017277576 ubox
37 47 0.982790019 ubox
37 48 0.119983323 ubox
37 49 0.126577798 ubox
37 50 0.006532931 ubox
38 45 0.022359151 ubox
38 46 0.983707807 ubox
38 48 0.111901130 ubox
39 45 0.962315974 ubox
39 46 0.070878680 ubox
39 48 0.057751019 ubox
40 45 0.053810532 ubox
40 47 0.079351308 ubox
55 78 0.006749206 ubox
56 77 0.007059600 ubox
57 76 0.006928654 ubox
60 73 0.007075007 ubox
61 72 0.007079195 ubox
62 69 0.003166004 ubox
62 71 0.007098584 ubox
63 70 0.006848887 ubox
72 92 0.005177508 ubox
73 91 0.005528982 ubox
74 90 0.005531490 ubox
75 89 0.005529528 ubox
76 88 0.005493826 ubox
78 86 0.009762152 ubox
78 101 0.003280094 ubox
79 85 0.010819531 ubox
79 87 0.050391524 ubox
79 100 0.003483105 ubox
80 86 0.050813319 ubox
80 99 0.003480754 ubox
81 85 0.050882173 ubox
81 98 0.003433363 ubox
81 105 0.004573613 ubox
88 102 0.981551283 ubox
88 104 0.010412507 ubox
89 101 0.984535356 ubox
89 103 0.007866572 ubox
89 106 0.115301622 ubox
90 100 0.985318685 ubox
90 105 0.151330223 ubox
91 99 0.984296553 ubox
91 104 0.125886412 ubox
92 102 0.084161461 ubox
92 104 0.092393630 ubox
93 101 0.081207370 ubox
93 103 0.124734145 ubox
94 102 0.122800569 ubox
95 102 0.036956581 ubox
95 104 0.053611357 ubox
96 101 0.039460599 ubox
96 103 0.056556936 ubox
97 102 0.056452117 ubox
99 105 0.021757025 ubox
100 104 0.021621514 ubox
2 81 0.9500000 lbox
3 80 0.9500000 lbox
4 79 0.9500000 lbox
5 78 0.9500000 lbox
6 77 0.9500000 lbox
7 76 0.9500000 lbox
9 74 0.9500000 lbox
10 73 0.9500000 lbox
14 72 0.9500000 lbox
15 71 0.9500000 lbox
16 70 0.9500000 lbox
17 69 0.9500000 lbox
18 68 0.9500000 lbox
19 67 0.9500000 lbox
21 61 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
88 102 0.9500000 lbox
89 101 0.9500000 lbox
90 100 0.9500000 lbox
91 99 0.9500000 lbox
showpage
end
%%EOF
