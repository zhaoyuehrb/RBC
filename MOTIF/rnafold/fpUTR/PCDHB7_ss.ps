%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAAGGAUGUUACAGAUUCCAGAGCAAAGAGGCAAUCUGAAGAGAAAAGCAUAGGAAAGGAAACAGUGGUAAUAGGAAUUGGGGUAAAAUGAGGAUCCUUCCCCACAAACAUUGCUAUUAUUCAGCUCAUUUCAAAGGAUUCCGCUGCUGCCAUUUGUGAGAGCCGCUGGAGGCUGAGUGAAAGUCAUUUUGAAAGACUGAUCCAAAGAAGA\
) } def
/len { sequence length } bind def

/coor [
[78.59606171 245.20730591]
[66.84752655 235.62879944]
[59.08621597 222.60812378]
[56.24935913 207.71759033]
[58.67950821 192.75529480]
[66.08321381 179.52801514]
[77.56645203 169.63301086]
[91.74254608 164.26515198]
[91.52439117 149.26673889]
[91.30622864 134.26832581]
[91.08807373 119.26990509]
[84.22323608 116.24930573]
[78.18180847 129.97888184]
[64.45233917 123.93721771]
[70.49356842 110.20810699]
[63.62873077 107.18750763]
[52.42335129 117.15944672]
[41.21797562 127.13137817]
[30.01259995 137.10331726]
[18.80722427 147.07525635]
[7.60184860 157.04719543]
[-3.53071380 167.10035706]
[-14.58987331 177.23420715]
[-11.18731117 192.21145630]
[-15.74455929 206.87867737]
[-27.03574181 217.29043579]
[-42.02358627 220.64604187]
[-56.67644119 216.04283142]
[-67.05275726 204.71907043]
[-70.36135864 189.72077942]
[-65.71225739 175.08242798]
[-54.35602188 164.74165344]
[-39.34743500 161.48008728]
[-24.72372627 166.17504883]
[-13.66456699 156.04119873]
[-10.85777473 149.20732117]
[-2.37008929 145.84181213]
[8.83528709 135.86988831]
[20.04066277 125.89794159]
[31.24603844 115.92600250]
[42.45141602 105.95406342]
[53.65679169 95.98213196]
[39.04234695 99.36118317]
[24.42790222 102.74024200]
[9.81345844 106.11929321]
[-4.80098629 109.49835205]
[-19.41543007 112.87740326]
[-34.38087463 111.85983276]
[-48.68057632 107.33009338]
[-61.50239944 99.54544067]
[-72.11814880 88.94799805]
[-79.92491913 76.13962555]
[-84.47933197 61.84776306]
[-85.52272797 46.88409424]
[-82.99584198 32.09846497]
[-77.04219818 18.33060074]
[-67.99990845 6.36242962]
[-56.38253784 -3.12633181]
[-42.84986115 -9.59678268]
[-28.17045975 -12.68144321]
[-13.17802429 -12.20512295]
[1.27596867 -8.19487476]
[14.37062454 -0.87845570]
[25.36224937 9.32860947]
[33.62659073 21.84662247]
[38.69548798 35.96990967]
[49.36016083 46.51811981]
[60.02483368 57.06632996]
[70.68950653 67.61454010]
[81.35417938 78.16275024]
[92.01885223 88.71096802]
[87.71680450 74.34112549]
[83.41475677 59.97127914]
[79.11270905 45.60143661]
[74.81065369 31.23159409]
[70.50860596 16.86175156]
[66.20655823 2.49190927]
[61.90451050 -11.87793350]
[50.53432465 -22.87927055]
[54.29635620 -37.29094696]
[49.99430466 -51.66078949]
[45.69225693 -66.03063202]
[40.87066650 -80.23458099]
[35.53590393 -94.25386810]
[30.20114326 -108.27315521]
[24.86638260 -122.29243469]
[19.53162003 -136.31172180]
[4.37524748 -136.06643677]
[-9.94996357 -141.02264404]
[-21.71417427 -150.58189392]
[-29.49679947 -163.58984375]
[-32.35804749 -178.47570801]
[-29.95240974 -193.44195557]
[-22.57037926 -206.68135071]
[-11.10337162 -216.59515381]
[3.06391644 -221.98623657]
[18.22071648 -222.20359802]
[32.53676987 -217.22097778]
[44.28334427 -207.64007568]
[52.04198074 -194.61781311]
[54.87579346 -179.72669983]
[52.44257736 -164.76490784]
[45.03616333 -151.53913879]
[33.55090332 -141.64648438]
[38.88566589 -127.62719727]
[44.22042847 -113.60791016]
[49.55518723 -99.58863068]
[54.88994980 -85.56934357]
[63.30059052 -97.98954010]
[78.24264526 -99.30673981]
[88.69646454 -88.54952240]
[86.95243835 -73.65125275]
[74.29676819 -65.59928894]
[60.06209946 -70.33267975]
[64.36415100 -55.96283722]
[68.66619873 -41.59299469]
[79.72867584 -31.61948586]
[76.27435303 -16.17998123]
[80.57640076 -1.81013930]
[84.87844849 12.55970383]
[89.18049622 26.92954636]
[93.48255157 41.29938889]
[97.78459930 55.66923141]
[102.08664703 70.03907776]
[106.38869476 84.40892029]
[118.08695984 93.79776764]
[133.04731750 94.88764191]
[148.00767517 95.97750854]
[156.79019165 93.48056793]
[163.17716980 97.19357300]
[178.12008667 98.50091553]
[186.93800354 96.13196564]
[193.27029419 99.93747711]
[208.19262695 101.46199799]
[223.11494446 102.98652649]
[238.03727722 104.51105499]
[252.95959473 106.03557587]
[267.88192749 107.56010437]
[282.80426025 109.08463287]
[297.72659302 110.60916138]
[312.65960693 112.02512360]
[327.60250854 113.33246613]
[342.54544067 114.63980103]
[357.48837280 115.94713593]
[373.99444580 107.78044891]
[387.96478271 118.40366364]
[402.92514038 119.49353027]
[417.88549805 120.58339691]
[432.84585571 121.67327118]
[441.95330811 111.75320435]
[454.92172241 108.92979431]
[466.97033691 114.01462555]
[473.78869629 124.94544983]
[488.73162842 126.25278473]
[503.67456055 127.56011963]
[518.09655762 121.05503082]
[530.10107422 129.87214661]
[545.04394531 131.17947388]
[559.46600342 124.67438507]
[571.47045898 133.49150085]
[586.41339111 134.79882812]
[601.35632324 136.10617065]
[614.52081299 126.93686676]
[629.85583496 131.65022278]
[635.59771729 146.63055420]
[627.34173584 160.38623047]
[611.42120361 162.36508179]
[600.04895020 151.04908752]
[585.10607910 149.74176025]
[570.16314697 148.43441772]
[556.80993652 155.03302002]
[543.73663330 146.12239075]
[528.79370117 144.81506348]
[515.44049072 151.41366577]
[502.36721802 142.50303650]
[487.42428589 141.19570923]
[472.48138428 139.88836670]
[460.06985474 151.23957825]
[442.95190430 150.07733154]
[431.75598145 136.63362122]
[416.79562378 135.54374695]
[401.83526611 134.45388794]
[386.87490845 133.36401367]
[377.52276611 141.03259277]
[365.05239868 140.24943542]
[356.18103027 130.89006042]
[341.23809814 129.58271790]
[326.29519653 128.27539062]
[311.35226440 126.96804810]
[304.41757202 129.51556396]
[296.20205688 125.53148651]
[281.27972412 124.00695801]
[266.35739136 122.48242950]
[251.43507385 120.95790863]
[236.51275635 119.43338013]
[221.59042358 117.90885162]
[206.66809082 116.38433075]
[191.74577332 114.85980225]
[176.81275940 113.44383240]
[161.86982727 112.13649750]
[146.91780090 110.93785858]
[131.95744324 109.84799194]
[116.99709320 108.75812531]
[106.08648682 119.05175018]
[106.30464172 134.05015564]
[106.52280426 149.04856873]
[106.74095917 164.04698181]
[121.06718445 169.00027466]
[132.83335876 178.55711365]
[140.61863708 191.56346130]
[143.48294067 206.44874573]
[141.08036804 221.41548157]
[133.70104980 234.65638733]
[122.23606873 244.57254028]
[108.06988525 249.96652222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[16 42]
[17 41]
[18 40]
[19 39]
[20 38]
[21 37]
[22 35]
[23 34]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[80 116]
[81 115]
[82 114]
[83 108]
[84 107]
[85 106]
[86 105]
[87 104]
[126 203]
[127 202]
[128 201]
[130 200]
[131 199]
[133 198]
[134 197]
[135 196]
[136 195]
[137 194]
[138 193]
[139 192]
[140 191]
[141 189]
[142 188]
[143 187]
[144 186]
[146 183]
[147 182]
[148 181]
[149 180]
[153 177]
[154 176]
[155 175]
[157 173]
[158 172]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
