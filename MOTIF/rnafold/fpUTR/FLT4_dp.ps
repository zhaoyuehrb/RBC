%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FLT4)
} def

/sequence { (\
AGGCCAGCCGGCGCCCGCGCGGACACUUUCAGCCCCGAGCCGCGGCCGCUCGGGUCGGACCCACGCGCAGCGGCCGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.023056382 ubox
1 28 0.024862608 ubox
1 29 0.005996154 ubox
2 9 0.017294156 ubox
2 15 0.024508120 ubox
2 16 0.005318148 ubox
2 26 0.026453971 ubox
2 27 0.035076961 ubox
2 28 0.008032177 ubox
2 29 0.003332890 ubox
2 30 0.012729178 ubox
2 34 0.204520412 ubox
2 41 0.008722421 ubox
2 47 0.005055647 ubox
2 75 0.053142805 ubox
3 8 0.017808027 ubox
3 12 0.069815755 ubox
3 14 0.024418715 ubox
3 15 0.004022376 ubox
3 18 0.009289686 ubox
3 20 0.004273244 ubox
3 26 0.036087114 ubox
3 27 0.007662120 ubox
3 28 0.003599357 ubox
3 29 0.011689093 ubox
3 33 0.204993394 ubox
3 40 0.008671099 ubox
3 46 0.005061994 ubox
3 74 0.053178351 ubox
4 11 0.070210568 ubox
4 13 0.024280219 ubox
4 17 0.009288100 ubox
4 19 0.004259772 ubox
4 22 0.073056010 ubox
4 32 0.204144405 ubox
4 39 0.008606491 ubox
4 45 0.005062090 ubox
4 73 0.053173224 ubox
4 77 0.092127438 ubox
5 10 0.070354621 ubox
5 21 0.075071980 ubox
5 44 0.005046017 ubox
5 72 0.052848639 ubox
5 76 0.092276139 ubox
6 27 0.091134257 ubox
6 28 0.046406920 ubox
6 29 0.031668408 ubox
7 14 0.012032431 ubox
7 18 0.013701231 ubox
7 20 0.104949121 ubox
7 26 0.095943897 ubox
7 27 0.044221424 ubox
7 28 0.033745903 ubox
7 40 0.003628066 ubox
7 43 0.005389985 ubox
7 68 0.005927942 ubox
7 71 0.050545648 ubox
7 74 0.092283653 ubox
8 13 0.012016924 ubox
8 17 0.010173300 ubox
8 19 0.104980646 ubox
8 22 0.194952098 ubox
8 39 0.003641001 ubox
8 42 0.003855523 ubox
8 53 0.004230239 ubox
8 67 0.005909533 ubox
8 70 0.050530880 ubox
8 73 0.092321918 ubox
8 77 0.961638094 ubox
9 17 0.105293610 ubox
9 21 0.195089814 ubox
9 37 0.005550023 ubox
9 42 0.009808595 ubox
9 52 0.004496387 ubox
9 65 0.005491573 ubox
9 72 0.091981393 ubox
9 76 0.964773971 ubox
10 16 0.106772157 ubox
10 18 0.003268544 ubox
10 20 0.184428761 ubox
10 27 0.009938583 ubox
10 34 0.008984444 ubox
10 36 0.005567496 ubox
10 41 0.011175987 ubox
10 50 0.005218079 ubox
10 51 0.004892723 ubox
10 64 0.005095416 ubox
10 71 0.080132873 ubox
10 75 0.964949042 ubox
11 15 0.105054386 ubox
11 18 0.173823833 ubox
11 20 0.065469715 ubox
11 26 0.010273239 ubox
11 33 0.009000473 ubox
11 35 0.005530685 ubox
11 40 0.011175101 ubox
11 49 0.009108475 ubox
11 68 0.048661594 ubox
11 71 0.043543883 ubox
11 74 0.964536981 ubox
12 17 0.173711550 ubox
12 19 0.090013597 ubox
12 21 0.039990742 ubox
12 32 0.008910086 ubox
12 39 0.011164232 ubox
12 48 0.009134242 ubox
12 67 0.048455899 ubox
12 70 0.060878652 ubox
12 72 0.651343327 ubox
12 73 0.710408611 ubox
12 76 0.003815798 ubox
13 18 0.087877887 ubox
13 20 0.044786971 ubox
13 33 0.007573682 ubox
13 40 0.011091445 ubox
13 41 0.003316177 ubox
13 43 0.008911779 ubox
13 46 0.004277935 ubox
13 47 0.009077818 ubox
13 55 0.004003567 ubox
13 66 0.047198513 ubox
13 68 0.059042216 ubox
13 71 0.921082301 ubox
13 74 0.035718490 ubox
13 75 0.009383322 ubox
14 19 0.044682596 ubox
14 22 0.015279869 ubox
14 32 0.007570929 ubox
14 39 0.011171736 ubox
14 42 0.009276960 ubox
14 45 0.004178339 ubox
14 54 0.005924874 ubox
14 65 0.046630038 ubox
14 67 0.053855697 ubox
14 70 0.921477022 ubox
14 73 0.037203954 ubox
15 21 0.015295542 ubox
15 22 0.030621961 ubox
15 44 0.003843646 ubox
15 45 0.014748729 ubox
15 53 0.006565135 ubox
15 58 0.027833968 ubox
15 72 0.038652419 ubox
15 73 0.041293324 ubox
15 77 0.006416368 ubox
16 21 0.030678656 ubox
16 37 0.012695718 ubox
16 42 0.007223358 ubox
16 44 0.014953787 ubox
16 52 0.006607281 ubox
16 57 0.027844429 ubox
16 65 0.004777169 ubox
16 67 0.296322937 ubox
16 72 0.059668058 ubox
16 76 0.006402994 ubox
17 33 0.036301743 ubox
17 36 0.012653253 ubox
17 40 0.022483538 ubox
17 41 0.005446242 ubox
17 43 0.015275038 ubox
17 51 0.006847879 ubox
17 56 0.025808726 ubox
17 64 0.006156831 ubox
17 66 0.303087865 ubox
17 68 0.918494216 ubox
17 71 0.060004157 ubox
17 75 0.004522206 ubox
18 32 0.036389613 ubox
18 37 0.003679771 ubox
18 39 0.023048412 ubox
18 42 0.015284437 ubox
18 44 0.006544606 ubox
18 54 0.004727887 ubox
18 65 0.303170044 ubox
18 67 0.919644518 ubox
18 70 0.059915889 ubox
19 33 0.052532210 ubox
19 36 0.003751957 ubox
19 40 0.003963941 ubox
19 41 0.014797642 ubox
19 43 0.009916721 ubox
19 49 0.007065711 ubox
19 64 0.303173964 ubox
19 66 0.919700483 ubox
19 68 0.059692593 ubox
20 32 0.052550459 ubox
20 37 0.027273984 ubox
20 39 0.005122133 ubox
20 42 0.010068597 ubox
20 48 0.007070011 ubox
20 57 0.005546318 ubox
20 65 0.919679614 ubox
20 67 0.059884805 ubox
21 27 0.009440985 ubox
21 28 0.004604167 ubox
21 29 0.008226124 ubox
21 30 0.064063019 ubox
21 34 0.015722103 ubox
21 35 0.005130660 ubox
21 36 0.027640942 ubox
21 41 0.010110177 ubox
21 47 0.007064138 ubox
21 56 0.005554421 ubox
21 61 0.081622841 ubox
21 62 0.302157560 ubox
21 64 0.914853789 ubox
21 66 0.059770311 ubox
22 26 0.015452185 ubox
22 27 0.009063666 ubox
22 28 0.015266615 ubox
22 29 0.063066305 ubox
22 30 0.069811420 ubox
22 33 0.016930476 ubox
22 34 0.006195524 ubox
22 35 0.027562334 ubox
22 40 0.010101581 ubox
22 46 0.006792428 ubox
22 55 0.005123997 ubox
22 56 0.011459646 ubox
22 60 0.089502126 ubox
22 61 0.301858718 ubox
23 27 0.014956241 ubox
23 28 0.056783785 ubox
23 29 0.066871834 ubox
23 55 0.011604261 ubox
24 54 0.006486262 ubox
26 32 0.039642387 ubox
26 39 0.007381160 ubox
26 58 0.103863635 ubox
26 79 0.003545831 ubox
27 31 0.036104526 ubox
27 38 0.007357423 ubox
27 57 0.097372630 ubox
27 58 0.053068849 ubox
27 59 0.159996564 ubox
27 78 0.003564672 ubox
28 37 0.007238971 ubox
28 39 0.007233675 ubox
28 57 0.055740597 ubox
28 58 0.151952075 ubox
28 59 0.757122788 ubox
29 38 0.008773324 ubox
29 57 0.124434399 ubox
29 58 0.789500578 ubox
29 59 0.461308217 ubox
30 37 0.008936032 ubox
30 57 0.794971361 ubox
30 58 0.472791369 ubox
31 50 0.007298007 ubox
32 40 0.003892700 ubox
32 46 0.006498930 ubox
32 49 0.007769158 ubox
32 55 0.751293696 ubox
33 39 0.003902242 ubox
33 45 0.006699846 ubox
33 48 0.007747748 ubox
33 54 0.655339859 ubox
33 58 0.020196584 ubox
34 44 0.006684039 ubox
34 53 0.535434901 ubox
34 54 0.714726006 ubox
34 57 0.014342441 ubox
34 77 0.008317753 ubox
35 45 0.008589588 ubox
35 52 0.379179473 ubox
35 53 0.809445067 ubox
35 58 0.035325308 ubox
35 76 0.006527729 ubox
35 77 0.234334799 ubox
36 42 0.007040690 ubox
36 44 0.008625232 ubox
36 48 0.027776133 ubox
36 52 0.893302840 ubox
36 57 0.035459423 ubox
36 76 0.234952890 ubox
37 41 0.006601667 ubox
37 43 0.008565445 ubox
37 47 0.027883651 ubox
37 51 0.970026775 ubox
37 56 0.035507484 ubox
37 75 0.234904256 ubox
38 50 0.970009662 ubox
38 55 0.035255522 ubox
39 46 0.036460860 ubox
39 49 0.969735936 ubox
39 55 0.003489979 ubox
39 74 0.235069185 ubox
40 45 0.038348458 ubox
40 48 0.922361019 ubox
40 53 0.034873643 ubox
40 54 0.006638945 ubox
40 73 0.235094341 ubox
41 48 0.296311584 ubox
41 52 0.034848342 ubox
41 53 0.006638131 ubox
41 72 0.235100830 ubox
42 47 0.399019583 ubox
42 49 0.020160908 ubox
42 51 0.032093099 ubox
42 71 0.235098960 ubox
43 48 0.022418530 ubox
43 52 0.006466625 ubox
43 57 0.006421582 ubox
43 70 0.234324108 ubox
43 76 0.027055009 ubox
44 50 0.016807744 ubox
44 51 0.006614951 ubox
44 56 0.006850204 ubox
44 75 0.030088045 ubox
45 49 0.016733245 ubox
45 50 0.004825527 ubox
45 55 0.007127241 ubox
45 68 0.217537705 ubox
45 74 0.030424606 ubox
46 54 0.007195994 ubox
46 67 0.164917969 ubox
46 73 0.030434028 ubox
47 53 0.007194155 ubox
47 65 0.081359022 ubox
47 67 0.167153008 ubox
47 72 0.030623139 ubox
48 64 0.081238570 ubox
48 66 0.220315483 ubox
48 71 0.030640434 ubox
49 65 0.220086595 ubox
49 70 0.030640197 ubox
49 79 0.004944089 ubox
50 69 0.030483313 ubox
50 78 0.005081911 ubox
51 65 0.005421468 ubox
51 67 0.029740219 ubox
51 77 0.005095095 ubox
52 61 0.014889618 ubox
52 62 0.235273522 ubox
52 64 0.005200371 ubox
52 66 0.028605722 ubox
53 60 0.014974208 ubox
53 61 0.235637823 ubox
53 62 0.008347327 ubox
53 75 0.005098454 ubox
54 60 0.235546720 ubox
54 61 0.008408873 ubox
54 64 0.027791177 ubox
54 66 0.003283815 ubox
54 68 0.003260537 ubox
54 74 0.005101946 ubox
55 59 0.212218036 ubox
55 63 0.026880489 ubox
55 73 0.005100864 ubox
56 65 0.010033539 ubox
56 72 0.005103438 ubox
57 64 0.021007927 ubox
57 71 0.005087043 ubox
64 72 0.003588563 ubox
65 71 0.004578403 ubox
66 70 0.004549378 ubox
8 77 0.9500000 lbox
9 76 0.9500000 lbox
10 75 0.9500000 lbox
11 74 0.9500000 lbox
12 73 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
20 65 0.9500000 lbox
21 64 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
showpage
end
%%EOF
