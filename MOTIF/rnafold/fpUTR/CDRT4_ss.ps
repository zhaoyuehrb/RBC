%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGCAAGAGGAUGGUUAGCUGCAGCAAAGAGAGAGCCAAAGAGAAGUGGGAUUGAGAGCACAGGGGACAGCUGGAGACAAAAUAUAAACGCCGGGCAGGGGAACAGCCAAGAUAGUGCAGGAAGGAUGGGGAAUCACAGAAACUUCUCAGGAACCCAGUGAAAUGAGCUGCACCAGGAACUUUAAGAGAGAGUUUUCAGCUGGGAGAAGAGGAAGGCAAGAUAUCAGAACAAGAAUCUGAACCUGUGAUGUUA\
AGAAAUCAGUAAAUAUUAAAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[41.04772949 671.02038574]
[35.18745422 676.07232666]
[28.86377907 680.52880859]
[22.13697815 684.34753418]
[15.07113171 687.49243164]
[7.73353338 689.93371582]
[0.19404061 691.64837646]
[-7.47558737 692.62036133]
[-15.20237255 692.84051514]
[-22.91281509 692.30706787]
[-30.53358650 691.02520752]
[-37.99223709 689.00738525]
[-45.21787262 686.27294922]
[-52.14183426 682.84808350]
[-60.63104248 695.21472168]
[-69.12024689 707.58135986]
[-77.60945129 719.94793701]
[-86.09866333 732.31457520]
[-83.41749573 747.65893555]
[-92.20292664 760.07952881]
[-106.84794617 762.54101562]
[-115.33715057 774.90765381]
[-109.26300049 789.08892822]
[-111.84259796 804.29907227]
[-122.25280762 815.68463135]
[-137.17176819 819.61248779]
[-151.83889771 814.82934570]
[-161.57395935 802.86138916]
[-163.27053833 787.52758789]
[-156.38725281 773.72088623]
[-143.12055969 765.84704590]
[-127.70377350 766.41845703]
[-119.21456909 754.05181885]
[-122.18106079 739.50067139]
[-113.74796295 726.83825684]
[-98.46528625 723.82537842]
[-89.97608185 711.45874023]
[-81.48686981 699.09210205]
[-72.99766541 686.72552490]
[-64.50846100 674.35888672]
[-80.15535736 656.76397705]
[-89.94438171 635.33654785]
[-93.00449371 611.96679688]
[-89.05852509 588.71838379]
[-78.44830322 567.64624023]
[-62.10501480 550.61499023]
[-41.46751022 539.13409424]
[-18.35562325 534.22375488]
[5.19030094 536.32452393]
[10.11067390 522.15447998]
[15.03104687 507.98443604]
[6.08177710 491.98126221]
[11.81016445 474.22640991]
[29.00570679 466.19970703]
[33.60916519 451.92358398]
[38.21262360 437.64743042]
[42.81608200 423.37130737]
[33.89983368 411.47009277]
[33.69882202 396.42272949]
[42.49969101 383.99700928]
[57.09839630 379.07928467]
[61.70185471 364.80316162]
[66.30531311 350.52700806]
[70.90877533 336.25088501]
[75.51222992 321.97473145]
[80.11568451 307.69860840]
[69.95763397 294.76452637]
[70.72523499 277.23504639]
[83.47107697 263.62448120]
[103.09974670 261.45809937]
[101.76466370 246.51762390]
[100.42958832 231.57714844]
[99.09450531 216.63668823]
[97.75942993 201.69621277]
[96.42435455 186.75575256]
[95.08927155 171.81529236]
[93.75419617 156.87481689]
[92.41911316 141.93435669]
[91.08403778 126.99388123]
[89.74895477 112.05341339]
[90.01139832 127.05111694]
[84.99025726 141.18576050]
[75.32513428 152.65682983]
[62.24720383 160.00309753]
[47.42237091 162.28880310]
[32.73907089 159.22274780]
[20.06769943 151.19552612]
[11.02237797 139.22964478]
[6.75532436 124.84937286]
[7.81008863 109.88650513]
[14.05231190 96.24704742]
[24.68684006 85.66844940]
[38.35901642 79.49823761]
[53.32723999 78.52238464]
[67.68481445 82.86520386]
[79.60122681 91.97174072]
[68.36505127 82.03453064]
[57.12886810 72.09731293]
[42.31145859 76.39242554]
[27.53067970 71.97291565]
[17.50302124 60.24902344]
[15.42827034 44.96181107]
[21.96847534 30.98936272]
[35.03667831 22.79024124]
[50.46286392 22.98075485]
[63.32459641 31.50011253]
[69.51773834 45.62981796]
[67.06607819 60.86112976]
[78.30226135 70.79834747]
[89.53844452 80.73555756]
[96.53730011 78.04000092]
[91.14617920 64.04228973]
[85.75527954 50.04450226]
[99.75315857 44.65381622]
[105.14389038 58.65117645]
[110.53501129 72.64888763]
[117.53385925 69.95333099]
[119.20146942 55.04631424]
[120.86907196 40.13929749]
[122.53668213 25.23228264]
[124.20428467 10.32526779]
[125.87188721 -4.58174706]
[109.63382721 -12.95295429]
[97.90128326 -26.91184425]
[92.46859741 -44.28259277]
[94.15079498 -62.37080002]
[102.66146088 -78.38142395]
[116.66104889 -89.85067749]
[133.96771240 -95.02514648]
[134.96958923 -109.99164581]
[135.97148132 -124.95815277]
[136.97337341 -139.92465210]
[127.01356506 -148.95550537]
[124.10308075 -161.88203430]
[129.08314514 -173.95069885]
[139.93472290 -180.85433960]
[141.10327148 -195.80874634]
[131.10914612 -207.75677490]
[132.50726318 -222.90602112]
[143.95945740 -232.36027527]
[145.12802124 -247.31468201]
[146.29656982 -262.26910400]
[138.74391174 -276.82553101]
[147.80062866 -290.49694824]
[164.14993286 -289.21939087]
[170.97306824 -274.30709839]
[161.25099182 -261.10052490]
[160.08242798 -246.14611816]
[158.91386414 -231.19171143]
[168.75849915 -220.07330322]
[167.78643799 -204.89076233]
[156.05769348 -194.64019775]
[154.88912964 -179.68577576]
[166.35832214 -167.36038208]
[165.32432556 -150.21696472]
[151.93988037 -138.92276001]
[150.93798828 -123.95626068]
[149.93609619 -108.98976135]
[148.93420410 -94.02325439]
[160.09095764 -89.86956024]
[169.81657410 -82.97896576]
[177.45303345 -73.80863953]
[182.48132324 -62.97030640]
[184.55673218 -51.18943405]
[183.53248596 -39.25667953]
[179.47007751 -27.97481155]
[172.63566589 -18.10471725]
[163.48258972 -10.31408215]
[152.62135315 -5.13222599]
[140.77890015 -2.91414142]
[139.11129761 11.99287319]
[137.44369507 26.89988899]
[135.77609253 41.80690384]
[134.10848999 56.71391678]
[132.44087219 71.62093353]
[138.76257324 75.65654755]
[146.83380127 63.01316833]
[154.90522766 50.36990738]
[167.54837036 58.44153214]
[159.47718811 71.08440399]
[151.40596008 83.72778320]
[157.72764587 87.76340485]
[170.54771423 79.97585297]
[183.36776733 72.18830109]
[196.18783569 64.40074921]
[206.58601379 51.00991821]
[222.33201599 57.29476929]
[220.65171814 74.16524506]
[203.97538757 77.22081757]
[191.15531921 85.00836945]
[178.33526611 92.79591370]
[165.51519775 100.58346558]
[132.21737671 121.27581024]
[104.68942261 110.71833801]
[106.02450562 125.65880585]
[107.35958099 140.59927368]
[108.69466400 155.53973389]
[110.02973938 170.48020935]
[111.36481476 185.42066956]
[112.69989777 200.36114502]
[114.03497314 215.30160522]
[115.37005615 230.24208069]
[116.70513153 245.18254089]
[118.04021454 260.12301636]
[124.03141022 246.37144470]
[122.93320465 231.41169739]
[125.97426605 216.72320557]
[132.92201233 203.42926025]
[143.24513245 192.54655457]
[156.15412903 184.90734863]
[170.66180420 181.09584045]
[185.65864563 181.40351868]
[199.99777222 185.80686951]
[212.58258057 193.96914673]
[222.45063782 205.26611328]
[228.84727478 218.83383179]
[231.28329468 233.63470459]
[229.57241821 248.53681946]
[223.84547424 262.40051270]
[214.54045105 274.16555786]
[202.36892700 282.93222046]
[188.26176453 288.03002930]
[173.29780579 289.06918335]
[158.62142944 285.97015381]
[145.35757446 278.97180176]
[130.35758972 278.95202637]
[143.51184082 286.16076660]
[156.66609192 293.36947632]
[169.82034302 300.57821655]
[182.97457886 307.78695679]
[197.47967529 301.94430542]
[212.33068848 306.84140015]
[220.51542664 320.16595459]
[218.16931152 335.62655640]
[206.40010071 345.92312622]
[190.76486206 346.19400024]
[178.64607239 336.31124878]
[175.76585388 320.94119263]
[162.61160278 313.73245239]
[149.45736694 306.52374268]
[136.30311584 299.31500244]
[123.14886475 292.10629272]
[111.72303009 308.51275635]
[94.39183044 312.30206299]
[89.78836823 326.57818604]
[85.18491364 340.85433960]
[80.58145142 355.13046265]
[75.97799683 369.40661621]
[71.37453461 383.68273926]
[80.35045624 396.20230103]
[80.23471069 411.42858887]
[71.28127289 423.52404785]
[57.09222031 427.97476196]
[52.48876190 442.25088501]
[47.88530731 456.52703857]
[43.28184891 470.80316162]
[50.63193130 480.08505249]
[52.58780670 491.64074707]
[48.78012848 502.59848022]
[40.25755692 510.29101562]
[29.20108223 512.90478516]
[24.28071022 527.07482910]
[19.36033630 541.24487305]
[26.24613190 544.81915283]
[32.75012589 549.04663086]
[38.81055832 553.88690186]
[44.36991501 559.29376221]
[49.37546158 565.21569824]
[53.77973938 571.59619141]
[57.54102325 578.37445068]
[60.62371445 585.48590088]
[62.99868011 592.86285400]
[64.64352417 600.43505859]
[65.54280090 608.13043213]
[65.68815613 615.87573242]
[65.07841492 623.59729004]
[63.71958160 631.22174072]
[61.62477875 638.67657471]
[58.81412888 645.89086914]
[55.31455231 652.79614258]
[51.15952682 659.32678223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 40]
[15 39]
[16 38]
[17 37]
[18 36]
[21 33]
[22 32]
[49 263]
[50 262]
[51 261]
[54 256]
[55 255]
[56 254]
[57 253]
[61 249]
[62 248]
[63 247]
[64 246]
[65 245]
[66 244]
[70 204]
[71 203]
[72 202]
[73 201]
[74 200]
[75 199]
[76 198]
[77 197]
[78 196]
[79 195]
[80 194]
[96 110]
[97 109]
[98 108]
[117 175]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[129 159]
[130 158]
[131 157]
[132 156]
[136 153]
[137 152]
[140 149]
[141 148]
[142 147]
[182 192]
[183 191]
[184 190]
[185 189]
[226 242]
[227 241]
[228 240]
[229 239]
[230 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
