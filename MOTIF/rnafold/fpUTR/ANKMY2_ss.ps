%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUGACAGGCGGCAGGCGGUGACCGCCGCAGGGCCUGCGGAGACCGUCCGCCUGGCUCGCCCGAGCUCGCCCGCUGUCCGCCAGCCCGCGGGAGGGAGGAGAGAAGCGAAGCGUUUCCGCGGUUGGCUACUCAGUGUCUUGGUCUCAAGUUGCCUCAUUGCGGCUGGCGUUCCCAAUACAGACGCAUCGUUUCUUUUUUAAUACUCCCUAAGAAAGGGAAUAACCUUCAAGCUGGCGGGAGCA\
) } def
/len { sequence length } bind def

/coor [
[240.96830750 65.73139954]
[241.30827332 80.72754669]
[234.39289856 94.03836060]
[221.92736816 102.38165283]
[206.98542786 103.70014954]
[193.25146484 97.66873169]
[184.11196899 85.77462006]
[181.82058716 70.95066833]
[186.94160461 56.85316467]
[174.01582336 64.46394348]
[161.09002686 72.07471466]
[148.16423035 79.68548584]
[135.28750610 87.37897491]
[122.46035767 95.15486145]
[120.40135193 118.20516968]
[96.87181091 131.55444336]
[88.85065460 144.22966003]
[80.82949829 156.90487671]
[72.80834198 169.58009338]
[64.78719330 182.25531006]
[61.42655563 198.87283325]
[44.52812576 200.24372864]
[38.53285599 184.38520813]
[52.11197662 174.23414612]
[60.13312912 161.55892944]
[68.15428925 148.88371277]
[76.17543793 136.20851135]
[84.19659424 123.53328705]
[74.40013885 112.17417908]
[60.68395233 118.24592590]
[54.12179947 124.56689453]
[46.75274277 124.30633545]
[32.95982361 130.20172119]
[19.16690826 136.09709167]
[5.37399197 141.99246216]
[-8.41892433 147.88784790]
[-19.13317108 162.87683105]
[-36.46701050 160.07661438]
[-50.18320084 166.14836121]
[-63.89938736 172.22012329]
[-77.61557770 178.29187012]
[-91.33176422 184.36361694]
[-98.43107605 198.75039673]
[-114.13553619 202.02902222]
[-126.39803314 191.68443298]
[-125.81182861 175.65208435]
[-112.82660675 166.23065186]
[-97.40351868 170.64743042]
[-83.68732452 164.57568359]
[-69.97113800 158.50392151]
[-56.25494766 152.43217468]
[-42.53876114 146.36042786]
[-37.89768219 135.20494080]
[-26.53893471 130.02793884]
[-14.31429958 134.09492493]
[-0.52138335 128.19955444]
[13.27153301 122.30417633]
[27.06444931 116.40879822]
[40.85736465 110.51342010]
[54.61220169 104.52973938]
[68.32839203 98.45798492]
[73.58753204 85.85272980]
[83.24092865 77.29995728]
[94.92642975 74.02092743]
[106.12209320 76.04654694]
[114.68447113 82.32772064]
[127.51161194 74.55183411]
[133.21157837 67.44361115]
[140.55345154 66.75969696]
[153.47924805 59.14892197]
[166.40504456 51.53814697]
[179.33084106 43.92737198]
[185.78195190 33.56774521]
[196.59111023 32.37440872]
[208.55455017 23.32586479]
[220.51797485 14.27731800]
[225.46008301 6.62276983]
[232.69332886 5.19061947]
[244.77180481 -3.70378184]
[256.85028076 -12.59818268]
[268.92877197 -21.49258423]
[281.00723267 -30.38698578]
[293.08572388 -39.28138733]
[305.16418457 -48.17578888]
[317.24267578 -57.07019043]
[329.32113647 -65.96459198]
[325.52331543 -85.89133453]
[331.85739136 -105.08853149]
[346.66482544 -118.74714661]
[366.17349243 -123.48051453]
[385.45846558 -118.16391754]
[395.18188477 -129.58560181]
[404.90533447 -141.00729370]
[414.62875366 -152.42898560]
[424.35217285 -163.85067749]
[422.12881470 -182.68238831]
[434.18746948 -196.89961243]
[452.49014282 -197.74943542]
[461.91748047 -209.41670227]
[471.34481812 -221.08398438]
[480.77218628 -232.75125122]
[490.19952393 -244.41851807]
[499.62686157 -256.08578491]
[509.05419922 -267.75305176]
[518.48156738 -279.42031860]
[527.90887451 -291.08758545]
[537.33624268 -302.75485229]
[546.76361084 -314.42214966]
[556.19091797 -326.08941650]
[565.61828613 -337.75668335]
[568.27331543 -353.35351562]
[582.29046631 -358.39019775]
[591.71783447 -370.05746460]
[601.14520264 -381.72473145]
[610.57250977 -393.39199829]
[619.99987793 -405.05926514]
[629.42718506 -416.72656250]
[637.61022949 -429.29788208]
[644.46289062 -442.64108276]
[651.31555176 -455.98428345]
[658.16821289 -469.32745361]
[665.02087402 -482.67065430]
[671.87359619 -496.01385498]
[678.72625732 -509.35705566]
[677.40380859 -527.73413086]
[692.53326416 -536.64489746]
[699.21429443 -550.07489014]
[705.89526367 -563.50488281]
[705.11444092 -579.30676270]
[717.71063232 -587.25573730]
[724.39166260 -600.68566895]
[731.07263184 -614.11566162]
[729.51470947 -632.47424316]
[744.52862549 -641.57830811]
[751.03686523 -655.09283447]
[742.87524414 -668.18450928]
[743.10998535 -683.61010742]
[751.66619873 -696.44732666]
[765.81359863 -702.59997559]
[781.03778076 -700.10467529]
[792.48083496 -689.75769043]
[796.49133301 -674.86071777]
[791.78942871 -660.16729736]
[779.87561035 -650.36608887]
[764.55145264 -648.58459473]
[758.04315186 -635.07006836]
[761.74053955 -623.56726074]
[756.44732666 -612.26220703]
[744.50262451 -607.43463135]
[737.82159424 -594.00469971]
[731.14062500 -580.57470703]
[732.39929199 -565.73339844]
[719.32525635 -556.82385254]
[712.64422607 -543.39385986]
[705.96325684 -529.96392822]
[709.51281738 -518.41467285]
[704.07507324 -507.17840576]
[692.06945801 -502.50439453]
[685.21679688 -489.16119385]
[678.36407471 -475.81799316]
[671.51141357 -462.47479248]
[664.65875244 -449.13159180]
[657.80609131 -435.78839111]
[650.95343018 -422.44519043]
[655.85168457 -416.76565552]
[670.54632568 -399.72698975]
[684.75158691 -404.54476929]
[698.95684814 -409.36257935]
[707.31719971 -423.05505371]
[723.25231934 -424.91275024]
[734.53814697 -413.51058960]
[732.51715088 -397.59533691]
[718.73968506 -389.37582397]
[703.77459717 -395.15731812]
[689.56939697 -390.33953857]
[675.36413574 -385.52172852]
[665.01879883 -386.32604980]
[656.03454590 -389.41540527]
[648.86059570 -394.31768799]
[643.81951904 -400.48007202]
[641.09448242 -407.29919434]
[631.66711426 -395.63192749]
[622.23980713 -383.96466064]
[612.81243896 -372.29739380]
[603.38513184 -360.63012695]
[593.95776367 -348.96286011]
[591.97698975 -334.20053101]
[577.28552246 -328.32934570]
[567.85821533 -316.66204834]
[558.43084717 -304.99478149]
[549.00347900 -293.32751465]
[539.57617188 -281.66024780]
[530.14880371 -269.99298096]
[520.72149658 -258.32571411]
[511.29412842 -246.65844727]
[501.86679077 -234.99118042]
[492.43945312 -223.32389832]
[483.01208496 -211.65663147]
[473.58474731 -199.98936462]
[464.15740967 -188.32209778]
[467.78744507 -177.53373718]
[465.74780273 -166.21360779]
[458.42990112 -157.18463135]
[447.55575562 -152.75468445]
[435.77386475 -154.12724304]
[426.05044556 -142.70556641]
[416.32702637 -131.28387451]
[406.60357666 -119.86218262]
[396.88015747 -108.44049072]
[401.95184326 -100.25672150]
[404.91058350 -91.09473419]
[405.58328247 -81.49037933]
[403.93060303 -72.00540161]
[400.04922485 -63.19455338]
[394.16613770 -55.57316589]
[402.66885376 -43.21581650]
[411.17153931 -30.85846329]
[419.67422485 -18.50111198]
[435.25900269 -15.87613297]
[444.35476685 -2.95163298]
[441.56515503 12.60451221]
[428.54522705 21.56311798]
[413.01943970 18.60920143]
[404.19897461 5.49526978]
[407.31689453 -9.99841404]
[398.81417847 -22.35576630]
[390.31149292 -34.71311951]
[381.80880737 -47.07046890]
[370.70697021 -43.84492874]
[359.09573364 -43.93851089]
[347.95040894 -47.37243271]
[338.21554565 -53.88611221]
[326.13708496 -44.99171066]
[314.05859375 -36.09730911]
[301.98013306 -27.20290947]
[289.90164185 -18.30850792]
[277.82315063 -9.41410637]
[265.74468994 -0.51970524]
[253.66621399 8.37469578]
[241.58772278 17.26909637]
[229.56652832 26.24075508]
[217.60308838 35.28930283]
[205.63964844 44.33784866]
[220.62599182 44.97784805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 72]
[10 71]
[11 70]
[12 69]
[13 67]
[14 66]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[29 61]
[30 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[74 243]
[75 242]
[76 241]
[78 240]
[79 239]
[80 238]
[81 237]
[82 236]
[83 235]
[84 234]
[85 233]
[86 232]
[91 209]
[92 208]
[93 207]
[94 206]
[95 205]
[98 200]
[99 199]
[100 198]
[101 197]
[102 196]
[103 195]
[104 194]
[105 193]
[106 192]
[107 191]
[108 190]
[109 189]
[110 188]
[112 186]
[113 185]
[114 184]
[115 183]
[116 182]
[117 181]
[118 164]
[119 163]
[120 162]
[121 161]
[122 160]
[123 159]
[124 158]
[126 155]
[127 154]
[128 153]
[130 151]
[131 150]
[132 149]
[134 146]
[135 145]
[166 176]
[167 175]
[168 174]
[215 228]
[216 227]
[217 226]
[218 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
