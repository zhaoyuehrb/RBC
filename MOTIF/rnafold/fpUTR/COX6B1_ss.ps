%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGCGUGGCUUGAAUGACUUCAGUGGCCUCCUCCUGGGAGGGAGCUGAAGCCGCUCGCAAGACUCCCGUAGUCCCCACCUCUCUCAGCUUCCGGCUGGUAGUAGUUCCGCUUCCUGUCCGACUGUGGUGUCUUUGCUGAGGGUCACAUUGAGCUGCAGGUUGAAUCCGGGGUGCCUUUAGGAUUCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[167.11195374 288.97552490]
[164.00140381 281.96112061]
[162.88476562 274.34237671]
[163.85838318 266.67684937]
[166.86512756 259.52944946]
[171.69744873 253.43084717]
[164.66017151 240.18408203]
[157.62287903 226.93731689]
[150.58560181 213.69056702]
[143.54832458 200.44380188]
[136.51103210 187.19703674]
[129.47375488 173.95028687]
[123.55024719 169.51147461]
[122.43172455 160.43013000]
[115.61099243 147.07058716]
[108.79026031 133.71102905]
[101.96952820 120.35147858]
[85.03790283 117.49077606]
[74.45675659 101.51001740]
[60.83077621 107.78159332]
[47.20479584 114.05317688]
[33.57881927 120.32475281]
[19.95284081 126.59633636]
[6.32686234 132.86791992]
[-7.29911613 139.13949585]
[-12.85735989 153.69090271]
[-26.76538086 159.85707092]
[-40.60367584 154.46846008]
[-54.22965622 160.74005127]
[-67.85563660 167.01162720]
[-81.48161316 173.28320312]
[-95.10758972 179.55477905]
[-108.73356628 185.82637024]
[-120.59381104 197.94126892]
[-135.51850891 189.89828491]
[-131.92140198 173.33032227]
[-115.00514984 172.20037842]
[-101.37917328 165.92880249]
[-87.75318909 159.65722656]
[-74.12721252 153.38565063]
[-60.50123596 147.11405945]
[-46.87525558 140.84248352]
[-41.96841812 126.82611847]
[-28.23908043 120.27173615]
[-13.57069588 125.51351929]
[0.05528259 119.24193573]
[13.68126106 112.97035980]
[27.30723953 106.69877625]
[40.93321609 100.42720032]
[54.55919647 94.15561676]
[68.18517303 87.88404083]
[76.48062134 75.38661957]
[76.96886444 60.39456558]
[74.11711884 51.70035553]
[77.58904266 45.16302490]
[78.32125092 30.18090630]
[79.05345154 15.19878674]
[79.66369629 0.21120521]
[80.15194702 -14.78084660]
[80.64019012 -29.77289772]
[81.12843323 -44.76494980]
[81.49464417 -59.76047897]
[81.73880005 -74.75849152]
[81.98295593 -89.75650787]
[73.58451843 -99.55879974]
[74.10532379 -112.05501556]
[82.72029877 -120.56024170]
[83.20854950 -135.55229187]
[83.69679260 -150.54434204]
[84.18503571 -165.53639221]
[84.67327881 -180.52844238]
[85.16152191 -195.52050781]
[85.64976501 -210.51255798]
[86.13800812 -225.50460815]
[71.49658966 -231.81326294]
[61.65780640 -246.32487488]
[61.07669830 -265.44226074]
[71.60499573 -283.29159546]
[69.41536713 -298.13092041]
[57.01234436 -307.55444336]
[55.00313568 -322.63482666]
[64.06346893 -334.40112305]
[61.87383270 -349.24044800]
[52.20492172 -361.76333618]
[58.00146866 -375.48373413]
[55.81183243 -390.32305908]
[53.62220001 -405.16238403]
[51.43256378 -420.00170898]
[49.24292755 -434.84103394]
[47.05329514 -449.68035889]
[38.75959396 -464.46719360]
[50.67264175 -476.53018188]
[65.56205750 -468.42205811]
[61.89261627 -451.86996460]
[64.08225250 -437.03067017]
[66.27188873 -422.19134521]
[68.46152496 -407.35202026]
[70.65115356 -392.51269531]
[72.84078979 -377.67337036]
[82.35308075 -366.21188354]
[76.71315002 -351.43008423]
[78.90278625 -336.59075928]
[90.97537994 -327.94274902]
[93.40737152 -312.92474365]
[84.25468445 -300.32055664]
[86.44432068 -285.48123169]
[93.77702332 -283.90597534]
[103.83813477 -295.03134155]
[108.44243622 -280.75546265]
[115.77514648 -279.18020630]
[123.86607361 -291.81097412]
[121.85105896 -307.72698975]
[133.14117432 -319.12490845]
[149.07560730 -317.26126099]
[157.43083191 -303.56564331]
[151.79742432 -288.54418945]
[136.49685669 -283.72006226]
[128.40592957 -271.08926392]
[129.55049133 -248.25085449]
[118.21926880 -231.15719604]
[101.13006592 -225.01635742]
[100.64181519 -210.02430725]
[100.15357208 -195.03225708]
[99.66532898 -180.04020691]
[99.17708588 -165.04815674]
[98.68884277 -150.05610657]
[98.20059967 -135.06405640]
[97.71235657 -120.07199860]
[106.81216431 -105.07419586]
[96.98096466 -89.51235199]
[96.73680878 -74.51433563]
[96.49265289 -59.51632309]
[99.53187561 -52.76694489]
[96.12048340 -44.27670670]
[95.63224030 -29.28465462]
[95.14399719 -14.29260254]
[94.65575409 0.69944942]
[97.58470917 7.49740362]
[94.03557587 15.93099117]
[93.30336761 30.91311073]
[92.57116699 45.89522934]
[91.96092224 60.88280869]
[91.47267914 75.87486267]
[107.61415863 76.92106628]
[119.07850647 87.12358093]
[121.68636322 101.40586090]
[115.32907867 113.53074646]
[122.14981079 126.89029694]
[128.97055054 140.24984741]
[135.79127502 153.60940552]
[142.72052002 166.91299438]
[149.75779724 180.15975952]
[156.79507446 193.40652466]
[163.83236694 206.65327454]
[170.86964417 219.90003967]
[177.90692139 233.14680481]
[184.94421387 246.39355469]
[207.53100586 251.05921936]
[219.18934631 270.64871216]
[212.67317200 292.21441650]
[221.17094421 304.57516479]
[229.66870117 316.93591309]
[238.16647339 329.29663086]
[246.66424561 341.65737915]
[255.16201782 354.01812744]
[263.65979004 366.37887573]
[272.15756226 378.73959351]
[280.65533447 391.10034180]
[289.45233154 403.24993896]
[298.54336548 415.18112183]
[307.63436890 427.11233521]
[322.04330444 436.04650879]
[317.44705200 452.36553955]
[300.49340820 452.46649170]
[295.70318604 436.20333862]
[286.61215210 424.27215576]
[277.52114868 412.34094238]
[274.07928467 411.51205444]
[270.87127686 408.96591187]
[268.70388794 404.83230591]
[268.29458618 399.59811401]
[259.79681396 387.23736572]
[251.29904175 374.87664795]
[242.80128479 362.51589966]
[234.30351257 350.15515137]
[225.80574036 337.79440308]
[217.30796814 325.43368530]
[208.81019592 313.07293701]
[200.31242371 300.71218872]
[192.93334961 302.25363159]
[185.38446045 301.75518799]
[178.22123718 299.23901367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 157]
[7 156]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[14 150]
[15 149]
[16 148]
[17 147]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[52 143]
[53 142]
[55 141]
[56 140]
[57 139]
[58 137]
[59 136]
[60 135]
[61 134]
[62 132]
[63 131]
[64 130]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[78 106]
[79 105]
[82 102]
[83 101]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[110 118]
[111 117]
[160 189]
[161 188]
[162 187]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
