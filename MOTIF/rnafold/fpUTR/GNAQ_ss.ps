%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUAUCCGCUCCCACCGCGCCCCCGGCCCACCUGGUGGCCCCGGCCCUGGCCGCCGCCCCCGCGGCGGUUCCCGGAGCUCGUCCCGGACGCGCGCCCGGGCGGCGGGGGCUCGGCGGCCACCGCUGCCUCGGGGGAGCGAGGGCGGGAGGGUGUGUGUGCGCGCUGUGAGCAGGGGGUGCCGGCGGGGCUGCAGCGGAGGCACUUUGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[137.68341064 595.72149658]
[134.90985107 580.88201904]
[136.24394226 565.84466553]
[141.58666992 551.72521973]
[150.54158020 539.57153320]
[162.44415283 530.28546143]
[176.41113281 524.55609131]
[174.66168213 509.65844727]
[172.91221619 494.76083374]
[171.16276550 479.86318970]
[169.41331482 464.96557617]
[167.66384888 450.06793213]
[165.37147522 435.24414062]
[162.53923035 420.51394653]
[159.70698547 405.78375244]
[149.70573425 394.74633789]
[154.69816589 379.73348999]
[151.86592102 365.00329590]
[149.03367615 350.27310181]
[146.09388733 335.56399536]
[143.04670715 320.87677002]
[139.99952698 306.18954468]
[136.95236206 291.50231934]
[133.90518188 276.81509399]
[130.85800171 262.12786865]
[127.81082916 247.44062805]
[117.64938354 236.55053711]
[122.42191315 221.46632385]
[119.37474060 206.77908325]
[109.21328735 195.88899231]
[113.98582458 180.80477905]
[110.93864441 166.11753845]
[107.89147186 151.43031311]
[72.19934845 121.19649506]
[83.66930389 92.70302582]
[72.87075043 82.29191589]
[62.07219696 71.88079834]
[51.27364731 61.46968842]
[40.47509384 51.05857468]
[29.67654228 40.64746475]
[18.87799072 30.23635101]
[8.07943726 19.82523727]
[-2.79488945 9.49329662]
[-13.74441147 -0.75892186]
[-24.69393349 -11.01113987]
[-35.71806335 -21.18308830]
[-46.81621933 -31.27422142]
[-57.91437149 -41.36535645]
[-69.01252747 -51.45648956]
[-74.10740662 -52.56391907]
[-77.89121246 -55.24538422]
[-79.98412323 -58.73868942]
[-80.36350250 -62.24130630]
[-91.00878143 -72.80908966]
[-101.65406036 -83.37687683]
[-112.29933167 -93.94466400]
[-122.94461060 -104.51245117]
[-133.58988953 -115.08023071]
[-144.23516846 -125.64801788]
[-154.88044739 -136.21580505]
[-165.52571106 -146.78358459]
[-181.10215759 -146.89538574]
[-191.74743652 -157.76426697]
[-191.54486084 -172.61332703]
[-202.19013977 -183.18110657]
[-212.83541870 -193.74890137]
[-223.55761719 -204.23861694]
[-234.35617065 -214.64973450]
[-245.15472412 -225.06085205]
[-251.46365356 -227.02154541]
[-255.26647949 -231.23963928]
[-256.11108398 -235.93745422]
[-266.60079956 -246.65965271]
[-277.09054565 -257.38186646]
[-292.27194214 -261.83560181]
[-295.64160156 -276.34402466]
[-306.13131714 -287.06622314]
[-316.62103271 -297.78842163]
[-332.58282471 -299.40133667]
[-341.15234375 -312.96386719]
[-335.75582886 -328.07205200]
[-320.53298950 -333.13616943]
[-307.16152954 -324.27145386]
[-305.89883423 -308.27816772]
[-295.40911865 -297.55596924]
[-284.91940308 -286.83377075]
[-270.48828125 -283.14694214]
[-266.36834717 -267.87158203]
[-255.87861633 -257.14938354]
[-245.38888550 -246.42718506]
[-234.74360657 -235.85940552]
[-223.94505310 -225.44828796]
[-213.14649963 -215.03717041]
[-206.15156555 -212.65832520]
[-202.26762390 -204.39416504]
[-191.62236023 -193.82638550]
[-180.97708130 -183.25860596]
[-166.12989807 -183.56965637]
[-155.18353271 -173.00405884]
[-154.95793152 -157.42886353]
[-144.31265259 -146.86108398]
[-133.66737366 -136.29328918]
[-123.02210236 -125.72550964]
[-112.37682343 -115.15772247]
[-101.73155212 -104.58994293]
[-91.08627319 -94.02215576]
[-80.44099426 -83.45436859]
[-69.79571533 -72.88658142]
[-58.92139053 -62.55464172]
[-47.82323837 -52.46350861]
[-36.72508240 -42.37237549]
[-25.62693024 -32.28124237]
[-18.56546593 -30.10780334]
[-14.44171429 -21.96066093]
[-3.49219298 -11.70844364]
[7.45732880 -1.45622551]
[14.48628139 0.82015872]
[18.49055099 9.02668571]
[29.28910255 19.43779755]
[40.08765411 29.84891129]
[50.88620758 40.26002502]
[61.68475723 50.67113876]
[72.48331451 61.08224869]
[83.28186035 71.49336243]
[94.08041382 81.90447235]
[109.07401276 82.34277344]
[120.46228790 72.58023834]
[131.85057068 62.81769943]
[143.23884583 53.05516052]
[154.62712097 43.29262543]
[165.94377136 33.44714355]
[177.18818665 23.51924896]
[188.43260193 13.59135246]
[189.16316223 -2.19604158]
[200.89924622 -12.78093624]
[216.67802429 -11.88350105]
[227.13824463 -0.03616820]
[226.07403564 15.73225021]
[214.11677551 26.06662941]
[198.36048889 24.83576775]
[187.11607361 34.76366425]
[175.87165833 44.69155884]
[172.93894958 51.47294998]
[164.38966370 54.68090057]
[153.00137329 64.44343567]
[141.61309814 74.20597839]
[130.22482300 83.96851349]
[118.83654785 93.73104858]
[124.60236359 107.57935333]
[130.36766052 121.42642212]
[145.31924438 120.22222900]
[158.45372009 111.40202332]
[171.76106262 118.09260559]
[186.71264648 116.88840485]
[201.66423035 115.68421173]
[216.61581421 114.48001099]
[229.79916382 104.72647095]
[244.72769165 111.51405334]
[246.04420471 127.86026764]
[232.39440918 136.94953918]
[217.82002258 129.43159485]
[202.86843872 130.63580322]
[187.91685486 131.83999634]
[172.96525574 133.04418945]
[160.90022278 141.77825928]
[146.52343750 135.17381287]
[131.57185364 136.37800598]
[122.57870483 148.38314819]
[125.62587738 163.07037354]
[128.67304993 177.75759888]
[139.05245972 189.69822693]
[134.06196594 203.73191833]
[137.10914612 218.41914368]
[147.48854065 230.35977173]
[142.49806213 244.39344788]
[145.54524231 259.08068848]
[148.59240723 273.76791382]
[151.63958740 288.45513916]
[154.68676758 303.14236450]
[157.73393250 317.82958984]
[160.78111267 332.51684570]
[165.58721924 340.28100586]
[163.76385498 347.44085693]
[166.59609985 362.17105103]
[169.42834473 376.90124512]
[179.63217163 388.99224854]
[174.43716431 402.95150757]
[177.26940918 417.68170166]
[180.10165405 432.41189575]
[190.53480530 421.63461304]
[205.47943115 422.92236328]
[213.91514587 435.32556152]
[209.62135315 449.69784546]
[195.76434326 455.44097900]
[182.56147766 448.31848145]
[184.31094360 463.21609497]
[186.06039429 478.11373901]
[187.80986023 493.01135254]
[189.55931091 507.90899658]
[191.30876160 522.80664062]
[206.22309875 525.14440918]
[219.95315552 531.42041016]
[231.48007202 541.16888428]
[239.94848633 553.66644287]
[244.72996521 567.98565674]
[245.46971130 583.06396484]
[242.11282349 597.78247070]
[234.90840149 611.04888916]
[224.39106750 621.87890625]
[211.34127808 629.46868896]
[196.72740173 633.25518799]
[181.63391113 632.95727539]
[167.18080139 628.59716797]
[154.44062805 620.49841309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[13 189]
[14 188]
[15 187]
[17 185]
[18 184]
[19 183]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[28 173]
[29 172]
[31 170]
[32 169]
[33 168]
[35 125]
[36 124]
[37 123]
[38 122]
[39 121]
[40 120]
[41 119]
[42 118]
[43 116]
[44 115]
[45 114]
[46 112]
[47 111]
[48 110]
[49 109]
[53 108]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
[61 100]
[64 97]
[65 96]
[66 95]
[67 93]
[68 92]
[69 91]
[72 90]
[73 89]
[74 88]
[76 86]
[77 85]
[78 84]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 142]
[132 141]
[133 140]
[150 167]
[151 166]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
