%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSTA3)
} def

/sequence { (\
AUACACAUCAGGAGGUGGCCUUGAGAAGCUGAGCGGAGACCGGCUAGACUUUACUCAAAGAAACCAAGAGACUGUUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.019308592 ubox
1 75 0.027019384 ubox
2 7 0.021076379 ubox
2 17 0.004759589 ubox
2 74 0.029323346 ubox
2 77 0.148903360 ubox
3 16 0.006491888 ubox
3 73 0.028160840 ubox
3 75 0.286738630 ubox
3 76 0.152109210 ubox
4 15 0.007066259 ubox
4 17 0.087895870 ubox
4 74 0.312260989 ubox
5 16 0.088412695 ubox
5 73 0.301474169 ubox
5 75 0.496243432 ubox
6 15 0.088599735 ubox
6 17 0.158901779 ubox
6 23 0.003989788 ubox
6 74 0.527776442 ubox
7 16 0.159897036 ubox
7 22 0.003823779 ubox
7 73 0.520678322 ubox
7 75 0.106598883 ubox
8 15 0.160082573 ubox
8 18 0.010458859 ubox
8 24 0.032059420 ubox
8 26 0.007809012 ubox
8 61 0.004793634 ubox
8 69 0.215297065 ubox
8 71 0.549421105 ubox
8 74 0.026436558 ubox
9 14 0.159602300 ubox
9 17 0.014242138 ubox
9 23 0.034324659 ubox
9 25 0.008886256 ubox
9 47 0.003245462 ubox
9 60 0.005102153 ubox
9 68 0.217319786 ubox
9 70 0.555122098 ubox
9 74 0.622346155 ubox
10 16 0.014043304 ubox
10 21 0.032084497 ubox
10 22 0.030630705 ubox
10 45 0.004462502 ubox
10 73 0.628281324 ubox
10 76 0.020185225 ubox
11 20 0.041929198 ubox
11 21 0.026285186 ubox
11 44 0.004604912 ubox
11 52 0.003987604 ubox
11 65 0.016709063 ubox
11 72 0.628946007 ubox
11 73 0.020755292 ubox
11 75 0.022853604 ubox
11 76 0.007172029 ubox
11 79 0.025108909 ubox
12 19 0.041922300 ubox
12 20 0.026143742 ubox
12 22 0.022913015 ubox
12 51 0.004786677 ubox
12 52 0.004089850 ubox
12 64 0.016375144 ubox
12 72 0.024419209 ubox
12 75 0.006527383 ubox
12 76 0.008892865 ubox
12 78 0.025223968 ubox
13 21 0.028351840 ubox
13 50 0.004896821 ubox
13 51 0.004259501 ubox
13 73 0.024579508 ubox
13 75 0.009086245 ubox
13 76 0.008849178 ubox
14 20 0.030733030 ubox
14 21 0.003199080 ubox
14 41 0.005243055 ubox
14 49 0.004904874 ubox
14 50 0.004315272 ubox
14 65 0.766304649 ubox
14 72 0.023228380 ubox
14 73 0.014878058 ubox
14 76 0.004668425 ubox
14 79 0.199959164 ubox
15 19 0.030283873 ubox
15 20 0.003531675 ubox
15 40 0.005245316 ubox
15 49 0.004334017 ubox
15 64 0.767511418 ubox
15 72 0.016070694 ubox
15 75 0.004851918 ubox
15 78 0.201707922 ubox
16 39 0.005221142 ubox
16 46 0.005339529 ubox
16 48 0.003707670 ubox
16 63 0.762785375 ubox
16 66 0.569568044 ubox
16 71 0.012261428 ubox
16 77 0.201384414 ubox
17 45 0.006778097 ubox
17 65 0.576668063 ubox
17 73 0.005549564 ubox
17 76 0.200660296 ubox
18 44 0.007109448 ubox
18 64 0.576454378 ubox
18 72 0.007055181 ubox
18 75 0.200721783 ubox
19 36 0.005286439 ubox
19 43 0.007110795 ubox
19 74 0.200364753 ubox
20 35 0.005280628 ubox
20 42 0.007083675 ubox
20 60 0.695721538 ubox
20 68 0.045981583 ubox
20 70 0.048593137 ubox
21 33 0.004968002 ubox
21 58 0.763852149 ubox
21 59 0.568410786 ubox
21 60 0.016290482 ubox
21 61 0.040980070 ubox
21 62 0.009772691 ubox
21 63 0.005553518 ubox
21 67 0.044346189 ubox
21 69 0.044525259 ubox
21 70 0.007319782 ubox
21 71 0.008216174 ubox
22 32 0.005055785 ubox
22 53 0.003530932 ubox
22 57 0.906013787 ubox
22 58 0.401119536 ubox
22 59 0.007981230 ubox
22 60 0.025701812 ubox
22 61 0.005233753 ubox
22 62 0.003308053 ubox
22 66 0.038915266 ubox
22 68 0.028807178 ubox
22 69 0.003412947 ubox
22 70 0.005404399 ubox
23 51 0.005935469 ubox
23 52 0.003508529 ubox
23 56 0.996098358 ubox
23 65 0.036937991 ubox
24 30 0.005299310 ubox
24 50 0.006831944 ubox
24 52 0.010888101 ubox
24 55 0.993650934 ubox
24 73 0.003253611 ubox
25 29 0.005213386 ubox
25 49 0.007109586 ubox
25 51 0.019200021 ubox
25 52 0.285787459 ubox
25 54 0.951422030 ubox
25 56 0.010020397 ubox
26 50 0.046053379 ubox
26 51 0.822991094 ubox
26 52 0.281891700 ubox
26 55 0.009170024 ubox
27 45 0.028838566 ubox
27 50 0.961764592 ubox
27 51 0.225936972 ubox
27 52 0.055994405 ubox
28 34 0.006929231 ubox
28 44 0.030751200 ubox
28 49 0.979411920 ubox
28 50 0.127694153 ubox
28 51 0.048450082 ubox
29 33 0.006886238 ubox
29 43 0.030792658 ubox
29 47 0.967818766 ubox
29 60 0.006493079 ubox
30 42 0.030069321 ubox
30 46 0.953308713 ubox
30 57 0.013434717 ubox
30 59 0.004531289 ubox
31 41 0.029745372 ubox
31 45 0.764180592 ubox
31 51 0.003702802 ubox
31 56 0.014736756 ubox
32 45 0.623645268 ubox
32 50 0.003767956 ubox
32 55 0.014737057 ubox
33 44 0.761915524 ubox
33 49 0.003734372 ubox
33 54 0.014706714 ubox
34 42 0.753749851 ubox
34 43 0.655761173 ubox
35 41 0.847841093 ubox
35 52 0.013432340 ubox
36 40 0.834822758 ubox
36 51 0.014339312 ubox
37 50 0.014375121 ubox
38 49 0.014317539 ubox
47 56 0.004307397 ubox
47 76 0.007771440 ubox
48 55 0.004037574 ubox
48 75 0.008198823 ubox
49 60 0.012834193 ubox
49 70 0.003427176 ubox
49 74 0.008259663 ubox
50 59 0.012906549 ubox
50 69 0.003433957 ubox
51 58 0.012673816 ubox
51 68 0.003393422 ubox
52 57 0.011272633 ubox
54 60 0.014093286 ubox
54 70 0.050932588 ubox
55 59 0.012774394 ubox
55 61 0.014876464 ubox
55 69 0.051252571 ubox
55 71 0.003941147 ubox
56 60 0.015502479 ubox
56 68 0.051249852 ubox
56 70 0.004240260 ubox
59 73 0.037061527 ubox
60 72 0.038073824 ubox
60 76 0.004500081 ubox
61 75 0.004528007 ubox
61 76 0.006991921 ubox
62 75 0.006204391 ubox
62 76 0.043310556 ubox
63 75 0.046317651 ubox
64 74 0.043217837 ubox
65 74 0.048411490 ubox
66 73 0.049788407 ubox
66 76 0.019920930 ubox
67 73 0.070824399 ubox
67 75 0.021283338 ubox
67 76 0.018557436 ubox
68 72 0.072158199 ubox
68 75 0.017111225 ubox
68 76 0.041325783 ubox
69 75 0.042288455 ubox
69 76 0.018687698 ubox
70 75 0.015637564 ubox
70 76 0.016950511 ubox
71 75 0.014997554 ubox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
14 65 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
