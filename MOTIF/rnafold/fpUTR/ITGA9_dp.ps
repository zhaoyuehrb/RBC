%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ITGA9)
} def

/sequence { (\
CGCGCUCGGCGCCCUGCUCGCCGGGCAGAGGGGAAGGCGGCGGCCGGCUGGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.080058037 ubox
1 39 0.004686671 ubox
1 42 0.030442472 ubox
1 46 0.256368843 ubox
1 50 0.238659613 ubox
2 10 0.085311042 ubox
2 12 0.047694479 ubox
2 38 0.004908675 ubox
2 41 0.030821624 ubox
2 44 0.006273419 ubox
2 45 0.259805002 ubox
2 48 0.133749371 ubox
2 49 0.233252947 ubox
3 9 0.085310712 ubox
3 11 0.054281760 ubox
3 37 0.004924550 ubox
3 39 0.021751916 ubox
3 40 0.022559586 ubox
3 42 0.008755421 ubox
3 43 0.006517494 ubox
3 46 0.075825619 ubox
3 47 0.125891960 ubox
3 50 0.125699596 ubox
4 10 0.054554992 ubox
4 26 0.107293126 ubox
4 38 0.030276303 ubox
4 41 0.008985607 ubox
4 44 0.284396898 ubox
4 45 0.083865417 ubox
4 48 0.409357201 ubox
4 49 0.072515696 ubox
5 9 0.054159614 ubox
5 25 0.107427332 ubox
5 37 0.030238283 ubox
5 40 0.008949951 ubox
5 43 0.284495175 ubox
5 47 0.407816727 ubox
5 51 0.031699788 ubox
5 52 0.835769957 ubox
5 53 0.026754281 ubox
6 24 0.107368608 ubox
6 36 0.022490974 ubox
6 37 0.007399851 ubox
6 39 0.004240400 ubox
6 42 0.047600308 ubox
6 43 0.095361308 ubox
6 46 0.074501456 ubox
6 47 0.091182137 ubox
6 50 0.008787855 ubox
6 51 0.838546141 ubox
6 52 0.022907976 ubox
7 23 0.107459014 ubox
7 36 0.020757977 ubox
7 39 0.007217188 ubox
7 42 0.300968979 ubox
7 46 0.413917642 ubox
7 50 0.840972355 ubox
7 51 0.017572724 ubox
8 22 0.107471780 ubox
8 38 0.007178006 ubox
8 41 0.304743322 ubox
8 45 0.419587823 ubox
8 49 0.840632330 ubox
9 21 0.107473279 ubox
9 41 0.005134756 ubox
9 44 0.419188209 ubox
9 48 0.841207595 ubox
10 20 0.107440184 ubox
10 37 0.003177190 ubox
10 39 0.305001146 ubox
10 40 0.004130431 ubox
10 42 0.278882887 ubox
10 43 0.312615075 ubox
10 46 0.158492853 ubox
10 47 0.822861662 ubox
11 17 0.026014881 ubox
11 19 0.101643393 ubox
11 26 0.019675836 ubox
11 38 0.305871278 ubox
11 41 0.394301187 ubox
11 44 0.779091868 ubox
11 45 0.161103182 ubox
11 48 0.014626728 ubox
12 16 0.028293990 ubox
12 25 0.019690773 ubox
12 31 0.173725039 ubox
12 32 0.076198179 ubox
12 33 0.054757995 ubox
12 37 0.305327087 ubox
12 40 0.393603452 ubox
12 43 0.797806326 ubox
12 47 0.015378752 ubox
12 52 0.075634556 ubox
12 53 0.033659301 ubox
13 24 0.019684483 ubox
13 30 0.174808284 ubox
13 31 0.076263935 ubox
13 32 0.055024048 ubox
13 33 0.015361076 ubox
13 36 0.303181017 ubox
13 37 0.028162346 ubox
13 39 0.390904937 ubox
13 40 0.132163214 ubox
13 42 0.797757763 ubox
13 43 0.041789135 ubox
13 46 0.016077975 ubox
13 47 0.010733553 ubox
13 51 0.080136990 ubox
13 52 0.045837852 ubox
13 53 0.006029635 ubox
14 23 0.019672991 ubox
14 28 0.219708548 ubox
14 30 0.071510357 ubox
14 31 0.052132840 ubox
14 32 0.019296721 ubox
14 33 0.281967361 ubox
14 36 0.039592237 ubox
14 37 0.342750516 ubox
14 39 0.134883960 ubox
14 40 0.796877917 ubox
14 42 0.042153085 ubox
14 43 0.177656146 ubox
14 46 0.012928740 ubox
14 50 0.079928980 ubox
14 51 0.045842040 ubox
14 52 0.006095667 ubox
15 27 0.227125840 ubox
15 29 0.050288038 ubox
15 30 0.038474960 ubox
15 31 0.017180320 ubox
15 32 0.284302492 ubox
15 35 0.041112671 ubox
15 36 0.340185246 ubox
15 39 0.796897402 ubox
15 42 0.178818936 ubox
15 46 0.004048578 ubox
15 50 0.042971331 ubox
15 51 0.005627308 ubox
16 22 0.003205636 ubox
16 26 0.235084707 ubox
16 38 0.814177139 ubox
16 41 0.193000605 ubox
16 44 0.020994058 ubox
16 45 0.004148433 ubox
16 48 0.091808744 ubox
16 49 0.006520413 ubox
17 25 0.235036402 ubox
17 28 0.028023610 ubox
17 30 0.286778318 ubox
17 32 0.014201022 ubox
17 33 0.018188284 ubox
17 36 0.183749944 ubox
17 37 0.801948813 ubox
17 40 0.191907664 ubox
17 43 0.020938769 ubox
17 47 0.092100195 ubox
18 23 0.003942834 ubox
18 24 0.229465394 ubox
18 25 0.006828679 ubox
18 27 0.027944041 ubox
18 29 0.286874208 ubox
18 31 0.014158374 ubox
18 32 0.016349645 ubox
18 33 0.041887427 ubox
18 34 0.609029843 ubox
18 35 0.181007101 ubox
18 36 0.598279242 ubox
18 37 0.004347456 ubox
18 39 0.032080458 ubox
18 40 0.022024620 ubox
18 42 0.003955665 ubox
18 43 0.015680678 ubox
18 46 0.086343972 ubox
18 47 0.004093608 ubox
19 23 0.221504512 ubox
19 24 0.048046842 ubox
19 28 0.286828624 ubox
19 30 0.014195703 ubox
19 31 0.015143571 ubox
19 32 0.053849428 ubox
19 33 0.752739394 ubox
19 36 0.036708269 ubox
19 39 0.190376333 ubox
19 42 0.035840086 ubox
19 46 0.018530596 ubox
20 26 0.188695563 ubox
20 38 0.193149559 ubox
20 41 0.036091596 ubox
20 44 0.085463177 ubox
20 45 0.013261102 ubox
20 48 0.004035279 ubox
21 25 0.187920060 ubox
21 31 0.748290219 ubox
21 32 0.265844801 ubox
21 33 0.414776367 ubox
21 37 0.193147071 ubox
21 40 0.036093263 ubox
21 43 0.086602504 ubox
21 47 0.004074567 ubox
22 30 0.748345657 ubox
22 31 0.268774186 ubox
22 32 0.412869697 ubox
22 36 0.193090078 ubox
22 39 0.036087426 ubox
22 42 0.086599469 ubox
22 46 0.004074018 ubox
23 38 0.035493114 ubox
23 41 0.086328150 ubox
23 45 0.003939178 ubox
24 44 0.003799503 ubox
25 38 0.085340663 ubox
25 41 0.003565287 ubox
26 37 0.085353823 ubox
26 40 0.003731530 ubox
27 49 0.004012731 ubox
28 48 0.004113344 ubox
29 49 0.016197466 ubox
30 48 0.016524469 ubox
30 49 0.016150810 ubox
31 48 0.017453134 ubox
31 49 0.028839122 ubox
32 48 0.030149026 ubox
32 49 0.085643860 ubox
33 48 0.090090439 ubox
35 49 0.036413430 ubox
36 45 0.220523255 ubox
36 48 0.037539297 ubox
36 49 0.004916962 ubox
37 44 0.220761486 ubox
37 48 0.005327579 ubox
38 43 0.220690744 ubox
38 46 0.040511902 ubox
38 47 0.004598218 ubox
38 50 0.028094687 ubox
39 45 0.040796031 ubox
39 49 0.028394628 ubox
40 44 0.040138611 ubox
40 48 0.028683737 ubox
41 47 0.028682069 ubox
44 51 0.021300875 ubox
44 52 0.040699719 ubox
44 53 0.019618176 ubox
45 50 0.022105056 ubox
45 51 0.042244121 ubox
45 52 0.024375387 ubox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
showpage
end
%%EOF
