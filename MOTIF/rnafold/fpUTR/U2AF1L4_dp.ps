%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (U2AF1L4)
} def

/sequence { (\
AAGCAACGGAAGUGACGUAAGAGCAGCCAGACCUGGAGGGCUUGGGUAAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.067080209 ubox
2 42 0.074454970 ubox
3 13 0.082067921 ubox
3 18 0.129093042 ubox
3 24 0.508495869 ubox
3 27 0.015687457 ubox
3 41 0.075371733 ubox
3 47 0.093685963 ubox
4 12 0.086218939 ubox
4 14 0.187166822 ubox
4 17 0.131824712 ubox
4 23 0.508194354 ubox
4 26 0.017037007 ubox
4 40 0.075291356 ubox
4 44 0.020746681 ubox
4 46 0.095697802 ubox
5 13 0.139193407 ubox
5 43 0.016307950 ubox
6 13 0.312644401 ubox
6 18 0.781046574 ubox
6 42 0.003462382 ubox
6 47 0.019435182 ubox
7 12 0.343713282 ubox
7 14 0.142456048 ubox
7 17 0.810015364 ubox
7 35 0.043797301 ubox
7 44 0.005929138 ubox
7 46 0.020066778 ubox
8 13 0.127177341 ubox
8 16 0.810184039 ubox
8 28 0.058169178 ubox
8 33 0.008398915 ubox
8 34 0.043198113 ubox
8 43 0.004094225 ubox
9 27 0.058229642 ubox
9 32 0.008463436 ubox
9 33 0.043013342 ubox
10 43 0.009761852 ubox
11 34 0.003322683 ubox
11 42 0.010464793 ubox
12 24 0.071957382 ubox
12 27 0.008238455 ubox
12 32 0.019274890 ubox
12 41 0.010542650 ubox
12 47 0.003177465 ubox
13 19 0.005499085 ubox
13 23 0.071397940 ubox
13 25 0.018324506 ubox
13 26 0.008277305 ubox
13 29 0.036558761 ubox
13 31 0.019373944 ubox
13 40 0.010448502 ubox
13 48 0.054768545 ubox
14 18 0.005333351 ubox
14 24 0.020882598 ubox
14 28 0.036678755 ubox
14 47 0.044342440 ubox
15 47 0.485374680 ubox
16 44 0.013446107 ubox
16 46 0.502238211 ubox
17 24 0.089555756 ubox
17 27 0.024266846 ubox
17 41 0.004632648 ubox
17 43 0.008372597 ubox
17 47 0.016598004 ubox
18 23 0.086986798 ubox
18 26 0.024221168 ubox
18 40 0.004618559 ubox
18 44 0.472731450 ubox
18 46 0.028132453 ubox
18 48 0.022055768 ubox
19 43 0.460244935 ubox
19 47 0.027359493 ubox
20 34 0.003663167 ubox
20 42 0.450497458 ubox
20 43 0.022354627 ubox
21 33 0.003768297 ubox
21 41 0.447337349 ubox
21 42 0.016078095 ubox
21 43 0.311533183 ubox
22 42 0.341409911 ubox
22 43 0.010181301 ubox
23 41 0.348504500 ubox
23 42 0.003502636 ubox
23 47 0.195364726 ubox
24 35 0.119400881 ubox
24 40 0.348494975 ubox
24 44 0.084179502 ubox
24 46 0.198607039 ubox
25 34 0.119500403 ubox
25 42 0.133666079 ubox
25 43 0.060335957 ubox
26 33 0.118339086 ubox
26 41 0.153130073 ubox
26 42 0.010194594 ubox
26 47 0.377318487 ubox
27 36 0.555360627 ubox
27 39 0.041189324 ubox
27 40 0.153392781 ubox
27 45 0.704142724 ubox
27 46 0.368731297 ubox
28 35 0.556146958 ubox
28 38 0.042147440 ubox
28 39 0.152508024 ubox
28 44 0.715294743 ubox
28 45 0.349781154 ubox
29 34 0.501062605 ubox
29 42 0.265096363 ubox
29 43 0.695647041 ubox
30 41 0.335236617 ubox
30 42 0.618874261 ubox
30 43 0.190208532 ubox
31 42 0.217905646 ubox
31 47 0.103844175 ubox
32 39 0.241034679 ubox
32 40 0.756104738 ubox
32 45 0.024309423 ubox
32 46 0.107037263 ubox
33 38 0.241708266 ubox
33 39 0.756051643 ubox
33 40 0.074292905 ubox
33 44 0.024762207 ubox
33 45 0.107013076 ubox
33 46 0.006332255 ubox
34 38 0.681122526 ubox
34 39 0.073355105 ubox
34 44 0.103347647 ubox
34 45 0.006486710 ubox
35 42 0.042436552 ubox
35 43 0.092461876 ubox
36 41 0.052287863 ubox
36 42 0.079359183 ubox
36 43 0.013472583 ubox
37 42 0.014991399 ubox
37 43 0.004455967 ubox
38 42 0.003821258 ubox
40 47 0.006967308 ubox
41 46 0.007110738 ubox
42 50 0.006245199 ubox
42 51 0.003852746 ubox
43 48 0.004131254 ubox
43 49 0.010080957 ubox
43 50 0.010836916 ubox
6 18 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
showpage
end
%%EOF
