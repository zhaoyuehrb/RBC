%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MUC17)
} def

/sequence { (\
UUUCGCCAGCUCCUCUGGGGGUGACAGGCAAGUGAGACGUGCUCAGAGCUCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005394432 ubox
1 21 0.008080015 ubox
1 24 0.072194109 ubox
1 27 0.022840170 ubox
1 28 0.004785908 ubox
1 31 0.017332131 ubox
1 32 0.066370530 ubox
1 35 0.007517075 ubox
1 36 0.006682816 ubox
1 37 0.165701018 ubox
1 47 0.007237321 ubox
1 48 0.007486305 ubox
2 8 0.006770622 ubox
2 9 0.007741623 ubox
2 20 0.005630972 ubox
2 21 0.054426531 ubox
2 23 0.076299368 ubox
2 24 0.032561117 ubox
2 26 0.053892682 ubox
2 27 0.012721150 ubox
2 28 0.004054571 ubox
2 30 0.017705782 ubox
2 31 0.086958017 ubox
2 32 0.048350297 ubox
2 34 0.007870815 ubox
2 35 0.007024372 ubox
2 36 0.186761046 ubox
2 37 0.004922294 ubox
2 46 0.007508670 ubox
2 47 0.009637401 ubox
2 48 0.046236994 ubox
3 8 0.008016402 ubox
3 19 0.004432092 ubox
3 20 0.072477439 ubox
3 21 0.317640828 ubox
3 23 0.022492036 ubox
3 24 0.393155485 ubox
3 26 0.017798603 ubox
3 27 0.008098557 ubox
3 28 0.028081502 ubox
3 30 0.090513192 ubox
3 31 0.062105442 ubox
3 34 0.005381405 ubox
3 35 0.194708950 ubox
3 37 0.008414362 ubox
3 45 0.004730394 ubox
3 46 0.008960877 ubox
3 47 0.058704738 ubox
4 17 0.021026687 ubox
4 19 0.088718179 ubox
4 20 0.436676732 ubox
4 23 0.424707038 ubox
4 27 0.069143599 ubox
4 34 0.195650438 ubox
4 36 0.009084355 ubox
4 39 0.003571659 ubox
4 46 0.059820155 ubox
4 53 0.096085345 ubox
5 16 0.017093471 ubox
5 22 0.423511686 ubox
5 29 0.290996692 ubox
5 33 0.187280477 ubox
5 38 0.003617862 ubox
5 40 0.003268543 ubox
5 42 0.004904293 ubox
5 49 0.045868194 ubox
5 52 0.103762131 ubox
6 18 0.522005771 ubox
6 19 0.007118005 ubox
6 20 0.007054638 ubox
6 21 0.422967556 ubox
6 28 0.291372720 ubox
6 32 0.187056693 ubox
6 39 0.003283641 ubox
6 41 0.004870355 ubox
6 48 0.045431998 ubox
7 17 0.626064181 ubox
7 18 0.005933682 ubox
7 19 0.009118153 ubox
7 20 0.405583330 ubox
7 23 0.439916223 ubox
7 27 0.285416393 ubox
7 34 0.003823311 ubox
8 14 0.024165074 ubox
8 16 0.626367123 ubox
8 22 0.444442149 ubox
8 33 0.003251295 ubox
8 50 0.170640047 ubox
9 13 0.025678929 ubox
9 15 0.620269757 ubox
9 22 0.302350570 ubox
9 29 0.149579132 ubox
9 33 0.008729149 ubox
9 42 0.003225608 ubox
9 49 0.180398364 ubox
10 18 0.153962376 ubox
10 19 0.271806827 ubox
10 20 0.455210016 ubox
10 21 0.318527411 ubox
10 27 0.008628755 ubox
10 28 0.149189550 ubox
10 32 0.009651936 ubox
10 36 0.006107243 ubox
10 41 0.003208221 ubox
10 48 0.174620851 ubox
11 17 0.142712569 ubox
11 18 0.261535153 ubox
11 19 0.495554488 ubox
11 20 0.318123069 ubox
11 21 0.029997108 ubox
11 24 0.032896553 ubox
11 26 0.009950993 ubox
11 27 0.134547153 ubox
11 31 0.009731605 ubox
11 35 0.006148338 ubox
11 47 0.151018159 ubox
12 17 0.259475489 ubox
12 18 0.505563097 ubox
12 19 0.342424079 ubox
12 20 0.056489715 ubox
12 21 0.083149464 ubox
12 23 0.039981142 ubox
12 27 0.011167964 ubox
12 28 0.004531799 ubox
12 34 0.006149181 ubox
12 46 0.133960885 ubox
13 17 0.502165160 ubox
13 18 0.341271634 ubox
13 19 0.058172134 ubox
13 20 0.083375674 ubox
13 21 0.042687812 ubox
13 27 0.005541117 ubox
13 28 0.020792038 ubox
13 32 0.013951000 ubox
13 36 0.005242465 ubox
13 46 0.011368792 ubox
13 48 0.149007256 ubox
14 18 0.052504606 ubox
14 19 0.076660970 ubox
14 20 0.042520044 ubox
14 21 0.008475147 ubox
14 24 0.098581121 ubox
14 26 0.004474166 ubox
14 28 0.069617994 ubox
14 31 0.011896898 ubox
14 35 0.005265062 ubox
14 45 0.012084186 ubox
14 47 0.174202772 ubox
15 19 0.042149627 ubox
15 20 0.009446351 ubox
15 21 0.008977747 ubox
15 23 0.099484056 ubox
15 27 0.109250406 ubox
15 34 0.005246403 ubox
15 46 0.187519738 ubox
16 20 0.008217123 ubox
16 23 0.003164263 ubox
16 26 0.111762804 ubox
16 30 0.003186052 ubox
16 45 0.206691697 ubox
16 53 0.022422258 ubox
17 22 0.009359636 ubox
17 25 0.111895579 ubox
17 29 0.003407851 ubox
17 43 0.006892477 ubox
17 44 0.207348212 ubox
17 52 0.038871441 ubox
18 42 0.013436800 ubox
18 43 0.206527818 ubox
18 44 0.005359701 ubox
18 51 0.037176007 ubox
18 52 0.414956154 ubox
19 42 0.206006591 ubox
19 43 0.006296972 ubox
19 44 0.005021552 ubox
19 50 0.035419237 ubox
19 51 0.459332728 ubox
19 52 0.173772642 ubox
20 42 0.007143734 ubox
20 43 0.005624471 ubox
20 49 0.033499035 ubox
20 50 0.460953227 ubox
20 51 0.173357530 ubox
20 52 0.055134511 ubox
21 29 0.021424021 ubox
21 38 0.131964621 ubox
21 40 0.142698825 ubox
21 42 0.005959951 ubox
21 49 0.495681967 ubox
21 50 0.033089981 ubox
21 51 0.056496311 ubox
22 28 0.021375203 ubox
22 30 0.012862432 ubox
22 37 0.133833537 ubox
22 39 0.144331859 ubox
22 41 0.005908854 ubox
22 45 0.036916408 ubox
22 48 0.493842189 ubox
22 53 0.064996535 ubox
23 29 0.014579938 ubox
23 38 0.151545598 ubox
23 44 0.043642116 ubox
23 51 0.048410763 ubox
23 52 0.112826693 ubox
24 33 0.057811573 ubox
24 40 0.005777668 ubox
24 43 0.034384643 ubox
24 50 0.038628743 ubox
25 32 0.059198837 ubox
25 34 0.193128949 ubox
25 39 0.006943129 ubox
25 41 0.006186104 ubox
26 33 0.188352554 ubox
26 40 0.005926904 ubox
26 43 0.024852816 ubox
26 50 0.063722530 ubox
27 42 0.019303301 ubox
27 43 0.486804484 ubox
27 44 0.084345750 ubox
27 49 0.061836749 ubox
27 50 0.631636929 ubox
27 51 0.152123365 ubox
27 52 0.266851580 ubox
28 40 0.008394829 ubox
28 42 0.514576018 ubox
28 43 0.009726886 ubox
28 49 0.688348204 ubox
28 50 0.045891954 ubox
28 51 0.264915191 ubox
29 39 0.008800722 ubox
29 41 0.514989982 ubox
29 48 0.688057976 ubox
30 40 0.492004557 ubox
31 43 0.025726958 ubox
31 50 0.118770278 ubox
32 38 0.482380236 ubox
32 40 0.004970521 ubox
32 42 0.027187016 ubox
32 49 0.127020657 ubox
33 37 0.436114160 ubox
33 39 0.044398527 ubox
33 41 0.026932746 ubox
33 45 0.773296189 ubox
33 48 0.103986277 ubox
33 53 0.017637038 ubox
34 38 0.049094902 ubox
34 40 0.019171312 ubox
34 44 0.797846856 ubox
34 51 0.029460178 ubox
34 52 0.030041833 ubox
35 43 0.797691376 ubox
35 50 0.029702932 ubox
36 42 0.795613543 ubox
36 44 0.028583484 ubox
36 49 0.028287386 ubox
36 51 0.040363883 ubox
37 43 0.027291040 ubox
37 50 0.040150405 ubox
38 53 0.157500632 ubox
39 49 0.034501912 ubox
39 52 0.165117589 ubox
40 48 0.034329807 ubox
41 49 0.216000909 ubox
42 48 0.216183370 ubox
43 47 0.194760907 ubox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
showpage
end
%%EOF
