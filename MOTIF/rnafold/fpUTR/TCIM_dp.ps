%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TCIM)
} def

/sequence { (\
AGAAUGAUUUCACUACAGACUCUCUGGAAAGCCUGGGAGCUGAAUUCCGGAAGAUCCCCACAUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.006358314 ubox
1 10 0.025648797 ubox
1 14 0.065598086 ubox
1 21 0.008451056 ubox
1 23 0.004253789 ubox
1 25 0.009402969 ubox
1 46 0.003749083 ubox
2 8 0.006909398 ubox
2 9 0.035307326 ubox
2 10 0.038190865 ubox
2 11 0.712748558 ubox
2 13 0.066639040 ubox
2 20 0.011515434 ubox
2 22 0.006724846 ubox
2 24 0.009983116 ubox
2 46 0.004388699 ubox
2 47 0.112156139 ubox
2 56 0.067612681 ubox
2 64 0.137496114 ubox
3 8 0.032916637 ubox
3 9 0.041741859 ubox
3 10 0.710553579 ubox
3 21 0.006490427 ubox
3 23 0.009560269 ubox
3 45 0.004419631 ubox
3 46 0.112110144 ubox
3 55 0.063881051 ubox
3 63 0.115060198 ubox
4 8 0.033552904 ubox
4 9 0.676955091 ubox
4 45 0.109957494 ubox
4 55 0.035121883 ubox
4 63 0.107279757 ubox
5 12 0.119477721 ubox
5 15 0.015032855 ubox
5 17 0.019307045 ubox
5 44 0.101722632 ubox
5 49 0.007256751 ubox
5 54 0.039614610 ubox
5 60 0.057665279 ubox
5 62 0.131558841 ubox
5 65 0.114512030 ubox
6 11 0.139985425 ubox
6 14 0.016850909 ubox
6 16 0.020816649 ubox
6 22 0.019932256 ubox
6 24 0.004551729 ubox
6 46 0.057222103 ubox
6 47 0.124240543 ubox
6 48 0.016738873 ubox
6 56 0.319775550 ubox
6 59 0.061189068 ubox
6 61 0.130912137 ubox
6 64 0.185516144 ubox
7 21 0.019613078 ubox
7 23 0.004441669 ubox
7 45 0.064351826 ubox
7 46 0.122252012 ubox
7 55 0.321043959 ubox
7 63 0.183202763 ubox
8 19 0.012826554 ubox
8 29 0.004362690 ubox
8 30 0.019019357 ubox
8 43 0.013710890 ubox
8 44 0.066127321 ubox
8 50 0.008737348 ubox
8 51 0.028058969 ubox
8 52 0.114905827 ubox
8 53 0.155947040 ubox
8 54 0.284836407 ubox
8 62 0.168549874 ubox
9 18 0.013672077 ubox
9 19 0.007953367 ubox
9 28 0.005052641 ubox
9 29 0.022109713 ubox
9 42 0.004956244 ubox
9 43 0.065806659 ubox
9 44 0.119685063 ubox
9 49 0.011165237 ubox
9 50 0.029217151 ubox
9 51 0.135365375 ubox
9 52 0.228798316 ubox
9 53 0.241530782 ubox
9 54 0.005250708 ubox
10 17 0.012271991 ubox
10 18 0.007131456 ubox
10 19 0.045453533 ubox
10 27 0.005112275 ubox
10 28 0.022862652 ubox
10 42 0.021832423 ubox
10 43 0.129576465 ubox
10 49 0.026896757 ubox
10 50 0.143593984 ubox
10 51 0.279313134 ubox
10 52 0.175275775 ubox
10 53 0.005414609 ubox
10 54 0.010586178 ubox
11 18 0.049206020 ubox
11 26 0.004715427 ubox
11 27 0.022955786 ubox
11 42 0.115069838 ubox
11 49 0.148250405 ubox
11 50 0.318251902 ubox
11 53 0.011086772 ubox
12 25 0.004192069 ubox
12 41 0.084306404 ubox
13 27 0.006780136 ubox
13 31 0.021383370 ubox
13 39 0.010793045 ubox
13 50 0.047240883 ubox
13 53 0.013313865 ubox
14 26 0.005167123 ubox
14 30 0.020321720 ubox
14 38 0.009940960 ubox
14 42 0.005845764 ubox
14 49 0.046132803 ubox
14 52 0.013084850 ubox
15 25 0.004657646 ubox
15 41 0.004101802 ubox
16 26 0.073768281 ubox
16 35 0.010989401 ubox
16 42 0.939671164 ubox
17 23 0.005512833 ubox
17 25 0.075457969 ubox
17 34 0.011060414 ubox
17 41 0.948283956 ubox
18 22 0.006161758 ubox
18 24 0.075643883 ubox
18 33 0.011044333 ubox
18 40 0.952073377 ubox
18 47 0.005834619 ubox
18 56 0.216452850 ubox
18 64 0.019676366 ubox
19 23 0.065812967 ubox
19 46 0.005805490 ubox
19 55 0.215702214 ubox
19 63 0.019211352 ubox
20 31 0.010404019 ubox
20 39 0.954576513 ubox
20 53 0.113295267 ubox
21 30 0.010172778 ubox
21 37 0.004358368 ubox
21 38 0.954697235 ubox
21 51 0.003457378 ubox
21 52 0.112023919 ubox
21 54 0.232772787 ubox
22 27 0.003465313 ubox
22 36 0.005631140 ubox
22 37 0.954790255 ubox
22 39 0.003960827 ubox
22 50 0.003747917 ubox
22 53 0.239434383 ubox
23 35 0.005771483 ubox
23 36 0.949611755 ubox
23 37 0.008855992 ubox
23 38 0.003981224 ubox
23 51 0.225519443 ubox
23 52 0.169072935 ubox
24 31 0.006989027 ubox
24 35 0.939163544 ubox
24 36 0.091217996 ubox
24 37 0.003924890 ubox
24 49 0.003261236 ubox
24 50 0.284041683 ubox
25 30 0.007882870 ubox
25 35 0.090373669 ubox
25 36 0.003623866 ubox
25 49 0.283889990 ubox
25 60 0.007967684 ubox
26 33 0.941806344 ubox
26 34 0.111843951 ubox
26 48 0.284186360 ubox
26 57 0.039359461 ubox
26 58 0.005125953 ubox
26 59 0.009009537 ubox
27 32 0.940145733 ubox
27 33 0.115323489 ubox
27 47 0.284192757 ubox
27 56 0.043663628 ubox
27 57 0.005414828 ubox
27 58 0.009004963 ubox
27 64 0.007798942 ubox
28 45 0.009237595 ubox
28 46 0.282238218 ubox
28 55 0.042799005 ubox
28 63 0.007625271 ubox
29 45 0.275567397 ubox
29 46 0.005415064 ubox
30 41 0.280246893 ubox
30 45 0.004484231 ubox
31 40 0.283495666 ubox
32 39 0.281988288 ubox
32 50 0.022209571 ubox
33 39 0.024075393 ubox
33 49 0.021947426 ubox
33 50 0.076829786 ubox
34 38 0.030175421 ubox
34 42 0.004966150 ubox
34 49 0.077196227 ubox
34 60 0.010002136 ubox
35 41 0.006947270 ubox
35 48 0.081055532 ubox
35 58 0.023655661 ubox
35 59 0.010520078 ubox
36 40 0.006932396 ubox
36 47 0.081043817 ubox
36 48 0.007893301 ubox
36 57 0.024097087 ubox
36 58 0.009737810 ubox
37 46 0.080856581 ubox
37 47 0.008085608 ubox
37 56 0.024419829 ubox
37 57 0.008866411 ubox
38 45 0.079611775 ubox
38 46 0.008165926 ubox
38 55 0.022739551 ubox
39 45 0.006832030 ubox
40 50 0.030056842 ubox
40 53 0.022601371 ubox
41 49 0.030328210 ubox
41 52 0.022668655 ubox
41 62 0.003614960 ubox
41 65 0.018042487 ubox
42 48 0.032771268 ubox
42 56 0.005388414 ubox
42 59 0.004320601 ubox
42 61 0.004997252 ubox
42 64 0.056089032 ubox
43 55 0.006127213 ubox
43 63 0.059131926 ubox
44 55 0.033561496 ubox
44 63 0.071770265 ubox
45 51 0.011987452 ubox
45 52 0.012714565 ubox
45 53 0.005161136 ubox
45 54 0.035447410 ubox
45 62 0.073395572 ubox
46 50 0.011674050 ubox
46 51 0.012891493 ubox
46 52 0.007444160 ubox
46 53 0.033812172 ubox
46 54 0.051167152 ubox
47 53 0.054893041 ubox
48 65 0.042219361 ubox
49 56 0.033354884 ubox
49 57 0.627472351 ubox
49 58 0.398855813 ubox
49 59 0.334370674 ubox
49 64 0.043036414 ubox
50 55 0.019744555 ubox
50 56 0.629211304 ubox
50 57 0.398597199 ubox
50 58 0.333339504 ubox
50 63 0.030020882 ubox
50 64 0.041066551 ubox
51 55 0.548058836 ubox
51 63 0.039394605 ubox
53 64 0.223237359 ubox
54 63 0.223038913 ubox
55 62 0.208798192 ubox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
51 55 0.9500000 lbox
showpage
end
%%EOF
