%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKRD52)
} def

/sequence { (\
CGCAGCCGCCGCCUGGGCCGCUCCGUGUCCCCGGUGGAGCCGCCGCCGCCGCCGCCGGGAGCUCGAUGCGGACGGAGCCCGGGCCGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.024359081 ubox
1 86 0.017120547 ubox
2 7 0.042907933 ubox
2 9 0.169765620 ubox
2 10 0.010458440 ubox
2 85 0.016427390 ubox
2 89 0.190819727 ubox
3 8 0.170145934 ubox
3 88 0.191063779 ubox
5 84 0.004773272 ubox
5 89 0.770663904 ubox
6 83 0.004731138 ubox
6 88 0.772358382 ubox
7 82 0.004666973 ubox
7 86 0.776444188 ubox
8 84 0.005779104 ubox
8 85 0.759991649 ubox
8 89 0.555867538 ubox
9 83 0.006623868 ubox
9 88 0.556936808 ubox
10 82 0.005813356 ubox
10 86 0.519377836 ubox
11 78 0.004849779 ubox
11 84 0.926906401 ubox
11 85 0.367604810 ubox
11 89 0.004145889 ubox
12 77 0.004856322 ubox
12 83 0.999924359 ubox
12 88 0.003381498 ubox
13 75 0.004855433 ubox
13 81 0.003190383 ubox
13 82 0.999939440 ubox
13 88 0.003871593 ubox
14 74 0.004850993 ubox
14 81 0.999203961 ubox
14 87 0.004555227 ubox
15 73 0.004848885 ubox
15 79 0.008384680 ubox
15 80 0.999899740 ubox
16 78 0.011651944 ubox
16 79 0.999887222 ubox
16 85 0.004649555 ubox
17 78 0.997502008 ubox
17 84 0.004653520 ubox
18 71 0.049508391 ubox
18 75 0.649105831 ubox
18 77 0.755628092 ubox
18 83 0.004645370 ubox
19 70 0.072841419 ubox
19 74 0.957023340 ubox
19 82 0.004630035 ubox
20 69 0.072962503 ubox
20 73 0.967657581 ubox
20 78 0.018880334 ubox
21 68 0.072960298 ubox
21 71 0.004617251 ubox
21 75 0.049380138 ubox
21 77 0.025209908 ubox
22 66 0.011098766 ubox
22 70 0.003510456 ubox
22 71 0.003501430 ubox
22 72 0.991863528 ubox
22 74 0.029707422 ubox
22 76 0.040625976 ubox
23 65 0.008362329 ubox
23 70 0.003229281 ubox
23 71 0.996455617 ubox
23 75 0.040827801 ubox
24 65 0.072320807 ubox
24 70 0.996461598 ubox
24 74 0.040784278 ubox
25 64 0.072744708 ubox
25 69 0.996440633 ubox
25 73 0.039553064 ubox
26 65 0.004423030 ubox
26 66 0.003532299 ubox
26 68 0.994346043 ubox
26 72 0.038021564 ubox
27 62 0.134832082 ubox
27 64 0.010457737 ubox
27 67 0.986043999 ubox
27 73 0.009782162 ubox
28 60 0.018142963 ubox
28 61 0.132901274 ubox
28 66 0.989639465 ubox
28 71 0.012488418 ubox
28 72 0.012405023 ubox
29 59 0.019147719 ubox
29 65 0.989308302 ubox
29 70 0.013715462 ubox
29 71 0.014051390 ubox
30 58 0.017816598 ubox
30 59 0.998988713 ubox
30 70 0.013393033 ubox
30 71 0.011017852 ubox
31 57 0.015496754 ubox
31 58 0.999435653 ubox
31 59 0.003233503 ubox
31 70 0.011051179 ubox
31 71 0.019538789 ubox
32 48 0.005690869 ubox
32 51 0.003905231 ubox
32 54 0.012794158 ubox
32 57 0.999455661 ubox
32 68 0.010317174 ubox
32 70 0.019597614 ubox
33 47 0.006858405 ubox
33 50 0.004207066 ubox
33 53 0.014675663 ubox
33 56 0.999470600 ubox
33 67 0.007848932 ubox
33 69 0.019387803 ubox
34 46 0.006905000 ubox
34 49 0.004252094 ubox
34 52 0.015025850 ubox
34 55 0.999479963 ubox
34 67 0.022603871 ubox
35 45 0.006920043 ubox
35 48 0.004322080 ubox
35 51 0.015568568 ubox
35 54 0.999041127 ubox
35 66 0.024726150 ubox
36 44 0.007255910 ubox
36 47 0.004731476 ubox
36 50 0.018542012 ubox
36 53 0.996155621 ubox
37 43 0.007283985 ubox
37 46 0.004750232 ubox
37 49 0.018779859 ubox
37 52 0.951442578 ubox
37 64 0.026936128 ubox
38 63 0.026958397 ubox
39 46 0.111301067 ubox
39 49 0.480235516 ubox
39 52 0.302380669 ubox
39 62 0.026965445 ubox
40 45 0.111521386 ubox
40 48 0.457368596 ubox
40 51 0.405110080 ubox
40 61 0.026958462 ubox
41 48 0.516597322 ubox
41 51 0.148962485 ubox
42 47 0.514096248 ubox
42 49 0.693302980 ubox
42 50 0.116073611 ubox
42 52 0.008333765 ubox
43 48 0.698436257 ubox
43 51 0.010766585 ubox
43 58 0.026950367 ubox
44 51 0.037003952 ubox
44 57 0.026950888 ubox
45 50 0.035513103 ubox
45 52 0.006382762 ubox
45 55 0.003865816 ubox
45 56 0.026510925 ubox
46 51 0.008402953 ubox
46 54 0.005195250 ubox
47 54 0.023781234 ubox
48 53 0.022744576 ubox
48 55 0.011388568 ubox
49 54 0.011419097 ubox
49 58 0.004898206 ubox
50 57 0.004917372 ubox
51 56 0.004690556 ubox
52 59 0.003704367 ubox
53 58 0.003724002 ubox
61 69 0.025985581 ubox
62 68 0.026033229 ubox
63 71 0.009071154 ubox
63 72 0.003205134 ubox
64 70 0.011002790 ubox
64 71 0.006501636 ubox
65 69 0.010338488 ubox
5 89 0.9500000 lbox
6 88 0.9500000 lbox
7 86 0.9500000 lbox
8 85 0.9500000 lbox
11 84 0.9500000 lbox
12 83 0.9500000 lbox
13 82 0.9500000 lbox
14 81 0.9500000 lbox
15 80 0.9500000 lbox
16 79 0.9500000 lbox
17 78 0.9500000 lbox
18 77 0.9500000 lbox
19 74 0.9500000 lbox
20 73 0.9500000 lbox
22 72 0.9500000 lbox
23 71 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
