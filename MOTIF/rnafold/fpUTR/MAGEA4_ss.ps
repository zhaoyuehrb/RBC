%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUAGAGAGAAGCGAGCUGCUCUGUCUGACCAGCAGCUUGGGAUUGGCGGAGGGAAGCGGGCCAGGCCCUGUGAGGAGUCAAGGUUCUGAGCAGACAGGCCAACCGGAGGACAGGAUUCCCUGGAGGCCACAGAGGAGCACCAAGGAGAAGAUCUGCCUGUGGGUCCCCAUUGCCCAGCUUUUGCCUGCACUCUUGCCUGCUGCCCUGACCAGAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[-21.76553154 565.89379883]
[-28.51858711 579.28771973]
[-35.27164459 592.68157959]
[-42.02470016 606.07550049]
[-48.77775574 619.46936035]
[-55.53081131 632.86328125]
[-62.28386688 646.25714111]
[-61.58792114 662.06304932]
[-74.22662354 669.94421387]
[-80.97968292 683.33807373]
[-87.73273468 696.73199463]
[-88.80008698 705.79553223]
[-94.67729187 710.26660156]
[-101.61920929 723.56359863]
[-98.20419312 739.23895264]
[-108.44181061 751.59088135]
[-124.47863770 751.14410400]
[-134.01260376 738.24127197]
[-129.73004150 722.78033447]
[-114.91619873 716.62164307]
[-107.97428131 703.32470703]
[-101.12662506 689.97894287]
[-94.37356567 676.58502197]
[-87.62051392 663.19116211]
[-88.79948425 648.34326172]
[-75.67775726 639.50408936]
[-68.92469788 626.11022949]
[-62.17164230 612.71630859]
[-55.41858673 599.32244873]
[-48.66553116 585.92852783]
[-41.91247559 572.53466797]
[-35.15942001 559.14074707]
[-28.90361023 529.88330078]
[-6.65965223 522.04516602]
[-3.08577323 507.47711182]
[0.48810554 492.90908813]
[4.06198454 478.34106445]
[7.63586330 463.77304077]
[1.63814366 453.27392578]
[4.49050760 441.11172485]
[15.19559574 433.92648315]
[18.97526550 419.41046143]
[5.77642536 408.85211182]
[-1.49959779 393.53466797]
[-1.34367311 376.52227783]
[6.26124239 361.24157715]
[19.82691956 350.79168701]
[36.65084457 347.31552124]
[40.01821518 332.69836426]
[43.38558578 318.08123779]
[46.75296021 303.46408081]
[38.66093445 291.01199341]
[41.86770248 276.14016724]
[54.98347473 267.73693848]
[58.35084534 253.11979675]
[61.71821594 238.50265503]
[65.08558655 223.88551331]
[68.45295715 209.26837158]
[71.82032776 194.65122986]
[75.08419037 180.01062012]
[78.24437714 165.34729004]
[81.40457153 150.68395996]
[84.56475830 136.02064514]
[67.06272125 121.23366547]
[60.81998062 99.18817139]
[67.97055817 77.42018890]
[57.59147644 66.59084320]
[47.21239090 55.76150513]
[36.83330917 44.93216324]
[26.22670746 34.32556152]
[15.39736652 23.94647789]
[4.56802464 13.56739426]
[-6.26131678 3.18831158]
[-21.83730888 3.35025859]
[-32.67194748 -7.32987547]
[-32.73035049 -22.18020058]
[-43.55969238 -32.55928421]
[-54.38903046 -42.93836594]
[-65.21837616 -53.31745148]
[-81.01179504 -52.73146439]
[-92.53678131 -63.54582214]
[-92.95575714 -79.34455872]
[-82.02014923 -90.75455475]
[-66.21787262 -91.00647736]
[-54.92412567 -79.95085144]
[-54.83929062 -64.14678955]
[-44.00994873 -53.76770782]
[-33.18060684 -43.38862610]
[-22.35126686 -33.00954437]
[-7.51184225 -33.58145905]
[3.61850381 -23.20985985]
[4.11776638 -7.64102983]
[14.94710732 2.73805308]
[25.77644920 13.11713600]
[36.60578918 23.49621964]
[40.11186600 23.79007721]
[43.65081024 25.79180336]
[46.42370224 29.49888611]
[47.66265106 34.55307770]
[58.04173279 45.38241959]
[68.42081451 56.21176147]
[78.79989624 67.04110718]
[91.31209564 61.78673935]
[104.86612701 61.11486435]
[117.83662415 65.10604858]
[127.09383392 53.30333328]
[136.35104370 41.50061798]
[138.77970886 25.86692810]
[152.72238159 20.62755775]
[161.97958374 8.82484245]
[171.23680115 -2.97787309]
[174.06719971 -11.65404892]
[180.70945740 -14.88088417]
[190.13276672 -26.55142021]
[199.55606079 -38.22195816]
[208.97937012 -49.89249420]
[211.41520691 -68.14859009]
[228.02966309 -73.80958557]
[237.28688049 -85.61230469]
[246.54408264 -97.41501617]
[255.71754456 -109.28294373]
[264.80682373 -121.21546936]
[273.89608765 -133.14799500]
[282.90069580 -145.14454651]
[291.82019043 -157.20449829]
[286.51150513 -173.26824951]
[291.77426147 -189.17207336]
[305.34509277 -198.70718384]
[321.75888062 -198.27592468]
[330.50680542 -210.46089172]
[329.33682251 -226.46121216]
[341.21423340 -237.24577332]
[357.02774048 -234.54156494]
[364.64654541 -220.42301941]
[358.22619629 -205.72068787]
[342.69177246 -201.71293640]
[333.94384766 -189.52796936]
[339.29818726 -177.30282593]
[337.90347290 -163.92082214]
[330.01745605 -152.88641357]
[317.61181641 -147.14231873]
[303.88012695 -148.28500366]
[294.96063232 -136.22505188]
[293.51162720 -128.98402405]
[285.82861328 -124.05873871]
[276.73934937 -112.12620544]
[267.65008545 -100.19367981]
[266.09875488 -92.97387695]
[258.34680176 -88.15781403]
[249.08959961 -76.35509491]
[239.83238220 -64.55238342]
[240.97306824 -52.51480484]
[233.36430359 -42.60716629]
[220.64990234 -40.46919250]
[211.22659302 -28.79865646]
[201.80329895 -17.12812042]
[192.38000488 -5.45758438]
[183.03950500 6.27933550]
[173.78230286 18.08205032]
[164.52510071 29.88476562]
[162.75857544 44.67424393]
[148.15376282 50.75782394]
[138.89654541 62.56053925]
[129.63934326 74.36325836]
[134.70999146 81.80799103]
[137.94685364 90.21384430]
[139.17892456 99.13671875]
[138.34107971 108.10520172]
[135.47761536 116.64546967]
[130.73980713 124.30632782]
[124.37794495 130.68304443]
[116.72815704 135.43870544]
[108.19458771 138.32208252]
[99.22808838 139.18083191]
[96.06789398 153.84416199]
[92.90770721 168.50749207]
[89.74752045 183.17080688]
[90.99842072 192.21086121]
[86.43746948 198.01860046]
[83.07009888 212.63574219]
[79.70272827 227.25288391]
[76.33535767 241.87002563]
[72.96798706 256.48715210]
[69.60061646 271.10430908]
[77.71780396 284.39898682]
[74.09458160 299.17489624]
[61.37009811 306.83145142]
[58.00272751 321.44860840]
[54.63535690 336.06573486]
[51.26798630 350.68289185]
[62.14068222 358.17666626]
[69.80317688 368.89193726]
[73.36207581 381.54202271]
[72.41510010 394.61703491]
[67.09648132 406.56393433]
[58.05837631 415.97113037]
[46.39103317 421.73516846]
[33.49126053 423.19015503]
[29.71158981 437.70614624]
[35.01168442 455.34494019]
[22.20388985 467.34692383]
[18.63001060 481.91494751]
[15.05613136 496.48297119]
[11.48225307 511.05099487]
[7.90837431 525.61901855]
[19.54726028 532.71038818]
[26.00234032 547.44464111]
[22.61045074 565.70904541]
[26.18432999 580.27703857]
[29.75820923 594.84509277]
[33.33208847 609.41308594]
[45.06375504 620.87170410]
[40.74452209 636.69183350]
[24.81764030 640.59906006]
[13.66732407 628.57397461]
[18.76406097 612.98699951]
[15.19018269 598.41894531]
[11.61630344 583.85089111]
[8.04242420 569.28289795]
[0.59043556 568.43560791]
[-8.32881165 580.49578857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 29]
[5 28]
[6 27]
[7 26]
[9 24]
[10 23]
[11 22]
[13 21]
[14 20]
[34 205]
[35 204]
[36 203]
[37 202]
[38 201]
[41 199]
[42 198]
[48 190]
[49 189]
[50 188]
[51 187]
[54 184]
[55 183]
[56 182]
[57 181]
[58 180]
[59 179]
[60 177]
[61 176]
[62 175]
[63 174]
[66 102]
[67 101]
[68 100]
[69 99]
[70 95]
[71 94]
[72 93]
[73 92]
[76 89]
[77 88]
[78 87]
[79 86]
[105 164]
[106 163]
[107 162]
[109 160]
[110 159]
[111 158]
[113 157]
[114 156]
[115 155]
[116 154]
[118 151]
[119 150]
[120 149]
[121 147]
[122 146]
[123 145]
[124 143]
[125 142]
[129 137]
[130 136]
[208 219]
[209 218]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
