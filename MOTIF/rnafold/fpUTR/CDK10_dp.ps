%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CDK10)
} def

/sequence { (\
GCGUCUGCGCCUGCGCGCAAGAGAGGCGGGGCCAGCGCUCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006422563 ubox
1 10 0.003346087 ubox
1 16 0.003639147 ubox
1 18 0.013029793 ubox
1 27 0.155884888 ubox
1 36 0.012799790 ubox
1 38 0.980368013 ubox
1 43 0.024770729 ubox
2 7 0.006423181 ubox
2 9 0.003369821 ubox
2 15 0.003642690 ubox
2 17 0.013038843 ubox
2 26 0.156523650 ubox
2 28 0.032915088 ubox
2 35 0.012719436 ubox
2 37 0.982024793 ubox
2 41 0.015677926 ubox
2 42 0.024776261 ubox
3 8 0.003292694 ubox
3 14 0.003637652 ubox
3 16 0.012979777 ubox
3 27 0.033341055 ubox
3 32 0.007002411 ubox
3 36 0.981665500 ubox
3 38 0.018084173 ubox
3 40 0.016026254 ubox
3 43 0.033745360 ubox
4 13 0.003599934 ubox
4 15 0.011616601 ubox
4 22 0.073020087 ubox
4 24 0.155068076 ubox
4 26 0.033154749 ubox
4 31 0.006373863 ubox
4 35 0.197848243 ubox
4 37 0.017981503 ubox
4 42 0.033875917 ubox
5 21 0.078676696 ubox
5 23 0.155262899 ubox
5 25 0.033043178 ubox
5 30 0.006834042 ubox
5 31 0.060474029 ubox
5 35 0.961715817 ubox
5 41 0.033961797 ubox
5 42 0.003772589 ubox
6 15 0.004837348 ubox
6 19 0.129233725 ubox
6 20 0.055979554 ubox
6 22 0.108988932 ubox
6 24 0.023281547 ubox
6 29 0.006178766 ubox
6 30 0.060384431 ubox
6 34 0.971378084 ubox
6 37 0.009105204 ubox
6 41 0.003712808 ubox
7 14 0.012848556 ubox
7 16 0.004802091 ubox
7 18 0.181100987 ubox
7 32 0.154669089 ubox
7 33 0.967547347 ubox
7 36 0.009723605 ubox
7 38 0.043293092 ubox
8 13 0.012863647 ubox
8 15 0.004819706 ubox
8 17 0.181164918 ubox
8 28 0.062074778 ubox
8 31 0.179143341 ubox
8 35 0.009690535 ubox
8 37 0.043320745 ubox
9 14 0.004706178 ubox
9 16 0.181152138 ubox
9 27 0.062187179 ubox
9 32 0.929114574 ubox
9 36 0.043258600 ubox
9 43 0.006185031 ubox
10 15 0.180653897 ubox
10 26 0.062188226 ubox
10 29 0.031445801 ubox
10 30 0.322969454 ubox
10 31 0.923560880 ubox
10 35 0.042310883 ubox
10 42 0.006190559 ubox
11 25 0.062183158 ubox
11 28 0.030773635 ubox
11 29 0.335097305 ubox
11 30 0.917767474 ubox
11 31 0.059413361 ubox
11 35 0.009213586 ubox
11 41 0.006147175 ubox
11 42 0.003478516 ubox
12 24 0.061790308 ubox
12 28 0.346006153 ubox
12 29 0.828834050 ubox
12 30 0.077755968 ubox
12 34 0.012631409 ubox
12 41 0.003587643 ubox
13 18 0.003790318 ubox
13 27 0.358959123 ubox
13 32 0.032390630 ubox
13 33 0.010042780 ubox
13 38 0.004003580 ubox
13 40 0.005579929 ubox
14 26 0.358995880 ubox
14 28 0.884535972 ubox
14 31 0.033289127 ubox
14 37 0.004004978 ubox
15 27 0.898476376 ubox
15 32 0.004160210 ubox
15 36 0.004004333 ubox
15 38 0.005825847 ubox
16 26 0.898349360 ubox
16 28 0.162545794 ubox
16 31 0.003953266 ubox
16 35 0.003983167 ubox
16 37 0.005828756 ubox
17 27 0.163286320 ubox
17 36 0.005828962 ubox
18 26 0.163235596 ubox
18 35 0.005822045 ubox
21 40 0.005758484 ubox
22 39 0.005747982 ubox
23 38 0.005713036 ubox
23 40 0.016736433 ubox
24 39 0.016483110 ubox
25 33 0.017347742 ubox
25 38 0.015256893 ubox
25 39 0.008077695 ubox
26 32 0.017372302 ubox
26 36 0.014971835 ubox
26 38 0.010798909 ubox
26 43 0.080949560 ubox
27 31 0.017246022 ubox
27 35 0.014979931 ubox
27 37 0.012456450 ubox
27 41 0.007428231 ubox
27 42 0.082745409 ubox
28 36 0.012475188 ubox
28 40 0.020333844 ubox
29 39 0.019189805 ubox
29 40 0.174565690 ubox
30 38 0.017967567 ubox
30 39 0.175271700 ubox
30 40 0.005617063 ubox
31 38 0.175676193 ubox
31 43 0.033319211 ubox
32 37 0.175325656 ubox
32 42 0.033713677 ubox
33 41 0.033699698 ubox
35 43 0.008452467 ubox
36 42 0.008600666 ubox
37 43 0.004909959 ubox
38 42 0.005213055 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
showpage
end
%%EOF
