%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DAPL1)
} def

/sequence { (\
ACAGCUGGCAUUCAGCCUCCAGAGCACCAGCACUGGCACUGGCACUGGCACACGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 35 0.028430019 ubox
2 41 0.049229479 ubox
2 47 0.085562783 ubox
3 18 0.036188617 ubox
3 34 0.026917405 ubox
3 40 0.049046213 ubox
3 46 0.085841122 ubox
3 56 0.767290134 ubox
4 16 0.213461042 ubox
4 17 0.027338770 ubox
4 25 0.019270328 ubox
4 31 0.108260548 ubox
4 33 0.012670898 ubox
4 37 0.004966478 ubox
4 39 0.047283213 ubox
4 43 0.060633947 ubox
4 45 0.084274001 ubox
4 49 0.425809124 ubox
4 55 0.851701533 ubox
5 15 0.215973830 ubox
5 22 0.008629292 ubox
5 24 0.019290735 ubox
5 30 0.109098276 ubox
5 36 0.004623435 ubox
5 42 0.061077368 ubox
5 48 0.426244449 ubox
5 54 0.851763080 ubox
6 14 0.216680556 ubox
6 21 0.008702735 ubox
6 23 0.019145437 ubox
6 29 0.109094251 ubox
6 38 0.009056977 ubox
6 41 0.058088009 ubox
6 44 0.064647166 ubox
6 47 0.424140903 ubox
6 50 0.223789169 ubox
6 52 0.800462092 ubox
6 54 0.011088681 ubox
7 13 0.216700180 ubox
7 17 0.173395900 ubox
7 20 0.007680296 ubox
7 28 0.109108536 ubox
7 37 0.006277201 ubox
7 40 0.014151502 ubox
7 43 0.062056518 ubox
7 46 0.419848484 ubox
7 49 0.229072634 ubox
7 51 0.804255546 ubox
7 53 0.044421349 ubox
7 56 0.022370091 ubox
8 12 0.140379221 ubox
8 16 0.174130493 ubox
8 19 0.007235794 ubox
8 25 0.004318342 ubox
8 27 0.108903541 ubox
8 39 0.013806285 ubox
8 43 0.067643212 ubox
8 45 0.419059044 ubox
8 49 0.806163471 ubox
8 55 0.025239225 ubox
9 15 0.174057552 ubox
9 24 0.005751289 ubox
9 41 0.040562995 ubox
9 42 0.070661628 ubox
9 47 0.244744683 ubox
9 48 0.801875079 ubox
9 54 0.025216601 ubox
10 40 0.036793073 ubox
10 46 0.253579090 ubox
11 23 0.005368613 ubox
11 24 0.099818277 ubox
11 42 0.043186179 ubox
11 48 0.012164131 ubox
12 22 0.004370152 ubox
12 23 0.107887084 ubox
12 41 0.009426207 ubox
12 42 0.487783743 ubox
12 47 0.023278115 ubox
12 48 0.085559028 ubox
13 22 0.108260015 ubox
13 41 0.537952275 ubox
13 47 0.195495120 ubox
14 40 0.538258658 ubox
14 46 0.187185909 ubox
14 56 0.007370974 ubox
15 25 0.006535626 ubox
15 37 0.032329959 ubox
15 39 0.536097763 ubox
15 43 0.774992372 ubox
15 45 0.122974514 ubox
15 49 0.022842487 ubox
15 55 0.008277325 ubox
16 24 0.006419857 ubox
16 36 0.030314841 ubox
16 42 0.779561278 ubox
16 48 0.022880295 ubox
16 54 0.008307097 ubox
17 35 0.027017772 ubox
17 36 0.005886912 ubox
17 41 0.778020478 ubox
17 42 0.038944879 ubox
17 47 0.023002642 ubox
17 48 0.004859750 ubox
18 36 0.014721436 ubox
18 41 0.040221388 ubox
18 42 0.005750925 ubox
18 47 0.004787623 ubox
19 35 0.011371106 ubox
19 36 0.959611676 ubox
19 42 0.112278616 ubox
19 47 0.003308728 ubox
19 48 0.196750630 ubox
20 35 0.965027765 ubox
20 41 0.113154925 ubox
20 47 0.202267128 ubox
21 34 0.965128528 ubox
21 40 0.113269937 ubox
21 46 0.202137177 ubox
22 33 0.961689662 ubox
22 39 0.112797196 ubox
22 45 0.201304753 ubox
23 34 0.005310915 ubox
23 40 0.019900363 ubox
23 46 0.027018006 ubox
23 56 0.012633727 ubox
24 31 0.963374513 ubox
24 33 0.005362990 ubox
24 37 0.094419069 ubox
24 39 0.020665570 ubox
24 43 0.171428996 ubox
24 45 0.028902301 ubox
24 49 0.004389305 ubox
24 55 0.013825354 ubox
25 30 0.963160170 ubox
25 35 0.012715239 ubox
25 36 0.084334105 ubox
25 41 0.019962412 ubox
25 42 0.155504331 ubox
25 47 0.003209116 ubox
25 48 0.003896914 ubox
25 54 0.013812141 ubox
26 34 0.015599797 ubox
26 40 0.025696031 ubox
26 46 0.003512426 ubox
27 36 0.086896447 ubox
27 42 0.131451002 ubox
27 48 0.017004835 ubox
28 35 0.097817064 ubox
28 41 0.152180768 ubox
28 47 0.017217876 ubox
29 34 0.088340791 ubox
29 40 0.151939933 ubox
29 46 0.017210138 ubox
30 37 0.135239328 ubox
30 39 0.147925655 ubox
30 45 0.017147147 ubox
30 49 0.010324194 ubox
30 55 0.003347715 ubox
31 36 0.136388489 ubox
31 48 0.010305535 ubox
31 54 0.003345858 ubox
33 42 0.016181293 ubox
33 48 0.009833244 ubox
34 41 0.015765356 ubox
34 44 0.007950528 ubox
34 47 0.009909687 ubox
34 50 0.012251249 ubox
34 52 0.006489030 ubox
35 40 0.009785131 ubox
35 43 0.007797119 ubox
35 46 0.009864671 ubox
35 49 0.013783984 ubox
35 51 0.007275900 ubox
35 56 0.086174254 ubox
36 43 0.041795383 ubox
36 45 0.009746527 ubox
36 49 0.009810360 ubox
36 55 0.105362189 ubox
37 42 0.042829464 ubox
37 47 0.016410752 ubox
37 48 0.009814503 ubox
37 54 0.106378841 ubox
38 46 0.015453635 ubox
39 48 0.010865368 ubox
40 47 0.010728640 ubox
40 50 0.017053081 ubox
40 52 0.115194281 ubox
40 54 0.005391775 ubox
41 46 0.006983888 ubox
41 49 0.017027950 ubox
41 51 0.124965667 ubox
41 53 0.008788964 ubox
41 56 0.035738082 ubox
42 49 0.158904294 ubox
42 55 0.041678220 ubox
43 48 0.158975582 ubox
43 54 0.041652622 ubox
46 52 0.014332591 ubox
46 54 0.012903811 ubox
47 51 0.014752349 ubox
47 53 0.024286458 ubox
47 56 0.116733973 ubox
48 55 0.152508988 ubox
49 54 0.153247117 ubox
3 56 0.9500000 lbox
4 55 0.9500000 lbox
5 54 0.9500000 lbox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
