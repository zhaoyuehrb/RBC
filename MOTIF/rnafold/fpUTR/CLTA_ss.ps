%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGGUUGUUCCCUUUUCGGCUCUGCAACACCGCCUAGACCGACCGGAUACACGGGUAGGGCUUCCGCUUUACCCGUCUCCCUCCUGGCGCUUGUCCUCCUCUCCCAGUCGGCACCACAGCGGUGGCUGCCGGGCGUGGUGUCGGUGGGUCGGUUGGUUUUUGUCUCACCGUUGGUGUCCGUGCCGUUCAGUUGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[97.55809784 707.19830322]
[82.72633362 713.31365967]
[68.76812744 705.40496826]
[66.39102936 689.53900146]
[77.41854095 677.88677979]
[78.35108185 662.91577148]
[79.28363037 647.94482422]
[65.83554077 641.45806885]
[55.86851501 630.28649902]
[50.92461777 616.11175537]
[51.78661728 601.08361816]
[58.35424805 587.49395752]
[69.65474701 577.42706299]
[83.98681641 572.44030762]
[84.91935730 557.46936035]
[73.33848572 548.14080811]
[69.42499542 533.60986328]
[74.88205719 519.39459229]
[87.81259155 511.02157593]
[88.74514008 496.05059814]
[89.67768097 481.07962036]
[90.61022949 466.10864258]
[82.84082031 456.83108521]
[83.49978638 444.34646606]
[92.77857208 435.38049316]
[93.94383240 420.42581177]
[86.31964874 411.02856445]
[87.17269135 398.55569458]
[96.58979034 389.73510742]
[97.98748016 374.80035400]
[99.38516998 359.86563110]
[100.78285980 344.93087769]
[102.18054962 329.99612427]
[102.53044891 315.00021362]
[101.83084106 300.01654053]
[90.68037415 290.20825195]
[89.75742340 275.02264404]
[100.12086487 263.39349365]
[99.42126465 248.40982056]
[98.72165680 233.42614746]
[98.02204895 218.44247437]
[97.32244110 203.45880127]
[96.62284088 188.47512817]
[95.92323303 173.49143982]
[95.22362518 158.50776672]
[94.52402496 143.52409363]
[93.82441711 128.54042053]
[93.12480927 113.55673981]
[83.92870331 125.40712738]
[68.94209290 124.77354431]
[60.77899933 112.18927765]
[66.31018829 98.24632263]
[80.88021851 94.68030548]
[67.48348999 87.93287659]
[54.08676529 81.18544769]
[40.69004059 74.43802643]
[27.29331398 67.69059753]
[13.89658928 60.94317245]
[0.49986410 54.19574738]
[-12.89686108 47.44832230]
[-26.29358673 40.70089722]
[-39.69031143 33.95347214]
[-53.08703613 27.20604515]
[-69.41977692 28.68040657]
[-78.64047241 15.11903858]
[-71.26367188 0.47271329]
[-54.87799072 -0.19168456]
[-46.33961105 13.80932045]
[-32.94288635 20.55674553]
[-19.54616165 27.30417061]
[-6.14943552 34.05159760]
[7.24728966 40.79902267]
[20.64401436 47.54644775]
[34.04074097 54.29387283]
[47.43746567 61.04129791]
[60.83419037 67.78872681]
[74.23091888 74.53614807]
[87.62763977 81.28357697]
[91.72634888 84.17224884]
[95.08238220 87.66040802]
[97.62055206 91.62440491]
[104.15882111 78.12436676]
[110.69708252 64.62432861]
[109.74877167 48.83156586]
[122.25998688 40.74955750]
[128.79824829 27.24951553]
[129.72389221 18.15465164]
[135.54461670 13.59156799]
[142.29203796 0.19484235]
[149.03945923 -13.20188332]
[155.78689575 -26.59860802]
[162.53431702 -39.99533463]
[169.28173828 -53.39205933]
[175.92478943 -66.84085083]
[182.46305847 -80.34088898]
[189.00131226 -93.84092712]
[195.53958130 -107.34096527]
[202.07785034 -120.84100342]
[189.39270020 -112.83558655]
[174.56056213 -110.59772491]
[160.07817078 -114.50412750]
[148.38331604 -123.89723206]
[141.44461060 -137.19589233]
[140.43003845 -152.16154480]
[145.51039124 -166.27500916]
[155.83050537 -177.16058350]
[169.65316772 -182.98587036]
[184.65161133 -182.77030945]
[198.30116272 -176.55020142]
[208.30416870 -165.37255859]
[212.97683716 -151.11891174]
[211.53306580 -136.19001770]
[220.64904785 -148.10214233]
[229.76504517 -160.01426697]
[238.88102722 -171.92639160]
[247.90411377 -183.90904236]
[256.83374023 -195.96150208]
[265.76339722 -208.01394653]
[274.69302368 -220.06640625]
[276.02072144 -236.41171265]
[290.95388794 -243.18907166]
[304.13055420 -233.42651367]
[301.99569702 -217.16693115]
[286.74548340 -211.13676453]
[277.81582642 -199.08432007]
[268.88619995 -187.03186035]
[259.95657349 -174.97940063]
[258.49954224 -167.72822571]
[250.79315186 -162.81039429]
[241.67716980 -150.89826965]
[232.56117249 -138.98614502]
[223.44519043 -127.07402802]
[215.57789612 -114.30274200]
[209.03962708 -100.80270386]
[202.50135803 -87.30265808]
[195.96308899 -73.80261993]
[189.42481995 -60.30258179]
[189.33853149 -52.90696716]
[182.67846680 -46.64463425]
[175.93104553 -33.24790955]
[169.18360901 -19.85118294]
[162.43618774 -6.45445728]
[155.68876648 6.94226789]
[148.94132996 20.33899307]
[142.29829407 33.78778076]
[135.76002502 47.28782272]
[137.17599487 62.11497116]
[124.19712830 71.16259003]
[117.65885925 84.66263580]
[111.12059021 98.16267395]
[108.10848236 112.85713196]
[108.80809021 127.84081268]
[109.50769806 142.82449341]
[110.20730591 157.80816650]
[110.90690613 172.79183960]
[111.60651398 187.77551270]
[112.30612183 202.75918579]
[113.00572968 217.74287415]
[113.70532990 232.72654724]
[114.40493774 247.71022034]
[115.10454559 262.69390869]
[126.50649261 273.30679321]
[127.00254822 288.51232910]
[116.81452179 299.31692505]
[117.51412201 314.30059814]
[126.32550049 302.16143799]
[140.26028442 296.60971069]
[155.00527954 299.36383057]
[165.99649048 309.57135010]
[169.83183289 324.07272339]
[165.32417297 338.37939453]
[153.86874390 348.06304932]
[139.01132202 350.12634277]
[125.35070038 343.93057251]
[117.11528778 331.39382935]
[115.71759796 346.32855225]
[114.31991577 361.26330566]
[112.92222595 376.19805908]
[111.52453613 391.13278198]
[119.59325409 407.68133545]
[108.89850616 421.59106445]
[107.73324585 436.54574585]
[116.05834961 452.96679688]
[105.58121490 467.04116821]
[104.64866638 482.01214600]
[103.71612549 496.98315430]
[102.78357697 511.95413208]
[114.57508087 521.86706543]
[118.22586823 536.64965820]
[112.53934479 550.58264160]
[99.89034271 558.40191650]
[98.95779419 573.37286377]
[112.56022644 580.09967041]
[122.52408600 591.49108887]
[127.35448456 605.79077148]
[126.34484863 620.80969238]
[119.68009949 634.26129150]
[108.40374756 644.10961914]
[94.25461578 648.87738037]
[93.32206726 663.84832764]
[92.38952637 678.81933594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[7 199]
[14 192]
[15 191]
[19 187]
[20 186]
[21 185]
[22 184]
[25 182]
[26 181]
[29 179]
[30 178]
[31 177]
[32 176]
[33 175]
[34 165]
[35 164]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[81 150]
[82 149]
[83 148]
[85 146]
[86 145]
[88 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
[94 137]
[95 136]
[96 135]
[97 134]
[98 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
