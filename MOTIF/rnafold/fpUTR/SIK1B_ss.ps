%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGGCCGGGGCGGGGCCGGGCGCCGCGUGCGGCGGAGCGCGGCGGCUCCGGGCUGACAUGCGGCGCGGCCCCGGAGGCAGCAGCAGCGGCGGCGGCAGCCGGAGCAGUAGGCACCCGAGCAGCGCCAGCGGCCGAGCGGGCGGCUUCCUGGCCUGGGCGCUCCGGUGGCGGCGGAGGUGCGCGCGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[170.13850403 278.45141602]
[163.81748962 264.84829712]
[157.49647522 251.24517822]
[151.17546082 237.64205933]
[144.85444641 224.03894043]
[140.74378967 221.58383179]
[138.13882446 216.51408386]
[138.55680847 209.89424133]
[132.67732239 196.09454346]
[126.79781342 182.29486084]
[114.69099426 173.61878967]
[116.39994049 157.89015198]
[110.52044678 144.09046936]
[104.64094543 130.29077148]
[98.76144409 116.49108124]
[85.89357758 108.78277588]
[70.95242310 110.11017609]
[56.01127243 111.43756866]
[41.07012177 112.76496887]
[26.12896919 114.09236145]
[11.18781662 115.41976166]
[5.54843473 118.91181183]
[-0.15060927 119.00717163]
[-4.25481176 116.54129028]
[-19.23097038 117.38665771]
[-34.20713043 118.23202515]
[-49.18329239 119.07738495]
[-64.15944672 119.92275238]
[-79.13561249 120.76811981]
[-94.11177063 121.61347961]
[-109.08792877 122.45884705]
[-124.06408691 123.30421448]
[-139.04025269 124.14958191]
[-154.00910950 125.11555481]
[-168.96971130 126.20207214]
[-183.93031311 127.28859711]
[-198.89089966 128.37512207]
[-213.83206177 129.70251465]
[-228.74987793 131.27044678]
[-243.66770935 132.83836365]
[-258.58554077 134.40629578]
[-273.50335693 135.97422791]
[-283.25329590 148.41264343]
[-298.95266724 150.23072815]
[-311.28732300 140.34983826]
[-312.93930054 124.63212585]
[-302.92855835 112.40263367]
[-287.19427490 110.91690826]
[-275.07128906 121.05639648]
[-260.15347290 119.48847198]
[-245.23564148 117.92053986]
[-230.31781006 116.35261536]
[-215.39997864 114.78469086]
[-211.74449158 111.69237518]
[-206.10394287 110.87231445]
[-199.97743225 113.41452026]
[-185.01683044 112.32800293]
[-170.05622864 111.24147797]
[-155.09564209 110.15495300]
[-148.64346313 106.53002167]
[-139.88562012 109.17341614]
[-124.90945435 108.32805634]
[-109.93329620 107.48268890]
[-94.95713806 106.63732147]
[-79.98097229 105.79196167]
[-65.00481415 104.94659424]
[-50.02865601 104.10122681]
[-35.05249786 103.25585938]
[-20.07633591 102.41049957]
[-5.10017681 101.56513214]
[9.86042023 100.47860718]
[24.80157280 99.15121460]
[39.74272537 97.82381439]
[54.68387604 96.49642181]
[69.62503052 95.16902161]
[84.56617737 93.84162903]
[97.30819702 85.92702484]
[105.11990356 73.12166595]
[112.93161011 60.31630325]
[120.74331665 47.51094437]
[128.55502319 34.70558167]
[136.36672974 21.90022278]
[136.94833374 6.08971024]
[150.18170166 -0.74600869]
[157.99340820 -13.55136871]
[158.00531006 -31.95936775]
[173.71511841 -39.76769257]
[181.31950378 -52.69723892]
[178.84313965 -65.36434174]
[185.45375061 -75.98023987]
[197.14006042 -79.13603973]
[204.95176697 -91.94140625]
[212.76347351 -104.74676514]
[220.57518005 -117.55212402]
[221.15678406 -133.36264038]
[234.39015198 -140.19834900]
[242.20185852 -153.00370789]
[249.91017151 -165.87158203]
[257.51455688 -178.80113220]
[265.11895752 -191.73066711]
[264.35830688 -211.86602783]
[281.55740356 -220.68528748]
[288.74133301 -233.85310364]
[295.81893921 -247.07835388]
[302.78979492 -260.36019897]
[309.76062012 -273.64202881]
[308.58706665 -292.01260376]
[323.76141357 -300.81640625]
[330.51739502 -314.20880127]
[326.88427734 -329.83508301]
[336.94882202 -342.32846069]
[352.99029541 -342.10513306]
[362.70312500 -329.33639526]
[358.63641357 -313.81732178]
[343.90979004 -307.45285034]
[337.15383911 -294.06042480]
[340.63925171 -282.46813965]
[335.10940552 -271.25128174]
[323.04248047 -266.67120361]
[316.07162476 -253.38935852]
[309.10076904 -240.10751343]
[308.77563477 -232.71394348]
[301.90914917 -226.66918945]
[294.72521973 -213.50137329]
[298.48162842 -203.98107910]
[296.32543945 -193.75155640]
[288.73364258 -186.24824524]
[278.04849243 -184.12628174]
[270.44412231 -171.19673157]
[262.83972168 -158.26718140]
[262.15771484 -150.89796448]
[255.00721741 -145.19200134]
[247.19551086 -132.38664246]
[247.17266846 -117.49205780]
[233.38053894 -109.74041748]
[225.56883240 -96.93505859]
[217.75712585 -84.12969971]
[209.94541931 -71.32433319]
[210.47348022 -53.78897476]
[194.24905396 -45.09283829]
[186.64465332 -32.16329575]
[189.37631226 -20.37062645]
[183.13560486 -9.53314686]
[170.79876709 -5.73966217]
[162.98706055 7.06569767]
[162.96421814 21.96028519]
[149.17208862 29.71192932]
[141.36038208 42.51728821]
[133.54867554 55.32265091]
[125.73696899 68.12800598]
[117.92526245 80.93337250]
[110.11355591 93.73873138]
[113.28769684 98.18515778]
[114.33406830 104.16627502]
[112.56113434 110.61157990]
[118.44063568 124.41127014]
[124.32013702 138.21096802]
[130.19963074 152.01065063]
[142.72700500 161.67376709]
[140.59750366 176.41535950]
[146.47700500 190.21505737]
[152.35650635 204.01473999]
[158.45755005 217.71792603]
[164.77857971 231.32104492]
[171.09959412 244.92414856]
[177.42060852 258.52728271]
[183.74162292 272.13037109]
[190.17201233 285.68212891]
[196.71134949 299.18167114]
[203.25070190 312.68118286]
[217.90899658 317.95108032]
[224.34851074 331.73468018]
[219.23413086 345.67663574]
[225.77346802 359.17617798]
[232.42134094 372.62255859]
[239.17732239 386.01498413]
[245.93328857 399.40740967]
[261.02078247 404.11303711]
[268.28781128 418.14749146]
[263.42294312 433.18438721]
[249.31242371 440.30261230]
[234.32778931 435.27905273]
[227.35914612 421.09405518]
[232.54087830 406.16339111]
[225.78489685 392.77096558]
[219.02893066 379.37854004]
[213.20159912 374.81643677]
[212.27395630 365.71551514]
[205.73461914 352.21600342]
[191.62411499 347.58679199]
[184.79998779 333.98953247]
[189.75117493 319.22052002]
[183.21183777 305.72100830]
[176.67248535 292.22149658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[5 163]
[8 162]
[9 161]
[10 160]
[12 158]
[13 157]
[14 156]
[15 155]
[16 76]
[17 75]
[18 74]
[19 73]
[20 72]
[21 71]
[24 70]
[25 69]
[26 68]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 59]
[35 58]
[36 57]
[37 56]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[84 145]
[85 144]
[87 141]
[88 140]
[91 138]
[92 137]
[93 136]
[94 135]
[96 133]
[97 132]
[98 130]
[99 129]
[100 128]
[102 124]
[103 123]
[104 121]
[105 120]
[106 119]
[108 116]
[109 115]
[168 194]
[169 193]
[170 192]
[173 189]
[174 188]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
