%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHAF1A)
} def

/sequence { (\
GCGGCAGCAGCGGCGCGGGCGGGAGGGCGAAGAGCAGCGGCCGCCUGAGGGGAGCCCGCGCCUCCGCCGCCUGAGAGGAGGUCGAGCUGCCGCCGGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 93 0.702204250 ubox
1 99 0.160328249 ubox
2 92 0.704496255 ubox
2 95 0.685996796 ubox
2 98 0.146557904 ubox
3 91 0.704751507 ubox
3 94 0.709365574 ubox
4 90 0.704758823 ubox
4 93 0.709420314 ubox
5 89 0.704748483 ubox
5 92 0.708791197 ubox
6 88 0.704553530 ubox
7 87 0.704659800 ubox
7 90 0.709151319 ubox
8 86 0.703880582 ubox
8 89 0.709431951 ubox
9 63 0.013824641 ubox
9 88 0.709283687 ubox
10 59 0.005293245 ubox
10 62 0.007688659 ubox
10 67 0.131868803 ubox
10 70 0.018380181 ubox
10 82 0.012153145 ubox
10 87 0.709432497 ubox
11 58 0.005317104 ubox
11 66 0.132168210 ubox
11 69 0.020180012 ubox
11 81 0.011991650 ubox
11 84 0.049035951 ubox
11 86 0.708519439 ubox
12 57 0.005226217 ubox
12 62 0.995268147 ubox
12 63 0.006619158 ubox
12 64 0.005355795 ubox
12 65 0.072590978 ubox
12 68 0.021731275 ubox
12 83 0.028305716 ubox
13 56 0.005116545 ubox
13 61 0.998174670 ubox
13 62 0.006444649 ubox
13 64 0.049248583 ubox
13 67 0.021743706 ubox
13 82 0.022782697 ubox
14 60 0.999441587 ubox
14 66 0.021737014 ubox
14 81 0.022010210 ubox
15 55 0.004779542 ubox
15 59 0.999474805 ubox
15 65 0.020755193 ubox
15 70 0.006128994 ubox
16 47 0.009893854 ubox
16 54 0.004648273 ubox
16 58 0.999464011 ubox
16 69 0.006187747 ubox
16 73 0.007680487 ubox
17 46 0.018298136 ubox
17 57 0.999335247 ubox
17 63 0.019555490 ubox
17 64 0.004226706 ubox
17 68 0.005108583 ubox
17 72 0.008099421 ubox
18 45 0.020542539 ubox
18 56 0.999309033 ubox
18 62 0.020430117 ubox
18 67 0.003721158 ubox
18 68 0.004889822 ubox
18 71 0.008136164 ubox
19 44 0.020785581 ubox
19 55 0.999259913 ubox
19 61 0.020431818 ubox
19 67 0.006024560 ubox
19 70 0.008136780 ubox
20 43 0.021928329 ubox
20 47 0.228660798 ubox
20 54 0.972417871 ubox
20 60 0.020409338 ubox
20 66 0.006960586 ubox
20 69 0.008136275 ubox
20 73 0.018970289 ubox
21 42 0.034491825 ubox
21 45 0.068768347 ubox
21 46 0.804067354 ubox
21 59 0.019577950 ubox
21 65 0.005924254 ubox
21 68 0.007860273 ubox
21 72 0.019019003 ubox
22 41 0.034490710 ubox
22 42 0.016321329 ubox
22 44 0.068226081 ubox
22 45 0.811931998 ubox
22 46 0.016415752 ubox
22 56 0.003169696 ubox
22 57 0.003979815 ubox
22 64 0.004652726 ubox
22 65 0.006161495 ubox
22 67 0.006236628 ubox
22 71 0.019038019 ubox
23 41 0.016325493 ubox
23 44 0.810847399 ubox
23 45 0.019233372 ubox
23 56 0.003816662 ubox
23 64 0.008568877 ubox
23 70 0.019030283 ubox
24 46 0.032024800 ubox
24 63 0.009322871 ubox
25 42 0.802775844 ubox
25 45 0.027071228 ubox
25 46 0.567062445 ubox
25 57 0.017956108 ubox
25 62 0.009444177 ubox
26 41 0.804397901 ubox
26 42 0.150021695 ubox
26 44 0.019648094 ubox
26 45 0.571487914 ubox
26 46 0.003820361 ubox
26 56 0.018007740 ubox
26 61 0.009368074 ubox
26 62 0.003985079 ubox
26 68 0.019013681 ubox
27 35 0.034548534 ubox
27 38 0.073275997 ubox
27 41 0.150814790 ubox
27 44 0.571782817 ubox
27 55 0.018007508 ubox
27 59 0.006683568 ubox
27 61 0.004114173 ubox
27 67 0.019121539 ubox
28 34 0.034564891 ubox
28 37 0.073553207 ubox
28 39 0.802488378 ubox
28 40 0.144777874 ubox
28 43 0.572039459 ubox
28 54 0.018001727 ubox
28 58 0.006688364 ubox
28 60 0.004235890 ubox
28 66 0.019223303 ubox
29 38 0.801669823 ubox
29 42 0.569893539 ubox
29 57 0.006659855 ubox
29 65 0.019092097 ubox
31 63 0.017630322 ubox
32 62 0.018072503 ubox
32 64 0.006623300 ubox
33 63 0.006667420 ubox
34 41 0.506471124 ubox
34 61 0.018327217 ubox
34 62 0.006218268 ubox
35 40 0.505887624 ubox
35 47 0.017583508 ubox
35 60 0.018424865 ubox
36 46 0.017547518 ubox
37 44 0.012122004 ubox
37 45 0.013099674 ubox
37 59 0.020676719 ubox
38 43 0.016782998 ubox
38 58 0.020735255 ubox
39 56 0.012610553 ubox
39 57 0.018026087 ubox
40 55 0.016280847 ubox
40 56 0.014815564 ubox
41 50 0.007658496 ubox
41 51 0.005335062 ubox
41 52 0.013068778 ubox
41 54 0.019223557 ubox
42 49 0.007699499 ubox
42 50 0.005347787 ubox
42 51 0.013132906 ubox
43 55 0.005344092 ubox
44 50 0.020554826 ubox
44 51 0.037977507 ubox
44 52 0.065087910 ubox
44 54 0.005379896 ubox
45 49 0.020492478 ubox
45 50 0.037990463 ubox
45 51 0.065369999 ubox
45 52 0.019152163 ubox
46 50 0.059035699 ubox
46 51 0.022752020 ubox
46 53 0.020976975 ubox
47 57 0.004266562 ubox
47 59 0.003559388 ubox
49 56 0.010701910 ubox
49 57 0.017377344 ubox
49 65 0.006672090 ubox
50 55 0.011582789 ubox
50 56 0.017486828 ubox
50 57 0.003913403 ubox
50 64 0.006769867 ubox
51 55 0.017227099 ubox
51 56 0.003921691 ubox
51 63 0.006754497 ubox
52 62 0.006763278 ubox
54 61 0.007033606 ubox
55 60 0.007233649 ubox
60 82 0.007733244 ubox
61 81 0.012871653 ubox
62 80 0.017506067 ubox
62 86 0.010545754 ubox
63 79 0.022833573 ubox
63 85 0.680513034 ubox
64 78 0.023315225 ubox
64 81 0.085089668 ubox
64 84 0.706731870 ubox
65 77 0.023310597 ubox
65 80 0.085847919 ubox
65 84 0.590667528 ubox
66 82 0.753303841 ubox
66 83 0.589618615 ubox
66 87 0.009517292 ubox
67 78 0.086585132 ubox
67 81 0.960061767 ubox
67 86 0.010299128 ubox
68 77 0.086731376 ubox
68 80 0.957925278 ubox
68 84 0.203090940 ubox
69 82 0.162690162 ubox
69 83 0.200595614 ubox
70 78 0.956049326 ubox
70 81 0.262436353 ubox
71 77 0.957379897 ubox
71 78 0.061012668 ubox
71 80 0.262732308 ubox
71 81 0.005633991 ubox
72 76 0.862493475 ubox
72 77 0.060044673 ubox
72 79 0.261115304 ubox
72 80 0.005562836 ubox
72 84 0.008749368 ubox
73 83 0.010888531 ubox
74 82 0.010784033 ubox
75 83 0.007847205 ubox
76 82 0.007767598 ubox
92 99 0.014483467 ubox
93 98 0.014822357 ubox
94 100 0.083590752 ubox
95 99 0.083710017 ubox
1 93 0.9500000 lbox
2 92 0.9500000 lbox
3 91 0.9500000 lbox
4 90 0.9500000 lbox
5 89 0.9500000 lbox
6 88 0.9500000 lbox
7 87 0.9500000 lbox
8 86 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
63 85 0.9500000 lbox
64 84 0.9500000 lbox
66 82 0.9500000 lbox
67 81 0.9500000 lbox
68 80 0.9500000 lbox
70 78 0.9500000 lbox
71 77 0.9500000 lbox
72 76 0.9500000 lbox
showpage
end
%%EOF
