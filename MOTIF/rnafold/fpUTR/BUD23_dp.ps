%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BUD23)
} def

/sequence { (\
GACAUAAAAACCGGGUGCCGGCAGGCGCCAGUCGCAGGUGUGCUGCUGAGGCGUGAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.042376958 ubox
2 16 0.013707784 ubox
2 32 0.042252858 ubox
2 39 0.006089310 ubox
2 41 0.072520679 ubox
2 54 0.042759649 ubox
3 15 0.014384787 ubox
3 17 0.007813245 ubox
3 31 0.041588957 ubox
3 38 0.006259018 ubox
3 40 0.076031470 ubox
3 42 0.006550353 ubox
3 48 0.009146250 ubox
3 53 0.043816352 ubox
3 55 0.072017543 ubox
4 16 0.008446522 ubox
4 39 0.075984394 ubox
4 41 0.006749265 ubox
4 47 0.008163801 ubox
4 54 0.070974164 ubox
5 15 0.008400602 ubox
5 38 0.075158187 ubox
5 40 0.006763227 ubox
5 53 0.067988414 ubox
5 55 0.005496647 ubox
6 39 0.006560767 ubox
6 54 0.006124469 ubox
10 16 0.011398361 ubox
10 32 0.088971344 ubox
10 39 0.006209247 ubox
10 54 0.033595347 ubox
11 15 0.011926509 ubox
11 21 0.582778553 ubox
11 25 0.003907449 ubox
11 31 0.096453103 ubox
11 38 0.006456115 ubox
11 51 0.061600792 ubox
11 53 0.033841648 ubox
12 20 0.585403581 ubox
12 24 0.004180844 ubox
12 34 0.008115641 ubox
12 37 0.006348104 ubox
12 48 0.007672759 ubox
12 50 0.061807712 ubox
12 53 0.030570085 ubox
12 55 0.736921683 ubox
13 19 0.585341952 ubox
13 29 0.021465828 ubox
13 33 0.011011879 ubox
13 47 0.006175787 ubox
13 52 0.029865839 ubox
13 54 0.738468570 ubox
14 18 0.575892908 ubox
14 28 0.015797622 ubox
14 29 0.282768890 ubox
15 22 0.005025964 ubox
15 28 0.285974270 ubox
15 52 0.745013108 ubox
15 54 0.037538153 ubox
16 21 0.004983937 ubox
16 27 0.286257108 ubox
16 51 0.744455306 ubox
16 53 0.102871135 ubox
17 26 0.286775382 ubox
17 52 0.138442427 ubox
18 25 0.286801777 ubox
18 51 0.138586481 ubox
19 24 0.286692167 ubox
19 48 0.744494297 ubox
19 50 0.132451809 ubox
20 29 0.004484317 ubox
20 47 0.755757051 ubox
21 28 0.004568451 ubox
21 46 0.758084160 ubox
22 27 0.004566782 ubox
22 45 0.758093713 ubox
22 55 0.535240306 ubox
23 44 0.757600814 ubox
23 54 0.535006231 ubox
24 33 0.004150755 ubox
24 43 0.750693914 ubox
24 44 0.011595863 ubox
25 32 0.004282044 ubox
25 41 0.715701521 ubox
25 43 0.023436079 ubox
25 52 0.536706975 ubox
25 54 0.225269211 ubox
26 31 0.004290616 ubox
26 40 0.757047129 ubox
26 42 0.030653326 ubox
26 51 0.536783931 ubox
26 53 0.233781691 ubox
26 55 0.003406892 ubox
27 39 0.757279159 ubox
27 41 0.026496242 ubox
27 52 0.234525561 ubox
27 54 0.003338490 ubox
28 38 0.757637318 ubox
28 40 0.022286693 ubox
28 51 0.234476735 ubox
28 53 0.003337843 ubox
29 37 0.757240473 ubox
29 40 0.013454367 ubox
29 45 0.004600340 ubox
29 48 0.540296745 ubox
29 50 0.227638174 ubox
29 55 0.015953795 ubox
30 39 0.018568303 ubox
30 44 0.009600273 ubox
30 47 0.550678541 ubox
30 54 0.026094420 ubox
31 43 0.010089926 ubox
31 46 0.551992883 ubox
31 52 0.217213865 ubox
32 38 0.008128637 ubox
32 45 0.545278289 ubox
32 49 0.182476152 ubox
32 51 0.217012358 ubox
32 56 0.012141576 ubox
32 58 0.011713407 ubox
33 37 0.008360528 ubox
33 42 0.039026497 ubox
33 45 0.045199042 ubox
33 48 0.194176067 ubox
33 50 0.215178541 ubox
33 53 0.015672862 ubox
33 55 0.013571800 ubox
33 57 0.015062770 ubox
34 41 0.040037484 ubox
34 43 0.550646556 ubox
34 44 0.009637059 ubox
34 46 0.291854009 ubox
34 47 0.040809284 ubox
34 52 0.016325315 ubox
34 54 0.012268645 ubox
35 40 0.040043195 ubox
35 42 0.551038641 ubox
35 45 0.295127229 ubox
35 48 0.159954316 ubox
35 51 0.016116355 ubox
35 53 0.011993537 ubox
35 55 0.016616952 ubox
36 41 0.528362985 ubox
36 44 0.295116070 ubox
36 47 0.160274915 ubox
36 54 0.016606473 ubox
37 43 0.294943512 ubox
37 44 0.005615667 ubox
37 46 0.159841298 ubox
37 47 0.022254728 ubox
38 43 0.010358268 ubox
38 46 0.025461248 ubox
38 52 0.015696721 ubox
39 45 0.027539578 ubox
39 51 0.015573688 ubox
39 55 0.003320277 ubox
40 44 0.013430862 ubox
40 46 0.008340203 ubox
40 52 0.004160646 ubox
40 54 0.004990747 ubox
41 45 0.007867959 ubox
41 51 0.003975390 ubox
41 53 0.019708336 ubox
42 52 0.071840385 ubox
42 54 0.013703079 ubox
43 50 0.014244751 ubox
43 51 0.071685301 ubox
43 53 0.014130010 ubox
43 57 0.008301303 ubox
44 49 0.015271945 ubox
44 50 0.070621299 ubox
44 53 0.022546052 ubox
44 55 0.005584233 ubox
44 56 0.007796741 ubox
45 52 0.034245010 ubox
45 54 0.009867699 ubox
46 51 0.034154677 ubox
46 53 0.010112938 ubox
46 57 0.010101492 ubox
47 53 0.006261314 ubox
47 56 0.011941308 ubox
48 52 0.008453562 ubox
12 55 0.9500000 lbox
13 54 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
19 48 0.9500000 lbox
20 47 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
showpage
end
%%EOF
