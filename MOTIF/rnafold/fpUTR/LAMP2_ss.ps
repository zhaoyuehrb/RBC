%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAAGAGCCCCGCCCCUAGUCUUAUGACUCGCACUGAAGCGCCGAUUCCUGGCUUUUGCAAGGCUGUGGUCGGUGGUCAUCAGUGCUCUUGACCCAGGUCCAGCGAGCCUUUUCCCUGGUGUUGCAGCUGUUGUUGUACCGCCGCCGUCGCCGCCGUCGCCGCCUGCUCUGCGGGGUC\
) } def
/len { sequence length } bind def

/coor [
[106.83204651 280.22006226]
[97.62278748 292.51171875]
[83.49519348 298.53723145]
[68.24951935 296.67575073]
[55.98678589 287.42797852]
[50.00559616 273.28158569]
[51.91485977 258.04180908]
[61.20100021 245.80812073]
[75.36608887 239.87130737]
[77.18408203 224.98188782]
[79.00206757 210.09246826]
[80.82006073 195.20303345]
[82.63805389 180.31361389]
[84.45603943 165.42419434]
[86.27403259 150.53477478]
[81.52993011 149.00022888]
[76.95327759 147.02142334]
[72.58557892 144.61630249]
[68.46642303 141.80668640]
[64.63316345 138.61802673]
[53.02253723 148.11505127]
[41.41191101 157.61207581]
[29.80128670 167.10908508]
[24.50897217 182.63079834]
[8.37038231 185.54249573]
[-2.01248527 172.84886169]
[4.04137373 157.60803223]
[20.30426788 155.49845886]
[31.91489410 146.00144958]
[43.52552032 136.50442505]
[55.13614655 127.00740814]
[47.79396057 104.08591461]
[51.48068237 80.30123901]
[38.53390884 72.72620392]
[25.58713913 65.15117645]
[12.64036655 57.57614517]
[-0.30640480 50.00111389]
[-13.25317669 42.42608261]
[-26.19994736 34.85105133]
[-44.30588531 40.35501862]
[-60.42333603 31.06058502]
[-64.58336639 13.25338650]
[-77.78524017 6.13225937]
[-90.98712158 -0.98886782]
[-104.18899536 -8.10999489]
[-117.39086914 -15.23112202]
[-130.59274292 -22.35224915]
[-143.79463196 -29.47337723]
[-156.99650574 -36.59450531]
[-170.43757629 -43.25314713]
[-184.10165405 -49.44128418]
[-197.76573181 -55.62941742]
[-213.52879333 -54.27436829]
[-221.93060303 -66.57311249]
[-235.59468079 -72.76124573]
[-251.85253906 -70.61330414]
[-261.62570190 -83.78211212]
[-254.86036682 -98.72072601]
[-238.51612854 -100.06158447]
[-229.40653992 -86.42532349]
[-215.74246216 -80.23719025]
[-200.95674133 -82.03485107]
[-191.57759094 -69.29349518]
[-177.91351318 -63.10535812]
[-164.24943542 -56.91722488]
[-161.56193542 -57.80025101]
[-158.35829163 -57.65727234]
[-155.03292847 -56.28458786]
[-152.04724121 -53.62691116]
[-149.87538147 -49.79638290]
[-136.67349243 -42.67525482]
[-123.47161865 -35.55412674]
[-110.26974487 -28.43299866]
[-97.06787109 -21.31187248]
[-83.86598969 -14.19074440]
[-70.66411591 -7.06961727]
[-57.46223831 0.05151029]
[-47.47109985 -5.52179003]
[-35.91067123 -5.56819916]
[-25.66448593 0.03992846]
[-19.34434700 10.00536823]
[-18.62491608 21.90427780]
[-5.67814493 29.47930908]
[7.26862669 37.05434036]
[20.21539879 44.62937164]
[33.16217041 52.20440292]
[46.10894012 59.77943420]
[59.05571365 67.35446930]
[68.22895050 58.37349701]
[79.31164551 51.89431000]
[91.63773346 48.30630875]
[104.46639252 47.82513428]
[117.02661896 50.47970581]
[128.56353760 56.11048126]
[138.38375854 64.37905121]
[145.89709473 74.78845978]
[150.65199280 86.71310425]
[165.55662537 85.02439880]
[180.46127319 83.33569336]
[195.36590576 81.64698792]
[210.27053833 79.95828247]
[216.56571960 71.04653931]
[226.52709961 67.16469574]
[236.76234436 69.37462616]
[243.92706299 76.70631409]
[258.88131714 75.53591919]
[273.83560181 74.36551666]
[288.78985596 73.19512177]
[303.72158813 71.76535797]
[318.62622070 70.07664490]
[321.69351196 55.27633667]
[329.17510986 42.16648483]
[340.32739258 32.02474976]
[354.04971313 25.83502388]
[368.99304199 24.19202232]
[383.69256592 27.24413872]
[396.71121216 34.68014908]
[406.78036499 45.76089096]
[412.92312622 59.39273834]
[427.82775879 57.70402908]
[442.73242188 56.01532364]
[457.63705444 54.32661819]
[472.54168701 52.63790894]
[485.38305664 43.39616776]
[498.90048218 49.65143967]
[513.80511475 47.96273422]
[528.70977783 46.27402496]
[543.61437988 44.58531952]
[558.51904297 42.89661407]
[573.42370605 41.20790482]
[586.28363037 31.03173447]
[601.42449951 37.33134079]
[603.27075195 53.62623215]
[589.92303467 63.15362167]
[575.11236572 56.11254501]
[560.20776367 57.80125046]
[545.30310059 59.48995972]
[530.39849854 61.17866516]
[515.49383545 62.86737061]
[500.58920288 64.55607605]
[488.81390381 73.67703247]
[474.23040771 67.54254913]
[459.32574463 69.23125458]
[444.42111206 70.91996002]
[429.51647949 72.60867310]
[414.61184692 74.29737854]
[411.67462158 88.95799255]
[404.33981323 102.01061249]
[393.31481934 112.17079163]
[379.67074585 118.43424988]
[364.73864746 120.17616272]
[349.97930908 117.21343231]
[336.84072876 109.82386780]
[326.61572266 98.72018433]
[320.31491089 84.98128510]
[305.41027832 86.66999054]
[301.77279663 89.80249023]
[296.12130737 90.66559601]
[289.96026611 88.14939117]
[275.00601196 89.31978607]
[260.05172729 90.49018860]
[245.09745789 91.66058350]
[230.03077698 103.75513458]
[211.95924377 94.86292267]
[197.05461121 96.55162811]
[182.14997864 98.24033356]
[167.24533081 99.92903900]
[152.34069824 101.61774445]
[149.46443176 117.18822479]
[142.06570435 131.18719482]
[130.82096863 142.33477783]
[116.75830841 149.61174011]
[101.16345215 152.35276794]
[99.34546661 167.24218750]
[97.52747345 182.13160706]
[95.70948792 197.02102661]
[93.89149475 211.91046143]
[92.07350159 226.79988098]
[90.25551605 241.68930054]
[102.57598114 250.85998535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 179]
[10 178]
[11 177]
[12 176]
[13 175]
[14 174]
[15 173]
[20 31]
[21 30]
[22 29]
[23 28]
[33 88]
[34 87]
[35 86]
[36 85]
[37 84]
[38 83]
[39 82]
[42 77]
[43 76]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[50 65]
[51 64]
[52 63]
[54 61]
[55 60]
[97 168]
[98 167]
[99 166]
[100 165]
[101 164]
[105 162]
[106 161]
[107 160]
[108 159]
[109 156]
[110 155]
[119 146]
[120 145]
[121 144]
[122 143]
[123 142]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
