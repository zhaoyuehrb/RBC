%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SYCE1L)
} def

/sequence { (\
UUUCUUUUUUAACCAGUCAUCAAGCGAGGCUCGCGCGCAGGCCCCGCGUUGGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.040867467 ubox
1 16 0.011625238 ubox
1 53 0.006877256 ubox
1 54 0.033175143 ubox
1 55 0.089867076 ubox
2 11 0.050055855 ubox
2 12 0.016583016 ubox
2 15 0.013938502 ubox
2 16 0.009782530 ubox
2 28 0.003286474 ubox
2 52 0.006027892 ubox
2 53 0.037692926 ubox
2 54 0.132321889 ubox
2 55 0.008179387 ubox
3 11 0.018010868 ubox
3 15 0.011377163 ubox
3 27 0.003607821 ubox
3 29 0.004414889 ubox
3 52 0.036732877 ubox
3 53 0.140331505 ubox
3 54 0.008500442 ubox
4 16 0.049420445 ubox
4 26 0.003636374 ubox
4 28 0.005803094 ubox
4 51 0.034942364 ubox
4 52 0.140405941 ubox
5 12 0.049189998 ubox
5 15 0.047361212 ubox
5 16 0.021906584 ubox
5 27 0.005791028 ubox
5 51 0.119642105 ubox
5 52 0.003196868 ubox
5 53 0.011104325 ubox
5 54 0.028490645 ubox
5 55 0.044037652 ubox
6 11 0.055098298 ubox
6 12 0.022836664 ubox
6 15 0.026363573 ubox
6 16 0.013410824 ubox
6 23 0.003234096 ubox
6 26 0.005615670 ubox
6 51 0.006104765 ubox
6 52 0.009901904 ubox
6 53 0.029972755 ubox
6 54 0.057745173 ubox
6 55 0.373288780 ubox
7 11 0.022094005 ubox
7 15 0.015848097 ubox
7 16 0.023033267 ubox
7 22 0.003199902 ubox
7 23 0.003969420 ubox
7 51 0.006077368 ubox
7 52 0.025640531 ubox
7 53 0.055814062 ubox
7 54 0.507362019 ubox
7 55 0.038023523 ubox
8 15 0.025795958 ubox
8 16 0.017398750 ubox
8 22 0.003862153 ubox
8 23 0.003730342 ubox
8 24 0.004404816 ubox
8 51 0.014754419 ubox
8 52 0.045680643 ubox
8 53 0.534235252 ubox
8 54 0.050275093 ubox
8 55 0.031643405 ubox
9 15 0.020254690 ubox
9 16 0.023654479 ubox
9 22 0.003750875 ubox
9 23 0.006282455 ubox
9 51 0.030055704 ubox
9 52 0.536980575 ubox
9 53 0.050798998 ubox
9 54 0.042678511 ubox
9 55 0.015422075 ubox
10 15 0.025884071 ubox
10 22 0.006222879 ubox
10 51 0.538549400 ubox
10 52 0.036331242 ubox
10 53 0.039996878 ubox
10 54 0.019647206 ubox
11 50 0.541226838 ubox
12 49 0.541181849 ubox
13 29 0.020500195 ubox
13 41 0.003385822 ubox
13 48 0.540736019 ubox
13 52 0.234635598 ubox
14 28 0.020574496 ubox
14 40 0.003439790 ubox
14 51 0.235519009 ubox
15 31 0.057063577 ubox
15 50 0.230138704 ubox
16 25 0.020318327 ubox
16 30 0.066761368 ubox
16 38 0.003373924 ubox
16 42 0.044796369 ubox
16 47 0.008175467 ubox
16 49 0.162787873 ubox
17 24 0.019731204 ubox
17 27 0.006316734 ubox
17 29 0.066785822 ubox
17 37 0.003315162 ubox
17 41 0.044849472 ubox
17 46 0.006766106 ubox
17 48 0.110958863 ubox
17 52 0.182166487 ubox
17 53 0.221661865 ubox
18 26 0.006699121 ubox
18 28 0.066230141 ubox
18 40 0.044455981 ubox
18 51 0.232901207 ubox
18 52 0.233243236 ubox
19 49 0.053440107 ubox
19 50 0.231111277 ubox
20 27 0.064229219 ubox
20 41 0.004193464 ubox
20 48 0.060404481 ubox
20 52 0.439745928 ubox
20 53 0.174274311 ubox
21 26 0.064395311 ubox
21 40 0.004593919 ubox
21 51 0.699726240 ubox
21 52 0.173813225 ubox
22 50 0.701326592 ubox
23 31 0.009377536 ubox
23 49 0.650745902 ubox
23 50 0.052240073 ubox
24 30 0.010249232 ubox
24 34 0.066281837 ubox
24 36 0.008860038 ubox
24 47 0.991999871 ubox
24 49 0.062921137 ubox
25 29 0.010181928 ubox
25 33 0.066382078 ubox
25 35 0.008864188 ubox
25 46 0.992882163 ubox
25 48 0.064726629 ubox
25 51 0.009094950 ubox
26 32 0.066306618 ubox
26 34 0.008793396 ubox
26 45 0.991490397 ubox
26 47 0.064509483 ubox
26 50 0.009219875 ubox
27 31 0.057689139 ubox
27 49 0.009235150 ubox
28 43 0.987929451 ubox
28 44 0.101093350 ubox
28 45 0.049138402 ubox
29 36 0.003347552 ubox
29 38 0.003299961 ubox
29 42 0.989416624 ubox
29 43 0.093441311 ubox
29 44 0.049179648 ubox
29 47 0.009442742 ubox
30 35 0.003487293 ubox
30 37 0.003801332 ubox
30 40 0.026332697 ubox
30 41 0.988759253 ubox
30 46 0.009425731 ubox
30 52 0.019291895 ubox
31 39 0.035784536 ubox
31 40 0.894405006 ubox
31 41 0.060535799 ubox
31 51 0.019221123 ubox
31 52 0.011718149 ubox
31 53 0.022449771 ubox
32 40 0.402296119 ubox
32 46 0.004639744 ubox
32 48 0.013498659 ubox
32 51 0.023945380 ubox
32 52 0.028715664 ubox
33 42 0.083204818 ubox
33 45 0.004880135 ubox
33 47 0.019843845 ubox
33 49 0.055373836 ubox
33 50 0.017604837 ubox
34 41 0.083320659 ubox
34 46 0.019846465 ubox
34 48 0.059882406 ubox
34 51 0.007236246 ubox
35 42 0.038883514 ubox
35 45 0.013159273 ubox
35 47 0.066333822 ubox
35 49 0.046141574 ubox
35 50 0.005322381 ubox
36 41 0.039474697 ubox
36 46 0.066344636 ubox
36 48 0.048565168 ubox
37 45 0.065090854 ubox
37 47 0.049237145 ubox
38 46 0.049212516 ubox
41 47 0.004961159 ubox
42 46 0.004931456 ubox
43 52 0.005646985 ubox
44 51 0.005632567 ubox
44 52 0.010313947 ubox
45 51 0.010351325 ubox
46 50 0.006393786 ubox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
showpage
end
%%EOF
