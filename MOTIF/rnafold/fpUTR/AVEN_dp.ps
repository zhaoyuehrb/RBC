%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AVEN)
} def

/sequence { (\
GGGCGUCUCCGCCGCAGCUCGGCUCCCGCGCGCUCAGCACCGCCAGCGGCGGCCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.013887322 ubox
1 8 0.017266825 ubox
1 9 0.050860549 ubox
1 10 0.385250212 ubox
1 13 0.060833583 ubox
1 19 0.006298968 ubox
1 20 0.207119194 ubox
1 27 0.020422902 ubox
1 34 0.019608340 ubox
1 35 0.182736078 ubox
1 54 0.097253632 ubox
2 6 0.009080272 ubox
2 7 0.020477185 ubox
2 8 0.051477460 ubox
2 9 0.385102120 ubox
2 10 0.087374017 ubox
2 12 0.043828329 ubox
2 13 0.850371306 ubox
2 18 0.006673930 ubox
2 19 0.206551139 ubox
2 20 0.007341250 ubox
2 26 0.020446119 ubox
2 33 0.025979370 ubox
2 34 0.182375028 ubox
2 35 0.005459930 ubox
2 53 0.090627106 ubox
2 54 0.092124961 ubox
3 7 0.073385930 ubox
3 8 0.269709956 ubox
3 9 0.086921611 ubox
3 12 0.852420130 ubox
3 15 0.038636358 ubox
3 18 0.206748770 ubox
3 25 0.020439675 ubox
3 29 0.016712664 ubox
3 31 0.057755383 ubox
3 33 0.182576251 ubox
3 38 0.004144499 ubox
3 53 0.092258914 ubox
4 11 0.853427385 ubox
4 14 0.038849476 ubox
4 17 0.206648292 ubox
4 28 0.016732034 ubox
4 30 0.057927456 ubox
4 32 0.182539735 ubox
4 37 0.004147121 ubox
4 51 0.056351369 ubox
4 52 0.072774139 ubox
5 10 0.827685257 ubox
5 12 0.030668954 ubox
5 13 0.038172713 ubox
5 15 0.121430494 ubox
5 23 0.019779738 ubox
5 27 0.016617395 ubox
5 29 0.058532253 ubox
5 31 0.182280787 ubox
5 50 0.056261547 ubox
5 53 0.016575555 ubox
6 11 0.030263721 ubox
6 14 0.119190710 ubox
6 22 0.019150883 ubox
6 28 0.057635999 ubox
6 30 0.176844423 ubox
6 49 0.027788758 ubox
6 52 0.015894103 ubox
7 21 0.018918720 ubox
7 22 0.004698050 ubox
7 48 0.021344662 ubox
7 49 0.004809749 ubox
7 51 0.023842032 ubox
7 56 0.027989483 ubox
8 21 0.004631872 ubox
8 55 0.027689890 ubox
9 22 0.005173414 ubox
9 49 0.060268655 ubox
9 51 0.004001515 ubox
9 52 0.091859563 ubox
10 21 0.005383276 ubox
10 28 0.034670247 ubox
10 30 0.027076944 ubox
10 32 0.004269282 ubox
10 48 0.062627030 ubox
10 51 0.110623451 ubox
11 18 0.029768033 ubox
11 20 0.005229895 ubox
11 23 0.192942430 ubox
11 27 0.018899068 ubox
11 29 0.033395999 ubox
11 31 0.004677768 ubox
11 33 0.005115302 ubox
11 38 0.014718443 ubox
11 43 0.010330976 ubox
11 47 0.063803071 ubox
11 50 0.110906682 ubox
11 53 0.411398994 ubox
12 17 0.029728332 ubox
12 22 0.193652163 ubox
12 28 0.032428522 ubox
12 30 0.004168983 ubox
12 32 0.005042239 ubox
12 37 0.014727412 ubox
12 42 0.008795931 ubox
12 46 0.063733750 ubox
12 49 0.110918866 ubox
12 52 0.412266796 ubox
13 21 0.193650989 ubox
13 28 0.008718812 ubox
13 30 0.007387469 ubox
13 42 0.032809657 ubox
13 48 0.110915633 ubox
13 51 0.412318190 ubox
14 20 0.191246365 ubox
14 23 0.037962375 ubox
14 27 0.011651486 ubox
14 29 0.010850586 ubox
14 31 0.006445540 ubox
14 33 0.193401294 ubox
14 38 0.096911744 ubox
14 41 0.033346836 ubox
14 43 0.055326206 ubox
14 47 0.109601251 ubox
14 50 0.412540951 ubox
14 53 0.011389609 ubox
15 22 0.037977641 ubox
15 28 0.010832853 ubox
15 30 0.006428866 ubox
15 32 0.193012948 ubox
15 37 0.096725217 ubox
15 42 0.055391992 ubox
15 46 0.109231578 ubox
15 49 0.410978800 ubox
15 52 0.010656299 ubox
16 24 0.042199331 ubox
16 34 0.095529647 ubox
17 23 0.044030249 ubox
17 29 0.011081250 ubox
17 31 0.216129978 ubox
17 33 0.102624853 ubox
17 38 0.144648710 ubox
17 43 0.029121731 ubox
17 47 0.411185707 ubox
17 50 0.007146755 ubox
17 53 0.004421912 ubox
18 22 0.043717629 ubox
18 28 0.010509858 ubox
18 30 0.216199766 ubox
18 32 0.102496474 ubox
18 37 0.144790719 ubox
18 42 0.028998949 ubox
18 46 0.412801496 ubox
18 49 0.007156264 ubox
18 52 0.004364054 ubox
18 56 0.352813751 ubox
19 36 0.142507523 ubox
19 45 0.410414133 ubox
19 48 0.005766965 ubox
19 55 0.359956540 ubox
20 28 0.221345742 ubox
20 30 0.088162030 ubox
20 32 0.028878476 ubox
20 42 0.023237283 ubox
20 48 0.003955870 ubox
20 51 0.004118401 ubox
21 27 0.221801825 ubox
21 29 0.079865304 ubox
21 31 0.029980292 ubox
21 34 0.138303152 ubox
21 35 0.019914184 ubox
21 41 0.024031334 ubox
21 44 0.413646741 ubox
21 50 0.004137261 ubox
21 54 0.839797866 ubox
22 26 0.218233008 ubox
22 29 0.057388496 ubox
22 31 0.017499746 ubox
22 33 0.141911352 ubox
22 38 0.021848834 ubox
22 40 0.022988201 ubox
22 43 0.413743706 ubox
22 47 0.005846422 ubox
22 53 0.840559579 ubox
23 28 0.068281501 ubox
23 30 0.017713407 ubox
23 32 0.141895535 ubox
23 37 0.022002991 ubox
23 42 0.412891892 ubox
23 46 0.006481903 ubox
23 52 0.839254732 ubox
23 56 0.006133006 ubox
24 36 0.020960675 ubox
24 45 0.006417963 ubox
24 51 0.802113165 ubox
24 52 0.019542758 ubox
24 55 0.007105999 ubox
25 49 0.021850942 ubox
25 51 0.172825181 ubox
25 52 0.005028918 ubox
26 48 0.015607539 ubox
26 49 0.837034878 ubox
26 51 0.004743103 ubox
26 52 0.071455875 ubox
27 42 0.017098181 ubox
27 48 0.837888882 ubox
27 51 0.086587359 ubox
28 38 0.383202568 ubox
28 41 0.040622473 ubox
28 43 0.013874104 ubox
28 47 0.838038647 ubox
28 50 0.090298234 ubox
28 53 0.004214020 ubox
29 37 0.383606321 ubox
29 42 0.014209689 ubox
29 46 0.835974719 ubox
29 48 0.005413717 ubox
29 49 0.090151204 ubox
29 51 0.003397147 ubox
29 52 0.004076148 ubox
30 38 0.165298439 ubox
30 41 0.014673567 ubox
30 43 0.592901150 ubox
30 47 0.007342721 ubox
30 50 0.003780942 ubox
31 37 0.165532182 ubox
31 42 0.595532727 ubox
31 46 0.007407672 ubox
31 48 0.089913217 ubox
31 51 0.003883920 ubox
32 38 0.086837416 ubox
32 41 0.588175049 ubox
32 43 0.586661769 ubox
32 47 0.090666846 ubox
32 50 0.004004240 ubox
33 37 0.090392927 ubox
33 42 0.587900586 ubox
33 46 0.090665881 ubox
33 49 0.003997514 ubox
33 56 0.003606174 ubox
34 45 0.087797232 ubox
34 48 0.003319778 ubox
34 55 0.004833969 ubox
37 43 0.091893703 ubox
37 47 0.006241607 ubox
37 53 0.040951764 ubox
38 42 0.091352019 ubox
38 46 0.006252158 ubox
38 52 0.031993342 ubox
40 49 0.015284121 ubox
40 52 0.316720653 ubox
41 48 0.015585136 ubox
41 51 0.319524948 ubox
42 47 0.015203364 ubox
42 50 0.319618100 ubox
42 53 0.010549532 ubox
43 49 0.319616154 ubox
43 52 0.010571263 ubox
44 48 0.317290977 ubox
44 51 0.010562289 ubox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
showpage
end
%%EOF
