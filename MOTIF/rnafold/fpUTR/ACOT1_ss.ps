%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUAAGCAAGUUCCAGUGUGUCUAUAUUUGGUCUGGCUGAUCGGCUGGACUCUGGCCUUCCCCGCUCACAUUAGCAGACAGCUCUGCCCUAGUGGGCGUUUAGCCUGCGACGGCAGCCCGAGAGGAAGAGUUGGGCAGAGUUGCAGGGGUCUCCACAGCUGAGGCAGUUUGGCCGGAUUAUUUGGGUUCCUGCUCGG\
) } def
/len { sequence length } bind def

/coor [
[56.76410675 782.92120361]
[42.10981369 778.09881592]
[32.40676498 766.10491943]
[30.75116348 750.76660156]
[37.67131042 736.97839355]
[50.95900726 729.14001465]
[51.43253708 714.14746094]
[51.90606689 699.15496826]
[52.37959290 684.16241455]
[39.09689331 674.52392578]
[34.12334824 658.71020508]
[39.60659790 642.88995361]
[53.57415009 633.35864258]
[53.81094360 618.36053467]
[54.04773712 603.36236572]
[54.28453064 588.36425781]
[54.52132416 573.36614990]
[42.52003098 564.58508301]
[37.93642426 550.25140381]
[42.72793579 535.79821777]
[55.25598145 526.83416748]
[55.49277496 511.83599854]
[55.72956848 496.83789062]
[55.96636200 481.83975220]
[44.42632675 491.42242432]
[29.47753716 490.18399048]
[19.67175674 478.83291626]
[20.61858177 463.86282349]
[31.77636337 453.83767700]
[46.76206207 454.49252319]
[57.00257492 465.45217896]
[58.65682602 450.54370117]
[60.31108093 435.63519287]
[61.96533203 420.72668457]
[55.67883682 407.22375488]
[64.89086914 394.36105347]
[66.54512787 379.45254517]
[68.19937897 364.54403687]
[69.85363007 349.63552856]
[71.50788116 334.72705078]
[63.60487366 319.06295776]
[74.62496185 304.31600952]
[76.04365540 289.38327026]
[77.46235657 274.45050049]
[78.88105011 259.51776123]
[80.29974365 244.58499146]
[81.71844482 229.65222168]
[83.13713837 214.71946716]
[72.10524750 208.54000854]
[64.20344543 198.60853577]
[60.63489151 186.38043213]
[61.96440125 173.66482544]
[68.02938080 162.35696411]
[77.95878601 154.15573120]
[90.29804993 150.30839539]
[92.18744659 135.42787170]
[94.07684326 120.54733276]
[95.96623993 105.66680145]
[91.13645172 107.97183228]
[85.28553009 108.28449249]
[79.08022308 106.31303406]
[73.25535583 101.96617126]
[68.55752563 95.36640167]
[65.68677521 86.84830475]
[57.61341858 74.20628357]
[49.54005814 61.56425095]
[41.46670151 48.92222214]
[33.39334106 36.28019333]
[25.31998253 23.63816643]
[17.24662399 10.99613762]
[1.96234167 11.57747173]
[-11.47207737 4.47724724]
[-19.49544525 -8.30914974]
[-20.03779984 -23.29453659]
[-13.05355549 -36.45074844]
[-21.12691307 -49.09277725]
[-29.20027351 -61.73480606]
[-37.27363205 -74.37683105]
[-45.34698868 -87.01885986]
[-60.14289856 -94.09085846]
[-61.14638901 -110.45927429]
[-47.32515717 -119.28569031]
[-32.89730072 -111.49024200]
[-32.70495987 -95.09222412]
[-24.63160324 -82.45019531]
[-16.55824471 -69.80816650]
[-8.48488522 -57.16613770]
[-0.41152704 -44.52410889]
[14.46199608 -45.32654190]
[27.82909203 -38.53119659]
[36.05445480 -25.87379456]
[36.84508514 -10.69908810]
[29.88865280 2.92277956]
[37.96201324 15.56480789]
[46.03536987 28.20683670]
[54.10873032 40.84886551]
[62.18208694 53.49089432]
[70.25544739 66.13291931]
[78.32880402 78.77494812]
[85.75322723 79.83698273]
[83.18481445 65.05850983]
[96.44630432 58.04902649]
[107.21073151 68.49542236]
[100.60208130 81.96105194]
[108.02650452 83.02308655]
[119.32035065 73.15145874]
[130.61419678 63.27982712]
[141.90803528 53.40819931]
[153.20188904 43.53657150]
[164.49572754 33.66494370]
[175.78958130 23.79331589]
[187.08341980 13.92168808]
[184.82681274 0.31832209]
[189.55145264 -12.52096081]
[199.92198181 -21.27714920]
[213.15863037 -23.74327278]
[225.78195190 -19.37992668]
[237.23022461 -29.07203674]
[248.67849731 -38.76414871]
[260.12677002 -48.45625687]
[271.57504272 -58.14836884]
[283.02331543 -67.84047699]
[280.90133667 -83.12120819]
[287.39834595 -97.11380005]
[300.44116211 -105.35325623]
[315.86785889 -105.21041107]
[328.75585938 -96.73083496]
[334.99261475 -82.62033081]
[332.58804321 -67.38151550]
[322.30938721 -55.87703705]
[307.43658447 -51.77792740]
[292.71542358 -56.39220428]
[281.26715088 -46.70009232]
[269.81887817 -37.00798416]
[258.37060547 -27.31587219]
[246.92233276 -17.62376213]
[235.47406006 -7.93165112]
[237.21632385 8.38688850]
[228.80738831 22.67327499]
[213.38850403 29.20048141]
[196.95504761 25.21553421]
[185.66120911 35.08716202]
[174.36735535 44.95878983]
[163.07351685 54.83041763]
[151.77966309 64.70204926]
[140.48582458 74.57367706]
[129.19197083 84.44530487]
[117.89813232 94.31693268]
[110.84677124 107.55619812]
[108.95737457 122.43672943]
[107.06797791 137.31726074]
[105.17858124 152.19778442]
[119.41046906 162.49311829]
[126.43743134 178.49447632]
[124.40856171 195.76303101]
[113.97154999 209.55799866]
[98.06990051 216.13816833]
[96.65120697 231.07092285]
[95.23250580 246.00367737]
[93.81381226 260.93643188]
[92.39511108 275.86920166]
[90.97641754 290.80197144]
[89.55771637 305.73471069]
[97.16070557 316.16174316]
[95.66557312 328.57565308]
[86.41638184 336.38128662]
[84.76213074 351.28979492]
[83.10787964 366.19830322]
[81.45362854 381.10681152]
[79.79937744 396.01528931]
[85.96754456 410.58459473]
[76.87383270 422.38092041]
[75.21958160 437.28942871]
[73.56533051 452.19793701]
[71.91107941 467.10644531]
[70.96449280 482.07653809]
[70.72769928 497.07467651]
[70.49090576 512.07281494]
[70.25411224 527.07092285]
[82.49293518 536.42602539]
[86.82579041 551.02325439]
[81.79196930 565.20513916]
[69.51945496 573.60290527]
[69.28266144 588.60107422]
[69.04586792 603.59918213]
[68.80907440 618.59729004]
[68.57228088 633.59545898]
[80.18369293 641.03314209]
[86.55100250 653.14208984]
[86.10460663 666.70745850]
[79.06815338 678.18695068]
[67.37211609 684.63592529]
[66.89859009 699.62847900]
[66.42506409 714.62097168]
[65.95153046 729.61352539]
[78.71810150 738.27484131]
[84.75434113 752.47229004]
[82.13410950 767.67547607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 192]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[21 179]
[22 178]
[23 177]
[24 176]
[31 175]
[32 174]
[33 173]
[34 172]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[55 152]
[56 151]
[57 150]
[58 149]
[64 99]
[65 98]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[105 148]
[106 147]
[107 146]
[108 145]
[109 144]
[110 143]
[111 142]
[112 141]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
