%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:47:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUGCUUGCCCGGCUCGCUCACGGGUCGUUGAGGCCGGUGACAUGUCUGUGAGCUGCGGAGGCUGCGGCCCCCAGAUCUUUCUCUUUGACACUUUGCAAUAAAAAAGGGCAGUGAGAUUGAAUAGGUGUUUUGUGGAUUAACUCUUCAUUGAUUAUAUACAACAAAAAAUAGUU\
) } def
/len { sequence length } bind def

/coor [
[90.70472717 114.30343628]
[76.65048218 119.54540253]
[70.57852936 130.94891357]
[58.73946381 135.01562500]
[47.67501450 130.07647705]
[33.52944183 135.06674194]
[19.38387299 140.05702209]
[5.23830128 145.04730225]
[-1.84114516 150.87184143]
[-9.20452309 149.99794006]
[-23.43691063 154.73493958]
[-37.62645721 159.59875488]
[-51.77202606 164.58903503]
[-65.91759491 169.57931519]
[-80.06317139 174.56958008]
[-94.20874023 179.55986023]
[-108.35430908 184.55012512]
[-122.49987793 189.54040527]
[-136.64544678 194.53067017]
[-150.45185852 200.39437866]
[-163.86523438 207.10864258]
[-177.27862549 213.82289124]
[-190.69200134 220.53715515]
[-199.56910706 233.63323975]
[-214.41351318 232.41130066]
[-227.82688904 239.12554932]
[-241.24026489 245.83981323]
[-254.65364075 252.55406189]
[-261.06393433 267.26080322]
[-276.59558105 271.27917480]
[-289.33404541 261.52667236]
[-289.50744629 245.48457336]
[-276.98278809 235.45898438]
[-261.36791992 239.14068604]
[-247.95452881 232.42643738]
[-234.54115295 225.71217346]
[-221.12776184 218.99790955]
[-213.21006775 206.38208008]
[-197.40625000 207.12377930]
[-183.99287415 200.40951538]
[-170.57949829 193.69525146]
[-157.16612244 186.98100281]
[-171.34896851 182.09767151]
[-179.20326233 169.31837463]
[-177.15454102 154.45895386]
[-166.13519287 144.28182983]
[-151.16004944 143.41857910]
[-139.04425049 152.26206970]
[-135.30163574 166.78765869]
[-141.63572693 180.38510132]
[-127.49015808 175.39483643]
[-113.34458160 170.40455627]
[-99.19901276 165.41429138]
[-85.05344391 160.42401123]
[-70.90787506 155.43373108]
[-56.76230240 150.44346619]
[-42.61672974 145.45318604]
[-37.33786011 140.24583435]
[-28.17390633 140.50254822]
[-13.94151688 135.76554871]
[0.24802826 130.90171814]
[14.39359951 125.91145325]
[28.53916931 120.92118073]
[42.68474197 115.93090820]
[53.34237289 102.00615692]
[71.40852356 105.49114990]
[85.46276855 100.24919128]
[85.49610901 95.99552155]
[86.78835297 91.79203033]
[89.30911255 88.01427460]
[92.91551208 85.02296448]
[97.35871124 83.13025665]
[102.30049133 82.56870270]
[108.53172302 68.92422485]
[101.07144165 55.44644547]
[102.95576477 40.33675766]
[113.25409698 29.36367989]
[127.86421967 26.59196091]
[134.09544373 12.94748116]
[128.81027222 -1.70532644]
[135.32398987 -15.45400333]
[149.32577515 -20.40230179]
[155.55700684 -34.04678345]
[161.78822327 -47.69126129]
[168.01945496 -61.33574295]
[166.71415710 -77.10301208]
[179.03935242 -85.46595001]
[185.27056885 -99.11043549]
[191.50180054 -112.75491333]
[185.36796570 -124.76792908]
[187.25572205 -137.92680359]
[196.25196838 -147.44763184]
[208.90100098 -150.00015259]
[215.37477112 -163.53123474]
[221.84855652 -177.06231689]
[228.32232666 -190.59341431]
[220.81629944 -204.17425537]
[222.75982666 -219.56913757]
[233.40557861 -230.85839844]
[248.66004944 -233.70111084]
[262.65756226 -227.00418091]
[270.01580811 -213.34271240]
[267.90539551 -197.96981812]
[257.13781738 -186.79669189]
[241.85340881 -184.11962891]
[235.37963867 -170.58854675]
[228.90586853 -157.05746460]
[222.43208313 -143.52638245]
[228.70320129 -127.93722534]
[221.63435364 -112.32213593]
[205.14628601 -106.52368927]
[198.91505432 -92.87921143]
[192.68383789 -79.23472595]
[194.43482971 -64.44340515]
[181.66392517 -55.10451508]
[175.43270874 -41.46003723]
[169.20147705 -27.81555557]
[162.97026062 -14.17107677]
[168.39979553 -0.34878850]
[162.27482605 13.57742023]
[147.73991394 19.17870712]
[141.50869751 32.82318497]
[148.98156738 45.67986679]
[147.43263245 60.64866257]
[137.24746704 71.96748352]
[122.17620087 75.15544891]
[115.94497681 88.79992676]
[120.55475616 103.07402802]
[133.58953857 110.49659729]
[146.62431335 117.91917419]
[159.65908813 125.34175110]
[175.47993469 125.44700623]
[182.71104431 138.46855164]
[195.74581909 145.89112854]
[208.78059387 153.31369019]
[221.81536865 160.73626709]
[234.91586304 168.04222107]
[248.08105469 175.23095703]
[261.24624634 182.41969299]
[274.41140747 189.60842896]
[287.57659912 196.79716492]
[300.74179077 203.98588562]
[315.23797607 198.12123108]
[330.09640503 202.99575806]
[338.30139160 216.30786133]
[335.97875977 231.77200317]
[324.22521973 242.08645630]
[308.59039307 242.38107300]
[296.45663452 232.51673889]
[293.55307007 217.15107727]
[280.38787842 209.96234131]
[267.22268677 202.77360535]
[254.05749512 195.58486938]
[240.89231873 188.39613342]
[227.72712708 181.20739746]
[220.32559204 180.76004028]
[214.39279175 173.77104187]
[201.35801697 166.34848022]
[188.32324219 158.92590332]
[175.28846741 151.50332642]
[160.39994812 151.92898560]
[152.23651123 138.37652588]
[139.20173645 130.95394897]
[126.16696167 123.53137970]
[113.13217926 116.10880280]
[124.93153381 125.37030029]
[131.32757568 138.93829346]
[130.96318054 153.93386841]
[123.91566467 167.17518616]
[111.68039703 175.85263062]
[96.85351562 178.12500000]
[82.58106232 173.51010132]
[71.89144135 162.98718262]
[67.05282593 148.78901672]
[69.09189606 133.92825317]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 67]
[2 66]
[5 64]
[6 63]
[7 62]
[8 61]
[10 60]
[11 59]
[12 57]
[13 56]
[14 55]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[20 42]
[21 41]
[22 40]
[23 39]
[25 37]
[26 36]
[27 35]
[28 34]
[73 127]
[74 126]
[78 122]
[79 121]
[82 118]
[83 117]
[84 116]
[85 115]
[87 113]
[88 112]
[89 111]
[93 108]
[94 107]
[95 106]
[96 105]
[128 165]
[129 164]
[130 163]
[131 162]
[133 160]
[134 159]
[135 158]
[136 157]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
