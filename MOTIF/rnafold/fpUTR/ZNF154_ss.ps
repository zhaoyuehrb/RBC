%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCUUCGUGGCGGCCAUUUUAGCUUCUCUGAGGUGUGUUCACCGGAUCAGAGAUAGCAGAGCGCCGAGUUGGGGCCACGAAGGCGUGAGGGGAGUCGUCGUCCCUCCUGCACGAAAGCGUCUAAGCCUUGGCGACGCCGCCCUGGGGGACCCACGUCAGGCCUGGGAUAGGGACCGCUGUCCCCGGGUCCCUACCAAUGUCGCCCGUCGCUCCCGGCCCAGCUCUACCCGCAGAGUCUG\
) } def
/len { sequence length } bind def

/coor [
[86.20372772 241.48554993]
[97.11624908 230.05346680]
[96.52979279 215.06494141]
[95.94334412 200.07641602]
[95.35688782 185.08787537]
[87.12790680 172.67285156]
[94.31974030 158.58071899]
[93.73329163 143.59219360]
[90.33810425 137.04470825]
[93.23816681 128.40472412]
[92.84713745 113.40982056]
[84.65025330 106.72231293]
[82.27712250 95.37593842]
[69.41905212 103.10057831]
[56.56098175 110.82521820]
[52.69477463 123.11642456]
[41.84296799 129.28878784]
[30.08236694 126.51249695]
[17.12469673 134.06886292]
[4.16702795 141.62524414]
[-8.79064178 149.18162537]
[-14.61251259 156.19343567]
[-21.96683502 156.75077820]
[-35.02190399 164.13760376]
[-48.07697296 171.52442932]
[-61.08361816 178.99618530]
[-74.04128265 186.55256653]
[-86.99895477 194.10893250]
[-99.95662689 201.66531372]
[-112.91429138 209.22169495]
[-125.87196350 216.77806091]
[-138.82963562 224.33444214]
[-151.63708496 232.14271545]
[-164.28941345 240.19992065]
[-176.94174194 248.25712585]
[-189.59407043 256.31433105]
[-196.68496704 271.10119629]
[-213.05464172 272.08377075]
[-221.86340332 258.25128174]
[-214.04953003 243.83338928]
[-197.65127563 243.66200256]
[-184.99894714 235.60479736]
[-172.34661865 227.54759216]
[-159.69429016 219.49038696]
[-158.57563782 216.16667175]
[-155.80293274 213.21424866]
[-151.56559753 211.39958191]
[-146.38600159 211.37677002]
[-133.42834473 203.82038879]
[-120.47067261 196.26402283]
[-107.51300049 188.70764160]
[-94.55532837 181.15127563]
[-81.59766388 173.59489441]
[-68.63999176 166.03851318]
[-64.45373535 159.96629333]
[-55.46379852 158.46936035]
[-42.40872955 151.08253479]
[-29.35366058 143.69570923]
[-16.34701729 136.22395325]
[-3.38934708 128.66757202]
[9.56832218 121.11119843]
[22.52599144 113.55482483]
[30.41310692 97.86846161]
[48.83634186 97.96714783]
[61.69441223 90.24250793]
[74.55248260 82.51786804]
[85.79508972 72.58792877]
[95.04883575 60.78249359]
[104.30257416 48.97706223]
[113.55632019 37.17163086]
[122.81005859 25.36619759]
[132.06379700 13.56076431]
[141.31755066 1.75533128]
[150.57128906 -10.05010128]
[153.39407349 -18.71565056]
[160.02340698 -21.94807053]
[169.43025208 -33.63187408]
[167.02571106 -41.57885361]
[167.93493652 -49.73736954]
[171.93760681 -56.79683304]
[178.32250977 -61.65248871]
[186.01281738 -63.57814407]
[193.74737549 -62.33408737]
[203.75038147 -73.51174164]
[207.18760681 -88.95505524]
[221.44065857 -93.27937317]
[231.44366455 -104.45702362]
[241.44668579 -115.63466644]
[251.44969177 -126.81231689]
[254.88691711 -142.25563049]
[269.13995361 -146.57995605]
[279.14297485 -157.75759888]
[289.14596558 -168.93525696]
[286.02597046 -184.02072144]
[292.31350708 -197.88868713]
[305.40649414 -205.30738831]
[320.18051147 -203.61412048]
[330.18350220 -214.79177856]
[340.18652344 -225.96942139]
[339.47341919 -253.31974792]
[367.64440918 -265.92367554]
[373.18081665 -279.86453247]
[378.71722412 -293.80541992]
[384.25363159 -307.74630737]
[389.79003906 -321.68719482]
[385.98632812 -341.49688721]
[401.69772339 -352.78799438]
[406.86883545 -366.86846924]
[412.03994751 -380.94894409]
[417.21105957 -395.02938843]
[417.22973633 -404.14309692]
[422.54241943 -409.25897217]
[427.89663696 -423.27084351]
[433.25085449 -437.28271484]
[425.11865234 -446.74615479]
[421.79309082 -458.69757080]
[423.84448242 -470.85913086]
[430.82427979 -480.93988037]
[441.36145020 -487.06713867]
[453.43139648 -488.13452148]
[459.14907837 -502.00204468]
[464.86672974 -515.86956787]
[470.58441162 -529.73712158]
[465.84149170 -539.49719238]
[467.21334839 -550.04046631]
[474.00985718 -557.92932129]
[483.81243896 -560.72534180]
[489.88964844 -574.43908691]
[484.43988037 -589.03149414]
[490.79840088 -602.85260010]
[504.74359131 -607.95825195]
[510.82080078 -621.67199707]
[516.89801025 -635.38574219]
[522.97521973 -649.09954834]
[520.69567871 -665.33947754]
[533.78485107 -675.21899414]
[548.77777100 -668.57489014]
[550.25103760 -652.24206543]
[536.68902588 -643.02233887]
[530.61181641 -629.30853271]
[524.53454590 -615.59478760]
[518.45733643 -601.88104248]
[524.04217529 -588.12072754]
[518.07434082 -574.12646484]
[503.60342407 -568.36187744]
[497.52618408 -554.64813232]
[500.96249390 -535.60797119]
[484.45193481 -524.01940918]
[478.73425293 -510.15191650]
[473.01660156 -496.28436279]
[467.29895020 -482.41683960]
[477.24084473 -467.80209351]
[476.39672852 -449.98880005]
[464.91635132 -436.13708496]
[447.26272583 -431.92849731]
[441.90850830 -417.91662598]
[436.55429077 -403.90475464]
[431.29150391 -389.85827637]
[426.12039185 -375.77783203]
[420.94927979 -361.69735718]
[415.77816772 -347.61688232]
[420.87707520 -338.79025269]
[420.27395630 -328.39489746]
[413.92691040 -319.86508179]
[403.73092651 -316.15078735]
[398.19451904 -302.20989990]
[392.65808105 -288.26901245]
[387.12167358 -274.32812500]
[381.58526611 -260.38723755]
[389.88830566 -247.89488220]
[404.88546753 -247.60159302]
[419.88259888 -247.30830383]
[434.87973022 -247.01502991]
[449.87686157 -246.72174072]
[464.87399292 -246.42845154]
[479.87112427 -246.13517761]
[487.74035645 -259.32495117]
[501.15805054 -266.79901123]
[516.51489258 -266.54684448]
[529.67993164 -258.63629150]
[537.11187744 -245.19525146]
[536.81158447 -229.83929443]
[528.85980225 -216.69909668]
[515.39550781 -209.30931091]
[500.04058838 -209.65774536]
[486.92538452 -217.65068054]
[479.57781982 -231.13804626]
[464.58068848 -231.43132019]
[449.58355713 -231.72460938]
[434.58642578 -232.01789856]
[419.58929443 -232.31117249]
[404.59216309 -232.60446167]
[389.59503174 -232.89773560]
[384.99923706 -223.40383911]
[377.61901855 -216.52639771]
[368.67678833 -212.95671082]
[359.50784302 -212.87538147]
[351.36416626 -215.96641541]
[341.36114502 -204.78877258]
[331.35815430 -193.61111450]
[334.67468262 -179.11495972]
[328.74926758 -165.28190613]
[315.66159058 -157.49945068]
[300.32363892 -158.93225098]
[290.32061768 -147.75459290]
[280.31762695 -136.57695007]
[277.59588623 -121.93312836]
[262.62734985 -116.80931091]
[252.62432861 -105.63166046]
[242.62132263 -94.45401001]
[232.61831665 -83.27635956]
[229.89657593 -68.63254547]
[214.92803955 -63.50873184]
[204.92503357 -52.33108139]
[202.54228210 -30.81283569]
[181.11405945 -24.22503090]
[171.70721436 -12.54122639]
[162.37672424 -0.79635870]
[153.12298584 11.00907421]
[143.86923218 22.81450653]
[134.61549377 34.61993790]
[125.36175537 46.42537308]
[116.10800934 58.23080444]
[106.85426331 70.03623962]
[97.60052490 81.84166718]
[112.13684845 87.70418549]
[116.12393951 101.91752625]
[107.84204102 113.01879120]
[108.23307037 128.01370239]
[108.72181702 143.00573730]
[109.30827332 157.99426270]
[117.57920074 171.48138428]
[110.34542084 184.50141907]
[110.93186951 199.48995972]
[111.51832581 214.47848511]
[112.10478210 229.46702576]
[123.87718201 240.01150513]
[124.66201019 255.79629517]
[113.99364471 267.45654297]
[98.20143890 268.07446289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 236]
[3 235]
[4 234]
[5 233]
[7 231]
[8 230]
[10 229]
[11 228]
[13 66]
[14 65]
[15 64]
[18 62]
[19 61]
[20 60]
[21 59]
[23 58]
[24 57]
[25 56]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 44]
[34 43]
[35 42]
[36 41]
[67 225]
[68 224]
[69 223]
[70 222]
[71 221]
[72 220]
[73 219]
[74 218]
[76 217]
[77 216]
[83 214]
[84 213]
[86 211]
[87 210]
[88 209]
[89 208]
[91 206]
[92 205]
[93 204]
[97 200]
[98 199]
[99 198]
[101 169]
[102 168]
[103 167]
[104 166]
[105 165]
[107 161]
[108 160]
[109 159]
[110 158]
[112 157]
[113 156]
[114 155]
[120 151]
[121 150]
[122 149]
[123 148]
[127 146]
[128 145]
[131 142]
[132 141]
[133 140]
[134 139]
[170 193]
[171 192]
[172 191]
[173 190]
[174 189]
[175 188]
[176 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
