%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PGAP3)
} def

/sequence { (\
AAGUGGAAGCUUCAUACUCCUAAGCUCCUCCCCCGGCGGCGAGCCAGGGAGAAAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.126881543 ubox
2 11 0.162338061 ubox
2 12 0.004957246 ubox
2 18 0.106753934 ubox
2 21 0.011350321 ubox
2 26 0.079560359 ubox
2 29 0.018088375 ubox
3 10 0.166247968 ubox
3 15 0.221953538 ubox
3 17 0.113392015 ubox
3 20 0.010959847 ubox
3 25 0.084423693 ubox
3 28 0.015435899 ubox
4 9 0.163580328 ubox
4 14 0.227993948 ubox
4 16 0.113040561 ubox
4 22 0.026243503 ubox
4 24 0.083355758 ubox
5 11 0.007107770 ubox
5 12 0.003423903 ubox
5 13 0.229755697 ubox
5 15 0.106101096 ubox
5 18 0.008018079 ubox
5 19 0.006322544 ubox
5 20 0.123960348 ubox
5 21 0.030426297 ubox
5 27 0.031115216 ubox
5 28 0.884642906 ubox
5 29 0.051736958 ubox
5 30 0.012120194 ubox
5 31 0.084437890 ubox
6 10 0.008169267 ubox
6 11 0.006816611 ubox
6 12 0.221191558 ubox
6 13 0.110322619 ubox
6 17 0.008367837 ubox
6 18 0.005046592 ubox
6 19 0.124143043 ubox
6 20 0.030973791 ubox
6 26 0.015448249 ubox
6 27 0.902512539 ubox
6 28 0.068433013 ubox
6 29 0.006674487 ubox
6 30 0.085848215 ubox
7 11 0.188611708 ubox
7 12 0.104078383 ubox
7 18 0.107580571 ubox
7 26 0.637175063 ubox
7 29 0.083075454 ubox
8 18 0.063929883 ubox
8 21 0.008200345 ubox
8 26 0.680174576 ubox
9 17 0.085455006 ubox
9 20 0.008401561 ubox
9 25 0.937260343 ubox
10 24 0.937347368 ubox
10 55 0.033656564 ubox
10 56 0.016301062 ubox
11 23 0.929078776 ubox
11 24 0.003660663 ubox
11 53 0.007231686 ubox
11 54 0.033450528 ubox
11 55 0.016622654 ubox
12 22 0.833516081 ubox
12 23 0.021127769 ubox
12 52 0.009047142 ubox
12 53 0.030541253 ubox
12 54 0.015344334 ubox
12 55 0.005386611 ubox
12 56 0.026480918 ubox
13 51 0.007778425 ubox
13 55 0.052455034 ubox
15 22 0.094993339 ubox
16 21 0.107595027 ubox
17 24 0.020416316 ubox
17 51 0.275676606 ubox
17 55 0.005165042 ubox
18 23 0.019201077 ubox
18 49 0.005520794 ubox
18 50 0.277582764 ubox
18 54 0.004312095 ubox
19 48 0.008468439 ubox
19 49 0.277920834 ubox
19 56 0.050928185 ubox
20 47 0.009455724 ubox
20 48 0.277882442 ubox
20 55 0.052070342 ubox
20 56 0.006916667 ubox
21 46 0.010032253 ubox
21 47 0.275474509 ubox
21 54 0.049816373 ubox
21 55 0.006760515 ubox
24 44 0.277925941 ubox
25 43 0.278005161 ubox
25 51 0.016110838 ubox
25 55 0.073036091 ubox
25 56 0.032771602 ubox
26 42 0.277201495 ubox
26 50 0.015908516 ubox
26 52 0.042546175 ubox
26 54 0.071041428 ubox
26 55 0.033212390 ubox
26 56 0.010995493 ubox
27 36 0.004575268 ubox
27 39 0.051710591 ubox
27 41 0.272785254 ubox
27 49 0.014283602 ubox
27 51 0.034056569 ubox
27 55 0.026821546 ubox
27 56 0.069820321 ubox
28 35 0.005332116 ubox
28 36 0.006250167 ubox
28 38 0.062332318 ubox
28 39 0.209636580 ubox
28 43 0.004177341 ubox
28 48 0.013196036 ubox
28 51 0.332288923 ubox
28 55 0.071755357 ubox
28 56 0.004648080 ubox
29 35 0.005812311 ubox
29 36 0.011339058 ubox
29 38 0.205622668 ubox
29 39 0.044617759 ubox
29 42 0.007050970 ubox
29 47 0.011046427 ubox
29 49 0.007686319 ubox
29 50 0.410122734 ubox
29 52 0.746204628 ubox
29 54 0.047925306 ubox
29 55 0.006724763 ubox
29 56 0.009507723 ubox
30 35 0.017247002 ubox
30 36 0.202186848 ubox
30 38 0.047447317 ubox
30 39 0.124714570 ubox
30 41 0.008356698 ubox
30 47 0.003881155 ubox
30 48 0.009503660 ubox
30 49 0.410015645 ubox
30 51 0.784906072 ubox
30 55 0.015952422 ubox
30 56 0.027912721 ubox
31 35 0.200894516 ubox
31 38 0.124699649 ubox
31 39 0.097810714 ubox
31 47 0.009780237 ubox
31 48 0.402549765 ubox
31 49 0.755758195 ubox
31 55 0.028388348 ubox
32 38 0.097755253 ubox
32 39 0.032038236 ubox
32 47 0.394350237 ubox
32 48 0.760067995 ubox
32 49 0.426532450 ubox
33 38 0.032434230 ubox
33 39 0.009402718 ubox
33 47 0.763526532 ubox
33 48 0.427330645 ubox
33 49 0.004391282 ubox
34 38 0.009408350 ubox
34 41 0.003380291 ubox
34 47 0.427475298 ubox
34 48 0.004357731 ubox
35 40 0.004355768 ubox
35 45 0.959029840 ubox
36 44 0.960529799 ubox
37 43 0.960367421 ubox
38 45 0.005865558 ubox
39 44 0.005845700 ubox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
7 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
showpage
end
%%EOF
