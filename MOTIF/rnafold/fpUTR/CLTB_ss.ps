%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCUCCUCCCGCCGCGGCGCCCGCACCGCAGUGACAGCCAGCCGGGCCCGGUGGCGGAGAGGAAGUGCGGUCCGCGCCAAGCCCGUCCCCGCCGACGCCGGCUCCCCCGCGGCUCGGGUGACAGCGUCGCGGCCGCCGGACGCAGCGCGGGGCAGGCGCGGGCAGAGCCGAGCGCAGCGGAGGCUCCGGCGGAGGCGCGGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[-72.74518585 216.14900208]
[-86.06346130 223.04997253]
[-99.38174438 229.95095825]
[-112.70001984 236.85192871]
[-125.85775757 244.05429077]
[-138.84814453 251.55429077]
[-151.83851624 259.05429077]
[-164.82890320 266.55429077]
[-177.81929016 274.05429077]
[-190.75238037 281.65264893]
[-203.62744141 289.34893799]
[-216.50250244 297.04519653]
[-229.37756348 304.74148560]
[-242.25262451 312.43777466]
[-255.12770081 320.13403320]
[-268.00274658 327.83032227]
[-280.81906128 335.62408447]
[-293.57583618 343.51486206]
[-299.23013306 350.69299316]
[-306.58663940 351.42691040]
[-319.46170044 359.12319946]
[-332.33676147 366.81948853]
[-345.21182251 374.51574707]
[-358.08688354 382.21203613]
[-357.95742798 397.50683594]
[-365.45150757 410.72558594]
[-378.46942139 418.36761475]
[-393.46429443 418.46694946]
[-406.40838623 411.09701538]
[-419.28344727 418.79327393]
[-421.58605957 434.26040649]
[-433.32623291 444.59008789]
[-448.96066284 444.90493774]
[-461.10720825 435.05630493]
[-464.03063965 419.69442749]
[-456.35064697 406.07269287]
[-441.69342041 400.62289429]
[-426.97973633 405.91821289]
[-414.10464478 398.22195435]
[-414.46725464 383.33120728]
[-407.27990723 370.17074585]
[-394.38497925 362.32296753]
[-379.19354248 361.98107910]
[-365.78317261 369.33697510]
[-352.90811157 361.64068604]
[-340.03305054 353.94442749]
[-327.15795898 346.24813843]
[-314.28289795 338.55184937]
[-301.46661377 330.75808716]
[-288.70983887 322.86730957]
[-284.67373657 316.67321777]
[-275.69903564 314.95526123]
[-262.82397461 307.25897217]
[-249.94891357 299.56271362]
[-237.07385254 291.86642456]
[-224.19879150 284.17013550]
[-211.32371521 276.47384644]
[-198.44865417 268.77758789]
[-194.31901550 262.64544678]
[-185.31929016 261.06390381]
[-172.32890320 253.56390381]
[-159.33851624 246.06390381]
[-146.34814453 238.56390381]
[-133.35775757 231.06390381]
[-132.09713745 227.76783752]
[-129.17567444 224.91952515]
[-124.82162476 223.29370117]
[-119.60099792 223.53364563]
[-106.28271484 216.63267517]
[-92.96443939 209.73170471]
[-79.64615631 202.83071899]
[-66.59924316 195.42951965]
[-53.84246063 187.53872681]
[-41.08567810 179.64793396]
[-28.32889938 171.75714111]
[-15.57211876 163.86636353]
[-2.81533790 155.97557068]
[9.94144249 148.08477783]
[22.69822311 140.19400024]
[25.85182571 123.67594147]
[40.25911713 114.36493683]
[57.27174377 118.43155670]
[69.90730286 110.34807587]
[82.54286194 102.26459503]
[90.28959656 85.31707764]
[108.91713715 84.82222748]
[121.30155182 76.35900116]
[133.68595886 67.89576721]
[140.71426392 53.72136688]
[155.58775330 52.92857361]
[167.97216797 44.46534348]
[180.35658264 36.00211334]
[192.74099731 27.53887939]
[193.69088745 14.10150719]
[202.08476257 3.81545854]
[214.68386841 0.29511768]
[226.82705688 4.61018419]
[239.33848572 -3.66412401]
[251.84989929 -11.93843269]
[264.29818726 -20.30744362]
[276.68258667 -28.77067375]
[289.06701660 -37.23390579]
[301.45141602 -45.69713593]
[313.83584595 -54.16036606]
[326.22024536 -62.62360001]
[333.80267334 -79.40260315]
[351.33828735 -80.05284119]
[363.59283447 -88.70304871]
[375.84738159 -97.35325623]
[388.10192871 -106.00345612]
[400.35647583 -114.65366364]
[412.61102295 -123.30387115]
[424.66549683 -132.23078918]
[436.51364136 -141.42977905]
[448.36175537 -150.62878418]
[460.20989990 -159.82778931]
[462.59280396 -172.50602722]
[472.65316772 -179.92378235]
[484.67260742 -178.54255676]
[496.65896606 -187.56068420]
[508.64535522 -196.57881165]
[508.98266602 -210.04550171]
[516.89965820 -220.70292664]
[529.32550049 -224.79306030]
[541.65246582 -221.03515625]
[553.77435303 -229.87034607]
[565.89624023 -238.70553589]
[578.01806641 -247.54072571]
[590.13995361 -256.37591553]
[595.23376465 -263.96203613]
[602.51348877 -265.25152588]
[614.76800537 -273.90173340]
[627.02258301 -282.55194092]
[636.47583008 -296.62573242]
[652.61657715 -291.43789673]
[652.09967041 -274.49185181]
[635.67279053 -270.29739380]
[623.41821289 -261.64718628]
[611.16369629 -252.99699402]
[598.97509766 -244.25404358]
[586.85327148 -235.41885376]
[574.73138428 -226.58367920]
[562.60955811 -217.74848938]
[550.48767090 -208.91329956]
[548.59539795 -192.20370483]
[534.93542480 -181.82727051]
[517.66351318 -184.59243774]
[505.67709351 -175.57429504]
[493.69073486 -166.55616760]
[487.70355225 -150.06150818]
[469.40890503 -147.97964478]
[457.56076050 -138.78065491]
[445.71264648 -129.58164978]
[433.86450195 -120.38264465]
[433.06442261 -116.94562531]
[430.55801392 -113.72602844]
[426.46591187 -111.52247620]
[421.26123047 -111.04931641]
[409.00668335 -102.39911652]
[396.75213623 -93.74890900]
[384.49758911 -85.09870148]
[372.24304199 -76.44850159]
[359.98849487 -67.79829407]
[357.62393188 -55.93309402]
[347.48251343 -48.62651825]
[334.68350220 -50.23918533]
[322.29907227 -41.77595520]
[309.91467285 -33.31272125]
[297.53024292 -24.84949112]
[285.14584351 -16.38625908]
[272.76141357 -7.92302895]
[269.01141357 -1.55166054]
[260.12420654 0.57299536]
[247.61279297 8.84730339]
[235.10136414 17.12161255]
[232.45051575 33.72776031]
[218.33244324 43.47172165]
[201.20422363 39.92329407]
[188.81982422 48.38652420]
[176.43540955 56.84975815]
[164.05099487 65.31298828]
[157.90850830 78.88204193]
[142.14920044 80.28018188]
[129.76478577 88.74341583]
[117.38037109 97.20664215]
[116.11932373 107.07442474]
[109.71040344 114.68292236]
[100.20036316 117.60227203]
[90.62634277 114.90015411]
[77.99078369 122.98363495]
[65.35522461 131.06710815]
[63.99795914 144.46946716]
[55.29578018 154.49603271]
[42.59563828 157.63238525]
[30.58901215 152.95077515]
[17.83223152 160.84156799]
[5.07545090 168.73234558]
[-7.68132925 176.62313843]
[-20.43811035 184.51393127]
[-33.19488907 192.40472412]
[-45.95167160 200.29550171]
[-58.70845032 208.18629456]
[-44.93710709 214.13188171]
[-40.84898376 228.56404114]
[-49.45633316 240.84873962]
[-64.41700745 241.93421936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 71]
[2 70]
[3 69]
[4 68]
[5 64]
[6 63]
[7 62]
[8 61]
[9 60]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[17 50]
[18 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[29 39]
[30 38]
[72 202]
[73 201]
[74 200]
[75 199]
[76 198]
[77 197]
[78 196]
[79 195]
[82 191]
[83 190]
[84 189]
[86 185]
[87 184]
[88 183]
[90 181]
[91 180]
[92 179]
[93 178]
[97 175]
[98 174]
[99 173]
[100 171]
[101 170]
[102 169]
[103 168]
[104 167]
[105 166]
[107 163]
[108 162]
[109 161]
[110 160]
[111 159]
[112 158]
[113 154]
[114 153]
[115 152]
[116 151]
[119 149]
[120 148]
[121 147]
[125 144]
[126 143]
[127 142]
[128 141]
[129 140]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
