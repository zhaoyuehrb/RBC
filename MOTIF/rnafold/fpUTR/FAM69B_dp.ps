%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM69B)
} def

/sequence { (\
AUGGCGAGGGAGCGGCGGCCGCUGCGGGCCGGGCCGGGCCGGGGCUGAGGCCGAGCGAGCCGCGGGGCCCGCGCAGCCCCGGCCGGAGCCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 14 0.011282809 ubox
2 17 0.009245895 ubox
2 31 0.044922787 ubox
2 36 0.061037620 ubox
2 92 0.021592577 ubox
3 13 0.012259423 ubox
3 16 0.199776281 ubox
3 20 0.003445668 ubox
3 23 0.003928627 ubox
3 30 0.931529840 ubox
3 35 0.086528162 ubox
3 84 0.004347200 ubox
3 90 0.062121780 ubox
3 91 0.021055306 ubox
3 94 0.067091353 ubox
4 13 0.183124429 ubox
4 16 0.087427775 ubox
4 19 0.003447831 ubox
4 22 0.004075428 ubox
4 25 0.018184834 ubox
4 29 0.932500287 ubox
4 34 0.086582035 ubox
4 83 0.004349568 ubox
4 89 0.063125269 ubox
4 90 0.013736602 ubox
4 93 0.067445077 ubox
5 12 0.183626618 ubox
5 14 0.203012600 ubox
5 15 0.084178047 ubox
5 18 0.003398820 ubox
5 21 0.004075593 ubox
5 24 0.018221345 ubox
5 26 0.010066153 ubox
5 28 0.932211487 ubox
5 33 0.086556320 ubox
5 82 0.004291055 ubox
5 88 0.063825189 ubox
6 13 0.202197405 ubox
6 20 0.003994966 ubox
6 23 0.009725256 ubox
6 25 0.019071329 ubox
6 30 0.004193746 ubox
7 23 0.004589908 ubox
8 22 0.004790932 ubox
8 23 0.055806077 ubox
8 30 0.158357992 ubox
8 35 0.004538124 ubox
8 79 0.004093115 ubox
8 84 0.003400775 ubox
8 90 0.005828359 ubox
8 91 0.108165895 ubox
8 94 0.016908947 ubox
9 20 0.005939601 ubox
9 22 0.056137168 ubox
9 23 0.017042028 ubox
9 29 0.158419279 ubox
9 30 0.048111078 ubox
9 34 0.004384622 ubox
9 35 0.010305493 ubox
9 78 0.004093460 ubox
9 84 0.008129567 ubox
9 89 0.005876439 ubox
9 90 0.108250341 ubox
9 91 0.020411700 ubox
9 93 0.016973080 ubox
9 94 0.009664848 ubox
10 19 0.005772319 ubox
10 22 0.011390089 ubox
10 29 0.048076945 ubox
10 34 0.010164308 ubox
10 77 0.004089455 ubox
10 83 0.007656840 ubox
10 89 0.107829055 ubox
10 90 0.020469673 ubox
10 93 0.009748240 ubox
11 23 0.792024210 ubox
12 19 0.057057905 ubox
12 22 0.798024190 ubox
12 25 0.509215251 ubox
12 34 0.023801075 ubox
12 74 0.004131185 ubox
12 89 0.020119405 ubox
13 18 0.057070464 ubox
13 21 0.798069825 ubox
13 24 0.509365817 ubox
13 26 0.004171865 ubox
13 31 0.008808098 ubox
13 33 0.025619223 ubox
13 36 0.117526510 ubox
13 73 0.004133237 ubox
13 81 0.007564898 ubox
13 85 0.004668552 ubox
13 88 0.020146002 ubox
14 20 0.797909794 ubox
14 23 0.508999801 ubox
14 30 0.027915522 ubox
14 35 0.119735818 ubox
14 72 0.003898808 ubox
14 80 0.007579358 ubox
14 90 0.014435198 ubox
14 91 0.005688819 ubox
14 94 0.038585812 ubox
15 19 0.785028855 ubox
15 22 0.509375792 ubox
15 25 0.009182634 ubox
15 29 0.027926726 ubox
15 34 0.119640027 ubox
15 79 0.007578608 ubox
15 89 0.014487907 ubox
15 90 0.004823904 ubox
15 93 0.038702931 ubox
16 21 0.508642516 ubox
16 24 0.009608435 ubox
16 28 0.027840153 ubox
16 31 0.086476879 ubox
16 33 0.109027511 ubox
16 36 0.006247724 ubox
16 85 0.005705225 ubox
16 88 0.013807253 ubox
17 23 0.009547379 ubox
17 30 0.314401907 ubox
17 35 0.006760728 ubox
17 69 0.003895707 ubox
17 78 0.007634580 ubox
17 84 0.005656393 ubox
18 22 0.009343839 ubox
18 25 0.018755861 ubox
18 29 0.315000165 ubox
18 34 0.006761988 ubox
18 68 0.004112231 ubox
18 77 0.007635774 ubox
18 83 0.005656475 ubox
19 24 0.018683786 ubox
19 27 0.025319525 ubox
19 28 0.314628517 ubox
19 33 0.006639326 ubox
19 67 0.004311440 ubox
19 76 0.007632917 ubox
19 82 0.005656442 ubox
20 26 0.029696087 ubox
20 27 0.314190144 ubox
20 32 0.006483571 ubox
20 66 0.004307622 ubox
20 81 0.005652940 ubox
21 25 0.031289007 ubox
21 29 0.006547179 ubox
21 74 0.007611321 ubox
21 77 0.004527279 ubox
21 80 0.003479549 ubox
22 28 0.006879951 ubox
22 65 0.004303881 ubox
22 73 0.007446319 ubox
22 76 0.004933544 ubox
23 27 0.006205833 ubox
23 64 0.004307949 ubox
23 75 0.004926783 ubox
24 63 0.004311926 ubox
24 72 0.007653505 ubox
24 74 0.004911360 ubox
25 36 0.007211700 ubox
25 62 0.004311028 ubox
25 71 0.007659757 ubox
25 73 0.004905619 ubox
26 35 0.007692799 ubox
26 61 0.004161405 ubox
26 70 0.007674589 ubox
26 72 0.004762433 ubox
26 91 0.035689060 ubox
26 94 0.017637786 ubox
27 34 0.007633505 ubox
27 35 0.008064218 ubox
27 60 0.004003600 ubox
27 69 0.007678230 ubox
27 90 0.035728736 ubox
27 93 0.017715437 ubox
27 94 0.023123268 ubox
28 34 0.008125866 ubox
28 68 0.007677902 ubox
28 89 0.035728791 ubox
28 93 0.023415852 ubox
29 33 0.008120496 ubox
29 67 0.007609500 ubox
29 88 0.035509332 ubox
30 66 0.007520886 ubox
30 71 0.005551606 ubox
31 70 0.005623769 ubox
31 90 0.046409205 ubox
31 91 0.982166386 ubox
32 52 0.003201283 ubox
32 69 0.005624322 ubox
32 89 0.046790136 ubox
32 90 0.985599060 ubox
32 91 0.020622516 ubox
33 51 0.003229902 ubox
33 68 0.005624353 ubox
33 89 0.985348205 ubox
33 90 0.019987229 ubox
34 50 0.003257380 ubox
34 65 0.006833570 ubox
34 67 0.005622923 ubox
34 86 0.241007221 ubox
34 88 0.955820057 ubox
35 49 0.003254693 ubox
35 64 0.006840634 ubox
35 66 0.005616375 ubox
35 85 0.346005345 ubox
36 63 0.006818859 ubox
36 84 0.285820318 ubox
36 91 0.004445923 ubox
37 52 0.004047382 ubox
37 61 0.006947594 ubox
37 83 0.202178188 ubox
37 84 0.957581498 ubox
37 90 0.004280960 ubox
38 45 0.003249495 ubox
38 51 0.004078588 ubox
38 60 0.006959220 ubox
38 83 0.979267342 ubox
38 89 0.004100675 ubox
39 44 0.003239657 ubox
39 50 0.004107559 ubox
39 59 0.006962961 ubox
39 65 0.005641289 ubox
39 82 0.999899949 ubox
39 88 0.003934388 ubox
40 49 0.004107308 ubox
40 57 0.006919122 ubox
40 64 0.005652104 ubox
40 81 0.999914404 ubox
41 56 0.006838897 ubox
41 63 0.005677299 ubox
41 80 0.999914821 ubox
42 79 0.999931273 ubox
43 52 0.006925228 ubox
43 61 0.005686530 ubox
43 78 0.999931244 ubox
43 84 0.003740072 ubox
44 51 0.006945787 ubox
44 60 0.005687287 ubox
44 77 0.999929843 ubox
44 83 0.003742618 ubox
45 50 0.006925308 ubox
45 59 0.005686839 ubox
45 76 0.999917534 ubox
45 82 0.003744028 ubox
46 58 0.005420751 ubox
46 71 0.051313617 ubox
46 73 0.025438227 ubox
46 75 0.997454383 ubox
46 81 0.003740867 ubox
47 70 0.104679168 ubox
47 72 0.053903149 ubox
47 74 0.985796885 ubox
47 80 0.003732020 ubox
49 61 0.048909475 ubox
49 69 0.961228799 ubox
49 70 0.210657075 ubox
49 78 0.003743392 ubox
50 56 0.012031839 ubox
50 60 0.049769429 ubox
50 68 0.979489267 ubox
50 69 0.149410042 ubox
50 72 0.024364770 ubox
50 74 0.067556124 ubox
50 77 0.003753312 ubox
51 55 0.011966098 ubox
51 59 0.049712163 ubox
51 66 0.020656597 ubox
51 67 0.990614207 ubox
51 71 0.021493609 ubox
51 73 0.075792554 ubox
51 76 0.003755126 ubox
52 65 0.027812760 ubox
52 66 0.989986592 ubox
52 71 0.008524004 ubox
52 73 0.038670313 ubox
53 70 0.011322625 ubox
53 72 0.016374689 ubox
55 63 0.990051373 ubox
55 68 0.008403987 ubox
55 72 0.120129526 ubox
55 74 0.003421934 ubox
56 62 0.990349095 ubox
56 64 0.020700209 ubox
56 67 0.008368105 ubox
56 71 0.121814827 ubox
56 73 0.003835391 ubox
57 61 0.926473528 ubox
57 63 0.020770397 ubox
57 70 0.123053191 ubox
57 72 0.003833583 ubox
59 68 0.123784951 ubox
60 67 0.123877879 ubox
61 65 0.003280888 ubox
61 66 0.123836128 ubox
61 73 0.016500852 ubox
62 72 0.051733695 ubox
63 71 0.051781791 ubox
64 70 0.051786651 ubox
65 69 0.050950694 ubox
85 91 0.042092224 ubox
85 94 0.038094455 ubox
86 90 0.041455711 ubox
86 93 0.038227733 ubox
3 30 0.9500000 lbox
4 29 0.9500000 lbox
5 28 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
31 91 0.9500000 lbox
32 90 0.9500000 lbox
33 89 0.9500000 lbox
34 88 0.9500000 lbox
37 84 0.9500000 lbox
38 83 0.9500000 lbox
39 82 0.9500000 lbox
40 81 0.9500000 lbox
41 80 0.9500000 lbox
42 79 0.9500000 lbox
43 78 0.9500000 lbox
44 77 0.9500000 lbox
45 76 0.9500000 lbox
46 75 0.9500000 lbox
47 74 0.9500000 lbox
49 69 0.9500000 lbox
50 68 0.9500000 lbox
51 67 0.9500000 lbox
52 66 0.9500000 lbox
55 63 0.9500000 lbox
56 62 0.9500000 lbox
57 61 0.9500000 lbox
showpage
end
%%EOF
