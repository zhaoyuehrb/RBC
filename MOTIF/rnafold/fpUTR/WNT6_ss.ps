%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGGAGACACAGGCGCUGGCUGCCCCGUCCGCUCUCCGCCUCCGCCGCGCCCUCCUCGCCCGGGAUGGGCCCCCCCGCCGCCGCCGGAUCCCUCGCCUCCCGGCCGCCGCCGUUGCGCUCGCCGCGCUCGCACUGAAGCCCGGGCCCUCGCGCGCCGCGGUUCGCCCCGCAGCCUCGCCCCCUGCCCACCCGGGCGGCCGUAGGGCGGUCACG\
) } def
/len { sequence length } bind def

/coor [
[-128.54953003 448.75500488]
[-136.19178772 446.42568970]
[-145.99969482 457.77490234]
[-149.24140930 466.31063843]
[-156.03372192 469.21652222]
[-166.00566101 480.42190552]
[-175.97760010 491.62728882]
[-185.94953918 502.83264160]
[-181.23605347 517.38360596]
[-184.41773987 532.24206543]
[-194.54219055 543.43853760]
[-208.81610107 548.03332520]
[-223.37528992 544.88763428]
[-233.34722900 556.09301758]
[-243.31916809 567.29840088]
[-246.68467712 575.78607178]
[-253.51855469 578.59283447]
[-263.65240479 589.65203857]
[-267.27111816 605.05383301]
[-281.57409668 609.21008301]
[-291.70794678 620.26928711]
[-301.84179688 631.32843018]
[-300.90209961 647.10473633]
[-311.45553589 658.86914062]
[-327.24093628 659.64196777]
[-338.89306641 648.96472168]
[-339.49896240 633.17205811]
[-328.69912720 621.63348389]
[-312.90093994 621.19458008]
[-302.76708984 610.13543701]
[-292.63323975 599.07623291]
[-289.73934937 584.46545410]
[-274.71154785 579.51818848]
[-264.57769775 568.45898438]
[-254.52455139 557.32641602]
[-244.55261230 546.12109375]
[-234.58067322 534.91571045]
[-239.39529419 520.82012939]
[-236.48872375 506.10931396]
[-226.54330444 494.75347900]
[-212.15469360 489.86834717]
[-197.15492249 492.86071777]
[-187.18298340 481.65533447]
[-177.21104431 470.44995117]
[-167.23910522 459.24459839]
[-157.34892273 447.96697998]
[-147.54100037 436.61776733]
[-151.32369995 415.01251221]
[-137.70104980 397.47030640]
[-115.28041077 395.74264526]
[-106.49897003 383.58178711]
[-97.71752930 371.42092896]
[-88.93608856 359.26010132]
[-80.15464783 347.09924316]
[-71.37320709 334.93838501]
[-75.37011719 317.07110596]
[-64.85414886 301.69476318]
[-46.12192917 298.84362793]
[-37.69789505 286.43249512]
[-29.27386475 274.02139282]
[-20.84983253 261.61029053]
[-12.42580128 249.19917297]
[-4.00177002 236.78805542]
[4.42226171 224.37695312]
[12.84629345 211.96583557]
[21.27032471 199.55471802]
[22.42546082 192.25776672]
[29.90822029 187.02558899]
[38.51186752 174.73831177]
[47.11551285 162.45101929]
[55.71915817 150.16374207]
[64.32280731 137.87646484]
[55.55949020 127.06528473]
[49.97517776 114.31801605]
[47.96933746 100.54652405]
[49.68545532 86.73593903]
[55.00077438 73.87418365]
[63.53506470 62.88130951]
[74.67783356 54.54368591]
[69.34307861 40.52440262]
[57.20360565 30.37827492]
[59.90856934 15.73134899]
[54.57380676 1.71206546]
[42.43433762 -8.43406010]
[45.13930130 -23.08098602]
[39.80454254 -37.10026932]
[34.46977997 -51.11955261]
[29.13501740 -65.13883972]
[23.80025673 -79.15811920]
[8.58819199 -80.40545654]
[-4.57186031 -88.13693237]
[-13.06696129 -100.81747437]
[-15.21040249 -115.92933655]
[-10.57660294 -130.47206116]
[-0.08560682 -141.55816650]
[14.17959118 -146.98649597]
[29.38662720 -145.67927551]
[42.51612854 -137.89602661]
[50.96123123 -125.18213654]
[53.04514313 -110.06195068]
[48.35411072 -95.53759003]
[37.81954193 -84.49288177]
[43.15430069 -70.47360229]
[48.48906326 -56.45431519]
[53.82382584 -42.43503189]
[59.15858459 -28.41574669]
[70.91648102 -19.27237511]
[68.59309387 -3.62269592]
[73.92785645 10.39658833]
[85.68574524 19.53996086]
[83.36235809 35.18964005]
[88.69712067 49.20892334]
[91.86106873 47.01079559]
[95.26843262 45.01551437]
[98.90577698 43.24577332]
[102.75772858 41.72336197]
[106.80702972 40.46897507]
[113.14630127 26.87435913]
[119.48557281 13.27974224]
[125.82484436 -0.31487414]
[121.71103668 -15.82152271]
[131.38504028 -28.61969566]
[147.42579651 -28.89172935]
[157.52819824 -16.42894363]
[153.94255066 -0.79172152]
[139.41946411 6.02439976]
[133.08018494 19.61901665]
[126.74091339 33.21363449]
[120.40164185 46.80825043]
[126.44997406 51.24307251]
[138.54664612 60.11271667]
[144.59498596 64.54753876]
[155.65414429 54.41368484]
[156.09303284 38.61549377]
[167.63163757 27.81567383]
[183.42431641 28.42156982]
[194.10153198 40.07371521]
[193.32870483 55.85909653]
[181.56431580 66.41252899]
[165.78799438 65.47284698]
[154.72883606 75.60669708]
[154.41737366 82.08500671]
[153.38244629 88.24211121]
[151.68653870 94.00074768]
[166.68019104 94.43701935]
[181.67384338 94.87329102]
[196.66749573 95.30956268]
[204.25358582 83.80377197]
[216.43716431 77.59722900]
[229.98818970 78.21537018]
[241.37295532 85.38996887]
[247.67553711 97.15705109]
[262.66125488 97.81134033]
[277.65133667 98.35663605]
[292.64498901 98.79290771]
[307.63864136 99.22917938]
[319.08392334 88.66303253]
[334.28341675 89.31906891]
[344.28607178 100.29550934]
[359.27972412 100.73178101]
[374.27337646 101.16805267]
[390.28167725 95.58494568]
[400.07812500 109.42206573]
[389.49368286 122.66616058]
[373.83712769 116.16170502]
[358.84347534 115.72543335]
[343.84982300 115.28916168]
[333.22583008 125.66542816]
[318.01391602 125.43657684]
[307.20239258 114.22283173]
[292.20870972 113.78656006]
[277.21505737 113.35028839]
[270.44021606 116.29670715]
[262.00695801 112.79706573]
[247.02124023 112.14276886]
[237.21723938 125.31150818]
[221.33634949 130.08821106]
[205.58177185 124.40016937]
[196.23121643 110.30321503]
[181.23756409 109.86694336]
[166.24391174 109.43067169]
[151.25025940 108.99440765]
[141.74977112 131.05552673]
[123.35260773 146.49887085]
[99.97912598 152.03352356]
[76.61008453 146.48010254]
[68.00643921 158.76739502]
[59.40279388 171.05467224]
[50.79914856 183.34194946]
[42.19549942 195.62922668]
[33.68143463 207.97875977]
[25.25740433 220.38986206]
[16.83337402 232.80097961]
[8.40934181 245.21208191]
[-0.01469002 257.62319946]
[-8.43872166 270.03430176]
[-16.86275291 282.44543457]
[-25.28678513 294.85653687]
[-33.71081543 307.26763916]
[-29.24756813 318.28170776]
[-30.63919449 329.96325684]
[-37.42537308 339.42575073]
[-47.82724380 344.38708496]
[-59.21235657 343.71984863]
[-67.99379730 355.88067627]
[-76.77523804 368.04153442]
[-85.55667877 380.20239258]
[-94.33811951 392.36325073]
[-103.11956024 404.52407837]
[-99.07722473 411.72640991]
[-97.32890320 419.76388550]
[-98.00865173 427.92733765]
[-101.03716278 435.50234985]
[-106.13044739 441.83181763]
[-112.82635498 446.37292480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[5 45]
[6 44]
[7 43]
[8 42]
[13 37]
[14 36]
[15 35]
[17 34]
[18 33]
[20 31]
[21 30]
[22 29]
[50 209]
[51 208]
[52 207]
[53 206]
[54 205]
[55 204]
[58 199]
[59 198]
[60 197]
[61 196]
[62 195]
[63 194]
[64 193]
[65 192]
[66 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 186]
[79 112]
[80 111]
[82 109]
[83 108]
[85 106]
[86 105]
[87 104]
[88 103]
[89 102]
[117 129]
[118 128]
[119 127]
[120 126]
[132 141]
[133 140]
[144 182]
[145 181]
[146 180]
[147 179]
[152 175]
[153 174]
[154 172]
[155 171]
[156 170]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
