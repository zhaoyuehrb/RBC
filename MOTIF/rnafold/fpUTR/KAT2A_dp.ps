%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KAT2A)
} def

/sequence { (\
GGUUGCCCAUGCGGCCCUAGGGCUGGGAGCGCGGCGCCGCUCUCCGCUGCGGGGGAGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.018512545 ubox
1 8 0.072858310 ubox
1 16 0.076276643 ubox
1 17 0.008350800 ubox
1 38 0.304389037 ubox
1 41 0.003857567 ubox
1 60 0.912989125 ubox
2 6 0.018357353 ubox
2 7 0.072362435 ubox
2 12 0.006360934 ubox
2 15 0.078941929 ubox
2 16 0.006930811 ubox
2 30 0.019099845 ubox
2 32 0.021176392 ubox
2 35 0.165552064 ubox
2 37 0.304566616 ubox
2 40 0.005754597 ubox
2 59 0.923814318 ubox
3 11 0.006317597 ubox
3 14 0.080434347 ubox
3 29 0.019107929 ubox
3 31 0.015011230 ubox
3 34 0.165610622 ubox
3 36 0.215708138 ubox
3 39 0.006028973 ubox
3 56 0.023062068 ubox
3 57 0.165154332 ubox
3 58 0.907508305 ubox
4 13 0.081846850 ubox
4 28 0.018880663 ubox
4 31 0.030212272 ubox
4 33 0.165369048 ubox
4 36 0.213265588 ubox
4 54 0.004487047 ubox
4 55 0.035212740 ubox
4 56 0.231130402 ubox
4 57 0.693899068 ubox
5 12 0.084148206 ubox
5 15 0.012475743 ubox
5 30 0.038431451 ubox
5 32 0.165996534 ubox
5 35 0.308901476 ubox
5 37 0.014890923 ubox
5 59 0.036821382 ubox
6 11 0.083777825 ubox
6 14 0.016616416 ubox
6 26 0.006077633 ubox
6 27 0.020469759 ubox
6 29 0.038516354 ubox
6 31 0.165605448 ubox
6 34 0.306569194 ubox
6 36 0.015104036 ubox
6 52 0.005129327 ubox
6 53 0.045028226 ubox
6 54 0.327852772 ubox
6 55 0.861502044 ubox
6 58 0.036826183 ubox
7 13 0.016610812 ubox
7 14 0.014756083 ubox
7 25 0.005771504 ubox
7 26 0.021825935 ubox
7 27 0.058137532 ubox
7 33 0.301275454 ubox
7 34 0.047813130 ubox
7 51 0.005149754 ubox
7 52 0.045234111 ubox
7 53 0.329199111 ubox
7 54 0.863682028 ubox
7 55 0.013643715 ubox
7 57 0.036483878 ubox
7 58 0.004895256 ubox
8 13 0.015895018 ubox
8 25 0.021351222 ubox
8 26 0.058161738 ubox
8 33 0.061456275 ubox
8 49 0.005740026 ubox
8 51 0.045149501 ubox
8 52 0.329850383 ubox
8 53 0.862002569 ubox
8 54 0.013528524 ubox
8 57 0.005709773 ubox
9 24 0.015619440 ubox
9 48 0.007692018 ubox
10 25 0.003418316 ubox
10 31 0.113062796 ubox
10 33 0.042837673 ubox
10 36 0.005387079 ubox
10 49 0.018649381 ubox
10 51 0.790596029 ubox
11 23 0.007488912 ubox
11 30 0.122376603 ubox
11 32 0.278766569 ubox
11 35 0.007885471 ubox
11 40 0.013926894 ubox
11 47 0.076775534 ubox
11 48 0.008436286 ubox
11 50 0.891679274 ubox
11 59 0.087153365 ubox
12 22 0.007459496 ubox
12 25 0.312365634 ubox
12 29 0.121020206 ubox
12 31 0.278918136 ubox
12 33 0.005282779 ubox
12 34 0.007111756 ubox
12 39 0.014095425 ubox
12 46 0.075425850 ubox
12 49 0.885243436 ubox
12 51 0.008476234 ubox
12 58 0.087399872 ubox
13 24 0.488861106 ubox
13 30 0.270641280 ubox
13 32 0.007761459 ubox
13 38 0.014140343 ubox
13 45 0.053925202 ubox
13 48 0.793839939 ubox
13 50 0.007177282 ubox
13 60 0.023036017 ubox
14 23 0.537571407 ubox
14 30 0.068290655 ubox
14 32 0.005741225 ubox
14 37 0.014140252 ubox
14 44 0.027304075 ubox
14 47 0.773870097 ubox
14 50 0.012861973 ubox
14 59 0.023289940 ubox
15 21 0.044223875 ubox
15 22 0.549586956 ubox
15 26 0.011919904 ubox
15 27 0.190371157 ubox
15 29 0.095359160 ubox
15 31 0.005684815 ubox
15 36 0.014132787 ubox
15 46 0.762985702 ubox
15 49 0.013336432 ubox
15 52 0.006723050 ubox
15 53 0.010262017 ubox
15 54 0.074480289 ubox
15 55 0.069526588 ubox
15 58 0.022351535 ubox
16 20 0.058731947 ubox
16 21 0.569233828 ubox
16 22 0.288992706 ubox
16 25 0.057099641 ubox
16 26 0.206999200 ubox
16 27 0.231046196 ubox
16 34 0.012414667 ubox
16 51 0.006710273 ubox
16 52 0.012687715 ubox
16 53 0.078041655 ubox
16 54 0.069446308 ubox
16 55 0.008026116 ubox
16 57 0.020750858 ubox
17 21 0.289448957 ubox
17 25 0.233033673 ubox
17 26 0.232852897 ubox
17 33 0.012399297 ubox
17 34 0.003671773 ubox
17 51 0.012780330 ubox
17 52 0.081339374 ubox
17 53 0.069173963 ubox
17 54 0.010331761 ubox
17 55 0.019205806 ubox
18 25 0.235293195 ubox
18 33 0.003452111 ubox
18 51 0.080858026 ubox
18 52 0.066622589 ubox
18 53 0.010329528 ubox
18 54 0.018989304 ubox
19 24 0.217032760 ubox
19 41 0.015240385 ubox
19 43 0.445355882 ubox
20 38 0.111272032 ubox
20 40 0.014091541 ubox
20 41 0.004784666 ubox
20 42 0.464395708 ubox
20 43 0.011737629 ubox
20 44 0.013515045 ubox
20 45 0.167500687 ubox
20 48 0.005924248 ubox
20 60 0.013732698 ubox
21 37 0.111322507 ubox
21 38 0.014549908 ubox
21 40 0.005301231 ubox
21 41 0.464426430 ubox
21 42 0.012163529 ubox
21 43 0.012225768 ubox
21 44 0.160645459 ubox
21 45 0.145151528 ubox
21 47 0.004804430 ubox
21 48 0.121575915 ubox
21 59 0.013652249 ubox
21 60 0.041888689 ubox
22 30 0.014250497 ubox
22 35 0.116354549 ubox
22 37 0.013922965 ubox
22 40 0.464820749 ubox
22 41 0.005953762 ubox
22 42 0.013601945 ubox
22 43 0.084470391 ubox
22 44 0.137633486 ubox
22 47 0.128834582 ubox
22 50 0.012584972 ubox
22 59 0.042429899 ubox
23 29 0.014256446 ubox
23 34 0.116545624 ubox
23 36 0.013295260 ubox
23 39 0.457789599 ubox
23 46 0.135155329 ubox
23 49 0.012567862 ubox
23 57 0.013466488 ubox
23 58 0.042470284 ubox
24 28 0.012860808 ubox
24 31 0.004623090 ubox
24 33 0.116815110 ubox
24 36 0.006524052 ubox
24 39 0.075147930 ubox
24 46 0.096244178 ubox
24 56 0.013430223 ubox
24 57 0.042091290 ubox
25 30 0.006532019 ubox
25 32 0.116788858 ubox
25 35 0.009407834 ubox
25 38 0.354764660 ubox
25 41 0.017604827 ubox
25 42 0.010302331 ubox
25 43 0.018461385 ubox
25 44 0.323665342 ubox
25 45 0.286542814 ubox
25 48 0.009052817 ubox
26 37 0.350382339 ubox
26 38 0.295484625 ubox
26 40 0.018437906 ubox
26 41 0.009628077 ubox
26 42 0.015700404 ubox
26 43 0.388165072 ubox
26 44 0.284437384 ubox
26 45 0.597373272 ubox
26 47 0.005015014 ubox
27 37 0.299248916 ubox
27 40 0.009444318 ubox
27 41 0.007095213 ubox
27 42 0.491410202 ubox
27 43 0.030157099 ubox
27 44 0.602533572 ubox
28 41 0.492698132 ubox
28 43 0.603605616 ubox
28 48 0.005489385 ubox
29 35 0.440645795 ubox
29 37 0.056014757 ubox
29 40 0.492828134 ubox
29 42 0.603428214 ubox
29 47 0.005676680 ubox
29 50 0.003197063 ubox
30 34 0.437991258 ubox
30 36 0.065054104 ubox
30 39 0.492779482 ubox
30 46 0.005686148 ubox
30 49 0.003197728 ubox
30 51 0.183848276 ubox
31 35 0.061025529 ubox
31 37 0.171871803 ubox
31 38 0.449708290 ubox
31 40 0.603872471 ubox
31 45 0.005574667 ubox
31 47 0.005611473 ubox
31 50 0.186607023 ubox
32 36 0.241263920 ubox
32 39 0.604109882 ubox
32 46 0.005665704 ubox
32 49 0.186615806 ubox
33 38 0.595874374 ubox
33 41 0.009590184 ubox
33 45 0.005675473 ubox
33 48 0.186487314 ubox
33 60 0.020041836 ubox
34 40 0.009892444 ubox
34 44 0.005605081 ubox
34 47 0.186628492 ubox
34 59 0.020142688 ubox
35 39 0.009837469 ubox
35 46 0.186623242 ubox
35 51 0.008413765 ubox
35 58 0.020082890 ubox
36 45 0.185261306 ubox
36 50 0.008541894 ubox
36 59 0.178311564 ubox
37 49 0.008534442 ubox
37 52 0.023406148 ubox
37 58 0.178700827 ubox
38 51 0.023600282 ubox
38 57 0.175655961 ubox
39 45 0.003846920 ubox
39 47 0.008822908 ubox
39 50 0.023641891 ubox
39 59 0.215646294 ubox
40 46 0.008827663 ubox
40 49 0.023640576 ubox
40 55 0.136637773 ubox
40 57 0.257518152 ubox
40 58 0.175311430 ubox
41 54 0.104789756 ubox
41 55 0.090169136 ubox
41 56 0.292549189 ubox
41 57 0.068786655 ubox
41 58 0.019062149 ubox
42 53 0.104414398 ubox
42 54 0.135420060 ubox
42 55 0.299238895 ubox
42 57 0.100854515 ubox
43 52 0.056293894 ubox
43 53 0.136479734 ubox
43 54 0.298645749 ubox
43 55 0.009610942 ubox
43 56 0.101477234 ubox
44 51 0.055377223 ubox
44 52 0.184191562 ubox
44 53 0.298565344 ubox
44 54 0.012399700 ubox
44 55 0.101471714 ubox
45 51 0.185136230 ubox
45 52 0.298248964 ubox
45 53 0.012706112 ubox
45 54 0.101403672 ubox
46 50 0.174189786 ubox
47 53 0.039275262 ubox
48 52 0.035533392 ubox
49 59 0.005589167 ubox
50 58 0.005606949 ubox
51 60 0.005597738 ubox
52 59 0.005649505 ubox
52 60 0.004191448 ubox
53 59 0.004637423 ubox
53 60 0.014147750 ubox
54 59 0.014559130 ubox
54 60 0.004590033 ubox
55 59 0.004678419 ubox
1 60 0.9500000 lbox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
15 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
showpage
end
%%EOF
