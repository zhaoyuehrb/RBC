%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP3A7)
} def

/sequence { (\
AAUCACUGCUGUGCAGGGCAGGAAAGCUCCACACACACAGCCCAGCAAACAGCAGCACGCUGCUGAAAAAAAGACUCAGAGGAGAGAGAUAAGGAAGGAAAGUAGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 90 0.010206108 ubox
2 106 0.004743721 ubox
3 89 0.010637858 ubox
3 95 0.004944122 ubox
3 99 0.005591507 ubox
3 105 0.004546526 ubox
4 86 0.003277459 ubox
4 88 0.010704719 ubox
4 94 0.005275648 ubox
4 98 0.005968093 ubox
4 107 0.577619899 ubox
5 103 0.006716559 ubox
5 106 0.590572286 ubox
6 40 0.006797595 ubox
6 45 0.004266886 ubox
6 55 0.799180790 ubox
6 86 0.004290563 ubox
6 93 0.004377964 ubox
6 97 0.005178860 ubox
6 102 0.006946123 ubox
6 105 0.592007087 ubox
7 39 0.006889764 ubox
7 44 0.004053650 ubox
7 47 0.004740469 ubox
7 54 0.803973390 ubox
7 57 0.029410830 ubox
7 85 0.004154514 ubox
7 92 0.004205529 ubox
7 96 0.004946340 ubox
7 101 0.006693934 ubox
7 104 0.591719191 ubox
8 36 0.003293829 ubox
8 38 0.006938754 ubox
8 41 0.021725410 ubox
8 46 0.006190066 ubox
8 53 0.805011129 ubox
8 56 0.033181950 ubox
8 103 0.591588453 ubox
9 40 0.022026470 ubox
9 45 0.006196933 ubox
9 52 0.805027566 ubox
9 55 0.033187305 ubox
9 102 0.591616084 ubox
10 33 0.016281081 ubox
10 35 0.068587406 ubox
10 37 0.017057298 ubox
10 39 0.022943665 ubox
10 44 0.005982620 ubox
10 47 0.013123208 ubox
10 51 0.804615832 ubox
10 54 0.033169217 ubox
10 91 0.004704854 ubox
10 96 0.003494798 ubox
10 101 0.569213880 ubox
11 32 0.038284258 ubox
11 34 0.161003518 ubox
11 36 0.039147245 ubox
11 38 0.025472056 ubox
11 43 0.005655697 ubox
11 46 0.025299777 ubox
11 50 0.802029600 ubox
11 53 0.033162334 ubox
11 90 0.008777803 ubox
12 20 0.004218530 ubox
12 31 0.038318133 ubox
12 33 0.161182985 ubox
12 35 0.039138282 ubox
12 37 0.025371474 ubox
12 45 0.025090333 ubox
12 47 0.731310354 ubox
12 49 0.571864616 ubox
12 52 0.026849356 ubox
12 89 0.008048985 ubox
13 19 0.004759937 ubox
13 30 0.037883178 ubox
13 32 0.161130171 ubox
13 34 0.038980250 ubox
13 36 0.025177314 ubox
13 41 0.005466702 ubox
13 46 0.979603663 ubox
14 18 0.004728736 ubox
14 40 0.005464723 ubox
14 45 0.979341383 ubox
16 29 0.165494437 ubox
16 30 0.041053944 ubox
16 43 0.983250839 ubox
17 28 0.166161770 ubox
17 29 0.040969897 ubox
17 30 0.020614151 ubox
17 42 0.984921561 ubox
17 43 0.005133170 ubox
18 27 0.171191901 ubox
18 28 0.005133681 ubox
18 29 0.020603912 ubox
18 41 0.984919503 ubox
18 42 0.004351280 ubox
18 46 0.007110005 ubox
19 26 0.171113293 ubox
19 40 0.983626884 ubox
19 45 0.007102592 ubox
20 28 0.161981038 ubox
21 27 0.163466472 ubox
21 28 0.040793711 ubox
21 29 0.027630531 ubox
21 30 0.870541727 ubox
21 43 0.007120912 ubox
22 27 0.043275965 ubox
22 28 0.023194666 ubox
22 29 0.871801833 ubox
22 42 0.007125768 ubox
23 28 0.815568997 ubox
26 41 0.007548456 ubox
27 40 0.007804478 ubox
28 39 0.008277739 ubox
36 65 0.013613160 ubox
37 64 0.013600412 ubox
38 62 0.020615125 ubox
38 65 0.013763534 ubox
39 61 0.020668744 ubox
39 64 0.013818883 ubox
40 46 0.127621469 ubox
40 60 0.020679986 ubox
40 63 0.013800204 ubox
41 45 0.126825885 ubox
41 59 0.020645756 ubox
41 62 0.012512840 ubox
41 94 0.020449033 ubox
41 98 0.020714691 ubox
42 93 0.020425907 ubox
42 94 0.035453196 ubox
42 97 0.020574679 ubox
42 98 0.035394721 ubox
43 62 0.005746500 ubox
43 65 0.027046733 ubox
43 93 0.035590749 ubox
43 97 0.035463663 ubox
44 61 0.011618890 ubox
44 64 0.027124915 ubox
45 53 0.009268420 ubox
45 56 0.019609249 ubox
45 60 0.012327506 ubox
45 63 0.027133275 ubox
46 52 0.009413488 ubox
46 55 0.019638436 ubox
46 59 0.012318277 ubox
46 62 0.025546136 ubox
47 61 0.018351589 ubox
50 62 0.041824312 ubox
50 65 0.584371330 ubox
51 61 0.045711466 ubox
51 64 0.587022768 ubox
52 60 0.049027622 ubox
52 63 0.587457288 ubox
53 59 0.048999552 ubox
53 62 0.587460712 ubox
53 65 0.051275380 ubox
54 61 0.586614345 ubox
54 64 0.051753779 ubox
55 60 0.581743694 ubox
55 63 0.051854417 ubox
56 62 0.051867650 ubox
56 107 0.050950406 ubox
57 61 0.042036552 ubox
57 103 0.004959865 ubox
57 106 0.049934426 ubox
58 102 0.005162183 ubox
58 105 0.048968133 ubox
58 107 0.773589302 ubox
59 103 0.045012983 ubox
59 106 0.801714172 ubox
60 81 0.009751278 ubox
60 82 0.013555078 ubox
60 84 0.004406031 ubox
60 102 0.048018454 ubox
60 105 0.803832109 ubox
61 80 0.009763493 ubox
61 81 0.012465140 ubox
61 83 0.004357222 ubox
61 101 0.047551305 ubox
61 104 0.803551956 ubox
62 103 0.803741306 ubox
63 73 0.023883205 ubox
63 79 0.028572750 ubox
63 81 0.003767729 ubox
63 93 0.003447149 ubox
63 94 0.005144223 ubox
63 97 0.018336411 ubox
63 98 0.044193074 ubox
63 102 0.803752133 ubox
64 72 0.025090536 ubox
64 78 0.029342594 ubox
64 80 0.003561976 ubox
64 92 0.003799030 ubox
64 93 0.005711030 ubox
64 96 0.020506519 ubox
64 97 0.046919196 ubox
64 101 0.796483261 ubox
65 77 0.030021864 ubox
66 76 0.028983106 ubox
75 81 0.020161002 ubox
75 82 0.018561313 ubox
75 84 0.321597372 ubox
75 86 0.465655348 ubox
75 88 0.804552863 ubox
75 93 0.026355275 ubox
75 94 0.009197048 ubox
75 97 0.018452085 ubox
75 98 0.007031377 ubox
76 80 0.018208912 ubox
76 81 0.017166797 ubox
76 82 0.007177257 ubox
76 83 0.323462385 ubox
76 85 0.468446872 ubox
76 87 0.808244344 ubox
76 89 0.089674121 ubox
76 92 0.023468154 ubox
76 93 0.007910449 ubox
76 94 0.007082844 ubox
76 95 0.016039906 ubox
76 96 0.014668388 ubox
76 97 0.006055466 ubox
76 98 0.005797926 ubox
76 99 0.009472111 ubox
77 81 0.010110857 ubox
77 82 0.323051961 ubox
77 84 0.468359180 ubox
77 86 0.808417186 ubox
77 88 0.092163238 ubox
77 93 0.009249780 ubox
77 94 0.019320678 ubox
77 97 0.007049667 ubox
77 98 0.009986803 ubox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
58 107 0.9500000 lbox
59 106 0.9500000 lbox
60 105 0.9500000 lbox
61 104 0.9500000 lbox
62 103 0.9500000 lbox
63 102 0.9500000 lbox
64 101 0.9500000 lbox
75 88 0.9500000 lbox
76 87 0.9500000 lbox
77 86 0.9500000 lbox
showpage
end
%%EOF
