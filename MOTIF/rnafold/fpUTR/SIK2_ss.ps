%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCGGCGCACGUCAGCGGCGGCGCGCGCCUGGCUGGGCCCUGGGGAGCGGGAGGGAAGGAGCGAAGGAGCGAAGGAGCAAGCGGAGCGGCCGUCGCCCAAGCCAAGCCGCGCUGCCAACCCUCCCGCCCGCCCGCGCUCCUGUCCGCCGUGUCUAGCAGCGGGGCCCAGC\
) } def
/len { sequence length } bind def

/coor [
[-71.07378387 407.43402100]
[-72.57039642 416.23257446]
[-76.83946991 424.02062988]
[-83.38715363 429.95648193]
[-91.47520447 433.40933228]
[-100.20411682 434.02609253]
[-108.61318207 431.76745605]
[-118.32397461 443.19989014]
[-128.03477478 454.63232422]
[-137.74555969 466.06472778]
[-147.45635986 477.49716187]
[-150.49331665 493.02416992]
[-164.62985229 497.71539307]
[-174.34065247 509.14782715]
[-184.05145264 520.58026123]
[-193.76223755 532.01269531]
[-192.22993469 547.74249268]
[-202.33349609 559.89544678]
[-218.07864380 561.26135254]
[-230.12408447 551.02984619]
[-231.32344055 535.27117920]
[-220.96517944 523.33459473]
[-205.19467163 522.30187988]
[-195.48387146 510.86944580]
[-185.77308655 499.43701172]
[-176.06228638 488.00457764]
[-173.71990967 473.29531860]
[-158.88879395 467.78637695]
[-149.17799377 456.35394287]
[-139.46719360 444.92150879]
[-129.75640869 433.48907471]
[-120.04560852 422.05664062]
[-123.79914093 401.17324829]
[-110.79055023 384.05523682]
[-89.10340118 382.02590942]
[-80.46282196 369.76455688]
[-71.82224274 357.50323486]
[-63.18165588 345.24188232]
[-54.54107285 332.98056030]
[-45.90049362 320.71923828]
[-37.25991058 308.45788574]
[-28.61932755 296.19656372]
[-19.97874451 283.93521118]
[-11.33816338 271.67388916]
[-2.69758081 259.41253662]
[5.38093853 246.77381897]
[12.88093853 233.78343201]
[20.38093948 220.79306030]
[20.04387665 205.90226746]
[33.64466095 197.81961060]
[41.14466095 184.82923889]
[48.64466095 171.83885193]
[56.14466095 158.84846497]
[53.31862640 147.06437683]
[59.48958969 136.17141724]
[71.81539154 132.29571533]
[79.54869843 119.44286346]
[87.28201294 106.59000397]
[87.72642517 92.61523438]
[99.86513519 85.67668915]
[107.59844208 72.82382965]
[115.33174896 59.97097397]
[123.06505585 47.11811829]
[130.79837036 34.26525879]
[138.53167725 21.41240120]
[146.26498413 8.55954456]
[143.91569519 -4.14586163]
[150.64923096 -14.70034027]
[162.38435364 -17.72327232]
[170.34844971 -30.43441582]
[172.26383972 -39.40198898]
[178.57283020 -43.30133820]
[186.76510620 -55.86662674]
[194.95739746 -68.43191528]
[190.33209229 -86.77583313]
[200.38121033 -102.42702484]
[218.35963440 -105.74003601]
[226.09294128 -118.59289551]
[233.82624817 -131.44575500]
[241.55955505 -144.29861450]
[233.98742676 -160.74192810]
[237.74241638 -178.29090881]
[251.14404297 -189.98960876]
[268.72668457 -191.31625366]
[275.99093628 -204.43992615]
[283.25518799 -217.56358337]
[290.51943970 -230.68725586]
[290.43316650 -246.50822449]
[303.36621094 -253.89642334]
[310.63046265 -267.02008057]
[317.89471436 -280.14376831]
[325.15896606 -293.26742554]
[332.42321777 -306.39111328]
[325.67080688 -318.43002319]
[325.75717163 -332.12466431]
[332.55245972 -343.88980103]
[344.18453979 -350.69836426]
[357.55340576 -350.86001587]
[365.05340576 -363.85040283]
[364.51232910 -380.24063110]
[378.57717896 -388.67340088]
[392.77923584 -380.47381592]
[392.50866699 -364.07690430]
[378.04379272 -356.35040283]
[370.54379272 -343.36001587]
[377.69738770 -328.60253906]
[374.62670898 -312.32369995]
[362.34490967 -300.96087646]
[345.54687500 -299.12686157]
[338.28262329 -286.00317383]
[331.01837158 -272.87951660]
[323.75415039 -259.75582886]
[316.48989868 -246.63217163]
[317.09573364 -231.74989319]
[303.64309692 -223.42301941]
[296.37884521 -210.29934692]
[289.11459351 -197.17567444]
[281.85034180 -184.05200195]
[288.57867432 -173.90068054]
[290.34948730 -161.77839661]
[286.76409912 -149.98823547]
[278.44735718 -140.79681396]
[266.93978882 -135.99848938]
[254.41241455 -136.56530762]
[246.67910767 -123.71244049]
[238.94580078 -110.85958862]
[231.21247864 -98.00672913]
[236.31326294 -87.75635529]
[235.81155396 -76.19778442]
[229.71659851 -66.22296906]
[219.45153809 -60.38379669]
[207.52268982 -60.23962784]
[199.33039856 -47.67433929]
[191.13810730 -35.10905075]
[183.05958557 -22.47032166]
[175.09550476 -9.75917721]
[175.42390442 7.77200603]
[159.11784363 16.29285240]
[151.38453674 29.14570999]
[143.65121460 41.99856567]
[135.91790771 54.85142517]
[128.18460083 67.70428467]
[120.45130157 80.55713654]
[112.71798706 93.40999603]
[112.27357483 107.38476562]
[100.13486481 114.32331085]
[92.40155792 127.17617035]
[84.66825104 140.02902222]
[84.77788544 158.42686462]
[69.13504028 166.34846497]
[61.63504028 179.33885193]
[54.13504028 192.32923889]
[46.63504028 205.31961060]
[46.43565369 221.13957214]
[33.37131882 228.29306030]
[25.87131882 241.28343201]
[18.37131882 254.27381897]
[33.33072662 253.17100525]
[43.65521622 264.05239868]
[41.76873779 278.93331909]
[29.05557823 286.89419556]
[14.84458351 282.09338379]
[9.56375408 268.05313110]
[0.92317194 280.31445312]
[-7.71741009 292.57580566]
[-16.35799217 304.83712769]
[-24.99857521 317.09848022]
[-33.63915634 329.35980225]
[-42.27973938 341.62115479]
[-50.92032242 353.88247681]
[-59.56090546 366.14379883]
[-68.20148468 378.40515137]
[-76.84207153 390.66647339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[13 26]
[14 25]
[15 24]
[16 23]
[35 173]
[36 172]
[37 171]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 157]
[47 156]
[48 155]
[50 153]
[51 152]
[52 151]
[53 150]
[56 148]
[57 147]
[58 146]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[69 136]
[70 135]
[72 134]
[73 133]
[74 132]
[77 127]
[78 126]
[79 125]
[80 124]
[84 118]
[85 117]
[86 116]
[87 115]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[98 105]
[99 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
