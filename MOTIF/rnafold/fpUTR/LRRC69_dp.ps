%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LRRC69)
} def

/sequence { (\
GAACUCUAAUGGUUACCUUGUUUUCUACUUCUUUUCCAAGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.026985396 ubox
1 19 0.009930863 ubox
1 22 0.004915219 ubox
1 23 0.108611936 ubox
1 24 0.010892589 ubox
1 25 0.067386195 ubox
1 31 0.028533266 ubox
1 34 0.003493111 ubox
1 35 0.004723751 ubox
1 36 0.035358060 ubox
1 43 0.207960043 ubox
2 13 0.021679222 ubox
2 14 0.372460289 ubox
2 18 0.008944107 ubox
2 19 0.005792953 ubox
2 21 0.004627882 ubox
2 22 0.125207736 ubox
2 23 0.011746871 ubox
2 24 0.065983856 ubox
2 30 0.028253582 ubox
2 33 0.003957875 ubox
2 34 0.005540013 ubox
2 35 0.035246591 ubox
2 42 0.204812932 ubox
3 13 0.394912969 ubox
3 18 0.004918814 ubox
3 21 0.130669720 ubox
3 22 0.010202086 ubox
3 23 0.056202304 ubox
3 29 0.024766412 ubox
3 32 0.003695704 ubox
3 33 0.005329610 ubox
3 34 0.032353162 ubox
4 12 0.397108142 ubox
4 20 0.131850440 ubox
4 40 0.132020461 ubox
5 11 0.311472084 ubox
5 12 0.076630824 ubox
5 39 0.131425593 ubox
5 41 0.701718386 ubox
6 11 0.243858380 ubox
6 12 0.025447363 ubox
6 40 0.748496018 ubox
7 11 0.023422611 ubox
7 15 0.034928211 ubox
7 20 0.043848542 ubox
7 27 0.007775764 ubox
7 39 0.710514991 ubox
8 14 0.036206964 ubox
8 19 0.049498517 ubox
8 22 0.040129429 ubox
8 23 0.009106845 ubox
8 24 0.007438475 ubox
8 26 0.007563441 ubox
8 30 0.010365495 ubox
8 33 0.009821697 ubox
8 34 0.009811682 ubox
8 35 0.011100683 ubox
9 13 0.027828483 ubox
9 18 0.047809200 ubox
9 21 0.043306442 ubox
9 22 0.009494176 ubox
9 23 0.007871654 ubox
9 29 0.011802028 ubox
9 32 0.010114906 ubox
9 33 0.009773708 ubox
9 34 0.011408334 ubox
9 42 0.013330810 ubox
10 20 0.042507658 ubox
10 27 0.055485004 ubox
10 38 0.799529647 ubox
10 41 0.008543490 ubox
11 17 0.059765108 ubox
11 18 0.036503147 ubox
11 19 0.037743029 ubox
11 22 0.006881213 ubox
11 23 0.006347917 ubox
11 24 0.004514652 ubox
11 25 0.033251617 ubox
11 26 0.061429647 ubox
11 29 0.057368420 ubox
11 31 0.011513491 ubox
11 32 0.015552550 ubox
11 34 0.005109385 ubox
11 35 0.006249684 ubox
11 36 0.021710995 ubox
11 37 0.850176252 ubox
11 43 0.031579324 ubox
12 16 0.050990081 ubox
12 17 0.039922672 ubox
12 18 0.031699140 ubox
12 21 0.007545325 ubox
12 22 0.007282484 ubox
12 23 0.005510627 ubox
12 24 0.031685817 ubox
12 25 0.061899216 ubox
12 28 0.061880030 ubox
12 30 0.010542103 ubox
12 31 0.016315502 ubox
12 33 0.005148066 ubox
12 34 0.006820108 ubox
12 35 0.021215220 ubox
12 36 0.849536796 ubox
12 42 0.033330922 ubox
13 20 0.010493322 ubox
13 27 0.060696229 ubox
13 41 0.033062826 ubox
14 20 0.008768493 ubox
14 27 0.009150145 ubox
14 40 0.015926249 ubox
15 19 0.008653557 ubox
15 21 0.052836848 ubox
15 26 0.010909824 ubox
16 20 0.054360185 ubox
17 40 0.313351580 ubox
18 39 0.314333804 ubox
18 40 0.004930626 ubox
18 41 0.004580245 ubox
19 27 0.029170699 ubox
19 38 0.314340382 ubox
19 39 0.005871666 ubox
19 40 0.004779884 ubox
20 26 0.029944301 ubox
20 28 0.822544694 ubox
20 37 0.312905763 ubox
20 42 0.029130838 ubox
21 27 0.814141230 ubox
21 40 0.003839637 ubox
21 41 0.030719914 ubox
22 39 0.004659001 ubox
22 40 0.030916227 ubox
22 41 0.006037216 ubox
23 38 0.004421441 ubox
23 39 0.030264058 ubox
23 40 0.006373616 ubox
23 41 0.004626213 ubox
24 38 0.027355949 ubox
24 39 0.005731125 ubox
24 40 0.003492752 ubox
24 41 0.068054107 ubox
25 40 0.072796898 ubox
26 39 0.070908189 ubox
28 40 0.053081533 ubox
29 39 0.053126962 ubox
29 40 0.007642309 ubox
29 41 0.015422666 ubox
30 38 0.049887450 ubox
30 39 0.008904365 ubox
30 40 0.006132235 ubox
30 41 0.313344125 ubox
31 40 0.335272386 ubox
32 39 0.330461922 ubox
32 40 0.011965101 ubox
32 41 0.021161460 ubox
33 38 0.281615695 ubox
33 39 0.017619060 ubox
33 40 0.022444022 ubox
33 41 0.014972973 ubox
34 38 0.017740654 ubox
34 39 0.018790880 ubox
34 40 0.015926767 ubox
34 41 0.011243695 ubox
35 39 0.012522716 ubox
35 40 0.011194814 ubox
35 41 0.025489160 ubox
36 40 0.027043622 ubox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
20 28 0.9500000 lbox
21 27 0.9500000 lbox
showpage
end
%%EOF
