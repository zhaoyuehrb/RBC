%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGGCGCCACACCUUGCGCGCCCCGGGGCCCAAGGAGACGACCCUGAAGAGGAGCCUGGCUACUUUUGCCUCAGACGAGUCCGGAGCGCCGGGUUAACCGGUCUGAAGUCCCAGGGGCUUUCUGGGACUGCUCAGCCACCGGCAGCUUCCGGCACCAGGGGACGCCGGACGCCGUCCGGACAUUCGGCGCGCUUGCCACGAUCUUGGACGGGUCUCGGGCCUCGACCUUUGAAUUCCCCGCUCCGGCUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[85.65750885 216.74377441]
[79.61218262 220.46600342]
[72.72113037 221.86416626]
[67.82305145 236.04193115]
[62.92496872 250.21968079]
[58.02688980 264.39743042]
[53.12880707 278.57519531]
[48.23072815 292.75296021]
[43.42007446 306.96060181]
[38.69702911 321.19763184]
[44.57812881 336.12387085]
[36.45058060 349.95581055]
[20.54914665 352.08276367]
[9.07204819 340.87313843]
[10.82353020 324.92599487]
[24.46000671 316.47460938]
[29.18305016 302.23757935]
[28.30868340 294.92010498]
[34.05297089 287.85485840]
[38.95104980 273.67712402]
[43.84913254 259.49935913]
[48.74721146 245.32159424]
[53.64529419 231.14384460]
[58.54337311 216.96607971]
[52.01869583 195.48405457]
[69.81816101 180.60267639]
[73.83415222 166.15028381]
[77.85015106 151.69787598]
[81.86614227 137.24548340]
[85.88214111 122.79309082]
[89.89813232 108.34069061]
[85.01849365 102.64515686]
[70.27390289 105.40142822]
[75.25922394 91.25408173]
[70.37958527 85.55854034]
[55.48220444 87.31013489]
[40.58482742 89.06172180]
[30.80005264 101.18178558]
[15.66703892 102.74593353]
[4.17270947 93.34295654]
[-10.72467041 95.09454346]
[-16.93788719 103.97917938]
[-26.80567360 107.91137695]
[-36.99702454 105.82267761]
[-44.21161270 98.63497162]
[-59.14762497 100.01899719]
[-74.08364105 101.40302277]
[-89.01965332 102.78704834]
[-103.92753601 104.44683838]
[-118.80220795 106.38182068]
[-133.67687988 108.31681061]
[-148.55154419 110.25180054]
[-163.42622375 112.18679047]
[-178.28868103 114.21336365]
[-193.13839722 116.33145905]
[-207.98809814 118.44955444]
[-222.81474304 126.67189026]
[-234.82017517 114.70084381]
[-226.64039612 99.85067749]
[-210.10618591 103.59984589]
[-195.25648499 101.48175812]
[-180.40678406 99.36366272]
[-174.24618530 95.31928253]
[-165.36120605 97.31211853]
[-150.48654175 95.37712860]
[-135.61186218 93.44213867]
[-120.73719788 91.50715637]
[-105.86252594 89.57216644]
[-103.44327545 87.04346466]
[-99.69013214 85.54749298]
[-95.09558868 85.69360352]
[-90.40367889 87.85103607]
[-75.46765900 86.46701050]
[-60.53165054 85.08298492]
[-45.59563828 83.69895935]
[-30.64155197 71.41544342]
[-12.47626114 80.19716644]
[2.42111897 78.44557190]
[11.42097950 66.63294983]
[26.50408936 64.64437103]
[38.83323669 74.16434479]
[53.73061371 72.41275024]
[68.62799835 70.66116333]
[103.52657318 88.04593658]
[115.38455963 78.85963440]
[127.24254608 69.67333221]
[139.10052490 60.48703003]
[150.95851135 51.30072784]
[156.54904175 37.38145828]
[154.33952332 22.54508591]
[152.12998962 7.70871162]
[149.92047119 -7.12766266]
[147.71093750 -21.96403694]
[145.50141907 -36.80041122]
[130.04797363 -42.71834946]
[119.75309753 -55.55362320]
[117.35781860 -71.73716736]
[123.42327118 -86.82981110]
[136.20285034 -96.73995972]
[133.81071472 -111.54798889]
[131.41857910 -126.35601807]
[129.02644348 -141.16404724]
[126.63430023 -155.97207642]
[124.05992126 -170.74949646]
[121.30367279 -185.49409485]
[118.54743195 -200.23869324]
[115.79119110 -214.98329163]
[112.85350800 -229.69281006]
[109.73483276 -244.36503601]
[106.61615753 -259.03723145]
[103.49748230 -273.70944214]
[100.37880707 -288.38168335]
[97.26013184 -303.05389404]
[94.14145660 -317.72610474]
[91.02278137 -332.39831543]
[87.90410614 -347.07052612]
[75.28653717 -356.97894287]
[75.31040955 -373.02197266]
[87.95740509 -382.89279175]
[103.52583313 -379.01934814]
[110.07292938 -364.37301636]
[102.57631683 -350.18920898]
[105.69499207 -335.51699829]
[108.81366730 -320.84478760]
[111.93234253 -306.17254639]
[115.05101776 -291.50033569]
[118.16969299 -276.82812500]
[121.28836823 -262.15591431]
[124.40704346 -247.48370361]
[127.52571869 -232.81149292]
[130.94894409 -229.51782227]
[132.35670471 -224.04826355]
[130.53578186 -217.73953247]
[133.29202271 -202.99493408]
[136.04827881 -188.25033569]
[138.80451965 -173.50575256]
[142.14555359 -170.12873840]
[143.41813660 -164.62615967]
[141.44233704 -158.36421204]
[143.83447266 -143.55618286]
[146.22660828 -128.74815369]
[148.61874390 -113.94012451]
[151.01087952 -99.13209534]
[164.05465698 -95.13614655]
[174.15678406 -85.86991882]
[179.31112671 -73.09629059]
[178.46099854 -59.28196335]
[171.71517944 -47.12110519]
[160.33779907 -39.00993729]
[162.54731750 -24.17356300]
[164.75683594 -9.33718777]
[166.96636963 5.49918604]
[169.17588806 20.33555984]
[171.38542175 35.17193604]
[178.28158569 21.85116386]
[193.13485718 19.75821495]
[203.44343567 30.65469170]
[200.53073120 45.36917877]
[186.84825134 51.51668930]
[201.53939819 54.54492569]
[216.23054504 57.57316208]
[230.92167664 60.60139847]
[245.61282349 63.62963486]
[258.46173096 48.04538345]
[281.41546631 45.44853592]
[302.11300659 61.20472336]
[317.10589600 61.66665268]
[332.09878540 62.12857819]
[347.09423828 62.49813843]
[362.09167480 62.77532196]
[377.08911133 63.05250549]
[385.69900513 60.08876038]
[392.26928711 63.42662048]
[407.26217651 63.88854599]
[422.25506592 64.35047150]
[437.24795532 64.81240082]
[452.24084473 65.27432251]
[467.23373413 65.73625183]
[482.22662354 66.19817352]
[497.21951294 66.66010284]
[504.10794067 57.01173019]
[514.68438721 51.92673111]
[526.28277588 52.55898666]
[536.04064941 58.63700104]
[541.60510254 68.55951691]
[556.58209229 69.39068604]
[571.55902100 70.22185516]
[583.27874756 59.96094513]
[598.45562744 61.01722717]
[608.16564941 72.25340271]
[623.14257812 73.08457947]
[637.52508545 65.20572662]
[651.39715576 73.95196533]
[650.48846436 90.32592010]
[635.73376465 97.48345947]
[622.31140137 88.06153107]
[607.33447266 87.23036194]
[596.44079590 97.32310486]
[581.24017334 96.69352722]
[570.72784424 85.19881439]
[555.75091553 84.36763763]
[540.77392578 83.53646851]
[527.86389160 96.54357910]
[509.22698975 95.94463348]
[496.75756836 81.65298462]
[481.76467896 81.19106293]
[466.77178955 80.72913361]
[451.77893066 80.26721191]
[436.78604126 79.80528259]
[421.79315186 79.34336090]
[406.80026245 78.88143158]
[391.80737305 78.41950989]
[376.81192017 78.04994202]
[361.81448364 77.77275848]
[346.81704712 77.49557495]
[340.09030151 80.50572968]
[331.63687134 77.12145996]
[316.64398193 76.65953827]
[301.65109253 76.19760895]
[298.26675415 82.89061737]
[306.47531128 95.44528198]
[291.49810791 96.27662659]
[288.11376953 102.96962738]
[297.37295532 114.77080536]
[306.63211060 126.57197571]
[315.89129639 138.37315369]
[330.42535400 147.10223389]
[326.06085205 163.48477173]
[309.11035156 163.82595825]
[304.09011841 147.63232422]
[294.83093262 135.83114624]
[285.57177734 124.02997589]
[276.31259155 112.22879791]
[256.71310425 107.31933594]
[244.68351746 93.95343781]
[242.58459473 78.32077789]
[227.89344788 75.29254150]
[213.20230103 72.26430511]
[198.51115417 69.23606873]
[183.82000732 66.20783997]
[160.14482117 63.15871429]
[148.28683472 72.34501648]
[136.42884827 81.53131866]
[124.57086182 90.71762085]
[112.71287537 99.90392303]
[104.35053253 112.35668182]
[100.33453369 126.80908203]
[96.31854248 141.26147461]
[92.30254364 155.71388245]
[88.28655243 170.16627502]
[84.27055359 184.61866760]
[89.28443146 190.11386108]
[92.07268524 196.93707275]
[92.33724213 204.23532104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 17]
[10 16]
[26 251]
[27 250]
[28 249]
[29 248]
[30 247]
[31 246]
[35 83]
[36 82]
[37 81]
[40 78]
[41 77]
[45 75]
[46 74]
[47 73]
[48 72]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 62]
[55 61]
[56 60]
[84 245]
[85 244]
[86 243]
[87 242]
[88 241]
[89 154]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[99 143]
[100 142]
[101 141]
[102 140]
[103 139]
[104 136]
[105 135]
[106 134]
[107 133]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[159 240]
[160 239]
[161 238]
[162 237]
[163 236]
[166 219]
[167 218]
[168 217]
[169 215]
[170 214]
[171 213]
[173 212]
[174 211]
[175 210]
[176 209]
[177 208]
[178 207]
[179 206]
[180 205]
[185 202]
[186 201]
[187 200]
[190 197]
[191 196]
[223 233]
[224 232]
[225 231]
[226 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
