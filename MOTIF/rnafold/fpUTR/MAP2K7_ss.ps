%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGUUCGCACGCGGAGAAGGGCGGGUGCGCGCCGCGGGCAUGCGCGGUGCGGGGCGAGACGGCGGCUCGACGGGGUCAUCCGGGCGCAGGCGCAGUGCGGUGUUUGUCUGCCGGACUGACGGGCGGCCGGGCGGUGCGCGGCGGCGGUGGCGGCGGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[102.81810760 178.23767090]
[90.34943390 169.89906311]
[83.40796661 156.60185242]
[83.69477081 141.60458374]
[91.14081573 128.58117676]
[95.77074432 114.31359863]
[84.86735535 124.61486816]
[73.96396637 134.91613770]
[69.24633026 150.01760864]
[54.68136978 153.13389587]
[43.77798462 163.43516541]
[32.87459564 173.73643494]
[21.97121048 184.03770447]
[11.06782341 194.33897400]
[6.35018349 209.44044495]
[-8.21477509 212.55673218]
[-19.11816216 222.85800171]
[-16.99327278 238.22889709]
[-24.33866119 251.89729309]
[-38.32987595 258.60739136]
[-53.58700943 255.77905273]
[-64.24337769 244.49980164]
[-66.20140076 229.10676575]
[-58.70816803 215.51885986]
[-44.64498520 208.96092224]
[-29.41943169 211.95462036]
[-18.51604462 201.65335083]
[-14.57828808 187.28869629]
[0.76655382 183.43559265]
[11.66994095 173.13432312]
[22.57332802 162.83305359]
[33.47671509 152.53178406]
[44.38010025 142.23051453]
[48.31785583 127.86585236]
[63.66270065 124.01274872]
[74.56608582 113.71147919]
[85.46947479 103.41020966]
[89.12277985 88.86190033]
[84.37966919 74.63155365]
[79.63655090 60.40120316]
[74.89343262 46.17085266]
[70.15032196 31.94050217]
[65.40720367 17.71015167]
[60.66408920 3.47980261]
[55.92097473 -10.75054741]
[50.21411133 -17.94057465]
[51.22551727 -25.29528809]
[46.75254822 -39.61285019]
[42.27957916 -53.93040848]
[37.80661011 -68.24797058]
[26.30614281 -79.11304474]
[29.89618301 -93.56852722]
[25.42321396 -107.88608551]
[20.95024490 -122.20364380]
[16.47727585 -136.52120972]
[0.84898299 -144.33389282]
[-4.21518612 -160.70356750]
[3.94398808 -175.38682556]
[-0.79912686 -189.61717224]
[-5.54224205 -203.84753418]
[-18.22557259 -208.45829773]
[-25.81509399 -219.38093567]
[-25.71530724 -232.48623657]
[-18.18746185 -242.97531128]
[-22.66043091 -257.29287720]
[-27.13339806 -271.61044312]
[-40.96001816 -283.74121094]
[-36.50476837 -300.69580078]
[-41.24788284 -314.92614746]
[-45.99100113 -329.15649414]
[-50.73411560 -343.38684082]
[-55.47723007 -357.61718750]
[-68.09921265 -368.08703613]
[-65.07669830 -384.20526123]
[-49.51898956 -389.39077759]
[-37.43052292 -378.30920410]
[-41.24687958 -362.36032104]
[-36.50376511 -348.12997437]
[-31.76064873 -333.89962769]
[-27.01753426 -319.66928101]
[-22.27441978 -305.43890381]
[-11.57819843 -299.73046875]
[-7.52596045 -287.87850952]
[-12.81583786 -276.08340454]
[-8.34286880 -261.76583862]
[-3.86990047 -247.44828796]
[11.33469200 -240.30752563]
[16.79811478 -224.06674194]
[8.68810844 -208.59063721]
[13.43122292 -194.36029053]
[18.17433739 -180.12994385]
[30.41436386 -176.02249146]
[38.15823364 -165.44934082]
[38.38800430 -152.15078735]
[30.79483795 -140.99417114]
[35.26780701 -126.67661285]
[39.74077606 -112.35905457]
[44.21374512 -98.04149628]
[55.39427185 -88.20050812]
[52.12417221 -72.72093964]
[56.59714127 -58.40337753]
[61.07011032 -44.08581924]
[65.54307556 -29.76825714]
[70.15132904 -15.49366283]
[74.89443970 -1.26331246]
[79.63755798 12.96703720]
[84.38066864 27.19738770]
[89.12378693 41.42773819]
[93.86689758 55.65808868]
[98.61001587 69.88843536]
[103.35313416 84.11878967]
[124.30522919 97.10845947]
[137.90649414 103.43343353]
[151.50778198 109.75841522]
[165.10905457 116.08338928]
[178.71032715 122.40837097]
[192.31159973 128.73335266]
[201.16946411 122.64990234]
[211.67767334 120.82963562]
[221.90901184 123.53783417]
[230.01553345 130.21546936]
[234.56233215 139.59300232]
[234.78126526 149.93138123]
[248.00172424 157.01797485]
[260.58135986 154.04148865]
[271.45938110 160.25102234]
[275.05368042 171.83016968]
[288.13766479 179.16567993]
[303.95886230 179.16545105]
[311.27661133 192.13850403]
[324.36059570 199.47401428]
[337.44454956 206.80952454]
[350.52853394 214.14503479]
[366.34973145 214.14480591]
[373.66748047 227.11785889]
[386.75146484 234.45336914]
[403.52423096 236.92523193]
[405.79214478 253.72680664]
[390.27499390 260.55722046]
[379.41595459 247.53733826]
[366.33197021 240.20182800]
[351.44662476 240.72673035]
[343.19302368 227.22900391]
[330.10903931 219.89349365]
[317.02508545 212.55798340]
[303.94110107 205.22247314]
[289.05575562 205.74737549]
[280.80215454 192.24964905]
[267.71817017 184.91413879]
[250.22814941 186.10025024]
[240.91513062 170.23841858]
[227.69467163 163.15182495]
[209.56198120 170.17071533]
[191.80999756 161.52095032]
[185.98661804 142.33462524]
[172.38534546 136.00964355]
[158.78407288 129.68466187]
[145.18280029 123.35968781]
[131.58152771 117.03471375]
[117.98024750 110.70973206]
[126.88413239 122.78121948]
[138.06521606 132.78039551]
[143.08039856 146.91716003]
[140.70066833 161.72718811]
[131.50920105 173.58117676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 37]
[7 36]
[8 35]
[10 33]
[11 32]
[12 31]
[13 30]
[14 29]
[16 27]
[17 26]
[38 111]
[39 110]
[40 109]
[41 108]
[42 107]
[43 106]
[44 105]
[45 104]
[47 103]
[48 102]
[49 101]
[50 100]
[52 98]
[53 97]
[54 96]
[55 95]
[58 91]
[59 90]
[60 89]
[64 86]
[65 85]
[66 84]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[112 160]
[113 159]
[114 158]
[115 157]
[116 156]
[117 155]
[123 152]
[124 151]
[127 149]
[128 148]
[130 146]
[131 145]
[132 144]
[133 143]
[135 141]
[136 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
