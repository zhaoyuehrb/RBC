%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACGGACUCUUGCUAUGUUGCCCAGGCUGGUCUUGAACUCCUGGCCUCAAGCAAUCCUCCUGCCUCAGCCUCCCAAAGCACGGGGAUUACAAACCCUGCUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[209.80082703 157.10610962]
[196.20620728 150.76684570]
[182.61158752 144.42756653]
[167.15090942 150.86526489]
[151.47988892 144.06436157]
[145.38684082 127.74597931]
[131.61360168 121.80478668]
[117.84035492 115.86358643]
[105.17184448 123.30629730]
[90.54428864 121.92079163]
[79.49847412 112.23188782]
[76.21845245 97.90965271]
[62.44520950 91.96845245]
[48.67196655 86.02725983]
[34.89872360 80.08605957]
[21.12548447 74.14486694]
[11.84825230 73.59365082]
[7.04202986 67.82535553]
[-6.55258703 61.48608398]
[-21.24686241 66.65483856]
[-34.94343185 60.03225327]
[-39.78049469 45.99165726]
[-53.37511063 39.65238190]
[-66.96972656 33.31310654]
[-76.22700500 32.49229813]
[-80.86342621 26.58665848]
[-94.26791382 19.85467148]
[-107.67240143 13.12268257]
[-114.53675079 13.12636757]
[-119.53841400 10.03455448]
[-121.64343262 5.58956861]
[-134.63381958 -1.91043127]
[-147.62419128 -9.41043091]
[-163.43037415 -6.66377068]
[-175.33670044 -17.41639519]
[-174.20967102 -33.41981125]
[-160.91381836 -42.39756775]
[-145.64860535 -37.46269989]
[-140.12419128 -22.40081215]
[-127.13381958 -14.90081215]
[-114.14343262 -7.40081215]
[-100.94041443 -0.28180677]
[-87.53592682 6.45018101]
[-74.13143921 13.18216896]
[-60.63045502 19.71849060]
[-47.03583908 26.05776405]
[-33.44121933 32.39703751]
[-19.57629395 27.07732201]
[-5.69911385 33.31258774]
[-0.21331310 47.89146805]
[13.38130379 54.23073959]
[27.06668091 60.37162399]
[40.83992386 66.31282043]
[54.61316299 72.25402069]
[68.38640594 78.19521332]
[82.15964508 84.13641357]
[94.82815552 76.69370270]
[109.45571136 78.07920837]
[120.50152588 87.76811218]
[123.78154755 102.09034729]
[137.55479431 108.03154755]
[151.32803345 113.97274017]
[163.27995300 107.56408691]
[176.54121399 109.23507690]
[186.24159241 118.14390564]
[188.95086670 130.83294678]
[202.54548645 137.17222595]
[216.14010620 143.51148987]
[223.61334229 139.06842041]
[232.15188599 138.04968262]
[240.27877808 140.55380249]
[246.61965942 146.07656860]
[250.13508606 153.61036682]
[250.29060364 161.82736206]
[263.05734253 169.70201111]
[275.82409668 177.57666016]
[291.01907349 174.14874268]
[303.85421753 182.31663513]
[307.02853394 196.82383728]
[319.79528809 204.69848633]
[332.56204224 212.57313538]
[345.32879639 220.44778442]
[354.42819214 222.33775330]
[358.34765625 228.74171448]
[370.87997437 236.98434448]
[383.41229248 245.22697449]
[397.47048950 238.87316895]
[412.72875977 241.15104675]
[424.31823730 251.33374023]
[428.54080200 266.17199707]
[424.04901123 280.93096924]
[412.27618408 290.90112305]
[396.97900391 292.90103149]
[383.03872681 286.29254150]
[374.90365601 273.18435669]
[375.16964722 257.75930786]
[362.63732910 249.51666260]
[350.10501099 241.27403259]
[337.45416260 233.21453857]
[324.68740845 225.33988953]
[311.92065430 217.46524048]
[299.15390015 209.59059143]
[284.76513672 213.26470947]
[271.70565796 205.46057129]
[267.94946289 190.34339905]
[255.18270874 182.46875000]
[242.41595459 174.59410095]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[6 62]
[7 61]
[8 60]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[18 51]
[19 50]
[22 47]
[23 46]
[24 45]
[26 44]
[27 43]
[28 42]
[31 41]
[32 40]
[33 39]
[74 107]
[75 106]
[76 105]
[79 102]
[80 101]
[81 100]
[82 99]
[84 98]
[85 97]
[86 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
