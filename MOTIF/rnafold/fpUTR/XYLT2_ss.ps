%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCUCCCUAGGCGUGGAGGAGGGGGGGCGGCUCAGCCCCGCGCCCGUGCGCGCGCUCGCGGCCGGGUUGCAGGGCUGGGCGCGCGCCCCGCGUCCCGGGCAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[81.45931244 113.49039459]
[70.12306976 123.31330872]
[58.78682327 133.13621521]
[53.42420197 148.02087402]
[38.73871994 150.50799561]
[27.40247536 160.33090210]
[16.06623077 170.15382385]
[4.72998810 179.97673035]
[-6.60625553 189.79963684]
[-17.80107689 199.78343201]
[-28.85219383 209.92605591]
[-39.90331268 220.06867981]
[-44.30337143 235.86650085]
[-60.25001907 239.69226074]
[-71.33871460 227.61033630]
[-66.16235352 212.04957581]
[-50.04593658 209.01756287]
[-38.99481964 198.87493896]
[-27.94370079 188.73231506]
[-25.10154533 181.78759766]
[-16.42916679 178.46339417]
[-5.09292316 168.64048767]
[6.24332047 158.81758118]
[17.57956505 148.99465942]
[28.91580772 139.17175293]
[33.46758270 124.98970032]
[48.96391296 121.79997253]
[60.30015564 111.97706604]
[71.63639832 102.15415192]
[94.76314545 85.51586151]
[97.74200439 70.81462097]
[100.72086334 56.11338425]
[103.48948669 41.37110901]
[106.04731750 26.59080124]
[108.60515594 11.81049347]
[111.16298676 -2.96981382]
[113.72081757 -17.75012207]
[116.27865601 -32.53042984]
[118.83648682 -47.31073761]
[121.39431763 -62.09104538]
[123.95214844 -76.87135315]
[118.68141174 -91.78878784]
[128.47566223 -103.01026917]
[131.03350830 -117.79058075]
[133.59133911 -132.57089233]
[135.93785095 -147.38621521]
[138.07257080 -162.23353577]
[140.20729065 -177.08085632]
[142.34202576 -191.92817688]
[140.44987488 -201.02104187]
[144.75555420 -207.16661072]
[147.31338501 -221.94691467]
[145.68165588 -231.09010315]
[150.16108704 -237.11021423]
[153.13993835 -251.81146240]
[156.11878967 -266.51269531]
[150.39279175 -281.87969971]
[161.04516602 -294.34802246]
[177.11769104 -291.09130859]
[182.07630920 -275.45977783]
[170.82003784 -263.53384399]
[167.84117126 -248.83259583]
[164.86231995 -234.13136292]
[162.09368896 -219.38908386]
[159.53585815 -204.60877991]
[157.18934631 -189.79345703]
[155.05461121 -174.94613647]
[152.91989136 -160.09881592]
[150.78517151 -145.25149536]
[152.98103333 -138.07617188]
[148.37164307 -130.01304626]
[145.81381226 -115.23274231]
[143.25598145 -100.45243835]
[148.70967102 -86.59219360]
[138.73245239 -74.31352234]
[136.17462158 -59.53321075]
[133.61679077 -44.75290298]
[131.05895996 -29.97259521]
[128.50112915 -15.19228840]
[125.94329071 -0.41198105]
[123.38545990 14.36832619]
[120.82762909 29.14863396]
[118.26979828 43.92893982]
[120.25986481 51.16403198]
[115.42209625 59.09224319]
[112.44324493 73.79347992]
[109.46438599 88.49472046]
[114.09963989 102.76056671]
[125.15075684 112.90319061]
[136.20187378 123.04581451]
[147.25299072 133.18843079]
[162.43368530 129.97502136]
[176.59017944 136.32904053]
[184.27899170 149.80723572]
[182.54362488 165.22697449]
[172.05137634 176.65904236]
[156.83670044 179.70758057]
[142.74998474 173.20036316]
[135.20783997 159.63955688]
[137.11036682 144.23954773]
[126.05924988 134.09692383]
[115.00813293 123.95430756]
[103.95701599 113.81168365]
[113.85427094 125.08307648]
[114.78106689 140.05441284]
[106.34954834 152.46044922]
[92.08816528 157.10943604]
[77.96508789 152.05586243]
[69.89058685 139.41456604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[5 25]
[6 24]
[7 23]
[8 22]
[9 21]
[10 19]
[11 18]
[12 17]
[30 87]
[31 86]
[32 85]
[33 83]
[34 82]
[35 81]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[41 75]
[43 73]
[44 72]
[45 71]
[46 69]
[47 68]
[48 67]
[49 66]
[51 65]
[52 64]
[54 63]
[55 62]
[56 61]
[88 103]
[89 102]
[90 101]
[91 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
