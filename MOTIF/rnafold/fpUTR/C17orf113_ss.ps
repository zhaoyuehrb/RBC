%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAGAGCGUCCACCGCCCAAGAUGGUGGCUCCUGUGUCUCCUCUCCCACCGGCAGAGCAGGAAUAAACUCUCCAGGCUUAGAUGGAUGGGCCCUGUUAGCCUGGCGGGCUGCCCCCAGCCUGCCUCCCCAUCAACUCUCCUUGUCAAGGGAGGUGCCUGUGUGUGGGGGAGGCAGGGGGGCAAGAGCAUUCAGGUGGGGGUUGGGGGUUCCUUGCUGAGAGAGCAAGA\
) } def
/len { sequence length } bind def

/coor [
[196.35202026 880.79022217]
[188.26235962 868.15863037]
[190.07090759 853.26800537]
[200.94912720 842.94018555]
[215.91346741 841.90649414]
[228.10786438 850.63964844]
[225.46966553 835.87347412]
[222.83146667 821.10729980]
[220.19326782 806.34112549]
[210.33811951 795.17309570]
[215.52763367 780.22723389]
[212.88943481 765.46105957]
[210.25123596 750.69488525]
[207.61303711 735.92871094]
[204.87448120 721.18078613]
[202.03572083 706.45190430]
[197.68965149 700.48724365]
[199.25991821 691.50341797]
[196.62171936 676.73724365]
[193.98352051 661.97106934]
[191.34532166 647.20489502]
[179.85333252 641.39514160]
[173.71026611 629.85705566]
[175.35406494 616.69317627]
[184.40736389 606.73199463]
[181.97023010 591.93133545]
[179.53308105 577.13061523]
[167.31776428 568.68542480]
[164.63531494 553.71014404]
[173.57623291 540.95483398]
[171.13908386 526.15417480]
[168.70195007 511.35348511]
[166.26480103 496.55279541]
[156.56243896 485.25177002]
[161.95472717 470.37783813]
[159.51759338 455.57714844]
[157.08044434 440.77645874]
[147.37808228 429.47543335]
[152.77037048 414.60150146]
[150.33322144 399.80081177]
[147.89608765 385.00012207]
[145.15753174 370.25222778]
[142.11872864 355.56326294]
[139.07991028 340.87429810]
[136.04109192 326.18533325]
[133.00228882 311.49636841]
[129.96347046 296.80743408]
[126.92465973 282.11846924]
[123.88584900 267.42950439]
[120.84703064 252.74053955]
[117.80821991 238.05157471]
[105.25859070 230.11164856]
[101.96755219 215.25823975]
[110.38076782 202.14886475]
[107.34194946 187.45989990]
[104.30313873 172.77095032]
[101.26432800 158.08198547]
[96.83755493 152.17700195]
[98.28549957 143.17265320]
[95.44673157 128.44372559]
[92.60796356 113.71479034]
[82.55585480 102.58127594]
[68.19252777 98.25752258]
[53.82920074 93.93376160]
[41.55901718 103.43229675]
[26.04814339 103.87089539]
[13.26082420 95.08089447]
[8.11404610 80.44223022]
[12.58685207 65.58377838]
[24.95935440 56.21891022]
[40.47407532 55.94860840]
[53.16528702 64.87680817]
[58.15296173 79.57043457]
[72.51628876 83.89419556]
[86.87960815 88.21794891]
[92.44636536 83.19189453]
[81.91428375 72.51129913]
[69.20903778 64.53779602]
[72.49428558 49.90198135]
[87.38849640 48.12363815]
[94.02719879 61.57491302]
[103.57987976 73.13978577]
[109.14663696 68.11373138]
[106.30786896 53.38480377]
[103.46910095 38.65587234]
[100.63032532 23.92694092]
[97.79155731 9.19801044]
[80.24559021 3.32584357]
[69.73131561 -13.82641220]
[72.90470886 -35.32946014]
[65.67125702 -48.47012711]
[58.43780136 -61.61079407]
[51.20434952 -74.75146484]
[35.82891083 -77.60276794]
[25.92337036 -89.70294189]
[26.16482353 -105.33866119]
[36.43926239 -117.12721252]
[51.89540863 -119.50240326]
[65.23534393 -111.34274292]
[70.16036224 -96.50096893]
[64.34501648 -81.98491669]
[71.57846832 -68.84425354]
[78.81192780 -55.70358276]
[86.04537964 -42.56291580]
[100.57311249 -46.29721451]
[100.57311249 -61.29721451]
[100.57311249 -76.29721832]
[100.57311249 -91.29721832]
[100.57311249 -106.29721832]
[100.57311249 -121.29721832]
[100.57311249 -136.29721069]
[100.57311249 -151.29721069]
[100.57311249 -166.29721069]
[91.90940857 -180.22102356]
[99.87353516 -194.55645752]
[116.27268219 -194.55645752]
[124.23681641 -180.22102356]
[115.57311249 -166.29721069]
[115.57311249 -151.29721069]
[115.57311249 -136.29721069]
[115.57311249 -121.29721832]
[115.57311249 -106.29721832]
[115.57311249 -91.29721832]
[115.57311249 -76.29721832]
[115.57311249 -61.29721451]
[115.57311249 -46.29721451]
[127.21974182 -33.16886902]
[130.07708740 -16.83869553]
[124.28874969 -2.34443331]
[112.52049255 6.35924196]
[115.35926056 21.08817291]
[118.19802856 35.81710434]
[121.03679657 50.54603195]
[123.87556458 65.27496338]
[130.97958374 67.67972565]
[142.24856567 57.77972031]
[145.18763733 72.48924255]
[152.29165649 74.89399719]
[163.49327087 64.91782379]
[174.69487000 54.94165802]
[185.89648438 44.96548462]
[197.09808350 34.98931503]
[208.29969788 25.01314545]
[219.50129700 15.03697491]
[224.13719177 -0.69326711]
[240.13929749 -4.28004646]
[251.04600525 7.96640873]
[245.63745117 23.44799423]
[229.47747803 26.23858261]
[218.27586365 36.21475220]
[207.07426453 46.19092560]
[195.87265015 56.16709518]
[184.67103577 66.14326477]
[173.46943665 76.11943817]
[162.26782227 86.09560394]
[107.33689117 110.87602234]
[110.17565918 125.60494995]
[113.01442719 140.33387756]
[115.95329285 155.04316711]
[118.99210358 169.73213196]
[122.03091431 184.42109680]
[125.06972504 199.11006165]
[137.99380493 207.80522156]
[140.86634827 222.74520874]
[132.49717712 235.01275635]
[135.53599548 249.70172119]
[138.57481384 264.39068604]
[141.61361694 279.07965088]
[144.65243530 293.76861572]
[147.69125366 308.45758057]
[150.73005676 323.14654541]
[153.76887512 337.83547974]
[156.80769348 352.52444458]
[159.84649658 367.21340942]
[163.29972839 371.09036255]
[164.78193665 375.46569824]
[164.43188477 379.50872803]
[162.69677734 382.56298828]
[165.13391113 397.36367798]
[167.57106018 412.16436768]
[177.44773865 424.52404785]
[171.88113403 438.33932495]
[174.31826782 453.14001465]
[176.75541687 467.94070435]
[186.63211060 480.30035400]
[181.06549072 494.11566162]
[183.50263977 508.91635132]
[185.93977356 523.71704102]
[188.37692261 538.51770020]
[200.93557739 547.73278809]
[203.19635010 562.77752686]
[194.33377075 574.69348145]
[196.77091980 589.49420166]
[199.20805359 604.29486084]
[213.61077881 614.23547363]
[216.30784607 631.18438721]
[206.11149597 644.56671143]
[208.74969482 659.33288574]
[211.38789368 674.09906006]
[214.02609253 688.86523438]
[216.76464844 703.61309814]
[219.60340881 718.34204102]
[224.29421997 726.16326904]
[222.37921143 733.29052734]
[225.01741028 748.05670166]
[227.65560913 762.82287598]
[230.29380798 777.58905029]
[240.33766174 789.81323242]
[234.95944214 803.70294189]
[237.59764099 818.46911621]
[240.23583984 833.23529053]
[242.87403870 848.00146484]
[246.21185303 862.62536621]
[250.24172974 877.07391357]
[254.27159119 891.52246094]
[258.30145264 905.97100830]
[262.33132935 920.41955566]
[266.36120605 934.86804199]
[279.57354736 943.96826172]
[280.55270386 959.98138428]
[268.54757690 970.62359619]
[252.76744080 967.73101807]
[245.31747437 953.52270508]
[251.91265869 938.89794922]
[247.88279724 924.44940186]
[243.85292053 910.00085449]
[239.82305908 895.55230713]
[235.79319763 881.10382080]
[231.76332092 866.65527344]
[224.56498718 879.81518555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 212]
[7 211]
[8 210]
[9 209]
[11 207]
[12 206]
[13 205]
[14 204]
[15 202]
[16 201]
[18 200]
[19 199]
[20 198]
[21 197]
[25 194]
[26 193]
[27 192]
[30 189]
[31 188]
[32 187]
[33 186]
[35 184]
[36 183]
[37 182]
[39 180]
[40 179]
[41 178]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[54 162]
[55 161]
[56 160]
[57 159]
[59 158]
[60 157]
[61 156]
[62 75]
[63 74]
[64 73]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[90 104]
[91 103]
[92 102]
[93 101]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[213 229]
[214 228]
[215 227]
[216 226]
[217 225]
[218 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
