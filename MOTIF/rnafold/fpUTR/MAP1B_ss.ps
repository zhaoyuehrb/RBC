%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCUCCUCCUCCCGGCUCCCUGCCUAGUCUCCAUAUAAAAGCGGCGCCGCCUCCCCGCCCUCUCUCACUCCCCGCUCCUCUCCGCCGCGCACUCUCCGCGGCGCUGGGAGAGGGCGGAGGGGGAGGCGGCGCGCGGCGCCAGAGGAGGGGGGACGCAGGGGGCGGAGCGGAGACAGUACCUUCGGAGAUAAUCCUUUCUCCUGCCGCAGUGGAGAGGAGCGGCCGGAGCGAGACACUUCGCCGAGGCACAGCA\
GCCGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[105.77455902 398.26968384]
[104.18682098 413.54626465]
[95.16049957 425.97290039]
[81.12364197 432.20687866]
[65.85208893 430.57125854]
[53.45381546 421.50601196]
[47.26388550 407.44970703]
[48.94736481 392.18334961]
[58.05140686 379.81353760]
[72.12706757 373.66769409]
[73.72446442 358.75299072]
[75.32186127 343.83828735]
[68.98393250 330.35943604]
[78.14685822 317.46170044]
[79.74425507 302.54699707]
[81.34165955 287.63229370]
[82.93905640 272.71759033]
[84.53645325 257.80291748]
[86.13385773 242.88819885]
[73.60301971 232.26028442]
[69.85026550 216.09278870]
[76.55124664 200.72659302]
[91.24123383 192.31028748]
[92.66171265 177.37770081]
[94.08218384 162.44511414]
[95.50266266 147.51252747]
[96.92314148 132.57992554]
[73.48809814 112.91805267]
[77.89071655 85.83376312]
[68.09838104 74.47109222]
[58.30604935 63.10842514]
[48.51371765 51.74575806]
[38.72138596 40.38308716]
[28.92905426 29.02042007]
[30.95941734 43.88237000]
[25.91975975 58.01042557]
[14.94173813 68.23211670]
[0.49046957 72.25217438]
[-14.18901157 69.16788483]
[-25.80042458 59.67182922]
[-31.73642540 45.89634705]
[-30.66408348 30.93472672]
[-22.82419395 18.14660072]
[-9.97720623 10.40354824]
[4.99208879 9.44426918]
[18.72100258 15.48315430]
[10.48937607 2.94360399]
[-3.55196548 -4.34688902]
[-4.06822395 -19.23254395]
[-12.29985046 -31.77209473]
[-20.53147697 -44.31164551]
[-28.76310158 -56.85119629]
[-36.99472809 -69.39074707]
[-45.22635651 -81.93029785]
[-53.45798111 -94.46984863]
[-61.68960571 -107.00939941]
[-70.28920746 -119.29951477]
[-79.24922943 -131.32939148]
[-93.69779968 -137.77526855]
[-95.09498596 -152.60418701]
[-104.05500793 -164.63407898]
[-113.01502991 -176.66395569]
[-121.97505188 -188.69383240]
[-130.93507385 -200.72372437]
[-139.89509583 -212.75360107]
[-150.08526611 -223.76089478]
[-161.38967896 -233.62040710]
[-172.69410706 -243.47991943]
[-181.18804932 -246.74679565]
[-184.07321167 -253.52394104]
[-195.25996399 -263.51675415]
[-206.44671631 -273.50958252]
[-217.63345337 -283.50244141]
[-228.87924194 -293.42877197]
[-240.18367004 -303.28829956]
[-251.48809814 -313.14779663]
[-262.79251099 -323.00732422]
[-271.28646851 -326.27420044]
[-274.17163086 -333.05133057]
[-285.35836792 -343.04415894]
[-296.54510498 -353.03698730]
[-307.73187256 -363.02981567]
[-318.91860962 -373.02264404]
[-330.10534668 -383.01547241]
[-341.29211426 -393.00833130]
[-352.71261597 -402.73312378]
[-364.36047363 -412.18444824]
[-376.00833130 -421.63577271]
[-387.65618896 -431.08706665]
[-399.30404663 -440.53839111]
[-410.95190430 -449.98971558]
[-426.26974487 -446.84365845]
[-440.00149536 -454.32516479]
[-445.66342163 -468.90173340]
[-440.58215332 -483.69076538]
[-427.15692139 -491.70928955]
[-411.72668457 -489.17120361]
[-401.57714844 -477.27496338]
[-401.50057983 -461.63757324]
[-389.85272217 -452.18624878]
[-378.20486450 -442.73492432]
[-366.55700684 -433.28363037]
[-354.90914917 -423.83230591]
[-343.26129150 -414.38098145]
[-340.49273682 -414.51684570]
[-337.50411987 -413.58255005]
[-334.69619751 -411.48913574]
[-332.49447632 -408.29193115]
[-331.29928589 -404.19506836]
[-320.11251831 -394.20223999]
[-308.92578125 -384.20941162]
[-297.73904419 -374.21658325]
[-286.55227661 -364.22375488]
[-275.36553955 -354.23089600]
[-264.17880249 -344.23806763]
[-252.93299866 -334.31173706]
[-241.62858582 -324.45220947]
[-230.32415771 -314.59271240]
[-219.01972961 -304.73318481]
[-211.93681335 -302.71179199]
[-207.64062500 -294.68917847]
[-196.45387268 -284.69635010]
[-185.26713562 -274.70352173]
[-174.08038330 -264.71069336]
[-162.83459473 -254.78433228]
[-151.53016663 -244.92481995]
[-140.22575378 -235.06530762]
[-133.27557373 -237.88401794]
[-119.37522888 -243.52143860]
[-112.42505646 -246.34014893]
[-111.18170929 -261.28851318]
[-109.93835449 -276.23690796]
[-108.69499969 -291.18527222]
[-107.45164490 -306.13366699]
[-112.16426849 -322.41946411]
[-97.81949615 -331.45626831]
[-85.16482544 -320.17373657]
[-92.50326538 -304.89031982]
[-93.74662018 -289.94192505]
[-94.98997498 -274.99356079]
[-96.23332214 -260.04516602]
[-97.47667694 -245.09678650]
[-102.96898651 -234.68218994]
[-110.48705292 -227.13754272]
[-119.10621643 -222.78982544]
[-127.86521149 -221.71362305]
[-118.90518951 -209.68373108]
[-109.94516754 -197.65385437]
[-100.98514557 -185.62397766]
[-92.02513123 -173.59410095]
[-83.06510925 -161.56420898]
[-69.25741577 -155.97880554]
[-67.21934509 -140.28941345]
[-58.25932693 -128.25953674]
[-53.72098923 -142.55650330]
[-39.75764465 -148.03602600]
[-26.70703316 -140.64132690]
[-24.23115158 -125.84706879]
[-34.16301346 -114.60615540]
[-49.15005493 -115.24102783]
[-40.91843033 -102.70147705]
[-32.68680573 -90.16192627]
[-24.45517731 -77.62237549]
[-16.22355270 -65.08282471]
[-7.99192572 -52.54327393]
[0.23970062 -40.00372314]
[8.47132683 -27.46417046]
[21.92388725 -21.07059097]
[23.02892685 -5.28802252]
[31.26055336 7.25152826]
[40.29172134 19.22808838]
[50.08405304 30.59075546]
[59.87638855 41.95342636]
[69.66871643 53.31609344]
[79.46105194 64.67876434]
[89.25337982 76.04142761]
[95.77189636 73.35650635]
[102.95468903 72.46266937]
[110.30554199 73.52085876]
[117.29064178 76.55368042]
[123.37731171 81.43721008]
[128.07424927 87.90354156]
[130.97045898 95.55447388]
[131.76966858 103.88560486]
[130.31745911 112.31951904]
[144.21780396 117.95693207]
[158.11814880 123.59435272]
[173.81451416 121.61075592]
[182.70085144 133.56410217]
[196.60119629 139.20150757]
[207.93180847 129.03398132]
[222.49400330 124.81144714]
[237.38450623 127.31997681]
[249.65881348 136.00920105]
[256.91329956 149.11193848]
[257.75595093 164.00338745]
[271.65631104 169.64080811]
[285.55664062 175.27821350]
[301.25302124 173.29463196]
[310.13934326 185.24795532]
[324.03970337 190.88537598]
[337.94003296 196.52278137]
[351.84039307 202.16020203]
[367.53674316 200.17660522]
[376.42309570 212.12994385]
[390.32342529 217.76736450]
[404.22378540 223.40476990]
[418.12411499 229.04219055]
[432.02447510 234.67959595]
[443.66790771 224.74536133]
[458.59689331 221.37132263]
[473.38082886 225.33279419]
[484.62252808 235.71946716]
[489.73867798 250.14456177]
[487.55364990 265.29330444]
[478.56954956 277.68460083]
[464.85086060 284.47106934]
[449.55001831 284.09317017]
[436.18304443 276.63778687]
[427.82159424 263.81808472]
[426.38705444 248.57994080]
[412.48672485 242.94253540]
[398.58636475 237.30511475]
[384.68603516 231.66770935]
[370.78567505 226.03028870]
[356.08355713 228.41711426]
[346.20297241 216.06054688]
[332.30264282 210.42312622]
[318.40228271 204.78572083]
[304.50195312 199.14830017]
[289.79980469 201.53512573]
[279.91921997 189.17855835]
[266.01889038 183.54115295]
[252.11854553 177.90373230]
[241.14128113 188.00151062]
[226.80940247 192.34970093]
[211.95001221 190.03459167]
[199.51864624 181.46247864]
[192.01138306 168.28947449]
[190.96379089 153.10185242]
[177.06344604 147.46443176]
[162.36132812 149.85125732]
[152.48074341 137.49468994]
[138.58039856 131.85728455]
[124.68004608 126.21986389]
[111.85572815 134.00041199]
[110.43524933 148.93299866]
[109.01477814 163.86558533]
[107.59429932 178.79817200]
[106.17382050 193.73077393]
[117.14482117 202.04406738]
[122.54056549 214.58976746]
[121.05307770 228.05653381]
[113.17604065 238.94691467]
[101.04855347 244.48559570]
[99.45115662 259.40029907]
[97.85375977 274.31500244]
[96.25636292 289.22970581]
[94.65895844 304.14440918]
[93.06156158 319.05911255]
[99.28524017 333.60476685]
[90.23656464 345.43569946]
[88.63916779 360.35040283]
[87.04177094 375.26510620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 264]
[11 263]
[12 262]
[14 260]
[15 259]
[16 258]
[17 257]
[18 256]
[19 255]
[23 250]
[24 249]
[25 248]
[26 247]
[27 246]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[46 170]
[47 169]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 154]
[58 153]
[60 151]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 127]
[67 126]
[68 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 119]
[75 118]
[76 117]
[77 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[130 142]
[131 141]
[132 140]
[133 139]
[134 138]
[185 245]
[186 244]
[187 243]
[189 241]
[190 240]
[196 234]
[197 233]
[198 232]
[200 230]
[201 229]
[202 228]
[203 227]
[205 225]
[206 224]
[207 223]
[208 222]
[209 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
