%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCCCCCUCCUCGCGCGCCAUGUAACCCCGCCCCGCCGGCGGUGAGCUCAAGACCCCCGCGCGCACCGAGCCGAGCCGGCGGCUGAGGAGAGCCAGGCCCGAUGUGGCGGGGGCUACGCGCCGCGGCCGAGCCGUGAGGAAGCGGCUCGCGCUCACGCGUCCCCCAGCACCUCGAGCGGCUGUUCCACACCGCCCAGCCUAGGCCUGCCGGGGC\
) } def
/len { sequence length } bind def

/coor [
[-14.18382263 247.13862610]
[-29.97320747 246.45242310]
[-40.59103775 234.74613953]
[-39.73794174 218.96488953]
[-27.92004967 208.47142029]
[-27.26877213 193.48556519]
[-26.61749458 178.49971008]
[-25.96621704 163.51385498]
[-36.91263199 153.25831604]
[-51.82429504 154.88383484]
[-66.73596191 156.50933838]
[-81.64762115 158.13484192]
[-96.55928802 159.76034546]
[-111.47095490 161.38586426]
[-135.85604858 197.02014160]
[-149.68287659 202.83554077]
[-163.50970459 208.65093994]
[-177.33653259 214.46635437]
[-191.16336060 220.28175354]
[-204.99017334 226.09715271]
[-208.30784607 248.31721497]
[-224.27929688 263.93484497]
[-246.31390381 266.72183228]
[-265.44888306 255.70046997]
[-278.51101685 263.07473755]
[-279.06024170 276.84497070]
[-286.28353882 288.45416260]
[-298.20401001 294.92745972]
[-311.65802002 294.66854858]
[-323.13449097 287.85192871]
[-336.30203247 295.03631592]
[-349.46957397 302.22073364]
[-362.63711548 309.40512085]
[-375.80468750 316.58953857]
[-381.69088745 331.51373291]
[-397.07070923 336.07888794]
[-410.14608765 326.78295898]
[-410.88668823 310.75698853]
[-398.72439575 300.29476929]
[-382.98907471 303.42196655]
[-369.82153320 296.23757935]
[-356.65399170 289.05316162]
[-343.48641968 281.86877441]
[-330.31887817 274.68435669]
[-328.73092651 258.34350586]
[-317.60317993 246.04699707]
[-301.17553711 242.77532959]
[-285.88531494 250.01257324]
[-272.82315063 242.63830566]
[-274.32333374 234.65228271]
[-273.91854858 226.52088928]
[-271.62371826 218.69313049]
[-267.55847168 211.60295105]
[-261.94070435 205.64517212]
[-255.07501221 201.15351868]
[-247.33615112 198.38198853]
[-239.14863586 197.49037170]
[-230.96339417 198.53518677]
[-223.23294067 201.46604919]
[-216.38636780 206.12814331]
[-210.80558777 212.27032471]
[-196.97875977 206.45492554]
[-183.15193176 200.63952637]
[-169.32510376 194.82412720]
[-155.49827576 189.00871277]
[-141.67146301 183.19331360]
[-140.53575134 175.77980042]
[-155.36273193 173.50813293]
[-153.09082031 158.68118286]
[-138.26432800 160.95277405]
[-137.12861633 153.53926086]
[-148.58042908 143.85131836]
[-160.03222656 134.16337585]
[-171.48402405 124.47542572]
[-182.93582153 114.78748322]
[-198.66256714 116.35118866]
[-210.83564758 106.27191925]
[-212.23298645 90.52952576]
[-202.02558899 78.46369171]
[-186.26930237 77.23285675]
[-174.31205750 87.56726074]
[-173.24787903 103.33568573]
[-161.79608154 113.02362823]
[-150.34426880 122.71157074]
[-138.89247131 132.39952087]
[-127.44067383 142.08746338]
[-113.09645844 146.47419739]
[-98.18479156 144.84869385]
[-83.27313232 143.22317505]
[-68.36146545 141.59767151]
[-53.44980240 139.97216797]
[-38.53813934 138.34666443]
[-33.90413284 118.21925354]
[-18.26841164 106.09568024]
[0.64207554 106.58094025]
[14.31593609 118.36090088]
[28.66015434 113.97417450]
[43.00437164 109.58744049]
[57.34859085 105.20071411]
[71.69281006 100.81398773]
[86.03702545 96.42725372]
[99.25624084 89.33835602]
[110.84709167 79.81721497]
[122.43794250 70.29606628]
[128.19046021 55.55771255]
[142.93630981 53.45795822]
[154.52716064 43.93681717]
[166.11801147 34.41567230]
[167.80560303 18.93052292]
[179.69599915 9.43984509]
[194.44831848 11.14412975]
[206.03916931 1.62298536]
[217.63002014 -7.89815855]
[229.22087097 -17.41930199]
[240.81172180 -26.94044685]
[243.48841858 -32.97791290]
[248.11619568 -36.26674652]
[252.87875366 -36.56357956]
[264.74038696 -45.74517059]
[276.60202026 -54.92675781]
[288.46365356 -64.10835266]
[300.32528687 -73.28993988]
[299.50289917 -85.14459229]
[304.45251465 -95.81590271]
[313.84045410 -102.70333099]
[325.26776123 -104.19024658]
[335.88253784 -100.02214813]
[348.00500488 -108.85648346]
[360.12750244 -117.69082642]
[372.18569946 -126.61267853]
[384.17901611 -135.62158203]
[396.17233276 -144.63049316]
[408.16564941 -153.63940430]
[420.15896606 -162.64831543]
[432.15228271 -171.65722656]
[444.14559937 -180.66612244]
[456.13888550 -189.67503357]
[458.11392212 -205.35543823]
[470.64926147 -214.98046875]
[486.30789185 -212.83976746]
[495.79983521 -200.20338440]
[493.49371338 -184.56825256]
[480.75769043 -175.21041870]
[465.14779663 -177.68171692]
[453.15447998 -168.67282104]
[441.16119385 -159.66390991]
[429.16787720 -150.65499878]
[417.17456055 -141.64608765]
[405.18124390 -132.63717651]
[393.18792725 -123.62827301]
[381.19461060 -114.61936951]
[377.73599243 -108.09175110]
[368.96182251 -105.56834412]
[356.83935547 -96.73400879]
[344.71685791 -87.89967346]
[342.96969604 -69.67382050]
[328.19903564 -58.32189178]
[309.50689697 -61.42830276]
[297.64526367 -52.24671173]
[285.78363037 -43.06512451]
[273.92196655 -33.88353348]
[262.06033325 -24.70194435]
[250.33287048 -15.34959698]
[238.74201965 -5.82845259]
[227.15116882 3.69269180]
[215.56031799 13.21383572]
[203.96946716 22.73497963]
[202.77636719 37.53741455]
[191.15722656 47.35832596]
[175.63916016 46.00652313]
[164.04830933 55.52766800]
[152.45745850 65.04881287]
[147.53399658 79.10614777]
[131.95907593 81.88691711]
[120.36823273 91.40806580]
[108.77738190 100.92920685]
[115.42690277 102.05882263]
[122.01653290 103.55018616]
[133.60739136 113.07132721]
[145.19824219 122.59247589]
[156.78907776 132.11361694]
[165.40251160 135.14062500]
[168.47750854 141.85746765]
[179.92930603 151.54541016]
[191.38111877 161.23335266]
[207.37866211 166.84716797]
[206.41279602 183.77359009]
[189.88049316 187.53115845]
[181.69316101 172.68515015]
[170.24136353 162.99720764]
[158.78956604 153.30926514]
[147.26794434 143.70446777]
[135.67709351 134.18331909]
[124.08624268 124.66217804]
[112.49539185 115.14103699]
[121.21614075 127.34548187]
[121.57254791 142.34124756]
[113.44144440 154.94621277]
[99.63271332 160.80444336]
[84.91826630 157.89151001]
[74.38302612 147.21401978]
[71.66766357 132.46183777]
[77.71054840 118.73291016]
[90.42375946 110.77147675]
[76.07953644 115.15820312]
[61.73532104 119.54492950]
[47.39110184 123.93166351]
[33.04688263 128.31838989]
[18.70266533 132.70512390]
[16.23256302 147.64756775]
[5.46169710 159.61691284]
[-10.98036194 164.16513062]
[-11.63163948 179.15098572]
[-12.28291702 194.13684082]
[-12.93419456 209.12269592]
[-2.07121968 220.60186768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 215]
[6 214]
[7 213]
[8 212]
[9 92]
[10 91]
[11 90]
[12 89]
[13 88]
[14 87]
[15 66]
[16 65]
[17 64]
[18 63]
[19 62]
[20 61]
[24 49]
[25 48]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[96 209]
[97 208]
[98 207]
[99 206]
[100 205]
[101 204]
[102 176]
[103 175]
[104 174]
[106 172]
[107 171]
[108 170]
[111 167]
[112 166]
[113 165]
[114 164]
[115 163]
[118 162]
[119 161]
[120 160]
[121 159]
[122 158]
[127 155]
[128 154]
[129 153]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[178 195]
[179 194]
[180 193]
[181 192]
[183 191]
[184 190]
[185 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
