%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGACGCGCCGGCCAUGCCGGCGGCUGUUGUCGGGCCUCCAGCGGGCGGGGCCGUUGGCGGAGCAGAGGGGAGGCGCAGCCGGGCGGAGGGCCCACGAGGGCUCAGCCUUCCCGGUCAGCGGUGGUGACGGUAUCCCAGAGUGCCAGAGAACCGUUGCUUUUCCGAGUUGCUCUUCUUCCAGGCUCCGUUGGUGGUCGGC\
) } def
/len { sequence length } bind def

/coor [
[-173.03382874 644.32012939]
[-181.00209045 651.07598877]
[-191.15565491 652.30035400]
[-199.31872559 664.88464355]
[-207.48178101 677.46893311]
[-215.64485168 690.05322266]
[-223.80790710 702.63751221]
[-231.47563171 715.52960205]
[-238.63642883 728.71002197]
[-245.79722595 741.89044189]
[-252.95802307 755.07080078]
[-260.11883545 768.25122070]
[-267.27963257 781.43164062]
[-274.44042969 794.61199951]
[-276.68893433 811.41619873]
[-293.45886230 813.90740967]
[-300.49508667 798.48254395]
[-287.62081909 787.45123291]
[-280.46002197 774.27081299]
[-273.29922485 761.09045410]
[-266.13842773 747.91003418]
[-258.97763062 734.72961426]
[-251.81683350 721.54925537]
[-244.65603638 708.36883545]
[-259.56533813 710.01593018]
[-270.26153564 699.49963379]
[-268.86764526 684.56457520]
[-256.41015625 676.20922852]
[-242.06314087 680.58679199]
[-236.39219666 694.47448730]
[-228.22914124 681.89019775]
[-220.06607056 669.30590820]
[-211.90301514 656.72161865]
[-203.73994446 644.13732910]
[-204.16082764 624.80993652]
[-186.07841492 615.91058350]
[-178.31066895 603.07849121]
[-170.54292297 590.24639893]
[-171.12832642 572.71026611]
[-154.92770386 563.96398926]
[-147.36045837 551.01263428]
[-146.69990540 543.64605713]
[-139.57347107 537.92004395]
[-131.80574036 525.08795166]
[-131.83396912 510.19338989]
[-118.06850433 502.39450073]
[-110.30075836 489.56240845]
[-102.53302002 476.73034668]
[-94.76527405 463.89825439]
[-86.99752808 451.06619263]
[-79.22978210 438.23413086]
[-71.46204376 425.40203857]
[-63.69429398 412.56997681]
[-55.92655182 399.73788452]
[-62.77249908 384.82141113]
[-59.34670258 368.60061646]
[-46.80491638 357.50598145]
[-29.95626450 356.05609131]
[-22.38902283 343.10476685]
[-22.64888382 328.21243286]
[-9.00638103 320.20037842]
[-1.43913829 307.24905396]
[6.12810469 294.29772949]
[13.69534779 281.34640503]
[21.26259041 268.39508057]
[28.82983398 255.44377136]
[36.39707565 242.49243164]
[35.07522202 223.20570374]
[52.72288895 213.47268677]
[59.88368607 200.29228210]
[67.04448700 187.11187744]
[74.20528412 173.93147278]
[81.36608124 160.75108337]
[88.52687836 147.57067871]
[95.68767548 134.39027405]
[102.84847260 121.20987701]
[89.23434448 117.35878754]
[81.57901764 106.24873352]
[82.71706390 93.46321869]
[91.29405975 84.81499481]
[90.12880707 69.86032104]
[88.96354675 54.90565109]
[87.79828644 39.95098114]
[86.63303375 24.99631119]
[85.46777344 10.04164124]
[74.69955444 -4.89167070]
[82.87014008 -20.41907501]
[81.47245789 -35.35381699]
[70.47329712 -50.11785507]
[78.40142059 -65.77044678]
[76.77163696 -80.68164825]
[75.14185333 -95.59284210]
[73.51206970 -110.50404358]
[71.88229370 -125.41523743]
[70.25251007 -140.32643127]
[60.12724686 -153.22648621]
[66.48664856 -168.34236145]
[82.78871155 -170.12416077]
[92.26326752 -156.73892212]
[85.16370392 -141.95622253]
[86.79348755 -127.04502106]
[88.42327118 -112.13382721]
[90.05305481 -97.22262573]
[91.68283844 -82.31143188]
[93.31261444 -67.40023041]
[102.54804993 -59.58081818]
[104.02413177 -47.16627121]
[96.40719604 -36.75150299]
[97.80488586 -21.81676483]
[106.91759491 -13.85466766]
[108.20042419 -1.41866672]
[100.42244720 8.87638283]
[101.58769989 23.83105469]
[102.75296021 38.78572464]
[103.91821289 53.74039459]
[105.08347321 68.69506836]
[106.24873352 83.64973450]
[117.09636688 90.72135162]
[120.92449951 104.48753357]
[134.62135315 98.37227631]
[148.31819153 92.25702667]
[162.01504517 86.14176941]
[175.71189880 80.02651215]
[189.40873718 73.91126251]
[189.27769470 59.77486420]
[194.52984619 46.69638062]
[204.34118652 36.63903809]
[217.20602417 31.09894943]
[231.16806030 30.88262749]
[244.11776733 35.98971939]
[254.11116028 45.61805725]
[267.90145874 39.71655273]
[281.69174194 33.81504822]
[295.48205566 27.91354561]
[309.27233887 22.01204109]
[314.91625977 7.24986982]
[329.37942505 0.87866247]
[344.08111572 6.67834282]
[350.29904175 21.20806313]
[344.34423828 35.84759903]
[329.74960327 41.91157150]
[315.17385864 35.80233765]
[301.38354492 41.70384216]
[287.59326172 47.60534286]
[273.80294800 53.50684738]
[260.01266479 59.40835190]
[259.60977173 75.37963104]
[252.25700378 89.62895966]
[239.38064575 99.28166962]
[223.52691650 102.36558533]
[207.85858154 98.21381378]
[195.52400208 87.60810852]
[181.82714844 93.72336578]
[168.13029480 99.83861542]
[154.43345642 105.95387268]
[140.73660278 112.06912994]
[127.03975677 118.18437958]
[116.02887726 128.37066650]
[108.86808014 141.55107117]
[101.70728302 154.73147583]
[94.54647827 167.91188049]
[87.38568115 181.09228516]
[80.22488403 194.27267456]
[73.06408691 207.45307922]
[65.90328979 220.63348389]
[69.58985138 230.87635803]
[67.07831573 241.24288940]
[59.43380737 248.36305237]
[49.34840393 250.05967712]
[41.78115845 263.01101685]
[34.21391678 275.96234131]
[26.64667320 288.91366577]
[19.07942963 301.86499023]
[11.51218700 314.81631470]
[3.94494438 327.76763916]
[3.66354704 343.58633423]
[-9.43769646 350.67199707]
[-17.00494003 363.62332153]
[-10.53895378 375.80096436]
[-10.93325520 389.47482300]
[-17.97784615 401.07455444]
[-29.74026299 407.62420654]
[-43.09447479 407.50564575]
[-50.86222076 420.33770752]
[-58.62996674 433.16979980]
[-66.39771271 446.00186157]
[-74.16545105 458.83392334]
[-81.93319702 471.66601562]
[-89.70094299 484.49807739]
[-97.46868896 497.33016968]
[-105.23643494 510.16223145]
[-105.76380157 525.97467041]
[-118.97365570 532.85571289]
[-126.74140167 545.68780518]
[-134.40913391 558.57989502]
[-141.97636414 571.53118896]
[-139.46362305 584.18707275]
[-146.03883362 594.82037354]
[-157.71084595 598.01416016]
[-165.47859192 610.84625244]
[-173.24633789 623.67828369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[36 201]
[37 200]
[38 199]
[40 196]
[41 195]
[43 194]
[44 193]
[46 191]
[47 190]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[53 184]
[54 183]
[58 178]
[59 177]
[61 175]
[62 174]
[63 173]
[64 172]
[65 171]
[66 170]
[67 169]
[69 165]
[70 164]
[71 163]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[87 109]
[88 108]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[119 157]
[120 156]
[121 155]
[122 154]
[123 153]
[124 152]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
