%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCGUAGUGCUUAGAGGCCGAAAAAGUACAGCCCCUUCCGGGCUCCGCGGUACGGGAAGACAGCUUUGGGAUGUCGGAAGAUCCUAGAGGUCCCAAGGUAGCUGACUUGCGAAGCUGAGGCUCCAGCCGAGGGCUCCAGGCCUCUGACCGGCCCAGCAGUGAGCGCGGCUGCCCGACGCUUCAGGGCCGGGAGCAGGGAGCGUGAGUCGCC\
) } def
/len { sequence length } bind def

/coor [
[100.89701843 132.75939941]
[85.67643738 131.77819824]
[71.66143036 123.69972229]
[60.19449615 133.36975098]
[48.72756577 143.03979492]
[37.26063538 152.70982361]
[25.79370689 162.37985229]
[20.23199463 177.19126892]
[5.51448250 179.48126221]
[-5.95244789 189.15129089]
[-17.41937828 198.82133484]
[-17.71260452 209.69242859]
[-23.81400299 218.42813110]
[-33.51178360 222.28326416]
[-43.51550674 220.20953369]
[-55.26265717 229.53713989]
[-67.00981140 238.86476135]
[-73.00595093 253.50569153]
[-87.78460693 255.36061096]
[-99.53175354 264.68823242]
[-111.27890778 274.01583862]
[-111.89263916 284.87356567]
[-118.24903870 293.42550659]
[-128.05630493 296.99295044]
[-137.99450684 294.62506104]
[-150.01167297 303.60214233]
[-162.02882385 312.57922363]
[-161.68820190 328.09255981]
[-170.55879211 340.82409668]
[-185.22966003 345.87832642]
[-200.05957031 341.31176758]
[-209.34609985 328.88037109]
[-209.51841736 313.36422729]
[-200.51023865 300.72967529]
[-185.78540039 295.83489990]
[-171.00590515 300.56207275]
[-158.98875427 291.58499146]
[-146.97160339 282.60791016]
[-140.66030884 264.32980347]
[-120.60652161 262.26870728]
[-108.85937500 252.94107056]
[-97.11222076 243.61346436]
[-91.95631409 229.63970947]
[-76.33742523 227.11759949]
[-64.59027863 217.78999329]
[-52.84312439 208.46237183]
[-47.07368088 190.00608826]
[-27.08940887 187.35440063]
[-15.62247944 177.68437195]
[-4.15554905 168.01432800]
[0.58597112 153.89459229]
[16.12367439 150.91291809]
[27.59060478 141.24288940]
[39.05753708 131.57286072]
[50.52446747 121.90282440]
[61.99139786 112.23279572]
[62.54399109 104.75318146]
[50.15941620 113.21617889]
[35.82107162 108.81028748]
[30.32576180 94.85315704]
[37.81146622 81.85453033]
[52.64143372 79.60240936]
[63.64918518 89.79395294]
[64.20178223 82.31433868]
[54.28044128 71.06413269]
[44.35910416 59.81393051]
[34.43776703 48.56372833]
[24.51642990 37.31352615]
[14.59509373 26.06332207]
[4.67375612 14.81311893]
[-5.24758148 3.56291580]
[-15.16891861 -7.68728685]
[-25.09025574 -18.93749046]
[-40.02108002 -24.17018127]
[-42.63610458 -38.83343124]
[-52.55744171 -50.08363342]
[-62.64362717 -61.18628693]
[-72.89246368 -72.13896942]
[-83.14130402 -83.09165955]
[-98.37839508 -90.52586365]
[-95.45276642 -107.22547913]
[-78.59588623 -109.03709412]
[-72.18861389 -93.34049988]
[-61.93977737 -82.38780975]
[-51.69094086 -71.43512726]
[-47.03356934 -70.38408661]
[-42.98646164 -66.39708710]
[-41.30723953 -60.00497055]
[-31.38590240 -48.75476837]
[-17.16471863 -44.32676697]
[-13.84005356 -28.85882759]
[-3.91871595 -17.60862350]
[6.00262117 -6.35842180]
[15.92395878 4.89178133]
[25.84529686 16.14198494]
[35.76663208 27.39218712]
[45.68796921 38.64239120]
[55.60931015 49.89259338]
[65.53064728 61.14279556]
[75.45198059 72.39299774]
[107.25423431 69.11145020]
[124.59783936 90.09995270]
[139.52896118 88.66410065]
[147.77015686 84.72812653]
[154.69062805 87.31884766]
[169.64129639 86.10336304]
[184.59197998 84.88788605]
[199.54264832 83.67240143]
[214.49331665 82.45692444]
[229.44398499 81.24144745]
[244.39466858 80.02596283]
[232.68324280 70.65351868]
[233.54107666 55.67806625]
[246.24612427 47.70424652]
[260.10470581 53.44351196]
[263.45227051 68.06527710]
[271.04785156 55.13056183]
[267.29083252 40.01359940]
[275.17810059 27.00415611]
[289.61297607 23.51557541]
[297.20855713 10.58085632]
[304.80416870 -2.35386252]
[304.38397217 -18.74762535]
[318.51062012 -27.07645988]
[332.65185547 -18.77237511]
[332.26034546 -2.37790155]
[317.73889160 5.24173164]
[310.14328003 18.17645073]
[302.54769897 31.11116982]
[306.53338623 45.41675949]
[299.01461792 58.64260864]
[283.98257446 62.72615433]
[276.38699341 75.66087341]
[282.20379639 89.48710632]
[296.76177979 93.10162354]
[311.31979370 96.71614075]
[325.87777710 100.33065033]
[340.43579102 103.94516754]
[353.86608887 96.05436707]
[368.57846069 99.92738342]
[376.01837158 112.77975464]
[390.57638550 116.39427185]
[399.65765381 115.42498016]
[405.32165527 120.17093658]
[419.82473755 123.99977112]
[424.85836792 122.62943268]
[429.45504761 123.26263428]
[432.92498779 125.39772797]
[434.87738037 128.33206177]
[449.19692993 132.79867554]
[463.51644897 137.26527405]
[477.83599854 141.73188782]
[492.15554810 146.19850159]
[506.47509766 150.66510010]
[520.79467773 155.13171387]
[516.23718262 140.84083557]
[524.44226074 128.28390503]
[539.36041260 126.71902466]
[549.99261475 137.29997253]
[548.49981689 152.22550964]
[535.98272705 160.49118042]
[549.93426514 166.00071716]
[563.88580322 171.51023865]
[577.87756348 176.91671753]
[591.90881348 182.21987915]
[605.94012451 187.52304077]
[620.01007080 192.72257996]
[634.11804199 197.81822205]
[648.22601318 202.91384888]
[664.26489258 199.49542236]
[675.04235840 211.85580444]
[669.47137451 227.27970886]
[653.28302002 229.90032959]
[643.13037109 217.02180481]
[629.02239990 211.92617798]
[614.91442871 206.83053589]
[607.55670166 207.51470947]
[600.63696289 201.55430603]
[586.60565186 196.25114441]
[572.57440186 190.94799805]
[565.20733643 191.52357483]
[558.37628174 185.46176147]
[544.42474365 179.95223999]
[530.47320557 174.44271851]
[516.32806396 169.45126343]
[502.00848389 164.98464966]
[487.68896484 160.51803589]
[473.36941528 156.05143738]
[459.04986572 151.58482361]
[444.73031616 147.11822510]
[430.41076660 142.65161133]
[415.99591064 138.50286865]
[401.49279785 134.67404175]
[386.96185303 130.95227051]
[372.40386963 127.33775330]
[359.81646729 135.21766663]
[345.00109863 131.75941467]
[336.82125854 118.50316620]
[322.26327515 114.88864899]
[307.70526123 111.27413177]
[293.14727783 107.65962219]
[278.58926392 104.04510498]
[245.61013794 94.97663879]
[230.65946960 96.19211578]
[215.70880127 97.40760040]
[200.75813293 98.62307739]
[185.80744934 99.83855438]
[170.85678101 101.05403900]
[155.90611267 102.26951599]
[140.96481323 103.59521484]
[126.03368378 105.03106689]
[122.91082764 117.12015533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 56]
[4 55]
[5 54]
[6 53]
[7 52]
[9 50]
[10 49]
[11 48]
[15 46]
[16 45]
[17 44]
[19 42]
[20 41]
[21 40]
[25 38]
[26 37]
[27 36]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[75 89]
[76 88]
[77 85]
[78 84]
[79 83]
[102 211]
[103 210]
[105 209]
[106 208]
[107 207]
[108 206]
[109 205]
[110 204]
[111 203]
[116 133]
[117 132]
[120 129]
[121 128]
[122 127]
[134 202]
[135 201]
[136 200]
[137 199]
[138 198]
[141 195]
[142 194]
[144 193]
[145 192]
[149 191]
[150 190]
[151 189]
[152 188]
[153 187]
[154 186]
[155 185]
[161 184]
[162 183]
[163 182]
[164 180]
[165 179]
[166 178]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
