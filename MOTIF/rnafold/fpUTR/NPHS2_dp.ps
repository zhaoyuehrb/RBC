%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPHS2)
} def

/sequence { (\
CGCGGACCCGCAGCGACUCCACAGGGACUGCGCUCCCGUGCCCCUAGCGCUCCCGCGCUGCUGCUCCAGCCGCCCGGCAGCUCUGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.013774767 ubox
1 32 0.020104147 ubox
1 38 0.096899472 ubox
1 40 0.949214763 ubox
2 11 0.021229263 ubox
2 14 0.014000754 ubox
2 31 0.028013428 ubox
2 37 0.101010860 ubox
2 39 0.989598840 ubox
2 41 0.042300755 ubox
2 56 0.003864441 ubox
2 73 0.014211744 ubox
2 81 0.004397983 ubox
3 10 0.021256699 ubox
3 13 0.013990762 ubox
3 30 0.028033822 ubox
3 38 0.992475753 ubox
3 40 0.041713089 ubox
3 55 0.003867852 ubox
3 72 0.014324766 ubox
3 80 0.004398213 ubox
4 9 0.020994122 ubox
4 20 0.004739317 ubox
4 29 0.028034953 ubox
4 35 0.004004140 ubox
4 36 0.179166131 ubox
4 37 0.982758209 ubox
4 39 0.012399109 ubox
4 42 0.003406570 ubox
4 54 0.003818773 ubox
4 67 0.008448733 ubox
4 71 0.014328180 ubox
5 19 0.004771941 ubox
5 28 0.028025816 ubox
5 34 0.004364884 ubox
5 35 0.227489220 ubox
5 36 0.971368512 ubox
5 41 0.003414620 ubox
5 53 0.003769475 ubox
5 66 0.008461528 ubox
5 70 0.014321331 ubox
6 18 0.004735177 ubox
6 34 0.262047973 ubox
6 65 0.008389427 ubox
7 26 0.028052988 ubox
8 25 0.028087414 ubox
9 15 0.004695349 ubox
9 24 0.028080016 ubox
9 32 0.991981034 ubox
10 14 0.004410744 ubox
10 31 0.998159503 ubox
10 33 0.039421004 ubox
10 64 0.016832342 ubox
11 30 0.998185269 ubox
11 32 0.039335878 ubox
11 63 0.016855450 ubox
12 18 0.004636443 ubox
12 29 0.997863872 ubox
12 34 0.016129871 ubox
12 51 0.003732049 ubox
12 62 0.016856754 ubox
13 17 0.004838638 ubox
13 28 0.996791789 ubox
13 31 0.040079737 ubox
13 33 0.017051569 ubox
13 50 0.003953365 ubox
13 61 0.016860911 ubox
14 30 0.040091639 ubox
14 32 0.017053683 ubox
14 49 0.003956182 ubox
14 60 0.016834842 ubox
15 29 0.036560904 ubox
15 31 0.016933171 ubox
15 48 0.003969461 ubox
15 59 0.006640941 ubox
17 24 0.207534224 ubox
17 25 0.146414956 ubox
17 26 0.487683686 ubox
17 47 0.003919078 ubox
17 87 0.006279339 ubox
18 23 0.189886227 ubox
18 24 0.137222961 ubox
18 25 0.470319489 ubox
18 26 0.108863909 ubox
18 27 0.817577125 ubox
18 46 0.003894610 ubox
18 86 0.006291071 ubox
19 24 0.464268481 ubox
19 25 0.175912300 ubox
19 26 0.822616611 ubox
19 85 0.006193423 ubox
19 88 0.003560480 ubox
20 24 0.175617597 ubox
20 25 0.821120745 ubox
20 40 0.021459197 ubox
20 87 0.003636581 ubox
21 39 0.021728388 ubox
22 38 0.021632829 ubox
22 40 0.004586126 ubox
22 85 0.003600412 ubox
23 39 0.004425109 ubox
23 45 0.017107999 ubox
23 84 0.003598150 ubox
24 37 0.022695135 ubox
24 44 0.018250669 ubox
24 83 0.003583017 ubox
25 36 0.022709349 ubox
25 43 0.018259128 ubox
25 82 0.003532657 ubox
26 35 0.022709163 ubox
26 42 0.018242870 ubox
26 81 0.003521010 ubox
27 34 0.021245181 ubox
28 80 0.003496352 ubox
29 79 0.003492533 ubox
30 41 0.019366794 ubox
30 78 0.003458252 ubox
31 40 0.019399105 ubox
31 77 0.003349331 ubox
32 39 0.019502119 ubox
32 41 0.018494975 ubox
33 38 0.019557051 ubox
33 40 0.018823658 ubox
38 50 0.003261343 ubox
39 49 0.003277847 ubox
40 48 0.008971629 ubox
41 47 0.009042543 ubox
41 88 0.146588409 ubox
42 87 0.146482302 ubox
42 88 0.651395554 ubox
43 87 0.661531157 ubox
43 88 0.707213784 ubox
44 87 0.719490830 ubox
44 88 0.016553197 ubox
45 60 0.007906084 ubox
45 85 0.793502403 ubox
45 86 0.575768488 ubox
45 87 0.014043102 ubox
46 59 0.025446835 ubox
46 82 0.013720892 ubox
46 84 0.980474100 ubox
47 58 0.027409877 ubox
47 81 0.013876856 ubox
47 83 0.993957952 ubox
48 57 0.027421440 ubox
48 80 0.013847349 ubox
48 85 0.004587087 ubox
49 56 0.027432860 ubox
49 78 0.005212110 ubox
49 81 0.999091361 ubox
50 55 0.027386646 ubox
50 77 0.004902219 ubox
50 80 0.999470362 ubox
51 76 0.004024862 ubox
51 79 0.977456957 ubox
52 77 0.074082664 ubox
53 76 0.063470048 ubox
53 77 0.995956591 ubox
54 72 0.010467385 ubox
54 76 0.997526059 ubox
55 71 0.010579751 ubox
55 73 0.057625447 ubox
55 75 0.996397144 ubox
56 72 0.059908546 ubox
57 70 0.034687205 ubox
57 71 0.050669834 ubox
57 73 0.996532388 ubox
57 81 0.005205609 ubox
58 69 0.046524761 ubox
58 72 0.996757795 ubox
58 80 0.005240386 ubox
59 68 0.046535642 ubox
59 72 0.006986373 ubox
59 79 0.005246631 ubox
60 67 0.046208693 ubox
60 70 0.997591307 ubox
60 71 0.022798644 ubox
60 73 0.004715859 ubox
60 78 0.005260305 ubox
60 81 0.019287653 ubox
61 69 0.998484297 ubox
61 72 0.004739149 ubox
61 77 0.005260029 ubox
61 80 0.019404377 ubox
62 68 0.997247544 ubox
62 76 0.005069210 ubox
62 79 0.019400810 ubox
63 67 0.981367148 ubox
63 70 0.007326736 ubox
63 73 0.003648488 ubox
63 75 0.003515057 ubox
63 78 0.019375543 ubox
63 81 0.005764478 ubox
64 69 0.007336416 ubox
64 72 0.003788969 ubox
64 77 0.019238205 ubox
64 80 0.005774316 ubox
64 87 0.006269458 ubox
65 76 0.017494752 ubox
65 79 0.005704487 ubox
65 86 0.006327673 ubox
66 76 0.005213966 ubox
66 77 0.003165122 ubox
66 85 0.006272841 ubox
67 76 0.003920811 ubox
68 82 0.006645809 ubox
69 78 0.009772166 ubox
69 81 0.006917479 ubox
70 77 0.009803124 ubox
70 80 0.006918119 ubox
71 76 0.009820678 ubox
72 78 0.006922992 ubox
73 77 0.006878793 ubox
74 87 0.005533720 ubox
74 88 0.007585028 ubox
75 85 0.008862641 ubox
75 87 0.007702858 ubox
76 84 0.008888681 ubox
77 83 0.008816163 ubox
78 85 0.006474773 ubox
79 84 0.005851197 ubox
1 40 0.9500000 lbox
2 39 0.9500000 lbox
3 38 0.9500000 lbox
4 37 0.9500000 lbox
5 36 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
42 88 0.9500000 lbox
43 87 0.9500000 lbox
45 85 0.9500000 lbox
46 84 0.9500000 lbox
47 83 0.9500000 lbox
49 81 0.9500000 lbox
50 80 0.9500000 lbox
51 79 0.9500000 lbox
53 77 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
60 70 0.9500000 lbox
61 69 0.9500000 lbox
62 68 0.9500000 lbox
63 67 0.9500000 lbox
showpage
end
%%EOF
