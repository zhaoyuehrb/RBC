%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:28:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGAGGCUGGGGUUUGGGGAGAGAGGGGCGGAGGGACUGGCGGGCUCUUGGCGUCUUGGGGGAACGCUGCAACCGUCGACGGGCCUGAUCAGAAGAUCGUCUUUCUCCCGUUUCUUCGCCAUCGCUACCCCUUAUUUUUGGUUGUAUUGCAGCUCAUGCCCUGGAAAAAAGAACCUUUGGGGUUAAAAACGACAACCAACAUCAGCC\
) } def
/len { sequence length } bind def

/coor [
[114.15877533 192.98851013]
[105.22103119 205.82014465]
[90.11289215 209.85476685]
[75.96794891 203.18733215]
[69.46501923 188.96600342]
[73.67458344 173.90567017]
[86.60901642 165.11735535]
[87.95360565 150.17774963]
[89.29819489 135.23812866]
[90.64278412 120.29851532]
[84.13452911 106.78398132]
[71.61592865 98.52053070]
[59.09733200 90.25707245]
[46.57873154 81.99362183]
[34.06013489 73.73016357]
[11.65408516 74.03234863]
[2.72834063 54.31546402]
[-10.26204014 46.81546402]
[-23.25242233 39.31546402]
[-36.29853821 31.91283989]
[-49.39966202 24.60800743]
[-62.50078583 17.30317497]
[-75.60190582 9.99834251]
[-88.70303345 2.69351029]
[-101.80415344 -4.61132240]
[-114.90527344 -11.91615486]
[-130.72644043 -11.87886238]
[-138.07456970 -24.83472252]
[-151.17568970 -32.13955688]
[-164.27680969 -39.44438934]
[-173.29684448 -40.89050674]
[-177.51809692 -46.95775223]
[-190.50846863 -54.45775223]
[-203.49885559 -61.95775223]
[-216.48924255 -69.45775604]
[-229.47961426 -76.95775604]
[-242.47000122 -84.45775604]
[-255.46038818 -91.95775604]
[-268.45077515 -99.45775604]
[-281.81585693 -106.26760864]
[-295.51904297 -112.36865997]
[-309.22222900 -118.46971130]
[-322.97067261 -124.46809387]
[-336.76358032 -130.36346436]
[-350.55648804 -136.25883484]
[-364.34939575 -142.15422058]
[-378.14233398 -148.04959106]
[-391.93524170 -153.94496155]
[-405.72814941 -159.84034729]
[-419.56478882 -165.63238525]
[-433.44433594 -171.32077026]
[-447.32391357 -177.00915527]
[-461.20349121 -182.69752502]
[-475.08303833 -188.38591003]
[-488.96261597 -194.07429504]
[-501.14047241 -189.82279968]
[-512.58398438 -194.84700012]
[-517.37725830 -205.95387268]
[-531.17016602 -211.84924316]
[-544.96313477 -217.74462891]
[-560.69372559 -216.05377197]
[-569.35583496 -228.17057800]
[-583.14874268 -234.06594849]
[-598.51391602 -229.45176697]
[-611.61889648 -238.70593262]
[-612.41064453 -254.72943115]
[-600.28179932 -265.23040771]
[-584.53656006 -262.15344238]
[-577.25335693 -247.85885620]
[-563.46044922 -241.96348572]
[-548.71643066 -244.07601929]
[-539.06774902 -231.53753662]
[-525.27484131 -225.64216614]
[-511.48190308 -219.74678040]
[-494.19705200 -222.77816772]
[-483.27423096 -207.95385742]
[-469.39465332 -202.26547241]
[-455.51510620 -196.57708740]
[-441.63552856 -190.88871765]
[-427.75598145 -185.20033264]
[-413.87640381 -179.51194763]
[-406.49453735 -179.88412476]
[-399.83279419 -173.63325500]
[-386.03985596 -167.73788452]
[-372.24694824 -161.84251404]
[-358.45404053 -155.94712830]
[-344.66110229 -150.05175781]
[-330.86819458 -144.15638733]
[-317.07528687 -138.26100159]
[-309.68869019 -138.52270508]
[-303.12118530 -132.17289734]
[-289.41799927 -126.07184601]
[-275.71481323 -119.97079468]
[-281.16674805 -133.94493103]
[-276.48056030 -148.19413757]
[-263.79855347 -156.20452881]
[-248.91813660 -154.31422424]
[-238.64175415 -143.38737488]
[-237.66716003 -128.41908264]
[-246.43986511 -116.25193024]
[-260.95077515 -112.44813538]
[-247.96038818 -104.94813538]
[-234.97000122 -97.44813538]
[-221.97961426 -89.94813538]
[-208.98924255 -82.44813538]
[-195.99885559 -74.94813538]
[-183.00846863 -67.44813538]
[-170.01809692 -59.94813538]
[-156.97198486 -52.54550934]
[-143.87084961 -45.24068069]
[-130.76972961 -37.93584824]
[-115.88565063 -38.49562836]
[-107.60044098 -25.01727676]
[-94.49932098 -17.71244431]
[-81.39820099 -10.40761280]
[-68.29707336 -3.10278058]
[-55.19595337 4.20205212]
[-42.09482956 11.50688457]
[-28.99370575 18.81171608]
[-21.62021065 19.32355690]
[-15.75242138 26.32508278]
[-2.76204038 33.82508087]
[10.22834015 41.32508087]
[17.23017311 37.71046829]
[25.18427086 37.15135193]
[32.80028152 39.81282806]
[38.81329346 45.33145523]
[42.19381332 52.86310959]
[42.32358932 61.21156693]
[54.84218597 69.47502136]
[67.36078644 77.73847198]
[79.87938690 86.00193024]
[92.39798737 94.26538086]
[92.37222290 88.79895020]
[95.29048157 83.06169891]
[101.19815063 78.42320251]
[109.56092834 76.21009064]
[119.31182098 77.47732544]
[128.98324585 82.80977631]
[136.90843201 92.18435669]
[150.78799438 97.87274170]
[164.66755676 103.56112671]
[178.54711914 109.24950409]
[192.42669678 114.93788910]
[206.30625916 120.62626648]
[220.18582153 126.31465149]
[234.06538391 132.00303650]
[241.62982178 121.80385590]
[251.27793884 113.56143188]
[262.51797485 107.69073486]
[274.77822876 104.48601532]
[287.43600464 104.10601807]
[299.84939575 106.56612396]
[311.38970947 111.73778534]
[321.47338867 119.35522461]
[329.59143066 129.02909851]
[335.33517456 140.26637268]
[338.41687012 152.49551392]
[338.68402100 165.09544373]
[336.12692261 177.42721558]
[349.64147949 183.93547058]
[363.15600586 190.44372559]
[376.67053223 196.95198059]
[390.18505859 203.46023560]
[403.69958496 209.96849060]
[417.21414185 216.47674561]
[430.72866821 222.98500061]
[443.37341309 214.26686096]
[458.68441772 213.05508423]
[472.54312134 219.67565918]
[481.22158813 232.34765625]
[482.38537598 247.66239929]
[475.72140503 261.50027466]
[463.02224731 270.13897705]
[447.70394897 271.25476074]
[433.88702393 264.54742432]
[425.28814697 251.82127380]
[424.22039795 236.49954224]
[410.70587158 229.99128723]
[397.19134521 223.48303223]
[383.67681885 216.97477722]
[370.16226196 210.46652222]
[356.64773560 203.95826721]
[343.13320923 197.44999695]
[329.61868286 190.94174194]
[317.91882324 203.84515381]
[302.80227661 212.53294373]
[285.72937012 216.15353394]
[268.35330200 214.34544373]
[252.35987854 207.27339172]
[239.30415344 195.61331177]
[230.45907593 180.48780823]
[226.69145203 163.35803223]
[228.37699890 145.88259888]
[214.49743652 140.19421387]
[200.61787415 134.50582886]
[186.73831177 128.81745911]
[172.85874939 123.12906647]
[158.97917175 117.44068909]
[145.09960938 111.75230408]
[131.22004700 106.06392670]
[124.81063843 109.95871735]
[132.60003662 122.77766418]
[119.78096771 130.56686401]
[111.99181366 117.74831390]
[105.58239746 121.64310455]
[104.23780823 136.58271790]
[102.89321899 151.52233887]
[101.54862976 166.46194458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[9 207]
[10 206]
[11 133]
[12 132]
[13 131]
[14 130]
[15 129]
[17 123]
[18 122]
[19 121]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
[25 114]
[26 113]
[28 111]
[29 110]
[30 109]
[32 108]
[33 107]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 93]
[41 92]
[42 91]
[43 89]
[44 88]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[58 74]
[59 73]
[60 72]
[62 70]
[63 69]
[140 201]
[141 200]
[142 199]
[143 198]
[144 197]
[145 196]
[146 195]
[147 194]
[160 185]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
