%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TCTE3)
} def

/sequence { (\
CCCUGGCGGGCACUUCCUACCGUACGAGGCGCAGGUGGGAGACUUCCGCCCUCGCGGGACUGGCUAGGGCGUUUGACCGCCGGCGGUGAAGGGGAGGCGGUGGGCGUCUUGGAGAACAGAGCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003191987 ubox
1 58 0.021247926 ubox
1 69 0.012177942 ubox
1 86 0.003287287 ubox
2 9 0.003554067 ubox
2 29 0.003397637 ubox
2 57 0.021340763 ubox
2 58 0.010045150 ubox
2 68 0.012860669 ubox
2 85 0.003397960 ubox
3 8 0.003551091 ubox
3 28 0.003431094 ubox
3 56 0.021311901 ubox
3 57 0.010074175 ubox
3 67 0.012907312 ubox
3 83 0.003487958 ubox
3 125 0.005883047 ubox
4 54 0.009576913 ubox
4 56 0.010013010 ubox
4 66 0.012904321 ubox
4 82 0.003540878 ubox
4 124 0.005174083 ubox
5 50 0.996381232 ubox
5 51 0.019786505 ubox
5 53 0.004626541 ubox
5 55 0.004235602 ubox
5 65 0.012905039 ubox
5 81 0.003597478 ubox
5 108 0.003196804 ubox
6 23 0.004841392 ubox
6 49 0.999735708 ubox
6 50 0.014497322 ubox
6 52 0.003654828 ubox
6 64 0.012912403 ubox
6 80 0.003597724 ubox
6 107 0.003204261 ubox
6 122 0.003231217 ubox
7 22 0.005006550 ubox
7 48 0.999841260 ubox
7 63 0.012882549 ubox
7 79 0.003597654 ubox
7 106 0.003229357 ubox
7 121 0.003224800 ubox
8 21 0.005009151 ubox
8 46 0.004247158 ubox
8 47 0.999742385 ubox
8 51 0.005358034 ubox
8 78 0.003594328 ubox
8 105 0.003205608 ubox
9 20 0.005004225 ubox
9 44 0.010129907 ubox
9 45 0.005714052 ubox
9 46 0.999342076 ubox
9 47 0.012724382 ubox
9 50 0.005462675 ubox
9 61 0.012703578 ubox
9 77 0.003572742 ubox
10 43 0.039834768 ubox
10 44 0.033320414 ubox
10 45 0.920095958 ubox
10 46 0.017905950 ubox
10 49 0.005471873 ubox
10 60 0.012670422 ubox
11 48 0.005470902 ubox
11 102 0.003412984 ubox
12 101 0.003424937 ubox
13 41 0.234186955 ubox
13 100 0.003425681 ubox
14 40 0.179704956 ubox
14 41 0.869170251 ubox
14 42 0.038855481 ubox
14 99 0.003358649 ubox
15 39 0.097196723 ubox
15 40 0.978685680 ubox
15 41 0.022454839 ubox
16 38 0.096201954 ubox
16 39 0.995190140 ubox
16 97 0.003414493 ubox
17 37 0.095094899 ubox
17 38 0.995309049 ubox
17 96 0.003417302 ubox
18 37 0.994942812 ubox
19 36 0.999342941 ubox
20 29 0.006271643 ubox
20 35 0.999881529 ubox
20 57 0.004045123 ubox
21 28 0.007100847 ubox
21 31 0.092671383 ubox
21 34 0.995262368 ubox
21 56 0.004430621 ubox
22 30 0.212657626 ubox
22 32 0.515026786 ubox
22 55 0.004481938 ubox
23 29 0.210465158 ubox
23 31 0.504433999 ubox
25 31 0.583825616 ubox
25 54 0.004883671 ubox
26 30 0.552028137 ubox
26 53 0.005612515 ubox
27 52 0.005617945 ubox
28 51 0.005444747 ubox
29 50 0.005239358 ubox
30 85 0.003561001 ubox
31 49 0.005022661 ubox
31 84 0.003608274 ubox
32 48 0.005006991 ubox
32 83 0.003595342 ubox
34 44 0.003290599 ubox
34 47 0.004955529 ubox
34 50 0.004768985 ubox
34 81 0.003617318 ubox
35 43 0.003307047 ubox
35 46 0.004957117 ubox
35 49 0.004826158 ubox
35 80 0.003631474 ubox
36 42 0.003292766 ubox
36 48 0.004843219 ubox
36 79 0.003630032 ubox
37 44 0.004805359 ubox
37 47 0.004849688 ubox
37 78 0.003631121 ubox
38 43 0.004957049 ubox
38 46 0.004841837 ubox
38 77 0.003630157 ubox
39 45 0.004660244 ubox
40 44 0.003982646 ubox
41 74 0.003346911 ubox
42 73 0.003175290 ubox
44 59 0.011070949 ubox
45 58 0.012112860 ubox
46 57 0.012578643 ubox
47 56 0.012592635 ubox
47 71 0.004878398 ubox
48 55 0.012598416 ubox
48 70 0.005059564 ubox
49 54 0.012563815 ubox
49 69 0.005060060 ubox
50 68 0.005060511 ubox
51 67 0.005062580 ubox
51 125 0.975003883 ubox
52 66 0.004980695 ubox
52 124 0.997128656 ubox
53 123 0.999518547 ubox
54 64 0.005171673 ubox
54 122 0.999570814 ubox
55 63 0.005228201 ubox
55 121 0.999209300 ubox
55 123 0.003380413 ubox
56 65 0.003257227 ubox
56 122 0.003522624 ubox
57 64 0.003835716 ubox
60 114 0.119041777 ubox
60 119 0.176855008 ubox
60 125 0.010229039 ubox
61 113 0.110731543 ubox
61 118 0.180615207 ubox
61 124 0.010362587 ubox
62 117 0.178278175 ubox
63 122 0.010460644 ubox
64 112 0.996531013 ubox
64 114 0.044881473 ubox
64 121 0.010172786 ubox
65 111 0.998148874 ubox
65 113 0.038854736 ubox
65 120 0.008914231 ubox
66 110 0.997728032 ubox
67 109 0.998901927 ubox
67 110 0.003964068 ubox
68 108 0.999816222 ubox
69 107 0.999561512 ubox
69 108 0.003413783 ubox
70 106 0.999905224 ubox
70 123 0.006545587 ubox
71 105 0.999803047 ubox
71 122 0.006633004 ubox
72 103 0.011035670 ubox
72 104 0.939200702 ubox
72 121 0.006575739 ubox
73 102 0.012826209 ubox
73 103 0.855779165 ubox
73 104 0.333220383 ubox
73 120 0.006291669 ubox
74 102 0.698523511 ubox
74 103 0.469675184 ubox
74 119 0.005735824 ubox
75 101 0.286322820 ubox
75 108 0.006581396 ubox
76 101 0.950949140 ubox
76 107 0.006586097 ubox
77 100 0.999120176 ubox
77 103 0.039665892 ubox
77 106 0.004661018 ubox
78 99 0.999137566 ubox
78 102 0.039893005 ubox
78 106 0.005404662 ubox
79 98 0.999140609 ubox
79 101 0.039902302 ubox
79 105 0.007234289 ubox
80 92 0.003730526 ubox
80 93 0.005182846 ubox
80 94 0.006777533 ubox
80 97 0.999111884 ubox
80 100 0.039918757 ubox
80 104 0.007241834 ubox
81 88 0.005784855 ubox
81 91 0.005487579 ubox
81 92 0.007602534 ubox
81 93 0.009801955 ubox
81 96 0.998807017 ubox
81 99 0.039867143 ubox
81 103 0.007241358 ubox
82 87 0.016757191 ubox
82 98 0.032512862 ubox
83 98 0.023089180 ubox
83 101 0.007229409 ubox
84 97 0.032587117 ubox
84 100 0.007238020 ubox
86 98 0.007260834 ubox
87 97 0.007236487 ubox
105 123 0.006109439 ubox
106 122 0.006515032 ubox
107 120 0.004893956 ubox
107 121 0.006016543 ubox
108 119 0.005273407 ubox
108 125 0.004543566 ubox
109 118 0.004040652 ubox
109 119 0.007340875 ubox
109 124 0.004727458 ubox
110 118 0.010060054 ubox
110 123 0.004748578 ubox
111 117 0.011255696 ubox
111 122 0.004766694 ubox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
51 125 0.9500000 lbox
52 124 0.9500000 lbox
53 123 0.9500000 lbox
54 122 0.9500000 lbox
55 121 0.9500000 lbox
64 112 0.9500000 lbox
65 111 0.9500000 lbox
66 110 0.9500000 lbox
67 109 0.9500000 lbox
68 108 0.9500000 lbox
69 107 0.9500000 lbox
70 106 0.9500000 lbox
71 105 0.9500000 lbox
72 104 0.9500000 lbox
73 103 0.9500000 lbox
74 102 0.9500000 lbox
76 101 0.9500000 lbox
77 100 0.9500000 lbox
78 99 0.9500000 lbox
79 98 0.9500000 lbox
80 97 0.9500000 lbox
81 96 0.9500000 lbox
showpage
end
%%EOF
