%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS15)
} def

/sequence { (\
GAUGGUGAGUGUUGCGAUUUGGCGCGUCUCUGCCGGGCCUAUCCGGCUCCAUCCAACCUCUGACCGUCUCGCGGGGGCCGCAGUUCGUCCCCGCGGCUACGGCGGCUUGCUCCCGACCCUGCAGGCGGCUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 53 0.006282373 ubox
1 68 0.997483694 ubox
2 52 0.006318807 ubox
2 67 0.999402195 ubox
3 51 0.006323219 ubox
3 66 0.998976333 ubox
4 50 0.006325507 ubox
4 65 0.999939112 ubox
5 49 0.006269077 ubox
5 64 0.999911334 ubox
6 62 0.062207072 ubox
6 63 0.977307303 ubox
7 28 0.003545140 ubox
7 30 0.036241161 ubox
7 60 0.546902329 ubox
7 61 0.016522621 ubox
8 27 0.003502239 ubox
8 29 0.036310167 ubox
8 31 0.004753165 ubox
8 59 0.549607318 ubox
8 61 0.831397088 ubox
9 25 0.003450262 ubox
9 28 0.036299333 ubox
9 30 0.005059954 ubox
9 58 0.550329713 ubox
9 60 0.832611598 ubox
10 24 0.003512434 ubox
10 26 0.030888523 ubox
10 51 0.003902690 ubox
10 55 0.006265550 ubox
10 56 0.003508274 ubox
11 23 0.003547290 ubox
11 25 0.032861899 ubox
11 47 0.004095464 ubox
11 50 0.003912606 ubox
11 54 0.006462659 ubox
11 57 0.997651113 ubox
12 22 0.003531039 ubox
12 24 0.023249669 ubox
12 46 0.004136525 ubox
12 56 0.998058371 ubox
13 21 0.003305558 ubox
13 24 0.026810898 ubox
13 26 0.028814594 ubox
13 45 0.004219455 ubox
13 55 0.997791444 ubox
14 23 0.040514892 ubox
14 25 0.057150445 ubox
14 27 0.006356670 ubox
14 44 0.004431700 ubox
14 47 0.004242718 ubox
14 54 0.996898640 ubox
15 21 0.005171381 ubox
15 22 0.040919142 ubox
15 24 0.059046802 ubox
15 26 0.014837739 ubox
15 45 0.006897879 ubox
15 46 0.004355401 ubox
16 20 0.004219578 ubox
16 23 0.058445588 ubox
16 25 0.015033406 ubox
16 28 0.013882861 ubox
16 30 0.004231973 ubox
16 43 0.007684879 ubox
16 44 0.006300142 ubox
16 49 0.005439070 ubox
16 53 0.988329619 ubox
17 27 0.013881525 ubox
17 29 0.004075897 ubox
17 42 0.008249991 ubox
17 48 0.004837065 ubox
17 52 0.974043963 ubox
18 26 0.013503109 ubox
18 37 0.003327724 ubox
18 41 0.008121761 ubox
18 51 0.878854165 ubox
19 35 0.007406053 ubox
19 36 0.077375521 ubox
19 46 0.003712223 ubox
20 26 0.008344700 ubox
20 35 0.177324146 ubox
20 45 0.003798604 ubox
20 51 0.225548754 ubox
20 55 0.003244030 ubox
21 25 0.011156040 ubox
21 28 0.027524443 ubox
21 29 0.014756508 ubox
21 30 0.030561870 ubox
21 31 0.014793305 ubox
21 34 0.945897796 ubox
21 39 0.017707109 ubox
21 44 0.003472428 ubox
21 48 0.070223885 ubox
21 49 0.052712951 ubox
21 50 0.276353303 ubox
21 54 0.003497152 ubox
22 27 0.018859629 ubox
22 28 0.016716527 ubox
22 29 0.024016935 ubox
22 30 0.015556616 ubox
22 33 0.946922917 ubox
22 38 0.017735710 ubox
22 43 0.003428715 ubox
22 47 0.070141429 ubox
22 48 0.051306350 ubox
22 49 0.274726161 ubox
22 53 0.003561145 ubox
23 32 0.946823898 ubox
23 35 0.011967833 ubox
23 37 0.017747379 ubox
23 46 0.069504550 ubox
24 31 0.721334166 ubox
24 33 0.084895816 ubox
24 34 0.011667381 ubox
24 47 0.054914141 ubox
25 32 0.085868865 ubox
25 35 0.017850963 ubox
25 45 0.012572518 ubox
25 46 0.043719023 ubox
26 31 0.063099434 ubox
26 33 0.023778792 ubox
26 34 0.017325013 ubox
26 38 0.013034270 ubox
26 44 0.012421586 ubox
26 47 0.007096489 ubox
26 52 0.008534040 ubox
27 32 0.022581725 ubox
27 37 0.012703355 ubox
27 51 0.009837003 ubox
28 36 0.012712606 ubox
28 37 0.007770368 ubox
29 35 0.011461937 ubox
29 36 0.007794847 ubox
30 35 0.008912986 ubox
31 51 0.003902909 ubox
32 38 0.013596228 ubox
32 47 0.302680140 ubox
32 50 0.003551838 ubox
33 37 0.013518205 ubox
33 46 0.305150890 ubox
34 45 0.315203819 ubox
35 44 0.315428365 ubox
35 48 0.006446437 ubox
35 49 0.746602868 ubox
35 50 0.544880992 ubox
36 43 0.315065924 ubox
36 44 0.005777569 ubox
36 47 0.005573546 ubox
36 48 0.769563819 ubox
36 49 0.544412683 ubox
36 50 0.012607114 ubox
37 42 0.213584234 ubox
37 43 0.006831760 ubox
37 47 0.946355701 ubox
37 48 0.061701372 ubox
37 49 0.008785303 ubox
38 46 0.948372640 ubox
39 45 0.947633589 ubox
39 46 0.014989557 ubox
40 45 0.015824357 ubox
50 62 0.008807172 ubox
51 61 0.008179551 ubox
53 62 0.005277851 ubox
54 62 0.017900474 ubox
55 61 0.017106266 ubox
66 97 0.009984473 ubox
67 96 0.007576152 ubox
68 95 0.004453654 ubox
68 96 0.014496772 ubox
69 95 0.006313469 ubox
69 96 0.758523548 ubox
70 95 0.995634265 ubox
71 94 0.999971628 ubox
72 93 0.999980598 ubox
73 92 0.999966949 ubox
74 91 0.999972224 ubox
74 92 0.004770555 ubox
75 90 0.999960958 ubox
75 91 0.006709901 ubox
76 89 0.999922422 ubox
76 90 0.008199193 ubox
77 84 0.008868074 ubox
77 88 0.998999125 ubox
77 89 0.009441849 ubox
78 83 0.009727398 ubox
78 87 0.984728008 ubox
79 87 0.169699150 ubox
80 86 0.231704776 ubox
80 88 0.016963326 ubox
81 87 0.018648784 ubox
96 103 0.004660815 ubox
97 102 0.004722490 ubox
97 132 0.046457177 ubox
98 131 0.032392163 ubox
99 130 0.016370268 ubox
100 131 0.992597480 ubox
101 130 0.998420421 ubox
102 129 0.999970436 ubox
103 127 0.006934472 ubox
103 128 0.999564940 ubox
104 126 0.007127776 ubox
105 126 0.999576389 ubox
106 125 0.999982297 ubox
107 124 0.999082860 ubox
108 123 0.999085246 ubox
109 122 0.999985456 ubox
110 121 0.999678113 ubox
114 121 0.008037072 ubox
115 120 0.021260605 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
8 61 0.9500000 lbox
9 60 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
18 51 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
69 96 0.9500000 lbox
70 95 0.9500000 lbox
71 94 0.9500000 lbox
72 93 0.9500000 lbox
73 92 0.9500000 lbox
74 91 0.9500000 lbox
75 90 0.9500000 lbox
76 89 0.9500000 lbox
77 88 0.9500000 lbox
78 87 0.9500000 lbox
100 131 0.9500000 lbox
101 130 0.9500000 lbox
102 129 0.9500000 lbox
103 128 0.9500000 lbox
105 126 0.9500000 lbox
106 125 0.9500000 lbox
107 124 0.9500000 lbox
108 123 0.9500000 lbox
109 122 0.9500000 lbox
110 121 0.9500000 lbox
showpage
end
%%EOF
