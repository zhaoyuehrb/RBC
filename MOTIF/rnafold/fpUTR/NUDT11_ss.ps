%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGGCUCGCGGGCAGACGGAGGCGCCUCUCUUUCCCCGCCCCUCGCCUCGGCCCUUUCUCUUCCCAGCACCUCGGCUGUUCCCCGGCGGCGGCAGCGGCAGCGGCGGCCCACACAGCAGCGAGAGGCGAGAGGAGGCUGCCUCGAGGAGGCUGCCUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[92.50870514 130.05029297]
[86.12725067 127.68910980]
[80.41544342 123.99135590]
[75.64899445 119.13552094]
[61.96143723 125.27155304]
[48.27388382 131.40757751]
[34.58632660 137.54360962]
[27.99802208 143.93943787]
[20.57732201 143.66328430]
[6.77474451 149.53601074]
[0.06513621 155.80445862]
[-7.34891272 155.38621521]
[-21.26144981 160.99346924]
[-35.17398453 166.60072327]
[-49.08652496 172.20797729]
[-55.91497040 178.34675598]
[-63.31964874 177.78659058]
[-77.33703613 183.12631226]
[-84.28182220 189.13316345]
[-91.67440796 188.43125916]
[-105.79151154 193.50151062]
[-112.85008240 199.37423706]
[-120.22786713 198.53085327]
[-134.43949890 203.32975769]
[-148.65113831 208.12867737]
[-162.86276245 212.92758179]
[-164.68646240 228.08135986]
[-172.91177368 240.93853760]
[-185.90556335 248.94631958]
[-201.08787537 250.51473999]
[-215.44427490 245.33241272]
[-226.12428284 234.42826843]
[-231.00737000 219.96736145]
[-229.12400818 204.82087708]
[-220.84812927 191.99620056]
[-207.82290649 184.03964233]
[-192.63453674 182.53102112]
[-178.29866028 187.76985168]
[-167.66166687 198.71595764]
[-153.45004272 193.91705322]
[-139.23841858 189.11813354]
[-125.02677917 184.31922913]
[-110.86176300 179.38441467]
[-96.74466705 174.31416321]
[-82.67677307 169.10893250]
[-68.65938568 163.76919556]
[-54.69377899 158.29544067]
[-40.78124237 152.68818665]
[-26.86870575 147.08093262]
[-12.95616913 141.47367859]
[0.90202403 135.73342896]
[14.70460224 129.86070251]
[28.45029831 123.85605621]
[42.13785172 117.72003174]
[55.82540512 111.58399963]
[69.51296234 105.44796753]
[73.35581970 84.21305847]
[90.13516235 70.64314270]
[111.70415497 71.32679749]
[120.56735992 59.22541046]
[129.43057251 47.12402344]
[138.29377747 35.02263641]
[147.15698242 22.92124748]
[156.02018738 10.81986141]
[164.88339233 -1.28152573]
[161.30653381 -14.29585743]
[165.82655334 -26.80639648]
[176.57612610 -34.30603409]
[189.48818970 -34.23136902]
[198.58157349 -46.16076279]
[196.66639709 -61.61941147]
[206.05831909 -73.58797455]
[220.80757141 -75.31853485]
[229.90095520 -87.24793243]
[238.99433899 -99.17732239]
[248.08772278 -111.10671234]
[250.82022095 -119.87288666]
[257.47131348 -123.17530060]
[266.79153442 -134.92832947]
[276.11175537 -146.68135071]
[285.43197632 -158.43437195]
[294.75219727 -170.18739319]
[288.51260376 -185.47558594]
[290.80758667 -201.73313904]
[300.91915894 -214.54959106]
[316.02188110 -220.49610901]
[331.97180176 -218.04246521]
[341.06518555 -229.97184753]
[350.15853882 -241.90124512]
[352.37115479 -257.56698608]
[366.24017334 -262.99832153]
[375.33355713 -274.92773438]
[377.54614258 -290.59344482]
[391.41516113 -296.02481079]
[400.50854492 -307.95419312]
[396.89892578 -323.16949463]
[403.96017456 -337.12200928]
[418.35815430 -343.22381592]
[433.29458618 -338.59384155]
[441.71694946 -325.41818237]
[439.64846802 -309.91799927]
[428.06579590 -299.41201782]
[412.43792725 -298.86083984]
[403.34454346 -286.93142700]
[401.78237915 -272.11898804]
[387.26293945 -265.83435059]
[378.16955566 -253.90495300]
[376.60739136 -239.09249878]
[362.08795166 -232.80786133]
[352.99456787 -220.87847900]
[343.90118408 -208.94908142]
[349.99398804 -196.69857788]
[350.20520020 -182.95196533]
[344.43630981 -170.39965820]
[333.76477051 -161.52304077]
[320.24334717 -158.10394287]
[306.50521851 -160.86717224]
[297.18499756 -149.11415100]
[287.86477661 -137.36112976]
[278.54455566 -125.60810852]
[269.22433472 -113.85508728]
[260.01712036 -102.01333618]
[250.92373657 -90.08393860]
[241.83035278 -78.15454865]
[232.73696899 -66.22515869]
[234.97654724 -51.54455948]
[225.92451477 -39.31692123]
[210.51097107 -37.06738281]
[201.41758728 -25.13798714]
[204.38604736 -8.60559368]
[194.29882812 5.24431658]
[176.98478699 7.58168077]
[168.12158203 19.68306732]
[159.25837708 31.78445435]
[150.39515686 43.88584137]
[141.53195190 55.98722839]
[132.66874695 68.08861542]
[123.80554199 80.19000244]
[129.59468079 90.87342072]
[130.82803345 102.96177673]
[127.31572723 114.59420776]
[119.59844971 123.98000336]
[125.99553680 137.54751587]
[132.39262390 151.11502075]
[138.78971863 164.68252563]
[145.18679810 178.25003052]
[151.58389282 191.81755066]
[157.98097229 205.38505554]
[164.37806702 218.95256042]
[179.33496094 224.05812073]
[186.22581482 238.28105164]
[180.96240234 253.18313599]
[166.66741943 259.92321777]
[151.82180786 254.50256348]
[145.23323059 240.13710022]
[150.81056213 225.34963989]
[144.41346741 211.78213501]
[138.01638794 198.21463013]
[131.61929321 184.64712524]
[125.22220612 171.07962036]
[118.82511902 157.51210022]
[112.42803192 143.94459534]
[106.03094482 130.37709045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 56]
[5 55]
[6 54]
[7 53]
[9 52]
[10 51]
[12 50]
[13 49]
[14 48]
[15 47]
[17 46]
[18 45]
[20 44]
[21 43]
[23 42]
[24 41]
[25 40]
[26 39]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[65 132]
[69 129]
[70 128]
[73 125]
[74 124]
[75 123]
[76 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[87 111]
[88 110]
[89 109]
[91 107]
[92 106]
[94 104]
[95 103]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
