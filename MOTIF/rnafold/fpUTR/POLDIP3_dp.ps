%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POLDIP3)
} def

/sequence { (\
GCGAGAGUUGGUCCGCGGACGCCGGAAGUAGUUCGUCGCUCCCUAGCGGCCGAAGGGGCGGGCUCGCGGGGUCUCGACUGCUUUCGGCUUGCUCGGCGGAGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.185471670 ubox
1 12 0.004407494 ubox
1 16 0.251734972 ubox
1 102 0.015381965 ubox
2 7 0.243032604 ubox
2 10 0.014500382 ubox
2 11 0.006556085 ubox
2 15 0.251920757 ubox
2 17 0.003210289 ubox
2 86 0.007715345 ubox
2 101 0.015381332 ubox
3 9 0.015526367 ubox
3 13 0.013460508 ubox
3 14 0.251401164 ubox
3 16 0.003215703 ubox
3 85 0.007899218 ubox
4 8 0.014096379 ubox
4 12 0.018777627 ubox
4 84 0.007895636 ubox
5 13 0.248287025 ubox
5 83 0.007891172 ubox
6 12 0.245410364 ubox
6 82 0.007896533 ubox
7 20 0.008284365 ubox
7 81 0.007896576 ubox
7 102 0.015988586 ubox
8 19 0.008154791 ubox
8 80 0.006156013 ubox
8 101 0.015915673 ubox
8 104 0.807946872 ubox
8 105 0.026040868 ubox
9 17 0.003539589 ubox
9 18 0.007813884 ubox
9 80 0.004697596 ubox
9 100 0.005260308 ubox
9 103 0.943871527 ubox
9 104 0.029601218 ubox
10 16 0.004339054 ubox
10 79 0.006786233 ubox
10 102 0.965335088 ubox
11 20 0.046050158 ubox
11 78 0.007885413 ubox
11 102 0.020776760 ubox
12 19 0.046139162 ubox
12 77 0.007881530 ubox
12 100 0.964123260 ubox
12 101 0.011129111 ubox
13 18 0.046122978 ubox
13 76 0.007049313 ubox
13 99 0.966525816 ubox
14 76 0.003513423 ubox
14 98 0.966513112 ubox
15 75 0.004937336 ubox
15 92 0.004224126 ubox
15 97 0.966486995 ubox
16 91 0.004410973 ubox
16 95 0.085080657 ubox
16 96 0.962383082 ubox
17 74 0.007743046 ubox
17 90 0.006348115 ubox
17 93 0.061549340 ubox
17 94 0.119609313 ubox
18 73 0.007886393 ubox
18 89 0.005753339 ubox
18 90 0.026095641 ubox
18 92 0.082237934 ubox
18 93 0.100988637 ubox
18 94 0.952516518 ubox
19 72 0.007890908 ubox
19 89 0.046417728 ubox
19 93 0.939954247 ubox
20 71 0.007891471 ubox
20 91 0.702221099 ubox
21 88 0.991079688 ubox
21 90 0.091709821 ubox
21 92 0.031100535 ubox
22 69 0.007891794 ubox
22 87 0.999652623 ubox
22 91 0.022896370 ubox
23 68 0.007892853 ubox
23 86 0.999944238 ubox
24 67 0.007870462 ubox
24 85 0.999831573 ubox
25 65 0.003297231 ubox
25 84 0.999070123 ubox
26 83 0.999176193 ubox
27 64 0.006159253 ubox
27 82 0.999400615 ubox
28 63 0.006279245 ubox
28 81 0.999952583 ubox
29 62 0.006182121 ubox
29 80 0.999709266 ubox
30 64 0.004057569 ubox
30 79 0.999434311 ubox
31 59 0.005109508 ubox
31 63 0.004707517 ubox
31 78 0.999132197 ubox
32 58 0.005043440 ubox
32 62 0.004727839 ubox
32 77 0.714150515 ubox
33 53 0.004222079 ubox
33 57 0.004694146 ubox
33 61 0.004951513 ubox
33 76 0.154594418 ubox
33 77 0.696252894 ubox
34 52 0.004543938 ubox
34 56 0.004652458 ubox
34 60 0.005001790 ubox
34 76 0.985941443 ubox
35 50 0.006613744 ubox
35 51 0.003244369 ubox
35 59 0.004966360 ubox
35 75 0.993478071 ubox
35 78 0.031968055 ubox
36 49 0.007521924 ubox
36 58 0.004945757 ubox
36 69 0.004452316 ubox
36 77 0.043102334 ubox
37 48 0.017470160 ubox
37 57 0.004868563 ubox
37 60 0.005871729 ubox
37 68 0.004572473 ubox
37 76 0.049735243 ubox
38 47 0.017646031 ubox
38 59 0.006241369 ubox
38 67 0.004587456 ubox
38 72 0.943388692 ubox
38 75 0.050163921 ubox
39 46 0.017640233 ubox
39 55 0.004844304 ubox
39 58 0.006209977 ubox
39 66 0.004584299 ubox
39 70 0.009653624 ubox
39 71 0.946868341 ubox
40 45 0.015891829 ubox
40 54 0.003967790 ubox
40 69 0.009102683 ubox
40 70 0.774912035 ubox
40 71 0.092264006 ubox
41 52 0.003775651 ubox
41 57 0.005800234 ubox
41 62 0.004051656 ubox
41 68 0.009434889 ubox
41 69 0.773800736 ubox
41 70 0.550883182 ubox
41 71 0.303733432 ubox
42 49 0.004293271 ubox
42 56 0.005831995 ubox
42 61 0.004058206 ubox
42 68 0.771384935 ubox
42 69 0.552843764 ubox
42 70 0.306827294 ubox
42 71 0.021603108 ubox
43 48 0.004682013 ubox
43 55 0.005860464 ubox
43 60 0.003945863 ubox
43 62 0.009136210 ubox
43 68 0.552613343 ubox
43 69 0.307204099 ubox
43 70 0.022380587 ubox
44 54 0.005729461 ubox
44 61 0.008474323 ubox
44 68 0.273415006 ubox
44 69 0.020952748 ubox
45 64 0.520823428 ubox
46 63 0.537979088 ubox
46 67 0.839434040 ubox
47 60 0.046440565 ubox
47 62 0.537038042 ubox
47 66 0.840987593 ubox
48 59 0.075816137 ubox
48 64 0.139603774 ubox
48 65 0.829378834 ubox
49 59 0.537414825 ubox
49 63 0.823929542 ubox
49 64 0.136991528 ubox
50 56 0.004164163 ubox
50 57 0.087655261 ubox
50 58 0.537223499 ubox
50 61 0.254766299 ubox
50 62 0.799075846 ubox
51 55 0.004282432 ubox
51 56 0.091689910 ubox
51 57 0.536507675 ubox
51 60 0.337177538 ubox
51 61 0.767836433 ubox
52 59 0.398275791 ubox
58 67 0.008342067 ubox
59 66 0.008353344 ubox
59 76 0.003615829 ubox
60 65 0.008586793 ubox
60 74 0.014617959 ubox
60 75 0.005484108 ubox
61 73 0.016925478 ubox
61 74 0.003751488 ubox
62 72 0.017003805 ubox
62 73 0.003745231 ubox
63 71 0.017325017 ubox
64 70 0.016914702 ubox
65 69 0.016328409 ubox
65 70 0.003969408 ubox
88 105 0.048483387 ubox
89 104 0.228000672 ubox
89 105 0.005517905 ubox
90 103 0.252128481 ubox
90 104 0.006276309 ubox
91 102 0.256490889 ubox
92 101 0.256500083 ubox
93 100 0.256451845 ubox
94 99 0.256381093 ubox
8 104 0.9500000 lbox
9 103 0.9500000 lbox
10 102 0.9500000 lbox
12 100 0.9500000 lbox
13 99 0.9500000 lbox
14 98 0.9500000 lbox
15 97 0.9500000 lbox
16 96 0.9500000 lbox
18 94 0.9500000 lbox
19 93 0.9500000 lbox
21 88 0.9500000 lbox
22 87 0.9500000 lbox
23 86 0.9500000 lbox
24 85 0.9500000 lbox
25 84 0.9500000 lbox
26 83 0.9500000 lbox
27 82 0.9500000 lbox
28 81 0.9500000 lbox
29 80 0.9500000 lbox
30 79 0.9500000 lbox
31 78 0.9500000 lbox
32 77 0.9500000 lbox
34 76 0.9500000 lbox
35 75 0.9500000 lbox
38 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
41 69 0.9500000 lbox
42 68 0.9500000 lbox
46 67 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
showpage
end
%%EOF
