%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POR)
} def

/sequence { (\
GAAGGCGGUGGUAGCGCCUCAGUGGUGUGGGCCUGAGCCCUGCCCAGGUGCCCGCAGAGAGCAGCCGGGCUGCCAGCGUUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.009442979 ubox
1 80 0.006936265 ubox
1 81 0.048154894 ubox
1 82 0.473110816 ubox
2 19 0.006674081 ubox
2 79 0.004131418 ubox
2 80 0.052983745 ubox
2 81 0.436979359 ubox
3 19 0.009097139 ubox
3 79 0.046497316 ubox
3 80 0.382927352 ubox
3 81 0.726648182 ubox
4 18 0.011513370 ubox
4 39 0.003913658 ubox
4 44 0.007890267 ubox
4 74 0.035769036 ubox
4 79 0.270761804 ubox
4 80 0.864066203 ubox
4 81 0.028058961 ubox
4 82 0.022440204 ubox
5 17 0.011517886 ubox
5 38 0.003956326 ubox
5 43 0.007927845 ubox
5 55 0.003464769 ubox
5 73 0.035808618 ubox
5 77 0.050292307 ubox
5 79 0.955384094 ubox
5 80 0.024079575 ubox
5 81 0.009265702 ubox
6 16 0.011516689 ubox
6 37 0.003988465 ubox
6 42 0.007945859 ubox
6 54 0.003469088 ubox
6 72 0.035807736 ubox
6 76 0.050239521 ubox
6 78 0.997507685 ubox
7 15 0.011337730 ubox
7 18 0.007543017 ubox
7 41 0.007874026 ubox
7 53 0.003469369 ubox
7 71 0.035746018 ubox
7 74 0.038323950 ubox
7 77 0.997537651 ubox
8 17 0.007587256 ubox
8 40 0.007860798 ubox
8 52 0.003466465 ubox
8 55 0.008174392 ubox
8 70 0.035735287 ubox
8 73 0.038414355 ubox
8 77 0.005499511 ubox
9 16 0.007583452 ubox
9 54 0.008180186 ubox
9 67 0.011179450 ubox
9 69 0.032998402 ubox
9 72 0.038328880 ubox
9 75 0.996917235 ubox
9 76 0.004345065 ubox
10 15 0.007566475 ubox
10 33 0.004098853 ubox
10 39 0.007832349 ubox
10 53 0.008212068 ubox
10 66 0.030261382 ubox
10 71 0.038188190 ubox
10 74 0.998430719 ubox
11 32 0.004102249 ubox
11 38 0.007829196 ubox
11 52 0.008171504 ubox
11 65 0.030344292 ubox
11 70 0.038294610 ubox
11 73 0.998430690 ubox
12 31 0.004045438 ubox
12 37 0.007120797 ubox
12 64 0.029401175 ubox
12 69 0.038032393 ubox
12 72 0.997981657 ubox
13 28 0.003620518 ubox
13 34 0.007086324 ubox
13 71 0.994471197 ubox
14 23 0.003358607 ubox
14 28 0.208861092 ubox
14 33 0.007415741 ubox
14 51 0.018011238 ubox
14 62 0.023655090 ubox
14 65 0.052215342 ubox
14 70 0.971916224 ubox
15 22 0.003848839 ubox
15 24 0.003891381 ubox
15 27 0.222237721 ubox
15 50 0.085301544 ubox
15 61 0.023807256 ubox
15 64 0.054680226 ubox
15 67 0.018270866 ubox
15 69 0.966533926 ubox
16 23 0.007167974 ubox
16 26 0.229670516 ubox
16 32 0.009122308 ubox
16 49 0.104614351 ubox
16 51 0.022018074 ubox
16 62 0.566695488 ubox
16 65 0.242200244 ubox
16 66 0.036904587 ubox
16 70 0.040109749 ubox
17 22 0.007434909 ubox
17 25 0.231835837 ubox
17 30 0.010534316 ubox
17 31 0.009368112 ubox
17 48 0.105750899 ubox
17 50 0.022116616 ubox
17 61 0.566063955 ubox
17 64 0.241191423 ubox
17 68 0.717478997 ubox
17 69 0.044118644 ubox
18 24 0.231813275 ubox
18 25 0.004236713 ubox
18 29 0.010559101 ubox
18 30 0.009383857 ubox
18 47 0.105740308 ubox
18 48 0.015819460 ubox
18 59 0.580675094 ubox
18 61 0.205848138 ubox
18 64 0.076590686 ubox
18 67 0.715536439 ubox
18 68 0.048323602 ubox
18 69 0.008643838 ubox
19 24 0.004424568 ubox
19 25 0.007474393 ubox
19 29 0.006839959 ubox
19 46 0.091828447 ubox
19 47 0.015017339 ubox
19 48 0.012851853 ubox
19 58 0.582864485 ubox
19 60 0.217158137 ubox
19 63 0.082060862 ubox
19 67 0.044061457 ubox
19 68 0.018513577 ubox
20 24 0.009230826 ubox
20 27 0.013032090 ubox
20 29 0.006763203 ubox
20 47 0.014166163 ubox
20 50 0.006471112 ubox
20 57 0.580993393 ubox
20 59 0.216954063 ubox
20 67 0.025788693 ubox
20 68 0.004777893 ubox
21 26 0.012957032 ubox
21 28 0.006673855 ubox
21 49 0.006540006 ubox
22 43 0.006680987 ubox
22 55 0.552387358 ubox
22 62 0.670939637 ubox
22 65 0.204344874 ubox
23 42 0.006613841 ubox
23 46 0.063761924 ubox
23 54 0.552635588 ubox
23 56 0.076884785 ubox
23 61 0.669938579 ubox
23 63 0.097665615 ubox
23 64 0.198037291 ubox
23 67 0.015878641 ubox
24 41 0.005793782 ubox
24 44 0.087232395 ubox
24 45 0.081092937 ubox
24 52 0.027007935 ubox
24 53 0.552268732 ubox
24 55 0.055263323 ubox
24 62 0.098470365 ubox
24 66 0.092394235 ubox
25 43 0.087867670 ubox
25 44 0.080609420 ubox
25 51 0.037508515 ubox
25 52 0.551234120 ubox
25 55 0.070791731 ubox
25 62 0.134086334 ubox
25 65 0.092410069 ubox
26 42 0.087941208 ubox
26 48 0.070217917 ubox
26 50 0.044441060 ubox
26 54 0.084880256 ubox
26 56 0.768358955 ubox
26 61 0.109182516 ubox
26 63 0.007409228 ubox
26 64 0.074588005 ubox
27 41 0.067226935 ubox
27 43 0.074737359 ubox
27 49 0.019600324 ubox
27 51 0.531739318 ubox
27 53 0.086698398 ubox
27 55 0.788146441 ubox
27 62 0.008172405 ubox
28 42 0.072218993 ubox
28 46 0.090685704 ubox
28 50 0.516476968 ubox
28 54 0.788118723 ubox
28 61 0.007672083 ubox
29 40 0.234055611 ubox
29 41 0.013266114 ubox
29 45 0.096495733 ubox
29 49 0.076923238 ubox
29 52 0.090589851 ubox
29 53 0.788421900 ubox
30 39 0.234512440 ubox
30 40 0.011355732 ubox
30 44 0.096512901 ubox
30 51 0.094053052 ubox
30 52 0.788087375 ubox
31 38 0.234616695 ubox
31 39 0.008903299 ubox
31 43 0.096509644 ubox
31 49 0.565787273 ubox
31 51 0.767782286 ubox
32 37 0.233960755 ubox
32 42 0.096278587 ubox
32 48 0.765025780 ubox
32 50 0.589500605 ubox
33 47 0.932449789 ubox
33 48 0.228171946 ubox
34 46 0.948906804 ubox
34 47 0.163661040 ubox
35 41 0.009226713 ubox
35 45 0.952365573 ubox
35 49 0.004554970 ubox
37 43 0.955438370 ubox
37 49 0.079211529 ubox
37 51 0.004262566 ubox
38 42 0.949215485 ubox
38 48 0.078058110 ubox
38 50 0.004548094 ubox
39 47 0.076351830 ubox
39 48 0.026295415 ubox
40 47 0.030758923 ubox
41 46 0.032391398 ubox
41 50 0.007295250 ubox
42 49 0.043599649 ubox
42 51 0.007292621 ubox
42 70 0.190047159 ubox
42 77 0.003955373 ubox
43 48 0.044881165 ubox
43 50 0.007334836 ubox
43 68 0.003573017 ubox
43 69 0.192530832 ubox
43 76 0.003955559 ubox
44 67 0.003543606 ubox
44 68 0.193092248 ubox
44 69 0.003436950 ubox
45 67 0.192372820 ubox
45 68 0.004755247 ubox
47 53 0.008623072 ubox
47 66 0.196193112 ubox
47 74 0.015926482 ubox
48 52 0.008494712 ubox
48 65 0.196082419 ubox
48 73 0.015945104 ubox
49 63 0.153071104 ubox
49 64 0.124586431 ubox
49 72 0.015391689 ubox
50 62 0.188270961 ubox
50 65 0.011853940 ubox
50 70 0.115113482 ubox
51 61 0.188227286 ubox
51 64 0.012647367 ubox
51 68 0.045730703 ubox
51 69 0.143585481 ubox
52 67 0.045888354 ubox
52 68 0.150070692 ubox
53 67 0.150073913 ubox
54 62 0.059537144 ubox
54 65 0.113654725 ubox
54 66 0.107750892 ubox
55 61 0.060292728 ubox
55 64 0.153493528 ubox
61 70 0.003730115 ubox
61 73 0.009746480 ubox
62 69 0.003814873 ubox
62 72 0.009964979 ubox
63 71 0.010784019 ubox
64 70 0.011384616 ubox
65 69 0.011414610 ubox
3 81 0.9500000 lbox
4 80 0.9500000 lbox
5 79 0.9500000 lbox
6 78 0.9500000 lbox
7 77 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
15 69 0.9500000 lbox
16 62 0.9500000 lbox
17 61 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
showpage
end
%%EOF
