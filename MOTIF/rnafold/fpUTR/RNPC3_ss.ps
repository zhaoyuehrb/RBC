%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCCAGAAUCCUUAGCGCGAGGCGGAAAAAAUAUUUCUCCCAGCUUGUGUUGAUGCCGCGAUUUUGACUGAGACUUCUUCCCACGAUUUCUGUUUUUGCUUCUCCAAGGAAA\
) } def
/len { sequence length } bind def

/coor [
[81.16133881 96.85977173]
[68.52260590 88.78125000]
[55.88387299 80.70273590]
[43.24514389 72.62421417]
[30.60641289 64.54569244]
[17.96768188 56.46717453]
[5.01128578 48.90861511]
[-8.24139500 41.88248825]
[-21.49407578 34.85636139]
[-34.74675751 27.83023453]
[-47.99943542 20.80410957]
[-61.25211716 13.77798176]
[-74.50479889 6.75185537]
[-97.44209290 9.93369389]
[-109.51621246 -8.97965240]
[-123.59609985 -14.15234756]
[-137.67597961 -19.32504272]
[-151.75587463 -24.49773598]
[-165.83575439 -29.67043114]
[-179.91564941 -34.84312439]
[-193.99554443 -40.01581955]
[-208.07542419 -45.18851471]
[-222.15531921 -50.36120987]
[-236.23519897 -55.53390503]
[-250.44235229 -49.14684677]
[-264.64767456 -54.59326935]
[-270.64920044 -68.17697906]
[-284.72909546 -73.34967804]
[-295.00662231 -62.14963531]
[-308.78997803 -55.73971939]
[-323.97735596 -55.09739304]
[-338.25271606 -60.32060623]
[-349.43923950 -70.61285400]
[-355.83102417 -84.40464783]
[-356.45336914 -99.59284210]
[-351.21139526 -113.86133575]
[-340.90441895 -125.03430176]
[-327.10424805 -131.40792847]
[-311.91525269 -132.01029968]
[-297.65365601 -126.74954987]
[-286.49426270 -116.42790222]
[-280.13879395 -102.61933899]
[-279.55639648 -87.42956543]
[-265.47650146 -82.25686646]
[-252.10845947 -88.72455597]
[-237.75576782 -83.67928314]
[-231.06250000 -69.61379242]
[-216.98262024 -64.44109344]
[-202.90272522 -59.26840210]
[-188.82284546 -54.09570694]
[-174.74295044 -48.92301178]
[-160.66307068 -43.75031662]
[-146.58317566 -38.57762527]
[-132.50329590 -33.40493011]
[-118.42340851 -28.23223495]
[-104.34352112 -23.05953979]
[-98.58155060 -27.77933121]
[-91.45014191 -30.15647125]
[-83.87102509 -29.83196068]
[-76.84237671 -26.79939651]
[-71.30735779 -21.41224480]
[-68.02760315 -14.34328461]
[-67.47866821 -6.50082541]
[-54.22599030 0.52530140]
[-40.97330856 7.55142784]
[-27.72062874 14.57755470]
[-14.46794891 21.60368156]
[-1.21526814 28.62980843]
[12.03741264 35.65593338]
[15.60959339 34.89285660]
[19.73558617 35.90900803]
[23.53337288 38.94740677]
[26.04620171 43.82844162]
[38.68493271 51.90696335]
[51.32366180 59.98548126]
[63.96239471 68.06400299]
[76.60112762 76.14251709]
[89.23985291 84.22103882]
[103.41281128 81.20880890]
[115.62142181 89.01239777]
[118.83866119 103.14022827]
[131.47740173 111.21875000]
[144.11611938 119.29726410]
[156.75485229 127.37578583]
[171.14366150 121.87409210]
[185.84121704 125.85339355]
[195.26591492 137.58535767]
[195.96676636 152.43954468]
[208.60549927 160.51806641]
[219.68061829 154.40048218]
[232.23678589 153.63087463]
[243.84124756 158.29586792]
[252.27247620 167.43519592]
[255.94534302 179.23861694]
[254.20887756 191.40428162]
[266.39172363 200.15519714]
[282.75482178 201.24169922]
[289.75167847 216.07330322]
[280.18450928 229.39250183]
[263.89520264 227.49766541]
[257.64077759 212.33802795]
[245.45796204 203.58711243]
[229.09068298 209.93083191]
[212.01525879 205.23568726]
[201.00054932 191.17074585]
[200.52697754 173.15679932]
[187.88824463 165.07827759]
[174.11267090 170.67932129]
[159.50769043 167.05183411]
[149.72483826 155.38354492]
[148.67633057 140.01451111]
[136.03761292 131.93600464]
[123.39887238 123.85748291]
[110.76014709 115.77896118]
[96.58718872 118.79119110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[4 75]
[5 74]
[6 73]
[7 69]
[8 68]
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[27 44]
[28 43]
[81 114]
[82 113]
[83 112]
[84 111]
[88 107]
[89 106]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
