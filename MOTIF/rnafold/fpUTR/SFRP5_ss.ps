%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGGGGCGCCCGCAGCGCAGGCUGCCACCCACCUGGGCGACCUCCGCGGCGGCGGCGGCGGCGGCUGGGUAGAGUCAGGGCCGGGGGCGCACGCCGGAACACCUGGGCCGCCGGGCACCGAGCGUCGGGGGGCUGCGCGGCGCGCACCUGGAGAGGGCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[108.85997009 276.62200928]
[93.94972992 282.54351807]
[80.09582520 274.45349121]
[77.92578125 258.55786133]
[89.10427094 247.05044556]
[90.23192596 232.09288025]
[81.77477264 216.73701477]
[92.22528839 201.59968567]
[93.07137299 186.62356567]
[93.91745758 171.64744568]
[94.76354980 156.67132568]
[95.60963440 141.69520569]
[96.45572662 126.71909332]
[82.72210693 120.68685913]
[72.26620483 131.44204712]
[61.81030273 142.19723511]
[51.35440063 152.95242310]
[40.89849472 163.70761108]
[37.40475082 179.73028564]
[21.70170975 184.45748901]
[9.94331360 173.02630615]
[14.22559357 157.19613647]
[30.14330673 153.25170898]
[40.59920883 142.49652100]
[51.05511093 131.74133301]
[61.51101685 120.98614502]
[71.96691895 110.23095703]
[72.18579865 96.01708984]
[78.77362823 84.38003540]
[89.42343903 77.77819824]
[76.52813721 70.11587524]
[63.63283157 62.45355606]
[50.26133728 55.65627289]
[36.47158813 49.75348663]
[22.68184471 43.85069656]
[8.89209843 37.94791031]
[-4.89764786 32.04512024]
[-18.68739319 26.14233208]
[-34.41889572 27.82472801]
[-43.07450867 15.70327377]
[-56.86425400 9.80048561]
[-66.02855682 9.29343987]
[-70.85622406 3.65477872]
[-84.53249359 -2.50636125]
[-100.29285431 -1.12018728]
[-108.71892548 -13.40231514]
[-122.39519501 -19.56345558]
[-136.07145691 -25.72459412]
[-149.74772644 -31.88573456]
[-163.75311279 -24.92991638]
[-178.94073486 -28.65416336]
[-188.13948059 -41.29999924]
[-187.00596619 -56.89644623]
[-176.07542419 -68.07933807]
[-160.50891113 -69.56845856]
[-147.65644836 -60.66069031]
[-143.58659363 -45.56200409]
[-129.91032410 -39.40086365]
[-116.23405457 -33.23972321]
[-102.55778503 -27.07858467]
[-87.77563477 -28.90544510]
[-78.37135315 -16.18263054]
[-64.69508362 -10.02149105]
[-50.96146774 -3.98925996]
[-37.17171860 1.91352820]
[-22.42655373 -0.19107291]
[-12.78460598 12.35258675]
[1.00514019 18.25537491]
[14.79488659 24.15816307]
[28.58463287 30.06095123]
[42.37437820 35.96373749]
[56.16412354 41.86652756]
[50.80422211 27.85683632]
[55.55345154 13.62852573]
[68.25371552 5.64709091]
[83.13388062 7.53937912]
[93.43223572 18.44551468]
[94.46911621 33.40963364]
[85.77333069 45.63188553]
[71.29515839 49.55825424]
[84.19046021 57.22057724]
[97.08576202 64.88289642]
[111.95589447 66.85244751]
[126.40130615 62.81140137]
[140.84672546 58.77035904]
[155.29212952 54.72931290]
[169.73754883 50.68827057]
[180.94303894 39.51922989]
[195.28421021 43.54169846]
[209.72961426 39.50065231]
[224.17503357 35.45960999]
[238.62043762 31.41856575]
[251.16168213 17.96236801]
[267.97497559 22.92619133]
[282.34182739 18.61413193]
[296.70864868 14.30207253]
[311.03430176 9.85507107]
[325.31750488 5.27352285]
[339.60067749 0.69197428]
[342.89489746 -10.78414822]
[351.24893188 -19.14531517]
[362.49136353 -22.38281250]
[373.77847290 -19.79876900]
[382.31356812 -12.15277863]
[396.75897217 -16.19382286]
[411.20437622 -20.23486710]
[422.40988159 -31.40390778]
[436.75103760 -27.38143921]
[451.19647217 -31.42248344]
[465.64187622 -35.46352768]
[473.10144043 -40.81106567]
[480.39709473 -39.44198227]
[494.91598511 -43.21058273]
[509.39874268 -47.11557770]
[523.84417725 -51.15662003]
[538.28961182 -55.19766617]
[551.91418457 -65.28756714]
[565.38146973 -54.98856354]
[559.21307373 -39.19656754]
[542.33062744 -40.75225067]
[527.88519287 -36.71120834]
[513.43981934 -32.67016220]
[507.82131958 -27.81903839]
[498.68457031 -28.69170952]
[484.16571045 -24.92310905]
[469.68292236 -21.01811600]
[455.23748779 -16.97707176]
[440.79208374 -12.93602657]
[430.61981201 -2.05602837]
[415.24542236 -5.78945446]
[400.80001831 -1.74841011]
[386.35461426 2.29263425]
[378.39227295 18.74197197]
[360.64410400 24.28398323]
[344.18222046 14.97516060]
[329.89904785 19.55670929]
[315.61584473 24.13825798]
[310.18380737 29.19728851]
[301.02072144 28.66891479]
[286.65386963 32.98097229]
[272.28701782 37.29303360]
[266.25936890 47.81177902]
[254.29162598 51.50543213]
[242.66148376 45.86397934]
[228.21607971 49.90502167]
[213.77066040 53.94606781]
[199.32525635 57.98711014]
[189.15298462 68.86711121]
[173.77859497 65.13368225]
[159.33317566 69.17472839]
[144.88777161 73.21577454]
[130.44235229 77.25681305]
[115.99694061 81.29785919]
[124.32022858 91.04004669]
[126.89020538 104.26316071]
[122.41060638 117.66199493]
[111.43183899 127.56517792]
[110.58575439 142.54130554]
[109.73966980 157.51741028]
[108.89357758 172.49353027]
[108.04749298 187.46965027]
[107.20140076 202.44577026]
[115.20780945 212.59385681]
[114.16917419 225.07548523]
[105.18947601 233.22053528]
[104.06182861 248.17808533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 166]
[6 165]
[8 162]
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[30 82]
[31 81]
[32 80]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[40 65]
[41 64]
[43 63]
[44 62]
[46 60]
[47 59]
[48 58]
[49 57]
[83 153]
[84 152]
[85 151]
[86 150]
[87 149]
[89 147]
[90 146]
[91 145]
[92 144]
[94 141]
[95 140]
[96 139]
[97 137]
[98 136]
[99 135]
[104 132]
[105 131]
[106 130]
[108 128]
[109 127]
[110 126]
[112 125]
[113 124]
[114 122]
[115 121]
[116 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
