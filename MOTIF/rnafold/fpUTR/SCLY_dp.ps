%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCLY)
} def

/sequence { (\
GAUUGGCUGGGGUGCUUCGCUCAGCCAAUCCGGACGCGCCCGGGCGUCGCGGCCCCGCCUCCUCCCCGGCGCUCUGGGCCCGUAGCGCUCCGCGGGAAGGAGGCUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.854540456 ubox
2 29 0.975483077 ubox
3 28 0.990870375 ubox
4 27 0.998256654 ubox
5 26 0.999984175 ubox
6 25 0.999995142 ubox
7 24 0.999988437 ubox
8 23 0.998160876 ubox
9 21 0.005242592 ubox
9 22 0.979871469 ubox
10 18 0.003788216 ubox
10 20 0.033754287 ubox
10 21 0.959278411 ubox
10 22 0.198847378 ubox
11 17 0.003907940 ubox
11 18 0.034752730 ubox
11 20 0.940130358 ubox
11 21 0.275560881 ubox
12 16 0.006127287 ubox
12 17 0.038036000 ubox
12 20 0.336911553 ubox
13 19 0.386332733 ubox
14 18 0.374256251 ubox
14 20 0.025202176 ubox
15 19 0.027999204 ubox
29 52 0.009085669 ubox
30 43 0.008862633 ubox
30 51 0.021429124 ubox
30 52 0.512230043 ubox
30 107 0.003185176 ubox
31 38 0.017545237 ubox
31 42 0.043837593 ubox
31 49 0.045969462 ubox
31 51 0.969869951 ubox
31 106 0.007734247 ubox
32 37 0.018386140 ubox
32 40 0.021433020 ubox
32 41 0.062338880 ubox
32 48 0.036313547 ubox
32 50 0.973252968 ubox
32 54 0.030690721 ubox
32 55 0.008696747 ubox
32 56 0.005534564 ubox
32 105 0.004143707 ubox
33 39 0.021521467 ubox
33 40 0.062219794 ubox
33 47 0.018995823 ubox
33 48 0.994899557 ubox
33 53 0.030291099 ubox
33 54 0.008723980 ubox
33 55 0.005395186 ubox
34 47 0.996288086 ubox
35 46 0.996585261 ubox
35 49 0.008402284 ubox
35 51 0.032394878 ubox
36 45 0.996600004 ubox
36 47 0.010542885 ubox
36 48 0.008355167 ubox
36 50 0.032739591 ubox
37 44 0.996410065 ubox
37 46 0.014311554 ubox
37 49 0.032651049 ubox
38 45 0.015815529 ubox
38 47 0.006292440 ubox
38 48 0.031429031 ubox
38 53 0.015465345 ubox
38 79 0.003553842 ubox
39 44 0.016046523 ubox
39 46 0.029994323 ubox
39 52 0.015477162 ubox
39 78 0.003557028 ubox
39 107 0.003979486 ubox
40 51 0.015436140 ubox
40 77 0.003557100 ubox
40 106 0.004028446 ubox
40 107 0.007607088 ubox
41 49 0.015329224 ubox
41 76 0.003556601 ubox
41 106 0.007804346 ubox
42 48 0.015295247 ubox
42 54 0.003720728 ubox
42 55 0.056155466 ubox
42 56 0.006887682 ubox
43 47 0.009917196 ubox
43 53 0.004506118 ubox
43 54 0.070858498 ubox
43 55 0.006206224 ubox
44 53 0.071638580 ubox
44 54 0.005135835 ubox
44 72 0.003539534 ubox
45 51 0.005796841 ubox
45 52 0.071629749 ubox
45 71 0.003556930 ubox
46 50 0.006341467 ubox
46 53 0.004040374 ubox
46 70 0.003556916 ubox
47 52 0.003848420 ubox
47 69 0.003555678 ubox
48 68 0.003555445 ubox
49 67 0.003529427 ubox
50 106 0.005947619 ubox
51 56 0.006472482 ubox
51 105 0.005970768 ubox
52 104 0.004981578 ubox
53 103 0.004629511 ubox
53 107 0.184251176 ubox
54 102 0.004177937 ubox
54 106 0.183979400 ubox
54 107 0.843593336 ubox
55 106 0.857481553 ubox
55 107 0.417760708 ubox
56 106 0.425246524 ubox
57 104 0.995331446 ubox
57 105 0.089129026 ubox
58 103 0.999970316 ubox
59 102 0.999970287 ubox
60 101 0.999836163 ubox
61 99 0.003693656 ubox
61 100 0.999973088 ubox
62 99 0.999830917 ubox
63 96 0.006330024 ubox
63 97 0.691592714 ubox
63 98 0.718459319 ubox
64 95 0.012941527 ubox
64 96 0.979728632 ubox
65 78 0.006760527 ubox
65 94 0.013313001 ubox
65 95 0.979754366 ubox
65 96 0.198919474 ubox
66 77 0.006825996 ubox
66 94 0.979563687 ubox
66 95 0.199515113 ubox
66 96 0.003384634 ubox
67 76 0.006832802 ubox
67 82 0.014510719 ubox
67 92 0.974304610 ubox
67 94 0.199561367 ubox
67 95 0.003449342 ubox
68 75 0.006760045 ubox
68 80 0.005572419 ubox
68 81 0.015236440 ubox
68 89 0.178768034 ubox
68 90 0.097324939 ubox
68 91 0.961045887 ubox
68 93 0.174282295 ubox
69 74 0.006616943 ubox
69 79 0.005698772 ubox
69 80 0.015197551 ubox
69 88 0.375322938 ubox
69 89 0.014795427 ubox
69 90 0.925308300 ubox
69 93 0.022143744 ubox
70 78 0.005805630 ubox
70 87 0.444976496 ubox
70 92 0.030149208 ubox
71 79 0.015244779 ubox
71 86 0.447867609 ubox
71 88 0.892993688 ubox
71 91 0.029382112 ubox
72 78 0.015246345 ubox
72 85 0.447795221 ubox
72 87 0.892994356 ubox
73 77 0.013754953 ubox
73 84 0.441870622 ubox
74 85 0.891665971 ubox
75 82 0.422036070 ubox
75 84 0.891407372 ubox
76 81 0.434682647 ubox
76 83 0.871935929 ubox
76 86 0.005899664 ubox
76 89 0.004848924 ubox
76 90 0.028924096 ubox
77 88 0.005019514 ubox
77 89 0.029255373 ubox
78 86 0.031970967 ubox
78 88 0.029427501 ubox
79 85 0.031939330 ubox
79 87 0.029383433 ubox
79 96 0.007039666 ubox
80 95 0.007076473 ubox
81 94 0.007078863 ubox
82 93 0.007034128 ubox
83 92 0.006977410 ubox
84 105 0.003773421 ubox
85 93 0.015871811 ubox
85 104 0.003886361 ubox
86 92 0.015896503 ubox
86 103 0.003884292 ubox
87 91 0.014875219 ubox
88 102 0.003889231 ubox
89 101 0.003896604 ubox
90 100 0.003897608 ubox
91 99 0.003897053 ubox
1 30 0.9500000 lbox
2 29 0.9500000 lbox
3 28 0.9500000 lbox
4 27 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
33 48 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
54 107 0.9500000 lbox
55 106 0.9500000 lbox
57 104 0.9500000 lbox
58 103 0.9500000 lbox
59 102 0.9500000 lbox
60 101 0.9500000 lbox
61 100 0.9500000 lbox
62 99 0.9500000 lbox
63 98 0.9500000 lbox
64 96 0.9500000 lbox
65 95 0.9500000 lbox
66 94 0.9500000 lbox
67 92 0.9500000 lbox
68 91 0.9500000 lbox
69 90 0.9500000 lbox
71 88 0.9500000 lbox
72 87 0.9500000 lbox
74 85 0.9500000 lbox
75 84 0.9500000 lbox
76 83 0.9500000 lbox
showpage
end
%%EOF
