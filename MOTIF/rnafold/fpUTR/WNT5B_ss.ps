%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCAUUAGCAGGCACCCAGGCCUGUCUUUGGCUCGGAAACGGUGGCCCCCAAUGUAGCCUAGUUUGAACCUAGGAACUGCAGGACCAGAGAGAUUCCACUGGAGCCUGAUGGACGGGUGACAGAGGGAACCCUACUCUGGAAACUGUCAGUCCCAGGGCACUGGGGAGGGCUGAGGCCGACC\
) } def
/len { sequence length } bind def

/coor [
[-29.66958427 261.14260864]
[-38.31978989 273.39715576]
[-46.86506271 285.72509766]
[-55.30478287 298.12554932]
[-63.74450684 310.52600098]
[-58.66014099 325.06750488]
[-63.06174088 339.64416504]
[-75.06068420 348.72653198]
[-89.92890167 348.99862671]
[-98.36862183 361.39904785]
[-106.80834961 373.79949951]
[-115.24806976 386.19995117]
[-123.68778992 398.60040283]
[-132.12751770 411.00085449]
[-128.93083191 426.47848511]
[-137.68444824 439.63711548]
[-153.19500732 442.66998291]
[-166.26036072 433.77770996]
[-169.12905884 418.23596191]
[-160.09916687 405.26535034]
[-144.52795410 402.56112671]
[-136.08824158 390.16067505]
[-127.64851379 377.76022339]
[-119.20879364 365.35980225]
[-110.76907349 352.95935059]
[-102.32935333 340.55889893]
[-107.53070831 326.62750244]
[-103.48344421 312.13323975]
[-91.53782654 302.69100952]
[-76.14495087 302.08627319]
[-67.70523071 289.68582153]
[-59.26551056 277.28536987]
[-58.09848022 269.96920776]
[-50.57433701 264.74694824]
[-41.92413330 252.49238586]
[-44.86823654 245.96054077]
[-45.35681534 238.74414062]
[-43.28125000 231.74424744]
[-38.85606384 225.85142517]
[-32.59774017 221.83259583]
[-25.26474190 220.23124695]
[-17.76570320 221.29443359]
[-8.10210705 209.82208252]
[1.56148911 198.34973145]
[11.12679482 186.79530334]
[20.59311485 175.15962219]
[30.05943298 163.52395630]
[39.52575302 151.88829041]
[48.58929825 139.93621826]
[57.23950195 127.68166351]
[65.88970947 115.42711639]
[56.03932953 126.73950195]
[41.32542801 129.65516663]
[27.90553093 122.95394135]
[21.39564705 109.44019318]
[24.52005959 94.76919556]
[35.97125244 85.08053589]
[50.95708466 84.42874908]
[63.20697021 93.08762360]
[51.90127563 83.22956848]
[40.59558105 73.37151337]
[29.28988457 63.51345825]
[17.98418808 53.65540314]
[2.56450224 56.25680161]
[-10.89355755 48.29346848]
[-16.03550529 33.52545166]
[-10.43347168 18.92575264]
[3.26743555 11.38790321]
[18.59806633 14.47104740]
[28.31976509 26.71941757]
[27.84224510 42.34970856]
[39.14793777 52.20776367]
[50.45363617 62.06581879]
[61.75933075 71.92387390]
[73.06502533 81.78192902]
[98.74921417 68.45180511]
[123.93200684 80.88565063]
[134.35597229 70.09950256]
[144.77993774 59.31336212]
[155.20390320 48.52722168]
[165.53541565 37.65248489]
[175.77371216 26.68994331]
[186.01200867 15.72740459]
[185.08862305 -1.73019111]
[196.83680725 -14.21677780]
[213.64332581 -14.35218143]
[223.69296265 -25.48792076]
[233.74259949 -36.62366104]
[243.79223633 -47.75940323]
[253.84188843 -58.89514160]
[263.89154053 -70.03088379]
[273.84573364 -81.25201416]
[283.70379639 -92.55770874]
[286.81256104 -110.69636536]
[303.60586548 -115.75557709]
[313.26943970 -127.22793579]
[322.93304443 -138.70028687]
[332.59664917 -150.17263794]
[335.39526367 -168.36174011]
[352.09973145 -173.70692444]
[361.56607056 -185.34259033]
[371.03237915 -196.97825623]
[369.60733032 -212.48977661]
[379.37329102 -224.15515137]
[394.16992188 -225.41812134]
[403.63623047 -237.05378723]
[413.10253906 -248.68945312]
[422.56887817 -260.32513428]
[432.03518677 -271.96078491]
[431.83151245 -288.00256348]
[444.33721924 -298.05175781]
[459.95901489 -294.39953613]
[466.71319580 -279.84756470]
[459.41854858 -265.55883789]
[443.67086792 -262.49447632]
[434.20452881 -250.85881042]
[424.73822021 -239.22314453]
[415.27191162 -227.58746338]
[405.80557251 -215.95179749]
[407.57949829 -201.20768738]
[398.14505005 -189.27261353]
[382.66806030 -187.51194763]
[373.20172119 -175.87626648]
[363.73541260 -164.24060059]
[364.65707397 -152.16421509]
[356.84506226 -142.38983154]
[344.06900024 -140.50904846]
[334.40539551 -129.03669739]
[324.74179077 -117.56433868]
[315.07821655 -106.09197998]
[315.79354858 -94.00161743]
[307.81582642 -84.36204529]
[295.00949097 -82.69965363]
[285.15142822 -71.39395905]
[283.12039185 -64.26913452]
[275.02725220 -59.98124313]
[264.97763062 -48.84550095]
[254.92797852 -37.70976257]
[244.87834167 -26.57402039]
[234.82870483 -15.43828106]
[224.77906799 -4.30254030]
[227.23214722 8.36114979]
[221.85649109 20.30061722]
[210.41363525 27.05688858]
[196.97454834 25.96570206]
[186.73625183 36.92824173]
[176.49795532 47.89078140]
[174.22486877 54.94210434]
[165.99005127 58.95119095]
[155.56608582 69.73733521]
[145.14212036 80.52347565]
[134.71813965 91.30961609]
[135.23027039 106.30087280]
[146.36599731 116.35051727]
[157.50173950 126.40015411]
[168.63748169 136.44979858]
[179.77322388 146.49943542]
[195.91448975 149.39627075]
[201.22109985 164.91310120]
[190.23405457 177.08753967]
[174.25590515 173.39556885]
[169.72358704 157.63517761]
[158.58784485 147.58554077]
[147.45210266 137.53588867]
[136.31636047 127.48625183]
[125.18062592 117.43661499]
[112.10743713 128.81805420]
[94.61569214 131.42997742]
[78.14425659 124.07732391]
[69.49404907 136.33186340]
[60.84384537 148.58642578]
[60.60456085 152.97624207]
[59.11790848 156.68023682]
[56.75689697 159.38807678]
[53.95735931 160.94413757]
[51.16142273 161.35461426]
[41.69510269 172.99028015]
[32.22878265 184.62594604]
[22.76246452 196.26161194]
[19.76383972 204.91569519]
[13.03384399 208.01332092]
[3.37024784 219.48568726]
[-6.29334784 230.95803833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 32]
[4 31]
[5 30]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[42 183]
[43 182]
[44 181]
[45 179]
[46 178]
[47 177]
[48 176]
[49 171]
[50 170]
[51 169]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[77 152]
[78 151]
[79 150]
[80 149]
[81 147]
[82 146]
[83 145]
[86 141]
[87 140]
[88 139]
[89 138]
[90 137]
[91 136]
[92 134]
[93 133]
[95 130]
[96 129]
[97 128]
[98 127]
[100 124]
[101 123]
[102 122]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
