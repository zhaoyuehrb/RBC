%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AVPR2)
} def

/sequence { (\
CUUGCUCCUCAGGCAGAGGCUGAGUCCGCACAUCACCUCCAGGCCCUCAGAACACCUGCCCCAGCCCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.009059856 ubox
1 13 0.032087360 ubox
1 16 0.025477222 ubox
1 18 0.012576666 ubox
1 24 0.004899499 ubox
1 64 0.015586424 ubox
2 11 0.011609011 ubox
2 12 0.033117086 ubox
2 15 0.022279729 ubox
2 16 0.071138196 ubox
2 17 0.011489335 ubox
2 23 0.004960016 ubox
2 41 0.003351976 ubox
2 50 0.004359861 ubox
2 52 0.004021042 ubox
2 63 0.014518428 ubox
2 64 0.025677153 ubox
3 11 0.058900663 ubox
3 15 0.289099833 ubox
3 16 0.007254322 ubox
3 22 0.004813711 ubox
3 30 0.082288718 ubox
3 49 0.005229374 ubox
3 51 0.004520897 ubox
3 54 0.062884389 ubox
3 63 0.032828025 ubox
3 69 0.277829738 ubox
4 10 0.061842170 ubox
4 14 0.311855235 ubox
4 21 0.003278047 ubox
4 25 0.005615269 ubox
4 27 0.004034759 ubox
4 29 0.092851129 ubox
4 48 0.005450095 ubox
4 53 0.070802603 ubox
4 59 0.016900338 ubox
4 62 0.034012880 ubox
4 65 0.700988724 ubox
4 68 0.311466559 ubox
5 12 0.017674963 ubox
5 13 0.311370645 ubox
5 16 0.004964414 ubox
5 24 0.005911285 ubox
5 28 0.092717264 ubox
5 50 0.012712857 ubox
5 58 0.016881161 ubox
5 64 0.702735115 ubox
6 11 0.022202329 ubox
6 12 0.291567503 ubox
6 13 0.008969890 ubox
6 15 0.005775425 ubox
6 17 0.003265067 ubox
6 23 0.005882410 ubox
6 49 0.012318028 ubox
6 51 0.077171365 ubox
6 63 0.679320905 ubox
7 12 0.074075809 ubox
7 13 0.013320631 ubox
7 16 0.003287468 ubox
7 19 0.031231045 ubox
7 22 0.004318405 ubox
7 50 0.077561084 ubox
8 12 0.014682736 ubox
8 18 0.031779900 ubox
8 24 0.093729042 ubox
8 50 0.052546218 ubox
8 64 0.456392233 ubox
9 17 0.031818576 ubox
9 23 0.094145912 ubox
9 49 0.053387640 ubox
9 51 0.014233635 ubox
9 63 0.457075932 ubox
10 16 0.031806131 ubox
10 22 0.094139809 ubox
10 50 0.014815917 ubox
10 58 0.109960085 ubox
11 21 0.091458865 ubox
11 47 0.050546509 ubox
11 57 0.110312328 ubox
12 20 0.082952574 ubox
12 21 0.022666188 ubox
12 40 0.006236770 ubox
12 45 0.124806082 ubox
12 46 0.042889736 ubox
12 56 0.109861713 ubox
12 60 0.920281731 ubox
12 61 0.041736459 ubox
12 62 0.022302248 ubox
12 66 0.093062408 ubox
12 67 0.007010297 ubox
12 68 0.013765837 ubox
12 71 0.006992811 ubox
13 20 0.044870871 ubox
13 39 0.005098866 ubox
13 44 0.128593477 ubox
13 45 0.031313526 ubox
13 55 0.109512596 ubox
13 59 0.922127253 ubox
13 60 0.030095042 ubox
13 61 0.021143461 ubox
13 65 0.093411580 ubox
13 66 0.005426848 ubox
13 67 0.013605391 ubox
13 70 0.007028033 ubox
14 19 0.059085592 ubox
14 43 0.131945981 ubox
14 58 0.922552280 ubox
14 64 0.093413459 ubox
15 47 0.019104085 ubox
15 57 0.917666544 ubox
16 39 0.344921586 ubox
16 46 0.021214779 ubox
16 48 0.061113588 ubox
16 56 0.909546972 ubox
17 38 0.348211007 ubox
17 47 0.068563528 ubox
17 57 0.090882521 ubox
18 37 0.348613097 ubox
18 38 0.004546560 ubox
18 40 0.007242675 ubox
18 45 0.064979116 ubox
18 46 0.058068969 ubox
18 56 0.125431627 ubox
18 57 0.003259260 ubox
18 60 0.017018227 ubox
18 61 0.004852891 ubox
18 62 0.005967631 ubox
18 66 0.063656939 ubox
18 67 0.005374501 ubox
18 68 0.005387412 ubox
19 29 0.004056220 ubox
19 36 0.348526466 ubox
19 37 0.005281797 ubox
19 39 0.007245741 ubox
19 44 0.074712619 ubox
19 45 0.044881173 ubox
19 55 0.133398209 ubox
19 56 0.004394431 ubox
19 59 0.017054368 ubox
19 60 0.004840989 ubox
19 61 0.005959759 ubox
19 65 0.063970384 ubox
19 66 0.004526297 ubox
19 67 0.005305647 ubox
20 28 0.004142048 ubox
20 42 0.030596852 ubox
20 43 0.081166440 ubox
20 50 0.924898717 ubox
20 58 0.015240013 ubox
20 64 0.063951906 ubox
21 30 0.004694118 ubox
21 32 0.018513811 ubox
21 35 0.345948482 ubox
21 41 0.035895251 ubox
21 42 0.073204024 ubox
21 49 0.925778095 ubox
21 63 0.063616276 ubox
22 29 0.005159293 ubox
22 31 0.018770699 ubox
22 34 0.347918626 ubox
22 39 0.079707562 ubox
22 40 0.028871143 ubox
22 48 0.926073310 ubox
22 62 0.062501140 ubox
23 33 0.345306438 ubox
23 38 0.083993468 ubox
23 47 0.925644748 ubox
24 31 0.275838042 ubox
24 33 0.016322031 ubox
24 36 0.021099410 ubox
24 37 0.082439279 ubox
24 44 0.066413248 ubox
24 46 0.921151993 ubox
24 59 0.011140574 ubox
25 30 0.252908168 ubox
25 32 0.027472479 ubox
25 35 0.024342749 ubox
25 43 0.052347742 ubox
25 58 0.006959079 ubox
26 42 0.054873958 ubox
26 43 0.797667950 ubox
27 42 0.798658320 ubox
28 44 0.454384795 ubox
28 59 0.017463120 ubox
29 43 0.453659499 ubox
29 58 0.017194591 ubox
30 57 0.015188773 ubox
33 43 0.011447789 ubox
33 51 0.005672071 ubox
34 42 0.051903031 ubox
34 50 0.005797859 ubox
36 43 0.055419901 ubox
37 42 0.059103842 ubox
37 43 0.007243849 ubox
37 50 0.008059901 ubox
37 64 0.006591616 ubox
38 42 0.007922042 ubox
38 49 0.007768219 ubox
38 51 0.005180685 ubox
38 63 0.006423461 ubox
39 50 0.005747577 ubox
40 58 0.121255444 ubox
41 47 0.009343637 ubox
41 57 0.124827657 ubox
42 46 0.009657054 ubox
42 48 0.013646155 ubox
42 56 0.126570948 ubox
42 60 0.073927376 ubox
42 61 0.021507485 ubox
42 62 0.046556956 ubox
42 66 0.294855262 ubox
42 67 0.023395763 ubox
42 68 0.043328269 ubox
43 47 0.008896119 ubox
43 55 0.126173988 ubox
43 59 0.074186848 ubox
43 60 0.021270571 ubox
43 61 0.046521876 ubox
43 65 0.295880547 ubox
43 66 0.019180105 ubox
43 67 0.043216647 ubox
44 58 0.070261351 ubox
44 64 0.295699074 ubox
46 64 0.045765868 ubox
47 63 0.047064606 ubox
48 58 0.312638967 ubox
49 57 0.317353420 ubox
50 56 0.317057117 ubox
56 64 0.055235592 ubox
57 63 0.056032380 ubox
57 69 0.005572835 ubox
58 62 0.055343935 ubox
58 65 0.063860032 ubox
58 68 0.006015485 ubox
59 64 0.064162216 ubox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
showpage
end
%%EOF
