%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ENTPD2)
} def

/sequence { (\
GGCUCCCCGCACUCUCCGGGUCCACGCAUCGUCCUCCCGCGCGCCCGCCCGCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.124695231 ubox
1 8 0.386026090 ubox
1 13 0.020648357 ubox
1 14 0.040761277 ubox
1 15 0.010851932 ubox
1 16 0.018933164 ubox
1 17 0.033285325 ubox
1 22 0.009896746 ubox
1 23 0.132029857 ubox
1 33 0.005015049 ubox
1 34 0.005297395 ubox
1 38 0.006031265 ubox
1 45 0.074290746 ubox
1 46 0.022171523 ubox
1 49 0.489062303 ubox
1 50 0.104297943 ubox
1 53 0.406786051 ubox
1 54 0.033251603 ubox
2 6 0.123631361 ubox
2 7 0.381602672 ubox
2 10 0.513735082 ubox
2 12 0.023270281 ubox
2 13 0.019120531 ubox
2 14 0.011773724 ubox
2 15 0.011623322 ubox
2 16 0.032914623 ubox
2 21 0.010001120 ubox
2 22 0.132054226 ubox
2 27 0.017578691 ubox
2 32 0.005074745 ubox
2 33 0.005253666 ubox
2 37 0.005971598 ubox
2 40 0.007352001 ubox
2 42 0.004850620 ubox
2 44 0.074864306 ubox
2 45 0.020953455 ubox
2 48 0.492826032 ubox
2 49 0.092592404 ubox
2 52 0.407864663 ubox
2 53 0.030883315 ubox
3 9 0.514157055 ubox
3 20 0.011482532 ubox
3 26 0.017592933 ubox
3 31 0.005808612 ubox
3 39 0.007150130 ubox
3 41 0.004810385 ubox
3 43 0.074244830 ubox
3 47 0.493856265 ubox
3 51 0.402023002 ubox
4 19 0.009080926 ubox
4 20 0.009395690 ubox
5 18 0.009000630 ubox
5 19 0.011358310 ubox
5 20 0.044355801 ubox
6 18 0.011383006 ubox
6 19 0.042444407 ubox
6 20 0.245680106 ubox
7 18 0.040223667 ubox
7 19 0.247322414 ubox
7 20 0.005552495 ubox
8 18 0.247896502 ubox
8 19 0.005553993 ubox
8 26 0.004291590 ubox
8 41 0.097090714 ubox
8 43 0.482822977 ubox
8 47 0.118376002 ubox
8 51 0.012499365 ubox
9 17 0.245398721 ubox
9 25 0.004454896 ubox
9 27 0.004997195 ubox
9 40 0.098819693 ubox
9 42 0.486528562 ubox
9 44 0.106358055 ubox
9 46 0.117026660 ubox
9 48 0.122148538 ubox
9 50 0.018771136 ubox
9 52 0.127739211 ubox
10 26 0.005001313 ubox
10 39 0.090418511 ubox
10 41 0.485945003 ubox
10 43 0.106543976 ubox
10 47 0.118915987 ubox
10 51 0.126882717 ubox
11 21 0.013339595 ubox
12 20 0.014029031 ubox
13 19 0.013371312 ubox
13 20 0.003569933 ubox
14 18 0.013014014 ubox
14 19 0.006204298 ubox
17 26 0.004194063 ubox
17 31 0.008363620 ubox
17 39 0.545383463 ubox
17 41 0.003587203 ubox
17 47 0.336440652 ubox
17 51 0.657627091 ubox
18 25 0.004428002 ubox
18 30 0.008430006 ubox
18 34 0.006793296 ubox
18 35 0.013936908 ubox
18 36 0.007033883 ubox
18 37 0.008099699 ubox
18 38 0.566774183 ubox
18 40 0.003438664 ubox
18 46 0.353831345 ubox
18 50 0.699121181 ubox
18 54 0.021074414 ubox
19 29 0.007645654 ubox
19 30 0.005545614 ubox
19 33 0.006794437 ubox
19 34 0.014727786 ubox
19 35 0.006757729 ubox
19 36 0.008246512 ubox
19 37 0.566832520 ubox
19 38 0.005990516 ubox
19 45 0.353919120 ubox
19 49 0.699256981 ubox
19 53 0.021231471 ubox
20 27 0.008772192 ubox
20 29 0.005619389 ubox
20 32 0.004498568 ubox
20 33 0.014782806 ubox
20 34 0.007769751 ubox
20 35 0.007037001 ubox
20 36 0.566516497 ubox
20 37 0.006069880 ubox
20 44 0.353931162 ubox
20 48 0.699268574 ubox
20 52 0.021231727 ubox
21 26 0.008527299 ubox
21 28 0.005938188 ubox
21 43 0.346521992 ubox
21 47 0.687865485 ubox
21 51 0.020828165 ubox
24 32 0.553904047 ubox
25 31 0.569148535 ubox
25 39 0.017099122 ubox
25 41 0.367892117 ubox
25 43 0.696627712 ubox
25 47 0.030993861 ubox
25 51 0.004769644 ubox
26 30 0.532681136 ubox
26 32 0.031559274 ubox
26 38 0.017187212 ubox
26 40 0.371924524 ubox
26 42 0.703128158 ubox
26 44 0.145130000 ubox
26 46 0.031343625 ubox
26 48 0.042755367 ubox
26 50 0.004242307 ubox
26 52 0.007854484 ubox
27 31 0.032161108 ubox
27 39 0.371017850 ubox
27 41 0.698783888 ubox
27 43 0.145148448 ubox
27 47 0.042787282 ubox
27 51 0.007817673 ubox
30 39 0.622830560 ubox
30 41 0.162494140 ubox
30 43 0.048697653 ubox
31 38 0.616907901 ubox
31 40 0.228849916 ubox
31 42 0.050342917 ubox
31 44 0.003204444 ubox
31 52 0.003947222 ubox
32 39 0.220887445 ubox
32 41 0.049917278 ubox
32 51 0.003682567 ubox
38 47 0.005504172 ubox
38 51 0.038464847 ubox
39 46 0.006055439 ubox
39 48 0.139098552 ubox
39 50 0.050777990 ubox
39 52 0.059736146 ubox
40 47 0.141066203 ubox
40 51 0.060320998 ubox
41 46 0.134497050 ubox
41 48 0.115185117 ubox
41 50 0.055787379 ubox
41 52 0.142714050 ubox
42 47 0.116025697 ubox
42 51 0.143498845 ubox
43 50 0.139530425 ubox
43 52 0.048115199 ubox
44 51 0.048390699 ubox
1 49 0.9500000 lbox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
8 43 0.9500000 lbox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
showpage
end
%%EOF
