%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUACGCCAUCAAGGGCCCCCAGUCCCGGGUGCCGCGGGGACAGUGUAGGGUCAUUAGCUGUUGAGCCGCCCCGGGCGGGCCCAAGCCUUUGGAUCUCAGGUGACCGGCACAGGCGGCCGCGGGGUCCGGAACUGCUUGUUCCGGCAGUGGAAGAGACGCGCCGGCGUUGGCCGCUGCUGCUAGCAGCUUGAACCCCAGGGUCGGGACCG\
) } def
/len { sequence length } bind def

/coor [
[84.83381653 105.86157227]
[69.92549133 104.20565796]
[55.01717758 102.54975128]
[40.10885620 100.89383698]
[25.20053864 99.23793030]
[7.11923504 108.15247345]
[-7.94282961 96.02584076]
[-22.89350128 94.81035614]
[-37.84417343 93.59487915]
[-52.79484558 92.37939453]
[-72.85605621 104.02361298]
[-90.88160706 90.63941193]
[-105.88119507 90.52879333]
[-120.88079071 90.41817474]
[-135.88038635 90.30755615]
[-150.87997437 90.19693756]
[-165.87956238 90.08632660]
[-180.87915039 89.97570801]
[-195.87875366 89.86508942]
[-214.50813293 102.31972504]
[-232.72755432 90.63598633]
[-247.70756531 91.40998077]
[-262.68759155 92.18397522]
[-269.49130249 100.66785431]
[-279.63189697 103.94019318]
[-289.68807983 101.15061951]
[-296.40484619 93.45256042]
[-311.40118408 93.78439331]
[-326.39749146 94.11622620]
[-341.39382935 94.44805145]
[-356.39016724 94.77988434]
[-371.38647461 95.11171722]
[-379.89529419 98.42978668]
[-386.60607910 95.33621216]
[-401.60565186 95.44683075]
[-415.34838867 103.28569031]
[-428.13238525 95.64245605]
[-443.13198853 95.75307465]
[-451.41757202 106.37093353]
[-464.12005615 110.22236633]
[-476.53759766 106.11586761]
[-484.20758057 95.76319885]
[-499.20718384 95.65258789]
[-514.20678711 95.54196930]
[-529.20635986 95.43135071]
[-544.20593262 95.32073212]
[-559.20556641 95.21011353]
[-565.88293457 108.93511200]
[-577.85937500 118.39697266]
[-592.75701904 121.71704102]
[-607.61791992 118.23610687]
[-619.49139404 108.64531708]
[-626.01995850 94.84893036]
[-625.90740967 79.58622742]
[-619.17608643 65.88763428]
[-607.16241455 56.47300720]
[-592.25183105 53.21163177]
[-577.40478516 56.75105667]
[-565.56915283 66.38852692]
[-559.09490967 80.21051788]
[-544.09533691 80.32113647]
[-529.09576416 80.43175507]
[-514.09613037 80.54237366]
[-499.09655762 80.65299225]
[-484.09698486 80.76361084]
[-472.63211060 68.45836639]
[-455.47708130 68.24899292]
[-443.24258423 80.75348663]
[-428.24301147 80.64286804]
[-415.57315063 72.81192017]
[-401.71627808 80.44723511]
[-386.71667480 80.33661652]
[-371.71832275 80.11538696]
[-356.72198486 79.78355408]
[-341.72564697 79.45172882]
[-326.72933960 79.11989594]
[-311.73300171 78.78806305]
[-296.73666382 78.45623016]
[-280.98580933 67.23880005]
[-263.46157837 77.20395660]
[-248.48155212 76.42996216]
[-233.50154114 75.65596771]
[-229.59550476 68.81821442]
[-223.23051453 64.02375031]
[-215.39782715 62.11209869]
[-207.35452271 63.46639252]
[-200.42184448 67.93937683]
[-195.76812744 74.86549377]
[-180.76853943 74.97611237]
[-165.76895142 75.08673096]
[-150.76934814 75.19734955]
[-135.76976013 75.30796814]
[-120.77017212 75.41858673]
[-105.77057648 75.52920532]
[-90.77098846 75.63982391]
[-87.12019348 69.55101776]
[-81.53274536 65.06177521]
[-74.67138672 62.76505661]
[-67.37123871 62.99010849]
[-60.53819275 65.75616455]
[-55.03646469 70.76422119]
[-51.57936859 77.42872620]
[-36.62869644 78.64420319]
[-21.67802238 79.85968781]
[-6.72734976 81.07516479]
[0.43161756 73.78653717]
[10.63480759 71.59475708]
[20.56480026 75.45932770]
[26.85644913 84.32961273]
[41.76476669 85.98551941]
[56.67308426 87.64143372]
[71.58140564 89.29734039]
[86.48972321 90.95325470]
[101.67572784 83.82708740]
[115.07808685 93.91538239]
[130.00920105 95.35123444]
[144.96842957 96.45642853]
[159.94845581 97.23042297]
[174.92846680 98.00440979]
[189.90849304 98.77840424]
[204.88850403 99.55239868]
[216.56895447 89.24681854]
[231.74980164 90.24515533]
[241.50260925 101.44418335]
[256.48263550 102.21817780]
[271.46264648 102.99217224]
[286.44265747 103.76616669]
[301.42266846 104.54015350]
[315.60369873 97.52524567]
[327.91479492 105.90895844]
[342.89480591 106.68295288]
[357.87481689 107.45693970]
[367.95785522 99.41519165]
[380.41787720 100.36734009]
[388.61773682 109.25924683]
[403.58468628 110.25409698]
[418.55166626 111.24893951]
[433.51864624 112.24378204]
[448.48562622 113.23862457]
[454.50595093 104.43393707]
[463.56829834 98.96357727]
[474.00341797 97.75688934]
[483.92138672 100.96497345]
[491.55386353 107.94540405]
[495.56930542 117.38962555]
[510.47763062 119.04553223]
[525.38592529 120.70144653]
[540.29425049 122.35735321]
[555.20257568 124.01326752]
[570.11090088 125.66917419]
[585.01922607 127.32508850]
[599.92755127 128.98100281]
[614.83587646 130.63690186]
[622.49444580 121.54629517]
[633.47766113 117.32395172]
[645.01605225 118.91062164]
[654.25958252 125.79763031]
[658.98156738 136.18168640]
[673.83453369 138.27658081]
[688.68756104 140.37149048]
[703.54052734 142.46638489]
[718.39349365 144.56127930]
[733.39080811 137.92709351]
[746.47351074 147.81524658]
[744.18322754 164.05368042]
[728.87597656 169.93766785]
[716.29864502 159.41427612]
[701.44561768 157.31938171]
[686.59265137 155.22447205]
[671.73962402 153.12957764]
[656.88665771 151.03468323]
[642.94897461 162.90470886]
[624.44390869 160.77949524]
[613.17993164 145.54522705]
[598.27160645 143.88931274]
[583.36334229 142.23339844]
[568.45501709 140.57749939]
[553.54669189 138.92158508]
[538.63836670 137.26567078]
[523.73004150 135.60977173]
[508.82171631 133.95385742]
[493.91339111 132.29794312]
[479.63372803 145.55143738]
[459.90655518 144.00384521]
[447.49078369 128.20559692]
[432.52380371 127.21075439]
[417.55682373 126.21591187]
[402.58984375 125.22106934]
[387.62289429 124.22621918]
[372.31594849 132.81036377]
[357.10083008 122.43695831]
[342.12081909 121.66297150]
[327.14077759 120.88897705]
[314.03121948 127.95925140]
[300.64868164 119.52017212]
[285.66867065 118.74618530]
[270.68865967 117.97219086]
[255.70863342 117.19819641]
[240.72860718 116.42420197]
[229.87355042 126.55846405]
[214.67065430 125.98691559]
[204.11451721 114.53241730]
[189.13449097 113.75842285]
[174.15447998 112.98442841]
[159.17446899 112.21044159]
[144.19444275 111.43644714]
[141.34594727 113.51208496]
[137.35104370 114.31199646]
[132.81990051 113.31256866]
[128.57334900 110.28235626]
[113.64223480 108.84650421]
[104.22718048 115.70038605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 113]
[2 112]
[3 111]
[4 110]
[5 109]
[7 105]
[8 104]
[9 103]
[10 102]
[12 95]
[13 94]
[14 93]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[21 82]
[22 81]
[23 80]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[32 73]
[34 72]
[35 71]
[37 69]
[38 68]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[115 211]
[116 210]
[117 206]
[118 205]
[119 204]
[120 203]
[121 202]
[124 199]
[125 198]
[126 197]
[127 196]
[128 195]
[130 193]
[131 192]
[132 191]
[135 189]
[136 188]
[137 187]
[138 186]
[139 185]
[145 182]
[146 181]
[147 180]
[148 179]
[149 178]
[150 177]
[151 176]
[152 175]
[153 174]
[158 171]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
