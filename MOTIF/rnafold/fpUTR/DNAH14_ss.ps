%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCGCAGGCGUGGCUCUUGGUCAGGCGGUUACGGCCAGGAGGCGUCGGAGCCUGGCGUGGUAGGGCUGUGCUGCGCGGUCCUUCCCAUUCACCCUAGUCUGGCGCUCGCCGGCGUGGGCGGGCCGGACCUUCGCCGCUUCCAGGAAGGGCCACAACGGCCGUCGGACCACGGCGCGGCGGCCAGUUCCUUUAUAGUUUUGUUCAGAAAAACAU\
) } def
/len { sequence length } bind def

/coor [
[411.39166260 885.73809814]
[422.33206177 873.33819580]
[417.40728760 859.16967773]
[412.48254395 845.00115967]
[400.99554443 835.51965332]
[403.77313232 819.94421387]
[398.84835815 805.77569580]
[387.36138916 796.29418945]
[390.13894653 780.71868896]
[385.21420288 766.55017090]
[380.28942871 752.38171387]
[375.26177979 738.24938965]
[370.13146973 724.15399170]
[358.50781250 714.84057617]
[361.05853271 699.22631836]
[355.92825317 685.13092041]
[344.30456543 675.81750488]
[346.85531616 660.20330811]
[341.72500610 646.10791016]
[336.49234009 632.05017090]
[331.15759277 618.03088379]
[325.82281494 604.01165771]
[320.48806763 589.99237061]
[315.15332031 575.97308350]
[303.39541626 566.82971191]
[305.71881104 551.17999268]
[300.38403320 537.16070557]
[295.04928589 523.14141846]
[289.71450806 509.12216187]
[284.37976074 495.10287476]
[279.04498291 481.08358765]
[273.71023560 467.06430054]
[255.39756775 460.40972900]
[247.77079773 442.14865112]
[256.16577148 423.89096069]
[250.22456360 410.11770630]
[244.28337097 396.34448242]
[238.34217834 382.57122803]
[219.00016785 371.17190552]
[221.93263245 348.16186523]
[215.00639343 334.85668945]
[208.08016968 321.55154419]
[201.15394592 308.24636841]
[194.22770691 294.94122314]
[187.30148315 281.63604736]
[180.37525940 268.33090210]
[167.63539124 260.61434937]
[168.12625122 244.80076599]
[161.20001221 231.49559021]
[154.27378845 218.19042969]
[147.34754944 204.88526917]
[140.42132568 191.58010864]
[125.13355255 182.95996094]
[126.09461212 164.56915283]
[118.97560883 151.36613464]
[111.85659790 138.16310120]
[104.73759460 124.96008301]
[97.61859131 111.75706482]
[87.56542969 100.62450409]
[75.15431976 92.20046997]
[62.74320602 83.77644348]
[50.33209229 75.35240936]
[31.93883896 74.43933868]
[24.91709900 58.35461807]
[12.38478184 50.11198425]
[-0.14753506 41.86935043]
[-12.67985249 33.62671661]
[-25.21216965 25.38408089]
[-37.74448776 17.14144516]
[-50.27680206 8.89881134]
[-62.80912018 0.65617639]
[-75.34143829 -7.58645821]
[-91.89736176 -11.23856068]
[-92.97111511 -28.15847206]
[-77.00968933 -33.87416458]
[-67.09880066 -20.11877632]
[-54.56648636 -11.87614059]
[-42.03416824 -3.63350606]
[-29.50185204 4.60912848]
[-16.96953392 12.85176277]
[-4.43721771 21.09439850]
[8.09509945 29.33703232]
[20.62741661 37.57966614]
[33.15973282 45.82230377]
[45.06336594 43.68384171]
[55.57089615 50.44515228]
[58.75612640 62.94129562]
[71.16723633 71.36532593]
[83.57834625 79.78936005]
[95.98945618 88.21339417]
[109.14035797 80.99855804]
[108.70409393 66.00490570]
[100.56868744 52.43560791]
[107.93254852 39.48868561]
[107.49627686 24.49502945]
[107.06000519 9.50137520]
[95.84626007 -1.31017470]
[95.61740875 -16.52208710]
[105.99367523 -27.14605331]
[105.55740356 -42.13970947]
[105.12113190 -57.13336182]
[101.74450684 -65.61663055]
[104.78915405 -72.34790802]
[104.57099152 -87.34632111]
[104.35283661 -102.34473419]
[95.48754120 -116.14105988]
[103.24233246 -130.59080505]
[119.63974762 -130.82931519]
[127.81152344 -116.61122131]
[119.35124969 -102.56288910]
[119.56940460 -87.56447601]
[119.78756714 -72.56606293]
[120.11478424 -57.56963348]
[120.55105591 -42.57597733]
[120.98732758 -27.58232498]
[131.96377563 -17.57965851]
[132.61979675 -2.38017559]
[122.05365753 9.06510448]
[122.48992920 24.05875778]
[122.92620087 39.05241394]
[131.03039551 51.54926300]
[123.69774628 65.56863403]
[124.13401794 80.56228638]
[110.82160950 104.63806152]
[117.94061279 117.84107971]
[125.05962372 131.04409790]
[132.17863464 144.24711609]
[139.29763794 157.45014954]
[151.40533447 161.88893127]
[157.06370544 173.02923584]
[153.72648621 184.65388489]
[160.65272522 197.95904541]
[167.57894897 211.26420593]
[174.50517273 224.56936646]
[181.43141174 237.87452698]
[194.66668701 246.54273987]
[193.68041992 261.40466309]
[200.60664368 274.70980835]
[207.53288269 288.01498413]
[214.45910645 301.32015991]
[221.38533020 314.62530518]
[228.31156921 327.93048096]
[235.23779297 341.23562622]
[242.71594238 341.83303833]
[249.46269226 344.95465088]
[254.66284180 350.17141724]
[257.70614624 356.80441284]
[258.25875854 364.01306152]
[256.29922485 370.90148926]
[252.11541748 376.63003540]
[258.05661011 390.40328979]
[263.99780273 404.17651367]
[269.93899536 417.94976807]
[280.51660156 419.29086304]
[289.51559448 424.85739136]
[295.34896851 433.58883667]
[297.02075195 443.87390137]
[294.29562378 453.84762573]
[287.72952271 461.72955322]
[293.06427002 475.74884033]
[298.39904785 489.76812744]
[303.73379517 503.78738403]
[309.06857300 517.80670166]
[314.40332031 531.82598877]
[319.73809814 545.84527588]
[331.87756348 555.99139404]
[329.17257690 570.63830566]
[334.50735474 584.65759277]
[339.84210205 598.67687988]
[345.17687988 612.69616699]
[350.51162720 626.71545410]
[356.48629761 633.61987305]
[355.82040405 640.97760010]
[360.95071411 655.07299805]
[372.94134521 665.39459229]
[370.02362061 680.00061035]
[375.15393066 694.09600830]
[387.14456177 704.41766357]
[384.22686768 719.02368164]
[389.35714722 733.11907959]
[395.23077393 740.10961914]
[394.45794678 747.45690918]
[399.38269043 761.62542725]
[404.30746460 775.79394531]
[416.14669800 786.28887939]
[413.01687622 800.85089111]
[417.94161987 815.01940918]
[429.78088379 825.51434326]
[426.65106201 840.07641602]
[431.57580566 854.24493408]
[436.50054932 868.41339111]
[450.35516357 870.32537842]
[461.97933960 877.98297119]
[469.13650513 889.84448242]
[470.47915649 903.56640625]
[465.80203247 916.46594238]
[456.07122803 926.04577637]
[460.78939819 940.28442383]
[465.50756836 954.52307129]
[470.22573853 968.76171875]
[474.94390869 983.00036621]
[489.54248047 988.60528564]
[497.07760620 1002.30773926]
[493.99139404 1017.63775635]
[481.74105835 1027.35693359]
[466.11087036 1026.87634277]
[454.48089600 1016.42272949]
[452.34246826 1000.93206787]
[460.70526123 987.71850586]
[455.98709106 973.47985840]
[451.26892090 959.24121094]
[446.55075073 945.00262451]
[441.83258057 930.76397705]
[425.93069458 927.88323975]
[413.58105469 917.31451416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[6 187]
[7 186]
[9 184]
[10 183]
[11 182]
[12 180]
[13 179]
[15 177]
[16 176]
[18 174]
[19 173]
[20 171]
[21 170]
[22 169]
[23 168]
[24 167]
[26 165]
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[35 153]
[36 152]
[37 151]
[38 150]
[40 143]
[41 142]
[42 141]
[43 140]
[44 139]
[45 138]
[46 137]
[48 135]
[49 134]
[50 133]
[51 132]
[52 131]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 90]
[60 89]
[61 88]
[62 87]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[91 123]
[92 122]
[94 120]
[95 119]
[96 118]
[99 115]
[100 114]
[101 113]
[103 112]
[104 111]
[105 110]
[197 213]
[198 212]
[199 211]
[200 210]
[201 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
