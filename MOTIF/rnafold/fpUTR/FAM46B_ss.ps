%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCGGUUAGUCGUCGCCGUCUGAGGUGUUCCCUGGCUUUGUCUCGCCGUCGUUGCCGCCCCGUCCCUGCCUUCGUGCCCCCCGCCUUGGCCCCUGCCCAGCCGCUCUCCCUGUCCUCCUCCCCUUAACCACCCCCACGGUUUCUGCCGUCGGGGCCCGGGGGCCGGGCGG\
) } def
/len { sequence length } bind def

/coor [
[-135.93559265 127.22052002]
[-149.70083618 133.18023682]
[-163.46607971 139.13995361]
[-173.05610657 151.72334290]
[-187.80984497 149.67968750]
[-201.57508850 155.63940430]
[-215.34031677 161.59913635]
[-229.10556030 167.55885315]
[-231.25650024 179.29444885]
[-238.74201965 188.43045044]
[-249.60232544 192.75831604]
[-261.08148193 191.30488586]
[-270.32644653 184.54850769]
[-284.29901123 190.00447083]
[-294.33966064 202.23133850]
[-309.00946045 199.65330505]
[-322.98202515 205.10926819]
[-333.02264404 217.33613586]
[-347.69244385 214.75810242]
[-361.66500854 220.21406555]
[-365.71450806 236.61897278]
[-378.60775757 247.28211975]
[-395.14965820 248.16346741]
[-408.82608032 239.11383057]
[-422.69729614 244.82261658]
[-436.56848145 250.53140259]
[-450.43966675 256.24017334]
[-464.31085205 261.94894409]
[-467.83645630 277.06021118]
[-479.59292603 287.18765259]
[-495.05960083 288.43713379]
[-508.28927612 280.32815552]
[-514.19482422 265.97879028]
[-510.50549316 250.90669250]
[-498.63989258 240.90736389]
[-483.16055298 239.82574463]
[-470.01962280 248.07777405]
[-456.14843750 242.36898804]
[-442.27725220 236.66020203]
[-428.40606689 230.95143127]
[-414.53488159 225.24264526]
[-412.59936523 212.01301575]
[-404.30590820 201.38769531]
[-391.74182129 196.21513367]
[-378.15646362 197.94895935]
[-367.12097168 206.24150085]
[-353.14840698 200.78553772]
[-344.10717773 188.94891357]
[-328.43795776 191.13670349]
[-314.46539307 185.68074036]
[-305.42419434 173.84411621]
[-289.75497437 176.03190613]
[-275.78240967 170.57594299]
[-269.48712158 153.41383362]
[-252.36743164 146.14546204]
[-235.06527710 153.79360962]
[-221.30003357 147.83389282]
[-207.53480530 141.87417603]
[-193.76956177 135.91445923]
[-185.16410828 123.75733948]
[-169.42579651 125.37471771]
[-155.66055298 119.41500092]
[-141.89530945 113.45527649]
[-156.78559875 111.64436340]
[-170.52340698 105.62167358]
[-181.94453430 95.89759064]
[-190.08113098 83.29617310]
[-194.24365234 68.88529205]
[-194.07937622 53.88619614]
[-189.60221863 39.56994629]
[-181.19157410 27.14975548]
[-169.56019592 17.67815590]
[-155.69378662 11.95780277]
[-140.76741028 10.47345734]
[-126.04598236 13.35091019]
[-112.77706146 20.34631348]
[-102.08509064 30.86685562]
[-94.87615204 44.02098465]
[-91.76114655 58.69398117]
[-93.00405884 73.64239502]
[-98.49955750 87.59945679]
[-107.78193665 99.38238525]
[-120.06806183 107.99441528]
[-105.11811829 106.77001953]
[-90.16817474 105.54561615]
[-75.21823120 104.32121277]
[-60.26828384 103.09680939]
[-45.31834030 101.87240601]
[-38.88546753 98.17929840]
[-30.08622551 100.76403046]
[-15.11651230 99.81129456]
[-0.14679924 98.85856628]
[14.82291317 97.90583038]
[29.79262733 96.95310211]
[44.76234055 96.00036621]
[59.73205185 95.04763794]
[74.70176697 94.09490204]
[81.18820190 76.98432159]
[99.03024292 66.54132843]
[121.84599304 69.86568451]
[132.01048279 58.83468628]
[142.17498779 47.80368042]
[138.18321228 32.90169144]
[142.90351868 18.21420097]
[154.82965088 8.42793751]
[170.15602112 6.66566086]
[183.99206543 13.48970699]
[191.92272949 26.72254753]
[191.41737366 42.14163208]
[182.63726807 54.82678604]
[168.38407898 60.73022461]
[153.20599365 57.96817780]
[143.04148865 68.99918365]
[132.87699890 80.03018188]
[133.96273804 87.45117950]
[148.17146301 82.64368439]
[162.38018799 77.83618927]
[176.58892822 73.02868652]
[190.79765320 68.22119141]
[201.91081238 58.14657974]
[216.62379456 55.22631454]
[230.74220276 60.29291534]
[240.24113464 71.90197754]
[242.41258240 86.74397278]
[236.63754272 100.58769989]
[224.56234741 109.48656464]
[209.62944031 110.90364075]
[196.09597778 104.43502045]
[181.10554504 103.89955902]
[166.11509705 103.36409760]
[151.12466431 102.82862854]
[136.13421631 102.29316711]
[137.21995544 109.71416473]
[150.11859131 117.37087250]
[163.01722717 125.02758789]
[175.91586304 132.68429565]
[191.73223877 133.07519531]
[198.72705078 146.22517395]
[211.62568665 153.88188171]
[224.52432251 161.53858948]
[237.42294312 169.19531250]
[250.32157898 176.85202026]
[266.71716309 176.50939941]
[274.97906494 190.67530823]
[266.60815430 204.77708435]
[250.21571350 204.30801392]
[242.66487122 189.75065613]
[229.76623535 182.09393311]
[216.86759949 174.43722534]
[203.96896362 166.78051758]
[191.07034302 159.12379456]
[176.17655945 159.28057861]
[168.25915527 145.58293152]
[155.36051941 137.92622375]
[142.46188354 130.26951599]
[129.56324768 122.61280060]
[106.88268280 132.75746155]
[85.65412140 126.03461456]
[75.65449524 109.06462097]
[60.68478394 110.01734924]
[45.71507263 110.97008514]
[30.74535751 111.92281342]
[15.77564526 112.87554169]
[0.80593252 113.82827759]
[-14.16378021 114.78100586]
[-29.13349342 115.73374176]
[-44.09393692 116.82234955]
[-59.04388428 118.04675293]
[-73.99382782 119.27115631]
[-88.94377136 120.49555969]
[-103.89371490 121.71996307]
[-118.84365845 122.94436646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[5 59]
[6 58]
[7 57]
[8 56]
[13 53]
[14 52]
[16 50]
[17 49]
[19 47]
[20 46]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[83 172]
[84 171]
[85 170]
[86 169]
[87 168]
[88 167]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
[97 159]
[100 114]
[101 113]
[102 112]
[133 156]
[134 155]
[135 154]
[136 153]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
