%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCGGGGCGCGCUGCGCGGGGGCUGCCGGCGGGCAGUUGGGAGCAGGCGACGCCGACGCGAGUCUGGCGGCUGCUGCUUGCGACUGCGGAGGCCGGGCGAGGCCGGUGAGGACGCGGCGGGCGAGCGAGAGGCCGAGGUGUUUUCUUCACUCAUGGUGAAGA\
) } def
/len { sequence length } bind def

/coor [
[82.32943726 109.70691681]
[85.05329895 104.88643646]
[88.80551910 101.45916748]
[93.15785217 99.61136627]
[84.34107208 87.47611237]
[70.85687256 86.90810394]
[60.32445908 78.78451538]
[56.46497726 66.25923920]
[60.47756195 53.98702240]
[51.89342117 41.68610764]
[37.65085220 34.79699326]
[36.71240234 19.93198204]
[28.12826157 7.63106585]
[19.54412079 -4.66985035]
[10.95998096 -16.97076607]
[2.37584090 -29.27168274]
[-6.20829916 -41.57259750]
[-14.79243946 -53.87351608]
[-23.83866119 -65.83870697]
[-33.33384705 -77.45083618]
[-50.68941879 -83.54126740]
[-52.88796616 -100.93251801]
[-62.60251236 -112.36175537]
[-77.43544006 -117.86582947]
[-79.78265381 -132.57432556]
[-89.49720001 -144.00357056]
[-99.32010651 -155.33981323]
[-109.25049591 -166.58203125]
[-119.18087769 -177.82424927]
[-129.21783447 -188.97142029]
[-139.36045837 -200.02253723]
[-149.50308228 -211.07365417]
[-168.41259766 -211.13240051]
[-181.09226990 -224.72900391]
[-179.87489319 -242.96170044]
[-190.43087769 -253.61866760]
[-200.98687744 -264.27563477]
[-211.54287720 -274.93258667]
[-222.09886169 -285.58956909]
[-232.65486145 -296.24655151]
[-243.21086121 -306.90350342]
[-258.41955566 -311.26306152]
[-261.87908936 -325.75030518]
[-272.43508911 -336.40728760]
[-282.99108887 -347.06427002]
[-293.54708862 -357.72122192]
[-304.10305786 -368.37820435]
[-314.65905762 -379.03515625]
[-329.47766113 -375.24618530]
[-344.10659790 -379.35610962]
[-354.64413452 -390.16476440]
[-358.33200073 -404.69937134]
[-354.27685547 -419.03192139]
[-364.83282471 -429.68887329]
[-375.38882446 -440.34585571]
[-385.94482422 -451.00280762]
[-396.60180664 -461.55880737]
[-407.35876465 -472.01287842]
[-418.11575317 -482.46691895]
[-434.13900757 -485.95794678]
[-438.86889648 -501.66018677]
[-427.43972778 -513.42053223]
[-411.60882568 -509.14096069]
[-407.66168213 -493.22390747]
[-396.90472412 -482.76983643]
[-386.14773560 -472.31579590]
[-379.12747192 -469.89822388]
[-375.28787231 -461.55880737]
[-364.73187256 -450.90182495]
[-354.17587280 -440.24487305]
[-343.61987305 -429.58789062]
[-329.24938965 -433.50643921]
[-314.75051880 -429.68035889]
[-304.04269409 -419.04040527]
[-300.07223511 -404.37301636]
[-304.00210571 -389.59115601]
[-293.44610596 -378.93417358]
[-282.89010620 -368.27722168]
[-272.33410645 -357.62023926]
[-261.77810669 -346.96328735]
[-251.22212219 -336.30630493]
[-236.76844788 -332.70901489]
[-232.55389404 -317.45950317]
[-221.99789429 -306.80252075]
[-211.44189453 -296.14556885]
[-200.88591003 -285.48858643]
[-190.32991028 -274.83163452]
[-179.77391052 -264.17465210]
[-169.21792603 -253.51768494]
[-158.01525879 -255.94163513]
[-146.92500305 -252.60243225]
[-138.75523376 -244.22406006]
[-135.63313293 -232.82138062]
[-138.45196533 -221.21627808]
[-128.30934143 -210.16516113]
[-118.16671753 -199.11404419]
[-111.29591370 -196.29965210]
[-107.93865967 -187.75463867]
[-98.00827789 -176.51242065]
[-88.07788849 -165.27020264]
[-81.26191711 -162.32550049]
[-78.06795502 -153.71812439]
[-68.35340881 -142.28887939]
[-54.21533203 -137.60229492]
[-51.17327118 -122.07630157]
[-41.45872116 -110.64706421]
[-29.40376282 -109.34610748]
[-21.21840477 -99.86402130]
[-21.72172356 -86.94602203]
[-12.22653675 -75.33389282]
[-9.40756512 -74.93977356]
[-6.57910061 -73.37963867]
[-4.19568586 -70.64567566]
[-2.70558786 -66.89807892]
[-2.49152279 -62.45765686]
[6.09261703 -50.15673828]
[14.67675686 -37.85582352]
[23.26089668 -25.55490685]
[31.84503746 -13.25399017]
[40.42917633 -0.95307386]
[49.01331711 11.34784222]
[62.64188766 17.35711098]
[64.19433594 33.10196686]
[72.77847290 45.40288162]
[89.42843628 47.62324905]
[99.53757477 61.45789337]
[96.47632599 78.65933228]
[105.29310608 90.79458618]
[116.44027710 100.83154297]
[129.43066406 108.33154297]
[142.42103577 115.83154297]
[155.41142273 123.33154297]
[171.23136902 123.53092957]
[178.38485718 136.59526062]
[191.37524414 144.09526062]
[207.76545715 143.55418396]
[216.19824219 157.61903381]
[207.99867249 171.82112122]
[191.60176086 171.55053711]
[183.87524414 157.08564758]
[170.88485718 149.58564758]
[155.99406433 149.92271423]
[147.91142273 136.32192993]
[134.92103577 128.82192993]
[121.93065643 121.32192230]
[108.94027710 113.82192230]
[97.60403442 123.64483643]
[103.17897034 137.57035828]
[108.75390625 151.49588013]
[114.32884216 165.42138672]
[119.90377808 179.34690857]
[125.47872162 193.27243042]
[131.05364990 207.19795227]
[142.55369568 219.65528870]
[133.76670837 234.15444946]
[117.40171814 229.72462463]
[117.12813568 212.77288818]
[111.55319977 198.84736633]
[105.97826385 184.92184448]
[100.40332794 170.99633789]
[94.82839203 157.07081604]
[89.25344849 143.14529419]
[83.67851257 129.21977234]
[81.39064789 122.28491974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 128]
[5 127]
[9 124]
[10 123]
[12 121]
[13 120]
[14 119]
[15 118]
[16 117]
[17 116]
[18 115]
[19 110]
[20 109]
[22 106]
[23 105]
[25 103]
[26 102]
[27 100]
[28 99]
[29 98]
[30 96]
[31 95]
[32 94]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[40 84]
[41 83]
[43 81]
[44 80]
[45 79]
[46 78]
[47 77]
[48 76]
[53 71]
[54 70]
[55 69]
[56 68]
[57 66]
[58 65]
[59 64]
[129 146]
[130 145]
[131 144]
[132 143]
[134 141]
[135 140]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
