%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL33)
} def

/sequence { (\
AGUCUACAGACUCCUCCGAACACAGAGCUGCAGCUCUUCAGGGAAGAAAUCAAAACAAGAUCACAAGAAUACUGAAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.615199061 ubox
1 15 0.003725527 ubox
1 35 0.058150817 ubox
1 37 0.010009671 ubox
1 73 0.041959546 ubox
2 11 0.896872110 ubox
2 14 0.004358037 ubox
2 21 0.013311751 ubox
2 23 0.008173923 ubox
2 34 0.074471326 ubox
2 36 0.015836618 ubox
2 50 0.004193541 ubox
2 56 0.067077067 ubox
2 61 0.135476188 ubox
2 64 0.019400167 ubox
2 70 0.015151195 ubox
2 72 0.043753541 ubox
3 10 0.898290572 ubox
3 19 0.009612160 ubox
3 20 0.011781941 ubox
3 22 0.007839779 ubox
3 33 0.025750666 ubox
3 44 0.003625746 ubox
3 47 0.062267287 ubox
3 49 0.003481529 ubox
3 55 0.065047973 ubox
3 60 0.142603336 ubox
3 63 0.017249664 ubox
3 68 0.062851799 ubox
3 69 0.011524402 ubox
3 71 0.037450080 ubox
3 75 0.024607766 ubox
4 9 0.895367860 ubox
4 18 0.011526570 ubox
4 33 0.082543829 ubox
4 43 0.003824917 ubox
4 46 0.066645157 ubox
4 59 0.144054684 ubox
4 67 0.068983954 ubox
4 74 0.025930389 ubox
5 32 0.081668252 ubox
5 45 0.066150661 ubox
5 58 0.138733978 ubox
5 66 0.066649825 ubox
5 71 0.004005737 ubox
5 74 0.003974053 ubox
6 70 0.004344147 ubox
6 73 0.004367386 ubox
7 30 0.096251304 ubox
7 74 0.142754296 ubox
8 15 0.019947725 ubox
8 29 0.096434166 ubox
8 73 0.143231131 ubox
9 14 0.023217772 ubox
9 16 0.013071716 ubox
9 28 0.096444793 ubox
9 51 0.200795525 ubox
9 62 0.042846045 ubox
9 72 0.142335470 ubox
10 15 0.011852349 ubox
10 50 0.197524137 ubox
10 61 0.039922666 ubox
11 27 0.095057210 ubox
11 43 0.017392509 ubox
11 46 0.163888845 ubox
11 59 0.026727924 ubox
11 67 0.011889391 ubox
12 19 0.030860278 ubox
12 26 0.095003049 ubox
12 42 0.004748748 ubox
12 43 0.107601813 ubox
12 44 0.370902625 ubox
12 45 0.146813024 ubox
12 47 0.526090701 ubox
12 58 0.019069568 ubox
12 60 0.016135684 ubox
12 66 0.009813347 ubox
12 68 0.027087356 ubox
12 75 0.018800382 ubox
13 18 0.035853396 ubox
13 25 0.091139361 ubox
13 41 0.004571909 ubox
13 42 0.176170289 ubox
13 43 0.433742755 ubox
13 46 0.602338093 ubox
13 59 0.017173724 ubox
13 67 0.029029227 ubox
13 74 0.021853789 ubox
14 25 0.026709971 ubox
14 27 0.020332999 ubox
14 41 0.176850416 ubox
14 42 0.432296169 ubox
14 43 0.310566296 ubox
14 46 0.282717769 ubox
14 59 0.010431286 ubox
14 67 0.015312289 ubox
15 24 0.037021895 ubox
15 26 0.020596768 ubox
15 40 0.164700731 ubox
15 41 0.315395531 ubox
15 42 0.298841888 ubox
15 43 0.202299504 ubox
15 44 0.710592668 ubox
15 45 0.202380558 ubox
15 47 0.012656453 ubox
15 58 0.007934088 ubox
15 66 0.012002395 ubox
15 68 0.004217993 ubox
15 75 0.004726886 ubox
16 25 0.020689889 ubox
16 41 0.411776729 ubox
16 42 0.266727571 ubox
16 43 0.751452668 ubox
16 46 0.012826193 ubox
16 67 0.004329837 ubox
16 74 0.004766198 ubox
17 41 0.270894954 ubox
17 42 0.749972542 ubox
17 74 0.003854074 ubox
18 38 0.045971966 ubox
18 39 0.627743493 ubox
18 51 0.003640014 ubox
18 62 0.004634965 ubox
19 37 0.029405243 ubox
19 38 0.627398561 ubox
19 50 0.003447710 ubox
19 61 0.004110808 ubox
20 37 0.308076751 ubox
21 74 0.003399449 ubox
23 74 0.006907628 ubox
24 35 0.006710309 ubox
24 37 0.912777054 ubox
24 38 0.022685218 ubox
24 73 0.006714849 ubox
25 34 0.006788852 ubox
25 36 0.994887096 ubox
25 37 0.003430504 ubox
25 72 0.006386445 ubox
26 35 0.994987771 ubox
27 34 0.995135306 ubox
28 33 0.991907516 ubox
30 51 0.003253269 ubox
31 74 0.015375629 ubox
32 73 0.015406932 ubox
33 72 0.015340176 ubox
34 43 0.005908207 ubox
35 42 0.005922243 ubox
35 44 0.004621138 ubox
35 47 0.056660776 ubox
35 60 0.004940129 ubox
35 68 0.008324619 ubox
36 41 0.005898670 ubox
36 43 0.005301621 ubox
36 46 0.062545488 ubox
36 59 0.005615705 ubox
36 67 0.008527198 ubox
37 42 0.004915620 ubox
37 45 0.062695897 ubox
37 48 0.015979573 ubox
37 58 0.005587747 ubox
37 66 0.008455861 ubox
37 69 0.003304988 ubox
37 76 0.135243006 ubox
37 77 0.008932851 ubox
38 44 0.062928515 ubox
38 47 0.025329292 ubox
38 57 0.005154562 ubox
38 60 0.003278959 ubox
38 65 0.007878740 ubox
38 68 0.005201925 ubox
38 75 0.213112785 ubox
38 76 0.010049482 ubox
39 43 0.062444263 ubox
39 46 0.026111971 ubox
39 59 0.003506236 ubox
39 67 0.005348110 ubox
39 74 0.219861951 ubox
40 73 0.219754425 ubox
41 51 0.009123960 ubox
41 62 0.007003158 ubox
41 72 0.219424061 ubox
41 73 0.006772797 ubox
42 50 0.008961932 ubox
42 51 0.015343792 ubox
42 61 0.006421541 ubox
42 62 0.005295907 ubox
42 72 0.011894062 ubox
43 50 0.010645315 ubox
43 51 0.053392712 ubox
43 61 0.003612545 ubox
43 62 0.019589785 ubox
44 50 0.051609136 ubox
44 61 0.018233082 ubox
45 73 0.050336870 ubox
46 62 0.138690309 ubox
46 72 0.051704127 ubox
47 61 0.123205076 ubox
49 61 0.408928459 ubox
49 70 0.019598897 ubox
50 60 0.454847990 ubox
50 68 0.089594927 ubox
50 69 0.016508991 ubox
50 75 0.159400208 ubox
51 59 0.461316825 ubox
51 67 0.095197162 ubox
51 74 0.170349520 ubox
52 73 0.158797296 ubox
56 74 0.172983389 ubox
57 73 0.157535410 ubox
58 73 0.186654200 ubox
59 72 0.203249939 ubox
60 70 0.158645741 ubox
61 68 0.313761573 ubox
61 69 0.124420222 ubox
61 75 0.250039917 ubox
62 67 0.345295121 ubox
62 74 0.271860534 ubox
63 73 0.245242205 ubox
64 74 0.161394358 ubox
65 73 0.141424180 ubox
66 73 0.204323233 ubox
67 72 0.224748834 ubox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
12 47 0.9500000 lbox
13 46 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
showpage
end
%%EOF
