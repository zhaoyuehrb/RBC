%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUGUUGACUUCCGGGAGCGCGGUUGUAGUUGAUCUCCGGAGUUUCGCCAUGCGGAACUUGGGGGCUUUCGCGGCCCGCGUCGGUGCGGAGUAGCUGCUUUAGCCCCGACCAAACCGUCCUCUACAGCCUCCUGGCCCCGGCGCAGGCUGCCCGUACUGCCCGUGGC\
) } def
/len { sequence length } bind def

/coor [
[106.06635284 335.70718384]
[101.72444916 350.30401611]
[91.81591797 361.86865234]
[78.05747223 368.39743042]
[62.83285522 368.75924683]
[48.77981949 362.89135742]
[38.33313751 351.81045532]
[33.30275726 337.43634033]
[34.56023026 322.25942993]
[41.88768387 308.90921021]
[54.01559830 299.69869995]
[68.84273529 296.22366333]
[71.61509705 281.48208618]
[74.25032806 266.71536255]
[76.74819183 251.92480469]
[79.24605560 237.13424683]
[81.74392700 222.34368896]
[84.10420990 207.53054810]
[86.32671356 192.69612122]
[80.56057739 178.96290588]
[90.25720215 166.46147156]
[92.47970581 151.62702942]
[94.70220947 136.79260254]
[96.92471313 121.95816803]
[93.57624054 136.57965088]
[82.59071350 146.79327393]
[67.76442719 149.06950378]
[54.22093582 142.62171936]
[46.64049911 129.67811584]
[47.64270401 114.71163940]
[56.88121796 102.89427948]
[71.16346741 98.30980682]
[85.55419159 102.54267883]
[71.52894592 97.22360229]
[51.83208084 101.38627625]
[40.19911194 85.97026825]
[25.98584938 81.17618561]
[11.77258682 76.38211060]
[-2.44067454 71.58802795]
[-17.98991966 74.50890350]
[-27.57677460 63.10971832]
[-41.79003525 58.31563950]
[-56.00329971 53.52156067]
[-70.21656036 48.72748184]
[-84.42982483 43.93340302]
[-98.64308167 39.13932419]
[-112.85634613 34.34524536]
[-127.06961060 29.55116844]
[-141.28286743 24.75708961]
[-158.22369385 25.42403412]
[-163.55426025 9.32989216]
[-149.56472778 -0.24765591]
[-136.48878479 10.54382801]
[-122.27552795 15.33790588]
[-108.06226349 20.13198471]
[-93.84900665 24.92606354]
[-79.63574219 29.72014236]
[-65.42248535 34.51422119]
[-51.20922089 39.30830002]
[-36.99595642 44.10237885]
[-22.78269577 48.89645767]
[-8.25007820 45.63267517]
[2.35340405 57.37476730]
[16.56666565 62.16884613]
[30.77992821 66.96292114]
[44.99319077 71.75700378]
[53.74935532 66.39474487]
[64.23046112 66.76683807]
[72.94264221 72.99215698]
[76.84801483 83.19835663]
[90.87326050 88.51743317]
[105.80851746 87.12524414]
[118.60903168 79.30560303]
[131.40954590 71.48596191]
[144.21006775 63.66632462]
[157.01058960 55.84668350]
[169.81109619 48.02704239]
[177.55419922 34.23012161]
[192.44876099 34.19804001]
[205.24928284 26.37840080]
[218.04980469 18.55876160]
[230.85031128 10.73912144]
[243.65083313 2.91948223]
[256.45135498 -4.90015745]
[269.25186157 -12.71979713]
[276.99496460 -26.51671791]
[291.88952637 -26.54880142]
[304.69006348 -34.36843872]
[317.34301758 -42.42466736]
[329.84402466 -50.71469879]
[342.34503174 -59.00473022]
[354.84603882 -67.29476166]
[358.16009521 -73.09112549]
[363.16284180 -75.89317322]
[367.96939087 -75.65048981]
[380.76989746 -83.47013092]
[393.57043457 -91.28977203]
[406.37094116 -99.10941315]
[408.90145874 -103.76723480]
[412.60726929 -106.67251587]
[416.61273193 -107.67155457]
[420.11013794 -106.98508453]
[433.32662964 -114.07907867]
[446.54309082 -121.17308044]
[447.70260620 -133.05329895]
[454.40036011 -142.78834534]
[464.86624146 -148.01051331]
[476.43209839 -147.51838684]
[486.21145630 -141.55114746]
[499.68246460 -148.14898682]
[513.15350342 -154.74682617]
[518.03643799 -169.77787781]
[532.15545654 -176.87915039]
[547.13403320 -171.83758545]
[554.08563232 -157.64425659]
[548.88598633 -142.71980286]
[534.61999512 -135.91865540]
[519.75134277 -141.27578735]
[506.28030396 -134.67796326]
[492.80929565 -128.08012390]
[487.96539307 -110.45681763]
[471.51562500 -101.78588104]
[453.63708496 -107.95660400]
[440.42062378 -100.86260986]
[427.20413208 -93.76860809]
[414.19058228 -86.30889130]
[401.39007568 -78.48925781]
[388.58953857 -70.66961670]
[375.78903198 -62.84997559]
[363.13607788 -54.79374695]
[350.63507080 -46.50371552]
[338.13406372 -38.21368408]
[325.63302612 -29.92365265]
[323.81933594 -25.46580124]
[319.16384888 -22.11838341]
[312.50970459 -21.56792259]
[299.70916748 -13.74828339]
[292.88165283 -0.51067537]
[277.07150269 0.08071995]
[264.27099609 7.90035963]
[251.47047424 15.71999931]
[238.66995239 23.53963852]
[225.86944580 31.35927773]
[213.06892395 39.17891693]
[200.26840210 46.99855804]
[193.44088745 60.23616409]
[177.63073730 60.82756042]
[164.83023071 68.64720154]
[152.02970886 76.46684265]
[139.22918701 84.28648376]
[126.42867279 92.10611725]
[113.62815857 99.92575836]
[111.75914764 124.18067169]
[109.53664398 139.01510620]
[107.31414032 153.84953308]
[105.09163666 168.68397522]
[110.69880676 183.47824097]
[101.16114807 194.91862488]
[98.93864441 209.75305176]
[100.76608276 218.74507141]
[96.53448486 224.84155273]
[94.03662109 239.63211060]
[91.53875732 254.42266846]
[89.04088593 269.21322632]
[90.70085907 278.23767090]
[86.35667419 284.25442505]
[83.58431244 298.99600220]
[96.13604736 307.62002563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 167]
[13 166]
[14 164]
[15 163]
[16 162]
[17 161]
[18 159]
[19 158]
[21 156]
[22 155]
[23 154]
[24 153]
[33 71]
[34 70]
[36 66]
[37 65]
[38 64]
[39 63]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[77 147]
[79 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[87 137]
[88 136]
[89 133]
[90 132]
[91 131]
[92 130]
[95 129]
[96 128]
[97 127]
[98 126]
[102 125]
[103 124]
[104 123]
[109 120]
[110 119]
[111 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
