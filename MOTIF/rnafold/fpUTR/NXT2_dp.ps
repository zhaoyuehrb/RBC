%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NXT2)
} def

/sequence { (\
AGUCAGAGGUUAACGGAAAACGGAAGCUGGCUGGCUGAGAAGAAGCUUCCGUUAGUCCUACCUUGAAGAGAAAAGAGCCAGAUAAAGAGAAAGAUUAAAAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 96 0.050170228 ubox
2 14 0.007179656 ubox
2 78 0.042937738 ubox
2 83 0.293796540 ubox
2 95 0.058787069 ubox
3 13 0.006955049 ubox
3 66 0.767267723 ubox
3 69 0.248691727 ubox
3 71 0.047127019 ubox
3 76 0.020201232 ubox
3 77 0.037855189 ubox
3 82 0.301525001 ubox
3 88 0.015209946 ubox
3 90 0.012354649 ubox
3 94 0.059304714 ubox
4 8 0.003556592 ubox
4 65 0.818748582 ubox
4 68 0.264877614 ubox
4 70 0.049777033 ubox
4 75 0.021716240 ubox
4 81 0.302761581 ubox
4 87 0.016150183 ubox
4 89 0.013100120 ubox
4 93 0.059301530 ubox
5 11 0.004524325 ubox
5 63 0.005363379 ubox
5 64 0.693957884 ubox
6 10 0.003405861 ubox
6 62 0.005238172 ubox
6 63 0.424984528 ubox
6 64 0.595828034 ubox
7 59 0.014562828 ubox
7 63 0.821915722 ubox
7 64 0.019481272 ubox
8 28 0.003902053 ubox
8 58 0.014960689 ubox
8 62 0.931481242 ubox
8 63 0.019777910 ubox
8 79 0.356583451 ubox
8 96 0.005851743 ubox
9 27 0.004275646 ubox
9 57 0.014943991 ubox
9 61 0.931494647 ubox
9 62 0.020633460 ubox
9 78 0.356811628 ubox
9 83 0.005754907 ubox
9 95 0.006589363 ubox
10 26 0.004371523 ubox
10 55 0.011536788 ubox
10 60 0.854896633 ubox
10 66 0.005227476 ubox
10 76 0.008925069 ubox
10 77 0.354324764 ubox
10 82 0.005831101 ubox
10 85 0.004006128 ubox
10 87 0.003507100 ubox
10 88 0.004562368 ubox
10 94 0.006644535 ubox
10 98 0.003967804 ubox
11 25 0.004364345 ubox
11 54 0.012401587 ubox
11 60 0.300263256 ubox
11 65 0.007623922 ubox
11 74 0.003480174 ubox
11 75 0.008681134 ubox
11 76 0.323997468 ubox
11 81 0.005643997 ubox
11 84 0.004197783 ubox
11 86 0.003288983 ubox
11 87 0.004442270 ubox
11 93 0.006412955 ubox
11 97 0.004547767 ubox
12 53 0.011774821 ubox
12 59 0.389333842 ubox
12 64 0.008537668 ubox
12 83 0.004003784 ubox
12 96 0.004529103 ubox
13 52 0.010455097 ubox
13 56 0.064534876 ubox
13 63 0.007881039 ubox
13 95 0.003770631 ubox
13 102 0.003303492 ubox
14 22 0.004925273 ubox
14 51 0.010070214 ubox
14 55 0.068059847 ubox
14 101 0.003660758 ubox
15 21 0.005377631 ubox
15 50 0.009179984 ubox
15 53 0.003604096 ubox
15 57 0.170927329 ubox
15 58 0.970003916 ubox
15 59 0.037396090 ubox
15 79 0.003313998 ubox
16 49 0.009012921 ubox
16 53 0.015397892 ubox
16 56 0.165932023 ubox
16 57 0.974149515 ubox
16 58 0.035444926 ubox
16 78 0.003303334 ubox
17 48 0.008613664 ubox
17 52 0.009992113 ubox
17 53 0.018950465 ubox
17 56 0.955393172 ubox
18 47 0.005274818 ubox
18 52 0.009447987 ubox
18 53 0.057104943 ubox
19 52 0.045014848 ubox
19 53 0.915417148 ubox
20 52 0.982594985 ubox
21 51 0.999695016 ubox
22 50 0.999922809 ubox
23 49 0.999938456 ubox
24 48 0.999594398 ubox
25 47 0.999353736 ubox
26 46 0.999899233 ubox
27 42 0.003461997 ubox
27 45 0.999842154 ubox
28 37 0.005670775 ubox
28 41 0.007356660 ubox
28 44 0.994106060 ubox
29 36 0.026946277 ubox
29 47 0.009611599 ubox
30 35 0.026924773 ubox
30 46 0.011315304 ubox
31 39 0.571612927 ubox
31 42 0.787618316 ubox
31 45 0.011629739 ubox
32 38 0.569586017 ubox
32 41 0.789016609 ubox
32 44 0.012643594 ubox
34 46 0.004129251 ubox
35 42 0.036190485 ubox
35 45 0.004182874 ubox
36 41 0.036584653 ubox
36 44 0.004334060 ubox
39 49 0.003859668 ubox
40 48 0.003870820 ubox
41 47 0.003866134 ubox
42 46 0.003784859 ubox
53 97 0.003397134 ubox
54 63 0.003339567 ubox
54 96 0.003841911 ubox
55 61 0.008818576 ubox
55 62 0.003642168 ubox
55 83 0.004894842 ubox
55 95 0.003973661 ubox
56 60 0.007977584 ubox
56 71 0.008122038 ubox
56 82 0.005028253 ubox
56 94 0.003985784 ubox
57 70 0.008682185 ubox
57 81 0.004923981 ubox
57 93 0.003794524 ubox
58 68 0.010324162 ubox
58 70 0.004743157 ubox
58 75 0.007245930 ubox
58 81 0.003339341 ubox
59 65 0.007460798 ubox
59 67 0.010836013 ubox
59 69 0.005487805 ubox
59 74 0.008310328 ubox
59 76 0.005572163 ubox
59 80 0.004021774 ubox
60 64 0.006649789 ubox
62 68 0.037929384 ubox
62 70 0.109862171 ubox
62 75 0.331301954 ubox
62 77 0.013300082 ubox
62 81 0.004138527 ubox
62 87 0.011983801 ubox
62 89 0.009657606 ubox
62 93 0.007181752 ubox
62 101 0.004014843 ubox
63 67 0.034293768 ubox
63 69 0.109252968 ubox
63 70 0.020916552 ubox
63 71 0.020536403 ubox
63 72 0.031008919 ubox
63 73 0.021331589 ubox
63 74 0.331980982 ubox
63 75 0.010722875 ubox
63 76 0.014300096 ubox
63 80 0.003397595 ubox
63 81 0.011890563 ubox
63 86 0.012116328 ubox
63 88 0.009748027 ubox
63 92 0.007318844 ubox
63 100 0.004144421 ubox
64 68 0.098521193 ubox
64 69 0.026826274 ubox
64 70 0.022325660 ubox
64 71 0.036764419 ubox
64 72 0.026064921 ubox
64 73 0.331402936 ubox
64 74 0.013781108 ubox
64 75 0.014785094 ubox
64 76 0.005578672 ubox
64 80 0.024549155 ubox
64 85 0.012223367 ubox
64 87 0.009667463 ubox
64 91 0.007483086 ubox
64 97 0.004778645 ubox
64 99 0.004277077 ubox
65 79 0.032782648 ubox
65 96 0.005875493 ubox
66 95 0.005637830 ubox
66 96 0.009222340 ubox
67 95 0.010863415 ubox
67 96 0.005873257 ubox
68 95 0.004558374 ubox
68 96 0.022841225 ubox
69 95 0.023246020 ubox
69 96 0.006858737 ubox
70 95 0.005316351 ubox
70 96 0.013074747 ubox
71 95 0.012661326 ubox
71 96 0.011746237 ubox
72 95 0.011013420 ubox
72 96 0.010875119 ubox
73 95 0.010259436 ubox
73 96 0.022252931 ubox
74 95 0.023086211 ubox
74 96 0.007778098 ubox
75 95 0.006040539 ubox
75 96 0.032896500 ubox
76 95 0.033570539 ubox
76 96 0.010395015 ubox
77 95 0.008940640 ubox
77 102 0.044298995 ubox
78 101 0.047272152 ubox
80 96 0.009864259 ubox
81 95 0.007972865 ubox
81 96 0.078723661 ubox
82 95 0.081193036 ubox
82 102 0.017613589 ubox
83 94 0.079201367 ubox
83 97 0.060914045 ubox
83 101 0.018299398 ubox
84 96 0.063130436 ubox
85 95 0.056498808 ubox
85 96 0.094155755 ubox
86 95 0.100461772 ubox
86 96 0.020284872 ubox
87 95 0.017298996 ubox
87 96 0.141050094 ubox
88 95 0.144001286 ubox
88 96 0.028624813 ubox
89 95 0.023796004 ubox
89 96 0.063021123 ubox
90 95 0.058892739 ubox
90 96 0.035910682 ubox
91 95 0.029026255 ubox
94 102 0.050149788 ubox
95 101 0.052986340 ubox
96 100 0.042192443 ubox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
showpage
end
%%EOF
