%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGUCCCGGGCAGGAGAGCCCGCCAGAGCCGGUGCUGCCUGGCGCCGAGAGGCCCGGACUGGCGACUGCUGCCGCGCCACCGGGGCCCACCUGCGCAGGGACGCUCGGCCUCAGGCCCUCUGGGCUGCUCCACCCUGCUCCGGCCGCAGGCGAGCGGCGAGGGGAGGGGGGCACGGUUU\
) } def
/len { sequence length } bind def

/coor [
[36.68167496 145.82754517]
[26.05355072 135.24250793]
[25.86408043 120.24371338]
[36.22194672 109.39334869]
[21.24901390 108.49261475]
[6.27608299 107.59188080]
[-8.69684887 106.69114685]
[-23.66978073 105.79041290]
[-38.64271164 104.88967896]
[-53.61564255 103.98894501]
[-68.58857727 103.08821106]
[-83.56150818 102.18747711]
[-98.54769135 101.54389954]
[-113.54271698 101.15768433]
[-129.49792480 110.32772064]
[-144.10279846 100.61727142]
[-159.10224915 100.48851776]
[-168.84529114 108.96530151]
[-181.35116577 108.53513336]
[-189.92033386 99.97513580]
[-204.91535950 99.58892059]
[-219.91038513 99.20269775]
[-237.14244080 109.63163757]
[-253.20193481 98.88815308]
[-268.20138550 99.01690674]
[-283.20083618 99.14566040]
[-298.20028687 99.27441406]
[-313.19973755 99.40316772]
[-328.19918823 99.53191376]
[-337.79525757 108.17470551]
[-350.30670166 107.95928192]
[-359.02154541 99.54764557]
[-374.02096558 99.41889191]
[-389.02041626 99.29013824]
[-404.01986694 99.16139221]
[-412.65295410 102.22307587]
[-419.27511597 98.89947510]
[-434.27017212 98.51325226]
[-449.26519775 98.12703705]
[-459.15231323 106.43532562]
[-471.64895630 105.79053497]
[-480.06991577 97.08470154]
[-495.05609131 96.44113159]
[-505.47827148 108.09928894]
[-520.96313477 110.27954102]
[-534.19915771 101.95243835]
[-538.93676758 87.04978943]
[-532.93902588 72.60816193]
[-519.03778076 65.44645691]
[-503.79687500 68.94620514]
[-494.41253662 81.45494080]
[-479.42633057 82.09851074]
[-464.34094238 73.15277863]
[-448.87896729 83.13201141]
[-433.88394165 83.51822662]
[-418.88891602 83.90444946]
[-403.89111328 84.16194153]
[-388.89166260 84.29069519]
[-373.89221191 84.41944885]
[-358.89279175 84.54820251]
[-344.12335205 75.08988953]
[-328.32791138 84.53247070]
[-313.32849121 84.40371704]
[-298.32904053 84.27496338]
[-283.32958984 84.14620972]
[-268.33013916 84.01746368]
[-253.33068848 83.88871002]
[-246.82952881 75.96595001]
[-236.82695007 72.87747192]
[-226.56861877 75.87897491]
[-219.52416992 84.20767212]
[-204.52914429 84.59389496]
[-189.53411865 84.98011017]
[-174.60450745 75.77673340]
[-158.97349548 85.48906708]
[-143.97404480 85.61782074]
[-135.11608887 77.35703278]
[-122.60281372 77.35640717]
[-113.15650177 86.16265869]
[-98.16147614 86.54887390]
[-94.12747192 83.95030212]
[-88.41357422 83.87532806]
[-82.66077423 87.21453857]
[-67.68784332 88.11528015]
[-52.71490860 89.01601410]
[-37.74197769 89.91674805]
[-22.76904488 90.81748199]
[-7.79611444 91.71821594]
[7.17681742 92.61894989]
[22.14974785 93.51968384]
[37.12268066 94.42041779]
[52.12212753 94.54917145]
[67.10831451 93.90560150]
[82.09450531 93.26202393]
[93.25122070 77.95634460]
[115.60121918 77.99315643]
[125.30862427 66.55784607]
[128.34100342 51.02996063]
[142.47615051 46.33455658]
[152.18356323 34.89925003]
[161.89096069 23.46394539]
[171.59837341 12.02864075]
[181.30578613 0.59333646]
[166.30581665 0.56716728]
[155.60569763 -9.94508934]
[155.31387329 -24.94224930]
[165.59692383 -35.86281204]
[180.58453369 -36.47250748]
[191.72062683 -26.42326736]
[192.64773560 -11.45141983]
[203.47947693 -21.82798958]
[214.31123352 -32.20455933]
[225.14297485 -42.58113098]
[232.39799500 -57.90435028]
[249.13076782 -55.17475510]
[251.13993835 -38.34027863]
[235.51954651 -31.74938202]
[224.68780518 -21.37281227]
[213.85604858 -10.99624062]
[203.02430725 -0.61967057]
[192.74108887 10.30074692]
[183.03367615 21.73605156]
[173.32626343 33.17135620]
[163.61886597 44.60665894]
[153.91145325 56.04196548]
[151.57342529 70.75192261]
[136.74392700 76.26525879]
[127.03652191 87.70056152]
[129.59896851 102.48007202]
[142.58935547 109.98007202]
[155.57972717 117.48007202]
[164.60099792 119.06774139]
[168.72714233 125.22196198]
[181.58686829 132.94384766]
[190.57955933 134.68614197]
[194.59945679 140.91029358]
[207.32472229 148.85180664]
[220.04998779 156.79330444]
[232.77525330 164.73481750]
[248.57904053 165.47714233]
[255.27984619 178.77934265]
[268.00509644 186.72085571]
[280.73037720 194.66236877]
[295.94311523 191.31420898]
[308.73522949 199.54930115]
[311.83343506 214.07296753]
[324.55868530 222.01446533]
[337.28396606 229.95597839]
[350.00921631 237.89749146]
[362.73449707 245.83900452]
[378.07324219 242.03126526]
[391.56854248 250.25637817]
[395.21389771 265.63449097]
[386.84655762 279.04208374]
[371.43075562 282.52465820]
[358.11236572 274.01605225]
[354.79299927 258.56427002]
[342.06771851 250.62275696]
[329.34246826 242.68124390]
[316.61718750 234.73974609]
[303.89190674 226.79823303]
[289.48410034 230.39683533]
[276.46572876 222.52429199]
[272.78887939 207.38763428]
[260.06359863 199.44612122]
[247.33833313 191.50460815]
[232.44474792 191.33030701]
[224.83374023 177.46008301]
[212.10847473 169.51856995]
[199.38320923 161.57707214]
[186.65794373 153.63555908]
[173.86497498 145.80357361]
[161.00526428 138.08168030]
[148.07972717 130.47045898]
[135.08935547 122.97045135]
[122.09896851 115.47045135]
[98.10012817 122.97518921]
[82.73807526 108.24821472]
[67.75188446 108.89178467]
[52.76569748 109.53535461]
[62.93557739 120.56139374]
[62.48908997 135.55474854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 91]
[5 90]
[6 89]
[7 88]
[8 87]
[9 86]
[10 85]
[11 84]
[12 83]
[13 80]
[14 79]
[16 76]
[17 75]
[20 73]
[21 72]
[22 71]
[24 67]
[25 66]
[26 65]
[27 64]
[28 63]
[29 62]
[32 60]
[33 59]
[34 58]
[35 57]
[37 56]
[38 55]
[39 54]
[42 52]
[43 51]
[92 180]
[93 179]
[94 178]
[96 128]
[97 127]
[99 125]
[100 124]
[101 123]
[102 122]
[103 121]
[110 120]
[111 119]
[112 118]
[113 117]
[129 176]
[130 175]
[131 174]
[133 173]
[134 172]
[136 171]
[137 170]
[138 169]
[139 168]
[141 166]
[142 165]
[143 164]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
