%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NOVA2)
} def

/sequence { (\
CCGCCGCAGCCGCCGCAGCAGCAGCAGCCGCCGCCCCAGGCCCCCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.094498916 ubox
2 30 0.023998077 ubox
2 33 0.017081519 ubox
2 39 0.095770807 ubox
3 10 0.027513969 ubox
3 13 0.005433344 ubox
3 14 0.003692427 ubox
3 16 0.038795274 ubox
3 19 0.013827819 ubox
3 22 0.065809631 ubox
3 25 0.044501627 ubox
3 28 0.420026562 ubox
3 29 0.033083490 ubox
3 31 0.051753539 ubox
3 32 0.027425700 ubox
3 34 0.297713526 ubox
3 41 0.822048095 ubox
4 9 0.027579484 ubox
4 12 0.005201000 ubox
4 15 0.038795005 ubox
4 18 0.013835875 ubox
4 21 0.065853840 ubox
4 24 0.044527664 ubox
4 27 0.421864050 ubox
4 30 0.051500965 ubox
4 33 0.298009949 ubox
4 40 0.823694144 ubox
5 12 0.004180720 ubox
5 30 0.015899495 ubox
5 33 0.015619597 ubox
5 39 0.823444817 ubox
6 11 0.004912774 ubox
6 13 0.045142418 ubox
6 16 0.014241046 ubox
6 19 0.068149992 ubox
6 22 0.044157699 ubox
6 25 0.425823350 ubox
6 28 0.058572147 ubox
6 29 0.020741503 ubox
6 31 0.344737758 ubox
6 32 0.017030350 ubox
6 34 0.177016485 ubox
6 41 0.007575768 ubox
7 12 0.045174959 ubox
7 15 0.014245905 ubox
7 18 0.068114185 ubox
7 21 0.044130593 ubox
7 24 0.425588529 ubox
7 27 0.058628888 ubox
7 30 0.345109182 ubox
7 33 0.176954866 ubox
7 40 0.007565193 ubox
9 16 0.068347722 ubox
9 19 0.043237553 ubox
9 22 0.425740354 ubox
9 25 0.057434362 ubox
9 28 0.354770688 ubox
9 31 0.176506934 ubox
9 34 0.793923203 ubox
9 41 0.097317624 ubox
10 15 0.068258067 ubox
10 18 0.043245061 ubox
10 21 0.426187269 ubox
10 24 0.057488714 ubox
10 27 0.354811826 ubox
10 30 0.176159822 ubox
10 33 0.793974291 ubox
10 40 0.097549070 ubox
11 30 0.015055523 ubox
11 33 0.053407981 ubox
11 39 0.097525447 ubox
12 19 0.425817926 ubox
12 22 0.056675832 ubox
12 25 0.355565467 ubox
12 28 0.175053920 ubox
12 29 0.016885529 ubox
12 31 0.795414540 ubox
12 32 0.047180304 ubox
12 34 0.037605217 ubox
12 41 0.032560810 ubox
13 18 0.424811756 ubox
13 21 0.056652937 ubox
13 24 0.355745480 ubox
13 27 0.175203710 ubox
13 30 0.795896266 ubox
13 33 0.037524621 ubox
13 40 0.032632864 ubox
14 30 0.036681356 ubox
14 33 0.004568660 ubox
14 39 0.032615027 ubox
15 22 0.355993533 ubox
15 25 0.173602311 ubox
15 28 0.796242931 ubox
15 29 0.033043002 ubox
15 31 0.038522863 ubox
15 32 0.005179468 ubox
15 34 0.103087421 ubox
16 21 0.355797982 ubox
16 24 0.173655306 ubox
16 27 0.796113043 ubox
16 30 0.038550122 ubox
16 33 0.103121227 ubox
18 25 0.795478532 ubox
18 28 0.040401120 ubox
18 31 0.106225833 ubox
18 34 0.011062838 ubox
19 24 0.795476996 ubox
19 27 0.040405066 ubox
19 30 0.106187381 ubox
19 33 0.011068245 ubox
21 28 0.107970514 ubox
21 31 0.011245722 ubox
21 34 0.016914726 ubox
22 27 0.107864336 ubox
22 30 0.011244851 ubox
22 33 0.016938856 ubox
24 31 0.021327502 ubox
25 30 0.021323515 ubox
27 34 0.010223354 ubox
27 41 0.039005879 ubox
28 33 0.010219724 ubox
28 40 0.039103083 ubox
29 39 0.039110460 ubox
30 41 0.434661119 ubox
31 40 0.435647978 ubox
32 39 0.435594941 ubox
33 41 0.164113145 ubox
34 40 0.164640702 ubox
35 39 0.163668597 ubox
39 45 0.084108452 ubox
39 46 0.125679168 ubox
39 47 0.115219928 ubox
39 48 0.076910918 ubox
40 44 0.083035142 ubox
40 45 0.124570911 ubox
40 46 0.114776060 ubox
40 47 0.076964748 ubox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
showpage
end
%%EOF
