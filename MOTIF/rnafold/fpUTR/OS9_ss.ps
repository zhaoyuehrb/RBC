%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACCAAUCACGGACAGCGAUUGAUAUUUCUAAUCGUCGUGAUCCACCUCCCCAGGACCUUGGAGCCACGUUUACAAAUAGGAAUAGGGUACGUGGGAGGGAUAGAACGUACAGCCAAUAAAAUCAUGUGGCGCCGAUGGGCGUGUUGAGGCCGCUGCCUGGCUUAGGGCGGAAACAGAUUCUCUGCAUAAGAAGGGGAACGAAAG\
) } def
/len { sequence length } bind def

/coor [
[31.20345497 272.71264648]
[23.63037109 277.65499878]
[15.27863312 281.10540771]
[6.43864965 282.94659424]
[-2.58269572 283.11715698]
[-11.47269535 281.61373901]
[-19.92365456 278.49087524]
[-27.64354706 273.85910034]
[-38.25014877 284.46569824]
[-48.85675049 295.07229614]
[-59.46335220 305.67892456]
[-70.06995392 316.28552246]
[-80.67655945 326.89212036]
[-81.65110779 331.12890625]
[-83.71649170 334.49554443]
[-86.46477509 336.75579834]
[-89.45320129 337.83038330]
[-92.25843048 337.79458618]
[-103.48609161 347.74142456]
[-114.71375275 357.68826294]
[-125.94141388 367.63510132]
[-137.16908264 377.58193970]
[-148.39674377 387.52877808]
[-159.54896545 397.56011963]
[-170.62510681 407.67541504]
[-175.06420898 423.46231079]
[-191.02026367 427.24865723]
[-202.07905579 415.13937378]
[-196.86425781 399.59143066]
[-180.74038696 396.59927368]
[-169.66424561 386.48397827]
[-166.84436035 379.65051270]
[-158.34358215 376.30111694]
[-147.11592102 366.35427856]
[-135.88825989 356.40744019]
[-124.66059113 346.46060181]
[-113.43292999 336.51376343]
[-102.20526886 326.56692505]
[-91.28315735 316.28552246]
[-80.67655945 305.67892456]
[-70.06995392 295.07229614]
[-59.46335220 284.46569824]
[-48.85675049 273.85910034]
[-38.25014877 263.25250244]
[-46.80876541 243.59312439]
[-46.03081894 222.12292480]
[-36.03216934 203.05885315]
[-18.74334145 190.16123962]
[2.46313238 185.99205017]
[23.43054581 191.40612793]
[32.32047653 179.32435608]
[41.21041107 167.24258423]
[50.10034561 155.16082764]
[58.99027634 143.07905579]
[48.01491547 128.89901733]
[41.76446915 112.09236908]
[40.80703354 94.18663788]
[45.22963333 76.80928040]
[54.63029861 61.53972626]
[68.15460968 49.76581192]
[84.57333374 42.55767822]
[82.54059601 27.69604874]
[80.50785065 12.83442211]
[78.47511292 -2.02720523]
[68.93904114 -14.65154457]
[74.88021851 -28.30993843]
[72.84748077 -43.17156601]
[70.81473541 -58.03319168]
[68.78199768 -72.89482117]
[66.74925232 -87.75644684]
[64.71651459 -102.61807251]
[62.68377304 -117.47969818]
[47.76263809 -119.76875305]
[34.10487366 -126.16310120]
[22.81371498 -136.13681030]
[14.79856396 -148.87515259]
[10.70175457 -163.34126282]
[10.84707832 -178.36041260]
[15.21421146 -192.71551514]
[23.44105148 -205.24568176]
[34.85372925 -214.94010925]
[48.52180481 -221.01966858]
[46.48906326 -235.88130188]
[37.39004898 -239.26368713]
[30.19200516 -245.69020081]
[25.85635757 -254.24588013]
[24.94150352 -263.73550415]
[27.53122330 -272.85049438]
[33.22891617 -280.34924316]
[41.21770859 -285.22647095]
[40.08599854 -300.18371582]
[38.95428848 -315.14096069]
[37.82257843 -330.09820557]
[36.69087219 -345.05545044]
[35.55916214 -360.01269531]
[21.32841301 -365.53073120]
[10.90740204 -376.68264771]
[6.36522865 -391.25424194]
[8.60374451 -406.35229492]
[17.17849159 -418.97912598]
[30.38694572 -426.62762451]
[45.60655975 -427.77917480]
[59.81546783 -422.20516968]
[70.19248199 -411.01229858]
[74.67723846 -396.42291260]
[72.37928009 -381.33377075]
[63.75487900 -368.74081421]
[50.51640701 -361.14440918]
[51.64811707 -346.18716431]
[52.77982712 -331.22991943]
[53.91153717 -316.27267456]
[55.04324722 -301.31542969]
[56.17495346 -286.35818481]
[72.74265289 -274.39056396]
[75.12843323 -253.79647827]
[61.35068893 -237.91404724]
[63.38343048 -223.05241394]
[78.18204498 -220.86645508]
[91.77880859 -214.59275818]
[103.06822968 -204.73199463]
[111.12976074 -192.07685852]
[115.30287170 -177.64837646]
[115.24114227 -162.61347961]
[110.94104004 -148.19067383]
[102.74285126 -135.55125427]
[91.30381012 -125.72421265]
[77.54540253 -119.51244354]
[79.57814026 -104.65081787]
[81.61088562 -89.78918457]
[83.64362335 -74.92755890]
[85.67636108 -60.06593323]
[87.70910645 -45.20430756]
[89.74184418 -30.34267807]
[99.13252258 -18.78134155]
[93.33673859 -4.05994606]
[95.36948395 10.80168152]
[97.40222168 25.66330910]
[99.43495941 40.52493668]
[122.58702087 44.97792435]
[142.19009399 58.07627487]
[155.16403198 77.76190186]
[169.67227173 73.95261383]
[184.18052673 70.14332581]
[189.68852234 55.63671875]
[202.68975830 47.16633606]
[218.18499756 47.98920822]
[230.21600342 57.78892899]
[234.15661621 72.79730225]
[228.49157715 87.24330139]
[215.39920044 95.57215118]
[199.91380310 94.58123016]
[187.98982239 84.65157318]
[173.48156738 88.46086121]
[158.97331238 92.27015686]
[159.47775269 100.00000000]
[158.97331238 107.72984314]
[173.48156738 111.53913879]
[187.98982239 115.34842682]
[202.49806213 119.15771484]
[217.00631714 122.96701050]
[231.51455688 126.77629852]
[245.03340149 118.58992767]
[260.36114502 122.44163513]
[268.40414429 136.04626465]
[264.39059448 151.33242798]
[250.70169067 159.23112488]
[235.45880127 155.05619812]
[227.70527649 141.28454590]
[213.19702148 137.47526550]
[198.68876648 133.66596985]
[184.18052673 129.85667419]
[169.67227173 126.04738617]
[155.16403198 122.23809814]
[153.50106812 125.98533630]
[151.58393860 129.60911560]
[149.42172241 133.09222412]
[147.02471924 136.41810608]
[157.63131714 147.02471924]
[168.23791504 157.63131714]
[178.84451294 168.23791504]
[194.31988525 175.16246033]
[191.94995117 191.94995117]
[175.16246033 194.31988525]
[168.23791504 178.84451294]
[157.63131714 168.23791504]
[147.02471924 157.63131714]
[136.41810608 147.02471924]
[130.03254700 151.33856201]
[123.14282990 154.79061890]
[115.86462402 157.32290649]
[108.32010651 158.89294434]
[100.63591766 159.47434998]
[92.94104767 159.05737305]
[85.36468506 157.64901733]
[78.03399658 155.27293396]
[71.07204437 151.96899414]
[62.18210983 164.05075073]
[53.29217911 176.13252258]
[44.40224457 188.21429443]
[35.51231384 200.29605103]
[41.27441788 207.34414673]
[45.62703705 215.33224487]
[48.42149734 223.98231506]
[49.56332779 232.99378967]
[49.01543045 242.05401611]
[46.79928207 250.84918213]
[42.99411011 259.07504272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 44]
[9 43]
[10 42]
[11 41]
[12 40]
[13 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 31]
[25 30]
[50 200]
[51 199]
[52 198]
[53 197]
[54 196]
[61 138]
[62 137]
[63 136]
[64 135]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[82 117]
[83 116]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[141 154]
[142 153]
[143 152]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
[161 168]
[177 187]
[178 186]
[179 185]
[180 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
