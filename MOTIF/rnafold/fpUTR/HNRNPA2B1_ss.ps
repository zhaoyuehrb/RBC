%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGGGGGAAGGUUCUAGAAAAGCGGCGGCAGCGGCUCUAGCGGCAGUAGCAGCAGCGCCGGGUCCCGUGCGGAGGUGCUCCUCGCAGAGUUGUUUCUCGAGCAGCGGCAGUUCUCACUACAGCGCCAGGACGAGUCCGGUUCGUGUUCGUCCGCGGAGAUCUCUCUCAUCUCGCUCGGCUGCGGGAAAUCGGGCUGAAGCGACUGAGUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-153.38522339 580.64428711]
[-163.75169373 594.19671631]
[-179.71949768 602.47290039]
[-184.41667175 616.71850586]
[-189.11384583 630.96405029]
[-193.81101990 645.20965576]
[-198.50819397 659.45520020]
[-190.12590027 672.65643311]
[-192.24148560 688.15020752]
[-203.85603333 698.62097168]
[-219.48550415 699.12463379]
[-231.75013733 689.42346191]
[-234.85896301 674.09802246]
[-227.34407043 660.38452148]
[-212.75376892 654.75805664]
[-208.05659485 640.51245117]
[-203.35942078 626.26690674]
[-198.66226196 612.02130127]
[-193.96508789 597.77569580]
[-200.08963013 593.44677734]
[-208.74775696 605.69573975]
[-220.99656677 597.03741455]
[-212.33874512 584.78887939]
[-218.46328735 580.45989990]
[-230.32492065 589.64147949]
[-242.18655396 598.82305908]
[-248.36335754 613.38873291]
[-263.16381836 615.06066895]
[-275.02545166 624.24224854]
[-280.73297119 639.61614990]
[-296.94396973 642.09313965]
[-306.98196411 629.12506104]
[-300.52075195 614.05242920]
[-284.20703125 612.38061523]
[-272.34539795 603.19903564]
[-267.01702881 589.29016113]
[-251.36814880 586.96142578]
[-239.50651550 577.77984619]
[-227.64488220 568.59826660]
[-223.55006409 547.17883301]
[-209.97746277 531.94812012]
[-191.84510803 526.28601074]
[-174.75263977 530.45220947]
[-166.36274719 518.01800537]
[-157.97283936 505.58377075]
[-149.58294678 493.14956665]
[-141.46504211 480.53610229]
[-133.62292480 467.74932861]
[-125.78082275 454.96255493]
[-117.93872070 442.17581177]
[-117.88047791 427.28131104]
[-104.06998444 419.56246948]
[-96.22787476 406.77569580]
[-99.93863678 392.39633179]
[-92.16777802 379.31701660]
[-77.06022644 375.52233887]
[-69.21812439 362.73556519]
[-61.37601471 349.94879150]
[-53.53390503 337.16204834]
[-52.71690369 329.82009888]
[-45.48457718 324.24807739]
[-37.45817947 311.57620239]
[-29.43178177 298.90429688]
[-21.40538406 286.23239136]
[-21.62953377 268.68292236]
[-5.24329281 260.27761841]
[2.59881401 247.49087524]
[10.44092083 234.70410156]
[18.28302765 221.91734314]
[26.12513542 209.13056946]
[33.96724319 196.34381104]
[41.71658325 183.50061035]
[49.37275696 170.60165405]
[49.21536636 155.70788574]
[62.91267014 147.78990173]
[70.56884003 134.89094543]
[78.22501373 121.99199677]
[67.63954926 107.41338348]
[66.57955933 88.17972565]
[76.71668243 70.34956360]
[70.60240936 56.65227509]
[64.48813629 42.95498657]
[51.79760361 33.50719070]
[53.67507172 18.73138618]
[47.56079865 5.03409863]
[41.44652557 -8.66318893]
[35.33225250 -22.36047554]
[28.97945404 -28.91758728]
[29.23020935 -36.30059814]
[23.31487083 -50.08496475]
[17.39953423 -63.86933136]
[11.48419571 -77.65370178]
[-1.96831465 -87.03250122]
[-0.30287874 -103.34686279]
[14.76724625 -109.81396484]
[27.73920631 -99.78100586]
[25.26856232 -83.56903839]
[31.18390083 -69.78466797]
[37.09923935 -56.00030136]
[43.01457596 -42.21593475]
[49.02954102 -28.47474861]
[55.14381027 -14.77746105]
[61.25808334 -1.08017421]
[67.37236023 12.61711311]
[79.62555695 21.08518791]
[78.18542480 36.84071350]
[84.29969788 50.53800201]
[90.41397095 64.23529053]
[105.38882446 63.36713028]
[109.87927246 49.05504227]
[114.36972046 34.74295425]
[113.95259094 25.62265778]
[119.03015900 20.25701904]
[123.72732544 6.01143837]
[128.42449951 -8.23414326]
[119.24945068 -20.74806023]
[119.21584320 -36.26509857]
[128.33659363 -48.81864166]
[143.10459900 -53.58159256]
[157.84124756 -48.72250366]
[166.88000488 -36.10979080]
[166.74528503 -20.59329987]
[157.48887634 -8.13943958]
[142.67007446 -3.53697252]
[137.97291565 10.70860863]
[133.27574158 24.95418930]
[128.68180847 39.23339844]
[124.19136047 53.54548645]
[119.70091248 67.85757446]
[121.66120148 66.26408386]
[123.69620514 64.73941803]
[136.30966187 56.62150192]
[148.92312622 48.50358963]
[161.53659058 40.38567352]
[174.15005493 32.26776123]
[186.76351929 24.14984512]
[199.37698364 16.03193092]
[202.84272766 0.84554446]
[215.75022888 -7.20749187]
[230.20675659 -3.80984235]
[242.82022095 -11.92775726]
[252.86706543 -25.58415794]
[268.77102661 -19.71041679]
[267.52947998 -2.80198908]
[250.93814087 0.68570673]
[238.32467651 8.80362129]
[235.42898560 23.36901093]
[222.75279236 31.78141403]
[207.49490356 28.64539528]
[194.88143921 36.76330948]
[182.26797485 44.88122559]
[169.65451050 52.99913788]
[157.04104614 61.11705399]
[144.42758179 69.23497009]
[131.81411743 77.35288239]
[133.48303223 84.66484070]
[147.81663513 89.08614349]
[136.82084656 99.28875732]
[138.48974609 106.60071564]
[153.37631226 108.44193268]
[168.26287842 110.28314209]
[183.14945984 112.12435150]
[198.03602600 113.96556854]
[209.35801697 103.17916107]
[224.96769714 102.24552917]
[237.49467468 111.60550690]
[241.02406311 126.83959198]
[233.88941956 140.75471497]
[219.45948792 146.78059387]
[204.54765320 142.07197571]
[196.19480896 128.85212708]
[181.30824280 127.01092529]
[166.42167664 125.16970825]
[151.53511047 123.32849884]
[136.64852905 121.48728943]
[113.44146729 134.16682434]
[91.12397003 129.64816284]
[83.46779633 142.54711914]
[75.81162262 155.44607544]
[75.42139435 171.26246643]
[62.27171326 178.25782776]
[54.61553955 191.15678406]
[52.92775726 200.12925720]
[46.75400543 204.18591309]
[38.91189957 216.97268677]
[31.06979370 229.75944519]
[23.22768593 242.54620361]
[15.38557911 255.33297729]
[7.54347229 268.11975098]
[9.78559017 280.81854248]
[2.99426746 291.30615234]
[-8.73348904 294.25878906]
[-16.75988579 306.93069458]
[-24.78628349 319.60260010]
[-32.81268311 332.27447510]
[-40.74714279 345.00415039]
[-48.58924866 357.79092407]
[-56.43135452 370.57766724]
[-64.27346039 383.36444092]
[-60.80686569 398.55062866]
[-68.94203186 411.40652466]
[-83.44110870 414.61779785]
[-91.28321838 427.40457153]
[-91.90237427 443.21365356]
[-105.15195465 450.01791382]
[-112.99405670 462.80468750]
[-120.83616638 475.59143066]
[-128.67826843 488.37820435]
[-128.81526184 493.58731079]
[-130.74159241 497.80328369]
[-133.78042603 500.51135254]
[-137.14874268 501.53945923]
[-145.53863525 513.97369385]
[-153.92852783 526.40789795]
[-162.31842041 538.84210205]
[-153.42851257 550.04309082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[24 39]
[25 38]
[26 37]
[28 35]
[29 34]
[43 215]
[44 214]
[45 213]
[46 212]
[47 208]
[48 207]
[49 206]
[50 205]
[52 203]
[53 202]
[56 199]
[57 198]
[58 197]
[59 196]
[61 195]
[62 194]
[63 193]
[64 192]
[66 189]
[67 188]
[68 187]
[69 186]
[70 185]
[71 184]
[72 182]
[73 181]
[75 179]
[76 178]
[77 177]
[80 108]
[81 107]
[82 106]
[84 104]
[85 103]
[86 102]
[87 101]
[89 100]
[90 99]
[91 98]
[92 97]
[109 129]
[110 128]
[111 127]
[113 126]
[114 125]
[115 124]
[131 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 150]
[137 149]
[140 146]
[141 145]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
