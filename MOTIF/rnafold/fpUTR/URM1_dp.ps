%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (URM1)
} def

/sequence { (\
CCGGAAAUUUGCGGGCGCGCCGGAAGUUGAGGGGAGUUUCCUGCGAGCUCGGCUUCCUCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.194599950 ubox
1 15 0.008841949 ubox
1 23 0.208439875 ubox
1 32 0.006187373 ubox
1 33 0.008050815 ubox
1 52 0.007253723 ubox
2 11 0.013691449 ubox
2 13 0.196515404 ubox
2 14 0.007839776 ubox
2 22 0.209538741 ubox
2 31 0.006371521 ubox
2 32 0.008073618 ubox
2 51 0.007333889 ubox
3 9 0.003519606 ubox
3 10 0.014120927 ubox
3 12 0.196591841 ubox
3 16 0.003201461 ubox
3 21 0.210862023 ubox
3 50 0.007170944 ubox
3 56 0.019535017 ubox
3 57 0.933637546 ubox
3 58 0.019437287 ubox
3 59 0.029403857 ubox
4 8 0.003196479 ubox
4 9 0.012052547 ubox
4 10 0.014111522 ubox
4 20 0.205234087 ubox
4 49 0.006600031 ubox
4 55 0.019482810 ubox
4 56 0.934817035 ubox
4 57 0.021003729 ubox
4 58 0.024444582 ubox
4 59 0.077426292 ubox
5 9 0.013316316 ubox
5 54 0.022186708 ubox
5 55 0.929397666 ubox
5 58 0.075749111 ubox
6 28 0.034305896 ubox
6 54 0.880667181 ubox
6 55 0.071763881 ubox
7 27 0.044998704 ubox
7 54 0.095377783 ubox
8 14 0.010080259 ubox
8 15 0.011995223 ubox
8 23 0.004052450 ubox
8 24 0.009472030 ubox
8 25 0.010473214 ubox
8 26 0.047346857 ubox
8 47 0.006660638 ubox
8 52 0.146686707 ubox
9 13 0.007651328 ubox
9 14 0.010646698 ubox
9 15 0.011829730 ubox
9 22 0.006268512 ubox
9 23 0.010156694 ubox
9 24 0.011585394 ubox
9 25 0.081301543 ubox
9 46 0.007024414 ubox
9 51 0.032211013 ubox
9 52 0.052947042 ubox
9 61 0.022314735 ubox
10 14 0.010001087 ubox
10 17 0.015676033 ubox
10 19 0.191046757 ubox
10 22 0.009959419 ubox
10 23 0.010646810 ubox
10 24 0.086401734 ubox
10 45 0.007077411 ubox
10 51 0.017502564 ubox
10 60 0.026172104 ubox
11 16 0.016852134 ubox
11 18 0.195869710 ubox
11 20 0.140141291 ubox
11 21 0.012759918 ubox
11 44 0.007113622 ubox
11 50 0.012814059 ubox
11 53 0.520677006 ubox
11 59 0.026652123 ubox
12 17 0.195626331 ubox
12 19 0.147910695 ubox
12 22 0.090948686 ubox
12 43 0.007113616 ubox
12 51 0.859638070 ubox
12 52 0.381858649 ubox
13 18 0.147307550 ubox
13 21 0.095568728 ubox
13 42 0.007022598 ubox
13 50 0.931269830 ubox
13 57 0.024325886 ubox
13 58 0.008873057 ubox
13 59 0.004646966 ubox
14 20 0.095538543 ubox
14 21 0.026000730 ubox
14 41 0.007024645 ubox
14 49 0.933489103 ubox
14 50 0.124176790 ubox
14 56 0.024330542 ubox
14 57 0.009450843 ubox
14 58 0.004461914 ubox
15 20 0.028275200 ubox
15 40 0.007006509 ubox
15 48 0.942322471 ubox
15 49 0.014245911 ubox
15 55 0.023579642 ubox
15 56 0.009619989 ubox
15 57 0.005340571 ubox
16 22 0.007256756 ubox
16 47 0.940559038 ubox
17 21 0.010635684 ubox
17 37 0.006704565 ubox
17 44 0.005885256 ubox
18 36 0.006803223 ubox
18 43 0.005904275 ubox
18 45 0.939363313 ubox
19 42 0.004829378 ubox
19 44 0.942400870 ubox
19 53 0.035638436 ubox
20 34 0.006452736 ubox
20 43 0.941565599 ubox
20 52 0.035686853 ubox
21 29 0.003615453 ubox
21 33 0.006454688 ubox
21 43 0.021720555 ubox
21 51 0.035685578 ubox
22 28 0.003344349 ubox
22 40 0.050717924 ubox
22 41 0.940164531 ubox
22 42 0.008542904 ubox
22 50 0.033578138 ubox
22 57 0.238904217 ubox
23 39 0.052080288 ubox
23 40 0.940826016 ubox
23 41 0.006947318 ubox
23 48 0.004237909 ubox
23 49 0.019764485 ubox
23 50 0.011420246 ubox
23 56 0.239554016 ubox
24 38 0.117282316 ubox
24 39 0.934201318 ubox
24 49 0.014688458 ubox
24 55 0.239570258 ubox
25 37 0.156665589 ubox
25 38 0.922213864 ubox
25 39 0.008751782 ubox
25 49 0.022256159 ubox
25 54 0.239546979 ubox
26 37 0.852671540 ubox
26 38 0.011291968 ubox
26 48 0.028069798 ubox
26 53 0.239692006 ubox
26 62 0.221276349 ubox
27 33 0.018122542 ubox
27 34 0.070941565 ubox
27 35 0.370968466 ubox
27 36 0.782199321 ubox
27 46 0.022786680 ubox
27 47 0.026854424 ubox
27 52 0.239555026 ubox
27 61 0.224118110 ubox
28 32 0.014521957 ubox
28 33 0.080967742 ubox
28 34 0.370150824 ubox
28 35 0.820042956 ubox
28 45 0.023627309 ubox
28 46 0.025566753 ubox
28 51 0.238895835 ubox
28 60 0.226970864 ubox
29 38 0.019042676 ubox
29 39 0.003860663 ubox
29 40 0.003572887 ubox
29 44 0.025556563 ubox
29 50 0.239610801 ubox
29 56 0.007064252 ubox
29 59 0.229732615 ubox
30 37 0.023147801 ubox
30 38 0.007336784 ubox
30 39 0.003966078 ubox
30 42 0.018267988 ubox
30 49 0.239471076 ubox
30 55 0.007117766 ubox
30 58 0.229227026 ubox
31 37 0.010431341 ubox
31 38 0.006154164 ubox
31 41 0.018885687 ubox
31 42 0.029468195 ubox
31 48 0.238425602 ubox
31 49 0.005008139 ubox
31 54 0.007346897 ubox
31 57 0.227222902 ubox
31 58 0.015485107 ubox
31 59 0.004176829 ubox
32 37 0.008248416 ubox
32 40 0.019013879 ubox
32 41 0.049800148 ubox
32 42 0.196011494 ubox
32 48 0.011464223 ubox
32 53 0.008209466 ubox
32 54 0.004884071 ubox
32 56 0.224973483 ubox
32 57 0.034275702 ubox
32 58 0.003850557 ubox
33 39 0.017630987 ubox
33 40 0.049754440 ubox
33 41 0.197911922 ubox
33 42 0.005777708 ubox
33 50 0.003491061 ubox
33 53 0.019276877 ubox
33 54 0.017377913 ubox
33 55 0.215251942 ubox
33 56 0.045789445 ubox
33 57 0.004126231 ubox
34 38 0.011512407 ubox
34 39 0.039131854 ubox
34 40 0.197879902 ubox
34 41 0.006538632 ubox
34 50 0.217131760 ubox
34 53 0.015578712 ubox
34 54 0.035210852 ubox
34 55 0.054607740 ubox
34 56 0.004134552 ubox
35 39 0.172168719 ubox
35 42 0.031298391 ubox
35 49 0.219873244 ubox
35 54 0.062676947 ubox
35 55 0.003711034 ubox
36 41 0.031218582 ubox
36 44 0.123739266 ubox
36 48 0.219979831 ubox
36 53 0.064758998 ubox
37 43 0.122880774 ubox
37 46 0.005810804 ubox
37 47 0.213309768 ubox
37 52 0.062680008 ubox
38 45 0.006626269 ubox
38 46 0.205044689 ubox
38 47 0.060430108 ubox
38 51 0.045560846 ubox
39 45 0.190398551 ubox
39 46 0.084824793 ubox
40 45 0.099689124 ubox
40 51 0.004327532 ubox
40 52 0.011554891 ubox
41 47 0.025628820 ubox
41 51 0.012113568 ubox
41 52 0.010012955 ubox
42 46 0.023211649 ubox
42 51 0.011634713 ubox
43 50 0.012734587 ubox
43 53 0.012148783 ubox
44 51 0.020349891 ubox
44 52 0.011919187 ubox
45 50 0.020779861 ubox
45 55 0.013679697 ubox
46 54 0.015015328 ubox
47 53 0.015267420 ubox
48 52 0.015158792 ubox
51 57 0.008739479 ubox
52 56 0.008804016 ubox
52 57 0.003330748 ubox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
showpage
end
%%EOF
