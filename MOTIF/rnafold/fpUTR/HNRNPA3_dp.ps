%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HNRNPA3)
} def

/sequence { (\
AACAGACUGGCGGCGCGCGGAAAACGCGUCACGUGACGACUGGCCCCGCCUCUUCCUCUCGGUCCCAUAUUGAACUCGAGUUGGAAGAGGCGAGUCCGGUCUCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 34 0.005822017 ubox
3 9 0.199108065 ubox
3 33 0.006070077 ubox
3 35 0.018743548 ubox
3 42 0.003327901 ubox
4 8 0.161689957 ubox
4 34 0.012493091 ubox
4 41 0.003489500 ubox
4 102 0.099107300 ubox
5 30 0.008883063 ubox
5 40 0.003497441 ubox
5 101 0.105887412 ubox
5 103 0.058264273 ubox
6 29 0.008570601 ubox
6 34 0.037108242 ubox
6 100 0.105884905 ubox
6 102 0.053937443 ubox
7 13 0.006565876 ubox
7 28 0.008246828 ubox
7 33 0.040205411 ubox
7 99 0.105886339 ubox
8 12 0.005959490 ubox
8 15 0.003908529 ubox
8 31 0.026550210 ubox
8 33 0.065594164 ubox
8 35 0.024165186 ubox
8 38 0.006199811 ubox
8 98 0.105695203 ubox
8 104 0.055982933 ubox
9 14 0.011884401 ubox
9 30 0.027827339 ubox
9 32 0.090657396 ubox
9 34 0.042227681 ubox
9 37 0.075091030 ubox
9 96 0.007096755 ubox
9 97 0.105022737 ubox
9 103 0.059893128 ubox
10 16 0.006466077 ubox
10 27 0.006213663 ubox
10 29 0.023966407 ubox
10 34 0.864563658 ubox
10 44 0.003228982 ubox
10 46 0.003857235 ubox
10 95 0.009906384 ubox
10 96 0.079991279 ubox
10 102 0.017585272 ubox
11 15 0.006461089 ubox
11 26 0.006298756 ubox
11 28 0.023107658 ubox
11 33 0.976942736 ubox
11 35 0.009002913 ubox
11 38 0.003316941 ubox
11 42 0.010680132 ubox
11 94 0.062572359 ubox
12 25 0.006291086 ubox
12 27 0.015340709 ubox
12 30 0.166249789 ubox
12 32 0.980547503 ubox
12 34 0.008047058 ubox
12 37 0.003994787 ubox
12 41 0.011080378 ubox
12 45 0.063547374 ubox
12 46 0.019173833 ubox
12 47 0.003716384 ubox
12 96 0.003864450 ubox
13 27 0.014226294 ubox
13 29 0.169583631 ubox
13 34 0.020611035 ubox
13 40 0.011148646 ubox
13 44 0.063739383 ubox
13 45 0.018985464 ubox
13 46 0.003893563 ubox
13 95 0.011390270 ubox
14 26 0.019914787 ubox
14 28 0.169847088 ubox
14 33 0.023154389 ubox
14 38 0.011231953 ubox
14 43 0.063710698 ubox
14 94 0.011821350 ubox
15 25 0.019651182 ubox
15 27 0.169709111 ubox
15 29 0.978828761 ubox
15 32 0.018847751 ubox
15 37 0.011229338 ubox
15 44 0.019060762 ubox
15 95 0.003328908 ubox
16 26 0.169662288 ubox
16 28 0.984487467 ubox
16 35 0.011075025 ubox
16 42 0.010127198 ubox
16 43 0.019032865 ubox
16 94 0.003343163 ubox
17 25 0.167684114 ubox
17 27 0.984999353 ubox
17 34 0.011084627 ubox
18 26 0.985031666 ubox
18 33 0.011090287 ubox
18 38 0.004191474 ubox
18 42 0.015812387 ubox
19 25 0.983885568 ubox
19 32 0.011056198 ubox
19 37 0.004197864 ubox
19 41 0.015871841 ubox
20 30 0.009123236 ubox
20 40 0.015807508 ubox
21 29 0.008810754 ubox
24 34 0.005244552 ubox
25 33 0.005289641 ubox
25 35 0.013997080 ubox
26 32 0.005228612 ubox
26 34 0.014167075 ubox
27 33 0.014180175 ubox
27 38 0.009690854 ubox
28 32 0.013269719 ubox
28 37 0.020949397 ubox
28 40 0.011699953 ubox
28 44 0.013110447 ubox
29 36 0.021304282 ubox
29 39 0.011988355 ubox
29 43 0.013643274 ubox
30 35 0.022042367 ubox
30 38 0.012614487 ubox
30 42 0.048496757 ubox
31 41 0.048220345 ubox
32 38 0.013335337 ubox
32 42 0.014983390 ubox
33 37 0.012887852 ubox
33 40 0.061520294 ubox
33 41 0.006513975 ubox
33 44 0.016096132 ubox
34 39 0.061070663 ubox
34 43 0.016147990 ubox
34 104 0.430780858 ubox
35 96 0.003872953 ubox
35 101 0.007858499 ubox
35 103 0.897352210 ubox
36 95 0.003911561 ubox
36 100 0.007445090 ubox
36 102 0.894785050 ubox
37 94 0.003885475 ubox
37 99 0.006731468 ubox
38 96 0.058413973 ubox
38 101 0.993636148 ubox
38 103 0.007172598 ubox
39 95 0.058963391 ubox
39 100 0.994139006 ubox
39 102 0.005373971 ubox
40 94 0.059032895 ubox
40 99 0.994316370 ubox
41 93 0.058668312 ubox
41 98 0.993532786 ubox
42 96 0.063794083 ubox
42 97 0.992721024 ubox
43 91 0.006004667 ubox
43 95 0.085186784 ubox
43 96 0.990133969 ubox
44 90 0.005461252 ubox
44 94 0.495606175 ubox
45 89 0.004746970 ubox
47 92 0.993735660 ubox
48 91 0.999941943 ubox
49 90 0.999977678 ubox
50 89 0.999977052 ubox
51 88 0.999849129 ubox
52 87 0.999981671 ubox
53 85 0.005657165 ubox
53 86 0.999417523 ubox
54 84 0.007891652 ubox
54 85 0.999612852 ubox
55 83 0.011517468 ubox
55 84 0.999911126 ubox
56 83 0.999359760 ubox
56 84 0.004065316 ubox
57 79 0.004415204 ubox
57 83 0.005302201 ubox
58 78 0.004426461 ubox
58 80 0.998632032 ubox
59 73 0.004095040 ubox
59 79 0.999713767 ubox
60 72 0.004325820 ubox
60 78 0.999918577 ubox
61 71 0.004876464 ubox
61 76 0.124722463 ubox
61 77 0.991041799 ubox
62 68 0.007358634 ubox
62 70 0.011619244 ubox
62 75 0.752362266 ubox
62 76 0.576206943 ubox
63 67 0.008600896 ubox
63 69 0.013821747 ubox
63 73 0.471667351 ubox
63 74 0.658259200 ubox
64 72 0.587043101 ubox
66 72 0.550604961 ubox
67 71 0.448299246 ubox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
35 103 0.9500000 lbox
36 102 0.9500000 lbox
38 101 0.9500000 lbox
39 100 0.9500000 lbox
40 99 0.9500000 lbox
41 98 0.9500000 lbox
42 97 0.9500000 lbox
43 96 0.9500000 lbox
47 92 0.9500000 lbox
48 91 0.9500000 lbox
49 90 0.9500000 lbox
50 89 0.9500000 lbox
51 88 0.9500000 lbox
52 87 0.9500000 lbox
53 86 0.9500000 lbox
54 85 0.9500000 lbox
55 84 0.9500000 lbox
56 83 0.9500000 lbox
58 80 0.9500000 lbox
59 79 0.9500000 lbox
60 78 0.9500000 lbox
61 77 0.9500000 lbox
62 75 0.9500000 lbox
63 74 0.9500000 lbox
showpage
end
%%EOF
