%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZFP28)
} def

/sequence { (\
CGGGCGGGUGUGGCCAGGGGUGUGGGUCUGUGAGGGACCGGUCGGAAGGGCGUCGCGCGGCCUCGGGUGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.007708032 ubox
1 12 0.010802765 ubox
1 24 0.017445407 ubox
1 40 0.004121111 ubox
1 44 0.014217470 ubox
1 59 0.016594052 ubox
1 65 0.678126878 ubox
1 69 0.024640522 ubox
2 9 0.008400043 ubox
2 11 0.010461961 ubox
2 15 0.043326523 ubox
2 23 0.017547363 ubox
2 43 0.014203291 ubox
2 58 0.016822201 ubox
2 62 0.640428583 ubox
2 63 0.312422254 ubox
2 64 0.675673835 ubox
2 68 0.010587401 ubox
3 14 0.043294167 ubox
3 15 0.057947411 ubox
3 42 0.013460832 ubox
3 43 0.009861807 ubox
3 61 0.641753482 ubox
3 62 0.741136148 ubox
3 63 0.132754299 ubox
3 64 0.004458680 ubox
4 11 0.014859977 ubox
4 14 0.058126476 ubox
4 21 0.017461753 ubox
4 42 0.010202459 ubox
4 51 0.026707800 ubox
4 56 0.016836146 ubox
4 61 0.743445405 ubox
4 62 0.118541623 ubox
4 63 0.004227968 ubox
4 68 0.004492960 ubox
5 10 0.015431053 ubox
5 12 0.044874835 ubox
5 13 0.058021248 ubox
5 20 0.017444329 ubox
5 40 0.013420422 ubox
5 41 0.010481817 ubox
5 50 0.026724367 ubox
5 55 0.016837265 ubox
5 59 0.727905263 ubox
5 60 0.666299038 ubox
5 65 0.007244902 ubox
5 67 0.004627541 ubox
5 69 0.005262213 ubox
6 11 0.040015593 ubox
6 15 0.012484557 ubox
6 39 0.012800326 ubox
6 54 0.016727490 ubox
6 58 0.800986361 ubox
6 62 0.008721938 ubox
6 64 0.007292394 ubox
6 68 0.004438310 ubox
7 14 0.012480616 ubox
7 15 0.010443843 ubox
7 38 0.012493746 ubox
7 39 0.010589801 ubox
7 53 0.014034209 ubox
7 61 0.009278201 ubox
7 62 0.003885013 ubox
7 63 0.006432500 ubox
8 14 0.010529157 ubox
8 38 0.010811224 ubox
8 51 0.004862843 ubox
8 56 0.803677008 ubox
8 58 0.576469241 ubox
8 61 0.003866229 ubox
8 62 0.005298284 ubox
8 71 0.005983302 ubox
9 13 0.009862497 ubox
9 16 0.012043121 ubox
9 37 0.010946972 ubox
9 50 0.004813203 ubox
9 55 0.802834757 ubox
9 57 0.576758471 ubox
9 59 0.009158686 ubox
9 65 0.006897307 ubox
9 70 0.005853546 ubox
10 15 0.012032157 ubox
10 51 0.003283092 ubox
10 53 0.007813085 ubox
10 54 0.785115369 ubox
10 56 0.577180400 ubox
10 58 0.009543198 ubox
10 61 0.004753427 ubox
10 64 0.008695105 ubox
10 71 0.103918134 ubox
11 44 0.026354763 ubox
11 52 0.399190696 ubox
11 55 0.576117975 ubox
11 57 0.009533524 ubox
11 60 0.004743327 ubox
11 69 0.005435610 ubox
11 70 0.105456749 ubox
12 28 0.006068258 ubox
12 43 0.027048422 ubox
12 51 0.399768402 ubox
12 54 0.562624706 ubox
12 56 0.009471424 ubox
12 62 0.010713856 ubox
12 68 0.008861349 ubox
13 21 0.033850161 ubox
13 23 0.003177430 ubox
13 27 0.006086250 ubox
13 31 0.005180174 ubox
13 42 0.027078763 ubox
13 51 0.842360730 ubox
13 53 0.325818927 ubox
13 58 0.004746591 ubox
13 61 0.010920415 ubox
13 68 0.106399430 ubox
14 20 0.036006749 ubox
14 25 0.017704411 ubox
14 26 0.005733999 ubox
14 30 0.003744005 ubox
14 41 0.027089490 ubox
14 45 0.005534870 ubox
14 49 0.386652353 ubox
14 50 0.853652489 ubox
14 52 0.317824306 ubox
14 57 0.004732985 ubox
14 60 0.010921432 ubox
14 66 0.011852557 ubox
14 67 0.106518458 ubox
15 19 0.038385524 ubox
15 22 0.110051833 ubox
15 24 0.189609090 ubox
15 25 0.005365427 ubox
15 30 0.011815488 ubox
15 32 0.012199545 ubox
15 40 0.027111480 ubox
15 44 0.005857618 ubox
15 48 0.386637901 ubox
15 49 0.854650515 ubox
15 59 0.010914299 ubox
15 65 0.012944756 ubox
15 66 0.106090611 ubox
16 21 0.106267601 ubox
16 23 0.185203154 ubox
16 29 0.012417149 ubox
16 31 0.012298211 ubox
16 63 0.021405864 ubox
17 28 0.012424454 ubox
17 43 0.019985314 ubox
17 54 0.004296942 ubox
17 62 0.022898609 ubox
17 63 0.053042286 ubox
17 64 0.091259117 ubox
18 27 0.012215422 ubox
18 29 0.012335301 ubox
18 42 0.019625867 ubox
18 43 0.153858056 ubox
18 53 0.004277902 ubox
18 61 0.022869285 ubox
18 62 0.057289741 ubox
18 63 0.090715635 ubox
19 28 0.012379828 ubox
19 39 0.003819646 ubox
19 42 0.150686190 ubox
19 43 0.236713513 ubox
19 61 0.057306076 ubox
19 62 0.090812626 ubox
20 27 0.010003312 ubox
20 38 0.003808031 ubox
20 42 0.209719595 ubox
20 51 0.008293632 ubox
20 58 0.030975316 ubox
20 61 0.090489035 ubox
21 26 0.005865944 ubox
21 37 0.003734559 ubox
21 40 0.076137400 ubox
21 41 0.040088556 ubox
21 44 0.748763137 ubox
21 50 0.008035836 ubox
21 57 0.032336263 ubox
21 59 0.081462712 ubox
21 60 0.066371993 ubox
22 39 0.023457577 ubox
22 42 0.147984139 ubox
22 43 0.764512519 ubox
22 56 0.039413756 ubox
22 58 0.101599375 ubox
23 40 0.075825684 ubox
23 41 0.844981355 ubox
23 44 0.018549310 ubox
23 55 0.039402364 ubox
23 57 0.101713083 ubox
23 59 0.004761584 ubox
24 39 0.071570601 ubox
24 43 0.018922839 ubox
24 54 0.039211675 ubox
24 56 0.100812338 ubox
24 58 0.006386431 ubox
24 63 0.003221487 ubox
24 64 0.003162914 ubox
25 38 0.060014470 ubox
25 39 0.996413684 ubox
25 53 0.009858824 ubox
25 54 0.006178266 ubox
25 62 0.004149635 ubox
26 38 0.997897352 ubox
26 51 0.010659588 ubox
26 61 0.004170315 ubox
27 35 0.006331652 ubox
27 36 0.036089960 ubox
27 37 0.998193599 ubox
27 50 0.010658977 ubox
27 60 0.003463589 ubox
28 34 0.007984117 ubox
28 35 0.067051741 ubox
28 36 0.997388977 ubox
28 49 0.010639204 ubox
28 59 0.003492190 ubox
28 60 0.004005885 ubox
29 33 0.008474329 ubox
29 34 0.077526752 ubox
29 35 0.988005649 ubox
29 48 0.010417126 ubox
29 57 0.003471690 ubox
29 59 0.004274406 ubox
30 56 0.003813029 ubox
30 58 0.004578498 ubox
31 44 0.005414525 ubox
31 55 0.003856110 ubox
31 57 0.004575588 ubox
32 43 0.006270626 ubox
32 54 0.003925921 ubox
32 56 0.004514558 ubox
33 42 0.006251145 ubox
33 53 0.003908663 ubox
34 43 0.008027763 ubox
35 42 0.007524323 ubox
36 54 0.004494323 ubox
37 53 0.004546155 ubox
38 49 0.006025114 ubox
38 52 0.003572785 ubox
39 48 0.006089110 ubox
39 52 0.018039821 ubox
39 55 0.004833491 ubox
40 51 0.107619987 ubox
40 54 0.031221375 ubox
40 68 0.006277785 ubox
41 51 0.277130811 ubox
41 53 0.029287214 ubox
41 56 0.003174434 ubox
41 71 0.012824446 ubox
42 49 0.107693217 ubox
42 50 0.277290447 ubox
42 66 0.007662689 ubox
42 67 0.008630109 ubox
42 70 0.013179878 ubox
43 48 0.111209036 ubox
43 49 0.277207677 ubox
43 52 0.034016489 ubox
43 55 0.006267396 ubox
43 59 0.003292078 ubox
43 65 0.008577789 ubox
43 66 0.011690941 ubox
43 69 0.013242077 ubox
44 51 0.037432843 ubox
44 54 0.006463551 ubox
44 58 0.003276290 ubox
44 64 0.008328595 ubox
44 68 0.012966674 ubox
45 53 0.005577566 ubox
45 54 0.006938613 ubox
45 63 0.004102273 ubox
45 64 0.013738551 ubox
46 53 0.006618822 ubox
46 63 0.009812919 ubox
47 63 0.015261133 ubox
48 54 0.003390273 ubox
48 62 0.018924298 ubox
48 63 0.006572949 ubox
48 64 0.006642965 ubox
49 61 0.018928140 ubox
49 62 0.008610464 ubox
49 63 0.004393328 ubox
50 58 0.011929999 ubox
50 61 0.008633615 ubox
50 62 0.004373906 ubox
51 57 0.011946579 ubox
51 59 0.019328249 ubox
51 60 0.008375053 ubox
52 56 0.011261209 ubox
52 58 0.019720150 ubox
52 61 0.004444269 ubox
52 71 0.086017125 ubox
53 57 0.018449999 ubox
53 60 0.004469211 ubox
53 70 0.086905356 ubox
54 59 0.004813976 ubox
54 69 0.087094091 ubox
55 68 0.087071704 ubox
56 67 0.087101207 ubox
58 65 0.087062912 ubox
59 64 0.085883579 ubox
60 68 0.018663979 ubox
61 67 0.019250000 ubox
62 66 0.019160482 ubox
63 70 0.183323418 ubox
64 69 0.200887896 ubox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
showpage
end
%%EOF
