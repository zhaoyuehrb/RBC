%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST2H2AA3)
} def

/sequence { (\
CGACUUUCCCGAUCGCCAGGCAGGAGUUUCUCUCGGUGACUACUAUCGCUGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.087006889 ubox
1 15 0.044068869 ubox
1 35 0.015408111 ubox
1 48 0.070126758 ubox
1 51 0.019480941 ubox
2 8 0.048818823 ubox
2 10 0.088346191 ubox
2 14 0.047286687 ubox
2 28 0.771647878 ubox
2 29 0.056688944 ubox
2 30 0.163114437 ubox
2 32 0.070899099 ubox
2 34 0.017043192 ubox
2 47 0.074226646 ubox
2 50 0.016738119 ubox
2 53 0.382364595 ubox
3 7 0.042620574 ubox
3 13 0.045084023 ubox
3 27 0.827639527 ubox
3 28 0.049096384 ubox
3 29 0.148536191 ubox
3 31 0.064242003 ubox
3 33 0.014508634 ubox
3 46 0.072542164 ubox
3 52 0.385482044 ubox
4 19 0.006004035 ubox
4 20 0.007547753 ubox
4 23 0.058017333 ubox
4 24 0.048196769 ubox
4 26 0.838027694 ubox
4 51 0.385206580 ubox
5 12 0.027261207 ubox
5 18 0.005744122 ubox
5 19 0.007487304 ubox
5 22 0.057921543 ubox
5 23 0.049131284 ubox
5 24 0.085536664 ubox
5 25 0.826936553 ubox
5 26 0.054224552 ubox
6 11 0.025503210 ubox
6 12 0.011272920 ubox
6 18 0.006549277 ubox
6 22 0.047114995 ubox
6 23 0.181940989 ubox
6 24 0.790026086 ubox
6 25 0.106290096 ubox
6 26 0.146835231 ubox
6 39 0.004772227 ubox
7 11 0.010938505 ubox
7 20 0.008930451 ubox
7 22 0.231890624 ubox
7 23 0.682485194 ubox
7 24 0.136330045 ubox
7 25 0.171310223 ubox
7 38 0.004888149 ubox
7 39 0.021488728 ubox
8 19 0.010277389 ubox
8 20 0.131486847 ubox
8 23 0.157665269 ubox
8 24 0.174593884 ubox
8 38 0.022844409 ubox
9 19 0.126943016 ubox
9 20 0.834207152 ubox
9 23 0.165963030 ubox
9 24 0.138462829 ubox
9 36 0.026346047 ubox
10 19 0.837489283 ubox
10 23 0.144381955 ubox
10 35 0.026794776 ubox
10 48 0.394196264 ubox
10 51 0.004985254 ubox
11 28 0.007306630 ubox
11 29 0.008275440 ubox
11 30 0.033025914 ubox
11 32 0.007231129 ubox
11 34 0.026775341 ubox
11 47 0.398946045 ubox
11 50 0.003784442 ubox
11 53 0.033046192 ubox
12 27 0.007802098 ubox
12 28 0.009246293 ubox
12 29 0.032736200 ubox
12 31 0.007051896 ubox
12 33 0.024440679 ubox
12 37 0.008252323 ubox
12 46 0.397707570 ubox
12 52 0.033254030 ubox
13 20 0.181504250 ubox
13 24 0.009368311 ubox
13 25 0.009412171 ubox
13 26 0.007423636 ubox
13 36 0.008385680 ubox
13 39 0.413196143 ubox
13 45 0.188819544 ubox
13 51 0.030722654 ubox
14 19 0.197904939 ubox
14 23 0.018944099 ubox
14 24 0.009815665 ubox
14 35 0.009092916 ubox
14 38 0.460273620 ubox
14 51 0.004700468 ubox
15 21 0.070446952 ubox
15 27 0.004307660 ubox
15 34 0.009130508 ubox
15 37 0.460605696 ubox
15 49 0.030789437 ubox
15 52 0.011533353 ubox
16 20 0.070047615 ubox
16 24 0.046054883 ubox
16 26 0.004159420 ubox
16 36 0.460814492 ubox
16 48 0.030703463 ubox
16 51 0.011361073 ubox
17 23 0.046405282 ubox
17 35 0.460213108 ubox
17 38 0.004383381 ubox
17 51 0.026572596 ubox
18 29 0.035087130 ubox
18 31 0.025574773 ubox
18 33 0.122985571 ubox
18 37 0.004221731 ubox
18 41 0.029594978 ubox
18 44 0.006430955 ubox
18 50 0.026467556 ubox
19 28 0.037853456 ubox
19 30 0.025978500 ubox
19 31 0.012710188 ubox
19 32 0.122605455 ubox
19 33 0.383542358 ubox
19 34 0.181136365 ubox
19 40 0.030206950 ubox
19 41 0.014346920 ubox
19 43 0.006320215 ubox
19 44 0.003498790 ubox
19 47 0.027178575 ubox
19 49 0.024614575 ubox
19 50 0.021408772 ubox
19 53 0.054718652 ubox
20 27 0.045728091 ubox
20 29 0.022810504 ubox
20 30 0.026657926 ubox
20 31 0.083464265 ubox
20 32 0.390271332 ubox
20 33 0.153125122 ubox
20 37 0.033156982 ubox
20 40 0.015218064 ubox
20 43 0.003579239 ubox
20 46 0.026666385 ubox
20 49 0.024843146 ubox
20 52 0.057248065 ubox
21 26 0.047628618 ubox
21 36 0.033460827 ubox
21 38 0.031857381 ubox
21 48 0.026627859 ubox
21 51 0.057863451 ubox
22 28 0.016743401 ubox
22 29 0.057805070 ubox
22 31 0.412521518 ubox
22 33 0.035489203 ubox
22 37 0.031937974 ubox
22 41 0.003351979 ubox
22 44 0.037641729 ubox
22 50 0.056083369 ubox
23 27 0.012196417 ubox
23 28 0.048223090 ubox
23 29 0.015622171 ubox
23 30 0.415886675 ubox
23 31 0.099799783 ubox
23 32 0.038316162 ubox
23 33 0.163743145 ubox
23 34 0.028369436 ubox
23 40 0.003425150 ubox
23 43 0.038157814 ubox
23 44 0.024805268 ubox
23 47 0.007614992 ubox
23 49 0.054608571 ubox
24 28 0.013573212 ubox
24 29 0.327097601 ubox
24 30 0.112108021 ubox
24 31 0.027561730 ubox
24 32 0.184391753 ubox
24 33 0.006235204 ubox
24 34 0.121898198 ubox
24 43 0.027067314 ubox
24 46 0.007449804 ubox
24 47 0.039763791 ubox
25 29 0.098915667 ubox
25 31 0.184835838 ubox
25 33 0.124674138 ubox
25 41 0.044745399 ubox
25 44 0.018669743 ubox
25 46 0.035002313 ubox
25 52 0.003175474 ubox
26 30 0.180887167 ubox
26 32 0.124948029 ubox
26 40 0.054098640 ubox
26 43 0.025281347 ubox
26 46 0.008029015 ubox
27 39 0.054000259 ubox
27 42 0.025005011 ubox
27 45 0.008218336 ubox
28 38 0.051210065 ubox
29 36 0.013757007 ubox
29 39 0.021416895 ubox
30 35 0.017858798 ubox
30 36 0.048257560 ubox
30 38 0.021805873 ubox
31 35 0.043497383 ubox
31 39 0.028082599 ubox
32 38 0.028934999 ubox
33 39 0.006220480 ubox
34 38 0.006342272 ubox
34 48 0.049523737 ubox
34 51 0.849608673 ubox
35 44 0.014888259 ubox
35 47 0.056894848 ubox
35 50 0.877090647 ubox
36 43 0.015687327 ubox
36 46 0.056874583 ubox
36 49 0.880790725 ubox
37 42 0.014683485 ubox
37 45 0.056809623 ubox
37 48 0.880484355 ubox
38 44 0.054520189 ubox
38 47 0.880664779 ubox
38 53 0.021016083 ubox
39 46 0.814972051 ubox
39 52 0.025802403 ubox
40 51 0.028687404 ubox
41 51 0.005034071 ubox
42 50 0.005833674 ubox
42 52 0.046009799 ubox
43 51 0.049710852 ubox
44 51 0.008070155 ubox
45 50 0.009015024 ubox
45 52 0.006529670 ubox
46 51 0.006399908 ubox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
34 51 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
showpage
end
%%EOF
