%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUCACCGCUGCCAGUCGCGCUGCCUGCCCGUCCCACCCUUUUCGUGCAGGCAUUCAGCUAAAUGACGGGCGGAGCCCGGCGGCGGCUUCCGGUCGGGGGAAAAAAGUUGGGCCGAAGGAGGGGCCGGGAAGACGCAAGAGGAAGAAGAGAAAACGGCCGGGCGGCGGUGGCUGUAGGUUGUGCGGCUGCAGCGGCUCUUCCCUGGGCGGACG\
) } def
/len { sequence length } bind def

/coor [
[-53.47571945 207.49737549]
[-60.59067917 220.70257568]
[-72.58869171 229.70521545]
[-87.25649261 232.84458923]
[-101.88831329 229.54156494]
[-113.78501129 220.40545654]
[-120.75201416 207.12159729]
[-121.50411987 192.14047241]
[-115.90258026 178.22563171]
[-104.98334503 167.94551086]
[-119.85501862 169.90341187]
[-134.72668457 171.86129761]
[-149.59835815 173.81919861]
[-164.47003174 175.77708435]
[-179.34170532 177.73498535]
[-187.43786621 181.95631409]
[-194.44372559 179.61157227]
[-209.34230042 181.35296631]
[-224.24087524 183.09436035]
[-239.13945007 184.83575439]
[-251.94807434 194.12284851]
[-265.48751831 187.91540527]
[-280.38610840 189.65679932]
[-295.28466797 191.39819336]
[-303.44137573 195.50132751]
[-310.41238403 193.05494690]
[-325.33471680 194.57946777]
[-333.55023193 198.56355286]
[-340.48492432 196.01603699]
[-355.42785645 197.32336426]
[-370.37075806 198.63070679]
[-385.31369019 199.93804932]
[-400.25659180 201.24537659]
[-415.19952393 202.55271912]
[-430.14245605 203.86004639]
[-440.14050293 225.20738220]
[-469.27716064 230.16146851]
[-483.51580811 234.87963867]
[-497.75445557 239.59780884]
[-503.35940552 254.19639587]
[-517.06182861 261.73150635]
[-532.39184570 258.64529419]
[-542.11108398 246.39495850]
[-541.63043213 230.76477051]
[-531.17681885 219.13479614]
[-515.68615723 216.99636841]
[-502.47262573 225.35917664]
[-488.23397827 220.64100647]
[-473.99533081 215.92283630]
[-474.86602783 208.47354126]
[-476.60742188 193.57496643]
[-477.47811890 186.12567139]
[-492.42105103 184.81834412]
[-507.36395264 183.51100159]
[-520.52844238 192.68031311]
[-535.86352539 187.96694946]
[-541.60540771 172.98661804]
[-533.34942627 159.23094177]
[-517.42889404 157.25210571]
[-506.05664062 168.56808472]
[-491.11370850 169.87542725]
[-476.17077637 171.18275452]
[-463.58413696 166.76103210]
[-451.28430176 167.43574524]
[-441.11193848 172.35720825]
[-434.32586670 180.09004211]
[-431.44979858 188.91712952]
[-416.50686646 187.60978699]
[-401.56393433 186.30245972]
[-386.62103271 184.99511719]
[-371.67810059 183.68778992]
[-356.73516846 182.38044739]
[-341.79226685 181.07312012]
[-326.85925293 179.65715027]
[-311.93692017 178.13261414]
[-297.02606201 176.49961853]
[-282.12750244 174.75822449]
[-267.22891235 173.01683044]
[-255.48594666 163.85429382]
[-240.88084412 169.93717957]
[-225.98226929 168.19578552]
[-211.08369446 166.45439148]
[-196.18511963 164.71299744]
[-181.29960632 162.86331177]
[-166.42793274 160.90541077]
[-151.55625916 158.94752502]
[-136.68458557 156.98962402]
[-121.81291199 155.03173828]
[-106.94123840 153.07383728]
[-98.79184723 146.55990601]
[-87.28389740 148.86566162]
[-72.91405487 144.56361389]
[-58.54421234 140.26155090]
[-44.17436981 135.95950317]
[-34.20085907 124.89703369]
[-18.76135826 128.35134888]
[-4.39151478 124.04930115]
[9.97832775 119.74725342]
[24.34817123 115.44520569]
[38.71801376 111.14315796]
[53.08785629 106.84111023]
[67.45769501 102.53906250]
[81.82753754 98.23701477]
[67.06568909 100.89929962]
[52.67658615 96.66211700]
[41.71338272 86.42453003]
[36.50230408 72.35880280]
[38.14905930 57.44947433]
[46.30423355 44.86006927]
[59.23742676 37.26187515]
[74.20440674 36.26711273]
[88.02940369 42.08685303]
[97.77896881 53.48624039]
[101.38438416 68.04649353]
[98.08072662 82.67797089]
[103.00548553 68.50945282]
[95.89397430 54.39556503]
[100.92467499 39.41332245]
[115.11296082 32.45142746]
[130.04118347 37.64024353]
[136.85267639 51.90134811]
[131.50631714 66.77387238]
[117.17400360 73.43421173]
[112.24924469 87.60272980]
[123.94750977 96.99157715]
[136.71426392 89.11692810]
[149.48101807 81.24227905]
[162.24775696 73.36763000]
[175.01451111 65.49298096]
[170.04277039 51.27693939]
[168.24374390 36.32442856]
[169.70158386 21.33480644]
[174.34809875 7.00916481]
[181.96595764 -5.98246098]
[192.19885254 -17.03242874]
[204.56819153 -25.62391090]
[218.49542236 -31.35506821]
[233.32916260 -33.95784378]
[248.37559509 -33.31050110]
[262.93096924 -29.44331932]
[276.31451416 -22.53717232]
[287.90023804 -12.91507149]
[297.14627075 -1.02706277]
[303.62017822 12.57083225]
[307.01913452 27.24261284]
[307.18417358 42.30205536]
[304.10757446 57.04480362]
[297.93322754 70.78131104]
[288.94995117 82.86909485]
[277.57785034 92.74279022]
[264.34887695 99.94058228]
[249.88174438 104.12582397]
[234.85311890 105.10275269]
[219.96591187 102.82569122]
[205.91642761 97.40113068]
[193.36177063 89.08278656]
[182.88916016 78.25973511]
[170.12240601 86.13438416]
[157.35565186 94.00903320]
[144.58891296 101.88368225]
[131.82215881 109.75833130]
[131.82215881 124.75833130]
[144.58891296 132.63298035]
[157.35565186 140.50762939]
[170.12240601 148.38227844]
[185.92987061 149.04170227]
[192.70036316 162.30856323]
[205.46711731 170.18321228]
[221.27456665 170.84263611]
[228.04505920 184.10949707]
[240.81181335 191.98414612]
[253.57856750 199.85879517]
[266.34530640 207.73344421]
[279.11206055 215.60809326]
[291.87881470 223.48274231]
[304.64556885 231.35739136]
[317.41232300 239.23204041]
[330.17904663 247.10668945]
[346.05844116 244.82090759]
[357.64700317 255.91526794]
[356.05496216 271.87915039]
[342.50363159 280.46640015]
[327.38842773 275.08963013]
[322.30441284 259.87344360]
[309.53765869 251.99879456]
[296.77090454 244.12414551]
[284.00415039 236.24949646]
[271.23739624 228.37484741]
[258.47067261 220.50019836]
[245.70391846 212.62554932]
[232.93716431 204.75090027]
[220.17041016 196.87625122]
[205.27612305 196.78007507]
[197.59246826 182.94996643]
[184.82571411 175.07531738]
[169.93141174 174.97914124]
[162.24775696 161.14903259]
[149.48101807 153.27438354]
[136.71426392 145.39973450]
[123.94750977 137.52508545]
[86.12959290 112.60685730]
[71.75975037 116.90890503]
[57.38990402 121.21095276]
[43.02006149 125.51300049]
[28.65021896 129.81504822]
[14.28037643 134.11709595]
[-0.08946646 138.41914368]
[-14.45930958 142.72119141]
[-25.46064758 154.09138489]
[-39.87232208 150.32934570]
[-54.24216461 154.63139343]
[-68.61200714 158.93345642]
[-82.98184967 163.23550415]
[-68.80838776 168.14598083]
[-58.00205994 178.54902649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 89]
[11 88]
[12 87]
[13 86]
[14 85]
[15 84]
[17 83]
[18 82]
[19 81]
[20 80]
[22 78]
[23 77]
[24 76]
[26 75]
[27 74]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[37 49]
[38 48]
[39 47]
[52 62]
[53 61]
[54 60]
[91 213]
[92 212]
[93 211]
[94 210]
[96 208]
[97 207]
[98 206]
[99 205]
[100 204]
[101 203]
[102 202]
[103 201]
[115 124]
[116 123]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[162 200]
[163 199]
[164 198]
[165 197]
[167 195]
[168 194]
[170 192]
[171 191]
[172 190]
[173 189]
[174 188]
[175 187]
[176 186]
[177 185]
[178 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
