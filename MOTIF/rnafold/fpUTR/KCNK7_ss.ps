%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCCACCAUCCCAGCUGCUGUGAAAUGGGCAAAUGUCUUGCCUCCAGGACCUGGGAAGGGUGAUGCAGCUCACCUCCCUCCUGUUCACACCCCAGCCACCCCAGCCAUCCCAGCCGGGUCCCAGCCACCCACACAGCACCUCCUCCUGGCCCCGCCCUGCCCAGCCCCUCCCAGGUGCCUGAGGUGGAGCCGCCAGUUCCCACAGCACCCCAGCGGCCUGCC\
) } def
/len { sequence length } bind def

/coor [
[86.73980713 209.74851990]
[94.03600311 196.64259338]
[106.73686218 188.66209412]
[121.71059418 187.77485657]
[135.26406860 194.19888306]
[128.97227478 180.58222961]
[122.68049622 166.96556091]
[116.38871765 153.34890747]
[110.09693909 139.73223877]
[100.50003815 140.99206543]
[90.87527466 139.96672058]
[81.75917053 136.71336365]
[73.65993500 131.41337585]
[67.02906799 124.36219788]
[62.23620987 115.95291138]
[59.54855728 106.65430450]
[44.55184555 106.34017181]
[29.55513573 106.02603912]
[14.55842590 105.71189880]
[-2.66115117 116.20542145]
[-18.74100685 105.45598602]
[-33.74064255 105.56070709]
[-48.74027634 105.66542053]
[-63.73991013 105.77014160]
[-78.73954773 105.87486267]
[-93.73918152 105.97958374]
[-89.30643463 117.62823486]
[-91.42459106 132.02828979]
[-101.09759521 146.06440735]
[-113.98199463 153.74504089]
[-126.86639404 161.42568970]
[-139.75079346 169.10633850]
[-152.63519287 176.78697205]
[-165.51959229 184.46762085]
[-170.83316040 199.60516357]
[-186.02798462 204.75270081]
[-199.44787598 195.96145630]
[-200.79826355 179.97532654]
[-189.04322815 169.05751038]
[-173.20022583 171.58322144]
[-160.31582642 163.90257263]
[-147.43142700 156.22193909]
[-134.54702759 148.54129028]
[-121.66263580 140.86064148]
[-108.77823639 133.18000793]
[-110.76217651 118.31111145]
[-112.74592590 103.44354248]
[-127.19336700 99.40974426]
[-141.64080811 95.37594604]
[-156.08824158 91.34214783]
[-170.53569031 87.30834961]
[-175.57188416 88.60217285]
[-180.14591980 87.91046143]
[-183.58064270 85.73969269]
[-185.49693298 82.79128265]
[-199.76278687 78.15602875]
[-214.02862549 73.52077484]
[-228.29447937 68.88552094]
[-234.81393433 69.88185120]
[-240.07272339 67.76104736]
[-242.89073181 63.91654587]
[-257.02160645 58.88477325]
[-271.15246582 53.85300064]
[-285.28332520 48.82122421]
[-299.41418457 43.78945160]
[-313.58145142 50.79401779]
[-328.52520752 45.65015411]
[-335.37960815 31.40961647]
[-330.07803345 16.52106857]
[-315.76583862 9.81762028]
[-300.93417358 15.27630806]
[-294.38241577 29.65859032]
[-280.25155640 34.69036484]
[-266.12069702 39.72213745]
[-251.98982239 44.75391006]
[-237.85896301 49.78568268]
[-223.65922546 54.61967087]
[-209.39337158 59.25492477]
[-195.12753296 63.89017868]
[-180.86167908 68.52543640]
[-166.50189209 72.86090851]
[-152.05444336 76.89470673]
[-137.60700989 80.92850494]
[-123.15956879 84.96230316]
[-108.71213531 88.99610138]
[-93.84389496 90.97994995]
[-78.84426117 90.87522888]
[-63.84463120 90.77050781]
[-48.84499359 90.66578674]
[-33.84535980 90.56107330]
[-18.84572601 90.45635223]
[-12.36362743 82.57327271]
[-2.40482140 79.48946381]
[7.81950045 82.45166779]
[14.87256145 90.71518707]
[29.86927223 91.02932739]
[44.86598206 91.34346008]
[59.86269379 91.65760040]
[63.61004257 77.13757324]
[72.65563965 64.31565857]
[86.22647858 55.12918854]
[102.84460449 51.16489792]
[102.21646881 36.17805481]
[101.58833313 21.19121361]
[93.27993011 7.72715044]
[100.47747803 -5.31296206]
[99.84934235 -20.29980469]
[87.35028076 -29.69701195]
[83.86623383 -44.94153214]
[91.04225159 -58.83536911]
[105.49005127 -64.81827545]
[120.38780975 -60.06531143]
[128.70127869 -46.82067871]
[126.50507355 -31.33808327]
[114.83618927 -20.92793846]
[115.46431732 -5.94109678]
[123.72779846 6.45100689]
[116.57517242 20.56307793]
[117.20330811 35.54991913]
[117.83144379 50.53676224]
[123.86814880 54.98740387]
[130.50198364 41.53406906]
[137.13581848 28.08073425]
[143.76965332 14.62739849]
[144.48027039 -0.35575944]
[153.72621155 -12.16729641]
[168.10043335 -16.45473480]
[182.30609131 -11.63817978]
[191.10850525 0.50749749]
[191.26403809 15.50669098]
[182.71537781 27.83229065]
[168.61155701 32.94243240]
[157.72155762 43.25785065]
[146.83155823 53.57326889]
[135.94155884 63.88868713]
[141.97825623 68.33933258]
[156.48060608 64.50764465]
[170.98295593 60.67595673]
[185.45820618 56.74311829]
[199.90563965 52.70932388]
[214.35308838 48.67552567]
[228.80052185 44.64172745]
[243.24795532 40.60792923]
[245.13656616 25.55107498]
[252.62576294 12.39983845]
[264.54724121 3.14284992]
[279.06527710 -0.83386827]
[293.95932007 1.04563999]
[306.96362305 8.46407127]
[316.11199951 20.26392365]
[330.55944824 16.23012733]
[345.00686646 12.19632912]
[350.49957275 -2.19591212]
[363.26443481 -10.49719048]
[378.29202271 -9.69971561]
[389.83032227 -0.31860414]
[404.27777100 -4.35240126]
[417.90744019 -14.43546581]
[431.36953735 -4.12971020]
[425.19320679 11.65918827]
[408.31158447 10.09503746]
[393.86413574 14.12883472]
[388.85433960 28.13026237]
[376.41339111 36.59708405]
[361.19448853 36.10902023]
[349.04067993 26.64376831]
[334.59323120 30.67756462]
[320.14581299 34.71136093]
[318.43325806 49.54364014]
[311.15277100 62.62569046]
[299.38656616 71.94886780]
[284.90832520 76.06805420]
[269.91574097 74.32560730]
[256.69705200 66.95611572]
[247.28175354 55.05537033]
[232.83432007 59.08916473]
[218.38688660 63.12296295]
[203.93943787 67.15676117]
[189.49200439 71.19055939]
[183.90055847 76.01186371]
[174.81465149 75.17830658]
[160.31230164 79.00999451]
[145.80995178 82.84168243]
[142.97776794 113.19081116]
[123.71360016 133.44046021]
[130.00538635 147.05712891]
[136.29716492 160.67378235]
[142.58894348 174.29045105]
[148.88072205 187.90710449]
[158.47587585 195.27262878]
[158.68632507 206.04219055]
[166.63511658 218.76290894]
[174.58390808 231.48364258]
[182.53269958 244.20436096]
[190.48147583 256.92507935]
[205.08799744 253.03392029]
[220.19245911 253.62265015]
[234.45179749 258.63891602]
[246.59806824 267.63665771]
[255.55123901 279.81582642]
[260.51519775 294.09344482]
[261.04855347 309.19995117]
[257.10388184 323.79211426]
[249.03195190 336.57238770]
[237.55050659 346.40435791]
[223.68045044 352.41375732]
[208.65512085 354.06628418]
[193.81054688 351.21493530]
[180.46670532 344.11328125]
[169.81011963 333.39282227]
[162.78837585 320.00677490]
[160.02581787 305.14541626]
[161.76811218 290.13021851]
[167.86033630 276.29635620]
[177.76075745 264.87387085]
[169.81196594 252.15315247]
[161.86318970 239.43241882]
[153.91439819 226.71170044]
[145.96560669 213.99098206]
[143.91915894 228.85072327]
[134.97720337 240.89404297]
[121.34463501 247.15129089]
[106.38297272 246.07955933]
[93.78145599 237.94311523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[16 98]
[17 97]
[18 96]
[19 95]
[21 91]
[22 90]
[23 89]
[24 88]
[25 87]
[26 86]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[47 85]
[48 84]
[49 83]
[50 82]
[51 81]
[55 80]
[56 79]
[57 78]
[58 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[102 120]
[103 119]
[104 118]
[106 116]
[107 115]
[136 183]
[137 182]
[138 181]
[139 179]
[140 178]
[141 177]
[142 176]
[143 175]
[150 168]
[151 167]
[152 166]
[156 162]
[157 161]
[191 219]
[192 218]
[193 217]
[194 216]
[195 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
