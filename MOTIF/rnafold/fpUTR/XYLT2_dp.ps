%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (XYLT2)
} def

/sequence { (\
CCCGCCUCCCUAGGCGUGGAGGAGGGGGGGCGGCUCAGCCCCGCGCCCGUGCGCGCGCUCGCGGCCGGGUUGCAGGGCUGGGCGCGCGCCCCGCGUCCCGGGCAGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.157807739 ubox
1 22 0.008783807 ubox
1 25 0.006549874 ubox
1 26 0.113915178 ubox
1 27 0.010050611 ubox
1 28 0.101401688 ubox
1 29 0.901270207 ubox
1 101 0.019606112 ubox
1 102 0.133408485 ubox
1 106 0.078327590 ubox
2 18 0.158695585 ubox
2 19 0.007224064 ubox
2 21 0.008793902 ubox
2 24 0.007489937 ubox
2 25 0.124926035 ubox
2 26 0.010982445 ubox
2 27 0.101967161 ubox
2 28 0.904225983 ubox
2 29 0.008435042 ubox
2 100 0.019610500 ubox
2 101 0.135274094 ubox
2 102 0.006262854 ubox
2 105 0.078463334 ubox
2 106 0.068415840 ubox
3 16 0.165311842 ubox
3 18 0.006859115 ubox
3 24 0.128575015 ubox
3 25 0.011000748 ubox
3 26 0.102069470 ubox
3 27 0.904146713 ubox
3 28 0.007716209 ubox
3 95 0.047032784 ubox
3 100 0.134986889 ubox
3 101 0.006282341 ubox
3 105 0.068518032 ubox
4 15 0.173564642 ubox
4 17 0.004845583 ubox
4 94 0.048567788 ubox
4 96 0.004289189 ubox
4 99 0.121039594 ubox
4 103 0.088883739 ubox
5 14 0.173697985 ubox
5 16 0.004816779 ubox
5 22 0.149647947 ubox
5 25 0.915078601 ubox
5 26 0.009297236 ubox
5 93 0.048168343 ubox
5 95 0.006993868 ubox
5 102 0.088511578 ubox
5 106 0.298319277 ubox
6 13 0.173645910 ubox
6 14 0.003514093 ubox
6 21 0.150067813 ubox
6 24 0.918652511 ubox
6 25 0.007247351 ubox
6 101 0.086032750 ubox
6 102 0.003909559 ubox
6 105 0.299292459 ubox
6 106 0.005731411 ubox
6 109 0.040257511 ubox
7 12 0.156439065 ubox
7 13 0.003546981 ubox
7 14 0.007084077 ubox
7 20 0.150463242 ubox
7 22 0.003469447 ubox
7 23 0.918799556 ubox
7 24 0.004174408 ubox
7 100 0.060435606 ubox
7 101 0.003425700 ubox
7 104 0.297896235 ubox
7 105 0.005231623 ubox
7 107 0.022338648 ubox
7 108 0.039995699 ubox
8 13 0.009576129 ubox
8 14 0.021869002 ubox
8 19 0.150216014 ubox
8 21 0.007773428 ubox
8 22 0.918886546 ubox
8 24 0.005041317 ubox
8 100 0.018678568 ubox
8 101 0.006527971 ubox
8 102 0.293473902 ubox
8 106 0.022617347 ubox
9 13 0.021979293 ubox
9 18 0.149523844 ubox
9 19 0.030531888 ubox
9 21 0.918412154 ubox
9 22 0.020563385 ubox
9 100 0.007982481 ubox
9 101 0.293665541 ubox
9 102 0.067589960 ubox
9 105 0.021142467 ubox
9 106 0.064284215 ubox
10 18 0.037965747 ubox
10 19 0.916908496 ubox
10 21 0.027424499 ubox
10 100 0.293313891 ubox
10 101 0.067696604 ubox
10 105 0.064858373 ubox
10 106 0.009095147 ubox
11 18 0.914003484 ubox
11 20 0.032608437 ubox
11 100 0.062827630 ubox
11 104 0.061024589 ubox
11 105 0.009038279 ubox
12 17 0.882268890 ubox
13 97 0.291840619 ubox
13 98 0.073948062 ubox
13 99 0.013653617 ubox
14 96 0.293038970 ubox
14 97 0.073585257 ubox
14 98 0.010692194 ubox
14 103 0.062890376 ubox
15 95 0.302312311 ubox
15 100 0.063283013 ubox
15 102 0.063056384 ubox
16 94 0.302225732 ubox
16 99 0.082972730 ubox
16 103 0.010055391 ubox
17 93 0.300889169 ubox
17 100 0.064370605 ubox
17 102 0.010116951 ubox
17 104 0.006619443 ubox
18 92 0.124657785 ubox
18 97 0.003206076 ubox
18 98 0.100041527 ubox
18 99 0.066238855 ubox
18 103 0.007312834 ubox
19 91 0.088281021 ubox
19 97 0.102045223 ubox
19 98 0.063971639 ubox
20 96 0.102869098 ubox
21 90 0.008026305 ubox
21 92 0.004564585 ubox
21 97 0.050395865 ubox
21 98 0.113904689 ubox
21 99 0.026094511 ubox
22 89 0.006436095 ubox
22 91 0.003406569 ubox
22 96 0.043890876 ubox
22 97 0.117051109 ubox
22 98 0.025116843 ubox
23 96 0.113447162 ubox
24 91 0.004681971 ubox
24 92 0.041138372 ubox
24 97 0.009659824 ubox
24 98 0.005326652 ubox
24 99 0.007524205 ubox
25 90 0.006407061 ubox
25 91 0.038296726 ubox
25 92 0.355419135 ubox
25 96 0.003550678 ubox
25 97 0.005043895 ubox
25 98 0.007534638 ubox
26 89 0.006216150 ubox
26 90 0.034581114 ubox
26 91 0.368624291 ubox
26 92 0.113083815 ubox
26 97 0.007235144 ubox
27 89 0.028823906 ubox
27 90 0.381842591 ubox
27 91 0.116262457 ubox
27 92 0.102729394 ubox
28 89 0.382529816 ubox
28 90 0.116761985 ubox
28 91 0.102879604 ubox
29 89 0.116993875 ubox
29 90 0.103083306 ubox
30 85 0.091301545 ubox
30 87 0.989467437 ubox
30 89 0.103413910 ubox
31 84 0.091254907 ubox
31 86 0.990232720 ubox
31 88 0.103236132 ubox
32 83 0.066170210 ubox
32 85 0.986587188 ubox
32 87 0.101990563 ubox
33 83 0.996933617 ubox
33 85 0.015160310 ubox
34 81 0.020499935 ubox
34 82 0.999667768 ubox
34 84 0.013967727 ubox
35 80 0.003181130 ubox
35 81 0.999102637 ubox
36 80 0.999917385 ubox
37 79 0.999752103 ubox
38 78 0.999989003 ubox
39 77 0.999747513 ubox
40 76 0.999498808 ubox
40 77 0.022212922 ubox
41 75 0.998789890 ubox
41 76 0.031410709 ubox
42 72 0.011377868 ubox
42 75 0.038448588 ubox
43 71 0.010906177 ubox
43 73 0.998570732 ubox
44 72 0.999063113 ubox
45 70 0.704023656 ubox
45 71 0.702988972 ubox
46 69 0.999830440 ubox
47 68 0.999917116 ubox
47 69 0.012280993 ubox
48 67 0.999901797 ubox
48 68 0.012054046 ubox
49 65 0.022673526 ubox
49 66 0.998971380 ubox
50 63 0.013927284 ubox
50 64 0.030084607 ubox
51 62 0.017520093 ubox
51 65 0.848359585 ubox
51 66 0.003193711 ubox
52 61 0.017528125 ubox
52 63 0.559391279 ubox
52 64 0.827717231 ubox
53 60 0.016811341 ubox
53 62 0.588916024 ubox
53 65 0.009959432 ubox
54 61 0.589037186 ubox
54 63 0.804655241 ubox
54 64 0.007753529 ubox
55 60 0.551043806 ubox
55 62 0.807713569 ubox
56 61 0.806561593 ubox
56 63 0.006036564 ubox
57 62 0.005929730 ubox
84 96 0.011319008 ubox
85 95 0.012349504 ubox
86 94 0.014209482 ubox
86 96 0.010802401 ubox
86 103 0.003311901 ubox
87 93 0.014216034 ubox
87 95 0.011901648 ubox
88 92 0.013315851 ubox
88 94 0.015083514 ubox
88 103 0.896083501 ubox
89 93 0.014979960 ubox
89 102 0.881162367 ubox
89 106 0.030820780 ubox
90 101 0.865019554 ubox
90 102 0.208027100 ubox
90 105 0.026945168 ubox
90 106 0.073946649 ubox
91 100 0.848114839 ubox
91 101 0.268700009 ubox
91 102 0.019648257 ubox
91 105 0.074273343 ubox
91 106 0.055762106 ubox
92 100 0.316857146 ubox
92 101 0.019945156 ubox
92 105 0.056189086 ubox
93 99 0.350718821 ubox
93 103 0.126203200 ubox
94 100 0.025757538 ubox
94 102 0.126348810 ubox
95 99 0.037142718 ubox
95 103 0.043341433 ubox
96 102 0.043310957 ubox
96 107 0.109629454 ubox
97 101 0.041953919 ubox
97 106 0.116771783 ubox
98 105 0.115964865 ubox
98 106 0.098922121 ubox
99 105 0.102645174 ubox
1 29 0.9500000 lbox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
30 87 0.9500000 lbox
31 86 0.9500000 lbox
32 85 0.9500000 lbox
33 83 0.9500000 lbox
34 82 0.9500000 lbox
35 81 0.9500000 lbox
36 80 0.9500000 lbox
37 79 0.9500000 lbox
38 78 0.9500000 lbox
39 77 0.9500000 lbox
40 76 0.9500000 lbox
41 75 0.9500000 lbox
43 73 0.9500000 lbox
44 72 0.9500000 lbox
45 71 0.9500000 lbox
46 69 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
49 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
88 103 0.9500000 lbox
89 102 0.9500000 lbox
90 101 0.9500000 lbox
91 100 0.9500000 lbox
showpage
end
%%EOF
