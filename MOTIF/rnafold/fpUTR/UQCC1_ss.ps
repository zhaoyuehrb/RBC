%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGGAGAGCGUGCCCGGGCACGACAGCCUGGUGCACAGCCGAGAAAACAACAGCGCGUGCGCGUAGCGACCUCUUUGCGCCUGCGCCCCCCUUGCCAGUCUUUCGCCGGCAAAAGGAGGACGUAGAAAAGGGGACACCGGAAACUCACUCUUCACCCGGAAAUGGUUAUUGAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[67.98007202 112.66494751]
[53.16474533 115.01146698]
[38.34941864 117.35797882]
[23.53409576 119.70449829]
[8.71877003 122.05101776]
[-6.09655476 124.39752960]
[-20.91188049 126.74404907]
[-35.72720337 129.09056091]
[-50.24770737 155.37721252]
[-85.66593170 154.67671204]
[-97.32312012 164.11651611]
[-108.89749146 173.65768433]
[-120.38815308 183.29949951]
[-131.87882996 192.94131470]
[-143.36949158 202.58312988]
[-154.77557373 212.32484436]
[-166.09622192 222.16574097]
[-177.41687012 232.00662231]
[-188.73750305 241.84750366]
[-200.05815125 251.68840027]
[-211.37879944 261.52926636]
[-212.23109436 277.31057739]
[-224.04844666 287.80465698]
[-239.81983948 286.78555298]
[-250.18838501 274.85791016]
[-249.00260925 259.09817505]
[-236.96600342 248.85629272]
[-221.21968079 250.20863342]
[-209.89903259 240.36775208]
[-198.57839966 230.52687073]
[-187.25775146 220.68597412]
[-175.93710327 210.84509277]
[-164.61647034 201.00421143]
[-161.62271118 194.22393799]
[-153.01130676 191.09246826]
[-141.52062988 181.45065308]
[-130.02996826 171.80883789]
[-118.53930664 162.16702271]
[-115.42768097 155.44003296]
[-106.76292419 152.45932007]
[-95.10573578 143.01951599]
[-95.62891388 135.53779602]
[-110.38474274 138.23324585]
[-125.14057159 140.92869568]
[-139.89640808 143.62416077]
[-152.89923096 151.10255432]
[-167.28475952 146.85328674]
[-174.13714600 133.50993347]
[-169.20942688 119.34246063]
[-155.55567932 113.13155365]
[-141.63734436 118.72750092]
[-126.64998627 119.34310913]
[-111.66262054 119.95871735]
[-96.67525482 120.57432556]
[-97.19843292 113.09259796]
[-110.05593872 105.36702728]
[-122.91345215 97.64145660]
[-135.77096558 89.91588593]
[-152.16812134 90.17083740]
[-160.35415649 75.96095276]
[-151.90797424 61.90414047]
[-135.51828003 62.46084213]
[-128.04539490 77.05837250]
[-115.18788147 84.78394318]
[-102.33036804 92.50951385]
[-89.47286224 100.23509216]
[-80.62887573 95.00799561]
[-71.08102417 92.58173370]
[-61.65751266 92.92751312]
[-53.11407089 95.78582764]
[-46.07344055 100.70440674]
[-40.98012924 107.09095764]
[-38.07372284 114.27523804]
[-23.25839615 111.92872620]
[-8.44307137 109.58220673]
[6.37225342 107.23568726]
[21.18757820 104.88917542]
[36.00290298 102.54265594]
[50.81822968 100.19613647]
[65.63355255 97.84962463]
[71.58948517 70.59680939]
[98.66741180 52.67944336]
[135.14190674 59.27358246]
[142.64190674 46.28319931]
[150.14190674 33.29281998]
[157.64190674 20.30243874]
[165.14190674 7.31205750]
[172.52825928 -5.74327803]
[179.80041504 -18.86257362]
[186.95779419 -32.04483032]
[193.99986267 -45.28904343]
[189.60722351 -60.23369217]
[196.93756104 -73.56489563]
[211.21206665 -77.66049957]
[218.25415039 -90.90470886]
[225.29621887 -104.14892578]
[232.33828735 -117.39314270]
[239.38037109 -130.63735962]
[239.02752686 -146.45462036]
[251.83424377 -154.05969238]
[258.87631226 -167.30390930]
[255.57969666 -183.00460815]
[265.91024780 -195.27894592]
[281.94326782 -194.71109009]
[291.37954712 -181.73667908]
[286.98043823 -166.30853271]
[272.12054443 -160.26184082]
[265.07846069 -147.01762390]
[265.93499756 -132.14765930]
[252.62457275 -123.59528351]
[245.58250427 -110.35106659]
[238.54043579 -97.10684967]
[231.49835205 -83.86264038]
[224.45628357 -70.61842346]
[229.04307556 -56.49408722]
[222.09008789 -42.96225357]
[207.24407959 -38.24697113]
[200.20201111 -25.00275612]
[199.83692932 -17.59996986]
[192.91970825 -11.59042931]
[185.64755249 1.52886653]
[185.15335083 8.92415428]
[178.13229370 14.81205750]
[170.63229370 27.80243874]
[163.13229370 40.79281998]
[155.63229370 53.78319931]
[148.13229370 66.77358246]
[151.71098328 73.36470795]
[162.03631592 62.48411179]
[175.57507324 68.94181824]
[173.61711121 83.81348419]
[158.86836243 86.54696655]
[162.44705200 93.13809204]
[177.42649841 93.92313385]
[191.78463745 86.00002289]
[205.68362427 94.70349121]
[204.82534790 111.08016968]
[190.09275818 118.28311920]
[176.64146423 108.90258026]
[161.66201782 108.11753845]
[157.85548401 114.57975769]
[170.77990723 122.19283295]
[183.70434570 129.80590820]
[196.62878418 137.41897583]
[209.55310059 145.03227234]
[201.93959045 157.95645142]
[189.01571655 150.34341431]
[176.09127808 142.73034668]
[163.16683960 135.11726379]
[150.24240112 127.50419617]
[146.43586731 133.96641541]
[154.38465881 146.68713379]
[162.33343506 159.40785217]
[170.28222656 172.12857056]
[178.23101807 184.84930420]
[186.17980957 197.57002258]
[205.68045044 206.41091919]
[205.63273621 227.03488159]
[214.23637390 239.32215881]
[222.84002686 251.60943604]
[237.92327881 258.04586792]
[239.62191772 274.35678101]
[226.18852234 283.76296997]
[211.44221497 276.58810425]
[210.55273438 260.21307373]
[201.94909668 247.92581177]
[193.34544373 235.63851929]
[184.41851807 235.53776550]
[176.42526245 231.26127625]
[171.23199463 223.66334534]
[170.11720276 214.38906860]
[173.45909119 205.51881409]
[165.51029968 192.79808044]
[157.56150818 180.07736206]
[149.61271667 167.35664368]
[141.66392517 154.63592529]
[133.71514893 141.91520691]
[110.18123627 147.88206482]
[88.72873688 142.64863586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[4 77]
[5 76]
[6 75]
[7 74]
[8 73]
[10 41]
[11 40]
[12 38]
[13 37]
[14 36]
[15 35]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[55 66]
[56 65]
[57 64]
[58 63]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 121]
[89 120]
[90 118]
[91 117]
[94 114]
[95 113]
[96 112]
[97 111]
[98 110]
[100 108]
[101 107]
[133 140]
[134 139]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
