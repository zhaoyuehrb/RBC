%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCGAGGCGGGGCCUGCGGGGCGGGGCCUGGGCCAAGCGGCCCGCAGGAGGCGGCGGCGGCCGUUCAGUCCCUUGUUCCCCGCCGCCGCCGUCGCUGACCCAGCCCGCCAGGCGCUCCUGACCGUCGCUUCCUCCGGUCCCAGGUCCCCGGCCCUCGCCUCAGCCCCGGCCCCUGGUCCCCAGCCCUCGUCGCAGCCCCGGCCGCCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[547.78009033 701.19250488]
[542.51525879 687.14685059]
[538.62097168 684.39147949]
[536.41290283 679.16302490]
[537.30718994 672.62200928]
[532.44738770 658.43109131]
[527.58758545 644.24011230]
[522.72784424 630.04919434]
[517.86804199 615.85827637]
[511.41522217 602.31719971]
[503.45428467 589.60406494]
[495.49334717 576.89093018]
[487.53237915 564.17785645]
[479.57144165 551.46472168]
[471.61047363 538.75158691]
[453.55151367 535.72729492]
[443.26672363 520.19342041]
[447.68270874 501.76550293]
[439.36035156 489.28601074]
[431.03799438 476.80648804]
[422.62631226 464.38699341]
[414.12579346 452.02813721]
[405.62527466 439.66931152]
[397.12475586 427.31045532]
[388.53579712 415.01290894]
[379.85885620 402.77725220]
[371.18191528 390.54162598]
[362.50497437 378.30599976]
[353.74050903 366.13290405]
[344.88894653 354.02301025]
[336.03738403 341.91308594]
[327.18582153 329.80319214]
[318.33428955 317.69326782]
[309.48272705 305.58337402]
[300.54452515 293.53726196]
[291.52017212 281.55557251]
[282.07199097 269.90515137]
[272.21218872 258.60098267]
[262.35235596 247.29682922]
[252.49255371 235.99267578]
[242.63273621 224.68850708]
[232.77291870 213.38435364]
[222.91310120 202.08020020]
[208.11872864 203.58514404]
[195.12129211 196.00025940]
[189.01089478 182.05334473]
[192.32281494 167.00883484]
[182.46299744 155.70466614]
[172.60317993 144.40051270]
[162.74336243 133.09635925]
[152.88354492 121.79219818]
[143.02372742 110.48803711]
[58.38568115 122.28648376]
[45.50422287 114.60091400]
[32.62276459 106.91533661]
[19.74130440 99.22976685]
[6.85984564 91.54419708]
[-6.02161407 83.85862732]
[-18.90307426 76.17305756]
[-31.78453255 68.48748016]
[-44.66599274 60.80191040]
[-57.54745102 53.11634064]
[-70.42890930 45.43077087]
[-85.57312012 54.35619354]
[-103.06269073 54.37827682]
[-118.07562256 45.58121872]
[-126.51850128 30.46827126]
[-126.14242554 13.25012398]
[-139.23905945 5.93723822]
[-152.33569336 -1.37564731]
[-168.71646118 -0.59950548]
[-177.35012817 -14.54194832]
[-169.35513306 -28.86018562]
[-152.95602417 -28.82484245]
[-145.02279663 -14.47227669]
[-131.92617798 -7.15939140]
[-118.82954407 0.15349405]
[-108.74521637 -7.44656229]
[-96.49090576 -10.68203068]
[-83.87658691 -9.03851223]
[-72.77921295 -2.72495031]
[-64.86349487 7.35219336]
[-61.33216476 19.71893311]
[-62.74333954 32.54930878]
[-49.86188126 40.23488235]
[-36.98041916 47.92045212]
[-24.09896088 55.60602570]
[-11.21750259 63.29159546]
[1.66395724 70.97716522]
[14.54541683 78.66273499]
[27.42687607 86.34831238]
[40.30833435 94.03388214]
[53.18979645 101.71945190]
[66.07125092 109.40502167]
[72.09430695 104.93592834]
[90.16347504 91.52864075]
[86.54160309 76.97247314]
[82.91973877 62.41630554]
[79.29786682 47.86013412]
[69.60594940 33.94959641]
[80.28986359 20.78562164]
[95.89698792 27.40785599]
[93.85403442 44.23826599]
[97.47590637 58.79443359]
[101.09777832 73.35060120]
[104.71964264 87.90677643]
[112.19187927 87.26203918]
[134.60858154 85.32782745]
[135.68354797 70.36640167]
[136.75851440 55.40496445]
[131.86282349 39.17325211]
[146.10493469 29.97550011]
[158.88584900 41.11483383]
[151.71995544 56.47993088]
[150.64498901 71.44136047]
[149.57002258 86.40279388]
[154.32789612 100.62821960]
[164.18771362 111.93238068]
[174.04753113 123.23653412]
[183.90734863 134.54069519]
[193.76716614 145.84484863]
[203.62698364 157.14901733]
[218.98194885 155.91171265]
[231.96942139 163.86024475]
[237.71817017 177.76763916]
[234.21725464 192.22038269]
[244.07707214 203.52453613]
[253.93688965 214.82868958]
[263.79672241 226.13285828]
[273.65652466 237.43701172]
[283.51635742 248.74116516]
[293.37615967 260.04531860]
[296.95291138 245.47799683]
[310.50976562 239.05838013]
[324.04553223 245.52235413]
[327.57458496 260.10131836]
[318.49343872 272.04000854]
[303.50186157 272.53118896]
[312.52621460 284.51287842]
[320.18408203 289.48117065]
[321.59262085 296.73181152]
[330.44418335 308.84170532]
[339.29574585 320.95162964]
[348.14730835 333.06152344]
[356.99887085 345.17144775]
[365.85043335 357.28134155]
[373.43624878 362.35897827]
[374.74063110 369.62905884]
[383.41757202 381.86468506]
[392.09448242 394.10034180]
[400.77142334 406.33596802]
[408.28363037 411.52188110]
[409.48358154 418.80993652]
[417.98410034 431.16876221]
[426.48464966 443.52761841]
[434.98516846 455.88647461]
[442.42221069 461.17959595]
[443.51748657 468.48413086]
[451.83987427 480.96362305]
[460.16223145 493.44314575]
[472.04364014 493.45849609]
[482.33831787 499.14666748]
[488.54699707 508.99462891]
[489.22653198 520.49652100]
[484.32360840 530.79064941]
[492.28454590 543.50378418]
[500.24548340 556.21685791]
[508.20645142 568.92999268]
[516.16741943 581.64312744]
[524.12835693 594.35620117]
[527.72045898 587.98846436]
[533.54425049 582.57952881]
[541.33386230 578.71972656]
[550.68536377 576.92816162]
[561.07501221 577.62274170]
[574.56951904 584.17248535]
[588.06396484 590.72229004]
[601.55841064 597.27203369]
[618.44793701 598.74871826]
[621.70440674 615.38702393]
[606.61791992 623.12213135]
[595.00866699 610.76647949]
[581.51422119 604.21673584]
[568.01971436 597.66699219]
[554.52526855 591.11718750]
[543.29162598 601.05828857]
[532.05895996 610.99847412]
[536.91876221 625.18939209]
[541.77856445 639.38037109]
[546.63830566 653.57128906]
[551.49810791 667.76220703]
[556.56091309 681.88195801]
[561.82580566 695.92767334]
[574.64385986 700.05267334]
[582.63073730 710.65118408]
[583.05072021 723.72076416]
[575.97448730 734.48492432]
[581.03735352 748.60467529]
[595.05023193 755.40734863]
[599.98352051 769.79888916]
[593.41192627 783.11614990]
[598.47473145 797.23590088]
[603.53759766 811.35565186]
[608.60046387 825.47546387]
[622.43554688 833.59765625]
[624.56860352 849.49822998]
[613.36346436 860.97967529]
[597.41558838 859.23437500]
[588.95892334 845.60113525]
[594.48065186 830.53826904]
[589.41784668 816.41851807]
[584.35498047 802.29876709]
[579.29217529 788.17901611]
[565.75561523 782.07183838]
[560.42004395 767.82452393]
[566.91754150 753.66754150]
[561.85473633 739.54779053]
[546.35205078 733.02117920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[18 160]
[19 159]
[20 158]
[21 156]
[22 155]
[23 154]
[24 153]
[25 151]
[26 150]
[27 149]
[28 148]
[29 146]
[30 145]
[31 144]
[32 143]
[33 142]
[34 141]
[35 139]
[36 138]
[37 132]
[38 131]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[47 122]
[48 121]
[49 120]
[50 119]
[51 118]
[52 117]
[53 94]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[62 85]
[63 84]
[68 77]
[69 76]
[70 75]
[96 106]
[97 105]
[98 104]
[99 103]
[108 116]
[109 115]
[110 114]
[175 185]
[176 184]
[177 183]
[178 182]
[197 217]
[198 216]
[201 213]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
