%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUACCUCUCUGUUCUGCAAGAGCUGGAAGCUCCAGUUGGGGUAAGGAGGCUCCCAUCCCGAGCUUGCGUAGUGGUUCUGUGUGGCGCUGAGGAAUUUGGAAACCUCAA\
) } def
/len { sequence length } bind def

/coor [
[216.02632141 89.80193329]
[211.67973328 88.05818176]
[196.93284607 90.80214691]
[182.18595886 93.54611206]
[167.43908691 96.29008484]
[152.69219971 99.03404999]
[137.94531250 101.77802277]
[123.19842529 104.52198792]
[108.45153809 107.26595306]
[94.69704437 113.25043488]
[82.63709259 122.16992950]
[70.57713318 131.08943176]
[70.84353638 146.60421753]
[61.91215134 159.29318237]
[47.21726990 164.27717590]
[32.40937424 159.63972473]
[23.18240738 147.16403198]
[23.08432388 131.64727783]
[32.15283585 119.05593872]
[46.90092087 114.23165894]
[61.65763474 119.02947235]
[73.71759033 110.10997772]
[85.77754974 101.19047546]
[82.41017914 86.57333374]
[67.66329193 83.82936859]
[52.91640472 81.08540344]
[38.16952133 78.34143066]
[23.42263412 75.59746552]
[8.67574883 72.85350037]
[-8.00217342 75.90033722]
[-15.54685116 60.71764374]
[-3.04607725 49.26482773]
[11.41971684 58.10661316]
[26.16660309 60.85057831]
[40.91349030 63.59454727]
[55.66037369 66.33851624]
[70.40725708 69.08248138]
[85.15414429 71.82645416]
[101.71802521 79.44402313]
[105.70756531 92.51906586]
[120.45445251 89.77510071]
[135.20133972 87.03113556]
[149.94822693 84.28716278]
[164.69511414 81.54319763]
[179.44200134 78.79923248]
[194.18888855 76.05525970]
[208.93577576 73.31129456]
[223.50379944 69.73741150]
[237.84629822 65.34506989]
[252.18879700 60.95273209]
[266.53131104 56.56039047]
[271.66384888 42.03582382]
[284.21804810 33.41922760]
[299.26083374 33.84221268]
[311.02917480 42.93306732]
[325.37167358 38.54072571]
[339.71417236 34.14838409]
[353.85736084 29.15128517]
[367.77569580 23.55843925]
[381.69403076 17.96559143]
[387.96221924 3.70559764]
[402.15707397 -1.76807272]
[415.71316528 4.29557705]
[429.63150024 -1.29726994]
[443.54983521 -6.89011717]
[457.38763428 -12.67936039]
[471.14212036 -18.66384125]
[484.89660645 -24.64832115]
[498.65109253 -30.63280106]
[512.40557861 -36.61728287]
[526.16009521 -42.60176086]
[539.91455078 -48.58624268]
[553.66906738 -54.57072067]
[560.85961914 -68.91210175]
[576.58459473 -72.09088898]
[588.78112793 -61.66858673]
[588.09307861 -45.64029694]
[575.04827881 -36.30154800]
[559.65356445 -40.81623077]
[545.89904785 -34.83175278]
[532.14453125 -28.84727097]
[518.39007568 -22.86279106]
[504.63558960 -16.87831116]
[490.88107300 -10.89383125]
[477.12658691 -4.90935087]
[463.37210083 1.07512951]
[458.42202759 6.71176147]
[449.14266968 7.02821827]
[435.22433472 12.62106514]
[421.30599976 18.21391296]
[415.71478271 31.97159195]
[401.67926025 37.84180450]
[387.28686523 31.88392639]
[373.36853027 37.47677612]
[359.45019531 43.06962204]
[357.72799683 46.30549622]
[354.27474976 48.81173325]
[349.47897339 49.74728394]
[344.10653687 48.49088287]
[329.76403809 52.88322449]
[315.42153931 57.27556610]
[310.76196289 71.39741516]
[298.53573608 80.17143250]
[283.30941772 80.06253052]
[270.92364502 70.90289307]
[256.58114624 75.29523468]
[242.23863220 79.68757629]
[227.89613342 84.07991791]
[226.46948242 86.65514374]
[223.86145020 88.77513885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[5 44]
[6 43]
[7 42]
[8 41]
[9 40]
[10 23]
[11 22]
[12 21]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[48 108]
[49 107]
[50 106]
[51 105]
[55 101]
[56 100]
[57 99]
[58 95]
[59 94]
[60 93]
[63 90]
[64 89]
[65 88]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[73 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
