%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIR3DL3)
} def

/sequence { (\
UGCUGCUGAACUGAGCUGGGGCGCAGCCGCCUGUCUGCACCGGCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.851551371 ubox
2 27 0.007844781 ubox
2 30 0.003738527 ubox
2 47 0.999521499 ubox
3 26 0.007907339 ubox
3 29 0.003748157 ubox
3 46 0.999806415 ubox
4 25 0.007908400 ubox
4 45 0.999574750 ubox
4 48 0.013201086 ubox
5 16 0.006267285 ubox
5 24 0.007910580 ubox
5 27 0.003803925 ubox
5 44 0.999803196 ubox
5 47 0.014894943 ubox
6 15 0.006435795 ubox
6 23 0.007746133 ubox
6 26 0.003808228 ubox
6 43 0.999791988 ubox
6 46 0.014898215 ubox
7 14 0.006594330 ubox
7 25 0.003805553 ubox
7 39 0.006538160 ubox
7 42 0.998513279 ubox
7 45 0.014879301 ubox
8 22 0.007822083 ubox
8 24 0.003800142 ubox
8 35 0.003945248 ubox
8 38 0.009039023 ubox
8 41 0.992335782 ubox
8 44 0.014169149 ubox
9 34 0.004027255 ubox
10 34 0.006083082 ubox
11 19 0.015918473 ubox
11 20 0.011262663 ubox
11 21 0.004566521 ubox
11 26 0.013634632 ubox
11 33 0.006375270 ubox
11 43 0.012146291 ubox
12 18 0.015653484 ubox
12 19 0.011345468 ubox
12 20 0.004549327 ubox
12 25 0.013733276 ubox
12 29 0.009306004 ubox
12 37 0.101899500 ubox
12 39 0.798334356 ubox
12 42 0.014248700 ubox
13 17 0.007357886 ubox
13 24 0.013713863 ubox
13 28 0.029359549 ubox
13 35 0.208038623 ubox
13 36 0.108934418 ubox
13 38 0.804414018 ubox
13 41 0.019058810 ubox
14 32 0.004696276 ubox
14 34 0.185718497 ubox
14 36 0.648744510 ubox
15 22 0.019909908 ubox
15 27 0.042465410 ubox
15 30 0.006151334 ubox
15 31 0.004661485 ubox
15 34 0.337138325 ubox
15 35 0.647027539 ubox
15 38 0.226158143 ubox
15 44 0.005363484 ubox
15 47 0.003582874 ubox
16 21 0.019877141 ubox
16 26 0.042525172 ubox
16 29 0.006186680 ubox
16 33 0.542156490 ubox
16 37 0.228467080 ubox
16 43 0.006128149 ubox
16 46 0.003588453 ubox
17 25 0.042516233 ubox
17 29 0.005111134 ubox
17 33 0.120030325 ubox
17 37 0.006666432 ubox
17 39 0.010764859 ubox
17 42 0.006774855 ubox
17 45 0.003597407 ubox
18 24 0.042506809 ubox
18 28 0.006789499 ubox
18 31 0.484384229 ubox
18 32 0.130153911 ubox
18 35 0.091891706 ubox
18 36 0.017937889 ubox
18 38 0.011165527 ubox
18 41 0.008472285 ubox
18 44 0.003602590 ubox
19 27 0.006767317 ubox
19 28 0.010003731 ubox
19 30 0.485207273 ubox
19 31 0.109612951 ubox
19 32 0.844014515 ubox
19 34 0.046277678 ubox
19 35 0.017495987 ubox
19 36 0.006811199 ubox
19 40 0.008569852 ubox
19 41 0.006552125 ubox
20 27 0.010138411 ubox
20 28 0.486820584 ubox
20 30 0.079520710 ubox
20 31 0.864411869 ubox
20 32 0.009204204 ubox
20 34 0.003345477 ubox
20 35 0.007318517 ubox
20 36 0.010425993 ubox
20 40 0.006957538 ubox
20 41 0.018687768 ubox
21 27 0.487471007 ubox
21 30 0.867639578 ubox
21 31 0.009202399 ubox
21 34 0.007258587 ubox
21 35 0.010451376 ubox
21 38 0.009766560 ubox
21 40 0.020796800 ubox
22 26 0.483928813 ubox
22 29 0.870705009 ubox
22 33 0.007293239 ubox
22 37 0.009839797 ubox
23 28 0.829032329 ubox
23 30 0.011566619 ubox
23 32 0.004175094 ubox
23 34 0.014076887 ubox
23 36 0.003693152 ubox
23 38 0.027605290 ubox
24 29 0.011860761 ubox
24 33 0.014873614 ubox
24 37 0.027623566 ubox
25 32 0.014863056 ubox
25 36 0.027606561 ubox
26 31 0.014635523 ubox
26 35 0.027449117 ubox
27 33 0.017142994 ubox
29 38 0.041049637 ubox
29 47 0.005146670 ubox
30 37 0.041004942 ubox
30 46 0.003656011 ubox
31 46 0.004803791 ubox
32 39 0.009429633 ubox
32 45 0.006065588 ubox
32 48 0.004986906 ubox
33 38 0.012461275 ubox
33 40 0.013679026 ubox
33 44 0.006283512 ubox
33 47 0.006107673 ubox
33 49 0.005246279 ubox
34 39 0.012559714 ubox
34 43 0.006201656 ubox
34 48 0.005252811 ubox
35 42 0.006202509 ubox
35 46 0.008309174 ubox
36 45 0.008388042 ubox
37 44 0.008433413 ubox
38 43 0.008419489 ubox
1 48 0.9500000 lbox
2 47 0.9500000 lbox
3 46 0.9500000 lbox
4 45 0.9500000 lbox
5 44 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
showpage
end
%%EOF
