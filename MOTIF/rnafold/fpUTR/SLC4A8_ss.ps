%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUUGCGGCGGAUGCCUCGCGGGCCGGUGGCUAUGGAGGCGGCGGCGGUUGAUGGUUGACCGUUGGCUCCGGGGUGGGGGUCGCCGUUCGAGUGAUCUGCUCAGACCCGACCAGAGGGCGCGGGCUGCUGAUGCUUGGCUUGGAGCCCGUGGGGGAGACCUAGUUCGGCUCCGCC\
) } def
/len { sequence length } bind def

/coor [
[119.75639343 126.00202942]
[115.34704590 140.33930969]
[110.93769836 154.67658997]
[114.27651215 170.14149475]
[103.13978577 180.03202820]
[98.73043823 194.36930847]
[102.91838074 210.22468567]
[91.09212494 221.58566284]
[75.41751099 216.76502991]
[72.01924133 200.72184753]
[84.39315796 189.95996094]
[88.80250549 175.62268066]
[85.14831543 161.18328857]
[96.60041809 150.26724243]
[101.00976562 135.92996216]
[105.41911316 121.59268188]
[93.71512604 112.21096039]
[80.68109131 119.63483429]
[67.64705658 127.05871582]
[54.61301804 134.48258972]
[41.57898331 141.90646362]
[39.74855423 157.20207214]
[29.38371658 168.35659790]
[14.61284351 171.23503113]
[1.14063919 164.93917847]
[-11.89339638 172.36305237]
[-24.92743111 179.78692627]
[-37.96146774 187.21080017]
[-48.73217010 200.30386353]
[-64.29518127 193.57859802]
[-62.14101410 176.76206970]
[-45.38534164 174.17675781]
[-32.35130692 166.75288391]
[-19.31727028 159.32901001]
[-6.28323555 151.90513611]
[-4.82624340 137.10597229]
[5.18413353 125.86959076]
[20.06541061 122.64453888]
[34.15510941 128.87242126]
[47.18914413 121.44855499]
[60.22317886 114.02467346]
[73.25721741 106.60079956]
[86.29125214 99.17692566]
[98.07711792 89.89826965]
[108.35299683 78.97095490]
[118.62887573 68.04363251]
[128.90475464 57.11631775]
[139.18063354 46.18899918]
[142.79437256 37.76739120]
[149.73403931 35.16208649]
[160.20010376 24.41679192]
[170.66618347 13.67149639]
[181.13224792 2.92620206]
[191.59831238 -7.81909227]
[202.06439209 -18.56438637]
[206.01348877 -39.60747528]
[226.05584717 -44.46853638]
[235.94190979 -55.74975204]
[245.82797241 -67.03096008]
[255.71403503 -78.31217194]
[254.85797119 -93.86547089]
[265.04455566 -105.16539001]
[279.87750244 -105.88567352]
[289.76358032 -117.16688538]
[285.22268677 -134.69587708]
[292.03247070 -151.30477905]
[307.30255127 -160.43963623]
[324.84518433 -158.61788940]
[334.32925415 -170.23908997]
[343.81332397 -181.86030579]
[353.29739380 -193.48150635]
[362.78146362 -205.10272217]
[372.26553345 -216.72393799]
[381.74957275 -228.34513855]
[391.23364258 -239.96635437]
[400.71771240 -251.58755493]
[403.44873047 -267.17126465]
[417.49026489 -272.13961792]
[426.97433472 -283.76083374]
[436.45837402 -295.38204956]
[445.94244385 -307.00323486]
[448.67346191 -322.58697510]
[462.71499634 -327.55529785]
[472.19906616 -339.17651367]
[481.68310547 -350.79772949]
[491.06484985 -362.50170898]
[500.34350586 -374.28756714]
[502.80056763 -389.91683960]
[516.75274658 -395.13082886]
[526.03143311 -406.91668701]
[535.31005859 -418.70257568]
[544.58874512 -430.48843384]
[553.86737061 -442.27429199]
[556.32446289 -457.90353394]
[570.27667236 -463.11755371]
[579.55529785 -474.90341187]
[577.88189697 -490.39010620]
[587.45965576 -502.21044922]
[602.23413086 -503.71035767]
[611.51281738 -515.49621582]
[620.79144287 -527.28210449]
[630.07012939 -539.06793213]
[632.52722168 -554.69720459]
[646.47937012 -559.91119385]
[655.75805664 -571.69708252]
[653.64147949 -587.35900879]
[663.28582764 -599.87945557]
[678.96923828 -601.83032227]
[691.38702393 -592.05413818]
[693.17199707 -576.35101318]
[683.26507568 -564.03723145]
[667.54388428 -562.41839600]
[658.26525879 -550.63256836]
[656.47180176 -535.84631348]
[641.85595703 -529.78930664]
[632.57733154 -518.00341797]
[623.29864502 -506.21759033]
[614.02001953 -494.43170166]
[616.02996826 -479.71792603]
[606.78796387 -467.63320923]
[591.34118652 -465.62475586]
[582.06250000 -453.83889771]
[580.26910400 -439.05264282]
[565.65325928 -432.99563599]
[556.37457275 -421.20977783]
[547.09594727 -409.42391968]
[537.81726074 -397.63803101]
[528.53863525 -385.85217285]
[526.74523926 -371.06594849]
[512.12933350 -365.00891113]
[502.85070801 -353.22305298]
[501.17877197 -346.00149536]
[493.30432129 -341.31365967]
[483.82025146 -329.69244385]
[474.33621216 -318.07125854]
[472.28356934 -303.31875610]
[457.56365967 -297.51919556]
[448.07958984 -285.89797974]
[438.59552002 -274.27676392]
[429.11145020 -262.65554810]
[427.05883789 -247.90306091]
[412.33892822 -242.10348511]
[402.85485840 -230.48228455]
[393.37078857 -218.86106873]
[383.88671875 -207.23986816]
[374.40267944 -195.61865234]
[364.91860962 -183.99745178]
[355.43453979 -172.37623596]
[345.95046997 -160.75503540]
[336.46640015 -149.13381958]
[341.27880859 -137.95304871]
[340.86697388 -125.71522522]
[335.24783325 -114.75462341]
[325.43746948 -107.18812561]
[313.26779175 -104.50646210]
[301.04479980 -107.28082275]
[291.15872192 -95.99960327]
[292.39151001 -81.20042419]
[282.52636719 -69.61884308]
[266.99523926 -68.42610931]
[257.10919189 -57.14490128]
[247.22312927 -45.86368561]
[237.33706665 -34.58247375]
[239.36447144 -25.88633537]
[237.11245728 -17.10324860]
[230.96684265 -10.25016689]
[222.22201538 -6.96102953]
[212.80969238 -8.09831619]
[202.34361267 2.64697862]
[191.87754822 13.39227295]
[181.41146851 24.13756752]
[170.94540405 34.88286209]
[160.47932434 45.62815857]
[150.10795593 56.46488190]
[139.83207703 67.39219666]
[129.55619812 78.31951904]
[119.28031158 89.24683380]
[109.00443268 100.17415619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[5 12]
[6 11]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[25 35]
[26 34]
[27 33]
[28 32]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[57 163]
[58 162]
[59 161]
[60 160]
[63 157]
[64 156]
[68 150]
[69 149]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[78 140]
[79 139]
[80 138]
[81 137]
[83 135]
[84 134]
[85 133]
[86 131]
[87 130]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[95 122]
[96 121]
[99 118]
[100 117]
[101 116]
[102 115]
[104 113]
[105 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
