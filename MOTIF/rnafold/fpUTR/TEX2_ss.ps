%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGGUCCGCCGGCGGGGCGGGGCGGCGUGUGCCCGGGGGCGGGCGGGCGGCAGGGCAGCAGGACCGCGGCCGGUGCCCCAGCCGAAGCCGGAGUCGCGCGGCCGGGAGCACGGGCGCCGGCAUAGUACAAUGAGGCAGCCAGCGGAUCUUGGAGCCUGAGCCCUUGUGAAGCCGGCA\
) } def
/len { sequence length } bind def

/coor [
[64.72398376 352.49404907]
[61.63908005 367.17340088]
[58.55418396 381.85278320]
[66.08341980 396.01928711]
[59.57004547 410.68063354]
[44.01057434 414.58990479]
[31.34089470 404.74822998]
[31.28010178 388.70529175]
[43.87482834 378.76788330]
[46.95972824 364.08853149]
[50.04462814 349.40914917]
[52.87569046 334.67874146]
[55.45207596 319.90167236]
[58.02846146 305.12457275]
[60.60484695 290.34750366]
[63.18123627 275.57040405]
[65.75762177 260.79333496]
[55.27508926 250.24560547]
[52.98645401 235.37193298]
[59.97654724 221.84446716]
[73.75090790 214.94714355]
[76.32729340 200.17005920]
[78.90367889 185.39297485]
[81.35243225 170.59419250]
[83.67337036 155.77484131]
[85.99431610 140.95549011]
[88.31525421 126.13613892]
[82.23308563 122.44922638]
[77.24745178 117.37678528]
[73.66606903 111.23188019]
[58.80886459 113.29668427]
[43.95165634 115.36148834]
[31.34792328 124.92477417]
[17.67674255 119.01308441]
[2.81953573 121.07788086]
[-12.03767109 123.14268494]
[-26.89487839 125.20748901]
[-41.75208282 127.27229309]
[-56.60929108 129.33709717]
[-69.20795441 139.83499146]
[-84.50321198 133.91999817]
[-86.76061249 117.67695618]
[-73.65793610 107.81532288]
[-58.67409515 114.47988892]
[-43.81688690 112.41508484]
[-28.95968056 110.35028076]
[-14.10247326 108.28548431]
[0.75473303 106.22068024]
[15.61193943 104.15587616]
[27.15298653 94.74028015]
[41.88685608 100.50428009]
[56.74406052 98.43947601]
[71.60126495 96.37467194]
[76.00601959 84.38206482]
[85.18903351 75.49967194]
[97.32156372 71.49636841]
[109.98748016 73.16939545]
[118.72026062 60.97355652]
[127.45304108 48.77771378]
[136.18582153 36.58187485]
[133.80947876 21.18737030]
[142.83949280 8.94345379]
[157.53044128 6.77284718]
[166.26322937 -5.42299414]
[174.99600220 -17.61883545]
[183.72879028 -29.81467628]
[192.46156311 -42.01051712]
[201.08876038 -54.28127670]
[209.60974121 -66.62602997]
[218.13070679 -78.97079468]
[226.65168762 -91.31555176]
[221.66801453 -118.63760376]
[247.22210693 -136.41711426]
[249.79849243 -151.19419861]
[252.37487793 -165.97128296]
[247.12286377 -180.89532471]
[256.93121338 -192.10449219]
[259.50759888 -206.88157654]
[262.08398438 -221.65866089]
[264.66036987 -236.43574524]
[267.10910034 -251.23452759]
[269.43005371 -266.05386353]
[271.75100708 -280.87322998]
[266.24215698 -295.70440674]
[275.85556030 -307.08120728]
[278.17651367 -321.90054321]
[280.49743652 -336.71990967]
[282.81838989 -351.53927612]
[275.85736084 -362.41787720]
[278.11245728 -374.72692871]
[287.83471680 -381.95172119]
[290.41110229 -396.72882080]
[280.19879150 -408.57122803]
[280.03955078 -424.20800781]
[290.00860596 -436.25592041]
[305.39880371 -439.02633667]
[318.94342041 -431.21115112]
[324.24710083 -416.50042725]
[318.80557251 -401.84014893]
[305.18817139 -394.15243530]
[302.61178589 -379.37533569]
[309.53161621 -363.26025391]
[297.63772583 -349.21832275]
[295.31680298 -334.39895630]
[292.99584961 -319.57962036]
[290.67492676 -304.76025391]
[296.34976196 -290.98907471]
[286.57034302 -278.55227661]
[284.24942017 -263.73294067]
[281.92846680 -248.91358948]
[284.00518799 -241.80033875]
[279.43743896 -233.85935974]
[276.86105347 -219.08227539]
[274.28466797 -204.30519104]
[271.70828247 -189.52810669]
[277.14459229 -175.66102600]
[267.15194702 -163.39489746]
[264.57556152 -148.61781311]
[261.99917603 -133.84072876]
[272.87683105 -123.51227570]
[287.50076294 -126.85009003]
[302.12466431 -130.18789673]
[309.64785767 -140.68560791]
[321.91592407 -143.15400696]
[332.22994995 -136.80259705]
[346.90930176 -139.88749695]
[361.58865356 -142.97238159]
[370.01580811 -156.34245300]
[385.44702148 -159.75610352]
[398.72723389 -151.18807983]
[401.97756958 -135.72161865]
[393.26959229 -122.53273010]
[377.76965332 -119.44612122]
[364.67355347 -128.29302979]
[349.99420166 -125.20813751]
[335.31484985 -122.12323761]
[322.91296387 -109.72269440]
[305.46249390 -115.56398010]
[290.83856201 -112.22617340]
[276.21463013 -108.88835907]
[274.53057861 -99.26447296]
[269.98425293 -91.00005341]
[263.25512695 -84.88169861]
[255.21522522 -81.41019440]
[246.82002258 -80.76283264]
[238.99644470 -82.79457855]
[230.47546387 -70.44982147]
[221.95449829 -58.10506058]
[213.43351746 -45.76030350]
[212.21826172 -38.45043182]
[204.65740967 -33.27773666]
[195.92463684 -21.08189774]
[187.19184875 -8.88605499]
[178.45907593 3.30978608]
[169.72628784 15.50562763]
[172.40364075 30.11272812]
[163.72108459 42.60544968]
[148.38166809 45.31465530]
[139.64888000 57.51049423]
[130.91610718 69.70633698]
[122.18332672 81.90217590]
[128.61560059 100.88210297]
[121.02650452 119.42980194]
[103.13460541 128.45707703]
[100.81366730 143.27642822]
[98.49272919 158.09577942]
[96.17178345 172.91513062]
[97.93811798 181.90420532]
[93.68076324 187.96936035]
[91.10437775 202.74644470]
[88.52799225 217.52352905]
[99.15547943 228.67532349]
[101.15527344 243.77015686]
[93.96823120 256.99176025]
[80.53470612 263.36972046]
[77.95832062 278.14678955]
[75.38193512 292.92388916]
[72.80554962 307.70095825]
[70.22916412 322.47805786]
[67.65277863 337.25512695]
[69.57585144 343.62451172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[21 171]
[22 170]
[23 169]
[24 167]
[25 166]
[26 165]
[27 164]
[30 53]
[31 52]
[32 51]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[57 161]
[58 160]
[59 159]
[60 158]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 149]
[69 148]
[70 147]
[71 146]
[73 119]
[74 118]
[75 117]
[77 115]
[78 114]
[79 113]
[80 112]
[81 110]
[82 109]
[83 108]
[85 106]
[86 105]
[87 104]
[88 103]
[91 101]
[92 100]
[120 140]
[121 139]
[122 138]
[125 136]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
