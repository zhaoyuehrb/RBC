%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCACCGGAAGAGUCGCUAGGUGGCUGAAGAGGAGGGGGCUGGGGCAGGAGGUCAAAGAACAGAGUUAAGGACCAGUGGGGCGCCUGCGCGGUGUGGCGAGGCCCGAGAAGCGAAGGGAGCAUUUAAGACUAGUCGUAAUUUCUCAGUACCCUUUUCAGUCUGGGCUUUUUCGCUUUCUCGUACUCGGAAUACUGAGGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[217.26652527 543.46514893]
[217.43969727 527.02722168]
[225.92596436 512.83874512]
[218.49209595 499.81039429]
[211.05822754 486.78207397]
[205.01051331 482.52871704]
[203.61206055 473.49786377]
[196.37774658 460.35766602]
[189.14341736 447.21749878]
[181.90910339 434.07730103]
[174.67477417 420.93710327]
[169.30923462 421.63015747]
[163.91184998 421.25915527]
[158.69158936 419.83850098]
[149.72741699 431.86529541]
[140.76324463 443.89208984]
[131.79907227 455.91885376]
[122.83489990 467.94564819]
[113.87071991 479.97244263]
[109.25294495 496.28540039]
[92.29917908 496.36395264]
[87.53041840 480.09448242]
[101.84394073 471.00827026]
[110.80811310 458.98147583]
[119.77228546 446.95468140]
[128.73645020 434.92791748]
[137.70063782 422.90112305]
[146.66481018 410.87432861]
[141.41828918 400.24435425]
[141.10903931 388.28640747]
[145.88430786 377.20156860]
[154.94712830 369.06802368]
[151.54562378 354.45877075]
[148.14411926 339.84954834]
[144.74261475 325.24029541]
[141.34111023 310.63107300]
[137.93962097 296.02185059]
[134.53811646 281.41259766]
[131.13661194 266.80337524]
[120.71475220 256.16220093]
[125.12106323 240.96697998]
[121.71955872 226.35774231]
[118.31806183 211.74851990]
[114.91655731 197.13928223]
[111.51505280 182.53004456]
[108.11354828 167.92080688]
[104.71205139 153.31156921]
[87.74736786 152.09797668]
[72.02011108 145.62294006]
[59.11857986 134.54035950]
[50.34572983 119.96949005]
[46.58755112 103.38186646]
[48.22357941 86.45270538]
[34.38737488 80.65966034]
[20.55116653 74.86661530]
[6.71495914 69.07357025]
[-4.50182486 77.08831787]
[-18.10627937 78.50183105]
[-30.53287125 73.05120850]
[-38.57780838 62.25851440]
[-40.22490311 49.00757217]
[-53.97115707 43.00419998]
[-67.71741486 37.00082779]
[-84.65255737 36.20258331]
[-88.57362366 19.70829201]
[-73.80939484 11.37439060]
[-61.71404266 23.25457191]
[-47.96778870 29.25794411]
[-34.22153091 35.26131821]
[-20.33921051 26.50349998]
[-3.80653048 27.75712013]
[8.84767628 38.72571945]
[12.50800514 55.23736191]
[26.34421158 61.03040695]
[40.18041992 66.82345581]
[54.01662445 72.61650085]
[57.16032791 67.92057800]
[60.78165436 63.58230972]
[64.84022522 59.65006638]
[69.29079437 56.16768646]
[74.08374786 53.17399597]
[79.16563416 50.70237350]
[75.32019043 36.20366287]
[70.09337616 28.70752716]
[71.52845001 21.45450401]
[67.90455627 6.89883995]
[64.28066254 -7.65682507]
[60.65676498 -22.21249008]
[55.54487610 -29.78746414]
[57.09039307 -37.01775742]
[53.68889236 -51.62699509]
[50.28738785 -66.23622894]
[36.73827362 -74.37238312]
[32.99184418 -89.72620392]
[41.27079391 -103.18854523]
[56.66336823 -106.77243042]
[70.03742218 -98.35161591]
[73.45837402 -82.92201233]
[64.89662170 -69.63773346]
[68.29812622 -55.02849579]
[71.69963074 -40.41925812]
[75.21243286 -25.83638573]
[78.83632660 -11.28072071]
[82.46022034 3.27494407]
[86.08412170 17.83060837]
[89.81890106 32.35821915]
[93.66434479 46.85692596]
[99.71124268 46.48137283]
[105.76184845 46.79165649]
[111.73860931 47.78379822]
[117.56494904 49.44508362]
[123.16619110 51.75422668]
[128.47055054 54.68163681]
[138.15126038 43.22370911]
[147.83195496 31.76578712]
[157.51266479 20.30786133]
[160.34826660 2.11517763]
[177.07562256 -3.18610811]
[186.58045959 -14.79032993]
[180.09169006 -28.60548973]
[180.24827576 -43.86780548]
[187.01911926 -57.54692841]
[199.05986023 -66.92686462]
[213.97981262 -70.14521790]
[228.81660461 -66.56298065]
[240.62437439 -56.89141464]
[247.05868530 -43.05080795]
[246.84201050 -27.78922844]
[240.01734924 -14.13687325]
[227.93975830 -4.80442619]
[213.00724792 -1.64485216]
[198.18467712 -5.28548670]
[188.67984009 6.31873465]
[189.56404114 18.38540840]
[181.73695374 28.13135910]
[168.97058105 29.98856163]
[159.28988647 41.44648743]
[149.60917664 52.90441132]
[139.92848206 64.36233521]
[150.40814209 82.01815796]
[153.46908569 102.32041931]
[148.66082764 122.28118134]
[136.69100952 138.96275330]
[119.32128143 149.91006470]
[122.72278595 164.51930237]
[126.12429047 179.12854004]
[129.52578735 193.73777771]
[132.92729187 208.34701538]
[136.32879639 222.95625305]
[139.73030090 237.56549072]
[150.39546204 249.25158691]
[145.74584961 263.40185547]
[149.14735413 278.01110840]
[152.54884338 292.62033081]
[155.95034790 307.22958374]
[159.35185242 321.83880615]
[162.75335693 336.44805908]
[166.15486145 351.05728149]
[169.55636597 365.66650391]
[188.93280029 374.77520752]
[196.31369019 394.60366821]
[187.81497192 413.70278931]
[195.04928589 426.84298706]
[202.28361511 439.98315430]
[209.51792908 453.12335205]
[216.75225830 466.26354980]
[224.08656311 479.34820557]
[231.52043152 492.37652588]
[238.95429993 505.40487671]
[252.92907715 504.75024414]
[265.76098633 510.15560913]
[274.96728516 520.51324463]
[278.79351807 533.76348877]
[276.54754639 547.30389404]
[268.72402954 558.50061035]
[275.95837402 571.64080811]
[283.19268799 584.78100586]
[296.62631226 593.13854980]
[295.98657227 608.01940918]
[303.22088623 621.15954590]
[310.45520020 634.29974365]
[317.68951416 647.43994141]
[325.02383423 660.52459717]
[332.45770264 673.55291748]
[339.89157104 686.58129883]
[355.30886841 689.19677734]
[365.39855957 701.14379883]
[365.39663696 716.78137207]
[355.30395508 728.72589111]
[339.88598633 731.33752441]
[326.42263794 723.38317871]
[321.27090454 708.61853027]
[326.86322021 694.01513672]
[319.42935181 680.98681641]
[311.99548340 667.95843506]
[305.94778442 663.70513916]
[304.54934692 654.67425537]
[297.31500244 641.53405762]
[290.08068848 628.39392090]
[282.84637451 615.25372314]
[269.93017578 607.83605957]
[270.05249023 592.01531982]
[262.81817627 578.87512207]
[255.58384705 565.73492432]
[239.42683411 565.80206299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[5 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[32 159]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[46 145]
[47 144]
[53 76]
[54 75]
[55 74]
[56 73]
[61 69]
[62 68]
[63 67]
[82 107]
[83 106]
[85 105]
[86 104]
[87 103]
[88 102]
[90 101]
[91 100]
[92 99]
[113 139]
[114 138]
[115 137]
[116 136]
[118 133]
[119 132]
[175 204]
[176 203]
[177 202]
[179 200]
[180 199]
[181 198]
[182 197]
[183 195]
[184 194]
[185 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
