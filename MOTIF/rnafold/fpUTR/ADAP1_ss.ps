%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACUCGCUCAGCGACCGCGGCGGAGACACGAGCGGCGGCGGCGGAGCCCAGAGGGCGGCGGGAAUGCGGAACCGGCGCGCGGGCUGAGGCCGCCCGGGAUGGCGCAGGGGCGGCGGCGGCGGGCGGCCUGCGCGGGGCCCUAGCGAGCCGGGCUGACGCUCCCGGCCCCGGCCCCGGCAUCGGCAUCGCGGGCGCAUCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[-152.76933289 333.00695801]
[-159.00938416 346.64743042]
[-173.52603149 350.42456055]
[-185.62298584 341.55532837]
[-186.38659668 326.57415771]
[-198.23474121 335.77316284]
[-210.08287048 344.97216797]
[-221.71853638 354.43847656]
[-233.13571167 364.16720581]
[-244.55288696 373.89596558]
[-255.97004700 383.62469482]
[-261.45571899 398.46441650]
[-276.16128540 400.82989502]
[-287.57846069 410.55862427]
[-288.98635864 426.07171631]
[-300.70358276 435.77539062]
[-315.48425293 434.33755493]
[-326.90142822 444.06628418]
[-338.31860352 453.79501343]
[-349.73574829 463.52377319]
[-355.22140503 478.36349487]
[-369.92697144 480.72897339]
[-381.34414673 490.45770264]
[-378.48355103 505.54785156]
[-383.56640625 520.04132080]
[-395.22546387 530.03942871]
[-410.32449341 532.85272217]
[-424.80194092 527.72442627]
[-434.76342773 516.03411865]
[-437.52938843 500.92633057]
[-432.35577393 486.46502686]
[-420.63427734 476.54022217]
[-405.51791382 473.82162476]
[-391.07287598 479.04055786]
[-379.65573120 469.31179810]
[-374.98669434 455.16793823]
[-359.46450806 452.10659790]
[-348.04733276 442.37786865]
[-336.63015747 432.64913940]
[-325.21298218 422.92037964]
[-324.28717041 408.09884644]
[-312.84710693 398.06988525]
[-297.30718994 399.14147949]
[-285.89001465 389.41275024]
[-281.22097778 375.26885986]
[-265.69879150 372.20751953]
[-254.28161621 362.47879028]
[-242.86444092 352.75006104]
[-231.44726562 343.02133179]
[-230.80447388 339.55145264]
[-228.44718933 336.22109985]
[-224.45962524 333.83358765]
[-219.28187561 333.12402344]
[-207.43373108 323.92501831]
[-195.58560181 314.72601318]
[-184.09492493 305.08422852]
[-172.97827148 295.01345825]
[-161.86161804 284.94271851]
[-157.62399292 270.66363525]
[-142.20185852 267.13262939]
[-131.08520508 257.06188965]
[-119.96854401 246.99113464]
[-119.43135071 243.50335693]
[-117.17623138 240.10301208]
[-113.26294708 237.59558105]
[-108.10912323 236.72920227]
[-96.54562378 227.17486572]
[-84.98211670 217.62052917]
[-73.41861725 208.06617737]
[-88.35711670 206.70925903]
[-99.01886749 196.15809631]
[-100.53147888 181.23455811]
[-92.20368958 168.75865173]
[-77.84127808 164.43186951]
[-64.00783539 170.23150635]
[-57.02521515 183.50715637]
[-60.08411789 198.19132996]
[-47.57268906 189.91702271]
[-41.22498703 176.44276428]
[-25.44627762 175.28395081]
[-12.93484974 167.00964355]
[-0.42342192 158.73532104]
[12.08800602 150.46101379]
[24.59943390 142.18670654]
[37.04771423 133.81770325]
[49.43212891 125.35446930]
[61.81653976 116.89123535]
[74.20095825 108.42800903]
[86.58537292 99.96477509]
[94.85968018 87.45334625]
[97.79998779 72.74435425]
[100.74029541 58.03535461]
[103.68060303 43.32635880]
[106.62091064 28.61736107]
[109.56121826 13.90836430]
[112.50152588 -0.80063206]
[115.44183350 -15.50962925]
[118.38214874 -30.21862602]
[106.74494171 -42.49139404]
[104.73472595 -59.11700058]
[112.94695282 -73.52091217]
[127.97379303 -80.12579346]
[130.69053650 -94.87772369]
[125.58063507 -109.85101318]
[135.49508667 -120.96644592]
[138.21183777 -135.71836853]
[140.92857361 -150.47029114]
[134.92997742 -165.73295593]
[145.35877991 -178.38888550]
[161.48670959 -175.41873169]
[166.72274780 -159.87794495]
[155.68049622 -147.75355530]
[152.96376038 -133.00163269]
[150.24700928 -118.24970245]
[155.55123901 -104.33156586]
[145.44245911 -92.16098022]
[142.72572327 -77.40904999]
[152.78579712 -68.62933350]
[157.22880554 -55.92300415]
[154.79299927 -42.57444000]
[146.00953674 -32.09029007]
[133.09114075 -27.27831650]
[130.15083313 -12.56932068]
[127.21052551 2.13967633]
[124.27021790 16.84867287]
[121.32991028 31.55767059]
[118.38960266 46.26666641]
[115.44929504 60.97566223]
[112.50897980 75.68466187]
[109.56867218 90.39365387]
[118.94642639 102.10082245]
[133.94253540 102.44227600]
[148.93865967 102.78372192]
[157.59246826 99.84974670]
[164.15928650 103.24586487]
[179.14849854 103.81485748]
[194.13769531 104.38385010]
[209.12690735 104.95284271]
[224.11610413 105.52183533]
[239.10531616 106.09082794]
[254.09451294 106.65982056]
[258.79357910 97.13992310]
[266.36590576 89.75353241]
[275.93026733 85.32470703]
[286.38534546 84.33538055]
[296.53649902 86.87303162]
[305.23233032 92.62359619]
[311.49533081 100.91010284]
[314.63156128 110.77226257]
[329.55862427 112.24960327]
[344.48571777 113.72693634]
[359.41278076 115.20427704]
[374.33984375 116.68161011]
[389.26690674 118.15895081]
[399.47866821 106.47563171]
[414.61486816 103.05877686]
[428.85534668 109.22223663]
[436.72436523 122.59602356]
[435.19610596 138.03765869]
[424.85821533 149.60951233]
[409.68582153 152.86196899]
[395.51306152 146.54438782]
[387.78958130 133.08601379]
[372.86251831 131.60868835]
[357.93542480 130.13134766]
[343.00836182 128.65400696]
[328.08129883 127.17667389]
[313.15423584 125.69934082]
[301.17181396 141.15574646]
[282.14828491 146.27890015]
[263.75701904 138.82192993]
[253.52552795 121.64902496]
[238.53631592 121.08003235]
[223.54711914 120.51103973]
[208.55790710 119.94204712]
[193.56871033 119.37305450]
[178.57949829 118.80406189]
[163.59030151 118.23506927]
[148.59719849 117.77983093]
[133.60108948 117.43838501]
[118.60498047 117.09693909]
[95.04859924 112.34918976]
[82.66418457 120.81242371]
[70.27976990 129.27565002]
[57.89535904 137.73889160]
[45.51094437 146.20211792]
[40.18922043 153.63015747]
[32.87374115 154.69813538]
[20.36231422 162.97244263]
[7.85088634 171.24674988]
[-4.66054106 179.52105713]
[-17.17196846 187.79537964]
[-24.41457176 201.86148071]
[-39.29838181 202.42845154]
[-51.80981064 210.70275879]
[-63.86427689 219.62968445]
[-75.42778015 229.18402100]
[-86.99127960 238.73835754]
[-98.55477905 248.29270935]
[-109.89779663 258.10778809]
[-121.01445007 268.17852783]
[-132.13110352 278.24929810]
[-137.16386414 293.24868774]
[-151.79087830 296.05938721]
[-162.90753174 306.13012695]
[-174.02418518 316.20086670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 55]
[6 54]
[7 53]
[8 49]
[9 48]
[10 47]
[11 46]
[13 44]
[14 43]
[17 40]
[18 39]
[19 38]
[20 37]
[22 35]
[23 34]
[56 206]
[57 205]
[58 204]
[60 202]
[61 201]
[62 200]
[66 199]
[67 198]
[68 197]
[69 196]
[77 195]
[78 194]
[80 192]
[81 191]
[82 190]
[83 189]
[84 188]
[85 186]
[86 185]
[87 184]
[88 183]
[89 182]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[102 117]
[103 116]
[105 114]
[106 113]
[107 112]
[131 181]
[132 180]
[133 179]
[135 178]
[136 177]
[137 176]
[138 175]
[139 174]
[140 173]
[141 172]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
