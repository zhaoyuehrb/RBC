%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CXCL1)
} def

/sequence { (\
CACAGAGCCCGGGCCGCAGGCACCUCCUCGCCAGCUCUUCCGCUCCUCUCACAGCCGCCAGACCCGCCUGCUGAGCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.012190999 ubox
2 72 0.012137279 ubox
3 70 0.014488492 ubox
3 73 0.016397391 ubox
4 38 0.123904652 ubox
4 39 0.005723474 ubox
4 47 0.036710075 ubox
4 49 0.064518844 ubox
4 69 0.014510703 ubox
4 72 0.016394580 ubox
5 29 0.010946969 ubox
5 37 0.132572603 ubox
5 45 0.215285636 ubox
5 46 0.028001335 ubox
5 48 0.070014720 ubox
5 50 0.014780165 ubox
5 68 0.014507045 ubox
5 71 0.016306785 ubox
6 28 0.010959459 ubox
6 36 0.132604310 ubox
6 44 0.217587850 ubox
6 47 0.070186197 ubox
6 49 0.014784399 ubox
6 69 0.010504940 ubox
6 72 0.013047591 ubox
7 27 0.010914159 ubox
7 35 0.132627485 ubox
7 43 0.217500344 ubox
7 46 0.069886070 ubox
7 48 0.014724600 ubox
7 67 0.014292478 ubox
7 68 0.010470251 ubox
7 71 0.013471603 ubox
7 76 0.003409364 ubox
8 34 0.132404008 ubox
8 42 0.208067487 ubox
8 66 0.013476428 ubox
8 70 0.013412714 ubox
8 75 0.003394050 ubox
10 30 0.007027652 ubox
10 42 0.094446585 ubox
10 66 0.020503958 ubox
10 70 0.006127584 ubox
11 24 0.012794599 ubox
11 29 0.006274135 ubox
11 32 0.014529001 ubox
11 37 0.099538011 ubox
11 38 0.041788728 ubox
11 39 0.083116415 ubox
11 40 0.047339111 ubox
11 41 0.168425930 ubox
11 45 0.010311334 ubox
11 46 0.005033911 ubox
11 65 0.023218730 ubox
11 69 0.007669566 ubox
11 77 0.009669077 ubox
11 78 0.960889924 ubox
11 79 0.040813376 ubox
12 23 0.012896655 ubox
12 28 0.005322581 ubox
12 31 0.013167788 ubox
12 32 0.131555103 ubox
12 36 0.100441616 ubox
12 37 0.043801359 ubox
12 38 0.090936300 ubox
12 39 0.046048040 ubox
12 40 0.168917334 ubox
12 41 0.029995080 ubox
12 44 0.010391158 ubox
12 45 0.005016435 ubox
12 59 0.007890831 ubox
12 64 0.023219596 ubox
12 68 0.007904688 ubox
12 76 0.009207895 ubox
12 77 0.963089154 ubox
12 78 0.033951881 ubox
13 21 0.014030923 ubox
13 27 0.003879074 ubox
13 31 0.131758017 ubox
13 35 0.102524511 ubox
13 36 0.033023633 ubox
13 37 0.092277895 ubox
13 38 0.042882422 ubox
13 39 0.151171367 ubox
13 40 0.030053744 ubox
13 43 0.011404526 ubox
13 58 0.008035710 ubox
13 63 0.023095350 ubox
13 67 0.007907523 ubox
13 76 0.963381690 ubox
13 77 0.024798314 ubox
14 20 0.014251992 ubox
14 30 0.105176817 ubox
14 34 0.102395402 ubox
14 42 0.011348189 ubox
14 57 0.008083701 ubox
14 66 0.007867608 ubox
14 75 0.963420544 ubox
15 19 0.014150206 ubox
15 30 0.083761138 ubox
15 73 0.786243464 ubox
16 29 0.115474624 ubox
16 31 0.087854513 ubox
16 35 0.207793031 ubox
16 55 0.007723003 ubox
16 58 0.006576245 ubox
16 71 0.948247153 ubox
16 72 0.164739286 ubox
17 30 0.087947591 ubox
17 34 0.207818684 ubox
17 54 0.007730454 ubox
17 57 0.006567075 ubox
17 70 0.962861128 ubox
18 25 0.010257418 ubox
18 28 0.158504846 ubox
18 69 0.962634658 ubox
19 24 0.010473172 ubox
19 25 0.004343805 ubox
19 26 0.009320896 ubox
19 27 0.159444057 ubox
19 28 0.012808789 ubox
19 29 0.004176385 ubox
19 32 0.216102114 ubox
19 56 0.006209555 ubox
19 68 0.962791051 ubox
20 24 0.004696613 ubox
20 25 0.006712176 ubox
20 26 0.158279471 ubox
20 27 0.012994145 ubox
20 28 0.003301893 ubox
20 31 0.216566135 ubox
20 55 0.006230721 ubox
20 67 0.962767092 ubox
21 30 0.216539806 ubox
21 54 0.006220944 ubox
21 66 0.961422929 ubox
24 34 0.041790861 ubox
24 54 0.014538854 ubox
24 61 0.083743599 ubox
25 33 0.040828392 ubox
25 53 0.014092453 ubox
25 60 0.080626116 ubox
25 62 0.567432053 ubox
26 61 0.497276084 ubox
27 34 0.062577081 ubox
27 54 0.010836020 ubox
27 61 0.760146489 ubox
28 33 0.057929888 ubox
28 53 0.010463537 ubox
28 60 0.807364631 ubox
28 62 0.074051880 ubox
29 42 0.003721563 ubox
29 57 0.161721553 ubox
29 61 0.075492405 ubox
29 66 0.006271852 ubox
30 41 0.007966343 ubox
30 43 0.017214145 ubox
30 55 0.125101317 ubox
30 56 0.149779645 ubox
30 58 0.921603470 ubox
30 65 0.015338497 ubox
30 76 0.008681835 ubox
31 42 0.017231271 ubox
31 54 0.140031310 ubox
31 57 0.921158593 ubox
31 75 0.008696623 ubox
32 73 0.009213450 ubox
33 39 0.012568120 ubox
33 44 0.344161481 ubox
33 47 0.007207878 ubox
33 49 0.007804363 ubox
33 72 0.009242334 ubox
34 38 0.010203504 ubox
34 43 0.360126787 ubox
34 46 0.006297710 ubox
34 48 0.007275352 ubox
34 55 0.852624493 ubox
34 58 0.036100862 ubox
34 67 0.008734418 ubox
34 71 0.009246791 ubox
35 42 0.359837007 ubox
35 54 0.853443623 ubox
35 57 0.036087464 ubox
35 61 0.022792008 ubox
35 66 0.008881194 ubox
35 70 0.009226365 ubox
36 53 0.805814121 ubox
36 60 0.022213362 ubox
36 62 0.111380126 ubox
37 54 0.018612744 ubox
37 61 0.116476285 ubox
38 53 0.020750742 ubox
38 60 0.114484802 ubox
38 62 0.005174837 ubox
39 53 0.009065666 ubox
39 60 0.005053795 ubox
39 61 0.005371259 ubox
39 62 0.011115353 ubox
40 61 0.011662591 ubox
41 57 0.097171103 ubox
42 55 0.230215329 ubox
42 56 0.071629716 ubox
42 58 0.038708244 ubox
42 76 0.077201173 ubox
43 54 0.240860634 ubox
43 57 0.038722457 ubox
43 75 0.077095454 ubox
44 53 0.237721740 ubox
44 62 0.007492226 ubox
44 74 0.075916381 ubox
45 61 0.010736183 ubox
45 73 0.064657365 ubox
46 54 0.093706195 ubox
46 61 0.025348105 ubox
46 75 0.031206773 ubox
47 53 0.091007460 ubox
47 60 0.024354527 ubox
47 62 0.070226978 ubox
47 74 0.031551514 ubox
48 54 0.062023811 ubox
48 61 0.075875482 ubox
48 73 0.030164655 ubox
48 75 0.223150917 ubox
49 53 0.056962648 ubox
49 60 0.072287292 ubox
49 62 0.037904065 ubox
49 74 0.228117743 ubox
50 61 0.040927787 ubox
50 70 0.007445477 ubox
50 73 0.228557868 ubox
51 69 0.007021450 ubox
51 72 0.226725807 ubox
52 70 0.231124011 ubox
52 73 0.099009047 ubox
53 69 0.231203597 ubox
53 72 0.113142405 ubox
54 67 0.033468233 ubox
54 68 0.228153953 ubox
54 71 0.115325875 ubox
54 76 0.059157416 ubox
55 66 0.043709621 ubox
55 70 0.114632286 ubox
55 75 0.059290441 ubox
56 66 0.204492687 ubox
56 70 0.004467801 ubox
56 73 0.059565417 ubox
57 65 0.202164755 ubox
57 67 0.147278774 ubox
57 71 0.029025932 ubox
57 72 0.055968889 ubox
57 76 0.025680996 ubox
58 66 0.147514315 ubox
58 70 0.020865464 ubox
58 75 0.025732093 ubox
59 70 0.063932574 ubox
59 73 0.025947702 ubox
60 69 0.070145355 ubox
60 72 0.025942388 ubox
61 68 0.070083148 ubox
61 71 0.025858248 ubox
11 78 0.9500000 lbox
12 77 0.9500000 lbox
13 76 0.9500000 lbox
14 75 0.9500000 lbox
16 71 0.9500000 lbox
17 70 0.9500000 lbox
18 69 0.9500000 lbox
19 68 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
showpage
end
%%EOF
