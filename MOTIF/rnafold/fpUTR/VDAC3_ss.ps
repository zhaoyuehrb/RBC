%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCGAAGCGCGCGACCGUGGCGCGACACGCCGGCGCACAGGCGCUCUCGGGGAGGGGCGGCGCGCAGGCGCGGCUGGGGGUGCGAGGCUGCGCAGGCGCGGACGGCGUUGGUUUGAAGACCUUCAGCGUUGCCCUGGCGGAGCAGAGACAGGCCCUCGGGGUGGAGGUCUUUGGUUUCAUAAGAGCCUGAGAGAGAUUUUUCUAAGAU\
) } def
/len { sequence length } bind def

/coor [
[91.87351990 166.55500793]
[84.57235718 164.83947754]
[73.46512604 174.92060852]
[62.35788727 185.00175476]
[51.25065613 195.08288574]
[40.14342117 205.16403198]
[29.03618813 215.24516296]
[18.00431061 225.40870667]
[7.04840088 235.65409851]
[-3.90750861 245.89949036]
[-14.86341763 256.14489746]
[-25.81932640 266.39028931]
[-36.46533585 276.95733643]
[-46.79200363 287.83666992]
[-57.11867142 298.71600342]
[-60.75693512 307.09460449]
[-67.68099976 309.67898560]
[-78.16850281 320.40335083]
[-80.17539978 326.70288086]
[-84.42454529 330.47671509]
[-89.13151550 331.28506470]
[-99.93367004 341.69244385]
[-110.73583221 352.09982300]
[-121.53798676 362.50720215]
[-123.27297211 378.45614624]
[-136.90069580 386.92163086]
[-151.96714783 381.40966797]
[-156.91461182 366.14852905]
[-147.94784546 352.84527588]
[-131.94535828 351.70501709]
[-121.14320374 341.29766846]
[-110.34104919 330.89028931]
[-99.53888702 320.48291016]
[-88.89288330 309.91586304]
[-78.40538025 299.19149780]
[-67.99800873 288.38931274]
[-57.67133713 277.50997925]
[-47.34466934 266.63064575]
[-47.28279877 263.82809448]
[-46.10707474 260.88119507]
[-43.75694656 258.21429443]
[-40.32647705 256.26586914]
[-36.06472015 255.43437195]
[-25.10881042 245.18898010]
[-14.15289974 234.94358826]
[-3.19699073 224.69819641]
[7.75891876 214.45280457]
[10.49729347 207.58818054]
[18.95504951 204.13793945]
[30.06228256 194.05679321]
[41.16951752 183.97566223]
[52.27674866 173.89451599]
[63.38398361 163.81336975]
[74.49121857 153.73223877]
[53.62912750 110.01377869]
[72.97487640 77.13552856]
[63.83607483 65.24089050]
[49.29278183 59.01167297]
[47.67413712 44.20528030]
[38.53533554 32.31064606]
[19.67062569 30.56794357]
[8.26596260 15.84223270]
[11.19564915 -2.22798133]
[1.70675075 -13.84524441]
[-7.78214741 -25.46250725]
[-17.27104568 -37.07977295]
[-26.75994492 -48.69703293]
[-42.24034500 -50.42764282]
[-51.69794464 -62.34437561]
[-49.95267105 -77.09190369]
[-59.44157028 -88.70916748]
[-68.93046570 -100.32643127]
[-78.41936493 -111.94369507]
[-87.90826416 -123.56095886]
[-97.39716339 -135.17822266]
[-106.88606262 -146.79548645]
[-116.37496185 -158.41275024]
[-131.52139282 -155.86694336]
[-145.90586853 -161.25047302]
[-155.65904236 -173.11518860]
[-158.15734863 -188.26953125]
[-152.72875977 -202.63705444]
[-140.83354187 -212.35298157]
[-125.67144775 -214.80378723]
[-111.32099915 -209.33018494]
[-101.64240265 -197.40457153]
[-99.23914337 -182.23486328]
[-104.75769806 -167.90164185]
[-95.26879883 -156.28437805]
[-85.77989960 -144.66711426]
[-76.29100037 -133.04985046]
[-66.80210114 -121.43259430]
[-57.31320572 -109.81533051]
[-47.82430649 -98.19806671]
[-38.33540726 -86.58080292]
[-23.53634453 -85.34656525]
[-13.74776077 -73.70018005]
[-15.14268112 -58.18593216]
[-5.65378284 -46.56866837]
[3.83511567 -34.95140457]
[13.32401371 -23.33414268]
[22.81291199 -11.71687984]
[34.14265060 -13.05974960]
[44.82429886 -8.72176933]
[52.16065216 0.32653692]
[54.23928833 11.91015339]
[50.42996597 23.17184448]
[59.56877136 35.06647491]
[73.45839691 40.44491577]
[75.73070526 56.10208893]
[84.86950684 67.99672699]
[96.78469849 60.71828079]
[111.92993927 58.24437714]
[128.26452637 61.89947891]
[143.24687195 72.12287903]
[154.21760559 88.29601288]
[158.83523560 108.73305511]
[172.76702881 103.17382812]
[186.69883728 97.61460114]
[200.63063049 92.05538177]
[214.56242371 86.49615479]
[228.49423218 80.93692780]
[242.42602539 75.37770081]
[256.35781860 69.81847382]
[270.28961182 64.25924683]
[284.22143555 58.70002365]
[270.90264893 51.79999542]
[266.23269653 37.54547501]
[272.88668823 24.10209846]
[287.05291748 19.17084503]
[300.61636353 25.57655716]
[305.80725098 39.64975357]
[299.65264893 53.32801437]
[314.02487183 49.03389359]
[328.39709473 44.73976898]
[342.76928711 40.44564438]
[357.14151001 36.15151978]
[371.51373291 31.85739708]
[385.88592529 27.56327438]
[393.21255493 22.10812950]
[400.50418091 23.31392288]
[414.93872070 19.23425484]
[422.34573364 13.88879776]
[429.61862183 15.20301914]
[444.11230469 11.33871365]
[449.56521606 -3.18868375]
[462.53424072 -11.70833015]
[478.03250122 -10.94424820]
[490.10058594 -1.19024181]
[494.09811401 13.80307293]
[488.48791504 28.27046204]
[475.42724609 36.64891815]
[459.93820190 35.71675491]
[447.97662354 25.83240700]
[433.48291016 29.69671249]
[419.01840210 33.66880798]
[404.58383179 37.74847412]
[390.18005371 41.93548584]
[375.80786133 46.22961044]
[361.43563843 50.52373505]
[347.06341553 54.81785583]
[332.69122314 59.11198044]
[318.31900024 63.40610504]
[303.94677734 67.70022583]
[289.78063965 72.63182068]
[275.84884644 78.19104767]
[261.91705322 83.75027466]
[247.98526001 89.30950165]
[234.05345154 94.86872864]
[220.12165833 100.42794800]
[206.18986511 105.98717499]
[192.25805664 111.54640198]
[178.32626343 117.10562897]
[164.39447021 122.66485596]
[161.94873047 137.46412659]
[173.35119629 147.21009827]
[184.75366211 156.95605469]
[196.15612793 166.70202637]
[207.55857849 176.44798279]
[223.60057068 176.63374329]
[233.34326172 189.37969971]
[229.31292725 204.90824890]
[214.60127258 211.30722046]
[200.49383545 203.66786194]
[197.81262207 187.85044861]
[186.41015625 178.10449219]
[175.00769043 168.35852051]
[163.60523987 158.61254883]
[152.20277405 148.86659241]
[146.08952332 153.21150208]
[133.86303711 161.90132141]
[127.74980164 166.24623108]
[133.20515442 180.21903992]
[138.66050720 194.19183350]
[144.11587524 208.16462708]
[149.57122803 222.13743591]
[162.70559692 231.95681763]
[160.50050354 248.20704651]
[145.22438049 254.17124939]
[132.59197998 243.71398926]
[135.59843445 227.59278870]
[130.14306641 213.61999512]
[124.68771362 199.64718628]
[119.23236084 185.67439270]
[113.77700043 171.70159912]
[106.47583771 169.98606873]
[104.56445312 184.86378479]
[104.48038483 199.86355591]
[90.48406219 205.25827026]
[80.35440826 194.19526672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 54]
[3 53]
[4 52]
[5 51]
[6 50]
[7 49]
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[13 38]
[14 37]
[15 36]
[17 35]
[18 34]
[21 33]
[22 32]
[23 31]
[24 30]
[56 111]
[57 110]
[59 108]
[60 107]
[63 102]
[64 101]
[65 100]
[66 99]
[67 98]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[117 174]
[118 173]
[119 172]
[120 171]
[121 170]
[122 169]
[123 168]
[124 167]
[125 166]
[126 165]
[133 164]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[141 157]
[142 156]
[144 155]
[145 154]
[175 189]
[176 188]
[177 187]
[178 186]
[179 185]
[192 205]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
