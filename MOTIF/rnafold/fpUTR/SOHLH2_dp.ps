%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SOHLH2)
} def

/sequence { (\
UUAGUGCAGGGGGCGGGCCCGGGACGCAGCGGCUGUGGAGCUCCUCCUGCUGGGAGGCUGCCCCAGGACCCAGCACGUGCGCAGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 84 0.121658129 ubox
1 87 0.040505120 ubox
2 83 0.161821391 ubox
2 86 0.054431950 ubox
4 14 0.007697574 ubox
4 25 0.007539758 ubox
4 27 0.014070295 ubox
4 76 0.017186332 ubox
4 80 0.009762389 ubox
4 82 0.995172172 ubox
4 85 0.017313414 ubox
4 88 0.005321764 ubox
5 13 0.007669180 ubox
5 15 0.027715997 ubox
5 24 0.007527640 ubox
5 26 0.014071368 ubox
5 28 0.006203487 ubox
5 75 0.017250358 ubox
5 79 0.009743737 ubox
5 81 0.995674793 ubox
5 83 0.011946112 ubox
5 84 0.015146868 ubox
5 86 0.003771596 ubox
5 87 0.004613463 ubox
6 14 0.039427796 ubox
6 25 0.013945384 ubox
6 27 0.006895761 ubox
6 50 0.005052221 ubox
6 74 0.017265137 ubox
6 78 0.009816455 ubox
6 80 0.998427347 ubox
6 82 0.013190052 ubox
6 85 0.005025365 ubox
6 88 0.004068063 ubox
7 13 0.039419966 ubox
7 26 0.006885240 ubox
7 49 0.005148189 ubox
7 73 0.017239869 ubox
7 77 0.009832193 ubox
7 79 0.998435585 ubox
7 81 0.013143383 ubox
7 84 0.005021085 ubox
7 87 0.004076576 ubox
8 48 0.006122486 ubox
8 78 0.992219639 ubox
9 20 0.012637054 ubox
9 47 0.007861616 ubox
9 48 0.010162074 ubox
9 71 0.009775584 ubox
10 19 0.012644094 ubox
10 20 0.012977120 ubox
10 46 0.007840539 ubox
10 47 0.013565936 ubox
10 64 0.006359922 ubox
10 70 0.009453767 ubox
10 71 0.009613821 ubox
11 18 0.012630612 ubox
11 19 0.012996009 ubox
11 20 0.007983448 ubox
11 45 0.007789223 ubox
11 46 0.013595335 ubox
11 63 0.006847765 ubox
11 69 0.008662779 ubox
11 70 0.009552081 ubox
11 71 0.005993001 ubox
12 18 0.013075611 ubox
12 19 0.008227922 ubox
12 44 0.007765221 ubox
12 45 0.013605544 ubox
12 62 0.007226608 ubox
12 69 0.009446337 ubox
12 70 0.006005731 ubox
12 89 0.007150025 ubox
13 18 0.008225396 ubox
13 43 0.007421065 ubox
13 44 0.013645434 ubox
13 61 0.007235311 ubox
13 69 0.005974753 ubox
13 74 0.992934119 ubox
13 88 0.007237511 ubox
14 60 0.007241492 ubox
14 73 0.992805409 ubox
14 87 0.007223018 ubox
15 43 0.013945244 ubox
15 59 0.007099802 ubox
15 70 0.020120720 ubox
15 71 0.994443267 ubox
15 89 0.003474920 ubox
16 42 0.015332819 ubox
16 58 0.006949968 ubox
16 69 0.020296786 ubox
16 70 0.998226471 ubox
16 71 0.024006713 ubox
16 89 0.039080602 ubox
17 41 0.015712113 ubox
17 69 0.997961500 ubox
17 70 0.023113662 ubox
17 88 0.039566689 ubox
18 40 0.015721053 ubox
18 54 0.006307473 ubox
18 67 0.908598356 ubox
18 87 0.033226431 ubox
19 32 0.005754407 ubox
19 38 0.015532242 ubox
19 53 0.006331214 ubox
19 66 0.908048325 ubox
19 67 0.413822536 ubox
19 86 0.025271001 ubox
19 87 0.022034328 ubox
20 31 0.006091214 ubox
20 37 0.015448999 ubox
20 52 0.006330443 ubox
20 66 0.414556065 ubox
20 86 0.030835518 ubox
21 30 0.006276639 ubox
21 36 0.013134748 ubox
21 51 0.006204062 ubox
21 63 0.020177069 ubox
21 64 0.991802261 ubox
21 85 0.037624316 ubox
22 34 0.007029267 ubox
22 50 0.005743019 ubox
22 62 0.020541728 ubox
22 63 0.993143867 ubox
22 64 0.103233858 ubox
22 89 0.003849528 ubox
23 33 0.007432854 ubox
23 61 0.016580979 ubox
23 62 0.987971653 ubox
23 63 0.103417282 ubox
23 88 0.003828865 ubox
24 36 0.005792270 ubox
25 31 0.009885641 ubox
25 35 0.006158136 ubox
25 37 0.084003898 ubox
25 60 0.016369057 ubox
25 81 0.039996080 ubox
25 86 0.005046252 ubox
26 30 0.009352330 ubox
26 33 0.012523381 ubox
26 36 0.084676164 ubox
26 41 0.003396578 ubox
26 58 0.017445961 ubox
26 59 0.006818427 ubox
26 61 0.990006340 ubox
26 80 0.040358782 ubox
26 85 0.005118126 ubox
27 32 0.012583017 ubox
27 35 0.084770353 ubox
27 40 0.003399465 ubox
27 57 0.017591778 ubox
27 60 0.994454205 ubox
27 79 0.040303712 ubox
27 84 0.005109535 ubox
28 34 0.084561659 ubox
28 45 0.005199154 ubox
28 59 0.994177018 ubox
28 78 0.033340529 ubox
29 33 0.082708428 ubox
29 41 0.003443342 ubox
29 44 0.005493704 ubox
29 58 0.994023614 ubox
29 61 0.031998861 ubox
29 78 0.022655569 ubox
29 82 0.004963333 ubox
29 88 0.017108752 ubox
30 37 0.004974450 ubox
30 40 0.003620682 ubox
30 52 0.026742432 ubox
30 57 0.961953037 ubox
30 60 0.032012974 ubox
30 77 0.038496789 ubox
30 81 0.004965333 ubox
30 87 0.017142598 ubox
31 36 0.005144703 ubox
31 42 0.881795889 ubox
31 43 0.233127189 ubox
31 44 0.007730028 ubox
31 51 0.074937664 ubox
31 59 0.031735492 ubox
31 76 0.038509964 ubox
31 80 0.004737728 ubox
32 41 0.971457420 ubox
32 42 0.026378447 ubox
32 43 0.006893284 ubox
32 50 0.075355434 ubox
32 58 0.031720041 ubox
32 74 0.040506133 ubox
32 85 0.017156139 ubox
33 40 0.972517563 ubox
33 49 0.075223759 ubox
33 53 0.081073380 ubox
33 54 0.168212758 ubox
33 56 0.011843573 ubox
33 57 0.031549647 ubox
33 66 0.005999491 ubox
33 73 0.040534023 ubox
33 84 0.017164123 ubox
34 39 0.962783962 ubox
34 49 0.003855064 ubox
34 52 0.077897465 ubox
34 53 0.161312789 ubox
34 55 0.011934566 ubox
34 56 0.030610333 ubox
34 65 0.006115065 ubox
34 72 0.040508875 ubox
34 83 0.017159256 ubox
35 41 0.010044074 ubox
35 48 0.019327848 ubox
35 50 0.141926977 ubox
35 51 0.028597702 ubox
35 64 0.006161296 ubox
35 71 0.040458995 ubox
35 82 0.017158482 ubox
36 40 0.009425795 ubox
36 49 0.137519846 ubox
36 52 0.006055368 ubox
36 65 0.039305349 ubox
36 81 0.016784859 ubox
37 43 0.003828744 ubox
37 44 0.012941711 ubox
37 47 0.203685382 ubox
37 48 0.028740076 ubox
37 51 0.006346015 ubox
37 63 0.007322514 ubox
37 64 0.039657339 ubox
37 70 0.008554302 ubox
37 80 0.009475005 ubox
38 43 0.013438750 ubox
38 46 0.204346606 ubox
38 47 0.025789503 ubox
38 50 0.006282477 ubox
38 61 0.007713345 ubox
38 62 0.009199546 ubox
38 63 0.039605588 ubox
38 69 0.008537783 ubox
39 45 0.204446528 ubox
39 48 0.008445350 ubox
39 51 0.034450015 ubox
39 59 0.017668381 ubox
40 44 0.199950007 ubox
40 47 0.008416965 ubox
40 50 0.035384502 ubox
40 58 0.018030969 ubox
40 61 0.091036452 ubox
40 74 0.004959292 ubox
40 78 0.004269973 ubox
40 80 0.003392998 ubox
41 49 0.035386040 ubox
41 56 0.037884551 ubox
41 57 0.014391077 ubox
41 60 0.091200913 ubox
41 66 0.005190971 ubox
41 73 0.004967284 ubox
41 77 0.004298817 ubox
41 79 0.003454635 ubox
42 54 0.010364148 ubox
42 55 0.054120688 ubox
42 56 0.007835855 ubox
42 65 0.005138002 ubox
42 72 0.004765737 ubox
43 53 0.022069729 ubox
43 54 0.064202899 ubox
43 56 0.057028593 ubox
43 57 0.265202087 ubox
44 52 0.022169952 ubox
44 53 0.064007028 ubox
44 54 0.026467166 ubox
44 56 0.968662073 ubox
45 52 0.058835910 ubox
45 53 0.014114196 ubox
45 54 0.059490310 ubox
45 55 0.972052237 ubox
45 68 0.007518127 ubox
46 52 0.017516821 ubox
46 53 0.087300390 ubox
46 54 0.971120825 ubox
46 56 0.003236970 ubox
46 67 0.007657847 ubox
47 52 0.101271336 ubox
47 53 0.969474306 ubox
47 54 0.010537366 ubox
47 56 0.007971547 ubox
47 66 0.007654052 ubox
48 52 0.873384858 ubox
48 53 0.013443119 ubox
48 55 0.007976502 ubox
48 65 0.007636385 ubox
48 75 0.017825828 ubox
49 64 0.007535688 ubox
49 74 0.022786743 ubox
50 73 0.022802453 ubox
51 72 0.023099705 ubox
52 63 0.007573888 ubox
52 64 0.003180666 ubox
52 71 0.023154703 ubox
53 62 0.007617150 ubox
53 63 0.003185699 ubox
53 70 0.023153284 ubox
54 61 0.007599717 ubox
54 62 0.003171480 ubox
54 69 0.023080187 ubox
58 66 0.021886191 ubox
58 67 0.006027933 ubox
59 65 0.021902872 ubox
59 66 0.005894677 ubox
60 64 0.021560371 ubox
73 80 0.005408252 ubox
73 82 0.004848198 ubox
73 88 0.018321601 ubox
74 79 0.005408875 ubox
74 81 0.004849607 ubox
74 87 0.018354229 ubox
76 86 0.020883018 ubox
77 85 0.021138813 ubox
77 88 0.005007163 ubox
78 84 0.020985162 ubox
78 86 0.005201857 ubox
78 87 0.004141197 ubox
79 85 0.007003528 ubox
79 88 0.013986056 ubox
80 84 0.006962364 ubox
80 87 0.014021300 ubox
81 88 0.054000158 ubox
82 87 0.054120739 ubox
4 82 0.9500000 lbox
5 81 0.9500000 lbox
6 80 0.9500000 lbox
7 79 0.9500000 lbox
8 78 0.9500000 lbox
13 74 0.9500000 lbox
14 73 0.9500000 lbox
15 71 0.9500000 lbox
16 70 0.9500000 lbox
17 69 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
21 64 0.9500000 lbox
22 63 0.9500000 lbox
23 62 0.9500000 lbox
26 61 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
