%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCUCGAAGUCCGCCGGCCAAUCGAAGGCGGGCCCCAGCGGCGCGUGCGCGCCGCGGCCAGCGCGCGCGGGCGGGGGGGCAGGCGCGCCCCGGACCCAGGAUUUAUAAAGGCGAGGCCGGGACCGGCGCGCGCUCUCGUCGCCCCCGCUGUCCCGGCGGCGCCAACCGAAGCGCCCCGCCUGAUCCGUGUCCGAC\
) } def
/len { sequence length } bind def

/coor [
[-18.21929741 218.44927979]
[-29.22351837 221.27619934]
[-40.44882584 219.92907715]
[-48.15398788 232.79882812]
[-55.85914993 245.66857910]
[-63.56430817 258.53833008]
[-71.16712952 271.46881104]
[-78.66712952 284.45916748]
[-86.16712952 297.44955444]
[-85.24689484 317.58001709]
[-102.37882996 326.53237915]
[-109.46289825 339.75418091]
[-116.54695892 352.97598267]
[-115.48612213 369.34078979]
[-129.27633667 378.21557617]
[-143.73143005 370.47073364]
[-143.98121643 354.07348633]
[-129.76876831 345.89193726]
[-122.68470001 332.67013550]
[-115.60063171 319.44833374]
[-119.42816162 309.95993042]
[-117.35198212 299.71722412]
[-109.82196045 292.15658569]
[-99.15750885 289.94955444]
[-91.65750885 276.95916748]
[-84.15750885 263.96881104]
[-83.53501892 256.59631348]
[-76.43405914 250.83316040]
[-68.72889709 237.96340942]
[-61.02373886 225.09365845]
[-53.31857681 212.22390747]
[-57.64148712 206.76138306]
[-60.61621475 200.46237183]
[-75.56903839 201.65112305]
[-90.52185822 202.83985901]
[-105.47467804 204.02861023]
[-109.79008484 207.00305176]
[-114.35796356 207.92512512]
[-118.35173035 207.04379272]
[-121.16438293 204.90081787]
[-136.15682983 205.37672424]
[-151.14927673 205.85264587]
[-166.14172363 206.32856750]
[-181.13417053 206.80448914]
[-196.12663269 207.28041077]
[-211.11907959 207.75633240]
[-224.76098633 216.85743713]
[-239.34188843 209.35215759]
[-239.86219788 192.96125793]
[-225.78666687 184.54631042]
[-211.59498596 192.76387024]
[-196.60253906 192.28796387]
[-181.61009216 191.81204224]
[-166.61764526 191.33612061]
[-151.62519836 190.86019897]
[-136.63275146 190.38427734]
[-121.64030457 189.90835571]
[-106.66342926 189.07579041]
[-91.71060944 187.88703918]
[-76.75778198 186.69828796]
[-61.80496216 185.50955200]
[-51.37188339 166.86283875]
[-31.10770988 159.45153809]
[-10.71307087 167.11485291]
[1.64207816 158.60896301]
[7.73772144 145.01879883]
[23.49211311 143.56631470]
[35.84726334 135.06040955]
[48.20241165 126.55451965]
[60.55755997 118.04862213]
[72.91270447 109.54272461]
[85.26785278 101.03682709]
[94.72614288 89.39463043]
[100.52132416 75.55931091]
[106.31649780 61.72399902]
[112.11167908 47.88868332]
[117.90685272 34.05336761]
[123.70203400 20.21805382]
[129.49720764 6.38274002]
[135.18244934 -7.49811316]
[140.75738525 -21.42363167]
[146.33232117 -35.34915161]
[151.79660034 -49.31845856]
[157.14990234 -63.33067703]
[162.39186096 -77.38492584]
[167.52215576 -91.48031616]
[172.65246582 -105.57569885]
[177.78276062 -119.67108917]
[182.91307068 -133.76647949]
[188.04336548 -147.86186218]
[185.49263000 -163.47610474]
[197.11628723 -172.78952026]
[202.24659729 -186.88490295]
[207.37689209 -200.98028564]
[212.50720215 -215.07568359]
[209.95645142 -230.68991089]
[221.58012390 -240.00332642]
[226.71041870 -254.09870911]
[231.84072876 -268.19409180]
[231.83625793 -277.33947754]
[237.16586304 -282.47134399]
[242.51914978 -296.48355103]
[236.31529236 -310.77166748]
[241.94389343 -324.90579224]
[255.60365295 -330.73217773]
[260.95693970 -344.74438477]
[252.37258911 -357.67065430]
[253.05921936 -373.17254639]
[262.75280762 -385.28921509]
[277.72595215 -389.36160278]
[292.22119141 -383.82379150]
[300.66482544 -370.80514526]
[299.81005859 -355.31161499]
[289.98559570 -343.30081177]
[274.96914673 -339.39108276]
[269.61587524 -325.37887573]
[275.91113281 -311.92877197]
[270.68176270 -297.64212036]
[256.53137207 -291.13027954]
[251.17807007 -277.11804199]
[245.93611145 -263.06381226]
[240.80581665 -248.96841431]
[235.67550659 -234.87301636]
[238.59320068 -220.26698303]
[226.60258484 -209.94537354]
[221.47229004 -195.84999084]
[216.34197998 -181.75459290]
[211.21168518 -167.65921021]
[214.12937927 -153.05317688]
[202.13876343 -142.73156738]
[197.00845337 -128.63618469]
[191.87815857 -114.54078674]
[186.74784851 -100.44539642]
[181.61755371 -86.35001373]
[176.48724365 -72.25462341]
[177.15443420 -64.88606262]
[171.16210938 -57.97738266]
[165.80882263 -43.96516418]
[166.35900879 -36.58694458]
[160.25784302 -29.77421379]
[154.68289185 -15.84869576]
[149.10795593 -1.92317641]
[149.54101562 5.46284437]
[143.33251953 12.17791748]
[137.53733826 26.01323128]
[131.74217224 39.84854507]
[125.94699097 53.68386078]
[120.15181732 67.51917267]
[114.35663605 81.35449219]
[108.56146240 95.18980408]
[113.59111023 97.16904449]
[117.85365295 101.81250763]
[129.79008484 110.89665222]
[141.72650146 119.98080444]
[161.81149292 121.61632538]
[168.52307129 139.74374390]
[180.74171448 148.44459534]
[192.96035767 157.14544678]
[201.77622986 159.57814026]
[205.30235291 166.08255005]
[217.38140869 174.97616577]
[229.46044922 183.86978149]
[241.53950500 192.76339722]
[253.61856079 201.65702820]
[268.36495972 196.82757568]
[283.12335205 201.62022400]
[292.21884155 214.19209290]
[292.15402222 229.70903015]
[282.95382690 242.20446777]
[268.15591431 246.87365723]
[253.45037842 241.92118835]
[244.49180603 229.25140381]
[244.72494507 213.73608398]
[232.64588928 204.84245300]
[220.56683350 195.94883728]
[208.48777771 187.05522156]
[196.40873718 178.16160583]
[184.25950623 169.36408997]
[172.04086304 160.66323853]
[159.82221985 151.96238708]
[149.92562866 154.55795288]
[140.02813721 151.20184326]
[133.48159790 142.77526855]
[132.64236450 131.91722107]
[120.70593262 122.83308411]
[108.76950836 113.74893951]
[93.77375793 113.39197540]
[81.41860199 121.89787292]
[69.06345367 130.40376282]
[56.70830917 138.90966797]
[44.35316086 147.41555786]
[31.99801064 155.92146301]
[25.01864433 170.12002563]
[10.14797592 170.96411133]
[-2.20717263 179.47001648]
[-0.31321338 190.89837646]
[-2.67878580 202.18164062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 31]
[4 30]
[5 29]
[6 28]
[7 26]
[8 25]
[9 24]
[11 20]
[12 19]
[13 18]
[33 61]
[34 60]
[35 59]
[36 58]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[64 195]
[65 194]
[67 192]
[68 191]
[69 190]
[70 189]
[71 188]
[72 187]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 142]
[81 141]
[82 140]
[83 138]
[84 137]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[92 128]
[93 127]
[94 126]
[95 125]
[97 123]
[98 122]
[99 121]
[101 120]
[102 119]
[105 116]
[106 115]
[152 186]
[153 185]
[154 184]
[156 180]
[157 179]
[158 178]
[160 177]
[161 176]
[162 175]
[163 174]
[164 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
