%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GNAT1)
} def

/sequence { (\
AGUUGAUUGCAGGUCCUCCUGGGGCCAGAAGGGUGCCUGGGAGGCCAGGUUCUGGGGAUCCCCUCCAUCCAGAAGAACCACCUGCUCACUCUGUCCCUUCGCCUGCUGCUGGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.010663441 ubox
1 90 0.564763047 ubox
1 92 0.427718715 ubox
2 7 0.008852105 ubox
2 10 0.010827826 ubox
2 89 0.649060949 ubox
2 91 0.452278827 ubox
2 115 0.005409685 ubox
3 9 0.010767951 ubox
3 88 0.467749800 ubox
3 93 0.003357665 ubox
3 114 0.005148286 ubox
4 11 0.005587346 ubox
4 88 0.739940172 ubox
4 113 0.004656489 ubox
5 10 0.006003498 ubox
5 87 0.895908578 ubox
5 91 0.172106782 ubox
5 92 0.005279865 ubox
6 86 0.853400426 ubox
6 90 0.169246097 ubox
8 88 0.042424528 ubox
9 85 0.996780667 ubox
9 87 0.020327852 ubox
9 106 0.005467353 ubox
10 84 0.999615894 ubox
10 105 0.005474032 ubox
11 83 0.999027286 ubox
11 104 0.005470548 ubox
12 26 0.004602982 ubox
12 46 0.072386968 ubox
12 82 0.997176864 ubox
12 103 0.005455574 ubox
12 116 0.016699851 ubox
13 25 0.004643686 ubox
13 45 0.081079603 ubox
13 81 0.995954107 ubox
13 102 0.005449320 ubox
13 115 0.016856515 ubox
14 24 0.004665768 ubox
14 33 0.005032110 ubox
14 44 0.013756980 ubox
14 80 0.931686368 ubox
14 101 0.005319153 ubox
14 114 0.016848925 ubox
15 22 0.005013873 ubox
15 23 0.005528117 ubox
15 32 0.014153696 ubox
15 43 0.012585618 ubox
15 44 0.987624059 ubox
15 75 0.003741835 ubox
15 113 0.016837242 ubox
16 21 0.005034186 ubox
16 22 0.005526439 ubox
16 31 0.014218129 ubox
16 43 0.999340704 ubox
16 44 0.004098742 ubox
16 75 0.015305695 ubox
16 112 0.016815052 ubox
17 21 0.004978863 ubox
17 30 0.013888314 ubox
17 41 0.011630519 ubox
17 42 0.999298833 ubox
17 74 0.015075356 ubox
17 76 0.007824581 ubox
17 111 0.016047890 ubox
18 40 0.024998199 ubox
18 41 0.999209628 ubox
18 75 0.007969647 ubox
19 28 0.014278111 ubox
19 39 0.033101663 ubox
19 40 0.998936356 ubox
19 72 0.017970982 ubox
20 27 0.014337726 ubox
20 39 0.976996516 ubox
20 40 0.003999919 ubox
20 71 0.018172079 ubox
20 108 0.003711167 ubox
21 26 0.014295959 ubox
21 37 0.549088576 ubox
21 38 0.831163841 ubox
21 70 0.018152097 ubox
21 97 0.004517381 ubox
21 107 0.004596912 ubox
22 36 0.551662957 ubox
22 37 0.832801391 ubox
22 38 0.025864098 ubox
22 69 0.018120254 ubox
22 96 0.004520350 ubox
22 104 0.015877932 ubox
22 106 0.004267551 ubox
23 36 0.829304952 ubox
23 37 0.032166879 ubox
23 46 0.003310605 ubox
23 68 0.016219921 ubox
23 95 0.004520086 ubox
23 103 0.016542922 ubox
24 34 0.952531129 ubox
24 36 0.036528728 ubox
24 45 0.003319788 ubox
24 94 0.004510097 ubox
24 102 0.016553127 ubox
25 32 0.130896378 ubox
25 33 0.989035277 ubox
25 35 0.034089859 ubox
25 44 0.003319864 ubox
25 55 0.007056042 ubox
25 93 0.004051468 ubox
25 101 0.016483463 ubox
26 31 0.141557489 ubox
26 32 0.986938680 ubox
26 35 0.031737559 ubox
26 43 0.003313632 ubox
26 54 0.007145415 ubox
27 34 0.036529275 ubox
27 53 0.007152797 ubox
27 64 0.004665610 ubox
27 92 0.003704181 ubox
28 52 0.007154780 ubox
28 63 0.004770160 ubox
28 65 0.013241263 ubox
28 91 0.003681712 ubox
28 100 0.016825475 ubox
29 51 0.007119822 ubox
29 64 0.013053416 ubox
29 90 0.003463566 ubox
29 99 0.016938886 ubox
30 38 0.003185541 ubox
30 92 0.005446947 ubox
30 98 0.016942935 ubox
31 37 0.003208445 ubox
31 62 0.014174092 ubox
31 91 0.005587055 ubox
31 97 0.016953068 ubox
32 61 0.014207392 ubox
32 90 0.005624815 ubox
32 96 0.016952446 ubox
33 52 0.004408202 ubox
33 60 0.014220572 ubox
33 89 0.005697637 ubox
33 95 0.016932142 ubox
34 88 0.005703108 ubox
35 50 0.017032614 ubox
35 87 0.005673949 ubox
35 94 0.013204594 ubox
36 49 0.019489700 ubox
36 57 0.014201959 ubox
36 93 0.013600191 ubox
37 48 0.019515672 ubox
37 56 0.014201983 ubox
38 47 0.019652723 ubox
38 55 0.014172425 ubox
38 88 0.008509091 ubox
39 46 0.019680758 ubox
39 86 0.005786071 ubox
39 87 0.008830133 ubox
39 90 0.010008728 ubox
39 91 0.008313500 ubox
40 45 0.019659646 ubox
40 53 0.014174341 ubox
40 85 0.006559932 ubox
40 86 0.008356102 ubox
40 89 0.010413089 ubox
40 90 0.008066222 ubox
40 92 0.003663686 ubox
41 52 0.014204555 ubox
41 85 0.008346621 ubox
41 87 0.006061397 ubox
41 89 0.008045233 ubox
41 91 0.003714468 ubox
42 51 0.014154426 ubox
42 83 0.010602501 ubox
42 86 0.005984025 ubox
42 90 0.003718231 ubox
43 50 0.013267001 ubox
43 82 0.010644920 ubox
43 85 0.005518322 ubox
43 86 0.009882219 ubox
43 87 0.006541743 ubox
43 89 0.003633243 ubox
44 78 0.003358765 ubox
44 81 0.010653638 ubox
44 85 0.010786037 ubox
44 86 0.005473753 ubox
45 49 0.006262933 ubox
45 55 0.020886328 ubox
45 84 0.008172248 ubox
46 54 0.021012672 ubox
46 84 0.011362253 ubox
47 53 0.020970629 ubox
47 83 0.015632757 ubox
48 52 0.020513986 ubox
48 70 0.018226420 ubox
48 79 0.994487919 ubox
48 82 0.016569590 ubox
49 69 0.018234222 ubox
49 78 0.995506502 ubox
49 81 0.016558482 ubox
50 74 0.157339766 ubox
50 75 0.010574583 ubox
50 76 0.020579405 ubox
50 77 0.984400280 ubox
50 80 0.014616399 ubox
51 73 0.314762579 ubox
51 74 0.019400009 ubox
51 75 0.014950668 ubox
51 76 0.947254960 ubox
52 72 0.338856942 ubox
52 75 0.940070316 ubox
53 67 0.233700353 ubox
53 71 0.370684669 ubox
53 74 0.887872928 ubox
54 61 0.009190568 ubox
54 62 0.050152063 ubox
54 63 0.153259697 ubox
54 64 0.190680754 ubox
54 65 0.207821525 ubox
54 66 0.331326331 ubox
54 69 0.065975941 ubox
54 70 0.400431022 ubox
55 60 0.009183191 ubox
55 61 0.050271069 ubox
55 62 0.153410976 ubox
55 63 0.197724178 ubox
55 64 0.205914807 ubox
55 65 0.331043738 ubox
55 66 0.021950179 ubox
55 68 0.059723035 ubox
55 69 0.397600604 ubox
55 70 0.047660624 ubox
56 60 0.049526572 ubox
56 61 0.152909506 ubox
56 62 0.198492418 ubox
56 63 0.268764566 ubox
56 64 0.288209016 ubox
56 65 0.027088657 ubox
56 66 0.384408504 ubox
56 68 0.114311544 ubox
56 69 0.044183133 ubox
56 70 0.781603199 ubox
56 79 0.010136248 ubox
57 61 0.195367500 ubox
57 62 0.268409371 ubox
57 63 0.287793946 ubox
57 64 0.022922799 ubox
57 65 0.390778855 ubox
57 68 0.028976279 ubox
57 69 0.782278185 ubox
57 78 0.010139695 ubox
58 64 0.374761863 ubox
58 68 0.777764825 ubox
59 67 0.745983056 ubox
59 76 0.009989159 ubox
60 75 0.010084422 ubox
63 72 0.018364770 ubox
64 71 0.018044606 ubox
64 73 0.072538425 ubox
65 72 0.077691329 ubox
68 76 0.005059435 ubox
69 75 0.005558503 ubox
87 93 0.003620572 ubox
88 92 0.005226555 ubox
93 115 0.994331866 ubox
94 114 0.998704100 ubox
95 113 0.999606234 ubox
96 112 0.999502714 ubox
96 113 0.019803095 ubox
97 111 0.998932328 ubox
97 112 0.024586242 ubox
97 113 0.003275861 ubox
98 111 0.028157424 ubox
98 112 0.003399601 ubox
99 111 0.009522153 ubox
99 114 0.003256927 ubox
100 108 0.562240567 ubox
100 111 0.009163499 ubox
100 113 0.003518781 ubox
101 107 0.456919648 ubox
101 109 0.743748759 ubox
101 110 0.012766058 ubox
102 108 0.743194620 ubox
102 112 0.004217959 ubox
102 113 0.004428956 ubox
103 111 0.004428993 ubox
103 112 0.004448744 ubox
104 111 0.004322564 ubox
105 110 0.003957238 ubox
4 88 0.9500000 lbox
5 87 0.9500000 lbox
6 86 0.9500000 lbox
9 85 0.9500000 lbox
10 84 0.9500000 lbox
11 83 0.9500000 lbox
12 82 0.9500000 lbox
13 81 0.9500000 lbox
14 80 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
48 79 0.9500000 lbox
49 78 0.9500000 lbox
50 77 0.9500000 lbox
51 76 0.9500000 lbox
52 75 0.9500000 lbox
53 74 0.9500000 lbox
56 70 0.9500000 lbox
57 69 0.9500000 lbox
58 68 0.9500000 lbox
59 67 0.9500000 lbox
93 115 0.9500000 lbox
94 114 0.9500000 lbox
95 113 0.9500000 lbox
96 112 0.9500000 lbox
97 111 0.9500000 lbox
101 109 0.9500000 lbox
102 108 0.9500000 lbox
showpage
end
%%EOF
