%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL10)
} def

/sequence { (\
ACACAUCAGGGGCUUGCUCUUGCAAAACCAAACCACAAGACAGACUUGCAAAAGAAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 22 0.004096478 ubox
2 48 0.017061640 ubox
3 21 0.004052792 ubox
3 47 0.016633410 ubox
4 16 0.004203821 ubox
4 22 0.008695878 ubox
4 48 0.012762024 ubox
5 15 0.004138477 ubox
5 21 0.008289503 ubox
5 47 0.012051721 ubox
6 12 0.004893820 ubox
6 40 0.022294730 ubox
6 44 0.023025867 ubox
6 55 0.109884150 ubox
6 58 0.046791417 ubox
7 11 0.018077022 ubox
7 16 0.005493534 ubox
7 22 0.071463118 ubox
7 39 0.024324547 ubox
7 43 0.024190468 ubox
7 48 0.050836309 ubox
7 54 0.117303398 ubox
7 57 0.063269670 ubox
8 15 0.005421111 ubox
8 20 0.026824237 ubox
8 21 0.072489241 ubox
8 46 0.007099815 ubox
8 47 0.051413903 ubox
9 14 0.004414296 ubox
9 18 0.003942970 ubox
9 19 0.032802351 ubox
9 20 0.073414352 ubox
9 29 0.188166269 ubox
9 34 0.123650286 ubox
9 45 0.007716345 ubox
9 46 0.051149694 ubox
9 47 0.012874012 ubox
10 17 0.004678237 ubox
10 18 0.032886112 ubox
10 19 0.073926441 ubox
10 28 0.183265281 ubox
10 29 0.872408947 ubox
10 33 0.113047358 ubox
10 34 0.017026843 ubox
10 45 0.050414988 ubox
10 46 0.017020193 ubox
10 47 0.024720828 ubox
11 17 0.033442267 ubox
11 18 0.073431146 ubox
11 28 0.875970847 ubox
11 29 0.129973337 ubox
11 33 0.016262961 ubox
11 34 0.008985189 ubox
11 45 0.017916797 ubox
11 46 0.029378762 ubox
12 17 0.072860425 ubox
12 23 0.008896273 ubox
12 28 0.130056201 ubox
12 33 0.008987953 ubox
12 45 0.029992323 ubox
12 49 0.013139814 ubox
12 59 0.400749251 ubox
13 22 0.008925370 ubox
13 39 0.008055812 ubox
13 43 0.037691357 ubox
13 48 0.013076178 ubox
13 54 0.004712526 ubox
13 57 0.064191780 ubox
13 58 0.405120048 ubox
14 25 0.894358756 ubox
14 26 0.035638866 ubox
14 27 0.010227420 ubox
14 31 0.005285724 ubox
14 38 0.008034528 ubox
14 42 0.029330852 ubox
14 43 0.044114126 ubox
14 44 0.008848388 ubox
14 51 0.008298498 ubox
14 53 0.004470126 ubox
14 56 0.066009282 ubox
14 57 0.403286394 ubox
15 24 0.904053196 ubox
15 25 0.026505026 ubox
15 26 0.005059506 ubox
15 30 0.004996355 ubox
15 37 0.007944348 ubox
15 42 0.055829520 ubox
15 43 0.008839187 ubox
15 50 0.009836914 ubox
15 52 0.003777891 ubox
15 55 0.066478347 ubox
15 56 0.301896455 ubox
15 57 0.006211334 ubox
16 23 0.905618053 ubox
16 29 0.004783997 ubox
16 36 0.007893734 ubox
16 41 0.061100658 ubox
16 49 0.010155460 ubox
16 59 0.008780201 ubox
17 22 0.905134929 ubox
17 43 0.003967453 ubox
17 48 0.010147622 ubox
17 54 0.399528972 ubox
17 57 0.006465041 ubox
17 58 0.008771809 ubox
18 40 0.065275013 ubox
18 53 0.394361686 ubox
18 55 0.040708413 ubox
18 56 0.004822903 ubox
18 57 0.005802465 ubox
19 39 0.065649581 ubox
19 54 0.042351489 ubox
19 57 0.003206850 ubox
20 31 0.007157811 ubox
20 38 0.065612211 ubox
20 51 0.382826785 ubox
20 52 0.012136149 ubox
20 53 0.036955541 ubox
21 26 0.003308579 ubox
21 30 0.008165924 ubox
21 37 0.065566994 ubox
21 50 0.410507851 ubox
21 51 0.009350168 ubox
21 52 0.017889601 ubox
22 29 0.008319185 ubox
22 36 0.065348931 ubox
22 49 0.411926175 ubox
23 48 0.411791439 ubox
23 58 0.003497139 ubox
24 47 0.405927420 ubox
25 46 0.369407517 ubox
25 47 0.018651497 ubox
26 46 0.024128617 ubox
26 47 0.004622870 ubox
27 46 0.008394181 ubox
28 58 0.034024125 ubox
29 57 0.034162502 ubox
30 47 0.005089450 ubox
31 46 0.005664650 ubox
31 47 0.004658398 ubox
32 46 0.004720343 ubox
33 58 0.157887739 ubox
34 48 0.019690937 ubox
34 57 0.158328678 ubox
35 47 0.017424381 ubox
36 48 0.786812625 ubox
37 47 0.791233174 ubox
38 46 0.792689194 ubox
38 47 0.015398782 ubox
39 45 0.790497372 ubox
39 46 0.015629256 ubox
39 47 0.009600826 ubox
40 46 0.010178487 ubox
41 48 0.056183533 ubox
42 47 0.050910174 ubox
45 54 0.214473509 ubox
45 57 0.227705588 ubox
45 58 0.177385176 ubox
46 52 0.007165706 ubox
46 53 0.215271931 ubox
46 54 0.017508515 ubox
46 55 0.028075535 ubox
46 56 0.227590326 ubox
46 57 0.178087858 ubox
46 58 0.004513342 ubox
47 51 0.006995412 ubox
47 52 0.211696073 ubox
47 53 0.022073463 ubox
47 54 0.032404396 ubox
47 55 0.225688870 ubox
47 56 0.177904739 ubox
47 57 0.005770314 ubox
48 59 0.129083288 ubox
49 58 0.146721324 ubox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
showpage
end
%%EOF
