%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUGCGCGCCCCCGGGCGGAGAUGGGGAGGGCACCCGGCGUUCUGAGCGGAAGUACGGUUGAGCCGAUUUCCGGGGCCACUGGUGUGACGUGUCCCGCGCUUGGCGCAGCAGGAAGCGGCGGCGAACGCGGCCUGAAUUCCCGGCGCCGGCCCCAGCUCCUCUGCCGCUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-41.70919800 49.83726883]
[-46.57854843 42.18849945]
[-47.35324097 33.29282379]
[-60.25498199 25.64134598]
[-73.15672302 17.98987007]
[-86.05846405 10.33839130]
[-98.96019745 2.68691421]
[-111.86193848 -4.96456337]
[-124.83032990 -12.50253010]
[-137.86436462 -19.92640495]
[-150.89839172 -27.35027885]
[-163.93243408 -34.77415466]
[-176.96647644 -42.19802856]
[-187.30802917 -38.71109772]
[-197.64469910 -41.45105743]
[-204.60850525 -49.27436829]
[-206.06938171 -59.42354584]
[-218.83485413 -67.30027008]
[-231.66896057 -75.06466675]
[-244.57069397 -82.71614075]
[-257.47244263 -90.36762238]
[-270.37417603 -98.01909637]
[-279.38040161 -99.71343994]
[-283.43353271 -105.91976929]
[-296.19900513 -113.79649353]
[-308.96447754 -121.67321777]
[-321.72991943 -129.54994202]
[-332.49313354 -122.35530090]
[-345.13412476 -119.78514099]
[-357.76034546 -122.18807983]
[-368.49511719 -129.17086792]
[-375.75662231 -139.66224670]
[-378.49090576 -152.07717896]
[-376.32476807 -164.55624390]
[-388.80596924 -172.87611389]
[-401.28713989 -181.19598389]
[-413.76831055 -189.51585388]
[-426.24948120 -197.83572388]
[-446.38571167 -198.19325256]
[-454.25506592 -215.83718872]
[-467.02050781 -223.71391296]
[-479.78598022 -231.59063721]
[-486.76034546 -226.97747803]
[-494.75299072 -224.63743591]
[-503.04641724 -224.75982666]
[-510.90222168 -227.31376648]
[-517.62683105 -232.05279541]
[-522.63269043 -238.53848267]
[-525.48980713 -246.18092346]
[-525.96240234 -254.29240417]
[-524.02819824 -262.14923096]
[-535.89501953 -271.32409668]
[-547.76184082 -280.49896240]
[-559.62866211 -289.67382812]
[-571.49548340 -298.84872437]
[-583.36230469 -308.02359009]
[-595.22918701 -317.19845581]
[-603.95983887 -319.98370361]
[-607.22186279 -326.63995361]
[-618.92584229 -336.02166748]
[-630.62982178 -345.40341187]
[-642.33386230 -354.78512573]
[-658.47424316 -359.97393799]
[-657.95629883 -376.91995239]
[-641.52917480 -381.11340332]
[-632.95208740 -366.48910522]
[-621.24810791 -357.10739136]
[-609.54412842 -347.72567749]
[-597.84014893 -338.34393311]
[-586.05432129 -329.06527710]
[-574.18743896 -319.89041138]
[-562.32061768 -310.71554565]
[-550.45379639 -301.54067993]
[-538.58697510 -292.36578369]
[-526.72015381 -283.19091797]
[-514.85327148 -274.01605225]
[-493.52328491 -279.05102539]
[-475.16799927 -266.58206177]
[-471.90927124 -244.35610962]
[-459.14379883 -236.47938538]
[-446.37832642 -228.60266113]
[-436.65197754 -231.84895325]
[-426.53637695 -229.13368225]
[-419.45135498 -221.12388611]
[-417.92962646 -210.31689453]
[-405.44845581 -201.99702454]
[-392.96725464 -193.67715454]
[-380.48608398 -185.35729980]
[-368.00491333 -177.03742981]
[-352.88494873 -185.22293091]
[-335.61254883 -184.63758850]
[-320.93124390 -175.35224915]
[-312.91848755 -159.83940125]
[-313.85321045 -142.31541443]
[-301.08773804 -134.43869019]
[-288.32226562 -126.56195831]
[-275.55679321 -118.68524170]
[-262.72268677 -110.92083740]
[-249.82095337 -103.26936340]
[-236.91921997 -95.61788177]
[-224.01748657 -87.96640778]
[-216.63894653 -87.25678253]
[-210.95812988 -80.06573486]
[-198.19267273 -72.18901825]
[-178.89341736 -73.06903839]
[-169.54258728 -55.23206329]
[-156.50856018 -47.80818939]
[-143.47451782 -40.38431549]
[-130.44049072 -32.96044159]
[-117.40645599 -25.53656578]
[-110.01659393 -24.95653915]
[-104.21046448 -17.86630249]
[-91.30872345 -10.21482563]
[-78.40698242 -2.56334805]
[-65.50524139 5.08812952]
[-52.60350418 12.73960686]
[-39.70176315 20.39108467]
[-19.14097595 18.78470993]
[-8.84952641 37.55950546]
[4.43701649 44.52138519]
[17.72356033 51.48326492]
[31.01010323 58.44514465]
[44.29664612 65.40702820]
[57.58318710 72.36890411]
[70.86972809 79.33078766]
[84.15627289 86.29267120]
[97.44281769 93.25454712]
[98.32231903 84.97597504]
[103.21118164 77.20415497]
[111.78851318 71.41065979]
[123.25788116 68.90855408]
[136.41354370 70.71041107]
[150.86192322 74.74082947]
[165.31030273 78.77124786]
[179.75868225 82.80166626]
[194.24188232 86.70513916]
[208.75877380 90.48136139]
[223.27566528 94.25759125]
[236.77580261 86.04044342]
[252.11228943 89.85721588]
[260.18624878 103.44348907]
[256.20755005 118.73876190]
[242.53666687 126.66862488]
[227.28431702 122.52843475]
[219.49943542 108.77448273]
[204.98254395 104.99825287]
[190.46565247 101.22202301]
[183.17945862 102.58506012]
[175.72827148 97.25004578]
[161.27989197 93.21962738]
[146.83151245 89.18921661]
[132.38311768 85.15879822]
[127.84793091 91.13224030]
[139.79481506 100.20262146]
[151.74156189 109.27319336]
[142.67080688 121.21980286]
[130.72442627 112.14951324]
[118.77754974 103.07912445]
[114.24235535 109.05257416]
[122.00675201 121.88667297]
[137.41104126 125.41986084]
[145.73426819 138.85487366]
[142.03842163 154.22094727]
[128.51615906 162.40165710]
[113.19002533 158.54354858]
[105.15272522 144.93556213]
[109.17265320 129.65107727]
[101.40825653 116.81697083]
[90.48093414 106.54109192]
[77.19439697 99.57920837]
[63.90785217 92.61733246]
[50.62130737 85.65544891]
[37.33476639 78.69357300]
[24.04822159 71.73168945]
[10.76167870 64.76980591]
[-2.52486372 57.80792999]
[-15.81140709 50.84604645]
[-24.40461349 54.85132980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 117]
[4 116]
[5 115]
[6 114]
[7 113]
[8 112]
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[17 104]
[18 103]
[19 101]
[20 100]
[21 99]
[22 98]
[24 97]
[25 96]
[26 95]
[27 94]
[34 89]
[35 88]
[36 87]
[37 86]
[38 85]
[40 81]
[41 80]
[42 79]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[59 69]
[60 68]
[61 67]
[62 66]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[126 170]
[127 169]
[132 152]
[133 151]
[134 150]
[135 149]
[136 147]
[137 146]
[138 145]
[159 168]
[160 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
