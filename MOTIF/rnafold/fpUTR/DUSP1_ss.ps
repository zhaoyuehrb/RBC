%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUGCGAAGGACAUUUGGGCUGUGUGUGCGACGCGGGUCGGAGGGGCAGUCGGGGGAACCGCGAAGAAGCCGAGGAGCCCGGAGCCCCGCGUGACGCUCCUCUCUCAGUCCAAAAGCGGCUUUUGGUUCGGCGCAGAGAGACCCGGGGGUCUAGCUUUUCCUCGAAAAGCGCCGCCCUGCCCUUGGCCCCGAGAACAGACAAAGAGCACCGCAGGGCCGAUCACGCUGGGGGCGCUGAGGCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[90.29515076 131.76701355]
[78.12406921 124.99541473]
[69.79927063 113.82905579]
[66.78443909 100.23123932]
[52.14858246 96.94615936]
[37.51272583 93.66108704]
[22.87687111 90.37600708]
[8.24101543 87.09093475]
[-5.00780106 95.28279877]
[-19.80384254 91.74276733]
[-27.53188515 79.06156158]
[-42.16773987 75.77648926]
[-56.80359650 72.49140930]
[-71.43945312 69.20633698]
[-81.06897736 79.04888916]
[-94.19843292 82.82431793]
[-107.37500763 79.65086365]
[-117.18807983 70.45976257]
[-121.15199280 57.72543335]
[-135.74523926 54.25596619]
[-150.33848572 50.78649521]
[-164.93173218 47.31702805]
[-179.52496338 43.84756088]
[-194.11820984 40.37809372]
[-208.71145630 36.90862656]
[-220.48837280 46.83890533]
[-235.67683411 47.91785812]
[-248.43731689 39.94076157]
[-253.98727417 26.14453506]
[-268.58053589 22.67506599]
[-277.62777710 23.73434067]
[-283.33541870 19.06867409]
[-297.88375854 15.41536713]
[-312.43206787 11.76205921]
[-323.86370850 17.70019531]
[-335.89410400 14.37514687]
[-342.23254395 4.09046984]
[-356.73361206 0.25390440]
[-371.23464966 -3.58266115]
[-377.66564941 -2.23106098]
[-383.01962280 -4.04181957]
[-386.05081177 -7.70329046]
[-400.45046997 -11.90451050]
[-414.85009766 -16.10573196]
[-429.24975586 -20.30695152]
[-443.64938354 -24.50817108]
[-458.04904175 -28.70939255]
[-472.44866943 -32.91061401]
[-486.84832764 -37.11183167]
[-495.93746948 -36.51030350]
[-501.40252686 -41.45795822]
[-515.74798584 -45.84051895]
[-530.09350586 -50.22307587]
[-544.43902588 -54.60563660]
[-558.86486816 -58.71593475]
[-573.36590576 -62.55250168]
[-587.86700439 -66.38906860]
[-602.36804199 -70.22563171]
[-615.91735840 -62.54098892]
[-630.56884766 -66.63838196]
[-637.81146240 -79.60295105]
[-652.31256104 -83.43951416]
[-666.81359863 -87.27607727]
[-671.61804199 -82.50003815]
[-677.61077881 -79.45254517]
[-684.19885254 -78.39971161]
[-690.74121094 -79.41203308]
[-696.61108398 -82.36061096]
[-701.25592041 -86.93256378]
[-704.24926758 -92.66398621]
[-705.33013916 -98.98687744]
[-719.49951172 -103.90915680]
[-733.61218262 -96.79516602]
[-748.59527588 -101.82324219]
[-755.55969238 -116.01030731]
[-750.37347412 -130.93943787]
[-736.11358643 -137.75343323]
[-721.24011230 -132.40968323]
[-714.57727051 -118.07852936]
[-700.40789795 -113.15625763]
[-678.33673096 -120.01587677]
[-662.97705078 -101.77713776]
[-648.47595215 -97.94057465]
[-633.97491455 -94.10401154]
[-621.26855469 -101.79064178]
[-606.50775146 -98.10639191]
[-598.53149414 -84.72669220]
[-584.03039551 -80.89012909]
[-569.52935791 -77.05355835]
[-555.02832031 -73.21699524]
[-551.82995605 -74.64489746]
[-547.78564453 -74.60931396]
[-543.58410645 -72.73138428]
[-540.05645752 -68.95112610]
[-525.71093750 -64.56857300]
[-511.36544800 -60.18601227]
[-497.01995850 -55.80345154]
[-482.64709473 -51.51147842]
[-468.24746704 -47.31025696]
[-453.84780884 -43.10903549]
[-439.44818115 -38.90781403]
[-425.04852295 -34.70659637]
[-410.64889526 -30.50537491]
[-396.24923706 -26.30415535]
[-381.84960938 -22.10293388]
[-367.39810181 -18.08372116]
[-352.89703369 -14.24715614]
[-338.39596558 -10.41059113]
[-321.71792603 -15.90419006]
[-308.77874756 -2.78625107]
[-294.23043823 0.86705625]
[-279.68212891 4.52036381]
[-265.11105347 8.08182240]
[-250.51780701 11.55128956]
[-239.35266113 1.72899592]
[-224.36741638 0.34830111]
[-211.28967285 8.14739513]
[-205.24198914 22.31538010]
[-190.64874268 25.78484917]
[-176.05549622 29.25431633]
[-161.46224976 32.72378540]
[-146.86901855 36.19325256]
[-132.27577209 39.66271973]
[-117.68252563 43.13218689]
[-105.56021118 32.04618073]
[-89.05240631 30.36227036]
[-74.65553284 38.94258881]
[-68.15437317 54.57048035]
[-53.51852036 57.85555649]
[-38.88266373 61.14063263]
[-24.24680901 64.42570496]
[-11.84043694 56.26375198]
[3.04919958 59.38679123]
[11.52609158 72.45507812]
[26.16194725 75.74015045]
[40.79780197 79.02523041]
[55.43365860 82.31030273]
[70.06951141 85.59538269]
[80.41400146 73.17248535]
[95.39768219 67.10401917]
[111.47147369 68.82737732]
[119.69653320 56.28351974]
[127.92159271 43.73966217]
[136.14665222 31.19580078]
[144.37170410 18.65194130]
[144.76156616 2.25742769]
[159.28227234 -5.36365652]
[172.99618530 3.62860584]
[171.79559326 19.98374557]
[156.91557312 26.87699890]
[148.69050598 39.42085648]
[140.46545410 51.96471786]
[132.24040222 64.50857544]
[124.01533508 77.05243683]
[131.64204407 89.89514160]
[132.87046814 104.78112030]
[146.84342957 110.23606110]
[160.81639099 115.69100189]
[172.43299866 108.90361023]
[185.64547729 110.02162933]
[195.65827942 118.41478729]
[198.96644592 130.85321045]
[212.86947632 136.48399353]
[226.77249146 142.11479187]
[240.67552185 147.74559021]
[244.89752197 147.00616455]
[248.75325012 147.57704163]
[251.87905884 149.18569946]
[254.03562927 151.47026062]
[255.12623596 154.02713013]
[268.72750854 160.35211182]
[282.32879639 166.67709351]
[295.93005371 173.00205994]
[309.53134155 179.32704163]
[323.13259888 185.65202332]
[332.20852661 186.42823792]
[336.86480713 192.14355469]
[350.38519287 198.63963318]
[363.90560913 205.13569641]
[379.69531250 204.13807678]
[387.81634521 216.62397766]
[401.33676147 223.12005615]
[418.98452759 216.17749023]
[435.80264282 224.22450256]
[441.27770996 241.71142578]
[454.95770264 247.86428833]
[468.63769531 254.01716614]
[482.31768799 260.17004395]
[495.99768066 266.32290649]
[509.67767334 272.47579956]
[523.35766602 278.62866211]
[537.11419678 284.60845947]
[550.94506836 290.41421509]
[560.81036377 278.94552612]
[573.73791504 271.08843994]
[588.46118164 267.61270142]
[603.53771973 268.85885620]
[617.49053955 274.70477295]
[628.95257568 284.57778931]
[636.80102539 297.51058960]
[640.26690674 312.23617554]
[639.01062012 327.31188965]
[633.15533447 341.26074219]
[623.27465820 352.71621704]
[610.33660889 360.55596924]
[595.60870361 364.01196289]
[580.53381348 362.74560547]
[566.58892822 356.88098145]
[555.14007568 346.99261475]
[547.30895996 334.04931641]
[543.86285400 319.31909180]
[545.13934326 304.24508667]
[531.30841064 298.43933105]
[526.64788818 299.37429810]
[521.34881592 297.40881348]
[517.20477295 292.30865479]
[503.52478027 286.15579224]
[489.84481812 280.00289917]
[476.16482544 273.85003662]
[462.48483276 267.69714355]
[448.80484009 261.54428101]
[435.12484741 255.39141846]
[425.61553955 261.64276123]
[414.15145874 262.54800415]
[403.56063843 257.76818848]
[396.51147461 248.38105774]
[394.84066772 236.64045715]
[381.32028198 230.14437866]
[366.49761963 231.60664368]
[357.40951538 218.65609741]
[343.88912964 212.16001892]
[330.36874390 205.66394043]
[316.80761719 199.25329590]
[303.20635986 192.92831421]
[289.60507202 186.60333252]
[276.00381470 180.27836609]
[262.40252686 173.95338440]
[248.80125427 167.62840271]
[235.04472351 161.64862061]
[221.14170837 156.01782227]
[207.23867798 150.38702393]
[193.33564758 144.75622559]
[178.13035583 151.96826172]
[162.10226440 145.81930542]
[155.36145020 129.66395569]
[141.38848877 124.20902252]
[127.41553497 118.75408173]
[117.31635284 128.34556580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 138]
[5 137]
[6 136]
[7 135]
[8 134]
[11 131]
[12 130]
[13 129]
[14 128]
[19 124]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[25 118]
[29 114]
[30 113]
[32 112]
[33 111]
[34 110]
[37 108]
[38 107]
[39 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[51 97]
[52 96]
[53 95]
[54 94]
[55 90]
[56 89]
[57 88]
[58 87]
[61 84]
[62 83]
[63 82]
[71 80]
[72 79]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[156 247]
[157 246]
[158 245]
[162 242]
[163 241]
[164 240]
[165 239]
[170 238]
[171 237]
[172 236]
[173 235]
[174 234]
[175 233]
[177 232]
[178 231]
[179 230]
[181 228]
[182 227]
[185 222]
[186 221]
[187 220]
[188 219]
[189 218]
[190 217]
[191 216]
[192 213]
[193 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
