%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS6)
} def

/sequence { (\
CCUCUUUUCCGUGGCGCCUCGGAGGCGUUCAGCUGCUUCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.068199441 ubox
1 25 0.022599035 ubox
2 13 0.074248941 ubox
2 14 0.011303122 ubox
2 21 0.003682975 ubox
2 24 0.024937866 ubox
2 25 0.003929989 ubox
2 32 0.019437152 ubox
2 42 0.110264537 ubox
3 13 0.006982823 ubox
3 14 0.030333908 ubox
3 23 0.023542298 ubox
3 24 0.003729841 ubox
3 25 0.003886804 ubox
3 31 0.017732443 ubox
3 41 0.108100047 ubox
4 13 0.073524237 ubox
4 14 0.016067060 ubox
4 21 0.003615271 ubox
4 22 0.022603648 ubox
4 24 0.009765741 ubox
4 25 0.006940818 ubox
4 32 0.019086225 ubox
4 42 0.158071074 ubox
5 13 0.017515651 ubox
5 14 0.005864084 ubox
5 21 0.021231486 ubox
5 23 0.006271575 ubox
5 24 0.006882734 ubox
5 25 0.003494610 ubox
5 31 0.017462871 ubox
5 32 0.006588533 ubox
5 41 0.161823958 ubox
5 42 0.039561125 ubox
6 13 0.013376864 ubox
6 14 0.004613527 ubox
6 24 0.007164235 ubox
6 25 0.042658344 ubox
6 31 0.005770047 ubox
6 32 0.010312043 ubox
6 40 0.151201564 ubox
6 41 0.063543442 ubox
6 42 0.027494663 ubox
7 13 0.010493995 ubox
7 23 0.009311983 ubox
7 24 0.108889969 ubox
7 31 0.009666652 ubox
7 32 0.016542184 ubox
7 40 0.064100587 ubox
7 41 0.041581501 ubox
7 42 0.008771561 ubox
8 13 0.005473623 ubox
8 14 0.006305184 ubox
8 23 0.199443102 ubox
8 31 0.016058931 ubox
8 40 0.040675968 ubox
8 41 0.012095216 ubox
9 13 0.014508927 ubox
9 21 0.006171022 ubox
9 22 0.216278057 ubox
10 16 0.023921705 ubox
10 21 0.230561642 ubox
10 35 0.158463705 ubox
11 15 0.022800301 ubox
11 17 0.016148932 ubox
11 20 0.230406227 ubox
11 33 0.588487645 ubox
11 34 0.095202548 ubox
11 36 0.398136137 ubox
12 16 0.015288589 ubox
12 21 0.018521340 ubox
12 31 0.473445171 ubox
12 32 0.522596851 ubox
12 35 0.396293481 ubox
12 40 0.024610193 ubox
13 19 0.057712617 ubox
13 20 0.024940859 ubox
13 29 0.570006877 ubox
13 30 0.537030911 ubox
13 34 0.363019706 ubox
13 37 0.023483839 ubox
13 39 0.026903779 ubox
14 18 0.059860576 ubox
14 19 0.018103367 ubox
14 28 0.802343640 ubox
14 29 0.379848940 ubox
14 33 0.355798485 ubox
14 36 0.025460659 ubox
14 38 0.013458658 ubox
15 21 0.027251058 ubox
15 27 0.906346316 ubox
15 32 0.331700126 ubox
15 35 0.025126203 ubox
16 20 0.025815632 ubox
16 26 0.951830344 ubox
16 28 0.013330834 ubox
16 33 0.013725983 ubox
16 34 0.017482798 ubox
16 36 0.009302095 ubox
17 25 0.951864159 ubox
17 27 0.013308663 ubox
17 32 0.013594668 ubox
17 35 0.009294925 ubox
18 24 0.951590507 ubox
18 25 0.013089891 ubox
18 32 0.018043004 ubox
18 42 0.047740798 ubox
19 23 0.857273550 ubox
19 24 0.012701343 ubox
19 25 0.004189866 ubox
19 31 0.018370481 ubox
19 41 0.048253167 ubox
20 24 0.004758550 ubox
20 27 0.161237192 ubox
21 26 0.160962304 ubox
21 30 0.019719851 ubox
21 37 0.008118849 ubox
21 39 0.020206564 ubox
22 29 0.019570567 ubox
22 30 0.004760107 ubox
22 36 0.008965000 ubox
22 38 0.019341085 ubox
22 39 0.137900376 ubox
23 28 0.019003400 ubox
23 29 0.004712449 ubox
23 34 0.005330818 ubox
23 37 0.020109187 ubox
23 38 0.151545260 ubox
24 28 0.003207436 ubox
24 33 0.005805828 ubox
24 34 0.102204084 ubox
24 36 0.019693617 ubox
24 37 0.196549305 ubox
24 38 0.006086159 ubox
24 39 0.020643413 ubox
25 33 0.129144333 ubox
25 36 0.212951538 ubox
25 38 0.018983681 ubox
26 32 0.129443710 ubox
26 35 0.213177496 ubox
27 33 0.071903805 ubox
27 34 0.158614448 ubox
27 36 0.039316817 ubox
28 32 0.067332270 ubox
28 35 0.039042618 ubox
29 40 0.004750751 ubox
29 41 0.003245705 ubox
31 37 0.037497107 ubox
31 38 0.015183366 ubox
32 36 0.040512088 ubox
32 37 0.014272014 ubox
33 42 0.167400842 ubox
34 40 0.088067280 ubox
34 41 0.174086074 ubox
35 39 0.094541147 ubox
36 42 0.050753267 ubox
37 41 0.047189038 ubox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
18 24 0.9500000 lbox
19 23 0.9500000 lbox
showpage
end
%%EOF
