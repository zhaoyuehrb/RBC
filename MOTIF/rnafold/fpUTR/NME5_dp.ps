%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NME5)
} def

/sequence { (\
GCAGCCACCGUCCCCACGCUGGGGCUUCAGGUCUCCUAGCAACAAGUUGUACCAUAUGAGGACGGCCGCUGAGCCAUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.012808521 ubox
1 74 0.155650993 ubox
2 21 0.013545603 ubox
2 68 0.012817828 ubox
2 71 0.985431256 ubox
2 73 0.140263517 ubox
3 20 0.013580792 ubox
3 26 0.004539508 ubox
3 70 0.996931913 ubox
4 19 0.013587409 ubox
4 25 0.004885416 ubox
4 66 0.012320775 ubox
4 69 0.998902016 ubox
4 74 0.009876374 ubox
5 18 0.013402154 ubox
5 22 0.039809967 ubox
5 24 0.004882154 ubox
5 65 0.011539184 ubox
5 68 0.998269252 ubox
5 73 0.009898179 ubox
6 21 0.039919984 ubox
6 23 0.004871135 ubox
6 64 0.010530505 ubox
6 71 0.010122965 ubox
7 20 0.039513263 ubox
7 70 0.010020145 ubox
8 22 0.005118357 ubox
8 65 0.998160160 ubox
9 18 0.039872461 ubox
9 21 0.005111775 ubox
9 64 0.998908371 ubox
10 17 0.040172261 ubox
10 19 0.004303917 ubox
10 25 0.012080086 ubox
10 63 0.998940443 ubox
11 16 0.036714777 ubox
11 18 0.004157144 ubox
11 24 0.008841226 ubox
11 62 0.998754620 ubox
12 23 0.009337869 ubox
12 24 0.040739204 ubox
12 61 0.997297330 ubox
13 22 0.009361625 ubox
13 23 0.045574953 ubox
13 24 0.004823075 ubox
13 60 0.995215294 ubox
13 61 0.040370921 ubox
14 21 0.009334614 ubox
14 22 0.049292818 ubox
14 23 0.012003191 ubox
14 60 0.056931468 ubox
14 61 0.007177252 ubox
15 21 0.049352701 ubox
15 22 0.011998524 ubox
15 49 0.030620098 ubox
15 58 0.899159548 ubox
15 60 0.008791228 ubox
16 20 0.040028229 ubox
16 32 0.007275312 ubox
16 47 0.053654097 ubox
16 48 0.027982532 ubox
16 50 0.092322599 ubox
16 57 0.786658563 ubox
17 31 0.008573629 ubox
17 46 0.070112231 ubox
17 49 0.120875612 ubox
17 58 0.090043830 ubox
18 25 0.006494296 ubox
18 40 0.975278330 ubox
18 47 0.119577214 ubox
18 48 0.082930170 ubox
18 50 0.011845612 ubox
18 57 0.017477322 ubox
19 24 0.006481436 ubox
19 30 0.012600075 ubox
19 39 0.976884896 ubox
19 46 0.143934701 ubox
19 49 0.012017372 ubox
20 29 0.012869302 ubox
20 38 0.970550065 ubox
20 44 0.114045320 ubox
20 45 0.103793379 ubox
20 51 0.025063848 ubox
20 54 0.084655511 ubox
20 56 0.006677473 ubox
21 28 0.012930684 ubox
21 35 0.183767571 ubox
21 36 0.420603461 ubox
21 37 0.865678247 ubox
21 43 0.152140727 ubox
21 50 0.026683660 ubox
21 53 0.088051876 ubox
21 55 0.005519662 ubox
22 27 0.010174721 ubox
22 34 0.202274385 ubox
22 35 0.424476163 ubox
22 36 0.860484569 ubox
22 37 0.007592517 ubox
22 52 0.087606955 ubox
22 53 0.018070108 ubox
23 32 0.003403085 ubox
23 33 0.413231267 ubox
23 34 0.281993202 ubox
23 35 0.843298756 ubox
23 36 0.010950942 ubox
23 48 0.061403201 ubox
23 52 0.018203059 ubox
23 53 0.003168457 ubox
23 75 0.042189476 ubox
24 32 0.619825712 ubox
24 33 0.545130973 ubox
24 34 0.432911379 ubox
24 35 0.012710356 ubox
24 40 0.162498805 ubox
24 47 0.064944228 ubox
24 50 0.024906374 ubox
24 74 0.042285024 ubox
25 31 0.829101670 ubox
25 39 0.162512256 ubox
25 46 0.065677675 ubox
25 49 0.029731445 ubox
25 60 0.004940717 ubox
25 61 0.038882154 ubox
25 73 0.042263321 ubox
26 30 0.747402621 ubox
26 38 0.153431900 ubox
26 39 0.004523376 ubox
26 45 0.065388079 ubox
26 59 0.004155611 ubox
26 60 0.039758446 ubox
26 72 0.040534464 ubox
27 38 0.019618460 ubox
27 44 0.061119797 ubox
27 59 0.040622598 ubox
27 71 0.037264643 ubox
27 72 0.011959996 ubox
28 49 0.005074113 ubox
28 58 0.040810294 ubox
28 71 0.016671196 ubox
29 37 0.153314183 ubox
29 48 0.005007591 ubox
29 57 0.040263281 ubox
29 70 0.015831006 ubox
30 36 0.161462216 ubox
30 37 0.014177437 ubox
30 47 0.004583934 ubox
30 53 0.032546478 ubox
30 67 0.043185357 ubox
30 69 0.008011233 ubox
30 75 0.006640921 ubox
31 35 0.158878533 ubox
31 36 0.014287675 ubox
31 40 0.063899298 ubox
31 43 0.020667213 ubox
31 52 0.032585232 ubox
31 55 0.011111816 ubox
31 66 0.043900166 ubox
31 74 0.006647290 ubox
32 39 0.059074080 ubox
32 42 0.019724295 ubox
32 51 0.031927019 ubox
32 54 0.012077829 ubox
32 65 0.043888160 ubox
33 39 0.022889620 ubox
33 60 0.006861722 ubox
33 64 0.043823657 ubox
33 73 0.006656828 ubox
34 38 0.020833474 ubox
34 59 0.007359356 ubox
34 62 0.043704615 ubox
34 72 0.006712013 ubox
35 58 0.007407322 ubox
35 61 0.043886882 ubox
35 71 0.006558239 ubox
36 46 0.007604322 ubox
36 60 0.043881562 ubox
37 45 0.007514073 ubox
37 49 0.055157922 ubox
37 51 0.009612452 ubox
37 56 0.009867979 ubox
37 58 0.008728057 ubox
37 59 0.040691047 ubox
38 48 0.062649422 ubox
38 50 0.007747949 ubox
38 55 0.011607156 ubox
38 57 0.013907207 ubox
38 70 0.006517728 ubox
39 47 0.064643607 ubox
39 50 0.086868767 ubox
39 69 0.006981601 ubox
40 46 0.065086572 ubox
40 49 0.094313759 ubox
40 58 0.014619382 ubox
40 68 0.006973632 ubox
41 48 0.111153168 ubox
41 57 0.017182757 ubox
42 47 0.090386158 ubox
42 50 0.800238188 ubox
43 49 0.829402622 ubox
43 58 0.105152508 ubox
44 48 0.672401045 ubox
44 57 0.102555582 ubox
46 52 0.197263444 ubox
46 55 0.137694650 ubox
46 57 0.075768104 ubox
46 66 0.008616053 ubox
47 51 0.178294860 ubox
47 54 0.132239818 ubox
47 56 0.086957152 ubox
47 59 0.150571590 ubox
47 65 0.008627218 ubox
48 54 0.150208815 ubox
48 56 0.131513371 ubox
48 58 0.162067155 ubox
48 59 0.018609648 ubox
48 64 0.008617728 ubox
49 53 0.165572484 ubox
49 55 0.142393142 ubox
49 57 0.191939332 ubox
49 63 0.009020967 ubox
50 54 0.132714839 ubox
50 56 0.197719458 ubox
50 58 0.021693691 ubox
50 62 0.008999686 ubox
51 55 0.177093724 ubox
51 57 0.027958504 ubox
52 61 0.014029794 ubox
53 60 0.017195058 ubox
71 75 0.004393511 ubox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
