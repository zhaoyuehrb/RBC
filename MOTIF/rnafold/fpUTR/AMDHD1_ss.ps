%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUCCCAGCCCCGGACAGCGCAGGCUGCGGCUUUUCGUCCUCCACUGAGUCCUGCCGGUGGCCCGAGCCCGGUGGCCUCCCGGCGACCCUCGGCGCGAGGCGAC\
) } def
/len { sequence length } bind def

/coor [
[7.39498758 194.18603516]
[-2.16043401 201.73059082]
[-13.68899727 205.53422546]
[-25.78803253 205.15942383]
[-36.99407959 200.67547607]
[-45.95991898 192.64730835]
[-59.43323898 199.24046326]
[-72.80831909 206.03070068]
[-86.08227539 213.01654053]
[-99.35623932 220.00238037]
[-112.63019562 226.98822021]
[-125.90415955 233.97406006]
[-135.26852417 249.74378967]
[-152.70933533 248.55699158]
[-165.77249146 255.92950439]
[-171.44404602 270.93658447]
[-186.75682068 275.72183228]
[-199.96417236 266.61437988]
[-200.93453979 250.60070801]
[-188.92355347 239.96511841]
[-173.14500427 242.86633301]
[-160.08184814 235.49383545]
[-156.48008728 223.84242249]
[-145.52253723 217.62547302]
[-132.88999939 220.70010376]
[-119.61604309 213.71426392]
[-106.34207916 206.72842407]
[-93.06812286 199.74258423]
[-79.79415894 192.75674438]
[-75.26964569 186.76210022]
[-66.02639008 185.76715088]
[-52.55307388 179.17399597]
[-52.24484253 161.23262024]
[-42.95473099 145.78327942]
[-27.10621834 137.01818848]
[-8.91528225 137.36442566]
[6.73101139 146.81245422]
[19.57210922 139.05963135]
[32.41320801 131.30682373]
[36.57811356 125.05697632]
[45.74704361 123.52127838]
[58.81020355 116.14877319]
[71.87335968 108.77626801]
[84.93652344 101.40375519]
[92.50000000 88.45023346]
[92.50000000 73.45023346]
[92.50000000 58.45023346]
[92.50000000 43.45023346]
[92.50000000 28.45023346]
[89.33086395 19.71042442]
[92.72666168 13.01150227]
[93.16700745 -1.98203313]
[87.58825684 -17.99183846]
[101.42803955 -27.78452682]
[114.66925812 -17.19649315]
[108.16054535 -1.54168630]
[107.72019958 13.45184898]
[107.50000000 28.45023346]
[107.50000000 43.45023346]
[107.50000000 58.45023346]
[107.50000000 73.45023346]
[107.50000000 88.45023346]
[118.02846527 99.13439941]
[133.02684021 99.35459900]
[148.02684021 99.35459900]
[163.02522278 99.13439941]
[178.02362061 98.91420746]
[193.02200317 98.69400787]
[208.02038574 98.47380829]
[212.76802063 95.61610413]
[217.63972473 95.03912354]
[221.70603943 96.38156128]
[224.33415222 98.95293427]
[239.29376221 100.05297089]
[254.25337219 101.15300751]
[268.58380127 94.44858551]
[280.70938110 103.09841919]
[295.66900635 104.19845581]
[310.62860107 105.29849243]
[325.15026855 97.67922974]
[338.86303711 106.67321777]
[337.66040039 123.02820587]
[322.77951050 129.91958618]
[309.52856445 120.25810242]
[294.56896973 119.15806580]
[279.60934448 118.05802917]
[266.34893799 124.84112549]
[253.15333557 116.11261749]
[238.19372559 115.01258087]
[223.23411560 113.91254425]
[208.24058533 113.47219086]
[193.24218750 113.69239044]
[178.24380493 113.91259003]
[163.24542236 114.13278198]
[148.24703979 114.35298157]
[141.49899292 117.65007019]
[132.80665588 114.35298157]
[117.80826569 114.13278198]
[92.30902863 114.46691895]
[79.24587250 121.83942413]
[66.18270874 129.21192932]
[53.11955261 136.58444214]
[40.16602707 144.14791870]
[27.32492828 151.90074158]
[14.48382950 159.65354919]
[16.27646637 171.80178833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 32]
[7 31]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[14 22]
[15 21]
[37 105]
[38 104]
[39 103]
[41 102]
[42 101]
[43 100]
[44 99]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[51 57]
[52 56]
[63 98]
[64 97]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[73 90]
[74 89]
[75 88]
[77 86]
[78 85]
[79 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
