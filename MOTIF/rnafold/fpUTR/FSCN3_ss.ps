%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUUCCCCACUGUGGUGUGAUAAGAGGCUGCCCUCACAGUCACAAUGCUCCCGGGUCACAGAGGUGCUGGGCCCCAGGCCAGCCUCUGCCUGGGAAGUUCUCUCUGGGAACAUCUGGUGGGUACUACAGGCCCUAUUCCAGGCCCUAUGGCCUGUGGAACCUCACCACGGGGGGGAGGGCUGGGCCAGACGGAGACAUCACCUGUGGUGUCAGCCCC\
) } def
/len { sequence length } bind def

/coor [
[182.63658142 251.56108093]
[174.89062500 238.71585083]
[167.14466858 225.87062073]
[159.39869690 213.02537537]
[151.65274048 200.18014526]
[143.90676880 187.33491516]
[136.16081238 174.48966980]
[128.41485596 161.64443970]
[120.66889191 148.79920959]
[112.92292786 135.95396423]
[100.01285553 139.42179871]
[86.27946472 138.25141907]
[73.38691711 132.30279541]
[62.99146652 122.03078461]
[51.11293411 131.19050598]
[39.23439789 140.35021973]
[33.03077698 154.90444946]
[18.22725677 156.54914856]
[6.34872246 165.70886230]
[-5.52981091 174.86857605]
[-17.40834427 184.02830505]
[-29.28687859 193.18801880]
[-41.16541290 202.34773254]
[-43.09161377 219.73797607]
[-56.73246384 230.14700317]
[-73.34674835 227.51924133]
[-85.09326935 236.84764099]
[-96.83979797 246.17604065]
[-108.58632660 255.50445557]
[-114.10218048 270.94815063]
[-130.28112793 273.62652588]
[-140.47964478 260.78433228]
[-134.20639038 245.63249207]
[-117.91472626 243.75791931]
[-106.16820526 234.42951965]
[-94.42167664 225.10112000]
[-82.67514801 215.77272034]
[-83.01266479 202.89575195]
[-75.76541138 192.01194763]
[-63.39149857 187.21693420]
[-50.32513046 190.46920776]
[-38.44659805 181.30947876]
[-26.56806374 172.14976501]
[-14.68952942 162.99005127]
[-2.81099558 153.83033752]
[9.06753826 144.67060852]
[14.42152691 130.77154541]
[30.07468033 128.47167969]
[41.95321274 119.31196594]
[53.83174896 110.15224457]
[52.97541428 95.17671204]
[40.13018036 87.43074799]
[27.28494453 79.68478394]
[14.43970966 71.93882751]
[1.59447420 64.19286346]
[-11.25076103 56.44690323]
[-24.09599686 48.70093918]
[-29.30170059 48.60289001]
[-33.52925491 46.71070099]
[-36.25981140 43.69578171]
[-37.31539536 40.33811188]
[-49.81710815 32.04913712]
[-62.31882477 23.76016045]
[-74.82054138 15.47118473]
[-87.32225800 7.18220997]
[-99.82396698 -1.10676563]
[-112.32568359 -9.39574051]
[-121.22425842 -6.31361437]
[-130.40759277 -7.64765501]
[-137.83781433 -12.97418690]
[-141.92492676 -20.99794579]
[-141.86630249 -29.86498833]
[-154.00155640 -38.68176651]
[-166.13681030 -47.49854660]
[-178.27206421 -56.31532288]
[-194.64013672 -60.73374176]
[-194.92553711 -77.68528748]
[-178.71546936 -82.65217590]
[-169.45529175 -68.45057678]
[-157.32003784 -59.63380051]
[-145.18478394 -50.81702042]
[-133.04953003 -42.00024414]
[-112.41049194 -41.62750244]
[-104.03671265 -21.89745712]
[-91.53499603 -13.60848141]
[-79.03327942 -5.31950569]
[-66.53156281 2.96946979]
[-54.02985001 11.25844479]
[-41.52813339 19.54742050]
[-29.02641869 27.83639526]
[-16.35003471 35.85570526]
[-3.50479937 43.60166550]
[9.34043598 51.34762955]
[22.18567085 59.09358978]
[35.03090668 66.83955383]
[47.87614441 74.58551025]
[60.72137833 82.33147430]
[72.90122223 69.71665955]
[88.27848053 63.63661194]
[86.56861115 48.73438644]
[84.85874176 33.83216095]
[83.14887238 18.92993546]
[81.43899536 4.02770948]
[79.72912598 -10.87451649]
[71.91667175 -25.92117500]
[84.21260071 -37.59364319]
[98.83275604 -29.00950813]
[94.63135529 -12.58438778]
[96.34122467 2.31783819]
[98.05109406 17.22006416]
[99.76096344 32.12229156]
[101.47084045 47.02451706]
[103.18070984 61.92674255]
[109.40540314 62.96990204]
[115.37342072 65.02361298]
[120.92189789 68.03182983]
[125.89942169 71.91246033]
[138.03466797 63.09568024]
[150.16993713 54.27890396]
[162.30519104 45.46212387]
[174.44044495 36.64534378]
[186.51243591 27.74214554]
[198.52055359 18.75298119]
[210.52867126 9.76381588]
[216.93948364 -4.70034695]
[231.76498413 -6.13348866]
[243.77310181 -15.12265396]
[255.78121948 -24.11181831]
[267.78933716 -33.10098267]
[279.79745483 -42.09014893]
[291.80557251 -51.07931519]
[303.81369019 -60.06847763]
[315.82180786 -69.05764008]
[327.82992554 -78.04680634]
[334.24075317 -92.51097107]
[349.06625366 -93.94411469]
[361.07437134 -102.93328094]
[359.17132568 -118.17382050]
[365.15829468 -132.31777954]
[377.42480469 -141.56051636]
[392.67123413 -143.41577148]
[406.79635620 -137.38450623]
[416.00061035 -125.08907318]
[417.80807495 -109.83690643]
[411.73254395 -95.73075104]
[399.40832520 -86.56509399]
[384.15057373 -84.80545044]
[370.06353760 -90.92516327]
[358.05541992 -81.93599701]
[352.50350952 -68.11479950]
[336.81909180 -66.03868866]
[324.81097412 -57.04952621]
[312.80285645 -48.06035995]
[300.79473877 -39.07119370]
[288.78662109 -30.08202934]
[276.77850342 -21.09286499]
[264.77038574 -12.10369968]
[252.76226807 -3.11453509]
[240.75415039 5.87462997]
[235.20223999 19.69582748]
[219.51783752 21.77193451]
[207.50971985 30.76109886]
[195.50160217 39.75026321]
[192.03297424 46.27072525]
[183.25721741 48.78060150]
[171.12196350 57.59737778]
[158.98670959 66.41415405]
[146.85145569 75.23093414]
[134.71620178 84.04771423]
[138.20385742 99.60659790]
[135.03733826 115.23399353]
[125.76816559 128.20800781]
[133.51412964 141.05323792]
[141.26008606 153.89848328]
[149.00604248 166.74371338]
[156.75201416 179.58894348]
[164.49797058 192.43418884]
[172.24394226 205.27941895]
[179.98989868 218.12464905]
[187.73585510 230.96989441]
[195.48182678 243.81512451]
[210.56048584 247.72305298]
[218.23300171 260.86029053]
[214.41447449 275.21139526]
[222.16043091 288.05664062]
[229.90638733 300.90185547]
[237.65235901 313.74710083]
[243.93327332 313.50765991]
[249.99342346 315.01663208]
[255.35899353 318.13287354]
[259.61697388 322.59060669]
[262.44689941 328.02182007]
[263.64486694 333.98666382]
[263.13812256 340.00903320]
[260.98910522 345.61453247]
[257.38870239 350.36791992]
[263.81411743 363.92205811]
[270.23956299 377.47616577]
[276.66497803 391.03027344]
[283.09039307 404.58438110]
[289.51583862 418.13848877]
[295.94125366 431.69259644]
[309.73425293 440.56304932]
[308.67855835 456.92819214]
[293.86016846 463.95294189]
[280.52297974 454.41085815]
[282.38714600 438.11801147]
[275.96173096 424.56390381]
[269.53628540 411.00979614]
[263.11087036 397.45568848]
[256.68545532 383.90158081]
[250.26000977 370.34747314]
[243.83459473 356.79336548]
[222.84114075 345.81613159]
[224.80711365 321.49307251]
[217.06115723 308.64782715]
[209.31520081 295.80258179]
[201.56922913 282.95736694]
[187.09465027 279.63739014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[9 173]
[10 172]
[14 50]
[15 49]
[16 48]
[18 46]
[19 45]
[20 44]
[21 43]
[22 42]
[23 41]
[26 37]
[27 36]
[28 35]
[29 34]
[51 97]
[52 96]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[61 90]
[62 89]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[72 82]
[73 81]
[74 80]
[75 79]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[117 169]
[118 168]
[119 167]
[120 166]
[121 165]
[122 163]
[123 162]
[124 161]
[126 159]
[127 158]
[128 157]
[129 156]
[130 155]
[131 154]
[132 153]
[133 152]
[134 151]
[136 149]
[137 148]
[184 218]
[185 217]
[186 216]
[187 215]
[196 213]
[197 212]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
