%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGGGCGCACCCGCGGGGCCCUGGGCUCGCUGGCUUGCGCGCAGCUGAGCGGGGUGUAGGUUGGAAGGGCCAGGGCCCCCUGGGGCGCAAGUGGGGGCCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[143.98191833 324.22079468]
[141.82774353 309.37628174]
[139.67358398 294.53176880]
[137.51940918 279.68725586]
[135.36523438 264.84274292]
[117.17601776 254.10971069]
[112.39257050 233.25814819]
[124.38746643 215.21472168]
[120.12378693 200.83345032]
[115.86009979 186.45217896]
[111.59641266 172.07090759]
[106.60206604 166.46768188]
[107.42351532 157.21347046]
[103.57604218 142.71530151]
[99.72856903 128.21713257]
[95.88108826 113.71896362]
[86.15526581 103.67406464]
[89.62073517 90.12850952]
[85.77326202 75.63034058]
[81.92578888 61.13216782]
[78.07831573 46.63399887]
[74.23084259 32.13582993]
[70.38336182 17.63765907]
[66.53588867 3.13948894]
[62.68841553 -11.35868168]
[58.84094238 -25.85685158]
[54.99346542 -40.35502243]
[43.97529984 -51.70890045]
[48.18922043 -65.99497986]
[44.34174728 -80.49314880]
[30.95604706 -88.45938110]
[27.26069260 -103.21739197]
[34.93776321 -115.92951965]
[31.09029007 -130.42768860]
[27.24281502 -144.92585754]
[23.39533997 -159.42402649]
[19.54786491 -173.92219543]
[15.70039082 -188.42036438]
[11.85291672 -202.91854858]
[8.00544167 -217.41671753]
[4.15796709 -231.91488647]
[0.31049228 -246.41305542]
[-3.53698230 -260.91122437]
[-17.85732079 -266.58871460]
[-25.99358368 -279.45941162]
[-25.00271797 -294.47549438]
[-15.47384644 -305.89205933]
[-19.32132149 -320.39025879]
[-29.22808838 -334.14859009]
[-18.74988365 -347.47689819]
[-3.04180431 -341.09780884]
[-4.82315111 -324.23773193]
[-0.97567624 -309.73956299]
[12.96009731 -304.54992676]
[21.26605988 -292.00100708]
[20.58211517 -276.78964233]
[10.96118736 -264.75869751]
[14.80866241 -250.26052856]
[18.65613747 -235.76235962]
[22.50361252 -221.26419067]
[26.35108566 -206.76602173]
[30.19856071 -192.26785278]
[34.04603577 -177.76968384]
[37.89350891 -163.27149963]
[41.74098587 -148.77333069]
[45.58845901 -134.27516174]
[49.43593597 -119.77699280]
[62.40594101 -112.54412079]
[66.51435852 -97.89572144]
[58.83991623 -84.34062958]
[62.68739319 -69.84245300]
[73.43035889 -59.52558517]
[69.49163818 -44.20249557]
[73.33911133 -29.70432663]
[77.18658447 -15.20615578]
[81.03405762 -0.70798582]
[84.88153839 13.79018402]
[88.72901154 28.28835487]
[92.57648468 42.78652573]
[96.42395782 57.28469467]
[100.27143097 71.78286743]
[104.11891174 86.28103638]
[113.84473419 96.32593536]
[110.37926483 109.87149048]
[114.22673798 124.36965942]
[118.07421112 138.86782837]
[121.92168427 153.36599731]
[125.97768402 167.80722046]
[130.24137878 182.18849182]
[134.50505066 196.56976318]
[138.76873779 210.95103455]
[147.96498108 212.53866577]
[156.06425476 217.08555603]
[162.15040588 224.04368591]
[165.54635620 232.59432983]
[165.88920593 241.74421692]
[163.16897583 250.44105530]
[157.72621155 257.69439697]
[150.20974731 262.68856812]
[152.36392212 277.53308105]
[154.51809692 292.37759399]
[156.67225647 307.22210693]
[158.82643127 322.06661987]
[171.63916016 331.31915283]
[174.07406616 346.93475342]
[164.68658447 359.64895630]
[149.04611206 361.91860962]
[136.43188477 352.39721680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[8 91]
[9 90]
[10 89]
[11 88]
[13 87]
[14 86]
[15 85]
[16 84]
[18 82]
[19 81]
[20 80]
[21 79]
[22 78]
[23 77]
[24 76]
[25 75]
[26 74]
[27 73]
[29 71]
[30 70]
[33 67]
[34 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[47 53]
[48 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
