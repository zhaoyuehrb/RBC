%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGAAGUGACGCCAACGGAAGCAGGAAGGCGGUUCCGGCAAGCCAAGGGGGCGUUGUCGUGAUGAUUCCGCGGCCAGCGGAUCGCUGCGAGUGGCCUUGAAGGCAGCUGCUGCAGGUGAAGAGUAGGCGGCGGGGCAGAGAGCGGCCUCCGAGGGUCACCUGAAUGGUUGAGC\
) } def
/len { sequence length } bind def

/coor [
[54.95847321 494.82290649]
[49.27190018 480.84701538]
[47.39727783 465.87545776]
[49.46242905 450.92895508]
[55.32653809 437.02664185]
[64.58979034 425.11636353]
[76.62059021 416.01019287]
[90.59867096 410.32901001]
[88.72929382 395.44595337]
[86.85992432 380.56289673]
[84.99055481 365.67984009]
[83.12117767 350.79678345]
[79.15493011 344.53164673]
[81.35371399 335.63168335]
[79.75028992 320.71762085]
[70.51956940 312.86837769]
[69.07848358 300.43353271]
[76.74470520 290.03460693]
[75.40773773 275.09429932]
[74.07077026 260.15402222]
[72.73379517 245.21371460]
[63.68870926 257.17977905]
[49.37834167 261.67568970]
[35.11507797 257.03250122]
[26.19381523 244.97384644]
[25.92635918 229.97622681]
[34.41199875 217.60716248]
[48.50064087 212.45834351]
[62.96221161 216.44117737]
[72.42786407 228.07626343]
[73.23072815 213.09776306]
[74.03359222 198.11927795]
[66.98860168 184.99610901]
[75.45345306 171.62985229]
[76.25631714 156.65135193]
[77.05918121 141.67285156]
[77.86204529 126.69435883]
[68.65998077 114.84860229]
[53.94820023 111.92224884]
[39.23641968 108.99589539]
[24.52464104 106.06953430]
[9.81286240 103.14318085]
[-4.89891672 100.21682739]
[-19.63622665 97.42189026]
[-34.39789581 94.75859070]
[-49.15956497 92.09529114]
[-63.10467529 100.02709198]
[-77.94653320 93.93621063]
[-82.29973602 78.49505615]
[-72.82487488 65.54875946]
[-56.79025650 65.02861023]
[-46.49626541 77.33362579]
[-31.73459816 79.99692535]
[-16.97292900 82.66022491]
[-9.80887032 80.74729156]
[-1.97256172 85.50505066]
[12.73921776 88.43140411]
[27.45099640 91.35775757]
[42.16277695 94.28411102]
[56.87455368 97.21046448]
[71.58633423 100.13682556]
[75.50205231 88.78941345]
[83.44436646 80.64676666]
[93.51494598 76.89742279]
[103.59535217 77.76612091]
[110.78408813 64.60093689]
[112.15853882 55.53700638]
[118.22044373 51.26659393]
[125.64301300 38.23181915]
[133.06559753 25.19704247]
[140.48815918 12.16226768]
[147.91073608 -0.87250817]
[155.33331299 -13.90728378]
[155.43856812 -29.72813988]
[168.46011353 -36.95923615]
[175.88269043 -49.99401093]
[183.30526733 -63.02878952]
[183.41052246 -78.84964752]
[196.43205261 -86.08074188]
[203.85462952 -99.11551666]
[197.62533569 -113.20459747]
[200.84890747 -128.08619690]
[212.08430481 -138.09768677]
[226.88331604 -139.55615234]
[234.30589294 -152.59092712]
[241.72846985 -165.62570190]
[249.15104675 -178.66049194]
[256.45700073 -191.76098633]
[263.64572144 -204.92617798]
[270.83444214 -218.09135437]
[278.02319336 -231.25654602]
[284.97579956 -244.54794312]
[291.69006348 -257.96133423]
[298.40429688 -271.37469482]
[297.66262817 -287.17849731]
[310.27844238 -295.09622192]
[316.99270630 -308.50958252]
[323.70697021 -321.92297363]
[330.42123413 -335.33633423]
[332.10430908 -352.20654297]
[348.78112793 -355.25936890]
[356.33126831 -340.07940674]
[343.83459473 -328.62210083]
[337.12036133 -315.20870972]
[330.40609741 -301.79531860]
[323.69183350 -288.38195801]
[324.91378784 -273.53756714]
[311.81768799 -264.66043091]
[305.10342407 -251.24705505]
[298.38916016 -237.83367920]
[299.03262329 -233.07164001]
[296.66876221 -227.85876465]
[291.18838501 -224.06781006]
[283.99963379 -210.90261841]
[276.81091309 -197.73744202]
[269.62216187 -184.57225037]
[269.17480469 -177.17070007]
[262.18582153 -171.23791504]
[254.76324463 -158.20314026]
[247.34066772 -145.16836548]
[239.91809082 -132.13357544]
[246.21528625 -118.66200256]
[243.33833313 -103.89084625]
[232.18484497 -93.52489471]
[216.88940430 -91.69293976]
[209.46682739 -78.65816498]
[209.89248657 -63.76964188]
[196.34004211 -55.60621262]
[188.91746521 -42.57143784]
[181.49488831 -29.53666115]
[181.92054749 -14.64813900]
[168.36808777 -6.48470879]
[160.94551086 6.55006695]
[153.52293396 19.58484268]
[146.10037231 32.61961746]
[138.67779541 45.65439606]
[131.25521851 58.68917084]
[123.94927216 71.78967285]
[116.76053619 84.95485687]
[124.30794525 102.95140076]
[114.88309479 121.86568451]
[92.84054565 127.49722290]
[92.03768158 142.47572327]
[91.23481750 157.45422363]
[90.43195343 172.43272400]
[97.41951752 186.62724304]
[89.01208496 198.92213440]
[88.20922089 213.90063477]
[87.40635681 228.87913513]
[87.67409515 243.87673950]
[89.01106262 258.81704712]
[90.34803772 273.75735474]
[91.68500519 288.69763184]
[102.62580109 303.49053955]
[94.66434479 319.11419678]
[96.26776886 334.02825928]
[98.00424194 348.92739868]
[99.87361145 363.81045532]
[101.74298096 378.69354248]
[103.61235809 393.57659912]
[105.48172760 408.45965576]
[120.43060303 410.50747681]
[134.33970642 416.35546875]
[146.26071167 425.60491943]
[155.38079834 437.62518311]
[161.07815552 451.59667969]
[162.96434021 466.56680298]
[160.91073608 481.51486206]
[155.05735779 495.42172241]
[145.80331421 507.33914185]
[133.77954102 516.45458984]
[119.80585480 522.14654541]
[104.83499908 524.02697754]
[89.88771820 521.96759033]
[75.98313141 516.10882568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 161]
[9 160]
[10 159]
[11 158]
[12 157]
[14 156]
[15 155]
[18 153]
[19 152]
[20 151]
[21 150]
[30 149]
[31 148]
[32 147]
[34 145]
[35 144]
[36 143]
[37 142]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[44 54]
[45 53]
[46 52]
[65 139]
[66 138]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[75 130]
[76 129]
[77 128]
[79 126]
[80 125]
[84 121]
[85 120]
[86 119]
[87 118]
[88 116]
[89 115]
[90 114]
[91 113]
[92 110]
[93 109]
[94 108]
[96 106]
[97 105]
[98 104]
[99 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
