%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUUUCAGGGCCUGCUGAGGAAUCUGCAGGCCUGGCAGAGGACAGGAGGGAGGCUUGGGGAGCCUGGGAAGGGCCGGCUGACAGCUUGAUGGGCCCUCCCUCCCUCCACAGUCCCACCCCCAGCCUGGGGCCUCUGGGAGCCUUGGUCCUGAGCAGCCAACACACCAGCCCAGACAGCUGCAAGUCACC\
) } def
/len { sequence length } bind def

/coor [
[95.91313934 169.29873657]
[95.17327881 154.31700134]
[94.43341064 139.33525085]
[93.69354248 124.35350800]
[92.95368195 109.37177277]
[88.69541931 94.98889160]
[81.15983582 82.01911926]
[73.62425232 69.04934692]
[66.08866882 56.07957458]
[58.55308914 43.10980225]
[51.01750565 30.14002800]
[43.48192215 17.17025757]
[35.94633865 4.20048475]
[18.02818489 -5.01112127]
[18.77238083 -24.32309532]
[10.81429386 -37.03800201]
[2.85620785 -49.75291061]
[-5.51576996 -62.19919586]
[-14.29258060 -74.36338806]
[-23.06939125 -86.52758026]
[-31.84620285 -98.69177246]
[-36.64025879 -100.84127045]
[-39.80382156 -104.27707672]
[-41.11979675 -108.15804291]
[-40.73835754 -111.67945862]
[-48.90449524 -124.26175690]
[-62.90763474 -131.62536621]
[-63.34627914 -146.51350403]
[-71.51241302 -159.09579468]
[-79.67855072 -171.67810059]
[-87.84468842 -184.26039124]
[-96.01082611 -196.84269714]
[-103.32061005 -202.34939575]
[-104.20581818 -209.69976807]
[-112.16390228 -222.41468811]
[-120.12198639 -235.12959290]
[-136.63092041 -234.36781311]
[-151.19026184 -241.98739624]
[-159.87455750 -255.82719421]
[-160.39633179 -272.06381226]
[-152.70787048 -286.26757812]
[-160.87400818 -298.84985352]
[-169.04014587 -311.43215942]
[-177.20628357 -324.01446533]
[-195.55699158 -332.33105469]
[-195.76625061 -351.65621948]
[-204.34179688 -363.96313477]
[-212.91735840 -376.27005005]
[-221.49290466 -388.57693481]
[-230.06846619 -400.88385010]
[-238.64401245 -413.19073486]
[-250.43711853 -422.46020508]
[-264.42160034 -427.88558960]
[-278.40603638 -433.31097412]
[-292.39050293 -438.73635864]
[-306.37496948 -444.16174316]
[-320.35943604 -449.58715820]
[-337.31311035 -449.67904663]
[-341.91806030 -465.99563599]
[-327.51388550 -474.93750000]
[-314.93405151 -463.57159424]
[-300.94958496 -458.14620972]
[-286.96511841 -452.72082520]
[-272.98065186 -447.29544067]
[-258.99618530 -441.87005615]
[-245.01173401 -436.44464111]
[-234.44883728 -447.09478760]
[-239.98904419 -461.03414917]
[-245.52926636 -474.97351074]
[-251.06948853 -488.91287231]
[-257.15750122 -495.74609375]
[-256.58410645 -503.12734985]
[-261.89431763 -517.15594482]
[-267.20449829 -531.18457031]
[-272.51470947 -545.21319580]
[-277.82492065 -559.24176025]
[-283.70730591 -573.04022217]
[-290.15197754 -586.58520508]
[-296.59664917 -600.13018799]
[-303.04135132 -613.67517090]
[-315.30636597 -625.38006592]
[-307.45419312 -640.40600586]
[-290.84173584 -637.02032471]
[-289.49636841 -620.11981201]
[-283.05169678 -606.57482910]
[-276.60702515 -593.02990723]
[-270.16235352 -579.48492432]
[-262.67321777 -592.48156738]
[-247.86888123 -594.89642334]
[-236.63783264 -584.95343018]
[-237.24041748 -569.96551514]
[-249.23345947 -560.95623779]
[-263.79629517 -564.55200195]
[-258.48611450 -550.52337646]
[-253.17590332 -536.49475098]
[-247.86570740 -522.46618652]
[-242.55549622 -508.43756104]
[-237.13011169 -494.45309448]
[-231.58990479 -480.51373291]
[-226.04968262 -466.57437134]
[-220.50946045 -452.63497925]
[-217.60450745 -433.72293091]
[-226.33711243 -421.76629639]
[-217.76156616 -409.45938110]
[-209.18600464 -397.15249634]
[-200.61045837 -384.84558105]
[-192.03489685 -372.53869629]
[-183.45935059 -360.23178101]
[-173.25903320 -359.34179688]
[-165.06619263 -352.84063721]
[-161.74453735 -342.69177246]
[-164.62399292 -332.18060303]
[-156.45785522 -319.59829712]
[-148.29171753 -307.01599121]
[-140.12557983 -294.43371582]
[-126.55428314 -296.04165649]
[-113.55294037 -291.62075806]
[-103.68016052 -281.98074341]
[-98.90476227 -268.96426392]
[-100.21335602 -255.09484863]
[-107.40708160 -243.08767700]
[-99.44899750 -230.37277222]
[-91.49091339 -217.65786743]
[-83.42852783 -205.00883484]
[-75.26239014 -192.42652893]
[-67.09625244 -179.84423828]
[-58.93011856 -167.26193237]
[-50.76398087 -154.67964172]
[-37.34493637 -148.21600342]
[-36.32219696 -132.42788696]
[-28.15606117 -119.84559631]
[-19.68200874 -107.46858215]
[-10.90519810 -95.30438995]
[-2.12838769 -83.14019775]
[6.64842319 -70.97600555]
[9.40874958 -70.40185547]
[12.10579491 -68.69032288]
[14.30172157 -65.86076355]
[15.57410431 -62.09175491]
[15.57111549 -57.71099472]
[23.52920151 -44.99608994]
[31.48728752 -32.28118134]
[41.63129044 -30.88916397]
[49.49348450 -23.99180984]
[52.31051254 -13.69143963]
[48.91611099 -3.33509827]
[56.45169449 9.63467407]
[63.98727798 22.60444641]
[71.52285767 35.57421875]
[79.05844116 48.54399109]
[86.59402466 61.51376343]
[94.12960815 74.48353577]
[101.66519165 87.45330811]
[132.64134216 92.45254517]
[142.93829346 103.36001587]
[153.23524475 114.26748657]
[163.53218079 125.17495728]
[173.82913208 136.08242798]
[187.38410950 129.39259338]
[202.30900574 126.99700928]
[217.27671814 129.10870361]
[230.95631409 135.53988647]
[242.13140869 145.71871948]
[249.80833435 158.74009705]
[253.30445862 173.44616699]
[252.30889893 188.52928162]
[246.91020203 202.64825439]
[237.58839417 214.54763794]
[225.17237854 223.16934204]
[210.76617432 227.74674988]
[195.65075684 227.87281799]
[181.17021179 223.53634644]
[168.61210632 215.12294006]
[159.09312439 203.38069153]
[153.45965576 189.35372925]
[152.21266174 174.28932190]
[155.46299744 159.52699280]
[162.92166138 146.37936401]
[152.62471008 135.47190857]
[142.32777405 124.56443024]
[132.03082275 113.65696716]
[121.73387146 102.74949646]
[107.93542480 108.63190460]
[108.67528534 123.61364746]
[109.41515350 138.59538269]
[110.15502167 153.57713318]
[110.89488220 168.55886841]
[120.23482513 182.03839111]
[112.98747253 196.74920654]
[96.60829163 197.55809021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[5 183]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[15 142]
[16 141]
[17 140]
[18 135]
[19 134]
[20 133]
[21 132]
[25 131]
[26 130]
[28 128]
[29 127]
[30 126]
[31 125]
[32 124]
[34 123]
[35 122]
[36 121]
[41 115]
[42 114]
[43 113]
[44 112]
[46 108]
[47 107]
[48 106]
[49 105]
[50 104]
[51 103]
[52 66]
[53 65]
[54 64]
[55 63]
[56 62]
[57 61]
[67 101]
[68 100]
[69 99]
[70 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 87]
[78 86]
[79 85]
[80 84]
[154 182]
[155 181]
[156 180]
[157 179]
[158 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
