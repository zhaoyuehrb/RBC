%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H2AD)
} def

/sequence { (\
ACUUUUACAUUUUUGUCUUCAUUGCUUAACAUCGUUUUUAAGAAUUCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.048487539 ubox
1 35 0.006056099 ubox
2 15 0.058328611 ubox
2 34 0.006951911 ubox
2 42 0.039595432 ubox
3 29 0.005464414 ubox
3 41 0.039596677 ubox
3 42 0.009265015 ubox
3 43 0.038244647 ubox
3 44 0.013902091 ubox
3 49 0.018117359 ubox
3 50 0.027809324 ubox
4 28 0.006218624 ubox
4 29 0.004312448 ubox
4 40 0.038128949 ubox
4 41 0.010959208 ubox
4 42 0.040296801 ubox
4 43 0.015257792 ubox
4 44 0.009704161 ubox
4 48 0.018386069 ubox
4 49 0.038482801 ubox
4 50 0.067543191 ubox
5 28 0.004818895 ubox
5 29 0.012259840 ubox
5 40 0.011073414 ubox
5 41 0.040961745 ubox
5 42 0.013568052 ubox
5 43 0.010198734 ubox
5 44 0.009471619 ubox
5 48 0.036913460 ubox
5 49 0.091166774 ubox
5 50 0.015527586 ubox
6 15 0.021864746 ubox
6 24 0.007120187 ubox
6 28 0.014234253 ubox
6 40 0.040899735 ubox
6 41 0.012248110 ubox
6 42 0.007284620 ubox
6 43 0.009833174 ubox
6 48 0.091751595 ubox
6 49 0.019152194 ubox
7 14 0.022666683 ubox
7 16 0.449892120 ubox
7 23 0.005848935 ubox
7 27 0.013336857 ubox
7 35 0.023951983 ubox
7 39 0.038045821 ubox
8 15 0.499841784 ubox
8 24 0.057616965 ubox
8 34 0.024726467 ubox
9 14 0.482628844 ubox
9 16 0.035806432 ubox
9 22 0.007536271 ubox
9 23 0.056104322 ubox
9 32 0.014420695 ubox
9 35 0.013592916 ubox
9 45 0.213437027 ubox
10 15 0.037592815 ubox
10 21 0.007879158 ubox
10 29 0.004185122 ubox
10 31 0.014099809 ubox
10 34 0.013163531 ubox
10 43 0.014099869 ubox
10 44 0.228472657 ubox
10 49 0.064473832 ubox
10 50 0.068979296 ubox
11 28 0.004677402 ubox
11 29 0.021995499 ubox
11 41 0.003626918 ubox
11 42 0.014940568 ubox
11 43 0.234018014 ubox
11 44 0.022227154 ubox
11 48 0.068316998 ubox
11 49 0.088314175 ubox
11 50 0.053251716 ubox
12 28 0.024725127 ubox
12 29 0.008799800 ubox
12 40 0.003702998 ubox
12 41 0.015010797 ubox
12 42 0.234320960 ubox
12 43 0.023727719 ubox
12 44 0.015742357 ubox
12 48 0.085344160 ubox
12 49 0.067163771 ubox
12 50 0.399402217 ubox
13 28 0.009250058 ubox
13 29 0.012670024 ubox
13 40 0.014521869 ubox
13 41 0.233973477 ubox
13 42 0.023256596 ubox
13 43 0.013781678 ubox
13 44 0.016924736 ubox
13 48 0.062226507 ubox
13 49 0.542953711 ubox
13 50 0.017808860 ubox
14 21 0.111505568 ubox
14 24 0.006763930 ubox
14 28 0.014229311 ubox
14 31 0.058480322 ubox
14 34 0.008686121 ubox
14 40 0.232870142 ubox
14 41 0.022587232 ubox
14 42 0.012033824 ubox
14 43 0.010064703 ubox
14 48 0.571767414 ubox
14 49 0.020440010 ubox
15 20 0.126239871 ubox
15 22 0.015182995 ubox
15 23 0.010193262 ubox
15 25 0.037469927 ubox
15 27 0.013978814 ubox
15 30 0.061455263 ubox
15 32 0.004536426 ubox
15 33 0.010433573 ubox
15 39 0.226255085 ubox
15 45 0.060385310 ubox
15 47 0.576911813 ubox
16 21 0.015321469 ubox
16 24 0.036673973 ubox
16 29 0.058847842 ubox
16 31 0.005117529 ubox
16 43 0.464891736 ubox
16 44 0.049225565 ubox
17 42 0.496619989 ubox
18 29 0.009241659 ubox
18 41 0.493862421 ubox
18 42 0.008804197 ubox
18 43 0.012738462 ubox
18 44 0.461785893 ubox
18 49 0.093053330 ubox
18 50 0.030809798 ubox
19 28 0.011858460 ubox
19 40 0.456867221 ubox
19 41 0.010691269 ubox
19 42 0.010714165 ubox
19 43 0.469981594 ubox
19 48 0.095817843 ubox
19 49 0.041132165 ubox
20 42 0.462266961 ubox
21 32 0.030860493 ubox
21 35 0.023674609 ubox
21 45 0.314347386 ubox
22 29 0.011534107 ubox
22 31 0.029510906 ubox
22 34 0.022445904 ubox
22 41 0.307603745 ubox
22 42 0.014610426 ubox
22 43 0.023102886 ubox
22 44 0.340507167 ubox
22 49 0.135044900 ubox
22 50 0.007945549 ubox
23 28 0.011956212 ubox
23 31 0.205766694 ubox
23 34 0.048316114 ubox
23 40 0.307117407 ubox
23 41 0.054110203 ubox
23 42 0.017024331 ubox
23 43 0.348336647 ubox
23 48 0.155142615 ubox
23 49 0.008389280 ubox
24 30 0.209734169 ubox
24 33 0.051675245 ubox
24 35 0.534470334 ubox
24 39 0.267477671 ubox
24 47 0.158193229 ubox
25 34 0.539639593 ubox
25 42 0.640527625 ubox
26 41 0.651009091 ubox
26 42 0.004533873 ubox
26 43 0.007359325 ubox
26 44 0.005844324 ubox
26 49 0.016863797 ubox
26 50 0.004999621 ubox
27 40 0.651389309 ubox
27 41 0.005975400 ubox
27 42 0.007266721 ubox
27 43 0.005082063 ubox
27 48 0.017406981 ubox
27 49 0.006535898 ubox
28 36 0.295265755 ubox
28 37 0.061410024 ubox
28 38 0.032000584 ubox
28 39 0.648390527 ubox
28 46 0.015024754 ubox
29 35 0.313217305 ubox
29 36 0.056623703 ubox
29 37 0.035094271 ubox
29 38 0.623362207 ubox
29 45 0.015232798 ubox
30 34 0.312677440 ubox
31 45 0.018187357 ubox
32 43 0.127785470 ubox
32 44 0.014886228 ubox
33 42 0.136820142 ubox
34 45 0.051581223 ubox
35 41 0.013775891 ubox
35 42 0.006181975 ubox
35 43 0.012754751 ubox
35 44 0.054125755 ubox
35 50 0.004026465 ubox
36 40 0.012347039 ubox
36 41 0.007332101 ubox
36 42 0.013680279 ubox
36 43 0.054514274 ubox
36 44 0.014078385 ubox
36 49 0.005469681 ubox
36 50 0.005690285 ubox
37 41 0.011086161 ubox
37 42 0.050584902 ubox
37 43 0.016030516 ubox
37 44 0.007568972 ubox
37 48 0.005262990 ubox
37 49 0.007676189 ubox
37 50 0.010129015 ubox
38 42 0.014744472 ubox
38 43 0.007564766 ubox
38 44 0.005327326 ubox
38 48 0.007383076 ubox
38 49 0.013729978 ubox
39 43 0.005083854 ubox
39 48 0.014199674 ubox
39 49 0.003637851 ubox
40 46 0.007424639 ubox
41 45 0.006134210 ubox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
showpage
end
%%EOF
