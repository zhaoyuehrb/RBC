%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TENM1)
} def

/sequence { (\
GACUGCUUGCAUUAAAGGACUUCCUCAUCCUUUUUUUCAUGAAACUGAGCUUGCUUAAUCAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.019306504 ubox
1 13 0.021640977 ubox
1 22 0.003927226 ubox
1 23 0.017348093 ubox
1 26 0.005081778 ubox
1 29 0.004030683 ubox
1 35 0.004888788 ubox
1 38 0.030397499 ubox
1 52 0.019415785 ubox
1 56 0.061734986 ubox
1 60 0.470443512 ubox
2 7 0.018440504 ubox
2 12 0.022450911 ubox
2 21 0.004492677 ubox
2 22 0.017049858 ubox
2 25 0.004808904 ubox
2 28 0.003994478 ubox
2 34 0.005568535 ubox
2 36 0.003215595 ubox
2 37 0.029468400 ubox
2 51 0.018971931 ubox
2 55 0.060091781 ubox
2 59 0.462014443 ubox
3 17 0.005184088 ubox
3 18 0.003192949 ubox
3 49 0.017171865 ubox
3 62 0.325862624 ubox
3 64 0.052522791 ubox
4 11 0.070499655 ubox
4 14 0.006687813 ubox
4 16 0.005229363 ubox
4 27 0.004613003 ubox
4 39 0.023685063 ubox
4 41 0.017553527 ubox
4 48 0.017039385 ubox
4 53 0.007237591 ubox
4 57 0.112121615 ubox
4 61 0.327627907 ubox
4 63 0.052268645 ubox
5 10 0.077327093 ubox
5 13 0.007619855 ubox
5 26 0.004851727 ubox
5 38 0.026152092 ubox
5 40 0.015948164 ubox
5 46 0.004037091 ubox
5 50 0.203837411 ubox
5 54 0.779326054 ubox
5 56 0.049223356 ubox
5 60 0.321380764 ubox
6 17 0.029172139 ubox
6 18 0.014960117 ubox
6 49 0.204283546 ubox
6 53 0.781098313 ubox
6 62 0.033653226 ubox
6 64 0.050103850 ubox
7 15 0.008327336 ubox
7 16 0.029748644 ubox
7 17 0.014904358 ubox
7 42 0.033354312 ubox
7 43 0.041791164 ubox
7 44 0.047837737 ubox
7 48 0.202471378 ubox
7 58 0.179769394 ubox
7 61 0.026836688 ubox
7 62 0.048538122 ubox
7 63 0.050137755 ubox
7 64 0.004371942 ubox
8 14 0.011315004 ubox
8 15 0.030362047 ubox
8 16 0.014806861 ubox
8 27 0.004477338 ubox
8 39 0.238459427 ubox
8 41 0.031969293 ubox
8 42 0.045481426 ubox
8 43 0.041664596 ubox
8 47 0.186773113 ubox
8 48 0.005700251 ubox
8 57 0.162199834 ubox
8 61 0.060884563 ubox
8 62 0.045818322 ubox
8 63 0.006358325 ubox
9 13 0.010595360 ubox
9 26 0.004978462 ubox
9 38 0.266265616 ubox
9 40 0.023197920 ubox
9 46 0.133428631 ubox
9 50 0.780847484 ubox
9 54 0.330546166 ubox
9 56 0.052855393 ubox
9 60 0.065493179 ubox
10 41 0.165428076 ubox
10 47 0.023197380 ubox
10 49 0.779134136 ubox
10 53 0.331586517 ubox
11 28 0.010528286 ubox
11 40 0.165354889 ubox
11 46 0.026650052 ubox
11 52 0.302885326 ubox
11 59 0.079097500 ubox
12 27 0.011340228 ubox
12 39 0.149934914 ubox
12 42 0.050898341 ubox
12 43 0.043073320 ubox
12 44 0.030888794 ubox
12 48 0.276501626 ubox
12 49 0.016517303 ubox
12 58 0.080325958 ubox
12 63 0.004276921 ubox
12 64 0.004134931 ubox
13 18 0.003301532 ubox
13 41 0.053022448 ubox
13 42 0.045055925 ubox
13 43 0.032589073 ubox
13 47 0.275968567 ubox
13 48 0.024013599 ubox
13 53 0.006063520 ubox
13 57 0.079688251 ubox
13 62 0.003772983 ubox
13 63 0.005471941 ubox
14 32 0.025733378 ubox
14 33 0.820191765 ubox
14 34 0.067777700 ubox
14 35 0.038708661 ubox
14 36 0.036691887 ubox
14 37 0.057796615 ubox
14 40 0.039301722 ubox
14 46 0.216742801 ubox
14 52 0.006414303 ubox
14 56 0.072642308 ubox
15 31 0.021333958 ubox
15 32 0.950838316 ubox
15 33 0.064368094 ubox
15 34 0.031158377 ubox
15 35 0.030090453 ubox
15 36 0.047810897 ubox
15 37 0.005662235 ubox
15 51 0.005780797 ubox
15 52 0.014433820 ubox
15 55 0.057434179 ubox
15 56 0.027836006 ubox
16 25 0.112430821 ubox
16 31 0.981618230 ubox
16 32 0.048891787 ubox
16 33 0.015427752 ubox
16 34 0.017146710 ubox
16 35 0.028558162 ubox
16 36 0.004056178 ubox
16 46 0.013101096 ubox
16 51 0.020559381 ubox
16 52 0.026906963 ubox
16 55 0.038281475 ubox
16 56 0.015521958 ubox
17 23 0.005731500 ubox
17 24 0.123463384 ubox
17 25 0.007152886 ubox
17 26 0.008261308 ubox
17 30 0.987602876 ubox
17 31 0.020963030 ubox
17 32 0.003757729 ubox
17 33 0.009577782 ubox
17 34 0.018365110 ubox
17 45 0.013343930 ubox
17 46 0.009579897 ubox
17 50 0.020586377 ubox
17 51 0.034760975 ubox
17 52 0.005390205 ubox
17 54 0.045962603 ubox
17 55 0.025699004 ubox
18 22 0.003787697 ubox
18 23 0.123191877 ubox
18 24 0.008464336 ubox
18 25 0.006810702 ubox
18 26 0.011232130 ubox
18 29 0.987579066 ubox
18 30 0.020408568 ubox
18 32 0.009302169 ubox
18 33 0.017788068 ubox
18 45 0.009699853 ubox
18 50 0.035025350 ubox
18 51 0.005020360 ubox
18 52 0.030672226 ubox
18 54 0.028608154 ubox
19 25 0.012464513 ubox
19 28 0.968882582 ubox
19 31 0.008760281 ubox
19 32 0.016648160 ubox
19 51 0.029859590 ubox
20 49 0.030108650 ubox
21 43 0.007649784 ubox
21 44 0.003823023 ubox
21 48 0.029575336 ubox
21 49 0.010447397 ubox
22 42 0.008210640 ubox
22 43 0.003873134 ubox
22 47 0.028123275 ubox
22 48 0.012025620 ubox
23 41 0.008202419 ubox
23 47 0.012605258 ubox
24 49 0.073735812 ubox
24 64 0.003489495 ubox
25 42 0.042899370 ubox
25 48 0.078037335 ubox
25 63 0.003577688 ubox
26 41 0.049293569 ubox
26 47 0.081382004 ubox
26 53 0.013499634 ubox
26 62 0.003542459 ubox
27 40 0.048709774 ubox
27 46 0.079742741 ubox
27 52 0.013758883 ubox
28 39 0.046022349 ubox
28 42 0.012635536 ubox
28 48 0.039515538 ubox
29 41 0.012973857 ubox
29 47 0.042216105 ubox
30 49 0.018815491 ubox
31 42 0.022117369 ubox
31 43 0.023647688 ubox
31 44 0.083032464 ubox
31 48 0.020432100 ubox
32 41 0.024054656 ubox
32 42 0.029253631 ubox
32 43 0.100225502 ubox
32 44 0.078031105 ubox
32 47 0.020340819 ubox
32 48 0.010323922 ubox
32 49 0.003242774 ubox
33 41 0.031085842 ubox
33 42 0.113598839 ubox
33 43 0.116946067 ubox
33 44 0.156698032 ubox
33 47 0.011969444 ubox
33 48 0.016134620 ubox
33 49 0.006550753 ubox
33 63 0.003662681 ubox
33 64 0.004051935 ubox
34 41 0.115845253 ubox
34 42 0.135535797 ubox
34 43 0.222446460 ubox
34 44 0.106956954 ubox
34 47 0.018349067 ubox
34 48 0.028884558 ubox
34 49 0.013538895 ubox
34 62 0.003983121 ubox
34 63 0.008708742 ubox
34 64 0.010231144 ubox
35 41 0.136080334 ubox
35 42 0.234084577 ubox
35 43 0.124995090 ubox
35 44 0.058993741 ubox
35 47 0.029556081 ubox
35 48 0.032513055 ubox
35 49 0.017120853 ubox
35 62 0.008677373 ubox
35 63 0.014209367 ubox
35 64 0.015426528 ubox
36 41 0.229782011 ubox
36 42 0.127166473 ubox
36 43 0.067471063 ubox
36 44 0.024248118 ubox
36 47 0.033004004 ubox
36 48 0.036304623 ubox
36 49 0.243123698 ubox
36 61 0.004024863 ubox
36 62 0.014111094 ubox
36 63 0.021113483 ubox
36 64 0.142381578 ubox
37 41 0.115152253 ubox
37 42 0.060607949 ubox
37 43 0.026503447 ubox
37 47 0.018005051 ubox
37 48 0.687667003 ubox
37 61 0.006825010 ubox
37 62 0.017888327 ubox
37 63 0.219775148 ubox
38 47 0.719231279 ubox
38 53 0.005604084 ubox
38 62 0.226035797 ubox
39 46 0.657419570 ubox
39 52 0.005680853 ubox
39 59 0.004808150 ubox
40 47 0.011224306 ubox
40 57 0.003611639 ubox
40 58 0.005046154 ubox
40 61 0.252039931 ubox
41 46 0.017828171 ubox
41 52 0.007513145 ubox
41 56 0.003940785 ubox
41 60 0.259154339 ubox
42 51 0.008434046 ubox
42 52 0.004988541 ubox
42 55 0.003808812 ubox
42 59 0.257032602 ubox
43 51 0.005513614 ubox
43 52 0.007082890 ubox
43 56 0.004900174 ubox
44 51 0.007336250 ubox
44 55 0.004937761 ubox
45 62 0.372179691 ubox
45 64 0.007501214 ubox
46 53 0.004127854 ubox
46 57 0.266407082 ubox
46 61 0.374445824 ubox
46 63 0.006775919 ubox
47 52 0.004232822 ubox
47 56 0.274070280 ubox
47 60 0.374865389 ubox
48 55 0.275382860 ubox
48 56 0.006134337 ubox
48 59 0.369826593 ubox
49 54 0.274423918 ubox
49 55 0.011677851 ubox
50 62 0.011927702 ubox
50 64 0.019335430 ubox
51 58 0.041770330 ubox
51 61 0.010151240 ubox
51 62 0.051451216 ubox
51 63 0.021753603 ubox
51 64 0.006336795 ubox
52 57 0.041566346 ubox
52 61 0.060915654 ubox
52 62 0.020781156 ubox
52 63 0.010062443 ubox
53 60 0.062225890 ubox
54 62 0.036957430 ubox
54 64 0.057408898 ubox
55 61 0.036924521 ubox
55 62 0.026259924 ubox
55 63 0.071368908 ubox
55 64 0.015868360 ubox
56 61 0.025829493 ubox
56 62 0.071270548 ubox
56 63 0.023527573 ubox
5 54 0.9500000 lbox
6 53 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
16 31 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
showpage
end
%%EOF
