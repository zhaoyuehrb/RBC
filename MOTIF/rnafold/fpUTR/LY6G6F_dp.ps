%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LY6G6F)
} def

/sequence { (\
GGGACACCAGGUCUUGGAGCAAGAGAACUUGGCAGGCUCUCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.079934783 ubox
1 15 0.067557075 ubox
1 38 0.052847198 ubox
1 39 0.402452047 ubox
1 40 0.028659149 ubox
1 41 0.232650108 ubox
1 42 0.131030163 ubox
1 43 0.842537822 ubox
1 44 0.111801821 ubox
2 7 0.079971399 ubox
2 8 0.009868435 ubox
2 14 0.081169056 ubox
2 37 0.065102707 ubox
2 38 0.404983509 ubox
2 39 0.034092088 ubox
2 40 0.236323317 ubox
2 41 0.131021520 ubox
2 42 0.845477772 ubox
2 43 0.111238452 ubox
2 44 0.014222921 ubox
3 7 0.009749610 ubox
3 13 0.083213400 ubox
3 37 0.406715878 ubox
3 38 0.020581120 ubox
3 39 0.267137513 ubox
3 40 0.040748294 ubox
3 41 0.845325870 ubox
3 42 0.108133189 ubox
3 43 0.014328628 ubox
4 12 0.083498654 ubox
4 38 0.263699043 ubox
4 40 0.820305234 ubox
5 11 0.083507768 ubox
5 16 0.007972361 ubox
5 31 0.010246227 ubox
6 12 0.003898898 ubox
6 15 0.007785660 ubox
6 30 0.009830993 ubox
7 11 0.004185306 ubox
7 17 0.050903448 ubox
7 32 0.943969150 ubox
7 36 0.097304234 ubox
8 16 0.052043017 ubox
8 31 0.946079857 ubox
8 35 0.093096862 ubox
9 15 0.050649437 ubox
9 29 0.043712935 ubox
9 30 0.946009229 ubox
9 38 0.032643837 ubox
9 40 0.105168932 ubox
10 14 0.034369478 ubox
10 28 0.054825982 ubox
10 29 0.945223150 ubox
10 37 0.028798932 ubox
10 38 0.230695968 ubox
10 39 0.157029289 ubox
10 40 0.013828417 ubox
10 41 0.004442951 ubox
10 42 0.021818191 ubox
10 43 0.016487211 ubox
10 44 0.014832316 ubox
11 20 0.004669688 ubox
11 28 0.945696351 ubox
11 33 0.072280757 ubox
11 37 0.260628579 ubox
11 38 0.111246585 ubox
11 39 0.019903733 ubox
11 40 0.003389525 ubox
11 41 0.021866796 ubox
11 42 0.016440414 ubox
11 43 0.014932310 ubox
12 18 0.003824214 ubox
12 19 0.004260643 ubox
12 24 0.333839273 ubox
12 26 0.587921674 ubox
12 27 0.660862088 ubox
12 32 0.071101363 ubox
12 36 0.238985007 ubox
13 17 0.004299550 ubox
13 19 0.006382245 ubox
13 23 0.439245947 ubox
13 25 0.831673415 ubox
13 31 0.068342578 ubox
13 32 0.010498577 ubox
13 35 0.238561731 ubox
13 36 0.161730720 ubox
14 18 0.005813943 ubox
14 22 0.440419013 ubox
14 23 0.062563566 ubox
14 24 0.827377990 ubox
14 25 0.097593435 ubox
14 26 0.023252808 ubox
14 27 0.004964946 ubox
14 31 0.009778480 ubox
14 34 0.209529380 ubox
14 35 0.162266873 ubox
15 21 0.443769173 ubox
15 22 0.095395465 ubox
15 23 0.814123329 ubox
15 24 0.112233127 ubox
15 25 0.023126954 ubox
15 26 0.007741047 ubox
15 34 0.193315992 ubox
15 35 0.003735776 ubox
16 20 0.439538447 ubox
16 29 0.025894362 ubox
16 30 0.004962743 ubox
16 33 0.218705062 ubox
16 38 0.003787062 ubox
16 40 0.065375444 ubox
16 41 0.013886715 ubox
16 42 0.049657288 ubox
16 43 0.014865957 ubox
16 44 0.007162774 ubox
17 28 0.026148539 ubox
17 29 0.003484426 ubox
17 30 0.076168387 ubox
17 37 0.004169788 ubox
17 39 0.074777959 ubox
17 41 0.049828568 ubox
17 42 0.014664762 ubox
17 43 0.007201254 ubox
18 29 0.078191735 ubox
18 30 0.004769432 ubox
18 38 0.075299046 ubox
18 40 0.049150706 ubox
19 28 0.078442266 ubox
19 29 0.003450699 ubox
19 33 0.108919100 ubox
19 37 0.075374733 ubox
19 39 0.047422831 ubox
20 31 0.276833697 ubox
20 32 0.081508566 ubox
20 36 0.072808747 ubox
21 30 0.289704293 ubox
22 29 0.290962022 ubox
22 30 0.010756922 ubox
22 38 0.005869582 ubox
22 40 0.021842981 ubox
23 28 0.288712212 ubox
23 29 0.011508983 ubox
23 30 0.026608737 ubox
23 37 0.006303583 ubox
23 39 0.027944052 ubox
23 41 0.039903621 ubox
24 29 0.024847356 ubox
24 30 0.013766566 ubox
24 38 0.028993200 ubox
24 40 0.040292271 ubox
25 29 0.009613555 ubox
25 37 0.028911782 ubox
25 39 0.040926189 ubox
26 38 0.040219226 ubox
28 35 0.030222824 ubox
28 36 0.038666253 ubox
29 34 0.027651135 ubox
29 35 0.038064466 ubox
30 34 0.029056622 ubox
30 35 0.003658145 ubox
31 38 0.003461340 ubox
31 42 0.003951165 ubox
31 43 0.004026031 ubox
32 37 0.010641810 ubox
32 39 0.007044128 ubox
32 41 0.004538213 ubox
32 42 0.004093505 ubox
34 40 0.053278006 ubox
35 39 0.069588380 ubox
35 41 0.033016000 ubox
35 42 0.052691694 ubox
35 43 0.053599613 ubox
35 44 0.035781338 ubox
36 40 0.022450484 ubox
36 41 0.053284884 ubox
36 42 0.053424784 ubox
36 43 0.035804041 ubox
1 43 0.9500000 lbox
2 42 0.9500000 lbox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
showpage
end
%%EOF
