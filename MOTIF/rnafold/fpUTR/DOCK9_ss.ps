%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUGCCUUCCCACCCCACAGGCUCUGCAGACCCAGCCAGCGGGGCUGACCACUUGUGCCUGGGAAGCCAGUUUCCUUUCCUUCCUUGGACCACUGGCAUGCCUGUGCCUUGCACGGCCAGGGACUCGCAGCUGUUCCAGUUGCAGACUUUCUGACUUGCGUUUUCAGCCGAGA\
) } def
/len { sequence length } bind def

/coor [
[63.75421524 175.72067261]
[51.51448059 184.39183044]
[36.54399872 185.33235168]
[23.31525421 178.26124573]
[15.78039455 165.29106140]
[16.19048691 150.29666138]
[24.42301559 137.75770569]
[38.01789093 131.42034912]
[49.35216141 121.59515381]
[34.69495773 124.78363037]
[20.03775406 127.97211456]
[5.38055086 131.16058350]
[-9.27665234 134.34907532]
[-23.93385506 137.53755188]
[-29.87489319 149.64707947]
[-41.54040909 156.02165222]
[-54.55347443 154.52542114]
[-64.17716217 145.92901611]
[-78.88893890 148.85536194]
[-93.60071564 151.78172302]
[-108.31250000 154.70806885]
[-123.02427673 157.63442993]
[-137.73605347 160.56079102]
[-141.54643250 174.03802490]
[-150.75321960 184.50411987]
[-163.51280212 189.94975281]
[-177.30714417 189.36238098]
[-189.44065857 182.91395569]
[-197.56698608 171.91615295]
[-212.32865906 174.57945251]
[-227.09031677 177.24275208]
[-235.01029968 181.85987854]
[-242.13908386 179.81938171]
[-256.94592285 182.21878052]
[-271.75277710 184.61816406]
[-278.62753296 198.52923584]
[-292.38162231 205.71282959]
[-307.72637939 203.40670776]
[-318.76141357 192.49763489]
[-321.24349976 177.18037415]
[-314.21826172 163.34471130]
[-300.38705444 156.31074524]
[-285.06820679 158.78317261]
[-274.15219116 169.81130981]
[-259.34533691 167.41192627]
[-244.53846741 165.01252747]
[-229.75361633 162.48107910]
[-214.99195862 159.81777954]
[-200.23028564 157.15449524]
[-195.14704895 141.83154297]
[-182.96603394 131.09414673]
[-166.94232178 127.93756104]
[-151.42176819 133.31420898]
[-140.66241455 145.84899902]
[-125.95063019 142.92265320]
[-111.23885345 139.99629211]
[-96.52707672 137.06994629]
[-81.81529236 134.14358521]
[-67.10351562 131.21722412]
[-58.38188553 116.85472107]
[-41.64516449 113.15584564]
[-27.12233543 122.88034821]
[-12.46513176 119.69186401]
[2.19207144 116.50338745]
[16.84927368 113.31491089]
[31.50647736 110.12642670]
[46.16368103 106.93795013]
[54.60821152 94.54077911]
[52.20882034 79.73392487]
[49.80942917 64.92707062]
[47.41003418 50.12021637]
[45.01064301 35.31336212]
[42.61125183 20.50650978]
[30.64301682 6.53180599]
[37.46961212 -9.62001610]
[34.80631256 -24.38168526]
[32.14301682 -39.14335251]
[17.52407074 -43.67601776]
[6.69426537 -54.49146271]
[2.14220738 -69.10438538]
[4.91392708 -84.15682983]
[14.37250423 -96.18986511]
[28.34442520 -102.43837738]
[43.61904907 -101.46652222]
[56.68637466 -93.49760437]
[64.54362488 -80.36283875]
[65.38526917 -65.08048248]
[59.01789474 -51.16232681]
[46.90468216 -41.80665207]
[49.56798172 -27.04498291]
[52.23128128 -12.28331470]
[61.99843979 -5.11255598]
[64.32294464 7.18778372]
[57.41810608 18.10711670]
[59.81749725 32.91397095]
[62.21688843 47.72082520]
[64.61627960 62.52767944]
[67.01567078 77.33453369]
[69.41506958 92.14138794]
[79.88769531 75.07857513]
[98.74266815 67.55333710]
[118.62858582 72.86100006]
[129.42282104 62.44540787]
[140.21704102 52.02981186]
[144.23713684 43.79070282]
[151.29812622 41.52677917]
[162.27655029 31.30551147]
[173.25495911 21.08424187]
[184.23338318 10.86297321]
[191.70587158 -4.35537863]
[208.39807129 -1.38777554]
[210.16731262 15.47360516]
[194.45465088 21.84139061]
[183.47622681 32.06266022]
[172.49781799 42.28392792]
[161.51939392 52.50519943]
[150.63264465 62.82403946]
[139.83840942 73.23963928]
[129.04417419 83.65522766]
[133.27017212 98.04762268]
[147.98194885 100.97397614]
[162.69372559 103.90033722]
[177.40550232 106.82669067]
[192.11729431 109.75304413]
[206.82907104 112.67939758]
[221.87355042 107.78305054]
[232.84678650 117.85464478]
[247.55857849 120.78099823]
[262.29586792 123.57594299]
[277.05755615 126.23923492]
[291.81921387 128.90254211]
[306.58090210 131.56582642]
[321.34255981 134.22912598]
[336.10421753 136.89242554]
[350.86590576 139.55572510]
[367.52691650 136.41773987]
[375.15447998 151.55895996]
[362.71652222 163.07995605]
[348.20260620 154.31739807]
[333.44091797 151.65409851]
[318.67926025 148.99079895]
[303.91760254 146.32749939]
[289.15591431 143.66419983]
[274.39425659 141.00090027]
[259.63259888 138.33760071]
[252.46852112 140.25053406]
[244.63221741 135.49278259]
[229.92044067 132.56642151]
[215.92823792 137.67208862]
[203.90270996 127.39118195]
[189.19093323 124.46482086]
[174.47915649 121.53846741]
[159.76737976 118.61211395]
[145.05558777 115.68576050]
[130.34381104 112.75940704]
[109.68457031 130.75929260]
[83.15383148 126.70959473]
[88.64581299 140.66804504]
[94.13779449 154.62648010]
[99.62977600 168.58493042]
[105.70330048 175.45196533]
[105.09276581 182.84184265]
[110.33473206 196.89608765]
[115.57669067 210.95033264]
[126.77701569 223.67782593]
[117.64747620 237.96376038]
[101.39253998 233.14575195]
[101.52244568 216.19230652]
[96.28047943 202.13806152]
[91.03852081 188.08381653]
[85.67133331 174.07690430]
[80.17935181 160.11846924]
[74.68737030 146.16001892]
[69.19538879 132.20158386]
[67.32302094 147.08425903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[14 62]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[23 54]
[29 49]
[30 48]
[31 47]
[33 46]
[34 45]
[35 44]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[75 91]
[76 90]
[77 89]
[102 119]
[103 118]
[104 117]
[106 116]
[107 115]
[108 114]
[109 113]
[120 155]
[121 154]
[122 153]
[123 152]
[124 151]
[125 150]
[127 148]
[128 147]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[157 174]
[158 173]
[159 172]
[160 171]
[162 170]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
