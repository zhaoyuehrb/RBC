%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGCGGGCGGGGCGGGGUUCGGGUGCGAGGCCGGUCCUGCAGGCGGCAGCCAGAGCUGCGCGCCGCGGCGGCGGAAGAUGGCUGCGGCCGAGGUGGCGGACACUCAGCUGAUGCUUGGAGUCGGGCUGAUCGACGGGGUCUCCCUCUUAUCCAGGCUGGAGUGCAGUAGCGCAAUCAUCGCUCUCUGCAGCCUCCACCUCCCAGGCCCAAACCAUCCUCCCGCCUCGGCCUCCGAGUAGCUGGGACCUCAGGCG\
UGCACCACCACCCGAUUAAUUUUUGUAUUUUUUGUGGAGAUGGGAUACCGAC\
) } def
/len { sequence length } bind def

/coor [
[304.27401733 528.58306885]
[308.91296387 523.12377930]
[314.48504639 519.44958496]
[308.39331055 505.74224854]
[296.15405273 497.25402832]
[297.62011719 481.50091553]
[291.52838135 467.79357910]
[285.36682129 454.11749268]
[279.13558960 440.47302246]
[272.90435791 426.82852173]
[261.71035767 422.32916260]
[256.39364624 411.05545044]
[260.28363037 398.79302979]
[254.19190979 385.08569336]
[247.96067810 371.44122314]
[241.59060669 357.86099243]
[235.22053528 344.28079224]
[228.85046387 330.70056152]
[222.48039246 317.12036133]
[216.11032104 303.54013062]
[209.74024963 289.95993042]
[197.33039856 281.72314453]
[198.47479248 265.94338989]
[192.10472107 252.36315918]
[185.66548157 238.81561279]
[179.15722656 225.30108643]
[172.64897156 211.78654480]
[165.93470764 198.37316895]
[159.01602173 185.06408691]
[152.09733582 171.75500488]
[145.17864990 158.44590759]
[138.25994873 145.13682556]
[131.34126282 131.82774353]
[124.42257690 118.51866150]
[117.50389099 105.20957184]
[110.60504150 113.58334351]
[100.71675873 116.18732452]
[91.75598145 112.73850250]
[78.44689941 119.65718842]
[65.13781738 126.57587433]
[51.82872772 133.49456787]
[45.69723892 140.19445801]
[38.34842300 140.41516113]
[24.96945953 147.19773865]
[11.59049702 153.98031616]
[-1.78846514 160.76289368]
[-15.13266182 167.61361694]
[-28.44174767 174.53231812]
[-41.75083160 181.45100403]
[-55.05991745 188.36968994]
[-68.36900330 195.28837585]
[-76.72711182 209.39773560]
[-93.11996460 208.94354248]
[-100.68400574 194.39303589]
[-91.63799286 180.71452332]
[-75.28768921 181.97929382]
[-61.97860718 175.06060791]
[-48.66952133 168.14192200]
[-35.36043549 161.22322083]
[-22.05135155 154.30453491]
[-17.58894157 148.46153259]
[-8.57104397 147.38394165]
[4.80791855 140.60136414]
[18.18688011 133.81878662]
[31.56584358 127.03620148]
[44.91003799 120.18547821]
[58.21912384 113.26679230]
[71.52821350 106.34810638]
[84.83729553 99.42941284]
[93.08045197 84.78115082]
[111.47950745 85.79624176]
[109.64809418 70.90847015]
[107.81668091 56.02069092]
[105.98526764 41.13291168]
[104.15384674 26.24513435]
[90.16073608 15.70632648]
[88.18371582 -1.35884225]
[98.96354675 -14.29747009]
[96.98037720 -29.16579437]
[94.99720764 -44.03411484]
[93.01403046 -58.90243912]
[91.03086090 -73.77075958]
[79.46295929 -88.12812805]
[86.84088135 -104.07476044]
[84.70615387 -118.92208099]
[80.40734100 -126.92232513]
[82.62618256 -133.93165588]
[80.64300537 -148.79997253]
[78.65983582 -163.66828918]
[76.67666626 -178.53662109]
[74.46624756 -193.37286377]
[72.02910614 -208.17355347]
[69.59196472 -222.97422791]
[67.15482330 -237.77491760]
[64.71768188 -252.57560730]
[62.28054047 -267.37628174]
[59.84339523 -282.17697144]
[49.96670914 -294.53665161]
[55.53332138 -308.35192871]
[53.09617996 -323.15261841]
[42.69711685 -324.82946777]
[33.15107346 -329.77243042]
[25.47657776 -337.60589600]
[20.53869057 -347.63955688]
[18.95287323 -358.92810059]
[21.01141167 -370.36016846]
[26.64097786 -380.76766968]
[35.39687347 -389.04501343]
[29.86931419 -402.98941040]
[24.34175491 -416.93377686]
[9.45260048 -420.88592529]
[-0.14232005 -432.70922852]
[-0.92615545 -447.73751831]
[7.19240093 -460.19653320]
[1.66484261 -474.14093018]
[-3.86271548 -488.08532715]
[-9.39027309 -502.02972412]
[-14.91783142 -515.97412109]
[-20.44538879 -529.91851807]
[-25.97294807 -543.86291504]
[-42.43445969 -547.85534668]
[-53.15144348 -560.75701904]
[-54.03879547 -577.33892822]
[-44.94411087 -591.03320312]
[-50.61361313 -604.92047119]
[-56.28311157 -618.80773926]
[-70.57744598 -624.99725342]
[-76.12930298 -639.16168213]
[-70.14048004 -652.75103760]
[-75.80998230 -666.63830566]
[-81.47948456 -680.52557373]
[-87.14898682 -694.41284180]
[-101.32279205 -701.92840576]
[-104.14241791 -717.72167969]
[-93.44490051 -729.67755127]
[-77.43644714 -728.62445068]
[-68.39738464 -715.37023926]
[-73.26169586 -700.08239746]
[-67.59219360 -686.19506836]
[-61.92269516 -672.30780029]
[-56.25319672 -658.42053223]
[-42.46489716 -652.90521240]
[-36.51738739 -638.90228271]
[-42.39582443 -624.47723389]
[-36.72632599 -610.58996582]
[-31.05682373 -596.70269775]
[-17.87881279 -594.74664307]
[-7.29526615 -586.47821045]
[-2.12612462 -573.96533203]
[-3.81514549 -560.42364502]
[-12.02855396 -549.39044189]
[-6.50099611 -535.44604492]
[-0.97343826 -521.50164795]
[4.55411959 -507.55728149]
[10.08167744 -493.61288452]
[15.60923576 -479.66848755]
[21.13679314 -465.72409058]
[35.58662033 -462.21118164]
[45.31217575 -450.72738647]
[46.42379379 -435.54129028]
[38.28614807 -422.46136475]
[43.81370544 -408.51696777]
[49.34126663 -394.57257080]
[64.32878113 -393.96072388]
[70.97454834 -407.40817261]
[77.62030792 -420.85562134]
[84.26606750 -434.30307007]
[82.67107391 -452.67169189]
[97.68836975 -461.79360962]
[104.19662476 -475.30816650]
[110.70487976 -488.82269287]
[117.21314240 -502.33721924]
[110.61711121 -516.51562500]
[114.72785187 -531.60321045]
[127.60438538 -540.47613525]
[143.16682434 -538.94482422]
[154.06703186 -527.73242188]
[155.15829468 -512.13293457]
[145.92533875 -499.51205444]
[130.72767639 -495.82897949]
[124.21941376 -482.31442261]
[117.71115875 -468.79989624]
[111.20290375 -455.28536987]
[114.89954376 -443.80123901]
[109.62962341 -432.50558472]
[97.71351624 -427.65731812]
[91.06775665 -414.20986938]
[84.42198944 -400.76242065]
[77.77622986 -387.31497192]
[90.90402985 -364.73049927]
[86.32913208 -340.30203247]
[67.89686584 -325.58978271]
[70.33400726 -310.78909302]
[80.03637695 -299.48806763]
[74.64408112 -284.61413574]
[77.08122253 -269.81344604]
[79.51837158 -255.01275635]
[81.95551300 -240.21206665]
[84.39265442 -225.41137695]
[86.82979584 -210.61068726]
[89.26693726 -195.80999756]
[91.85348511 -193.48501587]
[93.46604156 -189.81257629]
[93.49259186 -185.25325012]
[91.54499054 -180.51979065]
[93.52816010 -165.65147400]
[95.51132965 -150.78314209]
[97.49450684 -135.91482544]
[99.55347443 -121.05680847]
[101.68820190 -106.20948792]
[111.16116333 -98.73866272]
[113.08633423 -86.42370605]
[105.89918518 -75.75393677]
[107.88235474 -60.88561249]
[109.86553192 -46.01728821]
[111.84870148 -31.14896584]
[113.83187103 -16.28064156]
[125.03961182 -9.98383427]
[130.67268372 1.78751194]
[128.48110962 14.84895992]
[119.04162598 24.41371918]
[120.87303925 39.30149841]
[122.70446014 54.18927383]
[124.53587341 69.07704926]
[126.36728668 83.96482849]
[130.81297302 98.29088593]
[137.73165894 111.59996796]
[144.65034485 124.90905762]
[151.56904602 138.21813965]
[158.48773193 151.52722168]
[165.40641785 164.83630371]
[172.32510376 178.14540100]
[179.24378967 191.45448303]
[183.55731201 194.20991516]
[186.15492249 197.95698547]
[186.94487000 201.88929749]
[186.16349792 205.27828979]
[192.67175293 218.79283142]
[199.18000793 232.30735779]
[205.68917847 238.64096069]
[205.68493652 245.99308777]
[212.05500793 259.57330322]
[224.92050171 268.78143311]
[223.32046509 283.58987427]
[229.69053650 297.17007446]
[236.06060791 310.75027466]
[242.43067932 324.33050537]
[248.80075073 337.91070557]
[255.17082214 351.49093628]
[261.54089355 365.07113647]
[266.67303467 369.10723877]
[268.72659302 374.33737183]
[267.89923096 378.99395752]
[273.99096680 392.70129395]
[289.13522339 403.21801758]
[286.54885864 420.59732056]
[292.78005981 434.24179077]
[299.01129150 447.88626099]
[305.38989258 454.35131836]
[305.23568726 461.70184326]
[311.32742310 475.40917969]
[324.00241089 484.87783813]
[322.10064697 499.65054321]
[328.19235229 513.35784912]
[353.51019287 517.28082275]
[366.01226807 546.52111816]
[374.37762451 558.97186279]
[382.80633545 571.37976074]
[391.29821777 583.74456787]
[399.79010010 596.10931396]
[415.07345581 599.11889648]
[423.50927734 611.77947998]
[420.54595947 626.33129883]
[429.03784180 638.69604492]
[437.52972412 651.06085205]
[453.11221313 653.69946289]
[462.19665527 666.63189697]
[459.39346313 682.18560791]
[446.36569214 691.13281250]
[430.84249878 688.16534424]
[422.03350830 675.04370117]
[425.16494751 659.55273438]
[416.67306519 647.18792725]
[408.18118286 634.82318115]
[393.53561401 632.36480713]
[384.74749756 619.94616699]
[387.42532349 604.60119629]
[378.93344116 592.23645020]
[370.44155884 579.87164307]
[364.09741211 576.15606689]
[361.92684937 567.33715820]
[353.56152344 554.88641357]
[346.57531738 557.61462402]
[352.03149414 571.58709717]
[338.05889893 577.04302979]
[332.60293579 563.07098389]
[325.61672974 565.79913330]
[327.90277100 580.62396240]
[338.58731079 593.06469727]
[332.90097046 608.44647217]
[316.69338989 610.94573975]
[306.63754272 597.99151611]
[313.07800293 582.90997314]
[310.79196167 568.08520508]
[304.71582031 560.59625244]
[301.09140015 552.20037842]
[299.95208740 543.62872314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 264]
[4 263]
[6 261]
[7 260]
[8 258]
[9 257]
[10 256]
[13 254]
[14 253]
[15 250]
[16 249]
[17 248]
[18 247]
[19 246]
[20 245]
[21 244]
[23 242]
[24 241]
[25 239]
[26 238]
[27 237]
[28 233]
[29 232]
[30 231]
[31 230]
[32 229]
[33 228]
[34 227]
[35 226]
[38 69]
[39 68]
[40 67]
[41 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[71 225]
[72 224]
[73 223]
[74 222]
[75 221]
[78 217]
[79 216]
[80 215]
[81 214]
[82 213]
[84 210]
[85 209]
[87 208]
[88 207]
[89 206]
[90 205]
[91 201]
[92 200]
[93 199]
[94 198]
[95 197]
[96 196]
[97 195]
[99 193]
[100 192]
[108 163]
[109 162]
[110 161]
[114 157]
[115 156]
[116 155]
[117 154]
[118 153]
[119 152]
[120 151]
[124 146]
[125 145]
[126 144]
[129 141]
[130 140]
[131 139]
[132 138]
[164 189]
[165 188]
[166 187]
[167 186]
[169 183]
[170 182]
[171 181]
[172 180]
[266 292]
[267 291]
[268 289]
[269 288]
[270 287]
[273 284]
[274 283]
[275 282]
[297 304]
[298 303]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
