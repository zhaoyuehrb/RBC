%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GOLGA6L22)
} def

/sequence { (\
GCCUCCUCUGGCUCAGUCACACAGCGACGUAGAGGUGACUGGAGGUAUAUACUUGUCCUCACCUGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.896520311 ubox
1 30 0.004374383 ubox
1 36 0.004989042 ubox
1 46 0.410615682 ubox
2 11 0.898342559 ubox
2 29 0.004536455 ubox
2 35 0.005160267 ubox
2 45 0.425660072 ubox
2 66 0.012828009 ubox
3 10 0.898056115 ubox
3 11 0.003400689 ubox
3 34 0.005154840 ubox
3 44 0.425793691 ubox
3 65 0.012840356 ubox
4 10 0.003881387 ubox
4 27 0.004858114 ubox
4 33 0.005128095 ubox
4 43 0.425702849 ubox
4 67 0.068713226 ubox
5 10 0.004380870 ubox
5 11 0.011317335 ubox
5 26 0.004954133 ubox
5 32 0.005017737 ubox
5 35 0.016680163 ubox
5 42 0.424749822 ubox
5 45 0.047948656 ubox
5 66 0.073434748 ubox
6 10 0.013702767 ubox
6 24 0.004584001 ubox
6 34 0.018691780 ubox
6 41 0.409503072 ubox
6 42 0.006371936 ubox
6 44 0.048396725 ubox
6 65 0.073303204 ubox
6 66 0.011057382 ubox
7 23 0.004532041 ubox
7 33 0.023966624 ubox
7 35 0.011355004 ubox
7 38 0.158591612 ubox
7 41 0.004337674 ubox
7 43 0.048440496 ubox
7 65 0.009803516 ubox
7 66 0.011361590 ubox
7 67 0.040048757 ubox
8 16 0.005772033 ubox
8 24 0.003815780 ubox
8 32 0.024776717 ubox
8 34 0.011526135 ubox
8 35 0.007747931 ubox
8 37 0.165597490 ubox
8 42 0.047681247 ubox
8 44 0.003839691 ubox
8 65 0.014599479 ubox
8 66 0.042798055 ubox
9 15 0.009265121 ubox
9 19 0.012857120 ubox
9 23 0.003887327 ubox
9 31 0.024487566 ubox
9 33 0.011142845 ubox
9 34 0.007838529 ubox
9 37 0.135538490 ubox
9 41 0.029337336 ubox
9 43 0.003794672 ubox
9 47 0.023258130 ubox
9 65 0.041791932 ubox
10 14 0.013093986 ubox
10 18 0.014389484 ubox
10 22 0.003917294 ubox
10 30 0.022240617 ubox
10 36 0.271819518 ubox
10 40 0.031528063 ubox
10 46 0.025341244 ubox
10 63 0.072390246 ubox
10 64 0.035089365 ubox
11 17 0.014370379 ubox
11 25 0.008807583 ubox
11 30 0.011752662 ubox
11 36 0.129240671 ubox
11 39 0.031387516 ubox
11 46 0.006301957 ubox
11 62 0.072200546 ubox
11 63 0.034757934 ubox
12 16 0.014289719 ubox
12 24 0.008823253 ubox
12 29 0.015120890 ubox
12 32 0.041068241 ubox
12 34 0.338469126 ubox
12 35 0.110151929 ubox
12 42 0.013362255 ubox
12 44 0.033632280 ubox
12 45 0.006856434 ubox
12 66 0.003972341 ubox
13 23 0.008336224 ubox
13 27 0.021226565 ubox
13 31 0.041586540 ubox
13 33 0.345435691 ubox
13 34 0.083427624 ubox
13 38 0.027911722 ubox
13 41 0.007328320 ubox
13 42 0.384518307 ubox
13 43 0.045872519 ubox
13 44 0.006881583 ubox
13 65 0.006463911 ubox
13 66 0.024862601 ubox
13 67 0.012634091 ubox
14 26 0.021503582 ubox
14 32 0.345950098 ubox
14 34 0.007551346 ubox
14 37 0.028017879 ubox
14 41 0.904689926 ubox
14 42 0.035298363 ubox
14 65 0.028977795 ubox
14 66 0.012042644 ubox
15 36 0.027613527 ubox
15 40 0.927758050 ubox
15 64 0.027876231 ubox
16 22 0.007934975 ubox
16 25 0.023266427 ubox
16 28 0.364234760 ubox
16 30 0.003587340 ubox
16 39 0.928662865 ubox
16 62 0.003946731 ubox
16 63 0.026923748 ubox
16 68 0.010641306 ubox
17 21 0.007191583 ubox
17 24 0.022578753 ubox
17 27 0.364559979 ubox
17 33 0.030925810 ubox
17 35 0.005162664 ubox
17 38 0.928591395 ubox
17 61 0.005082958 ubox
17 67 0.011095120 ubox
18 26 0.364391415 ubox
18 32 0.031472006 ubox
18 34 0.005606151 ubox
18 37 0.928672300 ubox
18 66 0.011152136 ubox
19 30 0.033321882 ubox
19 36 0.928110019 ubox
20 29 0.034278123 ubox
20 35 0.927169596 ubox
20 37 0.007902672 ubox
20 65 0.009183816 ubox
21 30 0.445961362 ubox
21 36 0.011656131 ubox
21 64 0.007829633 ubox
22 29 0.449282136 ubox
22 35 0.014398310 ubox
22 41 0.033787497 ubox
23 40 0.035000469 ubox
24 30 0.571183232 ubox
24 36 0.011633511 ubox
24 39 0.035114800 ubox
25 29 0.576973309 ubox
25 35 0.014383796 ubox
25 37 0.009985479 ubox
26 36 0.005957726 ubox
26 69 0.004780726 ubox
27 36 0.036800704 ubox
27 68 0.004649768 ubox
28 35 0.038822294 ubox
29 68 0.033512782 ubox
30 65 0.003192643 ubox
30 67 0.034742455 ubox
33 40 0.009039515 ubox
33 64 0.075524816 ubox
34 39 0.009778227 ubox
34 63 0.077850868 ubox
35 62 0.077883122 ubox
36 61 0.077862139 ubox
37 60 0.077337125 ubox
38 59 0.073941362 ubox
39 66 0.003790756 ubox
40 65 0.003683220 ubox
41 57 0.011428152 ubox
41 58 0.065343822 ubox
41 60 0.003960203 ubox
41 63 0.009086534 ubox
41 64 0.003297720 ubox
42 52 0.004388043 ubox
42 54 0.162536272 ubox
42 56 0.010576294 ubox
42 57 0.065604485 ubox
42 60 0.754320140 ubox
42 62 0.009524346 ubox
42 63 0.004449401 ubox
42 69 0.004644490 ubox
43 53 0.187159507 ubox
43 54 0.336002122 ubox
43 56 0.061040825 ubox
43 59 0.757943290 ubox
43 64 0.062848950 ubox
44 52 0.189762924 ubox
44 53 0.366712852 ubox
44 54 0.008663603 ubox
44 57 0.004642456 ubox
44 58 0.758591831 ubox
44 59 0.005727851 ubox
44 63 0.064545828 ubox
44 69 0.004873909 ubox
45 52 0.370614475 ubox
45 53 0.006229170 ubox
45 56 0.005499593 ubox
45 57 0.758403233 ubox
45 58 0.006906701 ubox
45 62 0.064540904 ubox
45 68 0.003475429 ubox
46 51 0.346968206 ubox
46 55 0.272180214 ubox
46 61 0.062814703 ubox
47 54 0.273882096 ubox
47 56 0.674533663 ubox
48 55 0.682484299 ubox
49 54 0.662871358 ubox
49 56 0.024946229 ubox
50 55 0.024375117 ubox
52 66 0.005358632 ubox
53 65 0.005326546 ubox
54 61 0.008214111 ubox
55 60 0.010421941 ubox
55 62 0.005661076 ubox
55 68 0.600399081 ubox
56 61 0.005193804 ubox
56 67 0.635846225 ubox
57 66 0.642888675 ubox
58 65 0.642703569 ubox
58 66 0.006127680 ubox
59 65 0.005631283 ubox
59 66 0.007028077 ubox
59 67 0.010460283 ubox
60 65 0.012654834 ubox
60 66 0.013451767 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
