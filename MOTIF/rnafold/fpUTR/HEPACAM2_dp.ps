%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HEPACAM2)
} def

/sequence { (\
ACCUCACUGCUAAUUUCCCUAGCAAAUAAACCAGCAGCUGCUGGUCCAAGUUACCACUGAGAACAGGGCACUGCAUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.005736095 ubox
1 51 0.012828218 ubox
2 44 0.006573153 ubox
2 50 0.014566919 ubox
2 67 0.106809191 ubox
2 68 0.060294852 ubox
3 43 0.006479962 ubox
3 50 0.020073599 ubox
3 61 0.507235096 ubox
3 66 0.106756761 ubox
3 67 0.060787417 ubox
3 68 0.022684924 ubox
4 49 0.019284071 ubox
4 60 0.508874077 ubox
4 62 0.032263890 ubox
4 65 0.098764044 ubox
4 66 0.046361578 ubox
4 67 0.023169149 ubox
4 68 0.006189942 ubox
5 40 0.006291721 ubox
5 59 0.508863330 ubox
5 61 0.035233801 ubox
5 66 0.027915058 ubox
5 67 0.010307572 ubox
5 73 0.050574717 ubox
5 77 0.085777277 ubox
6 39 0.006277952 ubox
6 51 0.039550409 ubox
6 58 0.407784169 ubox
6 72 0.041742647 ubox
6 76 0.078765825 ubox
7 22 0.007376804 ubox
7 37 0.007980125 ubox
7 50 0.045415055 ubox
7 61 0.021119931 ubox
7 66 0.008419357 ubox
7 67 0.006139158 ubox
7 68 0.004299931 ubox
8 21 0.007419669 ubox
8 24 0.899635279 ubox
8 28 0.005932987 ubox
8 36 0.008199669 ubox
8 49 0.037874588 ubox
8 56 0.197921898 ubox
8 60 0.018055285 ubox
8 65 0.007826774 ubox
8 70 0.036786164 ubox
8 73 0.003474027 ubox
8 75 0.079295301 ubox
8 77 0.004081226 ubox
9 20 0.006878523 ubox
9 23 0.973867589 ubox
9 35 0.008237725 ubox
9 55 0.197312680 ubox
9 64 0.006661860 ubox
9 69 0.038408253 ubox
9 74 0.085125093 ubox
9 78 0.008707337 ubox
10 22 0.974076395 ubox
10 34 0.008236884 ubox
10 50 0.003640993 ubox
10 68 0.038267528 ubox
10 73 0.084954741 ubox
10 77 0.008787811 ubox
11 21 0.972238351 ubox
11 28 0.004257466 ubox
11 33 0.007995455 ubox
11 49 0.003497075 ubox
11 53 0.193983727 ubox
11 67 0.037423878 ubox
11 73 0.003235922 ubox
12 20 0.950971422 ubox
12 27 0.003932833 ubox
12 52 0.197627444 ubox
12 72 0.014341716 ubox
13 27 0.015065766 ubox
13 51 0.197680010 ubox
14 22 0.004133313 ubox
14 25 0.004533947 ubox
14 26 0.015833542 ubox
14 30 0.005212756 ubox
14 49 0.005893929 ubox
14 50 0.197111636 ubox
14 62 0.024432386 ubox
14 63 0.003422303 ubox
15 21 0.007356253 ubox
15 22 0.004150754 ubox
15 24 0.005340598 ubox
15 25 0.016223866 ubox
15 26 0.005788385 ubox
15 28 0.003621069 ubox
15 29 0.005831980 ubox
15 48 0.007099128 ubox
15 49 0.192439347 ubox
15 50 0.004129393 ubox
15 61 0.025375928 ubox
15 62 0.003455135 ubox
15 63 0.017905518 ubox
16 21 0.005159301 ubox
16 24 0.015476024 ubox
16 25 0.007433200 ubox
16 28 0.005469071 ubox
16 48 0.177722763 ubox
16 49 0.004981753 ubox
16 60 0.025676503 ubox
16 62 0.019117734 ubox
16 68 0.005510816 ubox
17 44 0.009037409 ubox
17 59 0.025658845 ubox
17 61 0.019108130 ubox
17 67 0.006066063 ubox
17 68 0.069400680 ubox
18 43 0.008923877 ubox
18 44 0.036054728 ubox
18 66 0.005906961 ubox
18 67 0.069575249 ubox
18 68 0.004070002 ubox
19 43 0.035687395 ubox
19 44 0.095929603 ubox
19 66 0.069438137 ubox
19 67 0.004089036 ubox
20 28 0.046748024 ubox
20 40 0.010762485 ubox
20 43 0.096433755 ubox
20 53 0.036301940 ubox
20 59 0.012375496 ubox
20 65 0.064973701 ubox
20 77 0.005996325 ubox
21 27 0.048549666 ubox
21 39 0.012034413 ubox
21 42 0.102271403 ubox
21 52 0.040987232 ubox
21 58 0.014306529 ubox
21 76 0.006590686 ubox
22 38 0.012125189 ubox
22 41 0.102591238 ubox
22 51 0.041936731 ubox
22 57 0.014326209 ubox
22 74 0.030762946 ubox
22 78 0.018323928 ubox
23 37 0.012116160 ubox
23 40 0.102567878 ubox
23 50 0.041979307 ubox
23 59 0.008493311 ubox
23 73 0.030786960 ubox
23 77 0.018516100 ubox
24 39 0.095911582 ubox
24 52 0.023090382 ubox
24 58 0.007414017 ubox
24 72 0.023868248 ubox
24 76 0.016838356 ubox
25 51 0.033463942 ubox
25 52 0.093194303 ubox
26 45 0.005119422 ubox
26 51 0.099097164 ubox
26 76 0.019312046 ubox
27 50 0.096669828 ubox
27 53 0.043448911 ubox
27 73 0.006538161 ubox
27 75 0.019076317 ubox
27 77 0.012125154 ubox
28 52 0.046805375 ubox
28 72 0.005846684 ubox
28 76 0.012554090 ubox
29 51 0.046979182 ubox
29 52 0.008365636 ubox
30 45 0.828459294 ubox
30 51 0.004684166 ubox
31 44 0.880126818 ubox
32 43 0.880777630 ubox
32 73 0.020560289 ubox
32 77 0.269825126 ubox
33 39 0.003808364 ubox
33 42 0.880587314 ubox
33 72 0.020725508 ubox
33 76 0.270466275 ubox
34 38 0.004761241 ubox
34 41 0.880785311 ubox
34 71 0.020681169 ubox
34 74 0.459863932 ubox
34 78 0.028509459 ubox
35 40 0.879517034 ubox
35 73 0.460406304 ubox
35 77 0.028751377 ubox
36 72 0.459602524 ubox
36 76 0.028392330 ubox
37 69 0.069939045 ubox
37 71 0.455295151 ubox
37 74 0.026357946 ubox
37 78 0.009649102 ubox
38 68 0.077064831 ubox
38 73 0.026325543 ubox
38 77 0.009852065 ubox
39 67 0.069723313 ubox
39 70 0.444953339 ubox
39 75 0.014413620 ubox
40 51 0.006077442 ubox
40 69 0.447344794 ubox
40 74 0.015060041 ubox
41 50 0.006973633 ubox
41 66 0.123463964 ubox
41 67 0.035520360 ubox
41 68 0.443139631 ubox
41 73 0.014993266 ubox
42 49 0.006972439 ubox
42 56 0.050024794 ubox
42 65 0.158435175 ubox
42 66 0.039548035 ubox
42 67 0.422754131 ubox
43 55 0.095982936 ubox
43 58 0.003641840 ubox
43 64 0.189905227 ubox
43 72 0.010316657 ubox
44 54 0.096068478 ubox
44 57 0.004148446 ubox
44 64 0.264617552 ubox
44 69 0.016758291 ubox
44 71 0.011294884 ubox
44 74 0.008112158 ubox
44 76 0.006582801 ubox
44 78 0.006785111 ubox
45 50 0.004007841 ubox
45 53 0.092136152 ubox
45 56 0.004251858 ubox
45 60 0.021464465 ubox
45 62 0.392230036 ubox
45 63 0.196966038 ubox
45 68 0.017758944 ubox
45 70 0.011462366 ubox
45 73 0.008820313 ubox
45 75 0.019730665 ubox
45 77 0.011916771 ubox
46 59 0.025741365 ubox
46 61 0.454244415 ubox
46 66 0.003476391 ubox
46 67 0.031547619 ubox
46 68 0.031137787 ubox
47 59 0.223209697 ubox
47 66 0.031581488 ubox
47 67 0.031908136 ubox
47 73 0.199647629 ubox
47 77 0.228680543 ubox
48 58 0.163692563 ubox
48 72 0.143915508 ubox
48 76 0.228496763 ubox
49 58 0.509949399 ubox
49 72 0.536176002 ubox
50 57 0.548380415 ubox
50 64 0.051958034 ubox
50 69 0.033714406 ubox
50 71 0.569130993 ubox
50 74 0.277473943 ubox
50 76 0.006639134 ubox
50 78 0.011678419 ubox
51 56 0.501276443 ubox
51 60 0.023331184 ubox
51 61 0.004840596 ubox
51 62 0.017903747 ubox
51 63 0.051378774 ubox
51 68 0.020225310 ubox
51 70 0.555080087 ubox
51 73 0.275122790 ubox
51 75 0.006951576 ubox
51 77 0.011542187 ubox
52 59 0.024295210 ubox
52 60 0.005454469 ubox
52 61 0.019275179 ubox
52 62 0.048494705 ubox
52 67 0.015620538 ubox
52 73 0.026284993 ubox
52 77 0.004846942 ubox
53 58 0.022225520 ubox
53 72 0.033406668 ubox
53 76 0.005457411 ubox
54 67 0.142568614 ubox
54 68 0.669115944 ubox
55 66 0.137295542 ubox
55 67 0.670554038 ubox
55 73 0.005479846 ubox
55 77 0.011799230 ubox
56 72 0.005463070 ubox
56 76 0.011741485 ubox
57 66 0.686198129 ubox
57 67 0.017725919 ubox
57 68 0.008951792 ubox
58 65 0.690221731 ubox
58 66 0.016411565 ubox
58 67 0.009008887 ubox
58 70 0.003900026 ubox
58 75 0.017393831 ubox
59 64 0.686844492 ubox
59 69 0.004043078 ubox
59 74 0.019026837 ubox
60 72 0.004478064 ubox
61 71 0.004513716 ubox
64 73 0.507699749 ubox
64 77 0.051866848 ubox
65 72 0.509823851 ubox
65 76 0.051350570 ubox
66 71 0.509728821 ubox
66 72 0.006906944 ubox
67 71 0.008148012 ubox
68 74 0.090249493 ubox
68 78 0.124177597 ubox
69 73 0.090093359 ubox
69 77 0.132328772 ubox
70 76 0.120998472 ubox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
49 72 0.9500000 lbox
50 71 0.9500000 lbox
51 70 0.9500000 lbox
54 68 0.9500000 lbox
55 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
showpage
end
%%EOF
