%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EIF2B2)
} def

/sequence { (\
CUCGCCCGCCCCGGAAGUGCAAACUGUGUGGUCUGGCAGGUGUGGAUUCCGCCGGUGAAGGCUGAAGGCAGCUACCUUAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.020346502 ubox
1 40 0.015305700 ubox
1 45 0.077820719 ubox
1 60 0.148681127 ubox
1 61 0.006017617 ubox
1 67 0.034523824 ubox
1 68 0.004730516 ubox
1 71 0.012430630 ubox
1 82 0.022308617 ubox
2 38 0.021407545 ubox
2 39 0.015255762 ubox
2 40 0.006833983 ubox
2 44 0.071028557 ubox
2 45 0.067768874 ubox
2 46 0.012935299 ubox
2 55 0.003480077 ubox
2 58 0.796558878 ubox
2 59 0.111437681 ubox
2 60 0.004575945 ubox
2 61 0.006338884 ubox
2 65 0.141507124 ubox
2 66 0.027489491 ubox
2 67 0.003590092 ubox
2 70 0.012509512 ubox
2 81 0.020146705 ubox
3 39 0.009012581 ubox
3 42 0.137598640 ubox
3 44 0.084436602 ubox
3 45 0.011795014 ubox
3 51 0.015227183 ubox
3 54 0.004587196 ubox
3 57 0.845405297 ubox
3 60 0.019058040 ubox
3 64 0.188067967 ubox
3 67 0.004119010 ubox
4 32 0.009196916 ubox
4 37 0.145405151 ubox
4 41 0.165085019 ubox
4 43 0.084940952 ubox
4 50 0.016213220 ubox
4 52 0.005300980 ubox
4 53 0.004934969 ubox
4 56 0.844849506 ubox
4 62 0.397977919 ubox
4 63 0.040454135 ubox
4 69 0.024878179 ubox
4 72 0.009462273 ubox
5 31 0.009499650 ubox
5 36 0.145119495 ubox
5 40 0.166681430 ubox
5 42 0.084840025 ubox
5 45 0.109015628 ubox
5 51 0.004974678 ubox
5 55 0.801786991 ubox
5 61 0.400441292 ubox
5 68 0.024866582 ubox
5 71 0.009412720 ubox
6 14 0.006826317 ubox
6 30 0.009396931 ubox
6 31 0.009096685 ubox
6 35 0.144449952 ubox
6 36 0.013941385 ubox
6 39 0.166568291 ubox
6 40 0.084903177 ubox
6 44 0.109421154 ubox
6 45 0.012124468 ubox
6 54 0.755336216 ubox
6 55 0.275361080 ubox
6 60 0.398488135 ubox
6 61 0.009041748 ubox
6 67 0.024710895 ubox
7 13 0.007082687 ubox
7 28 0.009321466 ubox
7 30 0.009964243 ubox
7 35 0.018032751 ubox
7 39 0.085346315 ubox
7 42 0.139999236 ubox
7 44 0.012309373 ubox
7 51 0.004373881 ubox
7 54 0.383898208 ubox
7 57 0.444138267 ubox
7 60 0.009364040 ubox
7 64 0.006653517 ubox
8 12 0.006769225 ubox
8 27 0.009325244 ubox
8 29 0.010060179 ubox
8 32 0.131254191 ubox
8 34 0.018024444 ubox
8 37 0.188829605 ubox
8 41 0.154390271 ubox
8 43 0.011337196 ubox
8 52 0.658757211 ubox
8 53 0.466046308 ubox
8 56 0.457081083 ubox
8 62 0.012254555 ubox
8 69 0.008739089 ubox
9 26 0.009302737 ubox
9 28 0.010028457 ubox
9 31 0.133396191 ubox
9 36 0.188385452 ubox
9 40 0.155464996 ubox
9 42 0.011175891 ubox
9 51 0.603171019 ubox
9 55 0.457147323 ubox
9 61 0.012351790 ubox
9 68 0.008737819 ubox
10 30 0.133017991 ubox
10 31 0.048065580 ubox
10 35 0.187386339 ubox
10 36 0.009834956 ubox
10 39 0.154674629 ubox
10 40 0.010150505 ubox
10 45 0.003986474 ubox
10 54 0.455933957 ubox
10 55 0.022794225 ubox
10 60 0.012324499 ubox
10 67 0.008706268 ubox
11 30 0.048871210 ubox
11 31 0.185595466 ubox
11 35 0.009114226 ubox
11 36 0.166218863 ubox
11 39 0.007310733 ubox
11 44 0.003938279 ubox
11 45 0.007190601 ubox
11 54 0.028162373 ubox
11 55 0.022607823 ubox
12 26 0.016812940 ubox
12 28 0.127146735 ubox
12 30 0.185789752 ubox
12 35 0.168047271 ubox
12 42 0.003178192 ubox
12 44 0.007213258 ubox
12 51 0.737432284 ubox
12 54 0.022781243 ubox
13 25 0.016489726 ubox
13 27 0.116880567 ubox
13 29 0.179361088 ubox
13 33 0.012623778 ubox
13 34 0.174960978 ubox
13 43 0.006861852 ubox
13 49 0.065903521 ubox
13 50 0.952831348 ubox
13 53 0.023308286 ubox
14 24 0.016305012 ubox
14 32 0.012262215 ubox
14 33 0.176178489 ubox
14 48 0.065372442 ubox
14 49 0.953160707 ubox
14 52 0.023262886 ubox
15 32 0.174079387 ubox
15 47 0.067509894 ubox
15 48 0.906318892 ubox
16 25 0.233290883 ubox
16 34 0.003931687 ubox
16 47 0.839097086 ubox
16 48 0.286209695 ubox
17 24 0.236101183 ubox
17 29 0.046208788 ubox
17 33 0.003966521 ubox
17 43 0.004452042 ubox
17 47 0.406765537 ubox
18 23 0.233771684 ubox
18 28 0.050130368 ubox
18 30 0.132008228 ubox
18 31 0.003823082 ubox
18 38 0.008487126 ubox
18 42 0.005338746 ubox
18 44 0.538385519 ubox
18 46 0.499661659 ubox
19 27 0.093343200 ubox
19 29 0.142702551 ubox
19 37 0.008707574 ubox
19 41 0.012064077 ubox
19 43 0.750817410 ubox
20 26 0.094404706 ubox
20 28 0.144638949 ubox
20 30 0.004950202 ubox
20 31 0.003293402 ubox
20 35 0.004322365 ubox
20 36 0.007944692 ubox
20 40 0.012220914 ubox
20 42 0.758584445 ubox
20 44 0.554389444 ubox
21 25 0.076523589 ubox
21 27 0.135315575 ubox
21 29 0.004715881 ubox
21 34 0.005531165 ubox
21 41 0.731260635 ubox
21 43 0.535739998 ubox
23 29 0.004146717 ubox
23 32 0.009161741 ubox
23 41 0.364763762 ubox
23 43 0.011091204 ubox
23 56 0.004369793 ubox
24 28 0.004167207 ubox
24 31 0.009967634 ubox
24 39 0.885271513 ubox
24 40 0.351187230 ubox
24 42 0.012752839 ubox
24 55 0.004467663 ubox
25 30 0.009329884 ubox
25 38 0.896765073 ubox
25 39 0.294188313 ubox
25 42 0.003331925 ubox
25 54 0.004468363 ubox
26 37 0.900638008 ubox
26 41 0.003765472 ubox
26 53 0.004593815 ubox
27 35 0.020445046 ubox
27 36 0.898788019 ubox
27 38 0.287990464 ubox
27 40 0.011664493 ubox
28 34 0.020947727 ubox
28 37 0.316438920 ubox
28 52 0.004702988 ubox
29 35 0.036092792 ubox
29 36 0.314284819 ubox
29 38 0.038380731 ubox
29 51 0.004708632 ubox
30 34 0.036633823 ubox
30 37 0.038767280 ubox
30 50 0.004737744 ubox
31 37 0.004010669 ubox
31 47 0.003410038 ubox
31 49 0.004681418 ubox
32 36 0.004198344 ubox
32 46 0.004888930 ubox
33 45 0.005038248 ubox
33 55 0.012901506 ubox
34 44 0.004481859 ubox
34 54 0.013616286 ubox
35 43 0.003666199 ubox
35 53 0.036068716 ubox
35 76 0.006502509 ubox
36 43 0.004022386 ubox
36 52 0.036123648 ubox
36 75 0.006512202 ubox
37 42 0.004776114 ubox
37 44 0.005101150 ubox
37 51 0.036016790 ubox
38 43 0.004938712 ubox
38 73 0.020722061 ubox
38 77 0.128818359 ubox
38 78 0.017807348 ubox
39 48 0.003381177 ubox
39 49 0.007935042 ubox
39 50 0.039842234 ubox
39 53 0.060293842 ubox
39 72 0.021712416 ubox
39 73 0.008866937 ubox
39 76 0.137978094 ubox
39 77 0.018851350 ubox
40 47 0.004639276 ubox
40 48 0.007327165 ubox
40 49 0.039851878 ubox
40 52 0.060253834 ubox
40 72 0.009663169 ubox
40 75 0.138070940 ubox
40 76 0.019524835 ubox
41 46 0.005661950 ubox
41 51 0.059817863 ubox
41 70 0.022174473 ubox
41 71 0.009030250 ubox
41 74 0.136045426 ubox
42 50 0.057779866 ubox
42 52 0.113545849 ubox
42 53 0.009251126 ubox
42 69 0.022748943 ubox
42 72 0.100531281 ubox
42 73 0.085398460 ubox
42 75 0.031431339 ubox
43 51 0.120022003 ubox
43 54 0.016049086 ubox
43 68 0.022213904 ubox
43 70 0.112631004 ubox
43 71 0.084496261 ubox
43 74 0.032902786 ubox
44 50 0.128021659 ubox
44 53 0.107176018 ubox
44 69 0.124389222 ubox
44 73 0.033526610 ubox
44 76 0.006550621 ubox
45 49 0.126055094 ubox
45 52 0.107024385 ubox
45 72 0.033673904 ubox
45 75 0.006547211 ubox
47 59 0.004940807 ubox
47 65 0.003879938 ubox
47 66 0.153163885 ubox
47 67 0.008187197 ubox
47 71 0.014834732 ubox
47 81 0.003921760 ubox
48 58 0.005664717 ubox
48 64 0.004168197 ubox
48 65 0.166535635 ubox
48 66 0.006499493 ubox
48 70 0.014886396 ubox
48 80 0.004132758 ubox
48 81 0.003985264 ubox
49 55 0.006533775 ubox
49 57 0.005610393 ubox
49 64 0.174045523 ubox
49 68 0.033669447 ubox
50 54 0.006563245 ubox
50 57 0.003553701 ubox
50 64 0.025687724 ubox
50 67 0.033708723 ubox
51 62 0.192174140 ubox
51 63 0.005490923 ubox
51 69 0.008743950 ubox
52 61 0.192411053 ubox
52 68 0.008754607 ubox
53 60 0.192376490 ubox
53 64 0.035667915 ubox
53 67 0.008416384 ubox
54 63 0.036764617 ubox
54 76 0.176942444 ubox
54 77 0.004560729 ubox
55 62 0.036838046 ubox
55 75 0.177229458 ubox
55 76 0.004824396 ubox
56 61 0.036406065 ubox
56 74 0.176008348 ubox
56 79 0.016300664 ubox
57 73 0.093147398 ubox
57 78 0.018372239 ubox
58 77 0.022125951 ubox
58 78 0.079218434 ubox
59 73 0.055291914 ubox
59 77 0.105355670 ubox
59 78 0.022530431 ubox
60 72 0.041182156 ubox
60 73 0.836298891 ubox
60 76 0.102973101 ubox
60 77 0.011203259 ubox
60 78 0.003935591 ubox
61 69 0.031106599 ubox
61 72 0.886584671 ubox
61 75 0.071129565 ubox
61 76 0.005712794 ubox
62 68 0.031158881 ubox
62 71 0.890396725 ubox
62 82 0.036243377 ubox
63 67 0.028078218 ubox
63 70 0.889913074 ubox
63 74 0.012284008 ubox
63 79 0.074651030 ubox
63 81 0.053726909 ubox
64 69 0.886141955 ubox
64 73 0.011329370 ubox
64 78 0.066654981 ubox
65 77 0.047512422 ubox
65 78 0.361500549 ubox
66 73 0.035064677 ubox
66 77 0.407752413 ubox
66 78 0.016157997 ubox
67 72 0.036705343 ubox
67 73 0.007764348 ubox
67 76 0.416916798 ubox
67 77 0.013490544 ubox
68 72 0.007985601 ubox
68 75 0.415365687 ubox
68 76 0.013583678 ubox
70 77 0.009939625 ubox
71 76 0.010639278 ubox
72 82 0.007639301 ubox
73 79 0.011538389 ubox
73 81 0.008966556 ubox
74 78 0.013803757 ubox
76 82 0.056512004 ubox
77 81 0.052123409 ubox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
60 73 0.9500000 lbox
61 72 0.9500000 lbox
62 71 0.9500000 lbox
63 70 0.9500000 lbox
64 69 0.9500000 lbox
showpage
end
%%EOF
