%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUUCGGCUGGGGCAGGCACGCUGUGGCUGGCUGCUUCCCUUCCUUCCAUCCCCUUUGGACCAAACGGGAUCGGUGCUUCUGGUGAGACGCCUCCCCAUGCACAUCACUCCCAGGUGCCCUAGGGGGCACAUUUCCCACAACUCCCAGAGGGCAGGUUUCUAGAAAGUGCCACCAGUGGGGAGGCGCCACAACUUCACUGCCAUUUUGUGAGGUGCCGCUGUCUCUCCUCCAGCAAGGAAACA\
) } def
/len { sequence length } bind def

/coor [
[162.08369446 722.88562012]
[168.13003540 707.04650879]
[168.13003540 692.04650879]
[160.39273071 679.31921387]
[168.13003540 665.51904297]
[168.13003540 650.51904297]
[168.13003540 635.51904297]
[158.55313110 620.80187988]
[167.92304993 604.93750000]
[167.73149109 589.93872070]
[167.53994751 574.93994141]
[167.34838867 559.94116211]
[167.15682983 544.94238281]
[166.96527100 529.94360352]
[166.77372742 514.94482422]
[155.71594238 499.06637573]
[165.90176392 481.65322876]
[165.32722473 466.66424561]
[164.75268555 451.67526245]
[164.17814636 436.68624878]
[163.60360718 421.69726562]
[161.66545105 419.70242310]
[160.39132690 416.82843018]
[160.11679077 413.32104492]
[161.08351135 409.54177856]
[163.40226746 405.93240356]
[163.59382629 390.93362427]
[163.78536987 375.93484497]
[163.97692871 360.93606567]
[164.16848755 345.93728638]
[161.97344971 331.09875488]
[157.44764709 316.79782104]
[152.92182922 302.49685669]
[148.39602661 288.19592285]
[143.39308167 282.77972412]
[143.90499878 273.68338013]
[139.56217957 259.32580566]
[135.21937561 244.96821594]
[130.87655640 230.61064148]
[126.53374481 216.25306702]
[122.19093323 201.89549255]
[117.84812164 187.53791809]
[113.50531006 173.18034363]
[103.00388336 167.20576477]
[99.25955963 155.29804993]
[104.79515076 143.66491699]
[100.63603973 129.25305176]
[89.95864868 128.28103638]
[80.08695221 123.44662476]
[72.40293884 115.21285248]
[68.05653381 104.53054047]
[67.79640198 92.73027802]
[71.84866333 81.35703278]
[79.86240387 71.96788788]
[68.79246521 61.84580612]
[57.72252655 51.72372818]
[46.65258789 41.60165024]
[31.08468628 42.12909698]
[20.00238800 31.70617485]
[19.59548950 16.86130905]
[8.52555084 6.73923159]
[-2.60879421 -3.31195521]
[-13.80709267 -13.29184055]
[-25.00539017 -23.27172661]
[-34.22253418 -21.48931122]
[-43.09840012 -24.09548378]
[-49.68998337 -30.38851738]
[-52.61484146 -38.87452698]
[-51.33995438 -47.62069321]
[-62.14777756 -58.02218246]
[-72.95560455 -68.42366791]
[-83.76342773 -78.82515717]
[-101.53243256 -75.12226868]
[-117.81651306 -82.77619171]
[-126.15657043 -98.54170990]
[-123.37064362 -115.99882507]
[-134.44058228 -126.12090302]
[-145.51052856 -136.24298096]
[-156.58045959 -146.36505127]
[-167.37107849 -145.25251770]
[-176.80422974 -150.14962769]
[-181.88893127 -159.23249817]
[-181.16304016 -169.39660645]
[-191.97085571 -179.79809570]
[-202.77868652 -190.19958496]
[-218.08731079 -194.19418335]
[-221.89228821 -208.59457397]
[-232.70010376 -218.99606323]
[-243.50793457 -229.39755249]
[-259.54803467 -232.81037903]
[-264.35443115 -248.48936462]
[-252.98272705 -260.30529785]
[-237.13114929 -256.10296631]
[-233.10644531 -240.20538330]
[-222.29861450 -229.80389404]
[-211.49079895 -219.40240479]
[-196.95523071 -216.15179443]
[-192.37719727 -201.00741577]
[-181.56938171 -190.60592651]
[-170.76155090 -180.20443726]
[-151.69335938 -176.91737366]
[-146.45838928 -157.43499756]
[-135.38844299 -147.31291199]
[-124.31850433 -137.19084167]
[-113.24856567 -127.06876373]
[-101.87275696 -131.23233032]
[-89.73352814 -130.16688538]
[-79.13222504 -124.01295471]
[-72.10469055 -113.88159180]
[-70.03038025 -101.65412140]
[-73.36193848 -89.63298035]
[-62.55411530 -79.23149109]
[-51.74629211 -68.83000946]
[-40.93846512 -58.42852020]
[-20.54272461 -55.19205856]
[-15.02550507 -34.47002411]
[-3.82720709 -24.49013901]
[7.37109137 -14.51025391]
[14.43924713 -12.41126442]
[18.64762878 -4.33070707]
[29.71756744 5.79137087]
[44.53948212 4.87135601]
[55.91016769 14.97888660]
[56.77466583 30.53171349]
[67.84460449 40.65378952]
[78.91454315 50.77586746]
[89.98448181 60.89794540]
[104.95391083 59.94079590]
[114.64455414 48.49127579]
[124.33519745 37.04175949]
[134.02583313 25.59223938]
[143.71647644 14.14272118]
[146.86145020 5.59198713]
[153.60472107 2.60988975]
[163.44078064 -8.71494198]
[173.27684021 -20.03977394]
[183.11291504 -31.36460495]
[178.22427368 -45.85765076]
[181.22651672 -60.75339890]
[191.21519470 -72.07119751]
[205.43264771 -76.83776855]
[220.02871704 -73.86791229]
[229.86479187 -85.19274139]
[239.70085144 -96.51757812]
[249.53691101 -107.84240723]
[259.22756958 -119.29192352]
[268.77120972 -130.86425781]
[278.31481934 -142.43659973]
[283.72766113 -158.50326538]
[300.66485596 -157.74964905]
[304.62939453 -141.26574707]
[289.88717651 -132.89295959]
[280.34353638 -121.32062531]
[270.79989624 -109.74829102]
[270.35305786 -105.01443481]
[266.94268799 -100.50476837]
[260.86175537 -98.00634003]
[251.02568054 -86.68151093]
[241.18962097 -75.35668182]
[231.35354614 -64.03184509]
[236.33784485 -49.99537659]
[233.60890198 -35.25058746]
[223.80116272 -23.77562523]
[209.47251892 -18.71730995]
[194.43774414 -21.52853966]
[184.60168457 -10.20370865]
[174.76560974 1.12112331]
[164.92955017 12.44595528]
[155.16600037 23.83336258]
[145.47535706 35.28288269]
[135.78471375 46.73239899]
[126.09407043 58.18191910]
[116.40343475 69.63143921]
[128.32243347 82.67404175]
[131.87971497 99.28376770]
[126.77104950 114.76726532]
[115.04790497 125.09394836]
[119.20701599 139.50581360]
[132.76870728 151.97798157]
[127.86288452 168.83752441]
[132.20570374 183.19511414]
[136.54850769 197.55268860]
[140.89132690 211.91026306]
[145.23413086 226.26783752]
[149.57695007 240.62541199]
[153.91975403 254.98298645]
[158.26257324 269.34057617]
[162.69697571 283.67010498]
[167.22277832 297.97106934]
[171.74859619 312.27200317]
[176.27439880 326.57296753]
[182.70158386 323.49194336]
[190.84626770 322.99252319]
[199.70527649 325.72155762]
[212.69564819 333.22155762]
[225.68603516 340.72155762]
[238.67640686 348.22155762]
[251.66679382 355.72155762]
[264.65716553 363.22155762]
[277.64755249 370.72155762]
[291.31253052 363.56109619]
[306.67742920 364.94793701]
[318.83938599 374.43951416]
[323.91754150 389.00714111]
[320.29153442 404.00231934]
[309.11834717 414.64013672]
[293.96331787 417.52612305]
[279.66238403 411.73937988]
[270.77890015 399.12637329]
[270.14755249 383.71194458]
[257.15716553 376.21194458]
[244.16679382 368.71194458]
[231.17640686 361.21194458]
[218.18603516 353.71194458]
[205.19564819 346.21194458]
[192.20527649 338.71194458]
[179.16726685 346.12884521]
[178.97570801 361.12762451]
[178.78414917 376.12640381]
[178.59260559 391.12518311]
[178.40104675 406.12396240]
[178.59260559 421.12274170]
[179.16714478 436.11172485]
[179.74168396 451.10070801]
[180.31622314 466.08969116]
[180.89076233 481.07870483]
[189.26370239 487.97573853]
[192.40640259 498.12902832]
[189.51535034 508.12878418]
[181.77249146 514.75329590]
[181.96405029 529.75207520]
[182.15560913 544.75085449]
[182.34716797 559.74963379]
[182.53871155 574.74841309]
[182.73027039 589.74719238]
[182.92182922 604.74597168]
[191.58837891 614.27819824]
[191.45195007 626.75994873]
[183.13003540 635.51904297]
[183.13003540 650.51904297]
[183.13003540 665.51904297]
[190.86734009 679.31921387]
[183.13003540 692.04650879]
[183.13003540 707.04650879]
[189.17637634 722.88562012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 244]
[3 243]
[5 241]
[6 240]
[7 239]
[9 236]
[10 235]
[11 234]
[12 233]
[13 232]
[14 231]
[15 230]
[17 226]
[18 225]
[19 224]
[20 223]
[21 222]
[26 221]
[27 220]
[28 219]
[29 218]
[30 217]
[31 191]
[32 190]
[33 189]
[34 188]
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[46 178]
[47 177]
[54 127]
[55 126]
[56 125]
[57 124]
[60 121]
[61 120]
[62 118]
[63 117]
[64 116]
[69 114]
[70 113]
[71 112]
[72 111]
[76 105]
[77 104]
[78 103]
[79 102]
[83 100]
[84 99]
[85 98]
[87 96]
[88 95]
[89 94]
[128 173]
[129 172]
[130 171]
[131 170]
[132 169]
[134 168]
[135 167]
[136 166]
[137 165]
[142 160]
[143 159]
[144 158]
[145 157]
[146 154]
[147 153]
[148 152]
[194 216]
[195 215]
[196 214]
[197 213]
[198 212]
[199 211]
[200 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
