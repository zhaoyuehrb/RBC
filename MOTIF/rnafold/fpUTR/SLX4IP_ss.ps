%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAAAGUGCUUCCCUUAAGCUUCUGAAGGUUGGCUGCAGUUCCGGCUACCUGUGUAGUCCGAGUUUCCACAGCCAGGUACUACUCCGCCAGUGACCCUGGACAGUAACAAAACAUAUAAAGCCCGAGCCCAAACCCCGCCACCAUCAUAGGUCUGUAGUUACUGUGGAAUCAAUAAGCC\
) } def
/len { sequence length } bind def

/coor [
[94.66355133 311.17520142]
[94.40320587 296.17745972]
[82.03660583 290.34844971]
[73.35071564 279.70510864]
[70.08801270 266.29229736]
[72.94189453 252.71890259]
[81.41026306 241.65049744]
[93.88278198 235.28581238]
[93.88278198 220.28581238]
[86.14548492 207.55854797]
[93.88278198 193.75837708]
[93.88278198 178.75837708]
[93.88278198 163.75837708]
[93.88278198 148.75837708]
[88.11889648 143.95965576]
[80.92751312 157.12339783]
[73.73612976 170.28713989]
[73.25803375 185.27951050]
[63.94406509 197.03749084]
[49.45912933 200.93449402]
[35.50281143 195.43711853]
[27.56669998 182.70848083]
[28.77352333 167.75711060]
[38.64841843 156.46611023]
[53.30639267 153.27839661]
[64.94876099 143.82031250]
[76.59112549 134.36224365]
[70.82723999 129.56352234]
[56.07566071 132.28211975]
[41.32407761 135.00071716]
[26.57249260 137.71931458]
[18.67491341 142.36378479]
[11.54143333 140.35476685]
[-3.25511241 142.81692505]
[-18.05165863 145.27908325]
[-32.84820557 147.74124146]
[-47.64474869 150.20339966]
[-56.62906265 163.20562744]
[-72.19068909 165.96447754]
[-85.09719086 156.84320068]
[-87.69137573 141.25328064]
[-78.43415070 128.44392395]
[-62.81766891 126.01472473]
[-50.10691071 135.40686035]
[-35.31036377 132.94470215]
[-20.51381874 130.48252869]
[-5.71727324 128.02037048]
[9.07927227 125.55821228]
[23.85389328 122.96773529]
[38.60547638 120.24913788]
[53.35705948 117.53054047]
[68.10864258 114.81194305]
[70.53740692 107.71608734]
[75.39493561 93.52439117]
[77.82370758 86.42853546]
[67.83197021 75.24080658]
[57.84024048 64.05307770]
[47.84851074 52.86534882]
[37.85677719 41.67761993]
[27.76833153 30.57702065]
[17.58393097 19.56439209]
[2.02647328 18.78769493]
[-8.14507866 7.47424316]
[-7.30874014 -7.35262871]
[-17.49314117 -18.36525726]
[-27.67754173 -29.37788582]
[-43.58770752 -31.43850899]
[-51.77288055 -45.23642349]
[-45.95409775 -60.18705368]
[-30.59502983 -64.82154846]
[-17.47783852 -55.58472824]
[-16.66491318 -39.56228638]
[-6.48051262 -28.54965782]
[3.70388818 -17.53702927]
[18.55081367 -17.21392822]
[29.03612328 -6.19063854]
[28.59655952 9.37999249]
[38.78096008 20.39262009]
[45.64934540 23.17614365]
[49.04450607 31.68588638]
[59.03623962 42.87361526]
[69.02796936 54.06134796]
[79.01969910 65.24907684]
[89.01143646 76.43680573]
[96.20596313 74.31813812]
[91.96885681 59.92900848]
[106.35805511 55.69214630]
[110.59501648 70.08079529]
[117.78954315 67.96212006]
[120.12320709 53.14476776]
[122.45686340 38.32741165]
[124.79051971 23.51005554]
[116.54991913 9.74517345]
[122.30851746 -5.22873974]
[137.64881897 -9.92498016]
[150.80305481 -0.74099368]
[151.68041992 15.27805042]
[139.60787964 25.84371376]
[137.27421570 40.66106796]
[134.94056702 55.47842407]
[132.60690308 70.29578400]
[142.69534302 81.39637756]
[157.66767883 80.48570251]
[172.64001465 79.57502747]
[187.61233521 78.66435242]
[202.58467102 77.75367737]
[217.55699158 76.84300232]
[232.52932739 75.93232727]
[247.50166321 75.02165222]
[254.25213623 66.44963837]
[264.40203857 63.09151840]
[274.50839233 65.83116150]
[281.28182983 73.52581787]
[296.27673340 73.13533020]
[311.27163696 72.74485016]
[312.81765747 64.92681885]
[316.87069702 57.49726105]
[323.31036377 51.26988983]
[331.75192261 47.01271820]
[341.56542969 45.36283112]
[351.92202759 46.74927902]
[361.86383057 51.33245850]
[375.92428589 46.10713196]
[385.95788574 33.13567352]
[402.16973877 35.60712814]
[407.88244629 50.97907639]
[397.21929932 63.43817520]
[381.14959717 60.16757202]
[367.08917236 65.39289856]
[366.89392090 72.89035797]
[381.88882446 73.28084564]
[396.88375854 73.67132568]
[411.87866211 74.06181335]
[426.87359619 74.45230103]
[441.86849976 74.84301758]
[441.47753906 89.83792114]
[426.48309326 89.44721222]
[411.48818970 89.05673218]
[396.49325562 88.66624451]
[381.49835205 88.27575684]
[366.50344849 87.88527679]
[366.30819702 95.38273621]
[380.07760620 101.33277893]
[393.84704590 107.28282928]
[408.44421387 101.22498322]
[423.01742554 107.34033203]
[428.92059326 122.00075531]
[422.65151978 136.50848389]
[407.92950439 142.25633240]
[393.48886108 135.83421326]
[387.89697266 121.05225372]
[374.12756348 115.10220337]
[360.35815430 109.15215302]
[327.31494141 110.34064484]
[311.66213989 87.73976135]
[296.66720581 88.13024902]
[281.67230225 88.52073669]
[265.99655151 99.81472015]
[248.41233826 89.99398041]
[233.44000244 90.90465546]
[218.46766663 91.81533051]
[203.49534607 92.72600555]
[188.52301025 93.63668060]
[173.55068970 94.54735565]
[158.57835388 95.45803070]
[143.60601807 96.36870575]
[108.88278198 148.75837708]
[108.88278198 163.75837708]
[108.88278198 178.75837708]
[108.88278198 193.75837708]
[116.62008667 207.55854797]
[108.88278198 220.28581238]
[108.88278198 235.28581238]
[123.27758789 243.39503479]
[131.57800293 257.57183838]
[131.60414124 273.90600586]
[123.44342041 287.94711304]
[109.40094757 295.91711426]
[109.66128540 310.91485596]
[112.18603516 330.13140869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[8 173]
[9 172]
[11 170]
[12 169]
[13 168]
[14 167]
[28 52]
[29 51]
[30 50]
[31 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[55 84]
[56 83]
[57 82]
[58 81]
[59 80]
[60 78]
[61 77]
[64 74]
[65 73]
[66 72]
[89 101]
[90 100]
[91 99]
[92 98]
[102 166]
[103 165]
[104 164]
[105 163]
[106 162]
[107 161]
[108 160]
[109 159]
[113 157]
[114 156]
[115 155]
[122 129]
[123 128]
[142 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
