%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DDRGK1)
} def

/sequence { (\
AAAUAGGGGCGGGGCCUAUGAGAUCCCGGCCUCAGGGUGGACGCAGUGGUUCUGCACUGAGGCCCUCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 19 0.296899694 ubox
3 24 0.006405185 ubox
3 69 0.120182400 ubox
4 18 0.313972188 ubox
4 20 0.031592725 ubox
4 23 0.006656325 ubox
4 68 0.118556282 ubox
5 17 0.324128219 ubox
5 19 0.046220648 ubox
5 32 0.016011678 ubox
5 66 0.110975993 ubox
6 16 0.323983463 ubox
6 17 0.167232012 ubox
6 26 0.006643469 ubox
6 27 0.037690658 ubox
6 31 0.014931880 ubox
6 32 0.207230580 ubox
6 33 0.462922284 ubox
6 65 0.118790209 ubox
6 66 0.137546384 ubox
6 67 0.442717470 ubox
6 70 0.014854775 ubox
7 15 0.322803049 ubox
7 16 0.173793007 ubox
7 17 0.472252760 ubox
7 25 0.006515137 ubox
7 26 0.037684301 ubox
7 27 0.013975467 ubox
7 30 0.012110754 ubox
7 31 0.231177823 ubox
7 32 0.459396469 ubox
7 33 0.015424753 ubox
7 64 0.117446851 ubox
7 65 0.148374331 ubox
7 66 0.443514860 ubox
7 67 0.091036539 ubox
7 69 0.007855627 ubox
7 70 0.021342154 ubox
8 15 0.174145762 ubox
8 16 0.488129142 ubox
8 17 0.004204557 ubox
8 25 0.036965595 ubox
8 26 0.013961314 ubox
8 27 0.004473624 ubox
8 30 0.231471225 ubox
8 31 0.460191657 ubox
8 63 0.080044227 ubox
8 64 0.146982180 ubox
8 65 0.444323009 ubox
8 66 0.089100652 ubox
8 67 0.015526820 ubox
8 69 0.017346530 ubox
8 70 0.286094507 ubox
9 15 0.488794256 ubox
9 16 0.004134951 ubox
9 24 0.029522804 ubox
9 25 0.013834268 ubox
9 26 0.004326826 ubox
9 30 0.460190718 ubox
9 55 0.005995805 ubox
9 63 0.090639231 ubox
9 64 0.419751368 ubox
9 65 0.088261376 ubox
9 66 0.011449516 ubox
9 69 0.302750999 ubox
10 14 0.485781535 ubox
10 20 0.018801534 ubox
10 28 0.563764158 ubox
10 29 0.400635919 ubox
10 54 0.006021849 ubox
10 62 0.033814027 ubox
10 68 0.304343886 ubox
11 17 0.003476953 ubox
11 19 0.017776741 ubox
11 25 0.004133918 ubox
11 26 0.009783290 ubox
11 27 0.651186505 ubox
11 33 0.017565408 ubox
11 53 0.006170737 ubox
11 66 0.047980653 ubox
11 67 0.294135948 ubox
12 16 0.003676185 ubox
12 24 0.004342745 ubox
12 25 0.010025809 ubox
12 26 0.651876339 ubox
12 27 0.339738906 ubox
12 32 0.018498526 ubox
12 52 0.006178094 ubox
12 65 0.272602181 ubox
12 66 0.095134075 ubox
13 24 0.009909766 ubox
13 25 0.651812354 ubox
13 26 0.339887178 ubox
13 27 0.010764553 ubox
13 31 0.019334118 ubox
13 51 0.006161979 ubox
13 64 0.273609298 ubox
13 65 0.091638393 ubox
13 66 0.004100656 ubox
14 24 0.598834205 ubox
14 25 0.338219235 ubox
14 26 0.011506124 ubox
14 30 0.019817431 ubox
14 38 0.003496078 ubox
14 50 0.006176428 ubox
14 63 0.274611243 ubox
14 64 0.061552189 ubox
14 65 0.004964064 ubox
15 29 0.020119304 ubox
15 37 0.003639381 ubox
15 49 0.006178579 ubox
15 62 0.275601948 ubox
16 22 0.656765985 ubox
16 28 0.020454274 ubox
16 36 0.003675018 ubox
16 48 0.006175622 ubox
16 61 0.275543103 ubox
17 21 0.592456890 ubox
17 35 0.003314015 ubox
17 59 0.007343100 ubox
17 60 0.267049462 ubox
18 24 0.037891363 ubox
18 58 0.010994609 ubox
18 69 0.454993965 ubox
19 23 0.035172086 ubox
19 28 0.012026994 ubox
19 34 0.025623621 ubox
19 43 0.026883600 ubox
19 45 0.006388049 ubox
19 56 0.016525769 ubox
19 59 0.012968184 ubox
19 68 0.485627140 ubox
20 27 0.034534992 ubox
20 33 0.028551846 ubox
20 42 0.038375666 ubox
20 44 0.007147989 ubox
20 55 0.016865556 ubox
20 58 0.010951440 ubox
20 67 0.566036498 ubox
20 70 0.032769778 ubox
21 32 0.028626341 ubox
21 53 0.018412809 ubox
21 58 0.030768109 ubox
21 66 0.566141238 ubox
21 69 0.032776202 ubox
22 31 0.028627408 ubox
22 52 0.018489385 ubox
22 57 0.031994659 ubox
22 65 0.565735018 ubox
22 67 0.039313545 ubox
22 70 0.171689779 ubox
23 38 0.021040663 ubox
23 51 0.017863073 ubox
23 66 0.038371946 ubox
23 69 0.173173954 ubox
24 37 0.017410835 ubox
24 40 0.006363077 ubox
24 41 0.111170934 ubox
24 49 0.003978712 ubox
24 68 0.168101580 ubox
25 36 0.017617974 ubox
25 37 0.052926376 ubox
25 39 0.008976698 ubox
25 40 0.118155617 ubox
25 48 0.004055623 ubox
25 49 0.016284485 ubox
26 35 0.017544516 ubox
26 36 0.053284332 ubox
26 37 0.010742895 ubox
26 39 0.114600759 ubox
26 40 0.238292858 ubox
26 48 0.016122845 ubox
26 49 0.006590775 ubox
27 35 0.053311591 ubox
27 36 0.011018621 ubox
27 39 0.240219620 ubox
27 43 0.016044875 ubox
27 48 0.006658167 ubox
27 68 0.011102993 ubox
28 38 0.223148463 ubox
28 42 0.016421822 ubox
28 47 0.005608508 ubox
28 64 0.659370112 ubox
28 65 0.020780994 ubox
28 67 0.005113283 ubox
29 38 0.141333807 ubox
29 44 0.014930191 ubox
29 63 0.801553865 ubox
29 64 0.015309273 ubox
30 36 0.205274497 ubox
30 37 0.171081788 ubox
30 40 0.014313789 ubox
30 43 0.014938027 ubox
30 62 0.810544559 ubox
31 35 0.203803826 ubox
31 36 0.170988337 ubox
31 39 0.014562085 ubox
31 61 0.811204868 ubox
32 41 0.014530769 ubox
32 60 0.811124297 ubox
33 39 0.003488458 ubox
33 40 0.014617571 ubox
33 59 0.811256447 ubox
34 58 0.810654452 ubox
34 66 0.449549445 ubox
35 57 0.803731740 ubox
35 58 0.021170348 ubox
35 65 0.480551689 ubox
35 66 0.006656650 ubox
35 67 0.181598361 ubox
36 53 0.003904468 ubox
36 57 0.041768193 ubox
36 58 0.008796343 ubox
36 64 0.480696027 ubox
36 65 0.007077047 ubox
36 66 0.182584617 ubox
36 67 0.024824941 ubox
37 52 0.003469110 ubox
37 55 0.771552940 ubox
37 57 0.011836593 ubox
37 63 0.480689037 ubox
37 64 0.005916237 ubox
37 65 0.182946413 ubox
37 66 0.022592834 ubox
38 54 0.770473156 ubox
38 56 0.013569690 ubox
38 59 0.005873614 ubox
38 62 0.479095746 ubox
39 44 0.003419271 ubox
39 52 0.465109549 ubox
39 53 0.659860308 ubox
39 55 0.009240552 ubox
39 58 0.031232185 ubox
39 64 0.184705100 ubox
39 65 0.006254502 ubox
40 51 0.469071294 ubox
40 52 0.660888018 ubox
40 57 0.031514849 ubox
40 63 0.184707500 ubox
40 64 0.006206285 ubox
40 70 0.018339019 ubox
41 47 0.006638173 ubox
41 50 0.615706054 ubox
41 51 0.522127962 ubox
41 69 0.018606919 ubox
42 46 0.010017967 ubox
42 48 0.052481249 ubox
42 49 0.733677959 ubox
42 59 0.014018269 ubox
42 68 0.018646763 ubox
43 47 0.034583560 ubox
43 50 0.316948285 ubox
43 55 0.112781450 ubox
43 58 0.004664637 ubox
43 67 0.018625637 ubox
44 49 0.320308918 ubox
44 54 0.113101121 ubox
44 59 0.572531290 ubox
45 53 0.113068121 ubox
45 58 0.573259890 ubox
45 66 0.018241722 ubox
46 50 0.003544093 ubox
46 52 0.112903615 ubox
46 57 0.573491161 ubox
46 65 0.018306383 ubox
47 56 0.573341868 ubox
48 55 0.572595651 ubox
48 64 0.018334011 ubox
49 55 0.024706248 ubox
49 63 0.018331748 ubox
50 54 0.032118386 ubox
50 61 0.008754892 ubox
50 62 0.013417391 ubox
51 60 0.012427189 ubox
51 61 0.004820062 ubox
51 62 0.008772552 ubox
52 59 0.013112567 ubox
52 61 0.012467100 ubox
53 60 0.012458013 ubox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
34 66 0.9500000 lbox
35 65 0.9500000 lbox
36 64 0.9500000 lbox
37 63 0.9500000 lbox
38 62 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
showpage
end
%%EOF
