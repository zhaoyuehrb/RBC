%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGGAAACAGCUGAUUGAUCAGCCUGGCUCAGGCUUGGGGCGGGGAUUGGCUGAUUGGCAGCAACGCCACGGGACAGCCAAGCUAGAAGCCUGAGGAGCCGGAGAGGGUGCUGGCUGCCGCGCGGCCGAGUGUGUUUUAUGGACCAUGUGCUGCUAUGUAUGCCUGAAGAAGUACUUGAAAUGCAAAUUUGGGGAGACUUUGCCAUAUAA\
) } def
/len { sequence length } bind def

/coor [
[197.92999268 302.77664185]
[198.76028442 317.75363159]
[194.80709839 332.22332764]
[186.47695923 344.69766235]
[174.62655640 353.89373779]
[160.47459412 358.86584473]
[145.47645569 359.10266113]
[131.17457581 354.57980347]
[119.03976440 345.76242065]
[110.31996918 333.55728149]
[105.91194153 319.21960449]
[106.26888275 304.22448730]
[98.48333740 317.04577637]
[90.69779968 329.86706543]
[82.91226196 342.68835449]
[75.12672424 355.50964355]
[75.30509186 371.90783691]
[61.05712509 380.02740479]
[47.03991318 371.51565552]
[47.67316055 355.12872314]
[62.30543518 347.72409058]
[70.09097290 334.90283203]
[77.87651825 322.08154297]
[85.66205597 309.26025391]
[93.44759369 296.43896484]
[93.37916565 286.72302246]
[101.31577301 279.17944336]
[105.88786316 264.89321899]
[110.45994568 250.60699463]
[115.03203583 236.32077026]
[115.91648102 221.34687805]
[113.05796051 206.62176514]
[110.19944763 191.89665222]
[107.34093475 177.17153931]
[104.48241425 162.44642639]
[101.62390137 147.72131348]
[80.13143921 143.41891479]
[62.82571411 129.96720886]
[53.35339737 110.20078278]
[53.71051788 88.28482819]
[39.92755890 82.36621094]
[26.14459801 76.44759369]
[12.36163807 70.52897644]
[-4.95411301 78.21819305]
[-22.09680367 70.93234253]
[-28.35919762 53.72948074]
[-42.31072617 48.21995544]
[-57.98821640 50.34761047]
[-66.98395538 38.47638321]
[-80.93547821 32.96686172]
[-94.88700867 27.45733643]
[-108.83853912 21.94781113]
[-122.79006958 16.43828773]
[-136.74159241 10.92876434]
[-150.69313049 5.41924000]
[-168.67767334 14.37982655]
[-187.16764832 7.33158779]
[-194.39721680 -10.75977612]
[-208.57879639 -15.64678478]
[-222.76036072 -20.53379250]
[-236.94194031 -25.42080116]
[-251.03684998 -18.27172661]
[-266.03244019 -23.26250839]
[-273.03210449 -37.43220901]
[-267.88305664 -52.37419128]
[-253.64013672 -59.22364426]
[-238.75341797 -53.91691208]
[-232.05493164 -39.60237885]
[-217.87335205 -34.71537018]
[-203.69178772 -29.82836151]
[-189.51020813 -24.94135284]
[-181.83763123 -31.75669670]
[-171.95133972 -34.79679871]
[-161.61489868 -33.44924164]
[-152.70143127 -27.89065742]
[-146.85414124 -19.06681442]
[-145.18359375 -8.53228855]
[-131.23207092 -3.02276444]
[-117.28054047 2.48675942]
[-103.32901001 7.99628353]
[-89.37748718 13.50580788]
[-75.42595673 19.01533127]
[-61.47443008 24.52485466]
[-46.79484558 22.00312424]
[-36.80120087 34.26842880]
[-22.84967422 39.77795029]
[-13.61746502 33.07781219]
[-2.17901087 31.65087128]
[8.63897896 35.96631622]
[16.10677910 45.05973434]
[18.28025436 56.74602127]
[32.06321335 62.66463852]
[45.84617615 68.58325195]
[59.62913513 74.50186920]
[69.25253296 63.46844482]
[81.76659393 55.86946487]
[95.99483490 52.41933060]
[97.10002136 37.46010208]
[98.09487152 22.49312782]
[98.97930908 7.51922560]
[99.86375427 -7.45467710]
[100.74819946 -22.42857933]
[101.63263702 -37.40248108]
[102.51708221 -52.37638474]
[90.43814087 -62.11695862]
[86.42394257 -77.10581970]
[92.01804352 -91.57943726]
[105.06938171 -99.97241974]
[120.55945587 -99.05748749]
[132.53202820 -89.18645477]
[136.38337708 -74.15493011]
[130.63259888 -59.74284744]
[117.49098206 -51.49194336]
[116.60654449 -36.51803970]
[115.72209930 -21.54413795]
[114.83765411 -6.57023478]
[113.95321655 8.40366745]
[113.06877136 23.37757111]
[115.81195068 30.23903847]
[112.05925751 38.56529236]
[110.95406342 53.52452469]
[119.95457458 56.62055206]
[128.16218567 61.44026947]
[135.25077820 67.79216766]
[147.77633667 59.53926468]
[160.30189514 51.28636551]
[172.82745361 43.03346252]
[185.35301208 34.78056335]
[186.52888489 21.36388397]
[195.09191895 11.22185040]
[207.74514771 7.91209888]
[219.81289673 12.42609310]
[232.45881653 4.35882616]
[245.10473633 -3.70844126]
[250.65545654 -10.96094131]
[257.99719238 -11.79983711]
[270.76071167 -19.67971611]
[283.52423096 -27.55959511]
[296.28775024 -35.43947220]
[306.58898926 -48.90501022]
[322.37997437 -42.73397064]
[320.82147217 -25.85180664]
[304.16763306 -22.67595100]
[291.40411377 -14.79607201]
[278.64059448 -6.91619301]
[265.87707520 0.96368539]
[253.17199707 8.93747520]
[240.52607727 17.00474167]
[227.88015747 25.07201004]
[224.95462036 41.63410950]
[210.67422485 51.14247894]
[193.60591125 47.30612183]
[181.08035278 55.55902100]
[168.55479431 63.81192398]
[156.02923584 72.06482697]
[143.50367737 80.31772614]
[146.60746765 89.62190247]
[147.74470520 99.36397552]
[146.86738586 109.13288879]
[144.01252747 118.51644135]
[139.30059814 127.11871338]
[132.93040466 134.57672119]
[125.17073822 140.57579041]
[116.34901428 144.86280823]
[119.20752716 159.58792114]
[122.06604004 174.31303406]
[124.92456055 189.03813171]
[127.78307343 203.76324463]
[130.64158630 218.48835754]
[142.62484741 218.34170532]
[154.72831726 227.08419800]
[165.13757324 237.88453674]
[175.54682922 248.68486023]
[185.95610046 259.48519897]
[196.36535645 270.28555298]
[214.17514038 274.96734619]
[217.73461914 292.15222168]
[228.30204773 302.79785156]
[238.86946106 313.44351196]
[254.08283997 317.78671265]
[257.55789185 332.27026367]
[268.12533569 342.91592407]
[278.69274902 353.56155396]
[289.26016235 364.20718384]
[305.21810913 367.98550415]
[309.66513062 383.77020264]
[298.02651978 395.32330322]
[282.27505493 390.76000977]
[278.61453247 374.77462769]
[268.04711914 364.12896729]
[257.47967529 353.48333740]
[246.91226196 342.83770752]
[232.45474243 339.25592041]
[228.22383118 324.01092529]
[217.65640259 313.36529541]
[207.08898926 302.71963501]
[194.99868774 302.36178589]
[186.10772705 293.58056641]
[185.56501770 280.69479370]
[175.15576172 269.89447021]
[164.74649048 259.09411621]
[154.33723450 248.29379272]
[143.92797852 237.49345398]
[129.31825256 240.89286804]
[124.74617004 255.17907715]
[120.17407990 269.46530151]
[115.60198975 283.75152588]
[126.68780518 273.64682007]
[140.40209961 267.57080078]
[155.33450317 266.14831543]
[169.94934082 269.52563477]
[182.74362183 277.35546875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[27 207]
[28 206]
[29 205]
[30 204]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[40 94]
[41 93]
[42 92]
[43 91]
[46 86]
[47 85]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 71]
[59 70]
[60 69]
[61 68]
[97 121]
[98 120]
[99 118]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[132 149]
[133 148]
[134 147]
[136 146]
[137 145]
[138 144]
[139 143]
[171 203]
[172 202]
[173 201]
[174 200]
[175 199]
[177 196]
[178 195]
[179 194]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
