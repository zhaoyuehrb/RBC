%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACCUCUGACGCCGCUCUUCGCGCUCCGCUGGUGAAUGGAGUCGCGUUCUCUGUUUUGCUGUUGCUGCUGCCUUUGUGACGGGAUCGCUUUCUCCCAUCGAACCUUCUAGUUGCUUAUUGCAGCUUUGUCUCCUCAGCACUCUGCUGUCACUCAAGGAAGUAUCAUCAAGAACAAGGAGGGC\
) } def
/len { sequence length } bind def

/coor [
[-186.76316833 558.46459961]
[-201.82157898 561.81835938]
[-216.29479980 556.47705078]
[-225.56449890 544.14514160]
[-226.67271423 528.75762939]
[-219.26583862 515.22467041]
[-205.70738220 507.86450195]
[-204.70014954 492.89834595]
[-203.69290161 477.93222046]
[-202.68566895 462.96606445]
[-201.67843628 447.99993896]
[-214.29722595 439.89031982]
[-227.49249268 447.02368164]
[-240.68775940 454.15707397]
[-253.88301086 461.29043579]
[-267.07827759 468.42382812]
[-275.53854370 481.79299927]
[-290.41406250 481.03918457]
[-303.60931396 488.17254639]
[-316.80456543 495.30593872]
[-329.99981689 502.43930054]
[-343.19509888 509.57269287]
[-345.36383057 524.82403564]
[-355.97317505 535.74621582]
[-370.80416870 538.29681396]
[-384.13363647 531.70410156]
[-397.32891846 538.83752441]
[-410.52416992 545.97088623]
[-423.71942139 553.10424805]
[-429.66336060 568.00555420]
[-445.06072998 572.51116943]
[-458.10003662 563.16467285]
[-458.77859497 547.13598633]
[-446.57589722 536.72088623]
[-430.85281372 539.90899658]
[-417.65753174 532.77563477]
[-404.46228027 525.64227295]
[-391.26702881 518.50885010]
[-389.48260498 503.74560547]
[-379.22583008 492.73367310]
[-364.27676392 489.83901978]
[-350.32846069 496.37744141]
[-337.13320923 489.24404907]
[-323.93795776 482.11068726]
[-310.74267578 474.97729492]
[-297.54742432 467.84390259]
[-290.03097534 454.98498535]
[-274.21166992 455.22857666]
[-261.01638794 448.09518433]
[-247.82113647 440.96182251]
[-234.62586975 433.82843018]
[-221.43060303 426.69503784]
[-219.50244141 409.50851440]
[-209.01788330 396.97064209]
[-194.26208496 392.58401489]
[-180.45066833 396.81445312]
[-169.79962158 386.25247192]
[-159.14855957 375.69052124]
[-148.49749756 365.12857056]
[-137.84645081 354.56658936]
[-127.19539642 344.00463867]
[-126.28139496 339.29769897]
[-122.38779449 335.12200928]
[-116.00463867 333.27429199]
[-105.00478363 323.07611084]
[-100.93199921 308.74914551]
[-85.55157471 305.04064941]
[-74.55171204 294.84243774]
[-70.47893524 280.51550293]
[-55.09850693 276.80697632]
[-44.09864807 266.60879517]
[-33.09878922 256.41061401]
[-22.09893227 246.21240234]
[-18.02615166 231.88545227]
[-2.64572382 228.17694092]
[8.35413456 217.97875977]
[19.35399246 207.78056335]
[30.35385132 197.58236694]
[34.61046982 180.56658936]
[52.58294678 176.60220337]
[63.40993118 166.22067261]
[74.23691559 155.83912659]
[85.06390381 145.45758057]
[95.89088440 135.07603455]
[64.63291931 73.12673187]
[64.12901306 58.13519287]
[63.62511063 43.14366150]
[63.12120819 28.15212822]
[50.19335175 19.57015800]
[44.81041718 5.01668406]
[49.04224777 -9.91218853]
[61.26161957 -19.47600174]
[76.76993561 -19.99727631]
[89.60393524 -11.27557087]
[94.82867432 3.33544183]
[90.43514252 18.21752930]
[78.11273956 27.64822388]
[78.61664581 42.63975525]
[79.12055206 57.63129044]
[79.62445068 72.62282562]
[86.39339447 75.85260773]
[92.85295105 62.31473160]
[99.31251526 48.77685547]
[105.77207947 35.23897934]
[112.23163605 21.70110512]
[118.69142151 8.16333675]
[132.22908020 14.62334824]
[125.76951599 28.16066742]
[119.30995178 41.69854355]
[112.85038757 55.23641586]
[106.39083099 68.77429199]
[99.93126678 82.31216431]
[106.70020294 85.54194641]
[118.67046356 76.50242615]
[130.64071655 67.46290588]
[142.61097717 58.42338943]
[154.58123779 49.38386917]
[166.55149841 40.34434891]
[170.18310547 24.71773911]
[184.72618103 17.94435883]
[199.02450562 25.22016525]
[202.10963440 40.96378326]
[191.61492920 53.09805679]
[175.59101868 52.31460953]
[163.62075806 61.35412979]
[151.65049744 70.39364624]
[139.68023682 79.43316650]
[127.70998383 88.47268677]
[115.73972321 97.51220703]
[117.54870605 104.79077911]
[132.10585022 101.17281342]
[146.66297913 97.55485535]
[161.22012329 93.93689728]
[175.77732849 90.31916046]
[179.39483643 104.87641144]
[164.83808899 108.49404144]
[150.28094482 112.11199951]
[135.72380066 115.72995758]
[121.16666412 119.34791565]
[122.97564697 126.62648773]
[137.78500366 129.01033020]
[152.59437561 131.39418030]
[167.40373230 133.77801514]
[184.00247192 130.32572937]
[191.91484070 145.32008362]
[179.69682312 157.07408142]
[165.01989746 148.58738708]
[150.21052551 146.20353699]
[135.40116882 143.81970215]
[120.59179688 141.43585205]
[106.27243042 145.90303040]
[95.44544220 156.28456116]
[84.61846161 166.66610718]
[73.79147339 177.04765320]
[62.96448898 187.42918396]
[61.90997314 200.29788208]
[52.66086578 208.72236633]
[40.55204391 208.58222961]
[29.55218506 218.78042603]
[18.55232620 228.97860718]
[7.55246830 239.17680359]
[2.69290376 254.23320007]
[-11.90074062 257.21228027]
[-22.90059853 267.41046143]
[-33.90045547 277.60864258]
[-44.90031433 287.80685425]
[-49.75988007 302.86325073]
[-64.35352325 305.84231567]
[-75.35337830 316.04049683]
[-80.21294403 331.09689331]
[-94.80658722 334.07595825]
[-105.80644989 344.27416992]
[-116.63343048 354.65570068]
[-127.28448486 365.21765137]
[-137.93554688 375.77963257]
[-148.58659363 386.34158325]
[-159.23765564 396.90353394]
[-169.88871765 407.46551514]
[-166.97317505 430.99829102]
[-186.71228027 449.00717163]
[-187.71952820 463.97329712]
[-188.72676086 478.93945312]
[-189.73400879 493.90560913]
[-190.74124146 508.87173462]
[-178.29127502 517.98229980]
[-172.76455688 532.38574219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 184]
[8 183]
[9 182]
[10 181]
[11 180]
[12 52]
[13 51]
[14 50]
[15 49]
[16 48]
[18 46]
[19 45]
[20 44]
[21 43]
[22 42]
[26 38]
[27 37]
[28 36]
[29 35]
[56 178]
[57 177]
[58 176]
[59 175]
[60 174]
[61 173]
[64 172]
[65 171]
[67 169]
[68 168]
[70 166]
[71 165]
[72 164]
[73 163]
[75 161]
[76 160]
[77 159]
[78 158]
[80 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 100]
[86 99]
[87 98]
[88 97]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[140 150]
[141 149]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
