%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRPM4)
} def

/sequence { (\
AGGCUGGAAAGUGGAGGAUCCGGUUUGCUCUGGGCGGGUCUGGAAGCAGAGCCGGCGGAGGGAGCGCCGGGGCCCUGGGCUGCAGGAGGUUGCGGCGGCCGCGGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.015141953 ubox
1 26 0.464292536 ubox
2 20 0.009911599 ubox
2 21 0.031103898 ubox
2 24 0.023229334 ubox
2 25 0.578894078 ubox
2 26 0.015772348 ubox
2 29 0.003526259 ubox
2 100 0.005649373 ubox
3 12 0.349373200 ubox
3 19 0.009264300 ubox
3 20 0.030804647 ubox
3 24 0.733738075 ubox
3 25 0.015369840 ubox
3 28 0.005087072 ubox
3 56 0.006530082 ubox
3 65 0.056311488 ubox
3 99 0.005656060 ubox
3 105 0.006456892 ubox
3 108 0.406961442 ubox
4 11 0.373757071 ubox
4 14 0.020798309 ubox
4 16 0.025243818 ubox
4 17 0.019155059 ubox
4 23 0.747363623 ubox
4 27 0.005703082 ubox
4 55 0.006535762 ubox
4 62 0.003633195 ubox
4 64 0.056238709 ubox
4 98 0.005652014 ubox
4 104 0.006270890 ubox
4 107 0.411520116 ubox
5 10 0.370460552 ubox
5 13 0.020704309 ubox
5 15 0.025227089 ubox
5 16 0.018980264 ubox
5 22 0.769344520 ubox
5 54 0.006528259 ubox
5 61 0.003499086 ubox
5 63 0.053931117 ubox
5 97 0.005337730 ubox
5 103 0.006017121 ubox
5 106 0.391936238 ubox
6 12 0.023276137 ubox
6 20 0.003224016 ubox
6 21 0.793822632 ubox
6 26 0.003892482 ubox
6 53 0.006528497 ubox
6 102 0.005552990 ubox
6 105 0.198071702 ubox
7 20 0.793772361 ubox
7 25 0.004146016 ubox
7 26 0.011961953 ubox
7 28 0.003235254 ubox
7 52 0.006522285 ubox
8 19 0.752424533 ubox
8 24 0.003723446 ubox
8 25 0.011347144 ubox
8 26 0.122586817 ubox
9 24 0.009591621 ubox
9 25 0.132790704 ubox
9 26 0.004987493 ubox
10 24 0.137820160 ubox
10 25 0.004606601 ubox
11 19 0.084134392 ubox
11 47 0.005367056 ubox
11 102 0.053411470 ubox
11 108 0.017089018 ubox
12 18 0.150829208 ubox
12 22 0.381474219 ubox
12 46 0.005358656 ubox
12 48 0.003404889 ubox
12 101 0.053408824 ubox
12 106 0.003243902 ubox
12 107 0.015458921 ubox
13 20 0.013832482 ubox
13 21 0.591092033 ubox
13 47 0.003424041 ubox
13 76 0.004006449 ubox
13 100 0.053346368 ubox
14 19 0.008718490 ubox
14 20 0.591254965 ubox
14 75 0.004334731 ubox
14 99 0.053143799 ubox
15 19 0.514403138 ubox
15 76 0.046414580 ubox
16 41 0.006408938 ubox
16 74 0.023670218 ubox
16 75 0.047436235 ubox
17 40 0.006452113 ubox
17 73 0.024132259 ubox
17 74 0.047159464 ubox
18 39 0.006453847 ubox
19 38 0.006448906 ubox
19 71 0.048755523 ubox
19 72 0.006706087 ubox
20 37 0.006452891 ubox
20 70 0.053153207 ubox
20 71 0.005877366 ubox
20 98 0.004090859 ubox
21 36 0.006452633 ubox
21 66 0.004999700 ubox
21 69 0.053314897 ubox
21 70 0.004233557 ubox
21 97 0.004088362 ubox
22 35 0.006419280 ubox
22 65 0.026760980 ubox
22 68 0.053437438 ubox
23 65 0.644839242 ubox
23 67 0.052503114 ubox
24 33 0.006221844 ubox
24 63 0.017089076 ubox
24 64 0.648498739 ubox
24 66 0.048576927 ubox
25 32 0.005910656 ubox
25 61 0.003378247 ubox
25 62 0.021082176 ubox
25 63 0.763417038 ubox
25 64 0.009698200 ubox
26 61 0.019949492 ubox
26 62 0.798174304 ubox
26 63 0.023243157 ubox
26 66 0.025225612 ubox
26 106 0.003564475 ubox
27 65 0.522058093 ubox
27 108 0.003719621 ubox
28 60 0.850277342 ubox
28 61 0.020000840 ubox
28 62 0.049211203 ubox
28 64 0.522561151 ubox
28 107 0.003364528 ubox
29 59 0.851001730 ubox
29 60 0.008803718 ubox
29 61 0.049573457 ubox
29 62 0.017001094 ubox
29 63 0.521977110 ubox
30 58 0.851292209 ubox
30 60 0.050643822 ubox
30 61 0.038475440 ubox
30 62 0.520693633 ubox
31 57 0.849950367 ubox
31 59 0.050737904 ubox
31 60 0.050868892 ubox
31 61 0.515972338 ubox
32 56 0.845306021 ubox
33 53 0.008056316 ubox
34 52 0.008094970 ubox
34 56 0.495991539 ubox
35 51 0.008091240 ubox
35 54 0.911464717 ubox
35 55 0.405517762 ubox
35 57 0.016871908 ubox
36 53 0.957514956 ubox
36 56 0.012602715 ubox
37 52 0.957682330 ubox
37 53 0.286715841 ubox
38 52 0.286584829 ubox
39 50 0.986244123 ubox
39 51 0.149846623 ubox
40 49 0.999856730 ubox
40 51 0.010434032 ubox
41 48 0.999578894 ubox
41 50 0.010452111 ubox
42 47 0.998778133 ubox
61 100 0.003275735 ubox
62 99 0.003276092 ubox
64 108 0.473149633 ubox
65 97 0.004050265 ubox
65 107 0.477271850 ubox
66 96 0.008732295 ubox
66 105 0.978459187 ubox
67 95 0.008868725 ubox
67 104 0.998334481 ubox
68 94 0.008869806 ubox
68 103 0.998495221 ubox
69 93 0.008868340 ubox
69 102 0.998280209 ubox
70 100 0.007361099 ubox
71 91 0.008778502 ubox
71 99 0.005274886 ubox
71 100 0.998386213 ubox
72 90 0.008860377 ubox
72 99 0.998522889 ubox
73 89 0.008841517 ubox
73 98 0.996536007 ubox
74 86 0.005829609 ubox
74 88 0.006714752 ubox
74 97 0.993890487 ubox
74 98 0.062978478 ubox
75 85 0.008221259 ubox
75 86 0.003387392 ubox
75 95 0.071439363 ubox
75 97 0.088970167 ubox
75 98 0.005794815 ubox
76 84 0.008438846 ubox
76 94 0.071208428 ubox
76 97 0.008378612 ubox
77 83 0.008494800 ubox
77 93 0.069424868 ubox
77 96 0.013201190 ubox
77 100 0.003242311 ubox
78 90 0.008191360 ubox
78 91 0.050883934 ubox
78 99 0.003238129 ubox
79 90 0.068180200 ubox
79 93 0.010084674 ubox
79 96 0.996726430 ubox
80 88 0.016099226 ubox
80 89 0.068352263 ubox
80 92 0.010292298 ubox
80 95 0.997351716 ubox
81 87 0.016508527 ubox
81 88 0.067140975 ubox
81 94 0.996616062 ubox
82 90 0.011881169 ubox
82 93 0.997366268 ubox
83 89 0.012158447 ubox
83 92 0.997383360 ubox
84 91 0.985088604 ubox
85 90 0.900958166 ubox
85 91 0.010740338 ubox
86 90 0.015232562 ubox
101 108 0.004891253 ubox
102 107 0.004925246 ubox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
64 108 0.9500000 lbox
65 107 0.9500000 lbox
66 105 0.9500000 lbox
67 104 0.9500000 lbox
68 103 0.9500000 lbox
69 102 0.9500000 lbox
71 100 0.9500000 lbox
72 99 0.9500000 lbox
73 98 0.9500000 lbox
74 97 0.9500000 lbox
79 96 0.9500000 lbox
80 95 0.9500000 lbox
81 94 0.9500000 lbox
82 93 0.9500000 lbox
83 92 0.9500000 lbox
84 91 0.9500000 lbox
85 90 0.9500000 lbox
showpage
end
%%EOF
