%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LAMTOR4)
} def

/sequence { (\
GCAAGCACGUGACCGGGGCCUGAAGCCGGAAGCUACCUAUCUGGUAGGGAGCUCCCCCAGCACCGAAGACUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.016445988 ubox
1 61 0.008740469 ubox
1 73 0.257852407 ubox
2 9 0.017050763 ubox
2 11 0.011962346 ubox
2 22 0.006630209 ubox
2 60 0.008736028 ubox
2 72 0.257961620 ubox
3 10 0.010996113 ubox
3 21 0.006608394 ubox
3 71 0.240955372 ubox
4 38 0.003960054 ubox
4 71 0.072974597 ubox
5 19 0.009535178 ubox
5 37 0.004092145 ubox
5 61 0.009635308 ubox
5 70 0.102206486 ubox
5 73 0.961007185 ubox
6 18 0.009614930 ubox
6 60 0.009643704 ubox
6 72 0.962175858 ubox
7 71 0.955775780 ubox
8 15 0.026575587 ubox
8 65 0.162893130 ubox
8 72 0.012181187 ubox
8 74 0.022970426 ubox
9 14 0.026140440 ubox
9 33 0.031491597 ubox
9 61 0.010457745 ubox
9 63 0.199812155 ubox
9 64 0.118122113 ubox
9 70 0.962223154 ubox
9 71 0.005246084 ubox
9 73 0.024012117 ubox
10 32 0.032176749 ubox
10 59 0.009402065 ubox
10 60 0.010504692 ubox
10 62 0.230156380 ubox
10 65 0.010434889 ubox
10 69 0.957690390 ubox
10 72 0.023674604 ubox
11 58 0.009967372 ubox
11 61 0.230260059 ubox
11 64 0.010543715 ubox
11 71 0.016566488 ubox
13 29 0.054223246 ubox
13 44 0.003182514 ubox
14 28 0.054397223 ubox
14 43 0.003183649 ubox
14 65 0.947455130 ubox
14 72 0.003209583 ubox
14 74 0.009226815 ubox
15 27 0.053588137 ubox
15 42 0.003168112 ubox
15 55 0.058149766 ubox
15 56 0.061470590 ubox
15 57 0.199493565 ubox
15 58 0.080059355 ubox
15 64 0.951639738 ubox
15 71 0.003461586 ubox
15 73 0.009825224 ubox
16 26 0.053161365 ubox
16 27 0.012976451 ubox
16 54 0.058486538 ubox
16 55 0.061423984 ubox
16 56 0.199529872 ubox
16 57 0.080435262 ubox
16 58 0.034749637 ubox
16 63 0.947130835 ubox
16 64 0.185633398 ubox
16 70 0.003525349 ubox
17 26 0.014751787 ubox
17 27 0.647234248 ubox
17 34 0.007235294 ubox
17 53 0.058824492 ubox
17 54 0.061125397 ubox
17 55 0.171460796 ubox
17 56 0.064600483 ubox
17 57 0.034782344 ubox
17 58 0.010530097 ubox
17 63 0.194013990 ubox
17 64 0.013601907 ubox
17 71 0.009737350 ubox
18 26 0.648279217 ubox
18 33 0.008444056 ubox
18 52 0.083219894 ubox
18 53 0.020253354 ubox
18 54 0.169930507 ubox
18 55 0.058413210 ubox
18 56 0.034404249 ubox
18 57 0.010422652 ubox
18 61 0.642762642 ubox
18 63 0.013664721 ubox
18 70 0.009763247 ubox
19 25 0.647374166 ubox
19 29 0.049022422 ubox
19 32 0.008444779 ubox
19 48 0.057692943 ubox
19 49 0.112512814 ubox
19 51 0.083978217 ubox
19 60 0.474308358 ubox
20 28 0.049086524 ubox
20 29 0.101284472 ubox
20 47 0.058033857 ubox
20 48 0.112863523 ubox
20 49 0.079912893 ubox
20 51 0.039005154 ubox
20 60 0.553732412 ubox
20 68 0.009760299 ubox
21 28 0.101588961 ubox
21 46 0.057689855 ubox
21 47 0.111513481 ubox
21 48 0.078831899 ubox
21 50 0.039366169 ubox
21 59 0.712769799 ubox
21 62 0.035563931 ubox
21 65 0.004385349 ubox
21 67 0.009398921 ubox
22 27 0.107121412 ubox
22 45 0.023381526 ubox
22 54 0.019192888 ubox
22 58 0.712210553 ubox
22 61 0.035800210 ubox
22 64 0.006304062 ubox
23 53 0.013914531 ubox
24 34 0.022402976 ubox
24 53 0.043458684 ubox
25 33 0.030049925 ubox
25 45 0.209779226 ubox
25 52 0.046087090 ubox
25 61 0.026672195 ubox
26 32 0.030076774 ubox
26 44 0.216365944 ubox
26 49 0.009271248 ubox
26 51 0.045964414 ubox
26 60 0.026935115 ubox
27 43 0.216391115 ubox
27 48 0.009600465 ubox
28 37 0.029312669 ubox
28 38 0.003951894 ubox
28 41 0.004008102 ubox
28 42 0.216182276 ubox
28 53 0.016387376 ubox
28 54 0.013471371 ubox
28 55 0.777237775 ubox
28 56 0.528614068 ubox
28 57 0.147708079 ubox
28 58 0.129127277 ubox
29 33 0.003395160 ubox
29 36 0.029239686 ubox
29 37 0.004151230 ubox
29 40 0.003871284 ubox
29 41 0.216318531 ubox
29 52 0.017049977 ubox
29 53 0.006773985 ubox
29 54 0.779156665 ubox
29 55 0.528720866 ubox
29 56 0.144944727 ubox
29 57 0.129054259 ubox
30 40 0.211510569 ubox
30 53 0.550824644 ubox
31 38 0.172391695 ubox
31 53 0.787518303 ubox
32 37 0.172028863 ubox
32 45 0.004775567 ubox
32 52 0.969660639 ubox
32 61 0.012081105 ubox
33 44 0.004882903 ubox
33 47 0.088336798 ubox
33 48 0.004763441 ubox
33 51 0.969604607 ubox
33 60 0.012061378 ubox
34 43 0.004875618 ubox
34 46 0.106939542 ubox
34 47 0.003264429 ubox
34 50 0.745454764 ubox
34 59 0.008211640 ubox
35 42 0.004461216 ubox
35 45 0.115499946 ubox
36 44 0.115934392 ubox
36 48 0.956216800 ubox
36 49 0.141350543 ubox
37 43 0.115911764 ubox
37 47 0.958771474 ubox
37 48 0.138583081 ubox
37 68 0.005050922 ubox
38 46 0.958557687 ubox
38 47 0.134509091 ubox
38 67 0.004991819 ubox
39 45 0.951838454 ubox
40 44 0.881054470 ubox
40 66 0.004967779 ubox
40 69 0.003640420 ubox
41 47 0.005441460 ubox
41 60 0.032017707 ubox
41 65 0.005029068 ubox
41 68 0.003987981 ubox
42 46 0.005388011 ubox
42 59 0.032717037 ubox
42 65 0.005835128 ubox
42 67 0.003334932 ubox
43 58 0.032868342 ubox
43 64 0.009094766 ubox
44 57 0.032666464 ubox
44 63 0.009100191 ubox
45 62 0.008990789 ubox
46 53 0.003242899 ubox
47 52 0.003495718 ubox
47 55 0.009522521 ubox
47 56 0.111187763 ubox
47 57 0.098016584 ubox
47 58 0.068038672 ubox
47 64 0.012280539 ubox
48 54 0.009703970 ubox
48 55 0.112801622 ubox
48 56 0.099209136 ubox
48 57 0.070762861 ubox
48 58 0.014003356 ubox
48 63 0.012465720 ubox
48 64 0.042735457 ubox
49 53 0.006310515 ubox
49 54 0.112561207 ubox
49 55 0.098984436 ubox
49 56 0.070598461 ubox
49 57 0.013974022 ubox
49 63 0.042706961 ubox
51 61 0.054333889 ubox
52 60 0.054392106 ubox
53 59 0.052156749 ubox
58 72 0.005205159 ubox
59 71 0.005746883 ubox
60 70 0.005998571 ubox
60 73 0.033743994 ubox
61 72 0.033788892 ubox
62 71 0.032917130 ubox
64 72 0.004071880 ubox
64 74 0.008679744 ubox
65 71 0.003862046 ubox
65 73 0.009247035 ubox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
14 65 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
showpage
end
%%EOF
