%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGGCGCGCGCGCGCGCGCGCGCGCUCCCCGCCCCCAGCCCCGGAGCGGCUCGCGGCCGGCUCCGCGCCGCAUCGCUCGGGUGCAGCGCAGCUCAGCGCAGCGCUGCGGCCUUUCGGCAGCCGAACGGCCGCGGCAGCAUUUCCUUUACAGGCUGCACUUCCUUCCCUGCUGCCAGCCAGGAGUUUCGGAAGGUUUCCUGGAGGAAGUGUGAUACAGCAGUUCAGGACAAAGAGGUGUGGGCAGGCCACUGGG\
CCAGCUGGUAACAUC\
) } def
/len { sequence length } bind def

/coor [
[57.53350830 277.34848022]
[47.78371429 281.01419067]
[37.45594406 282.26638794]
[27.13791847 281.03985596]
[21.21742630 294.82202148]
[15.29693317 308.60418701]
[16.95912361 324.33782959]
[4.82656527 332.97787476]
[-1.09392703 346.76000977]
[-7.01441908 360.54217529]
[-12.93491173 374.32434082]
[-18.85540390 388.10647583]
[-24.77589607 401.88864136]
[-30.69638824 415.67080688]
[-36.61687851 429.45294189]
[-34.15229797 445.66583252]
[-47.12800980 455.69393921]
[-62.19571686 449.22122192]
[-63.85504913 432.90621948]
[-50.39903259 423.53244019]
[-44.47854233 409.75030518]
[-38.55804825 395.96813965]
[-32.63755798 382.18600464]
[-26.71706581 368.40383911]
[-20.79657364 354.62167358]
[-14.87608147 340.83953857]
[-8.95558929 327.05737305]
[-11.04125214 312.30950928]
[1.51477933 302.68368530]
[7.43527126 288.90151978]
[13.35576344 275.11938477]
[-0.33069414 261.00280762]
[-6.44043446 242.26345825]
[-3.69132662 222.69726562]
[7.39972496 206.28727722]
[24.61333466 196.39279175]
[44.47163773 195.06170654]
[49.41996002 180.90141296]
[54.36828232 166.74111938]
[59.31660843 152.58081055]
[64.26493073 138.42051697]
[54.85443497 126.73964691]
[39.96541977 128.56097412]
[25.07640457 130.38230896]
[10.18738937 132.20362854]
[2.08374882 136.33853149]
[-4.88465261 133.95874023]
[-19.79378128 135.60734558]
[-34.70290756 137.25595093]
[-49.61203766 138.90457153]
[-64.52116394 140.55317688]
[-70.78918457 149.38694763]
[-80.67278290 153.25210571]
[-90.84181213 151.10429382]
[-98.00929260 143.88328552]
[-112.95262909 145.18580627]
[-127.89597321 146.48832703]
[-142.83930969 147.79086304]
[-157.78265381 149.09338379]
[-172.71818542 150.48249817]
[-187.64543152 151.95816040]
[-200.64938354 161.94963074]
[-215.69876099 155.43441772]
[-217.31207275 139.11482239]
[-203.82966614 129.77903748]
[-189.12109375 137.03092957]
[-174.19386292 135.55526733]
[-167.86959839 131.78355408]
[-159.08517456 134.15003967]
[-144.14183044 132.84751892]
[-129.19850159 131.54499817]
[-114.25515747 130.24246216]
[-99.31181335 128.93994141]
[-84.28207397 116.74193573]
[-66.16976929 125.64404297]
[-51.26064301 123.99543762]
[-36.35151672 122.34683228]
[-21.44238853 120.69821930]
[-6.53325987 119.04961395]
[8.36606216 117.31462097]
[23.25507736 115.49329376]
[38.14409256 113.67196655]
[53.03310776 111.85063171]
[51.52062607 94.63670349]
[56.15892029 77.86656952]
[43.95251846 69.14855194]
[28.22556496 67.42418671]
[22.36554527 53.73077774]
[10.15914345 45.01276398]
[-2.04725766 36.29475021]
[-14.25365829 27.57673645]
[-29.79961967 30.42255211]
[-42.75691223 21.37357140]
[-45.43820953 5.79839325]
[-36.25274277 -7.06250620]
[-20.65008545 -9.57898235]
[-7.88701963 -0.25805500]
[-5.53564453 15.37033558]
[6.67075634 24.08835030]
[18.87715721 32.80636215]
[31.08355904 41.52437973]
[45.93743134 42.62517548]
[52.67053223 56.94215393]
[64.87693787 65.66017151]
[76.87794495 56.66151428]
[71.92961884 42.50121307]
[66.98130035 28.34091568]
[62.03297424 14.18061447]
[57.08464813 0.02031497]
[52.13632584 -14.13998508]
[47.18800354 -28.30028534]
[42.23967743 -42.46058655]
[37.29135513 -56.62088394]
[25.43467522 -67.09607697]
[28.54026222 -81.66332245]
[23.59193993 -95.82362366]
[18.64361572 -109.98392487]
[13.69529247 -124.14421844]
[8.74696827 -138.30451965]
[-2.18604064 -151.26235962]
[7.23884487 -165.35519409]
[23.38998985 -160.19992065]
[22.90726852 -143.25283813]
[27.85559273 -129.09254456]
[32.80391693 -114.93224335]
[37.75223923 -100.77194214]
[42.70056152 -86.61164856]
[54.20330811 -77.14929199]
[51.45165634 -61.56921005]
[56.39997864 -47.40890884]
[61.34830093 -33.24860764]
[66.29662323 -19.08830833]
[71.24494934 -4.92800856]
[76.19327545 9.23229122]
[81.14159393 23.39259148]
[86.08992004 37.55289078]
[91.03824615 51.71319199]
[113.14982605 55.33534241]
[130.19572449 67.98429108]
[142.19673157 58.98563766]
[154.19773865 49.98698425]
[166.19874573 40.98833084]
[178.19976807 31.98967552]
[190.20077515 22.99102211]
[202.20178223 13.99236965]
[214.20278931 4.99371576]
[226.20379639 -4.00493765]
[238.20481873 -13.00359154]
[241.12370300 -18.87116051]
[245.84823608 -21.94758034]
[250.58996582 -22.06791115]
[262.79635620 -30.78592491]
[275.00277710 -39.50394058]
[287.20916748 -48.22195435]
[289.93695068 -63.55809021]
[302.44015503 -72.22550964]
[317.04400635 -69.53048706]
[329.25039673 -78.24850464]
[334.39105225 -85.75450897]
[341.64923096 -86.99586487]
[353.95587158 -95.57179260]
[366.26251221 -104.14772034]
[378.56915283 -112.72364807]
[390.87579346 -121.29957581]
[402.98031616 -130.15850830]
[414.87619019 -139.29566956]
[426.77209473 -148.43284607]
[438.66796875 -157.57000732]
[440.86083984 -172.99171448]
[453.05514526 -182.08863831]
[467.74386597 -179.90303040]
[479.63973999 -189.04020691]
[491.53564453 -198.17736816]
[500.41390991 -212.62080383]
[516.75061035 -208.08782959]
[516.91729736 -191.13470459]
[500.67279053 -186.28149414]
[488.77691650 -177.14431763]
[476.88104248 -168.00715637]
[475.20468140 -153.25163269]
[463.27072144 -143.81578064]
[447.80514526 -145.67411804]
[435.90927124 -136.53695679]
[424.01336670 -127.39978027]
[412.11749268 -118.26261139]
[411.60626221 -115.54101562]
[410.00564575 -112.85393524]
[407.32211304 -110.61027527]
[403.70748901 -109.20962524]
[399.45172119 -108.99292755]
[387.14508057 -100.41699982]
[374.83843994 -91.84107208]
[362.53179932 -83.26514435]
[350.22515869 -74.68921661]
[337.96841431 -66.04209900]
[325.76202393 -57.32408905]
[323.57363892 -42.63577271]
[311.31881714 -33.62058258]
[295.92718506 -36.01555252]
[283.72079468 -27.29753876]
[271.51437378 -18.57952499]
[259.30798340 -9.86151028]
[247.20346069 -1.00258136]
[235.20245361 7.99607229]
[223.20144653 16.99472618]
[211.20043945 25.99337959]
[199.19943237 34.99203110]
[187.19841003 43.99068451]
[175.19740295 52.98933792]
[163.19639587 61.98799133]
[151.19538879 70.98664856]
[139.19438171 79.98529816]
[142.29690552 83.80341339]
[145.01823425 88.05938721]
[147.29997253 92.71395874]
[149.08792114 97.72039795]
[150.33297729 103.02492523]
[150.99206543 108.56730652]
[151.02890015 114.28153992]
[163.33554077 122.85746765]
[175.64218140 131.43339539]
[191.38807678 132.97534180]
[197.40644836 146.59989929]
[209.71308899 155.17582703]
[222.01972961 163.75175476]
[236.63529968 158.53977966]
[251.51354980 162.94633484]
[260.93347168 175.27697754]
[261.27288818 190.79034424]
[252.40133667 203.52120972]
[237.73008728 208.57432556]
[222.90052795 204.00663757]
[213.61492920 191.57452393]
[213.44380188 176.05839539]
[201.13716125 167.48246765]
[188.83052063 158.90653992]
[173.96487427 157.97801208]
[167.06625366 143.74003601]
[154.75961304 135.16410828]
[142.45297241 126.58818817]
[136.75134277 131.46069336]
[146.49636841 142.86396790]
[149.23420715 157.61198425]
[135.09310913 152.60899353]
[125.34807587 141.20571899]
[119.64644623 146.07823181]
[126.19942474 159.57113647]
[132.75241089 173.06404114]
[139.30538940 186.55694580]
[153.18145752 195.29690552]
[152.28016663 211.67126465]
[137.52868652 218.83549500]
[124.10208893 209.41963196]
[125.81249237 193.10992432]
[119.25950623 179.61701965]
[112.70652008 166.12411499]
[106.15354156 152.63122559]
[91.28927612 149.96063232]
[78.42523193 143.36883545]
[73.47690582 157.52912903]
[68.52857971 171.68943787]
[63.58026123 185.84973145]
[58.63193512 200.01004028]
[67.13351440 206.22450256]
[73.91429901 214.26499939]
[78.59349060 223.67062378]
[80.91054535 233.90414429]
[80.73965454 244.38255310]
[78.09654999 254.51040649]
[73.13729858 263.71362305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 31]
[5 30]
[6 29]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[37 263]
[38 262]
[39 261]
[40 260]
[41 259]
[42 83]
[43 82]
[44 81]
[45 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 67]
[61 66]
[85 104]
[86 103]
[88 101]
[89 100]
[90 99]
[91 98]
[105 137]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[115 127]
[116 126]
[117 125]
[118 124]
[119 123]
[139 212]
[140 211]
[141 210]
[142 209]
[143 208]
[144 207]
[145 206]
[146 205]
[147 204]
[148 203]
[151 202]
[152 201]
[153 200]
[154 199]
[157 196]
[158 195]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[165 185]
[166 184]
[167 183]
[168 182]
[171 179]
[172 178]
[173 177]
[219 240]
[220 239]
[221 238]
[223 236]
[224 235]
[225 234]
[246 257]
[247 256]
[248 255]
[249 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
