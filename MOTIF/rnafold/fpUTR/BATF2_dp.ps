%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BATF2)
} def

/sequence { (\
GAAACUGAAACUUGGCCCUCUGGGGGCGGAGUGGCCACUGGGGAUUUAAAGAGCUGCCACUUCCUUAGGCCUCCAGAGGGCACUGGGAAGUCACAGCUGCUGAGGGACCACUCUGCUCCCCCGCCUAAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.010014176 ubox
1 20 0.007186233 ubox
2 12 0.010138014 ubox
2 13 0.022013118 ubox
2 19 0.006988466 ubox
3 12 0.022647181 ubox
3 13 0.011349174 ubox
4 12 0.011010209 ubox
5 15 0.013179725 ubox
5 129 0.043758596 ubox
6 14 0.013185887 ubox
6 127 0.008443127 ubox
6 128 0.043473673 ubox
7 13 0.017185682 ubox
7 20 0.005255599 ubox
7 126 0.009357751 ubox
8 12 0.015063576 ubox
8 19 0.005080420 ubox
10 32 0.015026233 ubox
11 31 0.015499708 ubox
11 129 0.931255973 ubox
12 30 0.015501285 ubox
12 128 0.935463951 ubox
12 129 0.020464322 ubox
13 29 0.015409862 ubox
13 37 0.011490300 ubox
13 123 0.019541693 ubox
13 127 0.896552621 ubox
13 128 0.020994418 ubox
14 20 0.004157311 ubox
14 21 0.004092401 ubox
14 36 0.012998432 ubox
14 122 0.030049131 ubox
14 125 0.950464193 ubox
14 126 0.284743598 ubox
14 131 0.106902331 ubox
15 20 0.004231111 ubox
15 27 0.015509132 ubox
15 35 0.013001886 ubox
15 81 0.005528600 ubox
15 121 0.030045708 ubox
15 124 0.959971834 ubox
15 125 0.251871909 ubox
15 130 0.108139911 ubox
16 26 0.015506629 ubox
16 34 0.013001977 ubox
16 80 0.005601955 ubox
16 123 0.967698388 ubox
16 129 0.107967202 ubox
17 25 0.015507035 ubox
17 33 0.013000386 ubox
17 79 0.005904177 ubox
18 24 0.015499133 ubox
18 31 0.012998245 ubox
18 78 0.005918659 ubox
19 23 0.013962989 ubox
19 30 0.013000038 ubox
19 77 0.005918023 ubox
20 29 0.013001895 ubox
20 76 0.005918831 ubox
21 28 0.012988610 ubox
21 75 0.005917481 ubox
21 123 0.061318968 ubox
22 27 0.012956199 ubox
22 74 0.005918852 ubox
22 119 0.008183154 ubox
22 120 0.932336288 ubox
22 121 0.335514767 ubox
22 122 0.121285410 ubox
23 73 0.005918729 ubox
23 118 0.007113186 ubox
23 119 0.934180295 ubox
23 120 0.335629577 ubox
23 121 0.118699637 ubox
23 122 0.005243054 ubox
24 72 0.005915022 ubox
24 117 0.005783822 ubox
24 118 0.934648692 ubox
24 119 0.335237439 ubox
24 120 0.116016397 ubox
24 121 0.005229182 ubox
25 71 0.005918795 ubox
25 116 0.004389865 ubox
25 117 0.934755281 ubox
25 118 0.334791357 ubox
25 119 0.111400631 ubox
25 120 0.005131211 ubox
26 70 0.005918836 ubox
26 116 0.996055722 ubox
26 117 0.037353463 ubox
26 118 0.076800816 ubox
26 119 0.003491147 ubox
27 69 0.005916251 ubox
27 115 0.999535453 ubox
28 63 0.004274951 ubox
28 64 0.004064657 ubox
28 114 0.999011147 ubox
29 62 0.004291886 ubox
29 63 0.004058472 ubox
29 113 0.999759586 ubox
30 61 0.005160288 ubox
30 112 0.999626537 ubox
31 60 0.005900745 ubox
31 111 0.999754965 ubox
32 59 0.005916997 ubox
32 110 0.999568995 ubox
33 58 0.005918409 ubox
33 109 0.999763550 ubox
33 125 0.014273415 ubox
33 131 0.005584880 ubox
34 57 0.005918399 ubox
34 108 0.999652951 ubox
34 124 0.014298311 ubox
34 130 0.005649537 ubox
35 41 0.010244037 ubox
35 42 0.026898566 ubox
35 43 0.022866941 ubox
35 56 0.005824141 ubox
35 105 0.012804445 ubox
35 106 0.996639117 ubox
35 123 0.014257940 ubox
35 129 0.005641364 ubox
36 40 0.010219159 ubox
36 41 0.026974674 ubox
36 42 0.022923054 ubox
36 104 0.013377254 ubox
36 105 0.995840332 ubox
38 51 0.021827696 ubox
38 53 0.005542978 ubox
38 104 0.984368612 ubox
38 105 0.021371235 ubox
38 106 0.009859036 ubox
39 48 0.020604495 ubox
39 50 0.021866805 ubox
39 52 0.005541454 ubox
39 102 0.046705825 ubox
39 103 0.982102966 ubox
39 104 0.022592979 ubox
39 105 0.009718404 ubox
39 123 0.006758992 ubox
40 46 0.008111719 ubox
40 47 0.025758979 ubox
40 101 0.072769877 ubox
40 121 0.016798827 ubox
40 122 0.011105985 ubox
41 45 0.006714952 ubox
41 46 0.021773267 ubox
41 47 0.013319107 ubox
41 100 0.074293676 ubox
41 101 0.960796098 ubox
41 120 0.016896791 ubox
41 121 0.011026135 ubox
42 46 0.010426422 ubox
42 98 0.006508432 ubox
42 100 0.944442759 ubox
42 101 0.074229770 ubox
42 119 0.016953907 ubox
42 120 0.010938770 ubox
43 97 0.004241997 ubox
43 100 0.086626614 ubox
43 118 0.017005343 ubox
43 119 0.010825602 ubox
44 117 0.015961431 ubox
45 51 0.049547032 ubox
45 52 0.036757883 ubox
45 103 0.013865873 ubox
45 104 0.049420078 ubox
45 105 0.008230931 ubox
45 106 0.009369136 ubox
45 107 0.011468221 ubox
46 50 0.055718099 ubox
46 51 0.070196473 ubox
46 52 0.029686573 ubox
46 102 0.020115196 ubox
46 103 0.055860382 ubox
46 104 0.026677442 ubox
46 105 0.014270516 ubox
46 106 0.012384861 ubox
46 107 0.005355111 ubox
47 51 0.048910286 ubox
47 52 0.017833518 ubox
47 99 0.124359921 ubox
47 102 0.061718335 ubox
47 103 0.027989906 ubox
47 104 0.028800124 ubox
47 105 0.012000049 ubox
47 106 0.005724680 ubox
48 98 0.066042161 ubox
48 101 0.050369732 ubox
50 98 0.014230345 ubox
50 101 0.157780076 ubox
51 97 0.007792747 ubox
51 100 0.192232616 ubox
52 98 0.866153926 ubox
52 101 0.004011322 ubox
53 97 0.999546186 ubox
53 100 0.004731121 ubox
54 96 0.999947338 ubox
54 99 0.004848918 ubox
55 93 0.004483773 ubox
55 95 0.999612703 ubox
56 92 0.006396278 ubox
56 94 0.998355825 ubox
56 97 0.005522116 ubox
57 96 0.005523425 ubox
59 91 0.988080121 ubox
60 90 0.999867490 ubox
61 88 0.003972481 ubox
61 89 0.999390625 ubox
62 87 0.005398629 ubox
62 88 0.999578327 ubox
63 86 0.007862524 ubox
63 87 0.998120031 ubox
64 85 0.009638490 ubox
64 86 0.996197923 ubox
64 87 0.060313917 ubox
65 85 0.802333871 ubox
65 86 0.084829593 ubox
66 85 0.583798408 ubox
67 84 0.825597613 ubox
68 83 0.842163962 ubox
68 84 0.007202008 ubox
69 81 0.997968637 ubox
69 83 0.005395891 ubox
70 79 0.055443452 ubox
70 80 0.997102145 ubox
71 78 0.074694408 ubox
71 79 0.995345070 ubox
71 80 0.049798722 ubox
72 77 0.083210899 ubox
72 78 0.931888507 ubox
72 79 0.052360650 ubox
72 80 0.010074138 ubox
73 78 0.240260991 ubox
73 79 0.025573020 ubox
73 80 0.007245372 ubox
74 78 0.031780695 ubox
74 79 0.007669604 ubox
96 130 0.004276730 ubox
97 129 0.004319547 ubox
98 128 0.004258333 ubox
99 116 0.019949180 ubox
99 124 0.003974986 ubox
100 106 0.004370745 ubox
100 115 0.019936609 ubox
100 123 0.003906015 ubox
101 105 0.003958732 ubox
102 113 0.020084116 ubox
102 122 0.004675278 ubox
103 112 0.020200280 ubox
104 111 0.020180520 ubox
104 120 0.005276903 ubox
105 119 0.005295083 ubox
106 118 0.005301808 ubox
107 117 0.005202730 ubox
109 115 0.005060308 ubox
110 114 0.004107931 ubox
123 130 0.031200380 ubox
124 129 0.031182630 ubox
11 129 0.9500000 lbox
12 128 0.9500000 lbox
13 127 0.9500000 lbox
14 125 0.9500000 lbox
15 124 0.9500000 lbox
16 123 0.9500000 lbox
22 120 0.9500000 lbox
23 119 0.9500000 lbox
24 118 0.9500000 lbox
25 117 0.9500000 lbox
26 116 0.9500000 lbox
27 115 0.9500000 lbox
28 114 0.9500000 lbox
29 113 0.9500000 lbox
30 112 0.9500000 lbox
31 111 0.9500000 lbox
32 110 0.9500000 lbox
33 109 0.9500000 lbox
34 108 0.9500000 lbox
35 106 0.9500000 lbox
36 105 0.9500000 lbox
38 104 0.9500000 lbox
39 103 0.9500000 lbox
41 101 0.9500000 lbox
42 100 0.9500000 lbox
52 98 0.9500000 lbox
53 97 0.9500000 lbox
54 96 0.9500000 lbox
55 95 0.9500000 lbox
56 94 0.9500000 lbox
59 91 0.9500000 lbox
60 90 0.9500000 lbox
61 89 0.9500000 lbox
62 88 0.9500000 lbox
63 87 0.9500000 lbox
64 86 0.9500000 lbox
65 85 0.9500000 lbox
67 84 0.9500000 lbox
68 83 0.9500000 lbox
69 81 0.9500000 lbox
70 80 0.9500000 lbox
71 79 0.9500000 lbox
72 78 0.9500000 lbox
showpage
end
%%EOF
