%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ERLIN2)
} def

/sequence { (\
AUCGAAGCGACGGCCCGGAAGGAAGUCGCGUGCUGAGGGGUGUGACGGUUUUCUUGCUCGUGGGCUCGGACGAGUACGGAGCGCCUGCAGGGACAGCCUGGAUAAAGGCUCACUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.012106242 ubox
2 10 0.004689682 ubox
2 30 0.012304195 ubox
2 36 0.055105667 ubox
2 38 0.004432489 ubox
2 92 0.008404713 ubox
2 93 0.023021952 ubox
3 9 0.005143095 ubox
3 30 0.013615984 ubox
3 32 0.096707393 ubox
3 35 0.058902240 ubox
3 37 0.013028445 ubox
3 90 0.004153832 ubox
3 91 0.013756381 ubox
3 92 0.025137855 ubox
3 115 0.058893561 ubox
4 8 0.004842665 ubox
4 29 0.007497565 ubox
4 31 0.091717437 ubox
4 34 0.054580876 ubox
4 111 0.157270686 ubox
4 114 0.050549879 ubox
5 110 0.116639501 ubox
6 34 0.013067273 ubox
6 110 0.007972865 ubox
6 114 0.025278016 ubox
7 29 0.997550169 ubox
7 31 0.042175067 ubox
7 33 0.013056833 ubox
7 88 0.004891597 ubox
7 113 0.011252237 ubox
8 28 0.998835004 ubox
8 30 0.043083779 ubox
8 32 0.012938324 ubox
8 87 0.004910272 ubox
9 27 0.998876686 ubox
9 29 0.043529320 ubox
9 31 0.011053560 ubox
9 86 0.004193884 ubox
9 111 0.003331999 ubox
10 26 0.998763363 ubox
11 25 0.998506951 ubox
11 28 0.045781715 ubox
12 27 0.045870417 ubox
12 85 0.003775039 ubox
13 26 0.045900307 ubox
13 82 0.003460473 ubox
13 84 0.003783170 ubox
14 22 0.852105938 ubox
14 25 0.045655296 ubox
14 81 0.003488179 ubox
14 83 0.003770831 ubox
14 92 0.003797212 ubox
15 21 0.842537362 ubox
15 22 0.520125487 ubox
15 79 0.004144951 ubox
15 91 0.003847872 ubox
16 21 0.534511763 ubox
16 78 0.004146483 ubox
16 90 0.003847013 ubox
17 54 0.003501024 ubox
17 77 0.003966644 ubox
18 53 0.004810793 ubox
19 52 0.004813333 ubox
20 51 0.004793588 ubox
20 54 0.003389890 ubox
20 86 0.003746052 ubox
21 50 0.004725369 ubox
21 53 0.003441502 ubox
21 85 0.003768343 ubox
22 49 0.004479117 ubox
22 52 0.003437280 ubox
22 84 0.003762296 ubox
23 51 0.003434100 ubox
24 50 0.003413047 ubox
25 46 0.005897202 ubox
26 45 0.005911636 ubox
27 44 0.005912874 ubox
27 47 0.003305984 ubox
28 43 0.005906167 ubox
28 46 0.003308958 ubox
29 42 0.005885215 ubox
29 44 0.003359612 ubox
29 78 0.003718423 ubox
30 41 0.003424211 ubox
30 43 0.003719003 ubox
30 46 0.004828106 ubox
30 77 0.005175465 ubox
30 88 0.005508324 ubox
30 94 0.939904436 ubox
30 113 0.124855080 ubox
31 42 0.005260426 ubox
31 45 0.004510159 ubox
31 76 0.005177846 ubox
31 87 0.005507045 ubox
31 89 0.061659959 ubox
31 93 0.938046963 ubox
31 95 0.018951434 ubox
31 112 0.124849478 ubox
32 41 0.010683845 ubox
32 43 0.004817680 ubox
32 75 0.005179699 ubox
32 88 0.069746538 ubox
32 94 0.031256390 ubox
32 109 0.003694355 ubox
32 111 0.123245934 ubox
33 40 0.011206381 ubox
33 42 0.004981916 ubox
33 74 0.005180728 ubox
33 87 0.069788030 ubox
33 90 0.385337869 ubox
33 91 0.912619601 ubox
33 92 0.065868907 ubox
33 108 0.003776292 ubox
34 39 0.011001768 ubox
34 73 0.005065104 ubox
34 89 0.415476508 ubox
34 90 0.894350158 ubox
34 91 0.065173627 ubox
34 107 0.003529396 ubox
34 112 0.010670908 ubox
35 88 0.424217467 ubox
35 111 0.012039026 ubox
36 86 0.030299060 ubox
36 110 0.011998113 ubox
37 85 0.029378271 ubox
37 86 0.088559956 ubox
37 109 0.011848297 ubox
38 67 0.005138198 ubox
38 84 0.028949579 ubox
38 85 0.077847608 ubox
38 86 0.988701652 ubox
39 66 0.005149466 ubox
39 84 0.057124095 ubox
39 85 0.996288684 ubox
39 86 0.003273705 ubox
39 114 0.005260928 ubox
40 65 0.005164838 ubox
40 82 0.028327938 ubox
40 84 0.997742549 ubox
40 113 0.005533872 ubox
41 64 0.005149242 ubox
41 81 0.027203218 ubox
41 83 0.998757783 ubox
41 89 0.006423687 ubox
41 112 0.005529464 ubox
42 46 0.003339748 ubox
42 82 0.999191166 ubox
42 88 0.007140778 ubox
42 111 0.005468554 ubox
42 113 0.004809884 ubox
43 62 0.004375417 ubox
43 81 0.997607588 ubox
43 87 0.007108490 ubox
43 89 0.007867344 ubox
43 112 0.004823642 ubox
44 50 0.003594050 ubox
44 51 0.003551464 ubox
44 53 0.006933560 ubox
44 77 0.003900761 ubox
44 86 0.003771855 ubox
44 88 0.008763075 ubox
44 111 0.004824136 ubox
45 49 0.003329818 ubox
45 50 0.003667787 ubox
45 52 0.006517589 ubox
45 61 0.006070397 ubox
45 110 0.003678096 ubox
46 60 0.006467053 ubox
46 78 0.984043035 ubox
46 83 0.006979543 ubox
46 87 0.004174303 ubox
47 53 0.023564561 ubox
47 54 0.040543065 ubox
47 58 0.004396555 ubox
47 59 0.006551708 ubox
47 77 0.975085950 ubox
47 82 0.007655463 ubox
47 85 0.016420470 ubox
48 52 0.020029969 ubox
48 53 0.122684930 ubox
48 54 0.019541468 ubox
48 57 0.013231457 ubox
48 71 0.006068830 ubox
48 75 0.015927617 ubox
48 77 0.113465336 ubox
48 82 0.014310974 ubox
48 84 0.016460162 ubox
49 56 0.013727931 ubox
49 70 0.005871170 ubox
49 73 0.026107745 ubox
49 74 0.035728902 ubox
49 76 0.136370440 ubox
49 80 0.015042295 ubox
49 81 0.014225914 ubox
49 83 0.016366545 ubox
50 69 0.005493727 ubox
50 72 0.026756049 ubox
50 73 0.039546086 ubox
50 74 0.037039628 ubox
50 79 0.014409724 ubox
50 80 0.018833909 ubox
50 81 0.041633857 ubox
51 68 0.004549536 ubox
51 70 0.023690518 ubox
51 72 0.038069905 ubox
51 73 0.032046659 ubox
51 74 0.016882774 ubox
51 78 0.013064968 ubox
51 79 0.016316821 ubox
51 80 0.133127911 ubox
51 81 0.033832538 ubox
51 93 0.003750036 ubox
52 63 0.005441528 ubox
52 69 0.026393570 ubox
52 70 0.059546687 ubox
52 72 0.020010494 ubox
52 73 0.017494071 ubox
52 78 0.012087925 ubox
52 79 0.134366945 ubox
52 80 0.100962845 ubox
52 92 0.003996737 ubox
53 62 0.006487705 ubox
53 63 0.005103597 ubox
53 68 0.027980966 ubox
53 69 0.062249363 ubox
53 72 0.017446142 ubox
53 74 0.201901991 ubox
53 78 0.135349598 ubox
53 79 0.101451552 ubox
53 91 0.004163979 ubox
54 62 0.005061582 ubox
54 68 0.061428091 ubox
54 70 0.011226303 ubox
54 73 0.202174595 ubox
54 78 0.099141532 ubox
54 90 0.004172101 ubox
55 68 0.003164179 ubox
55 69 0.010862846 ubox
55 72 0.202062211 ubox
55 76 0.944358029 ubox
55 83 0.003644880 ubox
55 89 0.004185684 ubox
56 65 0.070372748 ubox
56 71 0.202019406 ubox
56 75 0.972633882 ubox
56 82 0.007733137 ubox
56 88 0.004193916 ubox
57 63 0.003902973 ubox
57 64 0.070350733 ubox
57 69 0.067640424 ubox
57 74 0.976408557 ubox
57 81 0.007886481 ubox
57 87 0.004172290 ubox
58 62 0.004044205 ubox
58 63 0.064670107 ubox
58 68 0.015223551 ubox
58 69 0.173910545 ubox
58 70 0.044015727 ubox
58 73 0.976350655 ubox
58 80 0.007894805 ubox
59 63 0.008094949 ubox
59 68 0.197566964 ubox
59 69 0.042469888 ubox
59 72 0.976477200 ubox
59 79 0.007730650 ubox
60 67 0.196857493 ubox
60 71 0.976393632 ubox
60 77 0.003834961 ubox
61 68 0.040620907 ubox
61 70 0.974205224 ubox
61 76 0.003710859 ubox
61 78 0.005634831 ubox
62 67 0.078220032 ubox
62 71 0.005597812 ubox
62 77 0.007346043 ubox
64 75 0.014700200 ubox
64 82 0.004030575 ubox
65 74 0.015692352 ubox
65 81 0.004085743 ubox
66 73 0.015738711 ubox
66 80 0.003972390 ubox
67 72 0.015720643 ubox
67 79 0.003381463 ubox
68 77 0.003786056 ubox
79 111 0.004324564 ubox
80 110 0.004337086 ubox
81 109 0.004323597 ubox
82 108 0.004317614 ubox
83 109 0.003533890 ubox
84 108 0.003548384 ubox
85 107 0.003554095 ubox
88 100 0.014780331 ubox
88 115 0.070964489 ubox
89 99 0.014834067 ubox
89 114 0.073524744 ubox
90 98 0.014843370 ubox
90 111 0.005563313 ubox
90 113 0.073919694 ubox
90 114 0.041495517 ubox
91 97 0.014833335 ubox
91 110 0.003548717 ubox
91 111 0.036041240 ubox
91 113 0.081611199 ubox
91 114 0.199842552 ubox
92 110 0.018791136 ubox
92 111 0.078405369 ubox
92 113 0.210233042 ubox
93 110 0.060709146 ubox
94 115 0.013701785 ubox
95 110 0.928961398 ubox
95 114 0.012799098 ubox
96 109 0.999520545 ubox
96 113 0.006098240 ubox
97 108 0.999865404 ubox
98 107 0.999855240 ubox
99 106 0.993667970 ubox
106 114 0.003770558 ubox
107 113 0.003887476 ubox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
30 94 0.9500000 lbox
31 93 0.9500000 lbox
33 91 0.9500000 lbox
34 90 0.9500000 lbox
38 86 0.9500000 lbox
39 85 0.9500000 lbox
40 84 0.9500000 lbox
41 83 0.9500000 lbox
42 82 0.9500000 lbox
43 81 0.9500000 lbox
46 78 0.9500000 lbox
47 77 0.9500000 lbox
55 76 0.9500000 lbox
56 75 0.9500000 lbox
57 74 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
95 110 0.9500000 lbox
96 109 0.9500000 lbox
97 108 0.9500000 lbox
98 107 0.9500000 lbox
99 106 0.9500000 lbox
showpage
end
%%EOF
