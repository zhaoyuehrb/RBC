%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRIM25)
} def

/sequence { (\
GUUUCCUCGGCGGCCUCGGAGCGCGGGUGCAGCAGUUGUGUCCCGACCCCUGGGAGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.922876396 ubox
1 59 0.183805070 ubox
2 55 0.003214045 ubox
2 56 0.894286510 ubox
2 58 0.181633529 ubox
3 55 0.863624470 ubox
3 56 0.339723292 ubox
4 54 0.832484019 ubox
4 55 0.442258956 ubox
5 53 0.832701579 ubox
5 54 0.500346213 ubox
6 52 0.831311161 ubox
6 53 0.500300228 ubox
6 54 0.082876306 ubox
6 56 0.006730343 ubox
7 52 0.422465353 ubox
7 53 0.087771260 ubox
7 55 0.006778130 ubox
8 52 0.274526458 ubox
8 54 0.006745534 ubox
9 48 0.017253299 ubox
9 49 0.047319190 ubox
9 50 0.925275640 ubox
9 51 0.294816876 ubox
9 60 0.218139657 ubox
10 33 0.004637799 ubox
10 47 0.017569794 ubox
10 48 0.043539708 ubox
10 49 0.925730901 ubox
10 50 0.298405080 ubox
10 59 0.219741922 ubox
11 32 0.004639917 ubox
11 45 0.006621336 ubox
11 52 0.003234927 ubox
11 58 0.219689904 ubox
12 44 0.006636515 ubox
12 48 0.944507729 ubox
12 49 0.233474759 ubox
12 50 0.034009217 ubox
12 51 0.003776693 ubox
12 57 0.210810287 ubox
13 30 0.005216841 ubox
13 43 0.006136634 ubox
13 47 0.941555470 ubox
13 48 0.233328454 ubox
13 49 0.034858843 ubox
13 50 0.003733880 ubox
13 57 0.061886896 ubox
14 29 0.005244481 ubox
14 53 0.008527380 ubox
14 54 0.061528898 ubox
14 56 0.087334308 ubox
15 27 0.005347135 ubox
15 52 0.008608422 ubox
15 53 0.061518898 ubox
15 54 0.210652609 ubox
15 56 0.003541252 ubox
16 26 0.005347169 ubox
16 46 0.930392983 ubox
16 52 0.053426327 ubox
16 53 0.210601477 ubox
16 55 0.003690445 ubox
17 25 0.005447573 ubox
17 40 0.005206238 ubox
17 45 0.975036222 ubox
17 52 0.212417172 ubox
17 54 0.003644519 ubox
18 24 0.005450843 ubox
18 39 0.005291775 ubox
18 43 0.042334748 ubox
18 44 0.974638883 ubox
18 48 0.003783226 ubox
18 49 0.020564642 ubox
18 50 0.066319191 ubox
18 51 0.207654680 ubox
19 42 0.054836124 ubox
19 43 0.973185904 ubox
19 47 0.003786802 ubox
19 48 0.020962226 ubox
19 49 0.066539113 ubox
19 50 0.206898179 ubox
20 37 0.005709936 ubox
20 41 0.055334048 ubox
20 51 0.003269387 ubox
21 36 0.005782873 ubox
21 41 0.960520646 ubox
21 50 0.003657045 ubox
22 35 0.005785266 ubox
22 40 0.975434743 ubox
22 45 0.023212469 ubox
23 30 0.003385523 ubox
23 33 0.006014226 ubox
23 39 0.975185797 ubox
23 44 0.023124521 ubox
24 29 0.003391849 ubox
24 32 0.006035619 ubox
24 38 0.975529941 ubox
24 45 0.217556859 ubox
25 37 0.971522087 ubox
25 43 0.023327848 ubox
25 44 0.217984384 ubox
25 49 0.009053422 ubox
26 36 0.964118036 ubox
26 37 0.007962027 ubox
26 42 0.023449074 ubox
26 43 0.217978659 ubox
26 48 0.009060049 ubox
27 33 0.050074666 ubox
27 36 0.009739437 ubox
27 41 0.022373999 ubox
27 42 0.217893328 ubox
27 47 0.009059977 ubox
28 32 0.046968134 ubox
28 34 0.965698450 ubox
28 35 0.009391565 ubox
28 40 0.160855951 ubox
28 45 0.003270887 ubox
28 46 0.008406722 ubox
29 33 0.950633717 ubox
29 36 0.048437891 ubox
29 39 0.188622087 ubox
29 41 0.099530189 ubox
29 44 0.005564887 ubox
30 35 0.050656597 ubox
30 38 0.189271683 ubox
30 40 0.102562906 ubox
31 37 0.184147942 ubox
31 39 0.096029780 ubox
32 36 0.124957860 ubox
32 39 0.043386164 ubox
32 41 0.029057522 ubox
33 38 0.062305337 ubox
33 40 0.029259586 ubox
34 39 0.028079303 ubox
38 59 0.004635010 ubox
39 58 0.004645921 ubox
40 57 0.004631829 ubox
41 55 0.004466527 ubox
42 54 0.005270570 ubox
43 53 0.005273605 ubox
44 52 0.005273447 ubox
45 51 0.004588620 ubox
1 57 0.9500000 lbox
2 56 0.9500000 lbox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
28 34 0.9500000 lbox
29 33 0.9500000 lbox
showpage
end
%%EOF
