%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GALP)
} def

/sequence { (\
GAGGAGCCAGAGAGAGCUGCGGAGAGCUGCCAGCUGCAGCGGGCGUGUUCCGCAGCUGUAGGCACCUGUCGUCCUGCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.093595745 ubox
1 73 0.043747089 ubox
1 80 0.097500381 ubox
1 81 0.795540721 ubox
2 67 0.372410936 ubox
2 69 0.072196060 ubox
2 72 0.042675701 ubox
2 75 0.094101292 ubox
2 79 0.127024535 ubox
2 80 0.793307040 ubox
3 66 0.389533502 ubox
3 67 0.011263514 ubox
3 74 0.096852779 ubox
3 78 0.141826655 ubox
3 79 0.790217244 ubox
3 80 0.004573915 ubox
3 81 0.393151107 ubox
4 65 0.388859153 ubox
4 66 0.012291969 ubox
4 70 0.040945339 ubox
4 73 0.096858928 ubox
4 77 0.137746781 ubox
4 78 0.789686844 ubox
4 79 0.005535881 ubox
4 80 0.395344981 ubox
4 81 0.048832881 ubox
5 18 0.003367350 ubox
5 67 0.003661850 ubox
5 69 0.040724020 ubox
5 72 0.094510860 ubox
5 75 0.112655089 ubox
5 79 0.396323467 ubox
5 80 0.045530421 ubox
6 17 0.003864441 ubox
6 59 0.006481770 ubox
6 63 0.400702453 ubox
6 66 0.003695944 ubox
6 69 0.009560754 ubox
6 72 0.014369800 ubox
6 74 0.112989300 ubox
6 77 0.597809292 ubox
6 78 0.394226561 ubox
6 79 0.032218143 ubox
7 16 0.004022692 ubox
7 58 0.006721143 ubox
7 62 0.401190057 ubox
7 68 0.008016088 ubox
7 71 0.026293569 ubox
7 76 0.462614033 ubox
8 58 0.006113869 ubox
8 61 0.400508547 ubox
8 68 0.049745195 ubox
8 76 0.534353531 ubox
9 57 0.005162687 ubox
9 67 0.050390949 ubox
9 75 0.654978588 ubox
9 79 0.016149893 ubox
10 66 0.050230691 ubox
10 70 0.191123530 ubox
10 73 0.159171151 ubox
10 74 0.653699825 ubox
10 78 0.017547920 ubox
10 80 0.037638527 ubox
10 81 0.053510467 ubox
11 57 0.009714256 ubox
11 67 0.009884306 ubox
11 69 0.191745487 ubox
11 72 0.156669709 ubox
11 75 0.046737698 ubox
11 79 0.041757163 ubox
11 80 0.049554641 ubox
12 56 0.004582513 ubox
12 66 0.010163012 ubox
12 70 0.080413390 ubox
12 73 0.562050348 ubox
12 74 0.047330481 ubox
12 78 0.043426168 ubox
12 79 0.036806402 ubox
12 80 0.040532425 ubox
12 81 0.041865111 ubox
13 57 0.021449612 ubox
13 67 0.191011070 ubox
13 69 0.075519171 ubox
13 72 0.526342897 ubox
13 75 0.019892149 ubox
13 79 0.049891697 ubox
13 80 0.039844234 ubox
14 56 0.010149368 ubox
14 66 0.191834535 ubox
14 70 0.124734642 ubox
14 73 0.037677479 ubox
14 74 0.020036471 ubox
14 78 0.054416560 ubox
14 79 0.032119778 ubox
14 81 0.008217424 ubox
15 35 0.004655136 ubox
15 57 0.972247915 ubox
15 67 0.042487514 ubox
15 69 0.075565486 ubox
15 72 0.020085347 ubox
15 80 0.004756284 ubox
16 27 0.003243014 ubox
16 34 0.005451542 ubox
16 56 0.999383528 ubox
16 66 0.023845075 ubox
16 69 0.011196063 ubox
16 72 0.003973224 ubox
17 26 0.003255014 ubox
17 33 0.005773099 ubox
17 55 0.999730670 ubox
17 68 0.011304511 ubox
17 71 0.005268464 ubox
18 25 0.003236447 ubox
18 32 0.005771505 ubox
18 54 0.999540283 ubox
18 64 0.013712669 ubox
19 30 0.004504033 ubox
19 31 0.004085470 ubox
19 53 0.999787278 ubox
19 63 0.013830798 ubox
19 69 0.006786830 ubox
20 29 0.006083044 ubox
20 52 0.999778962 ubox
20 62 0.013824131 ubox
20 68 0.007078168 ubox
20 71 0.003498193 ubox
21 28 0.006103998 ubox
21 31 0.003178122 ubox
21 51 0.999703602 ubox
21 66 0.009529516 ubox
21 67 0.006777616 ubox
22 27 0.006075632 ubox
22 30 0.003176712 ubox
22 50 0.998130153 ubox
22 65 0.009546512 ubox
22 66 0.006743229 ubox
22 70 0.003427438 ubox
23 48 0.012968093 ubox
23 49 0.988818147 ubox
23 69 0.004032745 ubox
24 48 0.696186203 ubox
24 49 0.056232627 ubox
24 50 0.056948268 ubox
25 48 0.100420673 ubox
25 49 0.095979113 ubox
25 57 0.011958733 ubox
25 67 0.004424987 ubox
26 40 0.036145949 ubox
26 44 0.021417017 ubox
26 46 0.924450300 ubox
26 48 0.248377310 ubox
26 56 0.012046984 ubox
26 63 0.011016135 ubox
26 66 0.004449486 ubox
27 39 0.036270695 ubox
27 42 0.019534071 ubox
27 43 0.018127970 ubox
27 45 0.928783458 ubox
27 47 0.265004218 ubox
27 55 0.012047387 ubox
27 61 0.007065838 ubox
27 62 0.010943588 ubox
28 38 0.036355665 ubox
28 41 0.022803233 ubox
28 42 0.012023089 ubox
28 45 0.317041912 ubox
28 47 0.003211678 ubox
28 54 0.012038756 ubox
28 60 0.007197803 ubox
28 61 0.010817254 ubox
28 64 0.005348163 ubox
29 37 0.036427907 ubox
29 40 0.025600513 ubox
29 44 0.987953705 ubox
29 53 0.012026481 ubox
29 59 0.007204425 ubox
29 63 0.006020680 ubox
30 36 0.036355441 ubox
30 39 0.025612015 ubox
30 42 0.145221153 ubox
30 43 0.988138965 ubox
30 52 0.012010308 ubox
30 58 0.005117095 ubox
30 62 0.006021694 ubox
31 41 0.146336888 ubox
31 42 0.984153965 ubox
31 47 0.004904293 ubox
31 58 0.012114093 ubox
31 61 0.005646788 ubox
32 46 0.004717707 ubox
32 49 0.009620280 ubox
32 57 0.013293756 ubox
33 40 0.992874869 ubox
33 44 0.008411173 ubox
33 48 0.010676951 ubox
33 56 0.013313684 ubox
33 59 0.003973715 ubox
34 39 0.993344121 ubox
34 42 0.004582383 ubox
34 43 0.008405099 ubox
34 47 0.010723647 ubox
34 55 0.013313601 ubox
34 58 0.004165226 ubox
34 61 0.004661180 ubox
35 41 0.009126327 ubox
35 42 0.008296206 ubox
35 45 0.010061724 ubox
35 54 0.013288098 ubox
35 60 0.006273056 ubox
36 40 0.009020875 ubox
36 44 0.011068583 ubox
36 53 0.012458030 ubox
36 56 0.004674905 ubox
36 59 0.007658804 ubox
37 43 0.011061742 ubox
37 52 0.012198543 ubox
37 55 0.004678678 ubox
37 58 0.007747118 ubox
38 49 0.008352726 ubox
38 57 0.007746845 ubox
39 48 0.010613949 ubox
39 53 0.006685171 ubox
39 56 0.007741777 ubox
40 47 0.010673135 ubox
40 52 0.007118750 ubox
40 55 0.007736845 ubox
41 46 0.009742765 ubox
41 51 0.009006435 ubox
42 50 0.009004782 ubox
43 49 0.007489812 ubox
43 53 0.007716950 ubox
44 52 0.007725130 ubox
45 51 0.007620610 ubox
55 63 0.009288173 ubox
56 62 0.009658436 ubox
57 61 0.008881649 ubox
57 64 0.022759667 ubox
57 71 0.034871837 ubox
57 82 0.009395565 ubox
58 63 0.045965503 ubox
58 65 0.075093014 ubox
58 67 0.005447245 ubox
58 69 0.040207720 ubox
58 70 0.133784071 ubox
58 72 0.024436760 ubox
58 75 0.003518016 ubox
58 77 0.556130078 ubox
58 81 0.061939941 ubox
59 64 0.070567005 ubox
59 68 0.180435645 ubox
59 71 0.031006658 ubox
59 76 0.558667558 ubox
60 67 0.195101023 ubox
60 75 0.571360318 ubox
60 79 0.075408222 ubox
61 66 0.195645173 ubox
61 67 0.064226551 ubox
61 70 0.610231165 ubox
61 73 0.151460963 ubox
61 74 0.572544121 ubox
61 75 0.007236387 ubox
61 78 0.081727114 ubox
62 66 0.063448926 ubox
62 69 0.614849467 ubox
62 72 0.155696395 ubox
62 73 0.571900782 ubox
62 74 0.008111907 ubox
62 77 0.081926415 ubox
63 68 0.615166918 ubox
63 71 0.264332868 ubox
63 76 0.081918142 ubox
64 72 0.522245102 ubox
64 75 0.073699446 ubox
65 71 0.523482876 ubox
67 82 0.003627725 ubox
68 75 0.007912147 ubox
68 77 0.072910767 ubox
68 81 0.023598701 ubox
69 76 0.067028528 ubox
70 76 0.031835312 ubox
70 82 0.055972225 ubox
71 75 0.020205642 ubox
71 77 0.064093566 ubox
71 81 0.061176546 ubox
72 76 0.060075916 ubox
75 82 0.014118552 ubox
76 81 0.024765217 ubox
1 81 0.9500000 lbox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
4 78 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
58 77 0.9500000 lbox
59 76 0.9500000 lbox
60 75 0.9500000 lbox
61 74 0.9500000 lbox
62 73 0.9500000 lbox
64 72 0.9500000 lbox
65 71 0.9500000 lbox
showpage
end
%%EOF
