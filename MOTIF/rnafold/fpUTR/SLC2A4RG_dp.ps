%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC2A4RG)
} def

/sequence { (\
CGCGUCCUGAGAGUCAGCCCUCGCCGCUGCAGCCUCGGCGCCCGGCCGGCCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.013939677 ubox
1 23 0.003725858 ubox
1 26 0.009858718 ubox
1 29 0.011256781 ubox
1 40 0.015174365 ubox
1 44 0.056485156 ubox
1 52 0.008108441 ubox
2 8 0.011458586 ubox
2 14 0.023772325 ubox
2 18 0.007163061 ubox
2 22 0.005290351 ubox
2 24 0.079424156 ubox
2 25 0.008846391 ubox
2 27 0.082436477 ubox
2 30 0.035131931 ubox
2 39 0.016475280 ubox
2 41 0.970922771 ubox
2 43 0.093884243 ubox
2 51 0.008157224 ubox
2 54 0.012145201 ubox
3 9 0.015569826 ubox
3 13 0.024784147 ubox
3 17 0.007061152 ubox
3 23 0.080013214 ubox
3 26 0.082572449 ubox
3 29 0.035151559 ubox
3 38 0.014573338 ubox
3 40 0.972904434 ubox
3 52 0.006736970 ubox
3 53 0.011595571 ubox
4 8 0.009710816 ubox
4 18 0.003330718 ubox
4 22 0.079829895 ubox
4 24 0.007226540 ubox
4 25 0.082140702 ubox
4 27 0.029015057 ubox
4 28 0.018864726 ubox
4 39 0.969907408 ubox
4 41 0.129221617 ubox
4 43 0.003956467 ubox
4 50 0.008182918 ubox
4 51 0.007480945 ubox
4 54 0.010395706 ubox
5 12 0.033375229 ubox
5 23 0.008872714 ubox
5 26 0.028561522 ubox
5 38 0.593637581 ubox
5 40 0.127856183 ubox
5 49 0.007428186 ubox
5 53 0.009367753 ubox
6 11 0.035103732 ubox
6 37 0.532215699 ubox
6 38 0.680517435 ubox
6 48 0.007326987 ubox
6 49 0.007701939 ubox
6 52 0.009247598 ubox
6 53 0.005806712 ubox
7 13 0.007420203 ubox
7 17 0.083289750 ubox
7 32 0.029740759 ubox
7 37 0.675059026 ubox
7 38 0.381391730 ubox
7 48 0.007704863 ubox
7 49 0.003941089 ubox
7 52 0.005857695 ubox
7 53 0.005360995 ubox
8 12 0.006886727 ubox
8 16 0.088199621 ubox
8 23 0.084396052 ubox
8 26 0.006418061 ubox
8 31 0.029861159 ubox
8 37 0.455242160 ubox
8 48 0.003953279 ubox
8 52 0.005495502 ubox
9 15 0.088960295 ubox
9 22 0.091087507 ubox
9 25 0.007062701 ubox
9 30 0.029723660 ubox
9 36 0.977395061 ubox
9 47 0.004073512 ubox
9 51 0.005916393 ubox
10 14 0.077398760 ubox
10 21 0.091111603 ubox
10 28 0.004184704 ubox
10 35 0.979672264 ubox
11 20 0.091065276 ubox
11 22 0.023259909 ubox
11 27 0.004139383 ubox
11 34 0.979300483 ubox
11 36 0.046285330 ubox
12 21 0.023342408 ubox
12 28 0.023111804 ubox
12 35 0.046306264 ubox
13 20 0.023224606 ubox
13 27 0.023244528 ubox
13 30 0.281599860 ubox
13 33 0.897700032 ubox
13 34 0.041487139 ubox
13 50 0.007045483 ubox
13 54 0.121338071 ubox
14 26 0.022865799 ubox
14 29 0.055484608 ubox
14 32 0.861614085 ubox
14 49 0.007053632 ubox
14 53 0.121540465 ubox
15 29 0.973186333 ubox
15 48 0.007032248 ubox
15 52 0.121302244 ubox
16 28 0.981285697 ubox
17 24 0.027821815 ubox
17 27 0.981641213 ubox
17 30 0.019564680 ubox
17 33 0.003941302 ubox
17 46 0.007214223 ubox
17 50 0.122293996 ubox
17 54 0.063998396 ubox
18 23 0.028514145 ubox
18 26 0.980601055 ubox
18 29 0.019538196 ubox
18 32 0.003895409 ubox
18 45 0.007207155 ubox
18 49 0.122238177 ubox
18 53 0.065220677 ubox
19 44 0.007177404 ubox
19 48 0.122025172 ubox
19 49 0.006132652 ubox
19 52 0.065117633 ubox
19 53 0.010412968 ubox
20 32 0.003279988 ubox
20 48 0.008326897 ubox
20 49 0.008861843 ubox
20 52 0.010910749 ubox
20 53 0.006396646 ubox
21 31 0.003766988 ubox
21 45 0.003533027 ubox
21 48 0.008595271 ubox
21 49 0.007992944 ubox
21 52 0.006219783 ubox
21 53 0.004505394 ubox
22 40 0.007710562 ubox
22 44 0.003919581 ubox
22 48 0.009066696 ubox
22 52 0.006562441 ubox
23 30 0.008236846 ubox
23 39 0.008297331 ubox
23 41 0.004438372 ubox
23 43 0.003953835 ubox
23 46 0.123171493 ubox
23 47 0.007040463 ubox
23 50 0.067312172 ubox
23 51 0.004968387 ubox
23 54 0.021385586 ubox
24 29 0.008213404 ubox
24 38 0.008307589 ubox
24 45 0.123428340 ubox
24 49 0.067540871 ubox
24 53 0.021472350 ubox
25 37 0.008307612 ubox
25 40 0.023960028 ubox
25 44 0.123424805 ubox
25 48 0.067524471 ubox
25 52 0.021501526 ubox
26 33 0.007455212 ubox
26 36 0.007299849 ubox
26 39 0.025591354 ubox
26 41 0.003728312 ubox
26 43 0.122601821 ubox
26 46 0.047746887 ubox
26 47 0.047796595 ubox
26 50 0.008420249 ubox
26 51 0.019646927 ubox
26 54 0.066529440 ubox
27 32 0.007606043 ubox
27 38 0.025629049 ubox
27 40 0.003902838 ubox
27 45 0.067486200 ubox
27 49 0.011856519 ubox
27 53 0.066672933 ubox
28 37 0.025596066 ubox
28 40 0.007813157 ubox
28 44 0.066738933 ubox
28 48 0.011602292 ubox
28 52 0.066573983 ubox
29 36 0.024843340 ubox
29 39 0.009083118 ubox
29 41 0.125082585 ubox
29 43 0.061918794 ubox
29 47 0.011037307 ubox
29 50 0.009629718 ubox
29 51 0.064150381 ubox
29 54 0.029104623 ubox
30 38 0.009078221 ubox
30 40 0.125031594 ubox
30 49 0.010892904 ubox
30 53 0.029194618 ubox
32 39 0.141477721 ubox
32 41 0.007799097 ubox
32 46 0.012582319 ubox
32 50 0.072782831 ubox
32 54 0.092094815 ubox
33 38 0.141523728 ubox
33 40 0.007792753 ubox
33 45 0.012541236 ubox
33 49 0.072269878 ubox
33 53 0.092314695 ubox
34 44 0.011778721 ubox
34 48 0.065168657 ubox
34 49 0.011427000 ubox
34 52 0.092037110 ubox
35 45 0.011897349 ubox
35 49 0.077802493 ubox
36 44 0.014983516 ubox
36 48 0.099187049 ubox
37 43 0.017429024 ubox
37 47 0.118062267 ubox
37 51 0.004513262 ubox
37 55 0.003199975 ubox
38 42 0.017170756 ubox
38 46 0.118245652 ubox
38 50 0.004519277 ubox
38 54 0.003261018 ubox
39 45 0.118228576 ubox
39 49 0.004425497 ubox
40 50 0.004513335 ubox
40 54 0.019849809 ubox
41 49 0.004663099 ubox
41 53 0.016446757 ubox
42 48 0.004676893 ubox
42 49 0.005617852 ubox
42 52 0.011910304 ubox
42 53 0.395823562 ubox
43 48 0.005676190 ubox
43 52 0.399407254 ubox
44 51 0.399609823 ubox
44 55 0.889397629 ubox
45 50 0.397141387 ubox
45 54 0.897685690 ubox
46 53 0.897719453 ubox
47 52 0.896422307 ubox
48 55 0.003347984 ubox
49 54 0.003355954 ubox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
