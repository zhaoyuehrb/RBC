%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCGCGCCGGCGGCGGGGCAGCCUCGCUCUGGCUCGCGCCGCGCCCCCGCGCCCAGUCCGCGCGUCAGUCGGUCCCUAGCGCGGCUGCGGGGCGGAGAGCUGCGGCUGGCCCAGCGCGCCCACCUGAGGAGGCGGCGGGGUCCGCAGGCGUCGCGGGACGAGGAGAUCGGAGCCGGGAGACUCGCGCAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[185.14996338 243.31153870]
[177.04035950 230.69273376]
[168.93074036 218.07392883]
[160.82112122 205.45512390]
[152.71151733 192.83631897]
[144.60189819 180.21752930]
[138.33422852 176.28596497]
[136.46557617 167.33355713]
[128.55718994 154.58767700]
[120.64881134 141.84178162]
[112.74043274 129.09590149]
[104.83204651 116.35002899]
[90.17484283 113.16154480]
[77.68629456 121.47034454]
[65.19774628 129.77914429]
[52.70920181 138.08795166]
[47.29044342 145.45509338]
[39.95594025 146.42767334]
[27.33713913 154.53727722]
[14.71833515 162.64689636]
[7.29199219 176.61686707]
[-7.59797049 176.98870850]
[-20.21677399 185.09832764]
[-32.77084351 193.30778503]
[-45.25939178 201.61659241]
[-57.74794006 209.92539978]
[-70.23648834 218.23419189]
[-71.78979492 233.79443359]
[-83.01767731 244.67877197]
[-98.61866760 245.74794006]
[-111.22645569 236.49713135]
[-114.88803101 221.29426575]
[-107.87451172 207.31770325]
[-93.49745941 201.16671753]
[-78.54528809 205.74565125]
[-66.05673981 197.43684387]
[-53.56819153 189.12803650]
[-41.07964325 180.81924438]
[-37.24802780 174.48997498]
[-28.32638550 172.47952271]
[-15.70758247 164.36990356]
[-9.18382072 150.97999573]
[6.60872316 150.02809143]
[19.22752571 141.91847229]
[31.84632874 133.80886841]
[44.40039825 125.59940338]
[56.88894653 117.29060364]
[69.37749481 108.98179626]
[81.86604309 100.67299652]
[79.13237762 96.20841980]
[77.61157990 90.62478638]
[67.26039886 79.76877594]
[56.90921402 68.91276550]
[46.55802917 58.05675507]
[31.43507004 53.40844727]
[28.25199509 38.85794067]
[17.90081024 28.00192833]
[7.46382761 17.22837830]
[-3.05829573 6.53796530]
[-13.58041954 -4.15244722]
[-21.83992767 -8.07904053]
[-24.18300056 -15.09693623]
[-34.53418350 -25.95294762]
[-44.88536835 -36.80895615]
[-55.23655701 -47.66496658]
[-65.58773804 -58.52097702]
[-75.93892670 -69.37699127]
[-89.95417786 -63.55142975]
[-105.12754059 -63.18606186]
[-119.40694427 -68.33029175]
[-130.86120605 -78.28841400]
[-137.94125366 -91.71366882]
[-139.68954468 -106.79040527]
[-135.86964417 -121.47961426]
[-126.99816895 -133.79470825]
[-114.27490997 -142.07015991]
[-99.42057800 -145.18678284]
[-84.44410706 -142.72308350]
[-71.37094116 -135.01226807]
[-61.96911621 -123.09715271]
[-57.51014709 -108.58914948]
[-58.59708023 -93.45036316]
[-65.08291626 -79.72817230]
[-54.73173141 -68.87216187]
[-44.38054657 -58.01615143]
[-34.02935791 -47.16014099]
[-23.67817497 -36.30413055]
[-13.32698917 -25.44812202]
[-2.89000654 -14.67457104]
[7.63211679 -3.98415828]
[18.15423965 6.70625448]
[25.09426117 9.27080917]
[28.75682068 17.65074348]
[39.10800552 28.50675392]
[53.49057770 32.37856674]
[57.41403961 47.70556641]
[67.76522064 58.56157684]
[78.11640930 69.41758728]
[88.46759033 80.27359772]
[82.15790558 66.66522217]
[87.94925690 52.82830811]
[102.07115173 47.77143478]
[115.32947540 54.78691101]
[119.09233093 69.30727386]
[110.91026306 81.87873077]
[122.70106506 72.60634613]
[134.49185181 63.33396149]
[146.28265381 54.06157684]
[158.07345581 44.78919220]
[160.01873779 39.92237854]
[163.31105042 36.62444305]
[167.12432861 35.14598083]
[170.65310669 35.37218475]
[182.87173462 26.67133141]
[195.09037781 17.97047615]
[207.30902100 9.26962376]
[214.06224060 -5.03788042]
[228.91763306 -6.11780405]
[241.13627625 -14.81865788]
[246.31855774 -22.35401154]
[253.61851501 -23.55881310]
[265.97366333 -32.06471252]
[278.32879639 -40.57061005]
[290.68395996 -49.07650757]
[293.79064941 -61.60213470]
[304.26531982 -68.43120575]
[316.18945312 -66.35668182]
[328.67800903 -74.66548157]
[338.51599121 -88.47309113]
[354.50741577 -82.84189606]
[353.52316284 -65.91654968]
[336.98678589 -62.17693329]
[324.49826050 -53.86813354]
[317.57037354 -37.74945068]
[299.18984985 -36.72135925]
[286.83471680 -28.21545982]
[274.47955322 -19.70956230]
[262.12442017 -11.20366478]
[249.83712769 -2.60001826]
[237.61848450 6.10083532]
[231.73924255 19.78599548]
[216.00987244 21.48826218]
[203.79122925 30.18911552]
[191.57260132 38.88996887]
[179.35395813 47.59082413]
[167.34584045 56.57999039]
[155.55503845 65.85237122]
[143.76425171 75.12475586]
[131.97344971 84.39714050]
[120.18264771 93.66952515]
[117.57792664 108.44164276]
[125.48631287 121.18752289]
[133.39469910 133.93341064]
[141.30307007 146.67929077]
[149.21145630 159.42517090]
[157.22070312 172.10791016]
[165.33032227 184.72671509]
[173.43992615 197.34552002]
[181.54954529 209.96432495]
[189.65914917 222.58312988]
[197.76876831 235.20191956]
[223.82417297 234.21743774]
[243.05451965 259.29516602]
[255.27316284 267.99603271]
[267.49179077 276.69689941]
[283.48748779 275.46514893]
[294.31781006 287.30084229]
[291.67465210 303.12466431]
[277.58563232 310.79791260]
[262.85861206 304.43432617]
[258.79095459 288.91552734]
[246.57231140 280.21466064]
[234.35366821 271.51382446]
[228.64675903 276.38015747]
[217.23294067 286.11282349]
[211.52603149 290.97915649]
[218.18704224 304.41906738]
[224.95445251 317.80569458]
[231.82785034 331.13824463]
[238.70124817 344.47076416]
[245.57464600 357.80328369]
[258.20675659 369.11108398]
[250.83779907 384.37985229]
[234.12582397 381.52566528]
[232.24211121 364.67669678]
[225.36871338 351.34417725]
[218.49531555 338.01162720]
[211.62191772 324.67910767]
[205.75634766 320.16955566]
[204.74713135 311.08004761]
[198.08613586 297.64016724]
[189.17808533 293.18420410]
[182.08403015 286.79360962]
[177.17355347 279.08917236]
[174.62318420 270.74520874]
[174.41520691 262.43331909]
[176.35205078 254.76963806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 158]
[5 157]
[6 156]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[13 49]
[14 48]
[15 47]
[16 46]
[18 45]
[19 44]
[20 43]
[22 41]
[23 40]
[24 38]
[25 37]
[26 36]
[27 35]
[51 99]
[52 98]
[53 97]
[54 96]
[56 94]
[57 93]
[58 91]
[59 90]
[60 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[105 150]
[106 149]
[107 148]
[108 147]
[109 146]
[113 145]
[114 144]
[115 143]
[116 142]
[118 140]
[119 139]
[121 138]
[122 137]
[123 136]
[124 135]
[127 133]
[128 132]
[163 173]
[164 172]
[165 171]
[176 191]
[177 190]
[178 188]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
