%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGACAAGGUUGAACCUAGACGCAUGCGCCCAAAGCGCGGGGUGCGAGGUGGGUGGACCCAUCGCUUCCCGCUCUCUUCUCCCAAAGCGCUUACGGCAGUCUCGCGGGAUUUCCCCCUCUCGCGGGAAUUAUUUGAACGUUCGAGCGGUAAAUACUCCCUGGGGCUGUCAUAGAAGACUACUCGGAGAGCGCUGCCUCUGGGUUGGCGGGCUGGCAGGCUGUAGCCGAGCGCGGGCAGGACUCGUCCCGGCAGGG\
UUCCAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[264.05102539 413.88510132]
[249.08062744 414.82696533]
[236.94831848 406.00613403]
[233.22769165 391.47491455]
[239.62800598 377.90890503]
[253.20896912 371.54040527]
[267.73037720 375.29434204]
[259.82501221 362.54660034]
[246.54191589 355.80804443]
[245.84446716 340.00219727]
[237.93911743 327.25442505]
[230.03378296 314.50668335]
[221.97843933 301.85314941]
[213.77421570 289.29565430]
[205.56999207 276.73815918]
[197.36576843 264.18066406]
[189.16154480 251.62316895]
[180.95732117 239.06567383]
[172.75309753 226.50817871]
[164.54887390 213.95068359]
[151.11030579 207.52774048]
[150.03974915 191.74278259]
[141.83552551 179.18528748]
[133.63130188 166.62779236]
[127.36316681 162.76011658]
[125.40535736 153.87318420]
[117.35001373 141.21968079]
[109.29467010 128.56616211]
[101.23932648 115.91264343]
[100.86722565 130.90803528]
[88.42723846 139.28936768]
[74.38993835 134.00219727]
[70.57032776 119.49665833]
[80.18339539 107.98183441]
[65.78195953 112.17691040]
[54.69637299 123.46497345]
[40.31306839 119.59587860]
[25.91163445 123.79095459]
[11.51019764 127.98603058]
[-2.89123845 132.18110657]
[-17.29267502 136.37617493]
[-31.69411087 140.57124329]
[-42.77969360 151.85931396]
[-57.16299820 147.99021912]
[-71.56443024 152.18528748]
[-85.96586609 156.38035583]
[-100.36730194 160.57543945]
[-105.16858673 165.04153442]
[-110.67717743 166.25590515]
[-115.15859985 164.69519043]
[-129.65510559 168.54895020]
[-144.15159607 172.40270996]
[-158.64810181 176.25646973]
[-169.87867737 188.20663452]
[-185.77903748 184.19284058]
[-189.99226379 168.34416199]
[-178.18414307 156.96434021]
[-162.50186157 161.75996399]
[-148.00535583 157.90620422]
[-133.50885010 154.05245972]
[-119.01235199 150.19869995]
[-104.56237793 146.17399597]
[-90.16094208 141.97892761]
[-75.75950623 137.78385925]
[-61.35807037 133.58877563]
[-51.30257416 122.60077667]
[-35.88918304 126.16980743]
[-21.48774719 121.97473907]
[-7.08631134 117.77966309]
[7.31512451 113.58459473]
[21.71656036 109.38951874]
[36.11799622 105.19444275]
[46.17349243 94.20644379]
[61.58688354 97.77547455]
[75.98831940 93.58039856]
[82.73044586 91.21072388]
[89.19445801 91.25634766]
[94.69776917 93.45586395]
[94.69776917 78.45586395]
[94.69776917 63.45586395]
[94.69776917 48.45586395]
[94.69776917 33.45586395]
[80.48934174 28.22652054]
[68.94899750 18.46985626]
[61.45712280 5.37818098]
[58.90117645 -9.45884037]
[61.57062912 -24.24719810]
[69.12429810 -37.20545959]
[80.63383484 -46.77936554]
[94.69776917 -51.82824326]
[94.69776917 -66.82824707]
[94.69776917 -81.82824707]
[80.79624176 -94.73748016]
[80.78088379 -113.38813782]
[94.19245148 -125.88330841]
[93.83816528 -140.87911987]
[93.48388672 -155.87493896]
[93.12960052 -170.87075806]
[92.77532196 -185.86657715]
[92.42103577 -200.86238098]
[92.06675720 -215.85820007]
[91.71247101 -230.85401917]
[91.35819244 -245.84983826]
[87.76184082 -260.41232300]
[81.09442902 -273.84906006]
[74.42701721 -287.28579712]
[67.75960541 -300.72250366]
[61.09219360 -314.15924072]
[54.42478180 -327.59594727]
[39.10351181 -330.05325317]
[28.17658806 -341.07061768]
[25.84563255 -356.41162109]
[33.00694656 -370.17733765]
[46.90686035 -377.07458496]
[62.20057297 -374.45123291]
[73.00733948 -363.31597900]
[75.17173767 -347.95059204]
[67.86151123 -334.26336670]
[74.52892303 -320.82666016]
[81.19633484 -307.38992310]
[87.86374664 -293.95318604]
[94.53115845 -280.51647949]
[101.19857025 -267.07974243]
[116.07215881 -269.02301025]
[119.06364441 -283.72167969]
[122.05513000 -298.42034912]
[125.04660797 -313.11901855]
[118.59931946 -324.26477051]
[121.37083435 -336.42883301]
[131.34909058 -343.22967529]
[134.51396179 -357.89199829]
[137.67883301 -372.55432129]
[140.84368896 -387.21661377]
[144.00856018 -401.87893677]
[147.17343140 -416.54125977]
[140.85821533 -427.76239014]
[143.77320862 -439.89288330]
[153.83108521 -446.57537842]
[157.16889954 -461.19931030]
[160.50671387 -475.82321167]
[155.15856934 -491.32577515]
[166.11294556 -503.52960205]
[182.10093689 -499.88046265]
[186.67546082 -484.13226318]
[175.13063049 -472.48541260]
[171.79281616 -457.86148071]
[168.45500183 -443.23757935]
[174.51380920 -426.75247192]
[161.83575439 -413.37640381]
[158.67088318 -398.71408081]
[155.50601196 -384.05175781]
[152.34114075 -369.38943481]
[149.17626953 -354.72711182]
[146.01141357 -340.06478882]
[152.26448059 -323.65240479]
[139.74528503 -310.12753296]
[136.75379944 -295.42886353]
[133.76231384 -280.73019409]
[130.77082825 -266.03152466]
[120.59456635 -249.72964478]
[106.35401154 -246.20411682]
[106.70829010 -231.20829773]
[107.06256866 -216.21247864]
[107.41685486 -201.21667480]
[107.77113342 -186.22085571]
[108.12541962 -171.22503662]
[108.47969818 -156.22921753]
[108.83398438 -141.23341370]
[109.18826294 -126.23759460]
[118.92361450 -120.36435699]
[124.68781281 -110.42549133]
[124.95664978 -98.81952667]
[119.54853058 -88.41205597]
[109.69776917 -81.82824707]
[109.69776917 -66.82824707]
[109.69776917 -51.82824326]
[123.76169586 -46.77936554]
[135.27124023 -37.20545959]
[142.82490540 -24.24719810]
[145.49435425 -9.45884037]
[142.93841553 5.37818098]
[135.44653320 18.46985626]
[123.90618896 28.22652054]
[109.69776917 33.45586395]
[109.69776917 48.45586395]
[109.69776917 63.45586395]
[109.69776917 78.45586395]
[109.69776917 93.45586395]
[113.89283752 107.85729980]
[121.94818115 120.51081848]
[130.00352478 133.16433716]
[138.05886841 145.81784058]
[146.18879700 158.42356873]
[154.39302063 170.98106384]
[162.59724426 183.53857422]
[176.62261963 190.85971069]
[177.10636902 205.74645996]
[185.31059265 218.30395508]
[193.51481628 230.86145020]
[201.71903992 243.41894531]
[209.92326355 255.97644043]
[218.12748718 268.53393555]
[226.33171082 281.09143066]
[234.53593445 293.64892578]
[240.20590210 296.94284058]
[242.97065735 301.85968018]
[242.78153992 306.60131836]
[250.68688965 319.34909058]
[258.59222412 332.09686279]
[272.44079590 339.74722290]
[272.57278442 354.64123535]
[280.47814941 367.38900757]
[288.90353394 379.79919434]
[297.83456421 391.85061646]
[306.76559448 403.90203857]
[317.55685425 404.87033081]
[325.87402344 411.46673584]
[329.13659668 421.33786011]
[326.50180054 431.16806030]
[335.14569092 443.42706299]
[343.78961182 455.68603516]
[358.06555176 462.50573730]
[359.07632446 477.36602783]
[367.72024536 489.62500000]
[376.36416626 501.88400269]
[385.00805664 514.14300537]
[400.32739258 516.96362305]
[408.91891479 529.51910400]
[406.13546753 544.10632324]
[414.77938843 556.36535645]
[430.09872437 559.18597412]
[438.69024658 571.74145508]
[435.90679932 586.32873535]
[444.55072021 598.58770752]
[453.19461060 610.84667969]
[461.83853149 623.10565186]
[477.43515015 624.23706055]
[488.61950684 635.16613770]
[490.11071777 650.73242188]
[481.20468140 663.58612061]
[466.10653687 667.65795898]
[451.94519043 661.02551270]
[445.40716553 646.82025146]
[449.57955933 631.74957275]
[440.93563843 619.49060059]
[432.29171753 607.23162842]
[423.64782715 594.97259521]
[408.97302246 592.69531250]
[400.03222656 580.38604736]
[402.52041626 565.00927734]
[393.87649536 552.75024414]
[379.20169067 550.47296143]
[370.26092529 538.16369629]
[372.74908447 522.78686523]
[364.10516357 510.52789307]
[355.46124268 498.26892090]
[346.81735229 486.00991821]
[333.15969849 480.06704712]
[331.53060913 464.32995605]
[322.88671875 452.07095337]
[314.24279785 439.81198120]
[296.13970947 432.96289062]
[294.71420288 412.83306885]
[285.78314209 400.78164673]
[276.85211182 388.73025513]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 212]
[8 211]
[10 209]
[11 208]
[12 207]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[20 197]
[22 195]
[23 194]
[24 193]
[26 192]
[27 191]
[28 190]
[29 189]
[34 75]
[35 74]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[44 65]
[45 64]
[46 63]
[47 62]
[50 61]
[51 60]
[52 59]
[53 58]
[78 188]
[79 187]
[80 186]
[81 185]
[82 184]
[90 176]
[91 175]
[92 174]
[95 169]
[96 168]
[97 167]
[98 166]
[99 165]
[100 164]
[101 163]
[102 162]
[103 161]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[124 159]
[125 158]
[126 157]
[127 156]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[138 147]
[139 146]
[140 145]
[213 265]
[214 264]
[215 263]
[219 261]
[220 260]
[221 259]
[223 257]
[224 256]
[225 255]
[226 254]
[229 251]
[230 250]
[233 247]
[234 246]
[235 245]
[236 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
