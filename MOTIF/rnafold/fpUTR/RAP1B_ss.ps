%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:21:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGCGCGCCCCGCCCGCGGGCGGAAGCUGGAGCGAGGCUGAACGCCUGACGUCAAGGCGACAUCGCCAAACCUCGCCCAGAUUCAGGCGUGUAAACCAGCCGGAGCGGCGCGGCAGCGGCAGGACCGCCGUGGCGCCUAGAGUAGCGACCCGGGGGGAGCGCGGGGCGACGCUGGCUGCAGGGACCCGGUGACAGCGUGAGAGGUUCGCAGAGUACUAGGUUUUGACAAGCUUGCAUC\
) } def
/len { sequence length } bind def

/coor [
[236.65785217 227.15769958]
[239.35446167 212.17472839]
[227.25376892 203.31056213]
[215.15309143 194.44638062]
[203.05241394 185.58221436]
[190.95172119 176.71804810]
[178.85104370 167.85388184]
[166.75036621 158.98971558]
[151.91079712 157.71037292]
[145.35034180 143.31346130]
[133.24966431 134.44929504]
[121.14898682 125.58512878]
[109.04830170 116.72095490]
[94.15141296 118.47673798]
[84.44319153 129.91134644]
[74.73496246 141.34596252]
[65.10147858 152.84361267]
[55.54312897 164.40379333]
[45.98478317 175.96398926]
[43.50688553 195.98280334]
[25.08300972 201.89021301]
[15.82926655 213.69564819]
[6.57552433 225.50108337]
[4.80428839 241.80429077]
[-10.30747223 248.17349243]
[-23.21407509 238.05659485]
[-20.63831139 221.86099243]
[-5.22990847 216.24732971]
[4.02383423 204.44190979]
[13.27757740 192.63647461]
[11.14282131 182.66897583]
[14.91611576 172.96385193]
[23.58034515 166.80155945]
[34.42459106 166.40563965]
[43.98293686 154.84545898]
[53.54128647 143.28526306]
[55.37756729 136.14210510]
[63.30035400 131.63774109]
[73.00857544 120.20312500]
[82.71680450 108.76850891]
[80.26939392 101.67906952]
[65.54270172 98.82869720]
[75.37457275 87.50018311]
[72.92716217 80.41074371]
[58.23231125 77.40053558]
[43.53746033 74.39032745]
[28.84261131 71.38011932]
[14.14776039 68.36990356]
[-0.54709017 65.35969543]
[-15.24194050 62.34948730]
[-29.93679237 59.33927917]
[-38.95106888 60.68191147]
[-44.80300522 56.19286728]
[-59.45737076 52.99136353]
[-74.11173248 49.78985596]
[-87.31359100 58.05718994]
[-102.12959290 54.60165024]
[-109.92987061 41.96474838]
[-124.58422852 38.76324463]
[-139.23860168 35.56174088]
[-153.89295959 32.36023331]
[-168.54731750 29.15872955]
[-177.91156006 41.21168137]
[-191.58186340 48.00033569]
[-206.84396362 48.17679214]
[-220.66755676 41.70602417]
[-230.30796814 29.87280273]
[-233.85108948 15.02662373]
[-230.59342957 0.11520591]
[-221.18179321 -11.90077782]
[-207.48487854 -18.63554382]
[-192.22219849 -18.75190163]
[-178.42419434 -12.22674561]
[-168.83044434 -0.35565189]
[-165.34580994 14.50436497]
[-150.69145203 17.70587158]
[-136.03709412 20.90737534]
[-121.38272858 24.10888100]
[-106.72836304 27.31038666]
[-94.36876678 19.07776833]
[-79.46155548 22.11579323]
[-70.91022491 35.13549423]
[-56.25586319 38.33699799]
[-41.60150146 41.53850555]
[-26.92658234 44.64442825]
[-12.23173141 47.65463638]
[2.46311927 50.66484451]
[17.15797043 53.67505646]
[31.85282135 56.68526459]
[46.54767227 59.69547653]
[61.24252319 62.70568466]
[75.93737030 65.71589661]
[64.48459625 56.02909851]
[50.70315933 50.10694504]
[42.87527847 37.31146622]
[43.87770462 22.34499931]
[53.34204865 10.70772076]
[67.79016113 6.67633152]
[81.91236115 11.73236656]
[90.51873779 24.01773262]
[90.44689178 39.01621246]
[94.75671387 53.38372421]
[97.86264038 38.70880508]
[100.96855927 24.03388786]
[104.07448578 9.35896873]
[96.98428345 -9.52546120]
[110.56632233 -23.30460739]
[113.28864288 -38.05550385]
[115.33535004 -52.91521454]
[116.70220184 -67.85280609]
[118.06904602 -82.79040527]
[119.43589020 -97.72799683]
[120.80273438 -112.66559601]
[114.35513306 -127.11339569]
[123.21999359 -139.08267212]
[124.58683777 -154.02026367]
[118.13924408 -168.46807861]
[127.00409698 -180.43734741]
[128.37094116 -195.37493896]
[129.73779297 -210.31254578]
[131.10462952 -225.25013733]
[121.98783875 -238.45103455]
[126.76223755 -253.76718140]
[141.76531982 -259.44937134]
[155.48800659 -251.13867188]
[157.40342712 -235.21037292]
[146.04223633 -223.88328552]
[144.67538452 -208.94569397]
[143.30853271 -194.00810242]
[141.94169617 -179.07051086]
[148.48706055 -165.69113159]
[139.52442932 -152.65342712]
[138.15759277 -137.71583557]
[144.70295715 -124.33646393]
[135.74032593 -111.29875183]
[134.37348938 -96.36115265]
[133.00663757 -81.42356110]
[131.63978577 -66.48596191]
[130.27294922 -51.54837036]
[141.64730835 -61.32711411]
[156.64451599 -61.61689758]
[168.38813782 -52.28485107]
[171.49359131 -37.60983276]
[164.53698730 -24.32052994]
[150.70800781 -18.51025581]
[136.34741211 -22.84309959]
[128.03953552 -35.33318710]
[125.31722260 -20.58229065]
[131.83172607 -12.74204636]
[132.99046326 -2.39387894]
[128.17291260 7.08420038]
[118.74940491 12.46489239]
[115.64347839 27.13981056]
[112.53755951 41.81473160]
[109.43163300 56.48964691]
[117.91246796 104.62027740]
[130.01315308 113.48444366]
[142.11383057 122.34860992]
[154.21452332 131.21278381]
[169.91960144 133.12614441]
[175.61453247 146.88902283]
[187.71520996 155.75320435]
[199.81588745 164.61737061]
[211.91658020 173.48153687]
[224.01725769 182.34570312]
[236.11793518 191.20986938]
[248.21862793 200.07403564]
[261.69085693 192.98457336]
[276.84344482 192.44967651]
[290.66906738 198.52189636]
[300.44705200 209.94783020]
[304.27868652 224.42637634]
[301.45574951 239.07206726]
[313.55642700 247.93624878]
[329.26150513 249.84960938]
[334.95645142 263.61248779]
[347.05712891 272.47665405]
[359.15780640 281.34082031]
[371.25848389 290.20498657]
[387.30404663 284.82333374]
[403.23507690 290.02160645]
[412.82623291 303.55981445]
[412.45431519 319.98062134]
[424.66952515 328.68630981]
[436.88473511 337.39196777]
[449.09994507 346.09765625]
[461.31512451 354.80334473]
[473.53033447 363.50903320]
[489.25903320 365.21749878]
[495.13287354 378.90496826]
[507.34808350 387.61065674]
[519.56329346 396.31634521]
[531.77850342 405.02203369]
[547.75250244 399.43167114]
[563.75000000 404.42181396]
[573.51678467 417.83386230]
[573.35894775 434.25811768]
[585.68658447 442.80383301]
[598.01422119 451.34954834]
[612.22314453 445.34036255]
[627.42138672 447.98953247]
[638.75915527 458.45172119]
[642.61871338 473.38851929]
[637.76843262 488.03359985]
[625.75604248 497.71377563]
[610.41467285 499.34017944]
[596.63964844 492.39379883]
[588.82653809 479.09118652]
[589.46850586 463.67718506]
[577.14086914 455.13146973]
[564.81323242 446.58575439]
[552.68481445 452.13955688]
[539.28796387 450.97088623]
[528.12622070 443.27819824]
[522.17138672 430.97994995]
[523.07281494 417.23721313]
[510.85760498 408.53155518]
[498.64239502 399.82586670]
[486.42718506 391.12017822]
[471.57220459 390.03439331]
[464.82464600 375.72421265]
[452.60946655 367.01855469]
[440.39425659 358.31286621]
[428.17904663 349.60717773]
[415.96383667 340.90148926]
[403.74865723 332.19583130]
[391.54885864 337.59103394]
[378.16839600 336.24786377]
[367.10784912 328.41030884]
[361.31387329 316.03549194]
[362.39431763 302.30569458]
[350.29364014 293.44149780]
[338.19296265 284.57733154]
[326.09228516 275.71316528]
[311.25271606 274.43383789]
[304.69226074 260.03692627]
[292.59158325 251.17276001]
[279.47903442 258.28097534]
[264.51904297 258.99398804]
[250.67631531 253.11694336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[10 159]
[11 158]
[12 157]
[13 156]
[14 40]
[15 39]
[16 38]
[17 36]
[18 35]
[19 34]
[21 30]
[22 29]
[23 28]
[44 92]
[45 91]
[46 90]
[47 89]
[48 88]
[49 87]
[50 86]
[51 85]
[53 84]
[54 83]
[55 82]
[58 79]
[59 78]
[60 77]
[61 76]
[62 75]
[102 155]
[103 154]
[104 153]
[105 152]
[107 148]
[108 147]
[109 139]
[110 138]
[111 137]
[112 136]
[113 135]
[115 133]
[116 132]
[118 130]
[119 129]
[120 128]
[121 127]
[173 237]
[174 236]
[176 234]
[177 233]
[178 232]
[179 231]
[183 226]
[184 225]
[185 224]
[186 223]
[187 222]
[188 221]
[190 219]
[191 218]
[192 217]
[193 216]
[197 211]
[198 210]
[199 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
