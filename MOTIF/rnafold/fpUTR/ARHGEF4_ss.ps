%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUAAACCAAGAUGAGCAGAAGGAAGAGAGCAGGGAAGGAGGCCAGGGUCCGCGCGGCUUGGGCACAGUGCCCUGGCUCAGGGACCUUCCUGGGAGUGAGAACCAC\
) } def
/len { sequence length } bind def

/coor [
[90.05294037 142.18406677]
[90.91732025 127.20944977]
[83.42977905 126.77735901]
[74.54319763 138.86158752]
[65.65660858 150.94581604]
[72.41796112 164.67691040]
[72.01209259 179.97703552]
[64.53227234 193.33033752]
[51.69730377 201.66833496]
[36.45657730 203.07501221]
[22.31229019 197.22712708]
[12.51470375 185.46847534]
[9.31522846 170.50111389]
[13.44908047 155.76443481]
[23.96633148 144.64480591]
[38.45019531 139.69744873]
[53.57238388 142.05923462]
[62.45896530 129.97500610]
[71.34555054 117.89077759]
[74.99005127 90.80564117]
[94.08358002 81.40671539]
[95.37895203 66.46275330]
[96.67432404 51.51879120]
[97.96969604 36.57482910]
[99.26506805 21.63086700]
[85.66237640 12.35900784]
[78.59166718 -2.40379858]
[79.87891388 -18.62818336]
[89.08287811 -31.93774033]
[103.63957214 -38.78953552]
[104.50374603 -53.76462173]
[105.36792755 -68.73970795]
[106.23210907 -83.71479034]
[106.88040161 -98.70077515]
[107.31266785 -113.69454956]
[107.74494171 -128.68830872]
[108.17720795 -143.68208313]
[94.35781097 -149.95104980]
[84.01924133 -161.00352478]
[78.71418762 -175.13398743]
[79.22190094 -190.17825317]
[85.43389893 -203.84484863]
[96.37521362 -214.06408691]
[110.35730743 -219.30149841]
[110.78958130 -234.29525757]
[111.22184753 -249.28903198]
[103.88545227 -263.30645752]
[111.98632050 -275.80545044]
[112.41858673 -290.79922485]
[112.85085297 -305.79299927]
[113.28312683 -320.78677368]
[113.71539307 -335.78054810]
[103.79279327 -348.38696289]
[107.60236359 -363.97113037]
[122.22172546 -370.57824707]
[136.43615723 -363.13986206]
[139.34156799 -347.36209106]
[128.70916748 -335.34826660]
[128.27690125 -320.35449219]
[127.84462738 -305.36071777]
[127.41235352 -290.36697388]
[126.98008728 -275.37319946]
[134.34739685 -262.42822266]
[126.21562195 -248.85676575]
[125.78334808 -233.86299133]
[125.35108185 -218.86921692]
[139.00820923 -212.83499146]
[149.34260559 -202.00236511]
[154.75692749 -188.00057983]
[154.39706421 -172.95205688]
[148.28674316 -159.15069580]
[137.32858276 -148.71220398]
[123.17098236 -143.24981689]
[122.73870850 -128.25604248]
[122.30644226 -113.26227570]
[121.87416840 -98.26850891]
[124.87276459 -91.38751221]
[121.20719147 -82.85060883]
[120.34301758 -67.87552643]
[119.47883606 -52.90044022]
[118.61465454 -37.92535400]
[130.56158447 -31.14253807]
[138.43148804 -19.80097198]
[140.62509155 -6.10446930]
[136.65296936 7.25504875]
[127.24328613 17.62661552]
[114.20903015 22.92623901]
[112.91365814 37.87020111]
[111.61828613 52.81416321]
[110.32291412 67.75812531]
[109.02754211 82.70208740]
[126.07111359 94.49266052]
[126.40621185 121.06820679]
[133.84371948 134.09446716]
[141.28123474 147.12072754]
[156.69245911 147.82609558]
[169.26263428 156.77006531]
[174.98063660 171.09863281]
[172.02188110 186.23962402]
[161.33050537 197.36157227]
[146.31808472 200.91554260]
[131.77502441 195.76744080]
[122.34195709 183.56002808]
[121.02895355 168.18864441]
[128.25497437 154.55824280]
[120.81746674 141.53198242]
[113.37995148 128.50572205]
[105.89241028 128.07362366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[21 91]
[22 90]
[23 89]
[24 88]
[25 87]
[30 81]
[31 80]
[32 79]
[33 78]
[34 76]
[35 75]
[36 74]
[37 73]
[44 66]
[45 65]
[46 64]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[93 107]
[94 106]
[95 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
