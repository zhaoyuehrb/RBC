%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUAGAAUGCAGAUGAGCAAAGUGAGUGGGAGAGGGAAGUCAUUUGUAACAAAAACUCAUUAUUUACAGAUGAGAAAUUUAUAUUGUCAGCGUAAUAUCUGUGAGGCUAAACAGAGCUGGAGAGUAUAUAAAAGCAGUGCGCCUUGGUGCAGAAGUACAGAGCUUAGGACACAGAGCACAUCAAAAGUUCCCAAAGAGGGCUUGCUCUCUCUUCACCUGCUCUGUUCUACAGCACACUACCAGAAGACAGCAGA\
A\
) } def
/len { sequence length } bind def

/coor [
[204.45281982 588.88616943]
[200.46731567 574.42535400]
[187.32427979 562.77801514]
[192.15019226 544.99359131]
[187.98822021 530.58251953]
[183.82624817 516.17150879]
[179.66427612 501.76046753]
[175.50230408 487.34942627]
[171.34034729 472.93838501]
[167.17837524 458.52734375]
[157.88774109 470.30377197]
[142.88912964 470.50827026]
[133.28089905 458.98950195]
[136.17274475 444.27090454]
[149.42481995 437.24362183]
[163.23136902 443.10784912]
[159.95742798 428.46948242]
[156.68348694 413.83114624]
[153.40954590 399.19277954]
[150.13560486 384.55444336]
[140.10508728 377.82583618]
[137.24505615 365.67932129]
[143.61476135 354.48562622]
[140.52000427 339.80834961]
[137.42524719 325.13107300]
[134.33049011 310.45379639]
[131.23573303 295.77651978]
[126.79357910 289.89724731]
[128.19400024 280.90093994]
[125.27889252 266.18695068]
[122.36377716 251.47293091]
[119.44866180 236.75892639]
[116.53355408 222.04490662]
[113.61843872 207.33090210]
[110.70332336 192.61688232]
[100.64011383 181.63594055]
[105.54795074 166.59521484]
[102.63284302 151.88121033]
[80.41856384 148.11608887]
[61.88788605 135.29954529]
[50.52673340 115.84256744]
[35.73051834 118.30672455]
[20.93430519 120.77088928]
[6.13809299 123.23504639]
[-8.65812016 125.69920349]
[-23.45433235 128.16336060]
[-38.25054550 130.62751770]
[-53.04676056 133.09169006]
[-67.84297180 135.55584717]
[-82.63918304 138.02000427]
[-86.03611755 152.83651733]
[-94.84858704 165.22235107]
[-107.73274994 173.28874207]
[-122.72386932 175.80563354]
[-137.53590393 172.38922119]
[-149.91014099 163.56047058]
[-157.95957947 150.66569519]
[-160.45674133 135.67127991]
[-157.02084351 120.86374664]
[-148.17582703 108.50114441]
[-135.27047729 100.46867371]
[-120.27278900 97.99123383]
[-105.46978760 101.44660950]
[-93.11882782 110.30789185]
[-85.10334778 123.22378540]
[-70.30712891 120.75962830]
[-55.51091766 118.29547119]
[-40.71470642 115.83131409]
[-25.91849136 113.36714935]
[-11.12227917 110.90299225]
[3.67393374 108.43883514]
[18.47014618 105.97467041]
[33.26636124 103.51051331]
[48.06257248 101.04635620]
[48.33465958 94.58854675]
[49.40658569 88.21451569]
[51.26175690 82.02293396]
[53.87145233 76.10965729]
[57.19527435 70.56623840]
[61.18175888 65.47847748]
[65.76919556 60.92515945]
[57.61756134 48.33346176]
[49.46592331 35.74176407]
[41.31428909 23.15006828]
[33.16265106 10.55837059]
[25.01101494 -2.03332567]
[11.01636696 -9.41305447]
[10.59487629 -24.30169487]
[2.44324040 -36.89339066]
[-5.78520393 -49.43503189]
[-14.09014988 -61.92614365]
[-22.39509583 -74.41725159]
[-26.22219658 -59.91369247]
[-39.12646866 -52.26649094]
[-53.68625641 -55.87379837]
[-61.52775192 -68.66093445]
[-58.14105988 -83.27361298]
[-45.47397995 -91.30760956]
[-30.81147575 -88.14212036]
[-38.17876053 -101.20822906]
[-45.54604340 -114.27433777]
[-52.91332626 -127.34043884]
[-60.28060913 -140.40655518]
[-75.71022034 -142.05178833]
[-87.20338440 -152.47708130]
[-90.34075928 -167.67367554]
[-83.91595459 -181.79818726]
[-70.39943695 -189.41943359]
[-54.98858643 -187.60688782]
[-43.60918808 -177.05754089]
[-40.63685226 -161.82780457]
[-47.21450424 -147.77383423]
[-39.84722137 -134.70771790]
[-32.47993469 -121.64161682]
[-25.11265373 -108.57551575]
[-17.74536896 -95.50940704]
[-9.90398312 -82.72219849]
[-1.59903753 -70.23108673]
[6.70590782 -57.73997498]
[13.00789547 -53.92116165]
[15.03493690 -45.04502869]
[23.18657303 -32.45333099]
[36.59816360 -25.97424507]
[37.60271072 -10.18496227]
[45.75434875 2.40673470]
[53.90598297 14.99843121]
[62.05762100 27.59012794]
[70.20925903 40.18182373]
[78.36089325 52.77352142]
[83.14312744 47.51792145]
[88.88015747 42.77270889]
[95.51328278 38.69149399]
[102.96070099 35.42053986]
[111.11853027 33.09544754]
[119.86225128 31.83799553]
[126.08589172 18.19005394]
[119.66694641 1.90195215]
[126.88523865 -13.67604256]
[142.82127380 -19.09101295]
[148.87762451 -32.81401062]
[154.93397522 -46.53700638]
[160.99031067 -60.26000595]
[167.04666138 -73.98300171]
[164.74235535 -90.21945190]
[177.81649780 -100.11888885]
[192.81953430 -93.49762726]
[194.31762695 -77.16704559]
[180.76966858 -67.92665100]
[174.71331787 -54.20365524]
[168.65696716 -40.48065948]
[162.60061646 -26.75766182]
[156.54426575 -13.03466511]
[162.83149719 -1.80681217]
[161.49290466 11.18716621]
[152.79364014 21.19092941]
[139.73384094 24.41369820]
[133.51019287 38.06163788]
[139.11231995 43.04824066]
[149.08552551 31.84399414]
[163.32460022 27.12713814]
[160.28976440 41.81719971]
[150.31655884 53.02144623]
[155.91868591 58.00804901]
[168.75358582 50.24496460]
[181.58847046 42.48188019]
[194.42337036 34.71879578]
[195.59638977 19.24612236]
[205.66563416 7.43976831]
[220.75926208 3.83951950]
[235.07348633 9.82974434]
[243.10417175 23.10707855]
[241.76338196 38.56611633]
[231.56665039 50.26254654]
[216.43484497 53.69884491]
[202.18644714 47.55369186]
[189.35156250 55.31677628]
[176.51666260 63.07986069]
[163.68176270 70.84294128]
[165.40808105 78.14156342]
[180.00532532 74.68893433]
[194.60255432 71.23630524]
[209.19979858 67.78367615]
[223.79704285 64.33104706]
[238.39433289 60.87865829]
[241.84648132 75.47601318]
[227.24966431 78.92828369]
[212.65243530 82.38091278]
[198.05519104 85.83354187]
[183.45794678 89.28617096]
[168.86071777 92.73880005]
[170.58703613 100.03742218]
[185.53970337 101.22801208]
[200.49238586 102.41860962]
[213.58483887 93.14678192]
[228.95623779 97.74022675]
[234.81494141 112.67525482]
[226.66665649 126.49499512]
[210.76205444 128.59811401]
[199.30178833 117.37128448]
[184.34910583 116.18068695]
[169.39643860 114.99009705]
[146.15312195 140.60482788]
[117.34684753 148.96609497]
[120.26196289 163.68009949]
[130.53369141 175.71348572]
[125.41733551 189.70176697]
[128.33244324 204.41578674]
[131.24755859 219.12979126]
[134.16267395 233.84381104]
[137.07778931 248.55781555]
[139.99290466 263.27182007]
[142.90802002 277.98583984]
[145.91300964 292.68176270]
[149.00776672 307.35903931]
[152.10252380 322.03631592]
[155.19728088 336.71359253]
[158.29203796 351.39086914]
[170.90600586 364.82452393]
[164.77395630 381.28048706]
[168.04789734 395.91885376]
[171.32183838 410.55718994]
[174.59577942 425.19555664]
[177.86972046 439.83389282]
[181.58940125 454.36538696]
[185.75137329 468.77642822]
[189.91334534 483.18743896]
[194.07531738 497.59848022]
[198.23728943 512.00952148]
[202.39926147 526.42053223]
[206.56123352 540.83160400]
[217.44233704 547.72167969]
[220.62280273 559.78826904]
[214.92814636 570.43988037]
[218.91365051 584.90069580]
[233.99261475 584.62579346]
[248.66603088 588.11029053]
[262.01150513 595.13513184]
[273.19015503 605.25885010]
[281.49923706 617.84490967]
[286.41650391 632.10223389]
[287.63278198 647.13458252]
[285.07162476 661.99700928]
[278.89407349 675.75524902]
[269.48843384 687.54437256]
[257.44592285 696.62347412]
[243.52357483 702.42163086]
[228.59655762 704.57452393]
[213.60317993 702.94671631]
[199.48596191 697.64062500]
[187.13230896 688.98974609]
[177.31877136 677.53784180]
[170.66226196 664.00488281]
[167.58119202 649.24151611]
[168.26924133 634.17572021]
[172.68318176 619.75463867]
[180.54553223 606.88470459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 234]
[2 233]
[4 230]
[5 229]
[6 228]
[7 227]
[8 226]
[9 225]
[10 224]
[16 223]
[17 222]
[18 221]
[19 220]
[20 219]
[23 217]
[24 216]
[25 215]
[26 214]
[27 213]
[29 212]
[30 211]
[31 210]
[32 209]
[33 208]
[34 207]
[35 206]
[37 204]
[38 203]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[88 122]
[89 121]
[90 119]
[91 118]
[92 117]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[135 157]
[136 156]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
[163 178]
[164 177]
[165 176]
[166 175]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
