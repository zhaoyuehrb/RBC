%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NDUFAF7)
} def

/sequence { (\
GUCGGGGCGUGUCUUCUCCCGGAAAUGGUCUAAGCCCCAGCUCCUGGCGGAGCGAGCUAGCCUGCGAAUUUCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.005280357 ubox
1 41 0.046077059 ubox
1 48 0.009503771 ubox
1 57 0.005614577 ubox
1 61 0.025386919 ubox
1 65 0.341838060 ubox
1 69 0.095123599 ubox
1 75 0.020343526 ubox
2 22 0.097448314 ubox
2 23 0.026946581 ubox
2 25 0.004344165 ubox
2 40 0.045861237 ubox
2 47 0.009533736 ubox
2 55 0.012051098 ubox
2 56 0.004592004 ubox
2 60 0.024902303 ubox
2 64 0.268322820 ubox
2 67 0.825315063 ubox
2 68 0.075137035 ubox
2 74 0.017410178 ubox
3 21 0.170064921 ubox
3 22 0.027066462 ubox
3 46 0.015397706 ubox
3 54 0.012959054 ubox
3 64 0.235510776 ubox
3 66 0.884971578 ubox
4 19 0.014691355 ubox
4 20 0.171716557 ubox
4 38 0.106507974 ubox
4 44 0.016946830 ubox
4 45 0.013858181 ubox
4 62 0.265643975 ubox
4 63 0.237876415 ubox
4 65 0.871904825 ubox
4 72 0.006171612 ubox
5 18 0.015861537 ubox
5 19 0.171610336 ubox
5 20 0.026030945 ubox
5 37 0.106633968 ubox
5 43 0.017007313 ubox
5 44 0.013825229 ubox
5 58 0.005703538 ubox
5 61 0.265089941 ubox
5 62 0.237580935 ubox
5 63 0.819678107 ubox
5 71 0.003779817 ubox
6 17 0.016849848 ubox
6 18 0.171393484 ubox
6 19 0.026122055 ubox
6 36 0.106635379 ubox
6 42 0.017035483 ubox
6 43 0.013775895 ubox
6 57 0.004772183 ubox
6 58 0.260670170 ubox
6 61 0.227749159 ubox
6 62 0.905062391 ubox
6 63 0.080574160 ubox
7 13 0.005010984 ubox
7 14 0.004313725 ubox
7 15 0.004326647 ubox
7 16 0.068866693 ubox
7 17 0.127788743 ubox
7 18 0.025974094 ubox
7 35 0.106633606 ubox
7 41 0.021435579 ubox
7 42 0.004448728 ubox
7 57 0.358154879 ubox
7 61 0.907205046 ubox
7 62 0.060846901 ubox
8 27 0.005041248 ubox
8 34 0.106271015 ubox
8 40 0.021468834 ubox
8 54 0.003747509 ubox
8 56 0.358648935 ubox
8 60 0.908978433 ubox
9 26 0.012674158 ubox
9 29 0.004095982 ubox
9 53 0.005393577 ubox
9 57 0.185162296 ubox
9 61 0.025459797 ubox
10 25 0.012599920 ubox
10 27 0.004241978 ubox
10 28 0.004151639 ubox
10 32 0.039574095 ubox
10 39 0.014406892 ubox
10 52 0.003677399 ubox
10 54 0.355877044 ubox
10 56 0.183361434 ubox
10 59 0.070715343 ubox
10 60 0.024510768 ubox
11 26 0.010710633 ubox
11 29 0.016329127 ubox
11 31 0.041873120 ubox
11 35 0.008351169 ubox
11 38 0.014961106 ubox
11 53 0.366979763 ubox
11 57 0.852225369 ubox
11 58 0.061002019 ubox
12 22 0.003381264 ubox
12 23 0.026673187 ubox
12 25 0.011258506 ubox
12 28 0.038839475 ubox
12 51 0.010903544 ubox
12 52 0.062920390 ubox
12 55 0.358151593 ubox
12 56 0.757754609 ubox
13 21 0.003842593 ubox
13 22 0.027567958 ubox
13 27 0.042110377 ubox
13 28 0.060084554 ubox
13 34 0.022521847 ubox
13 50 0.012845762 ubox
13 52 0.809577969 ubox
13 54 0.395327586 ubox
13 56 0.269393291 ubox
14 21 0.026002990 ubox
14 23 0.019963227 ubox
14 24 0.054053047 ubox
14 25 0.010174492 ubox
14 27 0.054330969 ubox
14 28 0.004733490 ubox
14 33 0.026506586 ubox
14 49 0.012413153 ubox
14 50 0.003780298 ubox
14 51 0.813688473 ubox
14 52 0.431664462 ubox
14 55 0.270403694 ubox
14 56 0.006125906 ubox
15 22 0.022686266 ubox
15 23 0.072783138 ubox
15 24 0.009426196 ubox
15 27 0.003788773 ubox
15 28 0.027037540 ubox
15 32 0.024893454 ubox
15 50 0.813152565 ubox
15 51 0.448966810 ubox
15 54 0.261015945 ubox
15 55 0.016923728 ubox
16 21 0.023184894 ubox
16 22 0.073619529 ubox
16 27 0.028135334 ubox
16 28 0.010658457 ubox
16 49 0.812460018 ubox
16 50 0.451942529 ubox
16 52 0.293718612 ubox
16 54 0.018246825 ubox
16 56 0.008848835 ubox
17 21 0.066329884 ubox
17 23 0.020995928 ubox
17 27 0.009018048 ubox
17 28 0.004415530 ubox
17 47 0.011485929 ubox
17 49 0.437240950 ubox
17 50 0.036785276 ubox
17 51 0.293526348 ubox
17 55 0.009982319 ubox
18 22 0.021516005 ubox
18 27 0.006547008 ubox
18 28 0.021585083 ubox
18 46 0.011561392 ubox
18 47 0.855966919 ubox
18 49 0.093272124 ubox
18 50 0.288645224 ubox
18 54 0.009994484 ubox
19 27 0.020887070 ubox
19 28 0.053925696 ubox
19 46 0.855590359 ubox
19 47 0.399376697 ubox
19 49 0.246155443 ubox
19 50 0.016612654 ubox
20 27 0.054593235 ubox
20 46 0.426692058 ubox
20 49 0.022615552 ubox
20 66 0.005085322 ubox
21 26 0.047807712 ubox
21 30 0.003653290 ubox
21 31 0.012508205 ubox
21 36 0.004032973 ubox
21 38 0.020972987 ubox
21 42 0.005105036 ubox
21 43 0.003406372 ubox
21 44 0.966612519 ubox
21 45 0.135585269 ubox
21 48 0.019794445 ubox
21 65 0.005314140 ubox
21 72 0.005302959 ubox
22 30 0.013303958 ubox
22 35 0.004035192 ubox
22 37 0.020982995 ubox
22 41 0.005553843 ubox
22 43 0.969788702 ubox
22 44 0.116957670 ubox
22 71 0.006120326 ubox
22 72 0.117446629 ubox
23 29 0.012766381 ubox
23 42 0.966017685 ubox
23 70 0.006360913 ubox
23 71 0.117836739 ubox
24 69 0.005971788 ubox
24 70 0.117739992 ubox
25 69 0.117269043 ubox
26 39 0.972189611 ubox
26 64 0.014769467 ubox
26 66 0.006988359 ubox
26 68 0.115254154 ubox
27 36 0.096963812 ubox
27 37 0.040877555 ubox
27 38 0.972676227 ubox
27 42 0.004333357 ubox
27 44 0.009594229 ubox
27 62 0.164405238 ubox
27 63 0.037907772 ubox
27 65 0.007908366 ubox
28 35 0.101223108 ubox
28 36 0.049971481 ubox
28 37 0.970830498 ubox
28 41 0.005547007 ubox
28 43 0.009644097 ubox
28 48 0.008123468 ubox
28 61 0.164628511 ubox
28 62 0.038572598 ubox
28 65 0.031644442 ubox
29 34 0.102365374 ubox
29 40 0.004130754 ubox
29 47 0.007989571 ubox
29 60 0.077319559 ubox
29 64 0.031399933 ubox
29 67 0.006657254 ubox
30 40 0.004425168 ubox
30 46 0.007954920 ubox
30 60 0.153317858 ubox
30 66 0.006859287 ubox
31 39 0.004368174 ubox
31 59 0.154175300 ubox
31 64 0.007089728 ubox
32 58 0.108790359 ubox
32 63 0.007367213 ubox
33 42 0.014111239 ubox
33 58 0.133314880 ubox
33 63 0.003694671 ubox
34 41 0.016091524 ubox
34 48 0.005677054 ubox
34 53 0.003587415 ubox
34 57 0.172948331 ubox
34 61 0.010467856 ubox
35 40 0.016042241 ubox
35 47 0.005524430 ubox
35 50 0.004459180 ubox
35 52 0.003565744 ubox
35 56 0.172755322 ubox
35 60 0.010706294 ubox
36 46 0.005338561 ubox
36 49 0.004811703 ubox
37 47 0.026119212 ubox
37 50 0.003408908 ubox
38 46 0.026807049 ubox
38 49 0.003405169 ubox
39 45 0.026907355 ubox
39 58 0.023583873 ubox
40 44 0.026339305 ubox
40 48 0.010945788 ubox
40 53 0.200642203 ubox
40 57 0.024686761 ubox
40 65 0.009708453 ubox
40 75 0.020200386 ubox
41 47 0.010959749 ubox
41 52 0.200743293 ubox
41 56 0.024689849 ubox
41 64 0.009710705 ubox
41 74 0.020369855 ubox
42 46 0.009890506 ubox
42 51 0.200726590 ubox
42 55 0.024678673 ubox
42 67 0.009767485 ubox
42 73 0.019615936 ubox
43 50 0.200752766 ubox
43 54 0.024669772 ubox
43 66 0.010261311 ubox
44 49 0.200410504 ubox
44 52 0.024298612 ubox
44 60 0.013267253 ubox
44 74 0.018762968 ubox
45 51 0.024196378 ubox
45 59 0.013513701 ubox
45 66 0.004051350 ubox
45 73 0.019024552 ubox
46 58 0.013594988 ubox
46 62 0.003382861 ubox
46 65 0.003627736 ubox
46 72 0.019051860 ubox
47 53 0.004119318 ubox
47 57 0.013606748 ubox
47 61 0.003390668 ubox
47 65 0.058882437 ubox
47 71 0.004594614 ubox
48 52 0.004100738 ubox
48 56 0.013604294 ubox
48 60 0.003389620 ubox
48 64 0.059119370 ubox
48 66 0.004678855 ubox
49 63 0.059220546 ubox
49 65 0.005166179 ubox
49 72 0.007254274 ubox
50 62 0.059264402 ubox
50 71 0.007276440 ubox
51 63 0.005095503 ubox
51 70 0.007222704 ubox
52 61 0.059453978 ubox
52 62 0.003640870 ubox
52 69 0.006493964 ubox
53 60 0.059559305 ubox
54 70 0.003632897 ubox
54 72 0.014871358 ubox
55 63 0.006565311 ubox
55 69 0.003834603 ubox
55 71 0.014788719 ubox
56 62 0.006690751 ubox
56 65 0.079387619 ubox
56 70 0.004086061 ubox
56 75 0.011763522 ubox
57 64 0.079473750 ubox
57 74 0.011858238 ubox
58 73 0.011407652 ubox
59 71 0.003705332 ubox
60 70 0.003175564 ubox
60 75 0.018882493 ubox
61 74 0.014576702 ubox
62 74 0.029931729 ubox
63 73 0.034114587 ubox
64 72 0.034368843 ubox
64 75 0.188318503 ubox
65 74 0.191553915 ubox
66 72 0.104185027 ubox
67 71 0.090899090 ubox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 52 0.9500000 lbox
14 51 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
18 47 0.9500000 lbox
19 46 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
showpage
end
%%EOF
