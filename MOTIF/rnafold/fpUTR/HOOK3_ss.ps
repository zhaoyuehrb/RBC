%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCGGCGGGCGUGUCCGAAGUCGCGCGCGGCUGGCGCGCGGUCCCGAGUGAAAGGAGAAGGAGGGGCGCUGGGGGUGACGGUGCGGAGCCGCUGCCAGCGCUGGGCGAGAGUCGGCGGCCGGAUCCGAGGAGCAGGCGGGCCUGAGGCCGAGUCAGCUGCGCGGGCCCCCGGAUCCCCCGACAGAGCGGCGGCGGUGUCUGGCCAGGCGGUAGGCGCUGCCUGGCCGCGGCGGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[308.01171875 141.72213745]
[308.59381104 126.73342896]
[316.79479980 114.17382050]
[330.28384399 107.61293030]
[345.22839355 108.91590881]
[330.29885864 107.46374512]
[315.36932373 106.01158142]
[301.95278931 112.48040009]
[288.96649170 103.44343567]
[274.03692627 101.99127197]
[260.62039185 108.46009064]
[247.63409424 99.42312622]
[232.70455933 97.97096252]
[217.77500916 96.51880646]
[200.78280640 105.77231598]
[184.58804321 93.74515533]
[169.62594604 92.67946625]
[154.66384888 91.61377716]
[139.70175171 90.54808044]
[124.73965454 89.48239136]
[109.77755737 88.41670227]
[122.60700989 93.50580597]
[130.36189270 109.73471832]
[125.00968170 131.53350830]
[103.91026306 148.45280457]
[92.11402130 157.71826172]
[80.31777954 166.98371887]
[68.52153015 176.24917603]
[56.72528839 185.51461792]
[44.92904663 194.78007507]
[33.13280106 204.04553223]
[21.33655930 213.31098938]
[18.00268364 229.00381470]
[3.59101248 236.05244446]
[-10.84305382 229.04978943]
[-14.22693443 213.36766052]
[-3.96480584 201.03607178]
[12.07110500 201.51473999]
[23.86734772 192.24928284]
[35.66359329 182.98384094]
[47.45983505 173.71838379]
[59.25607681 164.45292664]
[71.05232239 155.18746948]
[82.84856415 145.92201233]
[94.64480591 136.65655518]
[91.94347382 129.65992737]
[83.83947754 108.67005157]
[68.87738037 109.73574066]
[53.91528702 110.80143738]
[50.04911041 125.44149780]
[41.63671875 138.03158569]
[29.59062767 147.20602417]
[15.21750546 151.96965027]
[0.07643998 151.80572510]
[-14.19017792 146.73204041]
[-26.03481293 137.29893494]
[-34.17264557 124.52966309]
[-37.72095108 109.80932617]
[-36.29482651 94.73468018]
[-30.04897499 80.94091034]
[-19.66089439 69.92426300]
[-6.25741005 62.87974167]
[8.70757103 60.57147980]
[23.61075783 63.24985886]
[36.83556747 70.62435913]
[46.94746399 81.89503479]
[52.84959412 95.83934021]
[67.81169128 94.77364349]
[82.77378845 93.70795441]
[87.35367584 79.42424011]
[75.80091858 69.85690308]
[64.24816895 60.28956604]
[52.69541550 50.72223282]
[41.14266586 41.15489578]
[29.58991241 31.58756065]
[18.03715897 22.02022552]
[2.47347093 19.17730713]
[-2.39384079 5.10042763]
[-13.94659328 -4.46690798]
[-19.05088615 -5.33337545]
[-22.93449974 -7.81290674]
[-25.18905258 -11.17587852]
[-25.75241661 -14.63613319]
[-36.92550659 -24.64423561]
[-48.09859085 -34.65233994]
[-59.27167892 -44.66044235]
[-75.30501556 -45.21863556]
[-84.74913025 -58.18737793]
[-80.35930634 -73.61815643]
[-65.50303650 -79.67380524]
[-51.57678223 -71.70893860]
[-49.26357651 -55.83352661]
[-38.09048843 -45.82542419]
[-26.91740227 -35.81732178]
[-15.74431515 -25.80922127]
[-4.37925768 -16.01966095]
[7.17349482 -6.45232534]
[21.91085243 -4.29372740]
[27.60449409 10.46747208]
[39.15724564 20.03480721]
[50.70999908 29.60214233]
[62.26275253 39.16947937]
[73.81550598 48.73681259]
[85.36825562 58.30414963]
[96.92101288 67.87148285]
[110.84325409 73.45460510]
[125.80534363 74.52029419]
[140.76744080 75.58599091]
[155.72953796 76.65167999]
[170.69163513 77.71736908]
[185.65373230 78.78305817]
[193.42552185 71.21195984]
[203.86360168 69.19750214]
[213.48902893 73.16593170]
[219.22717285 81.58926392]
[234.15672302 83.04141998]
[249.08625793 84.49358368]
[263.57067871 78.12863922]
[275.48910522 87.06172943]
[290.41864014 88.51389313]
[304.90304565 82.14894867]
[316.82147217 91.08203888]
[331.75103760 92.53420258]
[346.68057251 93.98636627]
[360.84109497 89.03871918]
[371.61770630 78.60490417]
[382.39434814 68.17108154]
[393.17095947 57.73726654]
[403.94757080 47.30345154]
[414.72418213 36.86963272]
[425.50079346 26.43581772]
[429.47784424 18.23696709]
[436.48483276 15.93789291]
[447.39544678 5.64426804]
[452.12365723 -9.45389271]
[466.69079590 -12.55996895]
[477.60140991 -22.85359383]
[478.22305298 -38.41801834]
[489.43460083 -48.70178986]
[504.26907349 -48.01322937]
[515.17968750 -58.30685425]
[526.09027100 -68.60047913]
[536.93408203 -78.96441650]
[547.71075439 -89.39823151]
[558.48736572 -99.83204651]
[562.46435547 -108.03089905]
[569.47137451 -110.32997131]
[580.38195801 -120.62359619]
[591.29260254 -130.91722107]
[590.20275879 -146.51678467]
[599.43688965 -159.13679504]
[614.63488770 -162.81848145]
[628.62072754 -155.82345581]
[634.79071045 -141.45455933]
[630.23156738 -126.49633789]
[617.09600830 -118.01161957]
[601.58618164 -120.00661469]
[590.67559814 -109.71298981]
[579.76501465 -99.41937256]
[568.92114258 -89.05543518]
[558.14453125 -78.62161255]
[547.36791992 -68.18779755]
[544.75427246 -61.29197311]
[536.38391113 -57.68987274]
[525.47326660 -47.39624786]
[514.56268311 -37.10262299]
[514.38751221 -22.25321579]
[503.46926880 -11.65859127]
[487.89501953 -11.94298840]
[476.98443604 -1.64936399]
[473.03659058 12.71252823]
[457.68905640 16.55487251]
[446.77844238 26.84849739]
[435.93463135 37.21243286]
[425.15798950 47.64625168]
[414.38137817 58.08006668]
[403.60476685 68.51388550]
[392.82815552 78.94770050]
[382.05154419 89.38151550]
[371.27493286 99.81533813]
[371.75964355 114.80750275]
[383.18774414 124.52339172]
[394.61584473 134.23927307]
[406.04394531 143.95516968]
[416.09149170 140.48025513]
[426.59576416 141.47033691]
[435.67715454 146.68121338]
[441.73846436 155.11940002]
[443.74566650 165.23101807]
[441.40393066 175.18760681]
[452.44668579 185.33932495]
[463.48944092 195.49102783]
[474.53222656 205.64274597]
[485.57498169 215.79446411]
[496.74807739 225.80256653]
[508.04962158 235.66537476]
[519.35113525 245.52819824]
[530.65270996 255.39102173]
[541.95422363 265.25384521]
[553.25579834 275.11666870]
[564.55731201 284.97949219]
[575.85882568 294.84231567]
[587.16040039 304.70513916]
[598.46191406 314.56793213]
[609.76348877 324.43075562]
[618.26721191 327.70559692]
[621.14630127 334.49487305]
[632.31939697 344.50299072]
[648.47131348 347.33969116]
[653.83569336 362.83663940]
[642.89404297 375.05194092]
[626.90228271 371.41949463]
[622.31127930 355.67608643]
[611.13818359 345.66796875]
[599.90063477 335.73229980]
[588.59912109 325.86947632]
[577.29754639 316.00665283]
[565.99603271 306.14382935]
[554.69451904 296.28103638]
[543.39294434 286.41821289]
[532.09143066 276.55538940]
[520.78985596 266.69256592]
[509.48834229 256.82974243]
[498.18679810 246.96691895]
[486.88525391 237.10409546]
[482.16412354 236.52557373]
[477.75009155 232.98883057]
[475.42327881 226.83723450]
[464.38052368 216.68551636]
[453.33773804 206.53379822]
[442.29498291 196.38209534]
[431.25219727 186.23037720]
[411.88034058 188.45310974]
[396.91012573 175.48629761]
[396.32806396 155.38327026]
[384.89996338 145.66737366]
[373.47186279 135.95149231]
[362.04376221 126.23560333]
[362.90493774 141.21086121]
[355.94900513 154.50051880]
[343.15295410 162.32746887]
[328.15359497 162.46716309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 124]
[6 123]
[7 122]
[9 120]
[10 119]
[12 117]
[13 116]
[14 115]
[16 111]
[17 110]
[18 109]
[19 108]
[20 107]
[21 106]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[47 69]
[48 68]
[49 67]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[78 97]
[79 96]
[83 95]
[84 94]
[85 93]
[86 92]
[125 180]
[126 179]
[127 178]
[128 177]
[129 176]
[130 175]
[131 174]
[133 173]
[134 172]
[136 170]
[137 169]
[140 166]
[141 165]
[142 164]
[143 162]
[144 161]
[145 160]
[147 159]
[148 158]
[149 157]
[181 238]
[182 237]
[183 236]
[184 235]
[190 232]
[191 231]
[192 230]
[193 229]
[194 228]
[195 225]
[196 224]
[197 223]
[198 222]
[199 221]
[200 220]
[201 219]
[202 218]
[203 217]
[204 216]
[205 215]
[207 214]
[208 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
