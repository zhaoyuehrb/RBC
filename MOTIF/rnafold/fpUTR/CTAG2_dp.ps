%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CTAG2)
} def

/sequence { (\
UCUGCCUCCGCAUCCUCGUGGGCCCUGACCUUCUCUCUGAGAGCCGGGCAGAGGCUCCGGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.055565862 ubox
1 52 0.056356087 ubox
1 61 0.025657994 ubox
2 27 0.061631316 ubox
2 51 0.060241923 ubox
2 59 0.003734831 ubox
2 60 0.027358124 ubox
2 62 0.013044758 ubox
3 10 0.016761946 ubox
3 12 0.675611728 ubox
3 27 0.003894921 ubox
3 50 0.060249856 ubox
3 59 0.023944070 ubox
3 61 0.012201082 ubox
4 9 0.026843061 ubox
4 11 0.749974449 ubox
4 23 0.099186138 ubox
4 49 0.060244238 ubox
4 55 0.012211152 ubox
4 58 0.021578570 ubox
4 63 0.407726173 ubox
5 10 0.748052731 ubox
5 22 0.098922163 ubox
5 48 0.060103886 ubox
5 54 0.012469101 ubox
5 60 0.013263423 ubox
5 62 0.290105562 ubox
6 21 0.094346696 ubox
6 22 0.015401346 ubox
6 47 0.059317620 ubox
6 53 0.012467652 ubox
6 59 0.013272358 ubox
6 60 0.011038813 ubox
6 62 0.465719728 ubox
7 20 0.085196448 ubox
7 21 0.003795232 ubox
7 22 0.047160170 ubox
7 46 0.047920622 ubox
7 47 0.003212047 ubox
7 52 0.012048192 ubox
7 59 0.009403860 ubox
7 60 0.003634079 ubox
7 61 0.550604149 ubox
8 20 0.020030551 ubox
8 21 0.082342559 ubox
8 22 0.003562254 ubox
8 46 0.025945600 ubox
8 47 0.004100003 ubox
8 51 0.009102178 ubox
8 59 0.003257187 ubox
8 60 0.551509403 ubox
9 18 0.085304530 ubox
9 20 0.090271889 ubox
9 21 0.003614410 ubox
9 46 0.005657926 ubox
9 59 0.550840145 ubox
10 17 0.082908672 ubox
10 19 0.113163192 ubox
10 23 0.003722142 ubox
10 44 0.038034273 ubox
10 45 0.005350680 ubox
10 49 0.003213637 ubox
10 58 0.540886488 ubox
10 63 0.243011013 ubox
11 18 0.122091364 ubox
11 20 0.055905209 ubox
11 22 0.003701459 ubox
11 43 0.038139176 ubox
11 62 0.242622370 ubox
12 19 0.059099983 ubox
13 18 0.055576569 ubox
13 22 0.011752554 ubox
13 40 0.004280277 ubox
13 42 0.021611484 ubox
13 60 0.018278813 ubox
13 61 0.252245622 ubox
14 20 0.005675008 ubox
14 21 0.078661581 ubox
14 22 0.004343253 ubox
14 39 0.004284018 ubox
14 41 0.015471820 ubox
14 54 0.103667548 ubox
14 59 0.012422412 ubox
14 60 0.253528725 ubox
15 20 0.080342056 ubox
15 21 0.006358683 ubox
15 41 0.032337039 ubox
15 53 0.103818805 ubox
15 59 0.236065853 ubox
15 60 0.103780578 ubox
15 62 0.727537301 ubox
16 20 0.005830059 ubox
16 40 0.035755608 ubox
16 52 0.103759169 ubox
16 59 0.024391300 ubox
16 60 0.207069510 ubox
16 61 0.734407668 ubox
17 39 0.035775358 ubox
17 51 0.102981788 ubox
17 59 0.306473316 ubox
17 60 0.725151291 ubox
18 38 0.033540502 ubox
18 49 0.021939691 ubox
18 58 0.383141376 ubox
18 63 0.007008398 ubox
19 48 0.021426166 ubox
19 50 0.047791392 ubox
19 59 0.235676561 ubox
19 62 0.006782774 ubox
20 30 0.008965238 ubox
20 31 0.012818252 ubox
20 34 0.004812232 ubox
20 35 0.015882844 ubox
20 36 0.018521362 ubox
20 37 0.022653683 ubox
20 49 0.036636281 ubox
20 56 0.005900573 ubox
20 57 0.936553732 ubox
20 58 0.281827717 ubox
21 29 0.009014342 ubox
21 30 0.015018973 ubox
21 33 0.005220721 ubox
21 34 0.015529264 ubox
21 35 0.018835325 ubox
21 36 0.022315584 ubox
21 37 0.003241908 ubox
21 45 0.031386795 ubox
21 55 0.004660094 ubox
21 56 0.940281715 ubox
21 57 0.281622679 ubox
21 64 0.007216634 ubox
22 29 0.015936674 ubox
22 32 0.004229085 ubox
22 33 0.015821349 ubox
22 34 0.015297905 ubox
22 35 0.022038527 ubox
22 44 0.033208748 ubox
22 49 0.092720187 ubox
22 55 0.985430953 ubox
22 56 0.031417243 ubox
22 63 0.013427814 ubox
23 43 0.033111810 ubox
23 48 0.094476256 ubox
23 54 0.985989080 ubox
23 62 0.013462945 ubox
24 47 0.093882100 ubox
24 48 0.036908494 ubox
24 53 0.985862123 ubox
24 54 0.004034794 ubox
24 60 0.014243538 ubox
25 41 0.025817261 ubox
25 46 0.093164133 ubox
25 47 0.038844960 ubox
25 51 0.985678370 ubox
25 53 0.005040210 ubox
25 59 0.014239180 ubox
26 40 0.025383306 ubox
26 46 0.040633412 ubox
26 50 0.985647590 ubox
26 52 0.005595175 ubox
27 33 0.020467511 ubox
27 35 0.007183762 ubox
27 37 0.008922230 ubox
27 45 0.076542713 ubox
27 49 0.976159157 ubox
27 57 0.014254484 ubox
28 32 0.017853734 ubox
28 34 0.007032156 ubox
28 36 0.008594330 ubox
28 56 0.014143265 ubox
29 47 0.561792830 ubox
29 48 0.806506314 ubox
29 54 0.006062792 ubox
30 41 0.015302960 ubox
30 43 0.045660511 ubox
30 46 0.565630019 ubox
30 47 0.806015400 ubox
30 48 0.012008134 ubox
30 53 0.006047975 ubox
30 54 0.013126960 ubox
31 40 0.014213385 ubox
31 41 0.024076490 ubox
31 42 0.033920746 ubox
31 43 0.318247009 ubox
31 46 0.764757132 ubox
31 47 0.012565195 ubox
31 52 0.004628874 ubox
31 53 0.013136319 ubox
32 39 0.012148503 ubox
32 40 0.036467505 ubox
32 41 0.010139411 ubox
32 42 0.560433220 ubox
32 46 0.030539587 ubox
32 52 0.013739154 ubox
33 39 0.037419440 ubox
33 41 0.564057023 ubox
33 43 0.802353929 ubox
33 46 0.006203065 ubox
33 51 0.014285923 ubox
33 62 0.004121930 ubox
34 40 0.563667093 ubox
34 42 0.804376412 ubox
34 50 0.014171556 ubox
34 61 0.003926602 ubox
35 39 0.558939873 ubox
35 41 0.804331395 ubox
35 43 0.131039396 ubox
35 48 0.007633025 ubox
35 60 0.003770411 ubox
35 62 0.111101635 ubox
36 40 0.724614475 ubox
36 42 0.131528227 ubox
36 47 0.006703618 ubox
36 48 0.011912314 ubox
36 61 0.113031470 ubox
37 41 0.130462836 ubox
37 43 0.004780226 ubox
37 46 0.006732923 ubox
37 47 0.013061535 ubox
37 60 0.113251242 ubox
38 42 0.004326392 ubox
38 46 0.013109507 ubox
38 59 0.113171364 ubox
39 45 0.013369251 ubox
39 58 0.113199916 ubox
41 57 0.113320241 ubox
42 56 0.113324827 ubox
43 55 0.113342914 ubox
44 54 0.113343534 ubox
44 60 0.005704711 ubox
45 53 0.113327034 ubox
45 59 0.005732762 ubox
46 58 0.005715921 ubox
47 57 0.005693963 ubox
48 55 0.005726973 ubox
49 54 0.005752422 ubox
53 64 0.060764497 ubox
54 63 0.061295106 ubox
55 62 0.061280488 ubox
56 61 0.056708166 ubox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
