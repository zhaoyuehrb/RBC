%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCGCCGCCGCGGCGCACAGCCCGCGGCCUCCUUCCCCGCCGGCCGCGCUCCGGAGCCUCCGGGCCGCGGUGGAGCGAGGGCCCAGGCGAGGCGAGGGCCGGGCGGCGGGCGCCGGGCCCCGCGGCCGGCACGACGGAGCCCCCGUACGGCCGGCGGCAGCGGUUGGCGGCGGCCCCCGGCCCCCGGCGCGGGAAGCGGCGGCGGGGCGGCGGCGGCGGUGGCGGUGGCGGUGGCGGCGACGGUGGCAGCGC\
C\
) } def
/len { sequence length } bind def

/coor [
[147.23144531 399.80303955]
[144.49641418 385.05450439]
[141.76138306 370.30593872]
[139.02633667 355.55740356]
[136.29130554 340.80886841]
[133.55627441 326.06030273]
[130.82122803 311.31176758]
[128.08619690 296.56323242]
[125.35116577 281.81466675]
[122.61612701 267.06613159]
[119.88109589 252.31758118]
[117.14605713 237.56904602]
[114.41102600 222.82049561]
[111.67598724 208.07194519]
[101.74775696 196.96882629]
[106.83908844 181.98919678]
[104.10404968 167.24066162]
[99.80695343 161.25456238]
[101.42687988 152.29518127]
[98.87232971 137.51431274]
[96.31778717 122.73342896]
[77.55597687 112.59799194]
[73.66017914 89.25741577]
[58.74107742 87.70164490]
[43.82197952 86.14587402]
[28.90287590 84.59011078]
[13.98377514 83.03433990]
[-0.93532604 81.47856903]
[-15.46356773 87.74281311]
[-27.31970024 78.72719574]
[-42.23880386 77.17142487]
[-57.15790176 75.61566162]
[-72.07700348 74.05989075]
[-87.01400757 72.68660736]
[-101.96668243 71.49600983]
[-116.91935730 70.30541229]
[-131.87203979 69.11481476]
[-146.82470703 67.92422485]
[-161.78437805 66.82504272]
[-176.75048828 65.81731415]
[-191.72248840 64.90107727]
[-206.69979858 64.07636261]
[-221.67710876 63.25165176]
[-236.65441895 62.42694473]
[-251.64068604 61.78537369]
[-266.63369751 61.32704163]
[-281.62667847 60.86870956]
[-296.61968994 60.41037750]
[-312.65188599 69.49573517]
[-327.19464111 59.65151596]
[-342.19213867 59.37648773]
[-357.18960571 59.10145950]
[-372.18707275 58.82643509]
[-387.18457031 58.55140686]
[-402.18203735 58.27638245]
[-417.17953491 58.00135422]
[-430.92684937 72.69024658]
[-450.73773193 72.48878479]
[-463.77359009 57.97935104]
[-478.77105713 58.25437927]
[-493.76852417 58.52940750]
[-507.53115845 67.44694519]
[-522.01019287 59.74699783]
[-522.31085205 43.35060883]
[-508.12387085 35.12497711]
[-494.04357910 43.53192902]
[-479.04608154 43.25690079]
[-464.04861450 42.98187256]
[-459.20559692 33.98783493]
[-451.01113892 27.75472450]
[-440.89346313 25.45267296]
[-430.65100098 27.55924606]
[-422.13275146 33.76222610]
[-416.90451050 43.00387573]
[-401.90701294 43.27890396]
[-386.90954590 43.55392838]
[-371.91204834 43.82895660]
[-356.91458130 44.10398102]
[-341.91711426 44.37900925]
[-326.91961670 44.65403748]
[-318.01290894 36.49588394]
[-305.53451538 36.58473969]
[-296.16134644 45.41738129]
[-281.16833496 45.87571335]
[-266.17535400 46.33404541]
[-251.18235779 46.79237747]
[-247.17004395 44.25090408]
[-241.52394104 44.18323135]
[-235.82971191 47.44963074]
[-220.85240173 48.27434158]
[-205.87507629 49.09905243]
[-190.89776611 49.92376328]
[-184.06631470 47.16159821]
[-175.74276733 50.85120010]
[-160.77665710 51.85892868]
[-153.91194153 49.18047333]
[-145.63410950 52.97154617]
[-130.68144226 54.16214371]
[-115.72875977 55.35273743]
[-100.77608490 56.54333496]
[-85.82341003 57.73392868]
[-81.69168091 55.39160156]
[-76.04901123 55.59997559]
[-70.52123260 59.14078903]
[-55.60213470 60.69655609]
[-40.68303299 62.25232697]
[-25.76393127 63.80809402]
[-12.30280399 57.43257141]
[0.62044328 66.55947113]
[15.53954411 68.11523438]
[30.45864487 69.67100525]
[45.37774658 71.22677612]
[60.29684830 72.78254700]
[75.21595001 74.33831787]
[87.95499420 66.41892242]
[93.16179657 52.35160828]
[98.36859894 38.28430176]
[103.57540894 24.21699142]
[108.78221130 10.14968300]
[108.82305145 1.04512370]
[114.13959503 -4.05710554]
[119.51796722 -18.05971718]
[112.11608887 -33.92531967]
[118.36936188 -49.91513824]
[133.94488525 -56.29340744]
[139.15168762 -70.36071777]
[136.68580627 -85.98857880]
[148.35990906 -95.23870087]
[153.56671143 -109.30600739]
[158.77351379 -123.37332153]
[163.98031616 -137.44062805]
[169.18711853 -151.50793457]
[174.39393616 -165.57524109]
[174.43476868 -174.67980957]
[179.75131226 -179.78202820]
[185.12968445 -193.78463745]
[190.42237854 -207.81987000]
[195.62918091 -221.88717651]
[200.83598328 -235.95448303]
[206.04278564 -250.02178955]
[200.67520142 -265.14028931]
[209.27067566 -278.68640137]
[225.23550415 -280.26873779]
[236.32284546 -268.67343140]
[234.02742004 -252.79545593]
[220.11009216 -244.81498718]
[214.90328979 -230.74768066]
[209.69648743 -216.68037415]
[204.48968506 -202.61306763]
[205.11338806 -195.27076721]
[199.13229370 -188.40626526]
[193.75392151 -174.40365601]
[188.46124268 -160.36843872]
[183.25442505 -146.30113220]
[178.04762268 -132.23382568]
[172.84082031 -118.16651154]
[167.63401794 -104.09920502]
[162.42721558 -90.03189850]
[165.26551819 -75.41022491]
[153.21899414 -65.15391541]
[148.01219177 -51.08660126]
[154.97351074 -40.26375580]
[154.43110657 -27.21227455]
[146.35914612 -16.69581985]
[133.52058411 -12.68134403]
[128.14221191 1.32126677]
[122.84951782 15.35648918]
[117.64271545 29.42379761]
[112.43591309 43.49110794]
[107.22910309 57.55841446]
[102.02230072 71.62572479]
[116.59967804 80.33037567]
[122.36943817 94.52497864]
[137.30644226 95.89826965]
[151.75701904 89.45690155]
[163.72247314 98.32691193]
[178.65948486 99.70020294]
[193.59648132 101.07348633]
[208.04707336 94.63211823]
[220.01252747 103.50213623]
[234.94952393 104.87541962]
[249.88653564 106.24870300]
[264.33712769 99.80733490]
[276.30258179 108.67735291]
[291.23956299 110.05063629]
[306.17657471 111.42392731]
[321.12170410 112.70588684]
[336.07437134 113.89648438]
[351.02703857 115.08708191]
[365.39779663 108.46955109]
[377.47079468 117.19264221]
[392.42346191 118.38323975]
[407.37612915 119.57383728]
[420.46859741 110.30200195]
[435.83999634 114.89545441]
[441.69869995 129.83047485]
[433.55041504 143.65022278]
[417.64581299 145.75334167]
[406.18554688 134.52650452]
[391.23287964 133.33592224]
[376.28018188 132.14532471]
[362.97894287 138.84800720]
[349.83645630 130.03974915]
[334.88375854 128.84916687]
[319.93109131 127.65856171]
[313.03414917 130.25289917]
[304.80328369 126.36093140]
[289.86627197 124.98764038]
[274.92929077 123.61435699]
[261.54708862 130.15394592]
[248.51324463 121.18570709]
[233.57624817 119.81242371]
[218.63923645 118.43914032]
[205.25704956 124.97873688]
[192.22320557 116.01049042]
[177.28619385 114.63720703]
[162.34919739 113.26391602]
[148.96701050 119.80351257]
[135.93315125 110.83526611]
[120.99615479 109.46198273]
[116.91840363 115.62483215]
[111.09866333 120.17888641]
[113.65320587 134.95976257]
[116.20775604 149.74063110]
[118.85260010 164.50561523]
[121.58763123 179.25416565]
[131.71148682 191.41221619]
[126.42453003 205.33691406]
[129.15956116 220.08546448]
[131.89460754 234.83399963]
[134.62963867 249.58255005]
[137.36466980 264.33108521]
[140.09971619 279.07965088]
[142.83474731 293.82818604]
[145.56977844 308.57672119]
[148.30480957 323.32528687]
[151.03985596 338.07382202]
[153.77488708 352.82235718]
[156.50991821 367.57092285]
[159.24494934 382.31945801]
[161.97999573 397.06799316]
[171.25578308 402.67797852]
[175.83337402 412.26199341]
[174.42608643 422.56823730]
[167.73448181 430.24353027]
[170.10816956 445.05453491]
[172.48184204 459.86553955]
[174.85551453 474.67651367]
[185.61343384 487.05389404]
[180.01817322 502.46899414]
[163.82565308 505.06405640]
[153.69335938 492.16955566]
[160.04452515 477.05020142]
[157.67083740 462.23919678]
[155.29716492 447.42819214]
[152.92349243 432.61721802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 241]
[2 240]
[3 239]
[4 238]
[5 237]
[6 236]
[7 235]
[8 234]
[9 233]
[10 232]
[11 231]
[12 230]
[13 229]
[14 228]
[16 226]
[17 225]
[19 224]
[20 223]
[21 222]
[23 114]
[24 113]
[25 112]
[26 111]
[27 110]
[28 109]
[30 107]
[31 106]
[32 105]
[33 104]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[39 95]
[40 94]
[41 92]
[42 91]
[43 90]
[44 89]
[45 86]
[46 85]
[47 84]
[48 83]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
[56 74]
[59 68]
[60 67]
[61 66]
[115 171]
[116 170]
[117 169]
[118 168]
[119 167]
[121 166]
[122 165]
[125 161]
[126 160]
[128 158]
[129 157]
[130 156]
[131 155]
[132 154]
[133 153]
[135 152]
[136 151]
[137 149]
[138 148]
[139 147]
[140 146]
[173 220]
[174 219]
[176 217]
[177 216]
[178 215]
[180 213]
[181 212]
[182 211]
[184 209]
[185 208]
[186 207]
[187 205]
[188 204]
[189 203]
[191 201]
[192 200]
[193 199]
[245 256]
[246 255]
[247 254]
[248 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
