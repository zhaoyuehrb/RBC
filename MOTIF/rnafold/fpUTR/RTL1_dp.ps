%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RTL1)
} def

/sequence { (\
GACUGGACGCCAUCACAACCUUACCAAUCUUCAGAAUACACUCCUUUCCAUCCGACGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.599529646 ubox
1 22 0.014397735 ubox
1 29 0.409673207 ubox
1 31 0.010600428 ubox
1 32 0.056350152 ubox
1 43 0.043057924 ubox
1 46 0.007304810 ubox
1 47 0.013552516 ubox
1 48 0.220496376 ubox
1 52 0.228220904 ubox
2 13 0.596100596 ubox
2 21 0.014688302 ubox
2 28 0.404891034 ubox
2 30 0.013594187 ubox
2 31 0.054278181 ubox
2 42 0.042643212 ubox
2 45 0.007933492 ubox
2 46 0.016017163 ubox
2 47 0.220119870 ubox
2 51 0.227560034 ubox
3 34 0.347432075 ubox
4 12 0.640840262 ubox
4 15 0.064308423 ubox
4 17 0.101625276 ubox
4 23 0.006174380 ubox
4 26 0.442553422 ubox
4 33 0.350072203 ubox
4 40 0.032201331 ubox
4 50 0.298659283 ubox
4 54 0.101470126 ubox
4 57 0.007777550 ubox
5 11 0.657000113 ubox
5 14 0.072319639 ubox
5 16 0.109574562 ubox
5 20 0.077402244 ubox
5 21 0.014489649 ubox
5 22 0.005868224 ubox
5 25 0.452631221 ubox
5 29 0.010009431 ubox
5 30 0.036948678 ubox
5 32 0.350178665 ubox
5 39 0.033067866 ubox
5 42 0.004321924 ubox
5 43 0.004339757 ubox
5 44 0.246137350 ubox
5 45 0.006587811 ubox
5 48 0.009896940 ubox
5 49 0.314873740 ubox
5 53 0.125192152 ubox
5 56 0.009251443 ubox
6 10 0.646428477 ubox
6 13 0.049000838 ubox
6 14 0.100325177 ubox
6 19 0.077311269 ubox
6 20 0.016129978 ubox
6 21 0.005014854 ubox
6 22 0.006631780 ubox
6 24 0.450857755 ubox
6 28 0.006853591 ubox
6 29 0.046795039 ubox
6 30 0.006177231 ubox
6 31 0.339649134 ubox
6 32 0.015426937 ubox
6 41 0.004784508 ubox
6 42 0.003757583 ubox
6 43 0.246198859 ubox
6 44 0.006781000 ubox
6 47 0.009732431 ubox
6 48 0.314794379 ubox
6 52 0.125187004 ubox
7 13 0.095359233 ubox
7 21 0.020197326 ubox
7 28 0.043716598 ubox
7 30 0.314530748 ubox
7 31 0.017379294 ubox
7 42 0.234460402 ubox
7 45 0.003328656 ubox
7 46 0.016057866 ubox
7 47 0.296341429 ubox
7 51 0.116262433 ubox
8 54 0.008473767 ubox
8 57 0.008884142 ubox
9 53 0.008365315 ubox
9 56 0.008941890 ubox
12 28 0.020482038 ubox
12 37 0.060892925 ubox
12 51 0.003888514 ubox
13 27 0.020769603 ubox
13 35 0.154325181 ubox
13 36 0.051760833 ubox
13 50 0.005879700 ubox
13 55 0.009273113 ubox
13 58 0.009983299 ubox
14 34 0.161820027 ubox
14 54 0.010004986 ubox
14 57 0.010659715 ubox
17 31 0.050223177 ubox
17 46 0.016769173 ubox
17 47 0.005538302 ubox
18 30 0.047747450 ubox
18 45 0.015817678 ubox
18 46 0.007162883 ubox
20 34 0.149698255 ubox
21 27 0.043294559 ubox
21 33 0.143062507 ubox
21 34 0.021713674 ubox
21 35 0.028683071 ubox
21 36 0.017626151 ubox
21 55 0.007833976 ubox
21 58 0.008997087 ubox
21 59 0.006588988 ubox
22 26 0.039250762 ubox
22 33 0.024492509 ubox
22 34 0.029539053 ubox
22 35 0.018380419 ubox
22 38 0.013166134 ubox
22 54 0.008169087 ubox
22 57 0.009046070 ubox
22 58 0.008597275 ubox
23 37 0.013099293 ubox
26 46 0.010470393 ubox
26 47 0.012119800 ubox
27 37 0.029909859 ubox
27 45 0.010049748 ubox
27 46 0.015064385 ubox
27 51 0.013747489 ubox
28 35 0.120751867 ubox
28 36 0.025788059 ubox
28 50 0.014210140 ubox
28 55 0.073569773 ubox
28 58 0.291593924 ubox
29 34 0.129267267 ubox
29 54 0.080307136 ubox
29 57 0.311022927 ubox
30 36 0.017232183 ubox
30 55 0.028318611 ubox
30 58 0.012169230 ubox
30 59 0.054007322 ubox
31 35 0.016485166 ubox
31 54 0.025942387 ubox
31 55 0.326201112 ubox
31 57 0.009672636 ubox
31 58 0.076265782 ubox
32 54 0.332671558 ubox
32 57 0.078145698 ubox
33 42 0.123662691 ubox
33 45 0.086555249 ubox
33 46 0.015503848 ubox
33 47 0.029011292 ubox
34 41 0.131591195 ubox
34 43 0.202997369 ubox
34 44 0.087425250 ubox
34 45 0.012501919 ubox
34 46 0.035936394 ubox
34 47 0.063719033 ubox
34 48 0.304066649 ubox
34 52 0.304349712 ubox
35 42 0.197161959 ubox
35 45 0.035205518 ubox
35 46 0.072026020 ubox
35 47 0.304291419 ubox
35 51 0.287775914 ubox
36 45 0.074177605 ubox
36 46 0.297350014 ubox
36 51 0.042492683 ubox
37 50 0.055815001 ubox
42 55 0.065459295 ubox
42 58 0.136397871 ubox
43 54 0.070733864 ubox
43 57 0.143219628 ubox
45 55 0.068793241 ubox
45 58 0.041350512 ubox
45 59 0.024756654 ubox
46 54 0.067029806 ubox
46 55 0.042210475 ubox
46 57 0.042410902 ubox
46 58 0.031804055 ubox
46 59 0.216266766 ubox
47 54 0.042391795 ubox
47 55 0.173811188 ubox
47 57 0.026339248 ubox
47 58 0.294327687 ubox
48 54 0.183015542 ubox
48 57 0.301491975 ubox
51 58 0.183770369 ubox
52 57 0.195826446 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
6 10 0.9500000 lbox
showpage
end
%%EOF
