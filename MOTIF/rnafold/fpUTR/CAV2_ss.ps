%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUCGGGACGGCCGGGCUGGGAGCUGGAGCCCACAGCGGGAAGCGGCCGCCGCCCGGGCCUCGCAGGGCUAGGCGAGGCGAGGGGGGGCGGGGCCGGGCGCUACGGGAAGGGGAGGCCGCGCGGACCGGGAGCCGCACCGCGCCAGCCGGGCUGCAGCGGCCGCGCACCAAGGCUGCG\
) } def
/len { sequence length } bind def

/coor [
[55.77537537 332.59487915]
[56.55201721 317.61550903]
[49.06207275 317.22729492]
[43.02416229 330.95840454]
[36.98625565 344.68954468]
[30.94834709 358.42065430]
[24.91043854 372.15176392]
[18.87252998 385.88290405]
[12.83462143 399.61401367]
[17.28942108 415.02615356]
[7.90002966 428.03457642]
[-8.13081551 428.66030884]
[-18.50562286 416.42337036]
[-15.26572704 400.71087646]
[-0.89649910 393.57611084]
[5.14140940 379.84500122]
[11.17931843 366.11386108]
[17.21722603 352.38275146]
[23.25513458 338.65161133]
[29.29304314 324.92050171]
[35.33095169 311.18939209]
[76.67998505 297.99548340]
[77.97299194 283.05130005]
[68.22126770 271.85131836]
[69.31967163 256.67739868]
[81.13335419 246.52482605]
[82.42636108 231.58065796]
[83.71936035 216.63648987]
[85.01236725 201.69232178]
[78.40096283 188.34547424]
[87.29904175 175.26362610]
[88.59204865 160.31945801]
[89.88505554 145.37528992]
[91.17806244 130.43112183]
[92.47106934 115.48695374]
[85.52088165 109.43685913]
[82.66605377 100.64036560]
[84.75396729 91.59651947]
[75.40161896 79.86904907]
[66.04927063 68.14157104]
[56.69692230 56.41410065]
[46.08716583 57.90514755]
[35.89724731 54.86727142]
[27.95773888 47.91648865]
[23.66558838 38.36526871]
[23.73855972 27.97511292]
[28.09606934 18.63176918]
[19.36328888 6.43592787]
[10.63050842 -5.75991344]
[1.89772773 -17.95575523]
[-6.83505249 -30.15159607]
[-14.39590740 -35.32429123]
[-15.61116600 -42.63416290]
[-24.13213730 -54.97891998]
[-32.65310669 -67.32367706]
[-41.17407990 -79.66843414]
[-49.69504929 -92.01319122]
[-58.21602249 -104.35795593]
[-79.08190918 -106.75496674]
[-91.26735687 -123.50151062]
[-87.24380493 -143.51936340]
[-96.59615326 -155.24684143]
[-105.94850159 -166.97431946]
[-115.30084991 -178.70178223]
[-124.65319824 -190.42926025]
[-134.00553894 -202.15672302]
[-143.35789490 -213.88420105]
[-158.85272217 -213.05352783]
[-171.85821533 -221.51736450]
[-177.37351990 -236.02119446]
[-173.27786255 -250.98800659]
[-161.14613342 -260.66275024]
[-145.64320374 -261.32528687]
[-132.73028564 -252.72085571]
[-127.37265015 -238.15805054]
[-131.63041687 -223.23654175]
[-122.27806854 -211.50907898]
[-112.92572021 -199.78160095]
[-103.57337952 -188.05413818]
[-94.22103119 -176.32666016]
[-84.86868286 -164.59918213]
[-75.51633453 -152.87171936]
[-66.29241180 -154.74519348]
[-56.96503448 -153.10621643]
[-48.83329773 -148.14001465]
[-43.04545975 -140.49813843]
[-40.43688583 -131.21330261]
[-41.40966034 -121.55985260]
[-45.87126541 -112.87892151]
[-37.35029221 -100.53416443]
[-28.82932091 -88.18940735]
[-20.30834961 -75.84465027]
[-11.78737926 -63.49989319]
[-3.26640797 -51.15513229]
[5.36078882 -38.88437653]
[14.09356880 -26.68853569]
[22.82634926 -14.49269390]
[31.55912971 -2.29685211]
[40.29190826 9.89898968]
[59.67407990 11.62942886]
[71.75311279 27.27206421]
[68.42439270 47.06175613]
[77.77674103 58.78922653]
[87.12908936 70.51670074]
[96.48143768 82.24417114]
[87.86248016 69.96762085]
[85.18824768 55.20793533]
[88.95204926 40.68781662]
[98.45958710 29.08580017]
[111.95699310 22.54210663]
[126.95441437 22.26384735]
[140.68527222 28.30235863]
[150.61663818 39.54371262]
[154.91645813 53.91421890]
[152.79158020 68.76294708]
[144.63394165 81.35076141]
[131.94841003 89.35559082]
[117.07811737 91.30103302]
[132.04237366 90.26616669]
[147.00663757 89.23130035]
[162.02156067 78.59210968]
[177.48017883 86.87530518]
[192.42434692 85.58229828]
[207.36851501 84.28929138]
[222.31268311 82.99629211]
[237.25685120 81.70328522]
[252.20101929 80.41027832]
[262.35357666 68.59659576]
[277.52752686 67.49819183]
[288.72747803 77.24991608]
[303.67166138 75.95690918]
[318.61581421 74.66390991]
[333.87481689 67.27473450]
[345.19931030 79.89186096]
[336.21020508 94.26657104]
[319.90881348 89.60807037]
[304.96466064 90.90107727]
[290.02050781 92.19408417]
[280.66192627 103.72458649]
[265.52481079 105.24876404]
[253.49401855 95.35444641]
[238.54985046 96.64745331]
[223.60568237 97.94045258]
[208.66151428 99.23345947]
[193.71734619 100.52646637]
[178.77317810 101.81947327]
[170.73721313 110.88274384]
[158.27957153 112.06842804]
[148.04150391 104.19555664]
[133.07723999 105.23042297]
[118.11298370 106.26528931]
[107.41523743 116.77996063]
[106.12223053 131.72412109]
[104.82922363 146.66828918]
[103.53621674 161.61245728]
[102.24320984 176.55662537]
[108.76213074 190.97239685]
[99.95653534 202.98533630]
[98.66352844 217.92950439]
[97.37052917 232.87367249]
[96.07752228 247.81784058]
[105.97183990 259.84863281]
[104.44766235 274.98571777]
[92.91716003 284.34429932]
[91.62415314 299.28848267]
[93.30361938 314.19415283]
[97.88960266 328.47592163]
[102.59866333 342.71759033]
[107.43047333 356.91806030]
[121.71884155 363.67218018]
[126.96762848 378.57940674]
[120.06282043 392.79556274]
[105.10092163 397.88644409]
[90.95855713 390.83172607]
[86.02614594 375.81683350]
[93.22999573 361.74984741]
[88.39818573 347.54937744]
[83.25364685 342.21600342]
[83.60783386 333.06188965]
[79.02185822 318.78012085]
[71.53191376 318.39193726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[22 165]
[23 164]
[26 161]
[27 160]
[28 159]
[29 158]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[38 105]
[39 104]
[40 103]
[41 102]
[47 99]
[48 98]
[49 97]
[50 96]
[51 95]
[53 94]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[118 151]
[119 150]
[120 149]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[130 138]
[131 137]
[132 136]
[166 180]
[167 179]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
