%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCACGCUAAAGCCCCAGAGCCCGACGCGGCAGCCGCGGUAGCGGAGAAGACUGGAGCUCCGAGGAGCUGCAUCUGCGGCAACCUGUGUGCUGACGCUACGUGCCUCCUGGCUCCGACGUAGCUCGCAGCUCCCCAGUCUCACUCCAUUCCUUCCCCACCUGGCGCGCACCUGCUCAAGACCAGGGUCCUGCCAAGCGCUAGGAGGGCGCGUGCCAGGGGCGCUAGGGAACUGCGGAGCGCGCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[39.55994034 379.75921631]
[35.12152863 394.08752441]
[30.68311882 408.41583252]
[26.24470711 422.74417114]
[36.56082916 436.16397095]
[36.83297348 452.92211914]
[27.15212250 466.39953613]
[11.50129890 471.39132690]
[7.24256897 485.77407837]
[11.59657383 501.58465576]
[-0.10987599 513.06903076]
[-15.83418751 508.41308594]
[-19.40053749 492.40643311]
[-7.14017105 481.51535034]
[-2.88144112 467.13259888]
[-11.95005226 457.35406494]
[-15.03376484 444.26794434]
[-11.22467422 431.26150513]
[-1.41340601 421.75579834]
[11.91639614 418.30575562]
[16.35480690 403.97744751]
[20.79321671 389.64910889]
[25.23162651 375.32080078]
[19.60568428 356.80566406]
[34.66686630 343.38174438]
[38.74524689 328.94683838]
[37.54256821 321.67446899]
[42.96606064 314.35736084]
[47.22479248 299.97463989]
[51.48352051 285.59188843]
[55.74225235 271.20913696]
[59.91088867 256.80004883]
[63.98927307 242.36512756]
[58.36277771 231.67512512]
[61.62311935 219.62774658]
[72.55183411 212.80947876]
[76.81056213 198.42674255]
[81.06929779 184.04399109]
[85.32802582 169.66125488]
[89.58675385 155.27851868]
[93.84548187 140.89578247]
[98.10421753 126.51303101]
[86.51998138 121.15296936]
[79.38660431 111.46109772]
[77.91378021 100.25296021]
[81.78009796 90.40926361]
[71.96363068 79.06743622]
[62.14717484 67.72560120]
[52.33071518 56.38377380]
[34.78945923 50.74232864]
[32.18040848 33.37725067]
[22.22276115 22.15917397]
[12.26511669 10.94109440]
[2.30747104 -0.27698535]
[-7.65017414 -11.49506474]
[-17.60781860 -22.71314430]
[-27.56546402 -33.93122482]
[-27.23999977 -18.93475533]
[-35.71143341 -6.55595016]
[-49.80815125 -1.42930198]
[-64.25249481 -5.47417307]
[-73.63665009 -17.17620659]
[-74.44729614 -32.15428543]
[-66.38092804 -44.80077744]
[-52.45751953 -50.38097000]
[-37.88843918 -46.80484009]
[-46.67481232 -58.96212769]
[-55.46118546 -71.11941528]
[-64.24755859 -83.27670288]
[-73.03393555 -95.43399048]
[-81.82030487 -107.59127808]
[-90.60668182 -119.74856567]
[-99.39305115 -131.90585327]
[-109.13067627 -128.05165100]
[-120.23838043 -127.77725220]
[-131.36882019 -131.54434204]
[-141.03153992 -139.30136108]
[-147.78890991 -150.44497681]
[-150.45933533 -163.85595703]
[-162.77941895 -172.41255188]
[-175.09951782 -180.96914673]
[-187.41961670 -189.52572632]
[-199.73971558 -198.08232117]
[-214.78036499 -193.80297852]
[-229.03167725 -200.23988342]
[-235.76463318 -214.35375977]
[-231.80012512 -229.48045349]
[-219.01007080 -238.47760010]
[-203.43354797 -237.09701538]
[-192.42530823 -225.99058533]
[-191.18312073 -210.40242004]
[-178.86302185 -201.84582520]
[-166.54292297 -193.28923035]
[-154.22283936 -184.73265076]
[-141.90274048 -176.17605591]
[-135.96450806 -180.75726318]
[-124.08806610 -189.91967773]
[-118.14984131 -194.50090027]
[-123.29973602 -208.58914185]
[-128.44964600 -222.67738342]
[-133.59953308 -236.76560974]
[-138.74943542 -250.85385132]
[-143.89933777 -264.94210815]
[-149.04924011 -279.03033447]
[-154.55015564 -292.98526001]
[-160.39863586 -306.79812622]
[-166.24711609 -320.61099243]
[-179.65403748 -330.05487061]
[-177.90957642 -346.36096191]
[-162.80828857 -352.75497437]
[-149.88508606 -342.65930176]
[-152.43424988 -326.45947266]
[-146.58576965 -312.64660645]
[-140.73728943 -298.83374023]
[-138.22105408 -297.65484619]
[-136.01387024 -295.42108154]
[-134.51510620 -292.24301147]
[-134.07766724 -288.37197876]
[-134.96099854 -284.18023682]
[-129.81109619 -270.09201050]
[-124.66119385 -256.00375366]
[-119.51129913 -241.91551208]
[-114.36139679 -227.82727051]
[-109.21150208 -213.73902893]
[-104.06159973 -199.65078735]
[-82.18769836 -183.72682190]
[-76.78001404 -159.88101196]
[-87.23576355 -140.69223022]
[-78.44939423 -128.53494263]
[-69.66301727 -116.37765503]
[-60.87664795 -104.22036743]
[-52.09027100 -92.06307983]
[-43.30389786 -79.90579224]
[-34.51752472 -67.74850464]
[-25.73115158 -55.59121323]
[-16.34738541 -43.88887024]
[-6.38973999 -32.67078781]
[3.56790519 -21.45270920]
[13.52554989 -10.23463058]
[23.48319626 0.98344874]
[33.44084167 12.20152760]
[43.39848709 23.41960716]
[55.43516922 24.44520760]
[63.82317352 33.68698120]
[63.67254639 46.56731415]
[73.48900604 57.90914154]
[83.30546570 69.25097656]
[93.12192535 80.59280396]
[116.10269165 82.76712036]
[125.59766388 107.16202545]
[140.57388306 108.00643158]
[155.55009460 108.85083008]
[170.52630615 109.69523621]
[185.50251770 110.53964233]
[196.03169250 97.28633881]
[212.22740173 92.97261810]
[227.64480591 99.10971069]
[236.27072144 113.09040833]
[251.25633240 113.74730682]
[259.94067383 111.00210571]
[266.42504883 114.50736237]
[281.40124512 115.35176849]
[296.37747192 116.19617462]
[311.35369873 117.04058075]
[326.32989502 117.88497925]
[341.30612183 118.72938538]
[356.28231812 119.57379150]
[371.25854492 120.41819000]
[386.23474121 121.26259613]
[401.21096802 122.10700226]
[402.66311646 107.91784668]
[416.27252197 95.41606903]
[430.91415405 92.15674591]
[445.55575562 88.89743042]
[460.19735718 85.63810730]
[466.24865723 71.34958649]
[479.56015015 63.37564468]
[495.01330566 64.78242493]
[506.66610718 75.02898407]
[510.03778076 90.17531586]
[503.83184814 104.39735413]
[490.43466187 112.22641754]
[474.99765015 110.65208435]
[463.45669556 100.27971649]
[448.81509399 103.53903961]
[434.17346191 106.79836273]
[419.53186035 110.05768585]
[419.15640259 125.05298615]
[433.61654663 129.04095459]
[448.07672119 133.02891541]
[462.53686523 137.01689148]
[476.99703979 141.00485229]
[486.07516479 140.26904297]
[491.61260986 145.13427734]
[506.02172852 149.30291748]
[518.18878174 139.67263794]
[533.69403076 139.06681824]
[546.57537842 147.71844482]
[551.87969971 162.30075073]
[547.56738281 177.20657349]
[535.29656982 186.70429993]
[519.78564453 187.14186096]
[506.99890137 178.35102844]
[501.85308838 163.71203613]
[487.44396973 159.54339600]
[473.00906372 155.46501160]
[458.54891968 151.47703552]
[444.08874512 147.48907471]
[429.62860107 143.50111389]
[415.16842651 139.51313782]
[400.36657715 137.08322144]
[385.39035034 136.23881531]
[370.41412354 135.39440918]
[355.43792725 134.55000305]
[340.46170044 133.70559692]
[325.48550415 132.86119080]
[310.50927734 132.01678467]
[295.53305054 131.17239380]
[280.55685425 130.32798767]
[265.58062744 129.48358154]
[250.59942627 128.73291016]
[235.61383057 128.07601929]
[228.31654358 139.23886108]
[216.36341858 145.39347839]
[202.82199097 144.84030151]
[191.22708130 137.61689758]
[184.65811157 125.51585388]
[169.68190002 124.67145538]
[154.70568848 123.82704926]
[139.72947693 122.98264313]
[124.75325775 122.13823700]
[112.48695374 130.77175903]
[108.22822571 145.15451050]
[103.96949768 159.53724670]
[99.71076202 173.91998291]
[95.45203400 188.30271912]
[91.19330597 202.68547058]
[86.93457794 217.06820679]
[91.64180756 234.88290405]
[78.42418671 246.44351196]
[74.34580231 260.87841797]
[75.02478027 269.96099854]
[70.12499237 275.46786499]
[65.86626434 289.85061646]
[61.60753250 304.23336792]
[57.34880066 318.61608887]
[53.18016434 333.02520752]
[49.10177994 347.46011353]
[54.93643570 356.60104370]
[54.79483414 367.22515869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[8 15]
[9 14]
[25 248]
[26 247]
[28 246]
[29 245]
[30 244]
[31 243]
[32 241]
[33 240]
[36 238]
[37 237]
[38 236]
[39 235]
[40 234]
[41 233]
[42 232]
[46 148]
[47 147]
[48 146]
[49 145]
[51 142]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[57 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[98 125]
[99 124]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[105 114]
[106 113]
[107 112]
[150 231]
[151 230]
[152 229]
[153 228]
[154 227]
[158 222]
[159 221]
[161 220]
[162 219]
[163 218]
[164 217]
[165 216]
[166 215]
[167 214]
[168 213]
[169 212]
[170 211]
[172 187]
[173 186]
[174 185]
[175 184]
[188 210]
[189 209]
[190 208]
[191 207]
[192 206]
[194 205]
[195 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
