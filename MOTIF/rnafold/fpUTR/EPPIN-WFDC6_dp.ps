%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EPPIN-WFDC6)
} def

/sequence { (\
UAUAUCCAAGGUGCAGCAGCUGAGCAUUCCAAAUUCGGGAACCACCAGAAAGGCUGGCCUCUCUUCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 13 0.008704929 ubox
4 12 0.010261460 ubox
5 11 0.010350450 ubox
5 40 0.003719431 ubox
6 10 0.010223814 ubox
6 39 0.003971778 ubox
7 22 0.003994412 ubox
7 38 0.003942325 ubox
8 65 0.054327437 ubox
9 21 0.007869118 ubox
9 60 0.932616772 ubox
9 62 0.093818833 ubox
9 64 0.056397562 ubox
9 65 0.009878800 ubox
10 20 0.008556988 ubox
10 21 0.004324263 ubox
10 28 0.017208355 ubox
10 29 0.004807501 ubox
10 30 0.015599852 ubox
10 43 0.009495119 ubox
10 46 0.035572063 ubox
10 59 0.987695784 ubox
10 60 0.079667314 ubox
10 61 0.098373298 ubox
10 62 0.021566942 ubox
10 63 0.055085951 ubox
10 64 0.009896781 ubox
10 66 0.003606345 ubox
11 20 0.004756324 ubox
11 25 0.012022206 ubox
11 27 0.021799352 ubox
11 28 0.003485345 ubox
11 29 0.015426252 ubox
11 42 0.009492795 ubox
11 45 0.035608785 ubox
11 58 0.987924866 ubox
11 59 0.102005520 ubox
11 60 0.076109359 ubox
11 61 0.038411232 ubox
11 62 0.040859437 ubox
11 63 0.009970904 ubox
12 18 0.008489933 ubox
12 19 0.004703381 ubox
12 24 0.011518844 ubox
12 26 0.025841481 ubox
12 41 0.009019218 ubox
12 44 0.035559407 ubox
12 57 0.933881452 ubox
13 17 0.008383401 ubox
13 20 0.010329842 ubox
13 25 0.026883973 ubox
13 43 0.035224618 ubox
13 54 0.016958640 ubox
13 58 0.101990915 ubox
14 19 0.010390721 ubox
14 22 0.018658590 ubox
14 24 0.026641744 ubox
14 53 0.017002797 ubox
14 56 0.986411395 ubox
14 57 0.074257013 ubox
15 21 0.019847496 ubox
15 55 0.997465229 ubox
16 20 0.019596399 ubox
16 25 0.030029968 ubox
16 54 0.998198705 ubox
16 58 0.003583244 ubox
17 24 0.030045838 ubox
17 53 0.997853389 ubox
17 56 0.022155115 ubox
18 55 0.022398017 ubox
19 25 0.036301087 ubox
19 54 0.022437001 ubox
20 24 0.036074958 ubox
20 38 0.023345026 ubox
20 48 0.995648782 ubox
20 52 0.011596485 ubox
20 53 0.022206132 ubox
21 31 0.008615323 ubox
21 37 0.023410573 ubox
21 44 0.006495010 ubox
21 47 0.996014611 ubox
21 51 0.011395016 ubox
21 52 0.021081724 ubox
22 29 0.010719879 ubox
22 30 0.009359924 ubox
22 36 0.024257724 ubox
22 43 0.008290350 ubox
22 46 0.992501877 ubox
22 61 0.006332137 ubox
22 63 0.004176947 ubox
23 28 0.010311668 ubox
23 35 0.023908454 ubox
23 60 0.006342185 ubox
23 62 0.004183530 ubox
24 34 0.019063841 ubox
24 54 0.003205683 ubox
24 58 0.003849742 ubox
24 59 0.005439912 ubox
24 61 0.004094871 ubox
25 57 0.004990383 ubox
26 34 0.005430604 ubox
27 33 0.006649128 ubox
27 39 0.006626269 ubox
27 40 0.513642923 ubox
27 41 0.774671168 ubox
28 32 0.005772438 ubox
28 38 0.005478927 ubox
28 39 0.536886217 ubox
28 40 0.835748954 ubox
29 37 0.005684656 ubox
29 38 0.545789076 ubox
29 39 0.836087686 ubox
29 53 0.005990351 ubox
30 37 0.549483943 ubox
30 38 0.832849700 ubox
30 52 0.008241459 ubox
34 49 0.005869819 ubox
34 50 0.028371476 ubox
35 48 0.006103405 ubox
35 49 0.032402789 ubox
36 48 0.032699968 ubox
37 43 0.003784072 ubox
37 46 0.033435771 ubox
37 60 0.006211408 ubox
37 61 0.005964505 ubox
37 63 0.025081481 ubox
37 65 0.004658884 ubox
38 42 0.003731830 ubox
38 45 0.033604740 ubox
38 46 0.015908904 ubox
38 59 0.006959347 ubox
38 60 0.005615517 ubox
38 62 0.025217502 ubox
38 64 0.005726738 ubox
39 45 0.016266230 ubox
39 58 0.006941832 ubox
39 59 0.005635484 ubox
39 61 0.025387365 ubox
39 63 0.006270621 ubox
40 60 0.024908800 ubox
40 62 0.006138157 ubox
42 53 0.004919602 ubox
42 57 0.027353256 ubox
43 52 0.009257391 ubox
43 56 0.027599651 ubox
44 55 0.027448524 ubox
45 53 0.027882659 ubox
45 57 0.022568938 ubox
46 52 0.028673245 ubox
46 56 0.022950550 ubox
47 55 0.022946843 ubox
47 64 0.033534965 ubox
48 54 0.022891713 ubox
48 63 0.035884623 ubox
48 66 0.007162133 ubox
49 62 0.035122168 ubox
49 65 0.007073391 ubox
50 64 0.006818342 ubox
51 60 0.036121668 ubox
52 59 0.036877984 ubox
52 61 0.003183805 ubox
53 58 0.036651476 ubox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
12 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
20 48 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
showpage
end
%%EOF
