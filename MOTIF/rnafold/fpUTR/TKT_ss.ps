%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:13:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCGAGCCCCGCCUCCUCCCCCUGCCCCGCCUCUCCCAUCCCCGCCCCGCCCCGCCCGGCGACUUAACGCGCCCCCGCCCCGCGCCCGGCCUCGGCAGCCGCCUGUCGCCGCGGGAGCAGCCGCUAUCUCUGUGUGUCCGCGUGUGCGCCCGGUCCCCGCCUGCCGCACC\
) } def
/len { sequence length } bind def

/coor [
[125.50813293 184.40689087]
[114.04450989 194.08084106]
[101.30168152 186.16754150]
[104.88950348 171.60360718]
[103.80088806 156.64315796]
[96.32066345 157.18746948]
[90.23621368 170.89802551]
[84.15175629 184.60858154]
[90.06652832 199.26432800]
[83.80891418 213.77700806]
[69.09144592 219.53649902]
[54.64574051 213.12580872]
[49.04217148 198.34826660]
[55.60524368 183.97114563]
[70.44120026 178.52412415]
[76.52565002 164.81356812]
[82.61010742 151.10301208]
[69.98856354 141.34559631]
[61.42803955 128.90132141]
[57.33450317 115.24445343]
[57.62379456 101.83550262]
[61.76927185 89.96926880]
[68.89352417 80.65055084]
[77.89193726 74.50928497]
[70.82849884 61.27645493]
[63.76505280 48.04362869]
[56.70161057 34.81079865]
[49.51831055 21.64264679]
[42.21574402 8.54026127]
[34.91317749 -4.56212521]
[27.61061096 -17.66451073]
[20.30804443 -30.76689720]
[25.88362694 -16.84163666]
[25.52114296 -1.84601796]
[19.27924156 11.79358101]
[8.16790009 21.87019348]
[-6.01499987 26.75336075]
[-20.97458267 25.65296173]
[-34.29029846 18.74704552]
[-43.80759048 7.15302896]
[-47.98649597 -7.25310612]
[-46.15085220 -22.14036179]
[-38.59767151 -35.09989548]
[-26.54910660 -44.03477478]
[-11.95468426 -47.49928284]
[2.82654667 -44.93189621]
[-11.50513268 -49.35942078]
[-23.84369087 -39.94987488]
[-39.35733414 -39.62347412]
[-52.08074570 -48.50572586]
[-57.12151718 -63.18122101]
[-52.54137039 -78.00694275]
[-40.10145950 -87.28208160]
[-24.58518982 -87.44017029]
[-11.95888233 -78.42041779]
[-7.07760763 -63.69110107]
[7.25407124 -59.26357651]
[13.24884319 -63.77053833]
[25.23838615 -72.78446198]
[31.23315811 -77.29142761]
[30.96078110 -92.28895569]
[30.68840218 -107.28648376]
[30.41602516 -122.28401184]
[30.14364815 -137.28153992]
[29.87127113 -152.27906799]
[16.07175255 -158.70826721]
[6.47122478 -170.44354248]
[2.93243766 -185.12336731]
[6.10521841 -199.82351685]
[15.30790710 -211.63961792]
[28.67294121 -218.26089478]
[28.40056419 -233.25842285]
[27.99202728 -248.25285339]
[27.44736099 -263.24295044]
[26.90269661 -278.23306274]
[14.19325256 -286.93801880]
[9.10601902 -301.28979492]
[13.39437962 -315.71456909]
[25.21286201 -324.74017334]
[24.66819763 -339.73028564]
[24.12353134 -354.72039795]
[11.17238998 -363.26718140]
[5.74990129 -377.80593872]
[9.94112396 -392.74627686]
[22.13444710 -402.34329224]
[37.64128876 -402.90670776]
[50.49895477 -394.21994019]
[55.76340485 -379.62319946]
[51.41035461 -364.72921753]
[39.11363983 -355.26504517]
[39.65830612 -340.27493286]
[40.20296860 -325.28482056]
[52.64531326 -317.14074707]
[57.96923065 -303.06524658]
[53.93698120 -288.38211060]
[41.89280319 -278.77774048]
[42.43746948 -263.78762817]
[42.98213577 -248.79751587]
[46.37949753 -242.20367432]
[43.39809036 -233.53079224]
[43.67046738 -218.53326416]
[57.26711655 -212.40165710]
[66.89279175 -200.92752075]
[70.59725189 -186.35226440]
[67.59384155 -171.55363464]
[58.42576218 -159.47747803]
[44.86879730 -152.55143738]
[45.14117432 -137.55390930]
[45.41355133 -122.55638885]
[45.68592834 -107.55886078]
[45.95830536 -92.56133270]
[46.23068619 -77.56380463]
[33.41043091 -38.06946564]
[40.71299744 -24.96707726]
[48.01556396 -11.86469173]
[55.31813049 1.23769438]
[62.62069702 14.34008026]
[68.64524841 18.66740417]
[69.93444061 27.74735451]
[76.99788666 40.98018265]
[84.06132507 54.21301270]
[91.12477112 67.44584656]
[128.46224976 66.62732697]
[153.66819763 105.80091095]
[168.66757202 105.93710327]
[183.66696167 106.07329559]
[193.68873596 94.06921387]
[209.09095764 91.36633301]
[222.60116577 99.24085999]
[227.84025574 113.97470093]
[222.33448792 128.61097717]
[208.68351746 136.23889160]
[193.33291626 133.25675964]
[183.53076172 121.07267761]
[168.53138733 120.93648529]
[153.53199768 120.80029297]
[149.88072205 127.35148621]
[162.98310852 134.65405273]
[177.70079041 137.55052185]
[179.49391174 152.44296265]
[165.88438416 158.75016785]
[155.68054199 147.75643921]
[142.57815552 140.45387268]
[138.92686462 147.00506592]
[146.93205261 159.69036865]
[154.93722534 172.37568665]
[162.94239807 185.06100464]
[170.94758606 197.74630737]
[178.20056152 203.35896301]
[178.98051453 210.73544312]
[186.75402832 223.56402588]
[204.83627319 232.42132568]
[204.49478149 251.73373413]
[212.72898865 264.27157593]
[220.96319580 276.80944824]
[234.71191406 286.72958374]
[228.98548889 302.68716431]
[212.06629944 301.60202026]
[208.42533875 285.04364014]
[200.19113159 272.50579834]
[191.95692444 259.96792603]
[181.76260376 258.79229736]
[173.74249268 252.04331970]
[170.71754456 241.77778625]
[173.92544556 231.33753967]
[166.15193176 218.50895691]
[158.26226807 205.75148010]
[150.25709534 193.06617737]
[142.25190735 180.38085938]
[134.24673462 167.69555664]
[126.24155426 155.01023865]
[118.76133728 155.55455017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 17]
[7 16]
[8 15]
[24 122]
[25 121]
[26 120]
[27 119]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[46 57]
[47 56]
[60 112]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[71 101]
[72 100]
[73 98]
[74 97]
[75 96]
[79 92]
[80 91]
[81 90]
[124 136]
[125 135]
[126 134]
[144 171]
[145 170]
[146 169]
[147 168]
[148 167]
[150 166]
[151 165]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
