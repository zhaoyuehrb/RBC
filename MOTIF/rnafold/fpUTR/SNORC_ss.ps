%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCAGGCCCAGCCUGGAAAUGGAUGUCAUAAGUGCACAGGGGUCUAGGGAGGCAGAGAGCGAAAGAGGAAACAGGAGCGUUUUAGGAAAGACUAGAGCUGCCUGAGGGUUUGGAUCAAAACUGCUUUAAAAGUCCUUCUUCAACAAGCACUGAGCACCUACUCCGGGCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[14.68990517 797.69757080]
[8.15408993 811.77099609]
[-5.42201424 819.28558350]
[-20.81811714 817.35180664]
[-32.11410522 806.71319580]
[-34.96643829 791.46051025]
[-28.27833557 777.45874023]
[-14.62151241 770.09191895]
[-12.75214005 755.20880127]
[-10.88276768 740.32574463]
[-20.19453239 728.75744629]
[-18.51073647 713.63726807]
[-6.31365490 703.94866943]
[-4.44428205 689.06561279]
[-2.57490969 674.18255615]
[-0.70553720 659.29949951]
[1.16383529 644.41644287]
[3.03320789 629.53338623]
[4.90258026 614.65032959]
[-6.07061481 604.61401367]
[-9.06533813 589.86627197]
[-2.72773004 576.02111816]
[10.70234394 568.47534180]
[12.57171726 553.59228516]
[10.27807713 546.54089355]
[14.60958195 538.46112061]
[16.74430466 523.61383057]
[18.87902641 508.76647949]
[10.19950867 501.30364990]
[6.17252350 490.46044922]
[7.91240263 478.90377808]
[15.09959698 469.53631592]
[26.03182983 464.76757812]
[28.69512749 450.00592041]
[31.35842514 435.24423218]
[34.02172470 420.48257446]
[36.68502045 405.72091675]
[23.89586830 393.57968140]
[20.90453720 376.04174805]
[29.08900070 360.06842041]
[45.35310745 352.11441040]
[47.48782730 337.26708984]
[49.62255096 322.41976929]
[51.75727463 307.57244873]
[49.92069244 304.52688599]
[49.48672867 300.43206787]
[50.93600464 295.96572876]
[54.42426300 291.99597168]
[57.35061646 277.28417969]
[60.27697372 262.57241821]
[63.20332718 247.86064148]
[66.12968445 233.14884949]
[54.14987946 224.26348877]
[47.18729019 211.00332642]
[46.67032623 195.97357178]
[52.75505829 182.15342712]
[64.28363800 172.30563354]
[79.00421906 168.42417908]
[81.93057251 153.71240234]
[84.85693359 139.00062561]
[87.78328705 124.28884125]
[90.70964050 109.57706451]
[86.17082977 123.87388611]
[76.30519104 135.17297363]
[62.75093460 141.59808350]
[47.75875473 142.08232117]
[33.81811905 136.54528809]
[23.24389267 125.90641022]
[17.79193687 111.93228912]
[18.36755371 96.94333649]
[24.87516403 83.42849731]
[36.23416901 73.63191223]
[50.55839539 69.18032837]
[65.46861267 70.81272125]
[66.53870392 55.85093689]
[67.60878754 40.88915634]
[68.67887878 25.92737389]
[69.61538696 10.95663738]
[70.41825104 -4.02186060]
[71.22111511 -19.00035858]
[68.55087280 -25.10574722]
[69.27933502 -30.78300476]
[72.32940674 -34.49624634]
[73.66637421 -49.43654633]
[75.00334930 -64.37684631]
[76.34031677 -79.31713867]
[77.67728424 -94.25743866]
[67.35147858 -106.22210693]
[68.59362793 -121.97750092]
[80.66679382 -132.17623901]
[96.40818024 -130.76757812]
[106.47869873 -118.58726501]
[104.90369415 -102.86164856]
[92.61758423 -92.92047119]
[91.28061676 -77.98017120]
[89.94364166 -63.03987122]
[88.60667419 -48.09957504]
[87.26970673 -33.15927505]
[86.19961548 -18.19749451]
[85.39675140 -3.21899652]
[84.59388733 11.75950146]
[87.38472748 18.62931061]
[83.64065552 26.99746132]
[82.57057190 41.95924377]
[81.50048065 56.92102432]
[80.43039703 71.88280487]
[86.84609222 75.76724243]
[99.67747498 83.53612518]
[106.09317017 87.42056274]
[118.85471344 79.53747559]
[131.61625671 71.65438843]
[144.37779236 63.77130127]
[157.13934326 55.88821411]
[160.52951050 40.45182037]
[173.88676453 32.00435638]
[189.28643799 35.55754852]
[197.59222412 49.00335693]
[193.87640381 64.36461639]
[180.34353638 72.52776337]
[165.02243042 68.64975739]
[152.26087952 76.53284454]
[139.49934387 84.41593170]
[126.73780060 92.29901886]
[113.97625732 100.18210602]
[105.42141724 112.50341797]
[102.49506378 127.21519470]
[99.56871033 141.92697144]
[96.64235687 156.63874817]
[93.71600342 171.35054016]
[105.83067322 180.56985474]
[112.71310425 194.07981873]
[113.04592896 209.17649841]
[106.81667328 222.86434937]
[95.30963898 232.45066833]
[80.84146118 236.07521057]
[77.91510773 250.78698730]
[74.98875427 265.49877930]
[72.06239319 280.21054077]
[69.13603973 294.92233276]
[66.60459900 309.70718384]
[64.46987152 324.55450439]
[62.33515167 339.40182495]
[60.20042801 354.24914551]
[70.26267242 361.72869873]
[76.14443207 372.71911621]
[76.77859497 385.09591675]
[72.10578156 396.49615479]
[63.07392883 404.76959229]
[51.44668961 408.38418579]
[48.78339005 423.14587402]
[46.12009430 437.90753174]
[43.45679474 452.66918945]
[40.79349899 467.43087769]
[52.18591690 482.53622437]
[49.00745010 500.86395264]
[33.72634888 510.90121460]
[31.59162521 525.74853516]
[29.45690346 540.59588623]
[27.45477676 555.46166992]
[25.58540344 570.34472656]
[36.73217392 580.97747803]
[39.44892502 595.95989990]
[32.90001678 609.50891113]
[19.78563881 616.51965332]
[17.91626740 631.40270996]
[16.04689407 646.28576660]
[14.17752171 661.16882324]
[12.30814934 676.05194092]
[10.43877697 690.93499756]
[8.56940460 705.81805420]
[17.99155807 718.22210693]
[15.88373470 733.28900146]
[4.00029182 742.19512939]
[2.13091922 757.07818604]
[0.26154664 771.96124268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[23 160]
[24 159]
[26 158]
[27 157]
[28 156]
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[41 143]
[42 142]
[43 141]
[44 140]
[48 139]
[49 138]
[50 137]
[51 136]
[52 135]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[74 106]
[75 105]
[76 104]
[77 103]
[78 101]
[79 100]
[80 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
