%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CEACAM8)
} def

/sequence { (\
AGCACAAAAGGAGGAAGGACAGCACAGCUGACAGCCGUGCUCAGAAAGUUUCUGGAUCCCAGGCUCAUCUCCACAGAGGAGAACACGCAGGCAGCAGAGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.371138761 ubox
1 65 0.008964606 ubox
2 23 0.007648079 ubox
2 40 0.426633804 ubox
2 49 0.003247894 ubox
2 64 0.010364557 ubox
2 88 0.016684120 ubox
2 92 0.017195540 ubox
2 95 0.023307456 ubox
3 22 0.007666583 ubox
3 39 0.426877108 ubox
3 48 0.003588645 ubox
3 63 0.010379027 ubox
3 87 0.016684320 ubox
3 91 0.017182387 ubox
3 94 0.023306934 ubox
4 38 0.426588431 ubox
4 49 0.005963956 ubox
5 37 0.426136673 ubox
5 48 0.007401610 ubox
9 41 0.023371721 ubox
9 53 0.009323758 ubox
10 36 0.162524273 ubox
10 40 0.024659112 ubox
10 41 0.007967106 ubox
10 42 0.037727832 ubox
10 52 0.010045263 ubox
10 53 0.003845765 ubox
10 59 0.032586519 ubox
10 60 0.014411279 ubox
10 102 0.024130072 ubox
11 35 0.162490752 ubox
11 40 0.008629761 ubox
11 41 0.019440957 ubox
11 42 0.235706766 ubox
11 50 0.003797996 ubox
11 51 0.010600781 ubox
11 52 0.004519475 ubox
11 58 0.032763980 ubox
11 59 0.013935030 ubox
11 66 0.045110261 ubox
11 101 0.017321675 ubox
12 29 0.011077068 ubox
12 41 0.234365423 ubox
12 49 0.004247596 ubox
12 50 0.010938005 ubox
12 51 0.004644300 ubox
12 53 0.004753680 ubox
12 57 0.031994466 ubox
12 65 0.045225679 ubox
13 28 0.011155211 ubox
13 29 0.008494267 ubox
13 36 0.385683968 ubox
13 40 0.231173303 ubox
13 41 0.004921811 ubox
13 42 0.045020824 ubox
13 49 0.011015471 ubox
13 50 0.004799660 ubox
13 52 0.005403036 ubox
13 53 0.009998219 ubox
13 58 0.008887470 ubox
13 59 0.018899894 ubox
13 60 0.010309902 ubox
13 64 0.045200268 ubox
13 102 0.023496036 ubox
14 28 0.008536798 ubox
14 35 0.385791399 ubox
14 40 0.005759287 ubox
14 41 0.023535724 ubox
14 42 0.068094449 ubox
14 49 0.004885621 ubox
14 51 0.005561222 ubox
14 52 0.010175045 ubox
14 57 0.005912059 ubox
14 58 0.019224424 ubox
14 59 0.010063704 ubox
14 101 0.017086073 ubox
15 41 0.053313235 ubox
15 50 0.005650977 ubox
15 51 0.010107589 ubox
15 57 0.018068085 ubox
16 29 0.031121269 ubox
16 41 0.014929244 ubox
16 49 0.005621301 ubox
16 50 0.009603842 ubox
16 53 0.023955529 ubox
17 28 0.031307614 ubox
17 29 0.024563872 ubox
17 36 0.242771705 ubox
17 40 0.017141104 ubox
17 41 0.006470989 ubox
17 42 0.140143298 ubox
17 49 0.009149680 ubox
17 51 0.007130071 ubox
17 52 0.024037412 ubox
17 53 0.004907074 ubox
17 59 0.039541242 ubox
17 60 0.027932701 ubox
17 102 0.022537238 ubox
18 28 0.024593875 ubox
18 35 0.242383639 ubox
18 40 0.003757126 ubox
18 41 0.072901071 ubox
18 42 0.251960488 ubox
18 50 0.016760936 ubox
18 51 0.020405659 ubox
18 52 0.004933454 ubox
18 58 0.039764524 ubox
18 59 0.027733012 ubox
18 101 0.015995366 ubox
19 38 0.016865641 ubox
19 41 0.193028842 ubox
19 49 0.021670294 ubox
19 50 0.015911410 ubox
19 51 0.004679325 ubox
19 57 0.036452960 ubox
20 30 0.479458623 ubox
20 37 0.016825009 ubox
20 48 0.025253099 ubox
21 29 0.482648819 ubox
21 41 0.790993057 ubox
22 28 0.482966683 ubox
22 35 0.016882418 ubox
22 40 0.872660404 ubox
23 27 0.479457908 ubox
23 30 0.039217343 ubox
23 34 0.016895562 ubox
23 39 0.873275147 ubox
24 29 0.033449262 ubox
24 38 0.873071487 ubox
25 37 0.871504443 ubox
27 35 0.872569967 ubox
27 95 0.003497770 ubox
28 34 0.872671264 ubox
28 44 0.014794135 ubox
28 94 0.003501432 ubox
29 33 0.786176446 ubox
29 43 0.014870342 ubox
29 93 0.003495669 ubox
30 36 0.004500046 ubox
30 42 0.014902624 ubox
30 92 0.003255205 ubox
31 38 0.006230938 ubox
31 41 0.014338951 ubox
32 37 0.006531612 ubox
32 39 0.014419808 ubox
33 38 0.013843665 ubox
33 41 0.009010862 ubox
33 65 0.003750816 ubox
34 40 0.010704892 ubox
34 64 0.004027915 ubox
34 92 0.007265075 ubox
35 39 0.010642218 ubox
35 63 0.004030950 ubox
35 91 0.007303665 ubox
36 62 0.004028224 ubox
36 90 0.007286844 ubox
38 89 0.006688340 ubox
39 88 0.006974992 ubox
40 87 0.006966325 ubox
41 47 0.006332410 ubox
41 55 0.029600165 ubox
41 56 0.003592507 ubox
42 54 0.062226348 ubox
42 55 0.003683551 ubox
43 53 0.062443605 ubox
44 52 0.062481594 ubox
45 51 0.061627431 ubox
46 50 0.046968776 ubox
47 65 0.006139480 ubox
48 64 0.006684455 ubox
48 101 0.992663922 ubox
49 63 0.005915578 ubox
49 100 0.995910777 ubox
50 99 0.995906229 ubox
51 63 0.010106362 ubox
51 98 0.996798427 ubox
52 62 0.017330792 ubox
52 97 0.997424415 ubox
53 61 0.017864855 ubox
53 96 0.997148442 ubox
54 60 0.018746942 ubox
54 92 0.003446577 ubox
54 95 0.996743084 ubox
55 59 0.018474949 ubox
55 66 0.004985189 ubox
56 65 0.004934203 ubox
57 91 0.011755345 ubox
58 90 0.012994470 ubox
58 91 0.558926010 ubox
58 97 0.003262288 ubox
59 90 0.554688467 ubox
59 91 0.819746894 ubox
60 90 0.823219199 ubox
62 102 0.043654667 ubox
63 88 0.984275450 ubox
63 92 0.011154158 ubox
63 101 0.044082894 ubox
64 81 0.007941338 ubox
64 87 0.983318125 ubox
64 91 0.011121481 ubox
64 99 0.045645552 ubox
65 80 0.008639049 ubox
65 82 0.059147719 ubox
65 90 0.010418496 ubox
65 98 0.045663924 ubox
65 100 0.003214642 ubox
66 79 0.008523617 ubox
66 81 0.059404543 ubox
66 97 0.045618681 ubox
66 99 0.003285267 ubox
68 77 0.007481209 ubox
68 79 0.057871777 ubox
68 80 0.005438502 ubox
68 82 0.978781141 ubox
69 76 0.007889852 ubox
69 78 0.059398844 ubox
69 79 0.004699889 ubox
69 81 0.998005786 ubox
70 75 0.007211325 ubox
70 77 0.059442114 ubox
70 78 0.003494634 ubox
70 80 0.998029496 ubox
71 76 0.059240428 ubox
71 78 0.003245868 ubox
71 79 0.998174551 ubox
72 78 0.997538099 ubox
87 95 0.057212257 ubox
88 94 0.057246163 ubox
90 102 0.006160048 ubox
91 101 0.006193707 ubox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
29 33 0.9500000 lbox
48 101 0.9500000 lbox
49 100 0.9500000 lbox
50 99 0.9500000 lbox
51 98 0.9500000 lbox
52 97 0.9500000 lbox
53 96 0.9500000 lbox
54 95 0.9500000 lbox
59 91 0.9500000 lbox
60 90 0.9500000 lbox
63 88 0.9500000 lbox
64 87 0.9500000 lbox
68 82 0.9500000 lbox
69 81 0.9500000 lbox
70 80 0.9500000 lbox
71 79 0.9500000 lbox
72 78 0.9500000 lbox
showpage
end
%%EOF
