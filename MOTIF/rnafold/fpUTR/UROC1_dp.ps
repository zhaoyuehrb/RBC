%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UROC1)
} def

/sequence { (\
AGUCUCUUCCUGGCCUCCCCACAGUGCUGGCCUCUGCCUCCAUCUCAGUCACAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.043500027 ubox
1 8 0.018032877 ubox
1 11 0.086826637 ubox
1 16 0.063774831 ubox
1 28 0.069916354 ubox
1 33 0.005339194 ubox
1 35 0.012877586 ubox
1 39 0.016964164 ubox
1 45 0.048342702 ubox
2 6 0.048937235 ubox
2 7 0.019322456 ubox
2 10 0.092372606 ubox
2 14 0.422371907 ubox
2 15 0.061961165 ubox
2 22 0.023439160 ubox
2 27 0.074120717 ubox
2 31 0.022520467 ubox
2 32 0.005573316 ubox
2 34 0.013590782 ubox
2 37 0.037100461 ubox
2 38 0.018934941 ubox
2 43 0.022769096 ubox
2 44 0.055402982 ubox
2 49 0.022695070 ubox
2 52 0.211588007 ubox
2 54 0.028088307 ubox
3 13 0.424164494 ubox
3 21 0.019780690 ubox
3 26 0.073475878 ubox
3 30 0.022427868 ubox
3 36 0.036622915 ubox
3 42 0.023952503 ubox
3 48 0.012783181 ubox
3 51 0.208082374 ubox
3 53 0.027331144 ubox
4 12 0.424541295 ubox
4 13 0.053159101 ubox
4 24 0.015660543 ubox
4 29 0.022353679 ubox
4 30 0.005197683 ubox
4 48 0.107709975 ubox
5 12 0.044905284 ubox
5 13 0.039532139 ubox
5 23 0.015550319 ubox
5 29 0.004904603 ubox
5 47 0.104173531 ubox
6 12 0.058073949 ubox
6 13 0.036068635 ubox
6 24 0.077022217 ubox
6 29 0.003232374 ubox
6 30 0.003695972 ubox
6 48 0.194401984 ubox
7 12 0.035742486 ubox
7 13 0.003521556 ubox
7 23 0.077923153 ubox
7 24 0.010937671 ubox
7 29 0.003635721 ubox
7 47 0.186595793 ubox
7 48 0.008670448 ubox
8 12 0.003618168 ubox
8 23 0.022024000 ubox
8 47 0.011147582 ubox
9 29 0.003788193 ubox
9 30 0.035261653 ubox
10 24 0.136839303 ubox
10 29 0.035482220 ubox
10 30 0.068352256 ubox
10 48 0.135949847 ubox
11 21 0.293783276 ubox
11 23 0.147855232 ubox
11 29 0.069188091 ubox
11 36 0.008116056 ubox
11 42 0.047872432 ubox
11 47 0.136590898 ubox
11 51 0.122750736 ubox
11 53 0.018837543 ubox
12 18 0.066345124 ubox
12 19 0.097609556 ubox
12 20 0.330587784 ubox
12 22 0.149188220 ubox
12 28 0.141660527 ubox
12 32 0.369843314 ubox
12 33 0.004125346 ubox
12 34 0.004174597 ubox
12 35 0.006341105 ubox
12 38 0.661403471 ubox
12 39 0.007336400 ubox
12 40 0.005216778 ubox
12 41 0.042415406 ubox
12 44 0.007217530 ubox
12 45 0.012298724 ubox
12 46 0.127813483 ubox
12 50 0.138705451 ubox
12 52 0.020855693 ubox
13 17 0.065756257 ubox
13 18 0.098436751 ubox
13 19 0.328630682 ubox
13 25 0.005862215 ubox
13 27 0.153369276 ubox
13 31 0.370619742 ubox
13 32 0.003766588 ubox
13 34 0.006586822 ubox
13 37 0.663204110 ubox
13 38 0.006522694 ubox
13 40 0.038598581 ubox
13 43 0.004055031 ubox
13 44 0.057800454 ubox
13 45 0.086716607 ubox
13 49 0.138612143 ubox
14 24 0.006394087 ubox
14 26 0.153470003 ubox
14 30 0.370056067 ubox
14 36 0.662438685 ubox
14 48 0.134382983 ubox
15 24 0.154208369 ubox
15 29 0.369213077 ubox
15 48 0.041481183 ubox
16 23 0.146195508 ubox
16 47 0.051246811 ubox
17 29 0.003282338 ubox
17 30 0.009554698 ubox
18 29 0.009307120 ubox
18 30 0.030792186 ubox
19 29 0.023059166 ubox
19 30 0.665820991 ubox
20 26 0.109551224 ubox
20 29 0.667739093 ubox
21 25 0.089084240 ubox
21 28 0.667461872 ubox
21 49 0.084355055 ubox
22 29 0.014443089 ubox
22 36 0.015034834 ubox
22 48 0.091457933 ubox
23 28 0.013850519 ubox
23 35 0.015180236 ubox
23 39 0.059890111 ubox
23 45 0.206400558 ubox
24 31 0.004356152 ubox
24 34 0.015101671 ubox
24 38 0.062492292 ubox
24 43 0.417536039 ubox
24 44 0.218883976 ubox
24 52 0.330151375 ubox
24 54 0.072620054 ubox
25 30 0.004561546 ubox
25 42 0.494999091 ubox
25 47 0.006407233 ubox
25 51 0.330790141 ubox
25 53 0.074125460 ubox
26 37 0.065518589 ubox
26 41 0.504436155 ubox
26 46 0.006953298 ubox
26 49 0.076689356 ubox
26 50 0.324826693 ubox
26 52 0.074192221 ubox
27 36 0.065525749 ubox
27 48 0.331858085 ubox
28 42 0.012966547 ubox
28 47 0.330961906 ubox
28 51 0.072665365 ubox
28 53 0.005400475 ubox
29 35 0.010538943 ubox
29 38 0.561829963 ubox
29 39 0.004364861 ubox
29 40 0.003336389 ubox
29 41 0.015754575 ubox
29 44 0.004356651 ubox
29 45 0.009166246 ubox
29 46 0.288876396 ubox
29 50 0.073743090 ubox
29 52 0.007186317 ubox
30 34 0.011382701 ubox
30 37 0.569463045 ubox
30 38 0.007186053 ubox
30 39 0.004162696 ubox
30 40 0.015913180 ubox
30 43 0.005797253 ubox
30 44 0.057619032 ubox
30 45 0.218984810 ubox
30 49 0.073578707 ubox
31 36 0.567135493 ubox
31 48 0.071564163 ubox
32 48 0.011574806 ubox
33 47 0.014628943 ubox
34 48 0.148786511 ubox
35 42 0.130880859 ubox
35 47 0.151593286 ubox
35 51 0.071065985 ubox
35 53 0.024962214 ubox
36 41 0.134873665 ubox
36 46 0.150682803 ubox
36 49 0.030226071 ubox
36 50 0.080036059 ubox
36 52 0.028056672 ubox
37 48 0.037249506 ubox
38 48 0.086004681 ubox
39 47 0.083893624 ubox
42 49 0.033301139 ubox
43 48 0.033094083 ubox
48 54 0.056042649 ubox
49 53 0.051129821 ubox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
showpage
end
%%EOF
