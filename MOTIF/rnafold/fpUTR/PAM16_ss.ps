%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCCGGUGGCCCGCCCUUAGACUGAGGCAAUGCGCAUGCCCAGCGCCGUAUCGCGCACGCGCUCUCUGCGGCUUUCCUUGACCUCUGACCCGCCGACCACGCUUGAUCCCCGGCCGCGGGGCCAGGAAGUCGGAGUUUGAGCCCCGGAGGCAGAGCGGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[107.95246124 228.28746033]
[98.71199036 240.90283203]
[83.51214600 244.57688904]
[69.52982330 237.57484436]
[63.36705017 223.20283508]
[67.93370056 208.24691772]
[81.07353973 199.76879883]
[82.77315521 184.86538696]
[84.47277069 169.96199036]
[86.17238617 155.05859375]
[87.87200165 140.15519714]
[89.57161713 125.25179291]
[91.27123260 110.34839630]
[81.60527802 98.87802887]
[66.62944794 98.02684784]
[51.65361786 97.17567444]
[47.76393127 99.32228088]
[43.79439163 100.02076721]
[40.21814728 99.42824554]
[37.40629578 97.84161377]
[35.59055710 95.65113068]
[20.72199059 93.66978455]
[5.85342455 91.68843842]
[-0.46147451 93.87528992]
[-6.07655525 92.69081879]
[-9.53621387 89.34045410]
[-24.31915283 86.79787445]
[-39.10209274 84.25530243]
[-53.90843201 81.85272217]
[-68.73683929 79.59036255]
[-79.59915924 86.59870911]
[-91.92672729 84.38039398]
[-99.18312073 74.66750336]
[-113.96606445 72.12493134]
[-128.74900818 69.58235931]
[-143.53193665 67.03977966]
[-158.31488037 64.49720764]
[-173.12121582 62.09463120]
[-187.94963074 59.83226776]
[-202.77804565 57.56990433]
[-217.60644531 55.30753708]
[-228.42002869 66.43614960]
[-243.71534729 69.05014038]
[-257.61102295 62.14438248]
[-264.76391602 48.37427139]
[-262.42355347 33.03470230]
[-251.48988342 22.02405167]
[-236.16711426 19.57613754]
[-222.34716797 26.63223457]
[-215.34408569 40.47912979]
[-200.51567078 42.74149323]
[-185.68727112 45.00385666]
[-170.85885620 47.26622391]
[-163.74082947 45.15711594]
[-155.77230835 49.71426773]
[-140.98936462 52.25684357]
[-126.20642853 54.79941559]
[-111.42349243 57.34199142]
[-96.64054871 59.88456345]
[-80.55185699 52.92311478]
[-66.47447205 64.76195526]
[-51.64606476 67.02431488]
[-44.52803040 64.91520691]
[-36.55952072 69.47235870]
[-21.77657890 72.01493835]
[-6.99363947 74.55751038]
[7.83476925 76.81987762]
[22.70333672 78.80121613]
[37.57190323 80.78256226]
[52.50479507 82.19984436]
[67.48062897 83.05101776]
[82.45645905 83.90219879]
[110.49955750 86.16986847]
[124.63759613 81.15830231]
[138.77563477 76.14673615]
[152.91368103 71.13517761]
[167.05172729 66.12361145]
[181.14170837 60.97849655]
[195.18238831 55.70027924]
[209.22305298 50.42206573]
[223.26373291 45.14384842]
[227.52566528 27.55779839]
[241.34805298 16.12412071]
[259.10833740 15.25027752]
[273.72644043 25.09679604]
[287.55734253 19.29104233]
[301.38821411 13.48528767]
[311.11804199 1.00968242]
[325.84805298 3.21783233]
[339.67895508 -2.58792210]
[353.50982666 -8.39367676]
[357.05813599 -18.73432159]
[365.55267334 -25.26103592]
[376.01919556 -25.99495506]
[384.95812988 -20.93417168]
[398.99880981 -26.21238708]
[413.03948975 -31.49060249]
[427.08013916 -36.76881790]
[441.12081909 -42.04703522]
[443.84735107 -53.67263412]
[451.78173828 -62.43499756]
[462.85321045 -66.22053528]
[474.25482178 -64.19245148]
[483.15509033 -56.97254562]
[497.38543701 -61.71566010]
[511.61578369 -66.45877838]
[525.84613037 -71.20188904]
[532.32165527 -82.39004517]
[544.30578613 -86.03279114]
[555.19097900 -80.69346619]
[569.50854492 -85.16643524]
[583.82611084 -89.63940430]
[598.14367676 -94.11237335]
[612.46124268 -98.58534241]
[623.16809082 -111.00693512]
[639.22619629 -107.67993164]
[644.11639404 -92.02688599]
[632.80804443 -80.15029144]
[616.93420410 -84.26778412]
[602.61663818 -79.79481506]
[588.29907227 -75.32184601]
[573.98150635 -70.84887695]
[559.66394043 -66.37590790]
[548.51483154 -52.84797287]
[530.58923340 -56.97153854]
[516.35888672 -52.22842407]
[502.12854004 -47.48530960]
[487.89819336 -42.74219513]
[480.75152588 -25.92341805]
[463.29742432 -19.51782608]
[446.39904785 -28.00636292]
[432.35836792 -22.72814751]
[418.31768799 -17.44993210]
[404.27703857 -12.17171669]
[390.23635864 -6.89350128]
[379.14279175 8.91249466]
[359.31558228 5.43720245]
[345.48471069 11.24295712]
[331.65380859 17.04871178]
[322.91323853 29.10905075]
[307.19396973 27.31616592]
[293.36306763 33.12192154]
[279.53219604 38.92767715]
[278.52633667 51.07540512]
[272.39984131 61.69680786]
[262.26937866 68.73251343]
[250.03453064 70.78813171]
[238.02172852 67.41022491]
[228.54194641 59.18452072]
[214.50126648 64.46273804]
[200.46060181 69.74095154]
[186.41992188 75.01916504]
[181.24253845 80.33982849]
[172.06329346 80.26165771]
[157.92524719 85.27321625]
[143.78720093 90.28478241]
[129.64915466 95.29634094]
[115.51111603 100.30790710]
[106.17462921 112.04801178]
[104.47502136 126.95140839]
[102.77540588 141.85481262]
[101.07579041 156.75820923]
[99.37617493 171.66160583]
[97.67655945 186.56500244]
[95.97694397 201.46839905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 165]
[8 164]
[9 163]
[10 162]
[11 161]
[12 160]
[13 159]
[14 72]
[15 71]
[16 70]
[21 69]
[22 68]
[23 67]
[26 66]
[27 65]
[28 64]
[29 62]
[30 61]
[33 59]
[34 58]
[35 57]
[36 56]
[37 55]
[38 53]
[39 52]
[40 51]
[41 50]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[78 152]
[79 151]
[80 150]
[81 149]
[85 143]
[86 142]
[87 141]
[89 139]
[90 138]
[91 137]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
[104 128]
[105 127]
[106 126]
[107 125]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
