%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIVA1)
} def

/sequence { (\
UGUGACGUCACGGCGUCGUUGGUAAGGGGCUGGCGGCCGGGGAGCUGCGUAGCUCCCGGCCCCGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.011363030 ubox
1 12 0.059980895 ubox
1 15 0.003298414 ubox
1 18 0.016740594 ubox
1 21 0.056114978 ubox
1 24 0.045440922 ubox
1 66 0.023036781 ubox
2 6 0.003553906 ubox
2 9 0.013435187 ubox
2 11 0.118322251 ubox
2 14 0.005210931 ubox
2 17 0.010462930 ubox
2 19 0.229530907 ubox
2 20 0.056429370 ubox
2 23 0.048218307 ubox
2 65 0.030177299 ubox
2 68 0.013360764 ubox
3 10 0.118662084 ubox
3 13 0.004947755 ubox
3 15 0.003163380 ubox
3 18 0.713135769 ubox
3 21 0.021978657 ubox
3 22 0.011260311 ubox
3 24 0.006305300 ubox
3 64 0.029828249 ubox
3 67 0.012872891 ubox
4 9 0.118442365 ubox
4 11 0.003707371 ubox
4 14 0.003658278 ubox
4 17 0.988477032 ubox
4 20 0.029089687 ubox
4 23 0.003450560 ubox
4 63 0.026094727 ubox
4 65 0.003770831 ubox
5 16 0.989097891 ubox
5 19 0.030038762 ubox
5 23 0.013742540 ubox
6 12 0.006487379 ubox
6 15 0.989278027 ubox
6 18 0.030132659 ubox
6 21 0.007353855 ubox
6 22 0.014168903 ubox
6 35 0.010197025 ubox
6 64 0.008028136 ubox
6 66 0.017925043 ubox
7 11 0.006353681 ubox
7 14 0.987773599 ubox
7 17 0.029903707 ubox
7 20 0.006414824 ubox
7 23 0.005867748 ubox
7 34 0.020028847 ubox
7 37 0.005038505 ubox
7 63 0.007477236 ubox
7 65 0.017985003 ubox
7 68 0.043347721 ubox
8 13 0.940482513 ubox
8 15 0.006543938 ubox
8 22 0.014761161 ubox
8 33 0.019801760 ubox
8 36 0.005478634 ubox
8 64 0.017168417 ubox
8 67 0.043397450 ubox
9 21 0.019801061 ubox
9 27 0.004014484 ubox
9 32 0.016746137 ubox
9 35 0.005470312 ubox
9 66 0.043326382 ubox
10 16 0.007327445 ubox
10 19 0.023262020 ubox
10 20 0.014027277 ubox
10 31 0.011522473 ubox
11 15 0.007741378 ubox
11 18 0.027962368 ubox
11 21 0.012288016 ubox
11 32 0.047447270 ubox
11 39 0.023761875 ubox
11 64 0.030817623 ubox
11 66 0.003233506 ubox
12 17 0.027805527 ubox
12 20 0.013343398 ubox
12 31 0.077251257 ubox
12 38 0.026617146 ubox
12 63 0.024808344 ubox
12 65 0.003370374 ubox
12 69 0.072526776 ubox
13 19 0.014252021 ubox
13 23 0.028729815 ubox
13 30 0.087399230 ubox
13 34 0.003859707 ubox
13 37 0.026481651 ubox
13 62 0.024163984 ubox
13 65 0.014525622 ubox
13 68 0.073733011 ubox
14 18 0.014234083 ubox
14 21 0.011593416 ubox
14 22 0.029193905 ubox
14 29 0.087458553 ubox
14 32 0.004547437 ubox
14 33 0.003933141 ubox
14 35 0.004609405 ubox
14 36 0.025834719 ubox
14 39 0.007795725 ubox
14 64 0.014544030 ubox
14 66 0.007008662 ubox
14 67 0.073364048 ubox
15 20 0.010353761 ubox
15 30 0.074158066 ubox
15 34 0.008538642 ubox
15 37 0.015062902 ubox
15 38 0.005601531 ubox
15 60 0.008381575 ubox
15 63 0.006661987 ubox
15 65 0.008612581 ubox
15 68 0.025951705 ubox
16 27 0.087404709 ubox
16 28 0.009823159 ubox
16 29 0.074208381 ubox
16 33 0.008543993 ubox
16 36 0.016482632 ubox
16 59 0.008355499 ubox
16 64 0.007238026 ubox
16 67 0.026017694 ubox
17 21 0.003487154 ubox
17 26 0.089379224 ubox
17 27 0.018133355 ubox
17 28 0.075430231 ubox
17 32 0.008509318 ubox
17 35 0.031222235 ubox
17 58 0.008350191 ubox
17 64 0.017503265 ubox
17 66 0.027395543 ubox
18 30 0.017866486 ubox
18 34 0.045219251 ubox
18 57 0.008261329 ubox
18 63 0.015385371 ubox
18 65 0.027507203 ubox
18 68 0.021702267 ubox
19 25 0.030085862 ubox
19 26 0.101918203 ubox
19 27 0.037511006 ubox
19 28 0.011121792 ubox
19 29 0.017812901 ubox
19 33 0.045235675 ubox
19 64 0.026284530 ubox
19 67 0.021720999 ubox
20 24 0.028002694 ubox
20 25 0.112586712 ubox
20 26 0.046097600 ubox
20 27 0.044526514 ubox
20 28 0.018072678 ubox
20 32 0.044741085 ubox
20 64 0.004175149 ubox
20 66 0.021185782 ubox
21 31 0.051887678 ubox
21 61 0.021251691 ubox
21 62 0.011350032 ubox
21 63 0.005692820 ubox
21 65 0.018732845 ubox
21 69 0.086530207 ubox
22 30 0.053596101 ubox
22 60 0.021480469 ubox
22 61 0.010925952 ubox
22 62 0.005651874 ubox
22 65 0.007008703 ubox
22 68 0.087509401 ubox
23 29 0.052973039 ubox
23 59 0.021393095 ubox
23 64 0.007478582 ubox
23 67 0.084099721 ubox
25 31 0.004848255 ubox
26 30 0.004993302 ubox
26 56 0.023423280 ubox
26 57 0.017891093 ubox
26 63 0.057593064 ubox
26 69 0.234687152 ubox
27 55 0.023573509 ubox
27 56 0.017837075 ubox
27 62 0.057628897 ubox
27 63 0.019623543 ubox
27 68 0.236421173 ubox
27 69 0.087232088 ubox
28 38 0.005089170 ubox
28 54 0.023613375 ubox
28 55 0.017767744 ubox
28 61 0.057284236 ubox
28 62 0.019585824 ubox
28 63 0.010959821 ubox
28 68 0.076828001 ubox
28 69 0.935727638 ubox
29 37 0.005104770 ubox
29 53 0.029497708 ubox
29 60 0.056938396 ubox
29 61 0.013852266 ubox
29 62 0.010970239 ubox
29 65 0.259677800 ubox
29 68 0.947619531 ubox
30 36 0.005182121 ubox
30 52 0.029564950 ubox
30 59 0.056620635 ubox
30 64 0.254085976 ubox
30 67 0.948335716 ubox
31 35 0.004677900 ubox
31 39 0.013402217 ubox
31 51 0.029491882 ubox
31 58 0.053565722 ubox
31 64 0.328112954 ubox
31 66 0.862736491 ubox
32 38 0.034396633 ubox
32 50 0.027604437 ubox
32 57 0.030338614 ubox
32 62 0.009986769 ubox
32 63 0.718012514 ubox
32 65 0.633433049 ubox
32 69 0.018133232 ubox
33 37 0.033875314 ubox
33 48 0.029575787 ubox
33 56 0.028385606 ubox
33 61 0.007203064 ubox
33 62 0.739927404 ubox
33 65 0.262988512 ubox
33 68 0.019031645 ubox
34 47 0.029658269 ubox
34 64 0.348634736 ubox
34 67 0.018980638 ubox
35 46 0.029637915 ubox
35 54 0.025059475 ubox
35 55 0.005653765 ubox
35 61 0.959030088 ubox
35 62 0.185008764 ubox
35 63 0.193613935 ubox
35 69 0.005689591 ubox
36 45 0.029660793 ubox
36 50 0.003858182 ubox
36 53 0.026170804 ubox
36 60 0.979161489 ubox
36 61 0.137131015 ubox
36 62 0.130523364 ubox
36 68 0.005961892 ubox
37 44 0.029601670 ubox
37 49 0.004153043 ubox
37 52 0.026096230 ubox
37 59 0.996765299 ubox
37 67 0.005963102 ubox
38 47 0.019808959 ubox
38 49 0.016846339 ubox
38 58 0.995958476 ubox
38 66 0.005963002 ubox
39 46 0.019887577 ubox
39 48 0.017182652 ubox
39 57 0.870548711 ubox
39 65 0.005865636 ubox
40 45 0.019945833 ubox
40 56 0.723847310 ubox
40 57 0.489934807 ubox
40 63 0.003753871 ubox
41 45 0.003203078 ubox
41 55 0.538516473 ubox
41 56 0.688669402 ubox
41 62 0.003752344 ubox
42 53 0.003578388 ubox
42 54 0.233189813 ubox
42 55 0.841603162 ubox
42 61 0.003748579 ubox
43 54 0.970553074 ubox
44 50 0.004506431 ubox
44 53 0.999125665 ubox
44 60 0.004606591 ubox
45 49 0.004565088 ubox
45 52 0.998891544 ubox
45 59 0.004608028 ubox
46 51 0.934452348 ubox
46 58 0.004584181 ubox
47 53 0.005673293 ubox
47 57 0.004384589 ubox
48 52 0.005691704 ubox
58 69 0.035129867 ubox
59 68 0.035406250 ubox
60 67 0.035399508 ubox
61 66 0.035297390 ubox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
28 69 0.9500000 lbox
29 68 0.9500000 lbox
30 67 0.9500000 lbox
31 66 0.9500000 lbox
32 65 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
