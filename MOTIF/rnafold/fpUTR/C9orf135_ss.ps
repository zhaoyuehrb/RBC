%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGUACUUACGUUCCUGCCGGGCAGGACAGGUGCAUAGGGAACUCCUCAGAGGUCUGUACCUCGAGGGCUCCCAUGGAUAGCCUUGACAGAUCCUGCCAGGACUGGUGCGACAGGAAGCAACACUGGUUGGAGAUCGGACCACCGGACUUGGUGGAGCGCAAGGGCUCCCUGACCCUCCGCUCCCAUCACAAGAAAUACUCGAAGCCGGUGUUGGUGUAUUCCUGAUUUGGACAUCAGAAACACAUGAAAAGU\
UGUCACAA\
) } def
/len { sequence length } bind def

/coor [
[-17.93668938 233.07003784]
[-22.13108826 241.62602234]
[-28.99983215 248.90869141]
[-38.13194275 254.07775879]
[-48.85329437 256.43231201]
[-55.88485718 269.68209839]
[-62.91641998 282.93188477]
[-69.94798279 296.18170166]
[-76.97955322 309.43148804]
[-84.01111603 322.68127441]
[-84.15607452 329.23855591]
[-87.12666321 334.03530884]
[-91.37093353 336.15979004]
[-98.71582031 349.23849487]
[-100.18056488 358.22088623]
[-106.22672272 362.42837524]
[-113.72672272 375.41876221]
[-121.22672272 388.40914917]
[-128.72673035 401.39953613]
[-136.22673035 414.38992310]
[-138.91000366 431.13015747]
[-155.73886108 433.18591309]
[-162.37295532 417.58383179]
[-149.21710205 406.88992310]
[-141.71710205 393.89953613]
[-134.21710205 380.90914917]
[-126.71710968 367.91876221]
[-119.21710968 354.92837524]
[-111.79453278 341.89361572]
[-104.44964600 328.81491089]
[-97.26091003 315.64971924]
[-90.22934723 302.39993286]
[-83.19778442 289.15011597]
[-76.16621399 275.90032959]
[-69.13465118 262.65054321]
[-62.10308838 249.40074158]
[-66.59767151 243.39668274]
[-81.49155426 245.17776489]
[-75.58683777 231.38854980]
[-80.08142090 225.38449097]
[-94.77552795 228.39833069]
[-109.46963501 231.41217041]
[-124.16374207 234.42601013]
[-131.88778687 244.72898865]
[-144.16484070 246.95053101]
[-154.33464050 240.43850708]
[-169.06356812 243.27726746]
[-183.79251099 246.11604309]
[-198.52143860 248.95480347]
[-213.25036621 251.79357910]
[-221.05427551 256.47628784]
[-228.17140198 254.57739258]
[-242.93305969 257.24069214]
[-257.69473267 259.90399170]
[-272.45639038 262.56729126]
[-287.21807861 265.23059082]
[-299.38238525 276.22885132]
[-314.90408325 270.93655396]
[-317.81579590 254.79797363]
[-305.12219238 244.41508484]
[-289.88137817 250.46891785]
[-275.11968994 247.80561829]
[-260.35803223 245.14231873]
[-245.59635925 242.47901917]
[-230.83470154 239.81571960]
[-216.08912659 237.06465149]
[-201.36019897 234.22587585]
[-186.63127136 231.38710022]
[-171.90234375 228.54833984]
[-157.17341614 225.70956421]
[-144.52864075 213.52093506]
[-127.17758179 219.73190308]
[-112.48346710 216.71806335]
[-97.78936005 213.70422363]
[-83.09525299 210.69038391]
[-57.74230194 188.46069336]
[-30.74542427 196.69917297]
[-19.06579971 187.28713989]
[-7.44238520 177.80578613]
[4.12441063 168.25543213]
[15.69120693 158.70507812]
[27.25800323 149.15472412]
[38.82479858 139.60437012]
[50.39159393 130.05401611]
[50.21310043 115.05508423]
[38.42230225 105.78269958]
[26.63150597 96.51031494]
[14.84070969 87.23793030]
[-0.78984058 84.78915405]
[-6.01127052 70.83975220]
[-17.80206680 61.56736374]
[-29.59286308 52.29497910]
[-45.78086090 47.25662231]
[-45.42068863 30.30649948]
[-29.03327751 25.96033669]
[-20.32047844 40.50418091]
[-8.52968216 49.77656555]
[3.26111436 59.04895401]
[18.04830742 60.83449936]
[24.11309433 75.44712830]
[35.90388870 84.71951294]
[47.69468689 93.99189758]
[59.48548508 103.26428223]
[70.88047028 93.50856018]
[82.27445984 83.75370789]
[74.92957306 70.67500305]
[67.58468628 57.59629440]
[52.30284119 53.56631470]
[44.41886902 39.86892319]
[48.61018753 24.63053894]
[62.39016724 16.89182281]
[77.58338928 21.24402046]
[85.17597961 35.10504913]
[80.66339874 50.25140381]
[88.00828552 63.33011246]
[95.35317230 76.40882111]
[102.73400116 77.74047089]
[105.39752960 62.97884369]
[120.15911865 65.64260101]
[117.49567413 80.40377045]
[124.87650299 81.73542023]
[136.32884216 72.04810333]
[147.78117371 62.36078262]
[159.23350525 52.67346573]
[170.68582153 42.98614883]
[182.13815308 33.29883194]
[193.59048462 23.61151314]
[205.04281616 13.92419529]
[216.49514771 4.23687744]
[227.94747925 -5.45044041]
[239.39981079 -15.13775826]
[245.24337769 -32.61598587]
[262.64077759 -35.02092743]
[273.97702026 -44.84383774]
[285.31326294 -54.66675186]
[278.08023071 -78.12374115]
[287.71463013 -102.94357300]
[312.44290161 -117.51789856]
[316.15249634 -132.05195618]
[319.86212158 -146.58601379]
[314.91098022 -162.21989441]
[326.17294312 -174.14045715]
[342.06271362 -170.08483887]
[346.23419189 -154.22512817]
[334.39617920 -142.87641907]
[330.68658447 -128.34236145]
[326.97695923 -113.80829620]
[333.18807983 -109.60449219]
[341.59588623 -122.02660370]
[354.01788330 -113.61860657]
[345.61032104 -101.19687653]
[351.82144165 -96.99307251]
[363.93569946 -105.83870697]
[376.04992676 -114.68434143]
[388.16415405 -123.52997589]
[400.27841187 -132.37561035]
[412.39263916 -141.22125244]
[424.45404053 -150.13880920]
[436.46215820 -159.12797546]
[448.47027588 -168.11714172]
[460.47839355 -177.10630798]
[463.07452393 -189.71868896]
[473.23379517 -196.96096802]
[485.20913696 -195.40447998]
[497.32336426 -204.25012207]
[509.43759155 -213.09576416]
[521.55181885 -221.94139099]
[521.38024902 -237.45751953]
[530.38897705 -250.09167480]
[545.11407471 -254.98576355]
[559.89337158 -250.25791931]
[569.04388428 -237.72608948]
[569.04718018 -222.20901489]
[559.90185547 -209.67332458]
[545.12457275 -204.93925476]
[530.39746094 -209.82716370]
[518.28326416 -200.98152161]
[506.16900635 -192.13587952]
[494.05477905 -183.29025269]
[487.81091309 -166.87478638]
[469.46755981 -165.09819031]
[457.45944214 -156.10902405]
[445.45129395 -147.11985779]
[433.44317627 -138.13069153]
[429.98324585 -131.62777710]
[421.23828125 -129.10700989]
[409.12402344 -120.26137543]
[397.00979614 -111.41574097]
[384.89556885 -102.57010651]
[372.78131104 -93.72447205]
[360.66708374 -84.87883759]
[361.51022339 -73.58936310]
[359.55334473 -62.68360901]
[355.03765869 -52.83007050]
[348.35736084 -44.60248947]
[340.02804565 -38.44661713]
[330.64840698 -34.65660858]
[320.85794067 -33.36223984]
[311.29370117 -34.52748108]
[302.54888916 -37.95997620]
[295.13616943 -43.33050537]
[283.79992676 -33.50759506]
[272.46368408 -23.68468475]
[271.29592896 -11.66520309]
[261.96051025 -3.38806343]
[249.08712769 -3.68542743]
[237.63479614 6.00189018]
[226.18246460 15.68920803]
[214.73013306 25.37652588]
[203.27780151 35.06384277]
[191.82546997 44.75115967]
[180.37313843 54.43848038]
[168.92082214 64.12579346]
[157.46849060 73.81311798]
[146.01615906 83.50043488]
[134.56382751 93.18775177]
[133.85009766 108.17076111]
[144.32972717 118.90282440]
[154.80937195 129.63488770]
[165.28900146 140.36695862]
[173.49487305 144.30299377]
[175.82853699 151.28964233]
[186.17973328 162.14564514]
[196.53091431 173.00166321]
[204.68936157 177.03506470]
[206.93972778 184.04898071]
[217.16099548 195.02740479]
[227.38226318 206.00581360]
[237.60353088 216.98423767]
[253.40470886 217.29779053]
[264.29574585 228.75035095]
[263.81515503 244.54733276]
[252.24806213 255.31665039]
[236.45704651 254.66908264]
[225.81062317 242.98878479]
[226.62512207 227.20550537]
[216.40385437 216.22708130]
[206.18257141 205.24867249]
[195.96130371 194.27024841]
[185.67489624 183.35284424]
[175.32371521 172.49682617]
[164.97253418 161.64082336]
[154.55693054 150.84658813]
[144.07730103 140.11453247]
[133.59767151 129.38246155]
[123.11802673 118.65039825]
[127.87778473 132.87518311]
[126.10432434 147.76997375]
[118.13759613 160.47947693]
[105.50482178 168.56730652]
[90.62766266 170.48303223]
[76.35802460 165.85943604]
[65.43138123 155.58285522]
[59.94194794 141.62081909]
[48.37515259 151.17117310]
[36.80835342 160.72152710]
[25.24155998 170.27186584]
[13.67476368 179.82221985]
[2.10796762 189.37257385]
[-2.49717999 197.22250366]
[-9.65376472 198.96676636]
[-21.33338737 208.37879944]
[-17.80558586 215.65663147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 36]
[6 35]
[7 34]
[8 33]
[9 32]
[10 31]
[13 30]
[14 29]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[40 75]
[41 74]
[42 73]
[43 72]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[77 262]
[78 261]
[79 259]
[80 258]
[81 257]
[82 256]
[83 255]
[84 254]
[85 103]
[86 102]
[87 101]
[88 100]
[90 98]
[91 97]
[92 96]
[105 116]
[106 115]
[107 114]
[121 216]
[122 215]
[123 214]
[124 213]
[125 212]
[126 211]
[127 210]
[128 209]
[129 208]
[130 207]
[131 206]
[133 203]
[134 202]
[135 201]
[138 147]
[139 146]
[140 145]
[152 191]
[153 190]
[154 189]
[155 188]
[156 187]
[157 186]
[158 184]
[159 183]
[160 182]
[161 181]
[164 179]
[165 178]
[166 177]
[167 176]
[217 246]
[218 245]
[219 244]
[220 243]
[222 242]
[223 241]
[224 240]
[226 239]
[227 238]
[228 237]
[229 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
