%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ARG1)
} def

/sequence { (\
GGAAAAAAAAGAUGCGCCCUCUGUCACUGAGGGUUGACUGACUGGAGAGCUCAAGUGCAGCAAAGAGAAGUGUCAGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.275889884 ubox
1 19 0.072011911 ubox
1 74 0.003438758 ubox
2 17 0.276038416 ubox
2 18 0.076452923 ubox
2 19 0.004404510 ubox
2 74 0.004146160 ubox
3 73 0.003944618 ubox
10 20 0.007694308 ubox
10 39 0.004956270 ubox
11 19 0.011617228 ubox
11 38 0.005132663 ubox
11 74 0.152442918 ubox
12 73 0.152560599 ubox
13 59 0.005624330 ubox
13 62 0.007107064 ubox
13 72 0.151954484 ubox
13 75 0.008454624 ubox
14 35 0.003534090 ubox
14 58 0.006236567 ubox
14 61 0.007811074 ubox
14 71 0.151940166 ubox
14 73 0.012738798 ubox
14 74 0.009200832 ubox
14 79 0.063059936 ubox
15 36 0.018904592 ubox
15 57 0.006231032 ubox
15 60 0.007732634 ubox
15 70 0.152111365 ubox
15 72 0.016383652 ubox
15 78 0.056923601 ubox
16 34 0.132942466 ubox
16 35 0.013877192 ubox
16 71 0.016106251 ubox
16 79 0.153932044 ubox
17 33 0.150592316 ubox
17 70 0.016006923 ubox
17 78 0.138509097 ubox
18 32 0.151068855 ubox
19 31 0.151071043 ubox
19 65 0.021630341 ubox
19 67 0.055196920 ubox
19 76 0.004524647 ubox
19 78 0.960016135 ubox
20 30 0.151047369 ubox
20 64 0.021374564 ubox
20 66 0.055379882 ubox
20 75 0.003354001 ubox
20 77 0.984160657 ubox
21 29 0.151027323 ubox
21 60 0.023550579 ubox
21 65 0.054061336 ubox
21 76 0.986644490 ubox
22 59 0.027909011 ubox
22 62 0.031641258 ubox
22 64 0.040994907 ubox
22 75 0.986415444 ubox
23 28 0.006961390 ubox
23 58 0.031683719 ubox
23 61 0.044879103 ubox
23 73 0.004034260 ubox
23 74 0.985622191 ubox
24 57 0.006212334 ubox
24 60 0.043140643 ubox
24 72 0.004028658 ubox
25 57 0.058664313 ubox
25 72 0.985622675 ubox
26 56 0.059278711 ubox
26 71 0.986452967 ubox
27 55 0.059300851 ubox
27 60 0.009120394 ubox
27 67 0.011408386 ubox
27 70 0.986539218 ubox
28 53 0.009679731 ubox
28 54 0.058201212 ubox
28 59 0.009170783 ubox
28 64 0.004212349 ubox
28 66 0.016528351 ubox
28 69 0.979295005 ubox
29 52 0.013671858 ubox
29 58 0.009183416 ubox
30 51 0.013396955 ubox
31 50 0.012596383 ubox
31 51 0.008579436 ubox
31 52 0.056802115 ubox
32 43 0.007715543 ubox
32 50 0.009502954 ubox
32 51 0.057284382 ubox
33 42 0.007827780 ubox
33 50 0.057431076 ubox
33 61 0.237886117 ubox
34 41 0.007783783 ubox
34 48 0.011128089 ubox
34 49 0.057362823 ubox
34 54 0.009396100 ubox
34 60 0.237926133 ubox
34 63 0.929424217 ubox
34 64 0.107509599 ubox
34 65 0.017814606 ubox
34 66 0.014109548 ubox
34 76 0.004381708 ubox
35 40 0.007294536 ubox
35 47 0.011174171 ubox
35 48 0.055532801 ubox
35 53 0.010741937 ubox
35 59 0.238205116 ubox
35 62 0.957067154 ubox
35 63 0.104399439 ubox
35 64 0.015758762 ubox
35 65 0.013161782 ubox
35 75 0.011930151 ubox
36 52 0.010947634 ubox
36 58 0.237927753 ubox
36 61 0.960617229 ubox
36 74 0.012781912 ubox
37 51 0.010905190 ubox
37 56 0.236449565 ubox
37 73 0.012745314 ubox
38 45 0.052229547 ubox
38 47 0.022911321 ubox
38 49 0.011102286 ubox
38 55 0.237170382 ubox
38 60 0.966349519 ubox
38 72 0.012493576 ubox
38 76 0.038400847 ubox
39 44 0.048906518 ubox
39 46 0.022909383 ubox
39 48 0.011141801 ubox
39 53 0.166273231 ubox
39 54 0.170424103 ubox
39 59 0.966311894 ubox
39 62 0.006309102 ubox
39 69 0.003162944 ubox
39 75 0.038638067 ubox
40 52 0.234259482 ubox
40 58 0.964279689 ubox
40 61 0.006744670 ubox
40 74 0.038700663 ubox
41 51 0.233528612 ubox
41 56 0.961765429 ubox
41 71 0.006433434 ubox
41 73 0.038651972 ubox
42 49 0.234692517 ubox
42 55 0.964779037 ubox
42 60 0.007760361 ubox
42 65 0.005434975 ubox
42 67 0.007056247 ubox
42 70 0.007077270 ubox
42 72 0.038489983 ubox
42 76 0.006982256 ubox
43 48 0.232503612 ubox
43 53 0.260852719 ubox
43 54 0.873643334 ubox
43 59 0.007826889 ubox
43 62 0.008862562 ubox
43 64 0.005654051 ubox
43 66 0.007164017 ubox
43 69 0.007185532 ubox
43 75 0.007023674 ubox
44 51 0.140588166 ubox
44 52 0.364976149 ubox
44 58 0.007668006 ubox
44 61 0.009038348 ubox
44 71 0.007871873 ubox
44 74 0.007008793 ubox
45 50 0.192598512 ubox
45 51 0.304466559 ubox
45 52 0.828286677 ubox
45 73 0.006745088 ubox
46 51 0.781178280 ubox
49 56 0.004779319 ubox
49 58 0.017603287 ubox
49 61 0.014215391 ubox
49 71 0.003889652 ubox
49 79 0.009051870 ubox
50 55 0.004944170 ubox
50 57 0.017875680 ubox
50 60 0.014237266 ubox
50 65 0.004548919 ubox
50 67 0.034770935 ubox
50 70 0.003895598 ubox
50 78 0.009155951 ubox
51 59 0.013734803 ubox
51 64 0.004357245 ubox
51 66 0.034804127 ubox
51 77 0.009154137 ubox
52 65 0.034744576 ubox
52 67 0.003337307 ubox
52 76 0.009142295 ubox
55 61 0.017138948 ubox
56 60 0.016069671 ubox
56 62 0.010006895 ubox
56 75 0.006477588 ubox
57 61 0.010295144 ubox
57 73 0.005482511 ubox
57 74 0.006591312 ubox
58 72 0.006500948 ubox
59 71 0.005795160 ubox
60 71 0.010359235 ubox
60 73 0.004475705 ubox
60 79 0.003878636 ubox
61 70 0.011471676 ubox
61 72 0.005069892 ubox
61 78 0.004001174 ubox
62 71 0.005007656 ubox
65 74 0.018926212 ubox
66 73 0.018644849 ubox
67 74 0.008892806 ubox
68 73 0.008137834 ubox
70 79 0.005372490 ubox
71 78 0.005357729 ubox
19 78 0.9500000 lbox
20 77 0.9500000 lbox
21 76 0.9500000 lbox
22 75 0.9500000 lbox
23 74 0.9500000 lbox
25 72 0.9500000 lbox
26 71 0.9500000 lbox
27 70 0.9500000 lbox
28 69 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
38 60 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
