%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGUUCCAAGUCCGCCGCCGUCCCGGGUGGCCUUUCCUCCCUGCCUGGCUCCGCGCGCUCCAGCCCUGCGGGAGGCGGCGGCGAGAAGCUGCGGCUCUGGGUGCGGUGCGGGGCGCCCGGGCGACAGGCGGGCGCAAGGCGGGCGCGCAGCAGACCGGUUGGCGCCGCACU\
) } def
/len { sequence length } bind def

/coor [
[284.99389648 496.54010010]
[299.34613037 492.17965698]
[313.56411743 496.95425415]
[306.26153564 483.85186768]
[298.95898438 470.74948120]
[291.65640259 457.64709473]
[276.76153564 457.55825806]
[263.82492065 449.97537231]
[256.37155151 436.84854126]
[256.49017334 421.65371704]
[264.24911499 408.47241211]
[256.94653320 395.37002563]
[249.64396667 382.26763916]
[242.34140015 369.16525269]
[235.03883362 356.06286621]
[227.73626709 342.96047974]
[220.43370056 329.85809326]
[204.08818054 325.96954346]
[195.42707825 311.17999268]
[200.21743774 294.37301636]
[192.67814636 281.40539551]
[186.57601929 277.18817139]
[185.12216187 268.13311768]
[177.81959534 255.03074646]
[170.51702881 241.92835999]
[163.21446228 228.82597351]
[155.91189575 215.72358704]
[148.60932922 202.62120056]
[141.30676270 189.51881409]
[134.00419617 176.41642761]
[121.04959869 169.06607056]
[121.08963013 153.24490356]
[113.78706360 140.14251709]
[106.48449707 127.04013824]
[94.38701630 127.23439026]
[83.35219574 122.27259064]
[75.46916199 113.09410858]
[72.23034668 101.43663788]
[74.24891663 89.50717163]
[81.14272308 79.56423187]
[74.32073212 66.20532227]
[61.15363312 57.43388748]
[62.25607300 42.58013916]
[55.43408203 29.22122955]
[48.61209106 15.86231995]
[41.79010010 2.50341034]
[34.96811295 -10.85549831]
[28.14612198 -24.21440887]
[21.32413292 -37.57331848]
[6.55817127 -42.53357697]
[-0.16999370 -56.17858887]
[4.64985180 -70.22510529]
[-2.17213798 -83.58401489]
[-8.99412727 -96.94292450]
[-15.81611729 -110.30183411]
[-22.63810730 -123.66074371]
[-29.35229301 -129.90792847]
[-29.46019745 -137.32475281]
[-36.03848267 -150.80532837]
[-42.73889923 -164.22563171]
[-49.56089020 -177.58453369]
[-64.32685089 -182.54479980]
[-71.05501556 -196.18981934]
[-66.23516846 -210.23632812]
[-73.05715942 -223.59524536]
[-79.87915039 -236.95414734]
[-86.82215118 -250.25056458]
[-93.88559723 -263.48339844]
[-100.94903564 -276.71621704]
[-108.01248169 -289.94906616]
[-122.88213348 -295.97177124]
[-127.30614471 -311.39276123]
[-117.89079285 -324.38241577]
[-101.85873413 -324.97613525]
[-91.50838470 -312.71850586]
[-94.77964783 -297.01251221]
[-87.71620941 -283.77966309]
[-80.65276337 -270.54684448]
[-73.58932495 -257.31402588]
[-67.64434052 -252.87800598]
[-66.52024078 -243.77613831]
[-59.69824982 -230.41723633]
[-52.87625885 -217.05831909]
[-38.67146301 -212.72711182]
[-31.56269455 -199.27645874]
[-36.20198059 -184.40652466]
[-29.37998962 -171.04762268]
[-23.51654243 -166.50439453]
[-22.55789948 -157.38362122]
[-15.97961330 -143.90303040]
[-9.27919865 -130.48274231]
[-2.45720840 -117.12382507]
[4.36478138 -103.76491547]
[11.18677139 -90.40600586]
[18.00876045 -77.04709625]
[32.21355438 -72.71588898]
[39.32232666 -59.26523590]
[34.68304062 -44.39530563]
[41.50503159 -31.03639793]
[48.32702255 -17.67748833]
[55.14900970 -4.31857967]
[61.97100067 9.04032993]
[68.79299164 22.39923859]
[75.61498260 35.75814819]
[88.29412842 43.57406235]
[87.67964172 59.38332748]
[94.50163269 72.74224091]
[111.86216736 74.85031891]
[124.53083801 86.90589142]
[127.49678040 104.14059448]
[119.58688354 119.73757172]
[126.88945007 132.83995056]
[134.19201660 145.94233704]
[147.66893005 154.22987366]
[147.10658264 169.11386108]
[154.40914917 182.21624756]
[161.71171570 195.31863403]
[169.01428223 208.42102051]
[176.31684875 221.52340698]
[183.61941528 234.62579346]
[190.92198181 247.72817993]
[198.22454834 260.83056641]
[205.64576721 273.86611938]
[213.18505859 286.83374023]
[226.53639221 288.76577759]
[236.18844604 297.90966797]
[238.76235962 310.75509644]
[233.53608704 322.55554199]
[240.83865356 335.65792847]
[248.14122009 348.76031494]
[255.44378662 361.86270142]
[262.74636841 374.96508789]
[270.04891968 388.06747437]
[277.35150146 401.16986084]
[292.64315796 401.50396729]
[305.62875366 409.39520264]
[312.87277222 422.63873291]
[312.51763916 437.62969971]
[304.75878906 450.34451294]
[312.06137085 463.44689941]
[319.36392212 476.54928589]
[326.66650391 489.65167236]
[334.90069580 502.18954468]
[344.02313232 514.09674072]
[353.14553833 526.00396729]
[362.26794434 537.91113281]
[371.39035034 549.81835938]
[379.12237549 554.75024414]
[380.56796265 562.02563477]
[389.47265625 574.09649658]
[398.37734985 586.16741943]
[407.28204346 598.23828125]
[422.94476318 600.34906006]
[432.46084595 612.96728516]
[430.18460083 628.60681152]
[417.46649170 637.98895264]
[401.85192871 635.54748535]
[392.60473633 622.73089600]
[395.21115112 607.14300537]
[386.30645752 595.07208252]
[377.40176392 583.00122070]
[368.49707031 570.93029785]
[359.48315430 558.94079590]
[350.36074829 547.03356934]
[341.23834229 535.12634277]
[332.11590576 523.21917725]
[322.99349976 511.31195068]
[321.72534180 526.25823975]
[312.02066040 537.69586182]
[297.48034668 541.38092041]
[283.49954224 535.94604492]
[275.26580811 523.40789795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 142]
[4 141]
[5 140]
[6 139]
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 129]
[17 128]
[20 124]
[21 123]
[23 122]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[32 113]
[33 112]
[34 111]
[40 107]
[41 106]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[58 90]
[59 89]
[60 87]
[61 86]
[64 83]
[65 82]
[66 81]
[67 79]
[68 78]
[69 77]
[70 76]
[143 167]
[144 166]
[145 165]
[146 164]
[147 163]
[149 162]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
