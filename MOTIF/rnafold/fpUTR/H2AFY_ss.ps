%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGUUCCAGUUCACUCGGCAGCGGCGCCGGGCGGAGGGGGAGAGCGCGGGCCGCGCGGGCGGGAAGCGAAGAGGCGGGCGGGCCAGCGAGGAGCGCGGAGAGAAAAGGCGCGAGCGGCCAGGAGGGCUCAGGCCGAGACACCUUGCAGCUGCCGCCGCCGCCACCGAGCCGCCGCUGUGCUCACUGAUCCGCCUCCAGGGCCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[93.11164856 226.67605591]
[97.34020996 211.74626160]
[109.55748749 202.17976379]
[108.88770294 187.19473267]
[108.21791840 172.20968628]
[107.54813385 157.22465515]
[106.87834930 142.23960876]
[106.20856476 127.25457764]
[99.14405060 124.73611450]
[94.10713196 138.86514282]
[93.68266296 153.85914612]
[79.29130554 158.08866882]
[70.82176971 145.70855713]
[79.97810364 133.82823181]
[85.01502228 119.69920349]
[77.95050812 117.18074036]
[67.95233154 128.36271667]
[57.95416260 139.54469299]
[47.95598984 150.72666931]
[37.95781708 161.90864563]
[27.95964622 173.09062195]
[29.09173584 188.85430908]
[18.68261909 200.74656677]
[2.90784073 201.71192932]
[-8.87370300 191.17765808]
[-9.67223167 175.39355469]
[0.98600781 163.72404480]
[16.77766991 163.09243774]
[26.77584267 151.91046143]
[36.77401352 140.72850037]
[46.77218628 129.54652405]
[56.77035904 118.36454773]
[66.76853180 107.18257141]
[78.97484589 84.77010345]
[98.13656616 82.17266846]
[102.96256256 67.97021484]
[107.78855896 53.76775742]
[112.61456299 39.56529999]
[117.44055939 25.36284447]
[114.55461884 9.80707645]
[125.97531891 0.24585460]
[130.80131531 -13.95660114]
[135.62730408 -28.15905762]
[139.92143250 -42.53126907]
[143.67773438 -57.05332947]
[147.43403625 -71.57538605]
[151.19033813 -86.09745026]
[154.94664001 -100.61950684]
[158.70294189 -115.14156342]
[162.45924377 -129.66362000]
[166.21554565 -144.18568420]
[164.81983948 -150.64816284]
[166.62615967 -156.03649902]
[170.30590820 -159.08091736]
[174.49291992 -173.48469543]
[173.88333130 -182.59877014]
[178.85098267 -188.07090759]
[183.25198364 -202.41075134]
[187.65298462 -216.75059509]
[192.05397034 -231.09043884]
[187.51560974 -248.93658447]
[200.81959534 -260.38082886]
[205.00660706 -274.78463745]
[209.19361877 -289.18841553]
[201.39094543 -300.16714478]
[201.33683777 -313.44146729]
[208.82699585 -324.16433716]
[220.94317627 -328.54928589]
[225.34416199 -342.88912964]
[229.74516296 -357.22897339]
[222.23735046 -366.44683838]
[220.13294983 -378.02581787]
[223.84094238 -389.06866455]
[232.33050537 -396.86886597]
[243.41427612 -399.57373047]
[248.24026489 -413.77621460]
[253.06626892 -427.97866821]
[257.89227295 -442.18112183]
[262.71826172 -456.38357544]
[262.51623535 -465.51577759]
[267.72326660 -470.76062012]
[272.76019287 -484.88964844]
[277.79711914 -499.01867676]
[270.70837402 -508.56259155]
[269.12310791 -520.22399902]
[273.32049561 -531.09027100]
[282.14990234 -538.50360107]
[293.34338379 -540.71087646]
[298.79873657 -554.68365479]
[304.25408936 -568.65643311]
[309.70944214 -582.62927246]
[315.16479492 -596.60205078]
[320.62017822 -610.57482910]
[304.98345947 -631.48400879]
[315.43792725 -661.43035889]
[314.76815796 -676.41534424]
[314.09835815 -691.40039062]
[313.42858887 -706.38543701]
[299.54516602 -712.82824707]
[290.25534058 -724.99200439]
[287.69384766 -740.08166504]
[292.44927979 -754.62969971]
[303.42886353 -765.29302979]
[318.10961914 -769.62133789]
[333.11798096 -766.62005615]
[345.00512695 -756.97875977]
[351.03952026 -742.91302490]
[349.83444214 -727.65502930]
[341.66687012 -714.71093750]
[328.41360474 -707.05523682]
[329.08340454 -692.07019043]
[329.75317383 -677.08514404]
[330.42297363 -662.10009766]
[337.59289551 -659.89959717]
[348.57397461 -670.11804199]
[351.93273926 -655.49859619]
[359.10266113 -653.29809570]
[368.06335449 -665.32751465]
[377.02404785 -677.35687256]
[385.98474121 -689.38623047]
[394.94546509 -701.41564941]
[393.85525513 -714.26763916]
[401.56628418 -724.10247803]
[413.51556396 -725.98431396]
[422.65435791 -737.87896729]
[424.26739502 -754.19860840]
[439.31665039 -760.71405029]
[452.32077026 -750.72283936]
[449.90222168 -734.50299072]
[434.54901123 -728.74017334]
[425.41018677 -716.84552002]
[424.04962158 -699.34936523]
[406.97482300 -692.45495605]
[398.01412964 -680.42553711]
[389.05343628 -668.39617920]
[380.09274292 -656.36682129]
[371.13204956 -644.33740234]
[371.78555298 -631.87445068]
[368.35491943 -620.60284424]
[361.69433594 -611.74145508]
[352.97842407 -606.08526611]
[343.52172852 -603.93872070]
[334.59295654 -605.11950684]
[329.13760376 -591.14672852]
[323.68225098 -577.17388916]
[318.22689819 -563.20111084]
[312.77154541 -549.22833252]
[307.31616211 -535.25549316]
[315.66223145 -518.96258545]
[309.34014893 -501.44277954]
[291.92614746 -493.98175049]
[286.88922119 -479.85272217]
[281.85229492 -465.72369385]
[276.92071533 -451.55755615]
[272.09472656 -437.35510254]
[267.26870728 -423.15264893]
[262.44271851 -408.95019531]
[257.61672974 -394.74774170]
[266.68197632 -378.84375000]
[261.14849854 -361.05911255]
[244.08500671 -352.82797241]
[239.68402100 -338.48812866]
[235.28302002 -324.14828491]
[243.79017639 -309.64080811]
[239.07995605 -293.14447021]
[223.59739685 -285.00140381]
[219.41038513 -270.59762573]
[215.22337341 -256.19381714]
[220.77259827 -245.44522095]
[217.40220642 -233.41091919]
[206.39382935 -226.68943787]
[201.99282837 -212.34959412]
[197.59182739 -198.00975037]
[193.19082642 -183.66990662]
[188.89671326 -169.29768372]
[184.70970154 -154.89390564]
[180.73759460 -140.42938232]
[176.98129272 -125.90732574]
[173.22499084 -111.38526154]
[169.46870422 -96.86320496]
[165.71240234 -82.34114838]
[161.95610046 -67.81908417]
[158.19979858 -53.29702759]
[154.44349670 -38.77496719]
[168.49586487 -44.02196503]
[181.43753052 -36.43821716]
[183.72837830 -21.61418152]
[173.67968750 -10.47758770]
[158.69897461 -11.23791599]
[149.82977295 -23.33305931]
[145.00376892 -9.13060379]
[140.17776489 5.07185221]
[143.40888977 19.61176682]
[131.64300537 30.18884277]
[126.81701660 44.39129639]
[121.99102020 58.59375381]
[117.16501617 72.79621124]
[112.33901978 86.99866486]
[125.93751526 101.11900330]
[121.19360352 126.58478546]
[121.86338806 141.56982422]
[122.53317261 156.55487061]
[123.20295715 171.53990173]
[123.87274170 186.52494812]
[124.54252625 201.50997925]
[137.56457520 209.94834900]
[143.10824585 224.44136047]
[139.04188538 239.41615295]
[126.92910767 249.11460876]
[111.42750549 249.80749512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[35 198]
[36 197]
[37 196]
[38 195]
[39 194]
[41 192]
[42 191]
[43 190]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[49 179]
[50 178]
[51 177]
[54 176]
[55 175]
[57 174]
[58 173]
[59 172]
[60 171]
[62 168]
[63 167]
[64 166]
[68 163]
[69 162]
[70 161]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[81 153]
[82 152]
[83 151]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[95 113]
[96 112]
[97 111]
[98 110]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
