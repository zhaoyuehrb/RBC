%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIGLEC8)
} def

/sequence { (\
AGUUUCUGAGAGAAGAACCCUGAGGAACAGACGUUCCCUGGCGGCCCUGGCGCCUUCAAACCCAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.011509990 ubox
1 21 0.135858177 ubox
1 39 0.018061902 ubox
1 55 0.004436095 ubox
1 56 0.005600233 ubox
2 6 0.012045491 ubox
2 18 0.424667512 ubox
2 20 0.143954479 ubox
2 28 0.422383743 ubox
2 32 0.008435330 ubox
2 38 0.019047729 ubox
2 42 0.005862361 ubox
2 45 0.009694394 ubox
2 51 0.004526186 ubox
2 55 0.005864720 ubox
2 61 0.106332807 ubox
2 67 0.073820344 ubox
3 9 0.004630355 ubox
3 10 0.004325107 ubox
3 11 0.008865964 ubox
3 12 0.010895632 ubox
3 13 0.069201352 ubox
3 14 0.017791452 ubox
3 15 0.196528189 ubox
3 16 0.026129228 ubox
3 17 0.352237604 ubox
3 23 0.008110767 ubox
3 27 0.422815070 ubox
3 31 0.008007855 ubox
3 41 0.004975436 ubox
3 44 0.005661342 ubox
3 50 0.004417658 ubox
3 59 0.007088434 ubox
3 60 0.105110651 ubox
3 65 0.006081209 ubox
3 66 0.068266103 ubox
4 8 0.004518925 ubox
4 9 0.004361687 ubox
4 10 0.009451458 ubox
4 11 0.013249729 ubox
4 12 0.074985534 ubox
4 13 0.019249457 ubox
4 14 0.249091868 ubox
4 15 0.025651321 ubox
4 16 0.253715517 ubox
4 17 0.574374249 ubox
4 22 0.007209972 ubox
4 26 0.422989310 ubox
4 27 0.004366530 ubox
4 30 0.006206104 ubox
4 43 0.003237475 ubox
4 58 0.005980616 ubox
4 59 0.091375000 ubox
4 60 0.011449931 ubox
4 64 0.005019779 ubox
4 65 0.051333072 ubox
4 66 0.017563847 ubox
5 9 0.007438099 ubox
5 10 0.012513546 ubox
5 11 0.077467876 ubox
5 12 0.017326926 ubox
5 13 0.266419639 ubox
5 14 0.021456280 ubox
5 15 0.073080632 ubox
5 16 0.699575152 ubox
5 23 0.015637911 ubox
5 25 0.422999526 ubox
5 26 0.005786520 ubox
5 29 0.003441547 ubox
5 31 0.005609220 ubox
5 58 0.053538159 ubox
5 59 0.013421930 ubox
5 64 0.031729699 ubox
5 65 0.004016100 ubox
5 66 0.353790240 ubox
6 10 0.077269339 ubox
6 12 0.270387506 ubox
6 15 0.746868351 ubox
6 22 0.016705338 ubox
6 24 0.423729986 ubox
6 25 0.006150258 ubox
6 30 0.006130098 ubox
6 44 0.005038138 ubox
6 65 0.383205990 ubox
7 11 0.243631412 ubox
7 14 0.742882012 ubox
7 23 0.423045724 ubox
7 24 0.005853787 ubox
7 29 0.006137402 ubox
7 43 0.005128544 ubox
7 58 0.082812697 ubox
7 64 0.383217597 ubox
8 28 0.006118226 ubox
8 42 0.005341091 ubox
8 51 0.003432667 ubox
8 56 0.021099688 ubox
8 57 0.092633272 ubox
8 63 0.382274015 ubox
9 21 0.431471002 ubox
9 39 0.025234016 ubox
9 55 0.025482307 ubox
9 56 0.090894817 ubox
10 20 0.432062366 ubox
10 38 0.025957254 ubox
10 54 0.026370379 ubox
10 55 0.077016597 ubox
10 56 0.007916008 ubox
10 57 0.054024425 ubox
11 21 0.131910240 ubox
11 39 0.038055261 ubox
11 55 0.010604930 ubox
11 56 0.053139032 ubox
12 20 0.135577390 ubox
12 36 0.014420042 ubox
12 38 0.039096158 ubox
12 54 0.009559406 ubox
12 55 0.045154869 ubox
12 56 0.007666903 ubox
12 57 0.135475226 ubox
13 35 0.014339324 ubox
13 55 0.008472594 ubox
13 56 0.134621460 ubox
14 21 0.173711925 ubox
14 34 0.013804935 ubox
14 39 0.020591630 ubox
14 48 0.042056598 ubox
14 55 0.123898127 ubox
14 56 0.009133632 ubox
15 20 0.179247535 ubox
15 36 0.068055746 ubox
15 38 0.021248162 ubox
15 47 0.043090885 ubox
15 54 0.083127183 ubox
15 55 0.009191709 ubox
15 56 0.019605069 ubox
15 57 0.106395045 ubox
16 35 0.068279339 ubox
16 55 0.019601955 ubox
16 56 0.105122382 ubox
17 34 0.068361391 ubox
17 55 0.089709768 ubox
18 25 0.008240477 ubox
18 33 0.068231623 ubox
18 41 0.051734784 ubox
18 44 0.307815113 ubox
18 50 0.016795168 ubox
19 24 0.009175904 ubox
19 25 0.007008539 ubox
19 40 0.052315494 ubox
19 41 0.085601809 ubox
19 43 0.310278303 ubox
19 44 0.018378513 ubox
19 49 0.016759012 ubox
19 50 0.013175437 ubox
20 24 0.007280931 ubox
20 30 0.072238559 ubox
20 40 0.087898681 ubox
20 41 0.316876474 ubox
20 43 0.018336420 ubox
20 44 0.017700137 ubox
20 49 0.013088350 ubox
20 65 0.572535376 ubox
21 29 0.072449087 ubox
21 40 0.315017253 ubox
21 43 0.017903923 ubox
21 58 0.136479618 ubox
21 64 0.574121194 ubox
22 28 0.072289276 ubox
22 39 0.276611840 ubox
22 42 0.018485772 ubox
22 56 0.010045475 ubox
22 57 0.149496486 ubox
22 63 0.573185673 ubox
23 39 0.246114019 ubox
23 48 0.005083248 ubox
23 55 0.014435789 ubox
23 56 0.141546140 ubox
24 36 0.003994972 ubox
24 37 0.875223097 ubox
24 38 0.208019570 ubox
24 46 0.005727630 ubox
24 47 0.005363884 ubox
24 54 0.011369715 ubox
24 55 0.018173660 ubox
24 62 0.042476783 ubox
24 63 0.003996792 ubox
25 36 0.889743871 ubox
25 37 0.148216384 ubox
25 45 0.005771350 ubox
25 46 0.005299494 ubox
25 53 0.011348485 ubox
25 54 0.009009358 ubox
25 61 0.034127533 ubox
25 62 0.003808201 ubox
26 35 0.901560324 ubox
27 34 0.901023196 ubox
28 33 0.899671917 ubox
28 40 0.016182692 ubox
28 49 0.013629232 ubox
29 35 0.005664487 ubox
29 39 0.039791998 ubox
29 48 0.013710185 ubox
29 55 0.012034426 ubox
30 34 0.004595930 ubox
30 36 0.037563750 ubox
30 38 0.041629812 ubox
30 47 0.013643161 ubox
30 54 0.012718440 ubox
30 56 0.012456824 ubox
30 57 0.020861577 ubox
31 35 0.032784445 ubox
31 55 0.013297312 ubox
31 56 0.019933203 ubox
32 40 0.004494646 ubox
32 43 0.048625559 ubox
32 52 0.014107412 ubox
33 39 0.004941783 ubox
33 42 0.050268007 ubox
33 45 0.003768586 ubox
33 51 0.014131721 ubox
33 53 0.024943855 ubox
33 61 0.334670951 ubox
33 67 0.023845990 ubox
34 41 0.049340724 ubox
34 44 0.003305537 ubox
34 50 0.010295895 ubox
34 52 0.024819192 ubox
34 59 0.023410620 ubox
34 60 0.333838861 ubox
34 66 0.023658460 ubox
35 40 0.036152765 ubox
35 41 0.004717603 ubox
35 49 0.008223906 ubox
35 58 0.026502996 ubox
35 59 0.309742624 ubox
35 64 0.003195352 ubox
35 65 0.018028707 ubox
35 66 0.011947326 ubox
36 40 0.006460682 ubox
36 44 0.007691974 ubox
36 49 0.003190408 ubox
36 50 0.017444214 ubox
36 65 0.012802869 ubox
37 43 0.007732401 ubox
37 44 0.011143480 ubox
37 49 0.017472033 ubox
37 50 0.021884728 ubox
38 43 0.011700488 ubox
38 49 0.022421258 ubox
38 50 0.005008173 ubox
38 65 0.246922392 ubox
39 49 0.004997067 ubox
39 52 0.008694939 ubox
39 58 0.285559539 ubox
39 64 0.247620599 ubox
40 46 0.015523651 ubox
40 47 0.028060548 ubox
40 48 0.005114023 ubox
40 51 0.012172677 ubox
40 54 0.844203756 ubox
40 55 0.013647897 ubox
40 56 0.009482203 ubox
40 57 0.310080904 ubox
40 62 0.016985923 ubox
40 63 0.244795052 ubox
41 45 0.015325204 ubox
41 46 0.027792065 ubox
41 47 0.005168096 ubox
41 51 0.019853845 ubox
41 53 0.848522921 ubox
41 54 0.013565085 ubox
41 55 0.014915032 ubox
41 56 0.299247560 ubox
41 61 0.021380655 ubox
41 62 0.242841882 ubox
42 49 0.012813547 ubox
42 50 0.020105381 ubox
42 52 0.848535811 ubox
43 48 0.009988231 ubox
43 51 0.798676866 ubox
43 54 0.415868438 ubox
43 55 0.004516711 ubox
43 57 0.005565452 ubox
43 62 0.007045789 ubox
43 63 0.006377037 ubox
44 51 0.286301117 ubox
44 53 0.416695322 ubox
44 54 0.003462306 ubox
44 61 0.008958335 ubox
44 62 0.006393418 ubox
45 50 0.401508761 ubox
45 52 0.416067272 ubox
47 65 0.311698601 ubox
48 58 0.020450048 ubox
48 64 0.312668374 ubox
49 55 0.011312802 ubox
49 57 0.022350159 ubox
49 62 0.027630383 ubox
49 63 0.312214757 ubox
50 54 0.011373394 ubox
50 56 0.018603361 ubox
50 61 0.034846117 ubox
50 62 0.309560733 ubox
54 65 0.010091355 ubox
55 64 0.012714486 ubox
55 65 0.009340069 ubox
55 66 0.019472479 ubox
56 64 0.009946642 ubox
56 65 0.020620566 ubox
56 66 0.088045461 ubox
57 65 0.095268674 ubox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
showpage
end
%%EOF
