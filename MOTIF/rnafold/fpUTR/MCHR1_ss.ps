%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGCAGCCUGUGUGCUUUGUCCGUUUGCCUUUGCAGAGACCUCGAUCUUCACGCAAGGCAAGCAGCAGCCCCUGUAAGCACACGAGACAAUCCCAAGUGUCAGUGGGAAGGAGAUCCCUUUCCUGAUGGGGCUGCCUGUGUCCAGUCCCUCCCAGCUUCCCCAGGGCCCUGGGGCUCUGCAGGCAUUCAGAAGUGGAAGCCAGCCACAGCCUGGGACUGAAGAGGUUAAUGUGCAUCUGCCUCCGAAUGUUA\
AUGUGUCUAGGUG\
) } def
/len { sequence length } bind def

/coor [
[135.81924438 438.57714844]
[149.16653442 431.55569458]
[145.69467163 416.96301270]
[142.22280884 402.37036133]
[138.75094604 387.77767944]
[135.27908325 373.18499756]
[131.80722046 358.59231567]
[128.33535767 343.99966431]
[124.86349487 329.40698242]
[122.10382080 327.26562500]
[120.22901154 323.69671631]
[119.89198303 319.12359619]
[121.53512573 314.24243164]
[118.57656097 299.53707886]
[115.61799622 284.83175659]
[112.65943146 270.12640381]
[109.70087433 255.42108154]
[106.74230957 240.71574402]
[96.64670563 229.76457214]
[101.51010132 214.70941162]
[98.55153656 200.00407410]
[95.59297180 185.29873657]
[85.49736786 174.34756470]
[90.36076355 159.29240417]
[87.40219879 144.58706665]
[73.81788635 138.22575378]
[60.62797546 145.36901855]
[47.43806076 152.51228333]
[34.24814987 159.65554810]
[21.05823898 166.79881287]
[7.86832762 173.94207764]
[-5.32158375 181.08534241]
[-18.51149559 188.22860718]
[-31.70140648 195.37187195]
[-37.73067093 202.18595886]
[-45.08732986 202.52052307]
[-58.35976410 209.50926208]
[-68.37212372 227.03157043]
[-87.65540314 225.35260010]
[-100.76099396 232.64941406]
[-113.86658478 239.94622803]
[-126.97217560 247.24304199]
[-131.05824280 262.50997925]
[-144.78448486 270.34362793]
[-160.00737000 266.09637451]
[-167.69543457 252.28807068]
[-163.28749084 237.11093140]
[-149.39868164 229.56929016]
[-134.26899719 234.13745117]
[-121.16339874 226.84063721]
[-108.05781555 219.54382324]
[-94.95222473 212.24700928]
[-93.06327057 202.24845886]
[-85.84416962 194.76974487]
[-75.49114990 192.43205261]
[-65.34850311 196.23681641]
[-52.07606888 189.24807739]
[-38.84467316 182.18196106]
[-25.65476036 175.03869629]
[-12.46484852 167.89543152]
[0.72506285 160.75216675]
[13.91497421 153.60890198]
[27.10488510 146.46563721]
[40.29479599 139.32237244]
[53.48471069 132.17910767]
[66.67462158 125.03584290]
[60.75717926 100.28411102]
[70.25602722 78.32125092]
[60.18872833 67.20146942]
[50.12142944 56.08168793]
[40.05413055 44.96191025]
[29.98683167 33.84212875]
[19.91953278 22.72235107]
[9.85223484 11.60257053]
[-0.21506362 0.48279059]
[-10.87196827 5.73501587]
[-22.72508812 7.81158161]
[-34.83645248 6.46128178]
[-46.22317886 1.70758784]
[-55.93721771 -6.14645290]
[-63.14418030 -16.53627205]
[-67.19467163 -28.67584229]
[-67.68208313 -41.61692810]
[-64.48171997 -54.32312775]
[-76.22477722 -63.65589523]
[-87.96784210 -72.98866272]
[-100.82450867 -72.29774475]
[-110.40821075 -80.28369141]
[-111.94480896 -92.26007080]
[-123.57807922 -101.72934723]
[-135.21134949 -111.19862366]
[-146.84460449 -120.66789246]
[-161.80798340 -116.55970001]
[-176.31642151 -122.06284332]
[-184.79115295 -135.06124878]
[-183.97346497 -150.55676270]
[-174.17776489 -162.59104919]
[-159.17071533 -166.53668213]
[-144.72282410 -160.87646484]
[-136.38960266 -147.78689575]
[-137.37533569 -132.30116272]
[-125.74207306 -122.83188629]
[-114.10880280 -113.36260986]
[-102.47554016 -103.89334106]
[-85.01145935 -102.02386475]
[-78.63507080 -84.73171997]
[-66.89201355 -75.39895630]
[-55.14895248 -66.06618500]
[-43.19112396 -75.12214661]
[-48.99201584 -88.95506287]
[-54.79290390 -102.78798676]
[-60.59379196 -116.62090302]
[-66.39468384 -130.45382690]
[-72.19557190 -144.28674316]
[-86.91623688 -150.03805542]
[-93.18191528 -164.54725647]
[-87.27529144 -179.20628357]
[-72.70066071 -185.31822205]
[-58.10488892 -179.25694275]
[-52.14739227 -164.61849976]
[-58.36264801 -150.08763123]
[-52.56175995 -136.25471497]
[-46.76087189 -122.42179108]
[-40.95998383 -108.58887482]
[-35.15909195 -94.75595093]
[-29.35820389 -80.92303467]
[-7.79631948 -78.18256378]
[9.72409439 -66.10981750]
[19.53071404 -47.74522400]
[19.80469894 -27.38630867]
[10.90471649 -9.58450794]
[20.97201538 1.53527200]
[31.03931236 12.65505219]
[41.10661316 23.77483177]
[51.17390823 34.89461136]
[61.24120712 46.01439285]
[71.30850983 57.13417053]
[81.37580872 68.25395203]
[87.53986359 65.36739349]
[94.13004303 63.66522598]
[100.92096710 63.20565033]
[107.68039703 64.00439453]
[114.17716980 66.03413391]
[120.18910217 69.22545624]
[125.51058960 73.46922302]
[129.95965576 78.62030792]
[143.68884277 72.57799530]
[157.41802979 66.53568268]
[171.14720154 60.49337006]
[184.87638855 54.45105362]
[198.60557556 48.40874100]
[212.33474731 42.36642838]
[213.32510376 28.46522713]
[223.46134949 16.65859413]
[240.21127319 12.79328728]
[250.01611328 1.44141448]
[259.82095337 -9.91045856]
[269.62579346 -21.26233101]
[267.10369873 -34.47171783]
[272.55990601 -46.55014801]
[283.80407715 -53.19187927]
[296.62838745 -52.17103958]
[306.56512451 -63.40763092]
[309.29891968 -79.57730865]
[324.76141357 -85.04022980]
[337.04611206 -74.17662048]
[333.51556396 -58.16201782]
[317.80172729 -53.47088242]
[307.86495972 -42.23428726]
[309.60299683 -25.49068451]
[298.46109009 -12.42431259]
[280.97769165 -11.45748615]
[271.17282104 -0.10561349]
[261.36798096 11.24625969]
[251.56314087 22.59813309]
[258.85995483 35.70372009]
[273.67391968 33.34855270]
[288.48785400 30.99338531]
[303.30181885 28.63821793]
[313.33258057 14.28593349]
[330.30819702 11.69727802]
[343.62539673 21.99393463]
[358.41082764 19.46592331]
[370.70962524 9.51349831]
[384.55883789 14.99514294]
[399.34426880 12.46713066]
[414.12969971 9.93911839]
[426.42846680 -0.01330647]
[440.27767944 5.46833801]
[455.06314087 2.94032598]
[469.84857178 0.41231373]
[484.63400269 -2.11569858]
[496.89849854 -13.00211048]
[512.37109375 -7.56791210]
[515.13494873 8.59665871]
[502.34677124 18.86287880]
[487.16201782 12.66973877]
[472.37658691 15.19775105]
[457.59115601 17.72576332]
[442.80569458 20.25377464]
[431.56448364 30.02537918]
[416.65771484 24.72455597]
[401.87228394 27.25256729]
[387.08685303 29.78058052]
[375.84561157 39.55218506]
[360.93884277 34.25136185]
[346.15341187 36.77937317]
[340.26629639 48.21819687]
[328.69799805 54.27778625]
[315.55697632 52.55375290]
[305.65698242 43.45217133]
[290.84304810 45.80733871]
[276.02908325 48.16250610]
[261.21511841 50.51767349]
[239.14002991 65.82208252]
[218.37705994 56.09560776]
[204.64788818 62.13792419]
[190.91870117 68.18023682]
[177.18951416 74.22254944]
[163.46034241 80.26486206]
[149.73115540 86.30717468]
[136.00196838 92.34949493]
[137.42947388 105.14231873]
[134.33261108 117.98107910]
[126.86147308 129.27539062]
[115.72074127 137.54847717]
[102.10753632 141.62850952]
[105.06610107 156.33384705]
[115.37332153 168.33683777]
[110.29830933 182.34017944]
[113.25687408 197.04551697]
[116.21543884 211.75083923]
[126.52265167 223.75384521]
[121.44764709 237.75717163]
[124.40620422 252.46250916]
[127.36476898 267.16784668]
[130.32333374 281.87319946]
[133.28189087 296.57852173]
[136.24046326 311.28384399]
[139.45616150 325.93511963]
[142.92802429 340.52780151]
[146.39988708 355.12045288]
[149.87174988 369.71313477]
[153.34361267 384.30581665]
[156.81549072 398.89849854]
[160.28735352 413.49114990]
[163.75921631 428.08383179]
[178.83847046 428.34207153]
[193.37954712 432.34304810]
[206.46838379 439.83526611]
[217.28219604 450.34774780]
[225.14122009 463.21969604]
[229.55142212 477.64190674]
[230.23559570 492.70785522]
[227.15071106 507.47045898]
[220.49070740 521.00170898]
[210.67420959 532.45104980]
[198.31832886 541.09875488]
[184.19972229 546.40124512]
[169.20593262 548.02514648]
[154.27947998 545.86840820]
[140.35862732 540.06658936]
[128.31846619 530.98443604]
[118.91586304 519.19287109]
[112.74185944 505.43304443]
[110.18456268 490.56997681]
[111.40472412 475.53793335]
[116.32564545 461.28186035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 247]
[3 246]
[4 245]
[5 244]
[6 243]
[7 242]
[8 241]
[9 240]
[13 239]
[14 238]
[15 237]
[16 236]
[17 235]
[18 234]
[20 232]
[21 231]
[22 230]
[24 228]
[25 227]
[26 66]
[27 65]
[28 64]
[29 63]
[30 62]
[31 61]
[32 60]
[33 59]
[34 58]
[36 57]
[37 56]
[39 52]
[40 51]
[41 50]
[42 49]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[84 108]
[85 107]
[86 106]
[89 104]
[90 103]
[91 102]
[92 101]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[146 222]
[147 221]
[148 220]
[149 219]
[150 218]
[151 217]
[152 216]
[155 175]
[156 174]
[157 173]
[158 172]
[162 169]
[163 168]
[176 214]
[177 213]
[178 212]
[179 211]
[182 207]
[183 206]
[185 204]
[186 203]
[187 202]
[189 200]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
