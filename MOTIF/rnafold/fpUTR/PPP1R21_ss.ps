%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCUUCCUCCCACCCCGGGAACCCGGAAGUGGAGGAGGAGGCGCGGCGGCGGCGGCGGCGGCGGCUGCGGUGGCCAAGCAGGCAGAUACUGCCUGACCCGUUCCCGGGAGCGUGUCUGGGUUUGGGGGCGGGAGACAGGCUGAGCCGCCUGGGCGGCCUGGCCUGUACGGGGCGGGGGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[87.11992645 391.25659180]
[72.62409973 385.39102173]
[65.33567047 371.55581665]
[68.69601440 356.28356934]
[81.11847687 346.78530884]
[81.62509155 331.79388428]
[82.13170624 316.80242920]
[82.63831329 301.81100464]
[83.14492798 286.81954956]
[80.22217560 280.01342773]
[83.78881836 271.57980347]
[84.54855347 256.59906006]
[85.30829620 241.61830139]
[78.22554779 228.51547241]
[86.65188599 215.12490845]
[87.41162109 200.14416504]
[88.17136383 185.16340637]
[88.93109894 170.18266296]
[89.69083405 155.20191956]
[83.53253937 153.68754578]
[77.58425903 151.48849487]
[71.92185211 148.63278198]
[66.61753082 145.15684509]
[61.73894882 141.10501099]
[57.34832001 136.52896118]
[44.75447845 144.67727661]
[32.16064072 152.82560730]
[25.17667580 167.66326904]
[8.81451130 168.76399231]
[-0.09386148 154.99543762]
[7.61572790 140.52153015]
[24.01231575 140.23176575]
[36.60615540 132.08343506]
[49.19999313 123.93511963]
[46.37423325 116.66755676]
[44.58241653 109.07863617]
[43.85908890 101.31467438]
[44.21819687 93.52536774]
[45.65282059 85.86089325]
[31.77051163 80.17920685]
[17.51968384 89.27081299]
[0.82303804 88.09658813]
[-11.76277542 77.31592560]
[-15.41356659 61.32152939]
[-29.38985443 55.87512207]
[-43.36614227 50.42871475]
[-57.34243393 44.98230362]
[-71.31871796 39.53589630]
[-85.29500580 34.08948898]
[-100.96272278 36.28797913]
[-110.01202393 24.45753670]
[-123.98831177 19.01112938]
[-139.65602112 21.20962143]
[-148.70532227 9.37917709]
[-162.68161011 3.93276930]
[-178.80088806 6.94954920]
[-189.26625061 -5.67615700]
[-183.31181335 -20.95610428]
[-167.06300354 -23.17159462]
[-157.23521423 -10.04351902]
[-143.25891113 -4.59711123]
[-128.59088135 -7.18516636]
[-118.54190063 5.03484058]
[-104.56561279 10.48124886]
[-89.89758301 7.89319324]
[-79.84860229 20.11320114]
[-65.87231445 25.55960846]
[-51.89602280 31.00601578]
[-37.91973495 36.45242310]
[-23.94344711 41.89883423]
[-9.96715832 47.34524155]
[0.55955791 39.11401749]
[13.88658047 37.14886475]
[26.54301643 42.06984329]
[35.17900085 52.68938446]
[37.45219421 66.29689789]
[51.33450317 71.97858429]
[57.67984390 63.08746719]
[65.62638855 55.59295654]
[74.87347412 49.77860641]
[85.07123566 45.86440659]
[83.05056763 31.00113297]
[81.02989197 16.13786125]
[79.00922394 1.27458763]
[76.98854828 -13.58868504]
[74.96788025 -28.45195770]
[72.94720459 -43.31523132]
[64.82226562 -58.19547653]
[76.87178040 -70.12215424]
[91.66799164 -61.84517288]
[87.81047821 -45.33590317]
[89.83115387 -30.47262955]
[91.85182190 -15.60935688]
[93.87249756 -0.74608427]
[95.89316559 14.11718845]
[97.91384125 28.98046112]
[99.93450928 43.84373474]
[118.16307831 46.86213303]
[134.42536926 55.63307571]
[145.12117004 45.11642456]
[155.81697083 34.59977341]
[166.51275635 24.08312416]
[177.20855713 13.56647301]
[187.90435791 3.04982305]
[198.60015869 -7.46682739]
[209.29594421 -17.98347664]
[219.99174500 -28.50012779]
[222.13307190 -34.79255676]
[226.48565674 -38.48926544]
[231.23088074 -39.18371964]
[242.27577209 -49.33312988]
[253.32064819 -59.48254013]
[264.36553955 -69.63195038]
[262.45355225 -85.03077698]
[269.98736572 -98.59621429]
[284.07009888 -105.11208344]
[299.28662109 -102.07288361]
[309.78588867 -90.64726257]
[311.53073120 -75.22859955]
[303.85018921 -61.74568558]
[289.69760132 -55.38297653]
[274.51495361 -58.58706284]
[263.47006226 -48.43765259]
[252.42517090 -38.28824234]
[241.38029480 -28.13883400]
[230.50839233 -17.80433083]
[219.81260681 -7.28768063]
[209.11680603 3.22896934]
[198.42100525 13.74561977]
[187.72520447 24.26226997]
[177.02941895 34.77891922]
[166.33361816 45.29557037]
[155.63781738 55.81222153]
[144.94201660 66.32887268]
[153.18177795 81.96590424]
[156.15298462 99.38951111]
[153.56129456 116.87360382]
[167.13801575 123.25112152]
[180.71472168 129.62863159]
[194.29144287 136.00614929]
[207.86816406 142.38366699]
[221.44488525 148.76118469]
[235.02159119 155.13871765]
[248.59831238 161.51623535]
[264.37869263 160.38047791]
[272.60870361 172.79484558]
[286.18539429 179.17236328]
[299.76211548 185.54988098]
[313.33883667 191.92739868]
[326.91555786 198.30491638]
[343.20172119 196.38322449]
[352.79083252 209.68664551]
[345.81845093 224.52975464]
[329.45715332 225.64323425]
[320.53805542 211.88163757]
[306.96133423 205.50411987]
[293.38461304 199.12660217]
[279.80789185 192.74908447]
[266.23117065 186.37156677]
[251.42187500 187.96348572]
[242.22079468 175.09294128]
[228.64407349 168.71542358]
[215.06736755 162.33790588]
[201.49064636 155.96038818]
[187.91392517 149.58287048]
[174.33720398 143.20535278]
[160.76049805 136.82783508]
[147.18377686 130.45031738]
[128.89552307 148.15162659]
[104.67158508 155.96165466]
[103.91184998 170.94239807]
[103.15210724 185.92314148]
[102.39237213 200.90390015]
[101.63263702 215.88464355]
[108.66103363 230.05899048]
[100.28903961 242.37803650]
[99.52930450 257.35879517]
[98.76956940 272.33953857]
[98.13636780 287.32617188]
[97.62976074 302.31759644]
[97.12314606 317.30905151]
[96.61653137 332.30050659]
[96.10992432 347.29193115]
[107.86282349 357.60714722]
[110.18447113 373.07141113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[11 178]
[12 177]
[13 176]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[25 34]
[26 33]
[27 32]
[39 77]
[40 76]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[51 64]
[52 63]
[54 61]
[55 60]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[110 125]
[111 124]
[112 123]
[113 122]
[137 168]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
