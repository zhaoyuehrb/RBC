%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGCGGGGGCGGAGGAGGAGCGAGCCGGGCCGGGGGGCAGCUGCACAGUCUCCGGGAUCCCCAGGCCUGGAGGGGGGUCUGUGCGCGGCCGGCUGGCUCUGCCCCGCGUCCGGUCCCGAGCGGGCCUCCCUCGGGCCAGCCCGAUGUGACCGAGCCCAGCGGAGCCUGAGCAAGGAGCGGGUCCGUCGCGGAGCCGGAGGGCGGGAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[485.81362915 230.74787903]
[479.70782471 219.93772888]
[476.36978149 207.96810913]
[475.99942017 195.53619385]
[461.43325806 191.95465088]
[446.86712646 188.37309265]
[432.25021362 185.00476074]
[417.58563232 181.85037231]
[402.92105103 178.69596863]
[388.25646973 175.54156494]
[374.18670654 180.42939758]
[362.32223511 169.96302795]
[347.65765381 166.80862427]
[332.99307251 163.65423584]
[318.32849121 160.49983215]
[311.13040161 162.16584778]
[303.47341919 157.19071960]
[288.85650635 153.82238770]
[274.71682739 158.50411987]
[263.00653076 147.86550903]
[248.38961792 144.49717712]
[233.77270508 141.12884521]
[219.15577698 137.76051331]
[204.53886414 134.39218140]
[190.39916992 139.07389832]
[178.68890381 128.43528748]
[164.07197571 125.06695557]
[149.45506287 121.69862366]
[134.83813477 118.33029175]
[120.22122192 114.96195984]
[105.60430145 111.59362030]
[90.74858856 113.66915894]
[77.61456299 120.91466522]
[64.48053741 128.16017151]
[56.47369003 142.47178650]
[40.07461548 142.42288208]
[32.15327454 128.06375122]
[40.85846329 114.16585541]
[57.23503113 115.02614594]
[70.36905670 107.78063965]
[83.50308228 100.53513336]
[82.95561981 93.05514526]
[81.31322479 70.61516571]
[67.26420593 65.35920715]
[58.13319016 65.28356934]
[53.04925156 59.92244339]
[39.07853317 54.46176529]
[25.10781288 49.00108719]
[11.13709450 43.54040527]
[-2.83362460 38.07972717]
[-16.80434418 32.61904907]
[-30.96517754 27.67225266]
[-45.29722977 23.24593925]
[-59.62928391 18.81962395]
[-73.96133423 14.39331055]
[-88.29338837 9.96699619]
[-102.62544250 5.54068232]
[-116.95749664 1.11436832]
[-131.28955078 -3.31194592]
[-140.40939331 -2.85406327]
[-145.79782104 -7.90905666]
[-160.06367493 -12.54431152]
[-175.98323059 -8.60733223]
[-187.15597534 -20.61156273]
[-182.08836365 -36.20807648]
[-165.99349976 -39.35251999]
[-155.42842102 -26.81015968]
[-141.16256714 -22.17490387]
[-126.86323547 -17.64399910]
[-112.53118134 -13.21768475]
[-98.19912720 -8.79137039]
[-83.86707306 -4.36505651]
[-69.53501892 0.06125754]
[-55.20296860 4.48757172]
[-40.87091446 8.91388607]
[-26.53886223 13.34019947]
[-31.14496994 -0.93508554]
[-22.98165512 -13.51921463]
[-8.06866169 -15.13247299]
[2.59696078 -4.58522224]
[1.15023184 10.34484673]
[-11.34366512 18.64833069]
[2.62705398 24.10900879]
[16.59777260 29.56968689]
[30.56849289 35.03036499]
[44.53921127 40.49104691]
[58.50992966 45.95172501]
[72.52017212 51.31018829]
[86.56919098 56.56615067]
[107.15053558 67.30809021]
[114.32442474 84.01179504]
[108.97263336 96.97670746]
[123.58955383 100.34503937]
[138.20646667 103.71337128]
[152.82339478 107.08170319]
[167.44030762 110.45003510]
[182.05723572 113.81836700]
[197.24241638 109.37757874]
[207.90719604 119.77525330]
[222.52412415 123.14358521]
[237.14103699 126.51192474]
[251.75794983 129.88024902]
[266.37487793 133.24858093]
[281.56005859 128.80780029]
[292.22485352 139.20547485]
[306.84176636 142.57380676]
[321.48291016 145.83526611]
[336.14746094 148.98965454]
[350.81204224 152.14405823]
[365.47662354 155.29844666]
[380.59530640 150.63624573]
[391.41088867 160.87699890]
[406.07543945 164.03138733]
[420.74002075 167.18579102]
[435.40460205 170.34019470]
[441.79931641 168.68048096]
[447.25445557 170.26016235]
[450.44866943 173.80696106]
[465.01480103 177.38850403]
[479.58096313 180.97004700]
[489.14602661 165.89346313]
[503.26754761 155.00640869]
[520.23614502 149.60618591]
[538.00494385 150.32714844]
[554.43621826 157.06628418]
[567.55883789 168.99754333]
[575.80456543 184.67309570]
[578.19543457 202.19892883]
[592.94592285 204.92349243]
[607.92193604 199.82151794]
[619.03210449 209.74185181]
[633.78259277 212.46640015]
[648.53308105 215.19094849]
[663.28356934 217.91551208]
[678.03405762 220.64006042]
[693.01000977 215.53808594]
[704.12023926 225.45841980]
[718.87066650 228.18296814]
[733.62115479 230.90753174]
[742.20684814 224.23582458]
[752.82812500 223.40602112]
[761.96130371 228.45135498]
[766.70898438 237.49551392]
[781.37359619 240.64991760]
[796.06079102 243.69709778]
[810.76989746 246.63688660]
[825.47900391 249.57667542]
[840.18811035 252.51646423]
[854.89721680 255.45625305]
[863.92266846 254.06956482]
[869.79907227 258.54794312]
[884.46362305 261.70236206]
[899.12823486 264.85675049]
[913.79278564 268.01113892]
[925.02886963 261.68167114]
[937.17657471 264.60879517]
[943.85314941 274.69366455]
[958.47009277 278.06198120]
[973.11120605 281.32342529]
[987.77575684 284.47784424]
[1005.16845703 278.42575073]
[1017.71051025 290.70211792]
[1032.41967773 293.64190674]
[1043.06787109 282.47869873]
[1058.06652832 278.86672974]
[1072.62939453 283.95858765]
[1082.10949707 296.12942505]
[1083.48193359 311.49563599]
[1076.30871582 325.15386963]
[1062.87866211 332.74584961]
[1047.47741699 331.84902954]
[1035.01928711 322.74951172]
[1029.47985840 308.35101318]
[1014.77075195 305.41119385]
[1004.53796387 311.85879517]
[992.26110840 309.53213501]
[984.62139893 299.14242554]
[969.95678711 295.98800659]
[962.75872803 297.65402222]
[955.10174561 292.67889404]
[940.48480225 289.31057739]
[924.00427246 295.34405518]
[910.63836670 282.67572021]
[895.97381592 279.52133179]
[881.30926514 276.36691284]
[866.64465332 273.21252441]
[851.95745850 270.16534424]
[837.24835205 267.22555542]
[822.53924561 264.28576660]
[807.83013916 261.34597778]
[793.12103271 258.40618896]
[785.94805908 260.17721558]
[778.21917725 255.31449890]
[763.55462646 252.16009521]
[745.63061523 259.41851807]
[730.89660645 245.65800476]
[716.14611816 242.93345642]
[701.39562988 240.20890808]
[687.47473145 245.50575256]
[675.30950928 235.39054871]
[660.55902100 232.66598511]
[645.80853271 229.94143677]
[631.05804443 227.21688843]
[616.30755615 224.49234009]
[602.38659668 229.78918457]
[590.22137451 219.67396545]
[575.47088623 216.94941711]
[570.13854980 228.05105591]
[562.29235840 237.55841064]
[552.38616943 244.91319275]
[540.99505615 249.68185425]
[528.78179932 251.58119202]
[516.45849609 250.49510193]
[504.74481201 246.48167419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 120]
[5 119]
[6 118]
[7 115]
[8 114]
[9 113]
[10 112]
[12 110]
[13 109]
[14 108]
[15 107]
[17 106]
[18 105]
[20 103]
[21 102]
[22 101]
[23 100]
[24 99]
[26 97]
[27 96]
[28 95]
[29 94]
[30 93]
[31 92]
[32 41]
[33 40]
[34 39]
[43 89]
[44 88]
[46 87]
[47 86]
[48 85]
[49 84]
[50 83]
[51 82]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[61 68]
[62 67]
[128 207]
[129 206]
[131 204]
[132 203]
[133 202]
[134 201]
[135 200]
[137 198]
[138 197]
[139 196]
[143 194]
[144 193]
[145 191]
[146 190]
[147 189]
[148 188]
[149 187]
[151 186]
[152 185]
[153 184]
[154 183]
[157 181]
[158 180]
[159 178]
[160 177]
[162 174]
[163 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
