%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL23)
} def

/sequence { (\
CUGGCAUCCCGAGAAGCCAGGAAGCAGUGAGCCCAGGAGUCCUCGGCCAGCCCUGCCUGCCCACCAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.003208636 ubox
1 20 0.955447884 ubox
1 21 0.043014866 ubox
1 24 0.003270482 ubox
1 27 0.006446038 ubox
1 50 0.245589800 ubox
1 67 0.005977031 ubox
1 70 0.006974133 ubox
2 11 0.003994442 ubox
2 19 0.960608046 ubox
2 20 0.021326178 ubox
2 26 0.006697518 ubox
2 49 0.250267601 ubox
2 66 0.005969475 ubox
2 69 0.006657515 ubox
3 10 0.005542546 ubox
3 18 0.961958273 ubox
3 25 0.005023738 ubox
3 48 0.251109196 ubox
3 52 0.099168245 ubox
3 53 0.004248569 ubox
3 65 0.005878608 ubox
4 9 0.005479242 ubox
4 17 0.961981880 ubox
4 25 0.013352381 ubox
4 47 0.251033198 ubox
4 51 0.105321136 ubox
4 52 0.003260267 ubox
4 64 0.005643089 ubox
5 16 0.961365085 ubox
5 24 0.014091421 ubox
5 46 0.184758812 ubox
5 50 0.105256534 ubox
5 59 0.003201219 ubox
7 14 0.916409633 ubox
7 22 0.014088705 ubox
7 69 0.004254300 ubox
8 13 0.925667639 ubox
8 21 0.014172793 ubox
8 45 0.005677340 ubox
8 46 0.015955701 ubox
8 68 0.004526973 ubox
9 20 0.014007644 ubox
9 21 0.003873813 ubox
9 45 0.016512037 ubox
9 46 0.199455420 ubox
9 67 0.004499465 ubox
9 68 0.004463095 ubox
10 20 0.004364319 ubox
10 45 0.271332307 ubox
10 67 0.004490959 ubox
11 41 0.006181839 ubox
11 44 0.272197199 ubox
12 40 0.006167877 ubox
12 43 0.271775344 ubox
13 41 0.168962219 ubox
13 42 0.213331326 ubox
14 40 0.237867958 ubox
16 40 0.007676453 ubox
16 57 0.003172685 ubox
16 60 0.006608396 ubox
17 37 0.272191793 ubox
17 39 0.006816445 ubox
17 59 0.004772262 ubox
18 36 0.271802496 ubox
18 55 0.006764812 ubox
18 59 0.007719281 ubox
19 54 0.013514588 ubox
19 58 0.011681110 ubox
20 33 0.023244379 ubox
20 34 0.270070339 ubox
20 53 0.016723277 ubox
20 57 0.013245424 ubox
20 58 0.003387057 ubox
20 61 0.018602843 ubox
20 62 0.016597334 ubox
20 65 0.005095775 ubox
21 32 0.023091377 ubox
21 33 0.269170561 ubox
21 51 0.006701789 ubox
21 52 0.022452887 ubox
21 53 0.009522840 ubox
21 56 0.014580978 ubox
21 57 0.013821150 ubox
21 60 0.028546584 ubox
21 61 0.018114229 ubox
21 64 0.005570405 ubox
23 54 0.061690461 ubox
23 58 0.040430577 ubox
24 32 0.259400046 ubox
24 51 0.580418291 ubox
24 53 0.063671930 ubox
24 56 0.207614392 ubox
24 57 0.030174332 ubox
24 60 0.040357743 ubox
25 31 0.260414990 ubox
25 50 0.580158832 ubox
25 55 0.227194562 ubox
25 59 0.040471911 ubox
26 54 0.225582065 ubox
26 58 0.040417008 ubox
27 51 0.649333358 ubox
27 53 0.215434632 ubox
27 56 0.003856892 ubox
27 57 0.039071450 ubox
27 64 0.006581277 ubox
28 35 0.003316899 ubox
28 45 0.003835261 ubox
28 49 0.649132437 ubox
28 50 0.637636495 ubox
28 55 0.004731366 ubox
28 63 0.006614336 ubox
29 34 0.003364787 ubox
29 44 0.004541177 ubox
29 48 0.705121575 ubox
29 62 0.006618223 ubox
30 43 0.004527102 ubox
30 54 0.009811375 ubox
31 42 0.004394185 ubox
31 47 0.961677855 ubox
31 51 0.011563711 ubox
31 53 0.005001074 ubox
31 60 0.006555090 ubox
32 46 0.961461986 ubox
32 50 0.011574619 ubox
32 59 0.006542945 ubox
33 45 0.960254395 ubox
33 46 0.034826434 ubox
34 45 0.046202578 ubox
34 55 0.007427983 ubox
35 43 0.948882589 ubox
35 54 0.007626102 ubox
36 42 0.960059346 ubox
36 43 0.044579682 ubox
36 44 0.016025602 ubox
36 53 0.007645164 ubox
37 41 0.944570960 ubox
37 42 0.046894673 ubox
37 43 0.013399411 ubox
37 44 0.022146873 ubox
37 52 0.007625249 ubox
38 43 0.020788415 ubox
39 47 0.003454623 ubox
39 51 0.006597719 ubox
40 46 0.003480993 ubox
40 50 0.006377485 ubox
41 45 0.003398442 ubox
48 55 0.003232582 ubox
48 59 0.003394180 ubox
49 58 0.003574620 ubox
50 56 0.015649877 ubox
50 57 0.003330574 ubox
51 55 0.015671055 ubox
51 71 0.041169433 ubox
52 68 0.054667897 ubox
52 70 0.040899121 ubox
52 71 0.937722339 ubox
53 67 0.054838801 ubox
53 70 0.956466508 ubox
53 71 0.107375078 ubox
54 66 0.054796451 ubox
54 69 0.953133786 ubox
54 70 0.100565274 ubox
55 65 0.054456337 ubox
56 68 0.971732103 ubox
56 71 0.063824022 ubox
57 67 0.977089945 ubox
57 68 0.023918042 ubox
57 70 0.125441836 ubox
57 71 0.070346645 ubox
58 66 0.976630430 ubox
58 67 0.023531941 ubox
58 69 0.124244144 ubox
58 70 0.067815439 ubox
59 65 0.971722104 ubox
60 68 0.139169057 ubox
60 71 0.024476399 ubox
61 67 0.138860004 ubox
61 68 0.118378350 ubox
61 70 0.024728871 ubox
61 71 0.027757606 ubox
62 67 0.119006363 ubox
62 70 0.028251912 ubox
64 71 0.047955908 ubox
65 70 0.048464290 ubox
1 20 0.9500000 lbox
2 19 0.9500000 lbox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
37 41 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
56 68 0.9500000 lbox
57 67 0.9500000 lbox
58 66 0.9500000 lbox
59 65 0.9500000 lbox
showpage
end
%%EOF
