%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGCUAGGUGCUCCUCCGAGCAGCUGGAGACUGGAGUGUCCCUGACGGAGGUUGCGGCUGGACCUGGUUACGUGCUGGUGCUGCGCUCCAGAGAGGCAGAAAACGAGUGGGAGCUGAGGUGUCUUAAAGCCGUUCCUCAGCCUGGGAGAAGAUCUCUGGCUUCAGG\
) } def
/len { sequence length } bind def

/coor [
[63.43826675 116.67830658]
[48.86905289 120.24733734]
[34.29983902 123.81636047]
[19.73062134 127.38539124]
[5.16140652 130.95442200]
[-9.40780926 134.52345276]
[-23.94342613 138.22694397]
[-38.44420242 142.06457520]
[-52.94497681 145.90222168]
[-67.44575500 149.73986816]
[-78.80709839 160.75033569]
[-93.09032440 156.52671814]
[-107.59109497 160.36436462]
[-122.09187317 164.20199585]
[-134.82325745 177.48077393]
[-151.56538391 172.27676392]
[-165.99278259 176.38171387]
[-180.42016602 180.48666382]
[-194.84754944 184.59159851]
[-209.27493286 188.69654846]
[-223.70231628 192.80149841]
[-230.66719055 203.68797302]
[-242.79795837 206.79544067]
[-253.43417358 200.98229980]
[-267.93493652 204.81994629]
[-282.43572998 208.65757751]
[-287.43383789 213.08180237]
[-293.06970215 214.12985229]
[-297.54339600 212.35850525]
[-312.17605591 215.65771484]
[-326.80874634 218.95690918]
[-338.56918335 229.54002380]
[-352.68658447 224.79151917]
[-367.31927490 228.09071350]
[-378.99655151 239.60475159]
[-394.73260498 234.98867798]
[-398.33953857 218.99110413]
[-386.10684204 208.06898499]
[-370.61846924 213.45803833]
[-355.98577881 210.15884399]
[-345.27197266 199.81169128]
[-330.10794067 204.32421875]
[-315.47525024 201.02502441]
[-300.84259033 197.72583008]
[-286.27337646 194.15679932]
[-271.77258301 190.31916809]
[-257.27182007 186.48152161]
[-245.53425598 173.45806885]
[-227.80726624 178.37409973]
[-213.37986755 174.26916504]
[-198.95248413 170.16421509]
[-184.52510071 166.05926514]
[-170.09771729 161.95433044]
[-155.67033386 157.84938049]
[-149.49369812 147.42005920]
[-137.47688293 143.89750671]
[-125.92951965 149.70123291]
[-111.42874146 145.86358643]
[-96.92796326 142.02593994]
[-86.60380554 131.28997803]
[-71.28339386 135.23908997]
[-56.78261948 131.40144348]
[-42.28184128 127.56380463]
[-27.78106689 123.72616577]
[-22.09700394 118.95629883]
[-12.97683716 119.95423126]
[1.59237850 116.38520050]
[16.16159439 112.81617737]
[30.73081017 109.24714661]
[45.30002594 105.67811584]
[59.86923981 102.10909271]
[60.80618286 88.08027649]
[66.58974457 74.96968842]
[76.69167328 64.42996979]
[90.02857208 57.85695267]
[105.07656860 56.20648193]
[120.04501343 59.85979080]
[124.94309235 45.68203354]
[129.84117126 31.50427628]
[127.03429413 15.93404865]
[138.50340271 6.43096542]
[143.40148926 -7.74679232]
[138.65374756 -27.31168175]
[153.71806335 -39.39773941]
[158.08891296 -53.74680710]
[162.45974731 -68.09587097]
[166.83059692 -82.44493866]
[166.33956909 -91.60639191]
[171.41705322 -97.01741791]
[176.05232239 -111.28326416]
[180.68757629 -125.54911041]
[176.75059509 -141.46865845]
[188.75482178 -152.64141846]
[204.35133362 -147.57380676]
[207.49577332 -131.47894287]
[194.95341492 -120.91385651]
[190.31816101 -106.64801025]
[185.68290710 -92.38215637]
[181.17967224 -78.07408905]
[176.80882263 -63.72502518]
[172.43797302 -49.37596130]
[168.06712341 -35.02689362]
[173.68583679 -26.43478394]
[173.62533569 -15.94872379]
[167.66299438 -7.05628490]
[157.57925415 -2.84871149]
[152.68116760 11.32904625]
[155.83839417 25.88518524]
[144.01893616 36.40235901]
[139.12084961 50.58011627]
[134.22276306 64.75787354]
[143.26228333 76.72813416]
[158.23924255 75.89695740]
[173.21620178 75.06578827]
[188.19314575 74.23461151]
[203.17010498 73.40344238]
[218.14706421 72.57227325]
[222.57855225 69.66791534]
[227.21595764 68.86191559]
[231.21611023 69.87571716]
[233.97247314 72.13347626]
[248.97247314 72.13347626]
[263.97247314 72.13347626]
[272.98388672 59.50122070]
[287.70999146 54.61022568]
[302.48825073 59.34118271]
[311.63616943 71.87493896]
[311.63616943 87.39201355]
[302.48825073 99.92577362]
[287.70999146 104.65673065]
[272.98388672 99.76573944]
[263.97247314 87.13347626]
[248.97247314 87.13347626]
[233.97247314 87.13347626]
[218.97822571 87.54922485]
[204.00128174 88.38039398]
[189.02432251 89.21157074]
[174.04736328 90.04273987]
[159.07041931 90.87390900]
[144.09346008 91.70508575]
[140.81825256 111.93210602]
[129.27343750 127.53166199]
[138.09020996 139.66691589]
[146.90698242 151.80216980]
[155.72377014 163.93742371]
[170.09490967 170.55412292]
[171.31620789 185.39857483]
[180.13298035 197.53382874]
[188.94976807 209.66908264]
[197.76654053 221.80433655]
[213.32337952 225.72409058]
[219.82685852 240.38984680]
[212.28808594 254.55128479]
[196.49014282 257.34497070]
[184.55186462 246.62782288]
[185.63128662 230.62112427]
[176.81451416 218.48587036]
[167.99772644 206.35061646]
[159.18095398 194.21536255]
[145.44044495 188.46664429]
[143.58851624 172.75419617]
[134.77172852 160.61894226]
[125.95495605 148.48368835]
[117.13817596 136.34843445]
[108.54945374 139.26617432]
[99.52513885 140.18333435]
[90.52501678 139.05317688]
[82.00764465 135.93328857]
[74.40696716 130.98262024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 71]
[2 70]
[3 69]
[4 68]
[5 67]
[6 66]
[7 64]
[8 63]
[9 62]
[10 61]
[12 59]
[13 58]
[14 57]
[16 54]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[24 47]
[25 46]
[26 45]
[29 44]
[30 43]
[31 42]
[33 40]
[34 39]
[77 111]
[78 110]
[79 109]
[81 107]
[82 106]
[84 102]
[85 101]
[86 100]
[87 99]
[89 98]
[90 97]
[91 96]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[121 134]
[122 133]
[123 132]
[142 164]
[143 163]
[144 162]
[145 161]
[147 159]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
