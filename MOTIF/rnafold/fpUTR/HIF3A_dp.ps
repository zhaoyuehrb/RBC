%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIF3A)
} def

/sequence { (\
AGAUAAGUCAGGGAGGGGACAGAGCGGCCCUAGGCGCGCCACAGAGAGGAGCGAGGCGCCAGAGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.094010919 ubox
3 8 0.083427250 ubox
7 20 0.920691879 ubox
7 25 0.027282979 ubox
7 28 0.006040557 ubox
7 35 0.169972642 ubox
7 57 0.041838716 ubox
7 66 0.088550533 ubox
7 68 0.010225254 ubox
8 14 0.024560274 ubox
8 16 0.026381640 ubox
8 17 0.031191679 ubox
8 18 0.025653413 ubox
8 19 0.921696985 ubox
8 23 0.028594158 ubox
8 24 0.021521009 ubox
8 27 0.006059760 ubox
8 34 0.174877024 ubox
8 54 0.006112531 ubox
8 56 0.041850722 ubox
8 63 0.010237477 ubox
8 65 0.088542008 ubox
8 67 0.009588032 ubox
9 13 0.027464114 ubox
9 15 0.034222921 ubox
9 16 0.040769920 ubox
9 17 0.040828675 ubox
9 18 0.921321476 ubox
9 22 0.031499858 ubox
9 26 0.009095237 ubox
9 33 0.178167988 ubox
9 53 0.006286214 ubox
9 55 0.041707386 ubox
9 62 0.011110029 ubox
9 64 0.088116385 ubox
10 31 0.178781423 ubox
11 29 0.004495279 ubox
11 30 0.180847405 ubox
11 31 0.012594232 ubox
11 60 0.012428311 ubox
11 69 0.030995563 ubox
12 28 0.004669730 ubox
12 29 0.180823735 ubox
12 30 0.012888720 ubox
12 31 0.021088813 ubox
12 59 0.011537938 ubox
12 60 0.013326147 ubox
12 68 0.031152334 ubox
12 69 0.018651558 ubox
13 28 0.180296684 ubox
13 29 0.012369952 ubox
13 30 0.020377322 ubox
13 59 0.012245447 ubox
13 68 0.018772969 ubox
14 31 0.236024125 ubox
15 29 0.020894946 ubox
15 30 0.243637604 ubox
15 31 0.112779641 ubox
15 69 0.018444570 ubox
16 28 0.021206357 ubox
16 29 0.243656816 ubox
16 30 0.117121944 ubox
16 31 0.009109009 ubox
16 68 0.018513625 ubox
16 69 0.024056148 ubox
17 28 0.243476430 ubox
17 29 0.117305005 ubox
17 30 0.009407438 ubox
17 68 0.024326726 ubox
17 69 0.019818316 ubox
18 28 0.117180951 ubox
18 29 0.009394364 ubox
18 68 0.020008613 ubox
21 31 0.003339475 ubox
22 30 0.003501909 ubox
24 35 0.013291602 ubox
24 37 0.020573864 ubox
24 39 0.065317574 ubox
24 57 0.004508458 ubox
24 59 0.015179290 ubox
24 66 0.157351977 ubox
25 34 0.013738815 ubox
25 36 0.020644124 ubox
25 38 0.065655319 ubox
25 56 0.004470949 ubox
25 58 0.015214556 ubox
25 65 0.157304952 ubox
26 35 0.015547337 ubox
26 37 0.065437249 ubox
26 57 0.012575773 ubox
26 60 0.241852929 ubox
26 69 0.085664454 ubox
27 35 0.077341264 ubox
27 57 0.027379834 ubox
27 59 0.242066422 ubox
27 66 0.903791678 ubox
27 68 0.077087804 ubox
28 34 0.079009338 ubox
28 56 0.026857235 ubox
28 58 0.242039335 ubox
28 65 0.904058042 ubox
29 33 0.078440485 ubox
29 49 0.003781431 ubox
29 55 0.024764825 ubox
29 56 0.240420982 ubox
29 64 0.902364854 ubox
29 65 0.096014388 ubox
30 48 0.003781537 ubox
30 55 0.240616727 ubox
30 56 0.030571930 ubox
30 62 0.880909142 ubox
30 64 0.110023742 ubox
30 65 0.006104330 ubox
31 47 0.003677040 ubox
31 54 0.237476177 ubox
31 55 0.029420495 ubox
31 61 0.875617593 ubox
31 63 0.121515463 ubox
31 64 0.006044563 ubox
33 40 0.003924492 ubox
33 60 0.913351516 ubox
33 69 0.007484027 ubox
34 39 0.003912345 ubox
34 52 0.024835817 ubox
34 57 0.018871011 ubox
34 59 0.912661334 ubox
34 66 0.017075138 ubox
34 68 0.007465527 ubox
35 51 0.024788368 ubox
35 53 0.350622064 ubox
35 56 0.018325012 ubox
35 58 0.911120121 ubox
35 65 0.017100634 ubox
36 52 0.392948318 ubox
36 57 0.903329781 ubox
36 59 0.113425689 ubox
37 51 0.393701114 ubox
37 53 0.198763702 ubox
37 56 0.879840304 ubox
37 58 0.120513050 ubox
38 52 0.483111610 ubox
38 57 0.150980764 ubox
38 66 0.008128956 ubox
39 49 0.455003790 ubox
39 51 0.470760722 ubox
39 56 0.156309027 ubox
39 65 0.008138754 ubox
40 48 0.470410094 ubox
40 55 0.161997647 ubox
40 64 0.008127514 ubox
48 60 0.013088076 ubox
48 69 0.003943503 ubox
49 59 0.013067491 ubox
49 68 0.003967567 ubox
51 57 0.014790126 ubox
51 59 0.003897448 ubox
51 66 0.004056378 ubox
52 56 0.014754750 ubox
52 58 0.003959437 ubox
52 65 0.004060289 ubox
53 57 0.005912015 ubox
55 69 0.295759930 ubox
56 66 0.013334152 ubox
56 68 0.298281313 ubox
57 65 0.013352456 ubox
58 66 0.307209302 ubox
59 65 0.307289639 ubox
60 64 0.305078866 ubox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
29 64 0.9500000 lbox
30 62 0.9500000 lbox
31 61 0.9500000 lbox
33 60 0.9500000 lbox
34 59 0.9500000 lbox
35 58 0.9500000 lbox
36 57 0.9500000 lbox
37 56 0.9500000 lbox
showpage
end
%%EOF
