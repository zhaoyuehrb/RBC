%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCACCACGGCGGCGGCGAGCGCGGCCGCCCCCGGCACCACGUAAACCGCCCCCGCCCGCCCAGCUGCGGCCCAGGCCGGAGCGGAGCCUGCCGUCCUCCGCCUGCCUGCUGCUCGCCUCCCUAGACCUGCGCGUCGCUUCCCGGCCCGCCGAGGAGGUGGUGGAGGAGGAGGCGCCGCUUUCCCCGCGGCGCGCGCCCUCGCCGUUGUCUGAGCUGUGCCUGGACCAGUUUGGGGAAGUUGUCGGGGCUCC\
GCGUCGCCCAG\
) } def
/len { sequence length } bind def

/coor [
[147.69377136 162.49133301]
[135.88812256 153.23786926]
[124.08245850 143.98442078]
[112.27679443 134.73097229]
[122.65695953 145.55926514]
[124.23684692 160.47584534]
[116.35528564 173.23832703]
[102.31060028 178.50584412]
[87.98024750 174.07400513]
[79.36125946 161.79748535]
[80.06053925 146.81379700]
[89.78652954 135.39273071]
[78.54537964 145.32431030]
[67.30422211 155.25590515]
[56.06306458 165.18748474]
[44.82191086 175.11907959]
[39.60283279 190.05465698]
[24.94197083 192.68304443]
[13.70081520 202.61463928]
[2.45965981 212.54621887]
[-8.78149509 222.47781372]
[-14.40739346 243.17773438]
[-34.82895279 246.28457642]
[-45.71260452 256.60668945]
[-56.59625626 266.92880249]
[-61.28498840 282.03927612]
[-75.84395599 285.18344116]
[-86.72760773 295.50555420]
[-87.84207916 308.33306885]
[-97.09089661 316.70550537]
[-109.16506958 316.55081177]
[-120.16941833 326.74414062]
[-131.17376709 336.93750000]
[-138.68489075 352.13681030]
[-155.36950684 349.12683105]
[-157.09590149 332.26098633]
[-141.36711121 325.93313599]
[-130.36276245 315.73980713]
[-119.35841370 305.54644775]
[-115.06346130 288.51623535]
[-97.04972839 284.62191772]
[-86.16606903 274.29977417]
[-82.25581360 259.92761230]
[-66.91837311 256.04516602]
[-56.03472137 245.72303772]
[-45.15106964 235.40092468]
[-46.36053085 226.66470337]
[-43.38722229 218.21586609]
[-36.77354813 211.97410583]
[-27.90328407 209.41810608]
[-18.71308327 211.23666382]
[-7.47192764 201.30506897]
[3.76922727 191.37347412]
[15.01038265 181.44189453]
[19.42542076 167.21667480]
[34.89032364 163.87791443]
[46.13147736 153.94633484]
[57.37263489 144.01473999]
[68.61379242 134.08316040]
[79.85494232 124.15156555]
[71.52043915 125.28068542]
[62.50989532 124.36621094]
[47.52261353 124.98376465]
[31.94584084 131.67707825]
[21.20202255 118.56195068]
[30.83042717 104.60737610]
[46.90505981 109.99648285]
[61.89234161 109.37892914]
[62.59727478 101.91213226]
[64.00714111 86.97853851]
[64.71207428 79.51174164]
[50.10517502 76.10022736]
[35.49827576 72.68871307]
[20.89137268 69.27719879]
[5.36204147 74.54710388]
[-6.78639412 63.53131485]
[-3.05666471 47.56193161]
[12.71440315 43.06688690]
[24.30288887 54.67029572]
[38.90979004 58.08181000]
[53.51668930 61.49332428]
[68.12358856 64.90483856]
[79.87461090 55.58209229]
[79.87461090 40.58209229]
[79.87461090 25.58209038]
[79.87461090 10.58209133]
[79.87461090 -4.41790915]
[79.87461090 -19.41790962]
[72.13730621 -33.21808243]
[79.87461090 -45.94535446]
[79.87461090 -60.94535446]
[79.87461090 -75.94535065]
[79.87461090 -90.94535065]
[76.75379181 -99.49298859]
[79.96389008 -106.12158203]
[80.14038086 -121.12054443]
[77.12035370 -129.70431519]
[80.40822601 -136.29467773]
[80.76117706 -151.29052734]
[81.11413574 -166.28636169]
[81.46708679 -181.28221130]
[81.82004547 -196.27806091]
[82.17300415 -211.27391052]
[82.52595520 -226.26976013]
[82.87891388 -241.26560974]
[83.23186493 -256.26144409]
[80.31304169 -264.88015747]
[83.67823029 -271.43136597]
[84.20760345 -286.42202759]
[84.73697662 -301.41268921]
[85.26634216 -316.40335083]
[78.02088928 -330.46798706]
[86.20253754 -342.91427612]
[86.73191071 -357.90490723]
[87.08486176 -372.90075684]
[87.26135254 -387.89971924]
[76.49855042 -399.16027832]
[76.89119720 -414.36883545]
[87.69273376 -424.56011963]
[87.86921692 -439.55908203]
[88.04570770 -454.55804443]
[73.21121216 -460.79968262]
[61.93983459 -472.23367310]
[55.94019318 -487.08447266]
[56.10552216 -503.06198120]
[62.38080978 -517.71447754]
[73.77577972 -528.80511475]
[88.52104950 -534.65307617]
[88.52104950 -549.65307617]
[88.52104950 -564.65307617]
[77.16991425 -575.64978027]
[77.00282288 -591.45318604]
[88.11890411 -602.68743896]
[103.92319489 -602.68743896]
[115.03928375 -591.45318604]
[114.87219238 -575.64978027]
[103.52104950 -564.65307617]
[103.52104950 -549.65307617]
[103.52104950 -534.65307617]
[116.66596222 -529.78869629]
[127.38731384 -520.71447754]
[134.38700867 -508.50256348]
[136.80847168 -494.60635376]
[134.34144592 -480.68783569]
[127.26156616 -468.41873169]
[116.39974213 -459.27969360]
[103.04467010 -454.38156128]
[102.86817932 -439.38259888]
[102.69168854 -424.38363647]
[113.25042725 -413.94100952]
[113.28511047 -398.72741699]
[102.26031494 -387.72323608]
[102.08382416 -372.72427368]
[104.69673157 -368.76351929]
[104.87222290 -363.12600708]
[101.72256470 -357.37554932]
[101.19319153 -342.38488770]
[108.47650909 -329.39248657]
[100.25700378 -315.87396240]
[99.72763062 -300.88333130]
[99.19825745 -285.89266968]
[98.66888428 -270.90200806]
[98.22771454 -255.90849304]
[97.87475586 -240.91264343]
[97.52180481 -225.91679382]
[97.16884613 -210.92095947]
[96.81589508 -195.92510986]
[96.46293640 -180.92926025]
[96.10997772 -165.93341064]
[95.75702667 -150.93756104]
[95.40406799 -135.94172668]
[95.13934326 -120.94405365]
[94.96285248 -105.94509125]
[94.87461090 -90.94535065]
[94.87461090 -75.94535065]
[94.87461090 -60.94535446]
[94.87461090 -45.94535446]
[102.61190796 -33.21808243]
[94.87461090 -19.41790962]
[94.87461090 -4.41790915]
[94.87461090 10.58209133]
[94.87461090 25.58209038]
[94.87461090 40.58209229]
[94.87461090 55.58209229]
[134.54368591 83.97090149]
[121.53025055 122.92530823]
[133.33590698 132.17875671]
[145.14157104 141.43222046]
[156.94723511 150.68566895]
[169.01994324 159.58790588]
[181.34924316 168.13121033]
[193.67855835 176.67451477]
[206.00787354 185.21781921]
[218.33718872 193.76112366]
[230.66650391 202.30441284]
[242.99581909 210.84771729]
[255.32513428 219.39102173]
[273.72189331 220.49522400]
[280.56152344 236.67219543]
[292.99050903 245.06983948]
[305.41949463 253.46748352]
[317.84848022 261.86514282]
[330.27743530 270.26278687]
[346.04391479 271.57757568]
[352.25805664 285.11398315]
[364.68704224 293.51162720]
[381.81579590 289.87927246]
[395.98321533 299.58190918]
[398.67886353 316.19781494]
[411.20578003 324.44863892]
[426.98666382 325.57785034]
[433.35961914 339.04019165]
[445.88653564 347.29101562]
[458.41348267 355.54183960]
[470.94039917 363.79266357]
[483.46731567 372.04348755]
[495.99426270 380.29431152]
[508.52117920 388.54513550]
[521.04809570 396.79595947]
[533.57501221 405.04678345]
[547.63739014 398.70217896]
[562.89416504 400.99002075]
[574.47698975 411.18029785]
[578.68981934 426.02130127]
[574.18841553 440.77734375]
[562.40905762 450.73980713]
[547.11059570 452.72970581]
[533.17462158 446.11209106]
[525.04809570 432.99862671]
[525.32421875 417.57373047]
[512.79730225 409.32290649]
[500.27035522 401.07208252]
[487.74340820 392.82125854]
[475.21649170 384.57043457]
[462.68957520 376.31961060]
[450.16265869 368.06878662]
[437.63571167 359.81793213]
[425.10879517 351.56710815]
[410.22393799 351.02807617]
[402.95495605 336.97555542]
[390.42803955 328.72473145]
[378.31509399 333.06011963]
[365.72595215 329.58557129]
[357.30432129 319.35083008]
[356.28939819 305.94061279]
[343.86041260 297.54296875]
[328.98294067 296.82879639]
[321.87979126 282.69177246]
[309.45083618 274.29409790]
[297.02185059 265.89645386]
[284.59286499 257.49880981]
[272.16387939 249.10118103]
[260.25427246 251.09375000]
[249.83775330 244.22828674]
[246.78182983 231.72033691]
[234.45251465 223.17703247]
[222.12319946 214.63372803]
[209.79388428 206.09042358]
[197.46456909 197.54711914]
[185.13525391 189.00382996]
[172.80595398 180.46052551]
[160.47663879 171.91722107]
[160.74145508 186.91487122]
[149.25837708 196.56573486]
[134.53005981 193.72380066]
[127.46208191 180.49339294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[18 54]
[19 53]
[20 52]
[21 51]
[23 46]
[24 45]
[25 44]
[27 42]
[28 41]
[31 39]
[32 38]
[33 37]
[62 68]
[63 67]
[71 82]
[72 81]
[73 80]
[74 79]
[83 184]
[84 183]
[85 182]
[86 181]
[87 180]
[88 179]
[90 177]
[91 176]
[92 175]
[93 174]
[95 173]
[96 172]
[98 171]
[99 170]
[100 169]
[101 168]
[102 167]
[103 166]
[104 165]
[105 164]
[106 163]
[108 162]
[109 161]
[110 160]
[111 159]
[113 157]
[114 156]
[115 153]
[116 152]
[119 149]
[120 148]
[121 147]
[128 139]
[129 138]
[130 137]
[190 262]
[191 261]
[192 260]
[193 259]
[194 258]
[195 257]
[196 256]
[197 255]
[199 252]
[200 251]
[201 250]
[202 249]
[203 248]
[205 246]
[206 245]
[209 241]
[210 240]
[212 238]
[213 237]
[214 236]
[215 235]
[216 234]
[217 233]
[218 232]
[219 231]
[220 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
