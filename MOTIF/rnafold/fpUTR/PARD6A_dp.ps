%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PARD6A)
} def

/sequence { (\
GGGCGGGGCGGCGCGGGCGGGCCGGCCGGGCUGUGCACCUGCGCCUCGGCGGGCCGCCUGGGGCACCGUCCCCGGCCCGCCCGGCCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 87 0.006991569 ubox
1 91 0.063168132 ubox
2 86 0.007045823 ubox
2 90 0.045270032 ubox
2 91 0.986454176 ubox
3 85 0.007077349 ubox
3 90 0.998870898 ubox
4 84 0.007105491 ubox
4 89 0.999928800 ubox
5 88 0.999882065 ubox
5 91 0.004209676 ubox
6 82 0.007105011 ubox
6 87 0.999870024 ubox
6 88 0.005827715 ubox
6 90 0.004236640 ubox
7 81 0.007108476 ubox
7 86 0.997893051 ubox
7 87 0.008029336 ubox
7 88 0.009383205 ubox
7 91 0.004040094 ubox
8 80 0.007108697 ubox
8 85 0.995907635 ubox
8 86 0.006962301 ubox
8 87 0.010293544 ubox
8 90 0.004091240 ubox
9 79 0.007108783 ubox
9 83 0.047921543 ubox
9 84 0.992524698 ubox
9 89 0.004095043 ubox
10 14 0.006451341 ubox
10 45 0.094062755 ubox
10 78 0.007074853 ubox
10 82 0.067248792 ubox
10 86 0.063798367 ubox
10 88 0.003982445 ubox
11 44 0.094197823 ubox
11 77 0.007038949 ubox
11 81 0.067274213 ubox
11 85 0.089720299 ubox
11 87 0.003936987 ubox
12 43 0.094199301 ubox
12 83 0.031564125 ubox
12 84 0.106657923 ubox
13 42 0.094199163 ubox
13 76 0.006893609 ubox
13 80 0.067536876 ubox
13 82 0.014937016 ubox
13 85 0.004934632 ubox
14 41 0.094186818 ubox
14 75 0.006875190 ubox
14 79 0.067543343 ubox
14 83 0.989866561 ubox
14 84 0.004068900 ubox
15 39 0.048870426 ubox
15 40 0.080420689 ubox
15 59 0.006703525 ubox
15 78 0.067535028 ubox
15 81 0.005872139 ubox
15 82 0.993039494 ubox
16 38 0.049535738 ubox
16 39 0.079923466 ubox
16 58 0.007642237 ubox
16 77 0.067505128 ubox
16 80 0.004166906 ubox
16 81 0.993199561 ubox
17 34 0.010787463 ubox
17 36 0.056699404 ubox
17 38 0.074195962 ubox
17 57 0.011038140 ubox
17 76 0.065052862 ubox
17 80 0.993215224 ubox
18 33 0.030838152 ubox
18 35 0.062186112 ubox
18 56 0.013352987 ubox
18 74 0.005938056 ubox
18 75 0.062280413 ubox
18 79 0.993210063 ubox
19 32 0.030428396 ubox
19 34 0.047062885 ubox
19 55 0.012992844 ubox
19 58 0.007021974 ubox
19 73 0.008047334 ubox
19 78 0.993202321 ubox
20 31 0.029877849 ubox
20 32 0.070814421 ubox
20 54 0.011105166 ubox
20 55 0.069465395 ubox
20 57 0.004971787 ubox
20 77 0.993012063 ubox
21 31 0.075035436 ubox
21 34 0.003715817 ubox
21 36 0.048185606 ubox
21 54 0.071170493 ubox
21 76 0.992934509 ubox
22 29 0.029281481 ubox
22 30 0.075279523 ubox
22 35 0.048202633 ubox
22 52 0.008836208 ubox
22 53 0.071503119 ubox
22 75 0.992934029 ubox
23 28 0.029298262 ubox
23 29 0.075247489 ubox
23 33 0.048315736 ubox
23 51 0.008833502 ubox
23 52 0.071470682 ubox
23 74 0.992916530 ubox
24 32 0.048393744 ubox
24 45 0.004677420 ubox
24 50 0.006262361 ubox
24 72 0.003830449 ubox
24 73 0.992847914 ubox
25 31 0.048433992 ubox
25 44 0.004923889 ubox
25 50 0.077263930 ubox
25 71 0.004203614 ubox
25 72 0.987057769 ubox
26 30 0.048082212 ubox
26 43 0.004986365 ubox
26 49 0.081806525 ubox
26 61 0.007280754 ubox
27 41 0.005118143 ubox
27 48 0.082332040 ubox
27 60 0.008640033 ubox
27 68 0.028557730 ubox
28 40 0.005074978 ubox
28 46 0.010335461 ubox
28 47 0.082729054 ubox
28 59 0.008710609 ubox
28 67 0.028628583 ubox
28 70 0.006019754 ubox
28 71 0.985877026 ubox
28 72 0.021160844 ubox
29 39 0.005082257 ubox
29 45 0.031489052 ubox
29 46 0.077189486 ubox
29 58 0.008725928 ubox
29 66 0.028509141 ubox
29 69 0.004524591 ubox
29 70 0.991034762 ubox
29 71 0.029713841 ubox
30 36 0.003841865 ubox
30 38 0.005060020 ubox
30 42 0.006580248 ubox
30 44 0.031531190 ubox
30 45 0.076314630 ubox
30 57 0.008724974 ubox
30 64 0.026375381 ubox
30 69 0.990709029 ubox
30 70 0.029577389 ubox
31 35 0.003834111 ubox
31 41 0.006585586 ubox
31 43 0.031136977 ubox
31 56 0.008623651 ubox
31 63 0.026371458 ubox
31 68 0.991063871 ubox
32 43 0.010474379 ubox
32 62 0.026038916 ubox
32 68 0.004687355 ubox
33 42 0.025147064 ubox
33 44 0.076376722 ubox
33 54 0.003834143 ubox
33 55 0.006124309 ubox
33 57 0.005621596 ubox
33 66 0.989462286 ubox
33 67 0.022512533 ubox
34 41 0.024661832 ubox
34 43 0.076873828 ubox
34 56 0.005622283 ubox
34 60 0.019744003 ubox
34 65 0.991164033 ubox
35 40 0.012949727 ubox
35 42 0.084882500 ubox
35 54 0.007305184 ubox
35 55 0.005697657 ubox
35 57 0.025129491 ubox
35 64 0.991070817 ubox
36 41 0.084780751 ubox
36 53 0.006768295 ubox
36 56 0.025200356 ubox
36 63 0.985058532 ubox
38 52 0.006584847 ubox
38 53 0.079999138 ubox
38 61 0.581892957 ubox
38 62 0.794859675 ubox
38 63 0.005471847 ubox
39 51 0.006444256 ubox
39 52 0.080414817 ubox
39 60 0.584786136 ubox
39 61 0.795047797 ubox
39 62 0.008006815 ubox
40 51 0.080214846 ubox
40 56 0.034624934 ubox
40 60 0.736332820 ubox
40 61 0.007996996 ubox
40 65 0.005021422 ubox
41 50 0.080978938 ubox
41 54 0.014605060 ubox
41 55 0.050304178 ubox
41 57 0.980740058 ubox
41 59 0.062810647 ubox
41 64 0.006616274 ubox
42 48 0.004580273 ubox
42 49 0.080866590 ubox
42 51 0.029190361 ubox
42 53 0.014190468 ubox
42 56 0.983172515 ubox
42 60 0.004769747 ubox
42 63 0.006960490 ubox
43 47 0.006036979 ubox
43 50 0.036190794 ubox
43 54 0.689803923 ubox
43 55 0.704199881 ubox
43 57 0.024189321 ubox
43 59 0.005691050 ubox
43 64 0.031887671 ubox
44 49 0.036534135 ubox
44 52 0.047394440 ubox
44 53 0.972556297 ubox
44 56 0.023205962 ubox
44 61 0.007295802 ubox
44 62 0.027527771 ubox
44 63 0.032269704 ubox
45 51 0.051404596 ubox
45 52 0.972006646 ubox
45 53 0.154240707 ubox
45 60 0.008399971 ubox
45 61 0.027749738 ubox
45 62 0.032769417 ubox
46 51 0.881939448 ubox
46 52 0.151121099 ubox
46 53 0.023498109 ubox
46 60 0.027278820 ubox
46 61 0.032748970 ubox
46 83 0.011436306 ubox
47 51 0.186426087 ubox
47 52 0.040796827 ubox
47 56 0.009333827 ubox
47 60 0.032921597 ubox
47 83 0.056821915 ubox
48 55 0.016985382 ubox
48 58 0.054883993 ubox
48 59 0.007849735 ubox
48 70 0.013760662 ubox
48 71 0.005638215 ubox
48 81 0.081568052 ubox
48 82 0.046861893 ubox
49 54 0.016917004 ubox
49 57 0.055188806 ubox
49 58 0.005645754 ubox
49 69 0.016504179 ubox
49 70 0.005839723 ubox
49 80 0.088171521 ubox
49 81 0.033143456 ubox
50 56 0.055445902 ubox
50 68 0.030876809 ubox
50 79 0.094190160 ubox
51 55 0.051875213 ubox
51 58 0.025566792 ubox
51 59 0.011171377 ubox
51 67 0.035002967 ubox
51 71 0.010188260 ubox
51 72 0.004950151 ubox
51 78 0.094195163 ubox
52 57 0.026011512 ubox
52 58 0.018155453 ubox
52 59 0.003897451 ubox
52 66 0.034980756 ubox
52 70 0.010217882 ubox
52 71 0.004941032 ubox
52 77 0.094196716 ubox
53 57 0.017890497 ubox
53 58 0.004100944 ubox
53 64 0.035033058 ubox
53 69 0.010200212 ubox
53 70 0.004895365 ubox
53 76 0.094194461 ubox
54 61 0.034899918 ubox
54 62 0.066605077 ubox
54 63 0.035198517 ubox
54 68 0.010935633 ubox
54 75 0.094190912 ubox
55 60 0.035008744 ubox
55 61 0.066774006 ubox
55 62 0.035735322 ubox
55 74 0.094178972 ubox
56 64 0.011585275 ubox
56 73 0.093416021 ubox
56 76 0.028918842 ubox
57 63 0.011629118 ubox
57 75 0.031263633 ubox
58 62 0.011582659 ubox
58 74 0.039462149 ubox
58 75 0.015447139 ubox
59 74 0.046370057 ubox
60 67 0.004130900 ubox
60 71 0.004713528 ubox
60 72 0.104346602 ubox
60 73 0.059594540 ubox
61 66 0.004139830 ubox
61 70 0.004677908 ubox
61 71 0.104617498 ubox
61 72 0.059735142 ubox
62 69 0.004349136 ubox
62 70 0.104741926 ubox
62 71 0.059798986 ubox
63 69 0.104417957 ubox
63 70 0.059242054 ubox
64 68 0.106946278 ubox
2 91 0.9500000 lbox
3 90 0.9500000 lbox
4 89 0.9500000 lbox
5 88 0.9500000 lbox
6 87 0.9500000 lbox
7 86 0.9500000 lbox
8 85 0.9500000 lbox
9 84 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
16 81 0.9500000 lbox
17 80 0.9500000 lbox
18 79 0.9500000 lbox
19 78 0.9500000 lbox
20 77 0.9500000 lbox
21 76 0.9500000 lbox
22 75 0.9500000 lbox
23 74 0.9500000 lbox
24 73 0.9500000 lbox
25 72 0.9500000 lbox
28 71 0.9500000 lbox
29 70 0.9500000 lbox
30 69 0.9500000 lbox
31 68 0.9500000 lbox
33 66 0.9500000 lbox
34 65 0.9500000 lbox
35 64 0.9500000 lbox
36 63 0.9500000 lbox
38 62 0.9500000 lbox
39 61 0.9500000 lbox
40 60 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
