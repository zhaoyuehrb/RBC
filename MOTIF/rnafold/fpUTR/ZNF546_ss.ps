%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUUCCCAGAAGCCCCUUGGGCAGUGUUGCCUGGACCCCAAGGGCCCUUUACAUUGCGUUCUUAACGGUUCAGUCACCUUAACCGUUAUUAUUCACUUGCGGGCGAGAAGUCCGAGCUAGGGAUCCUGAAAAGGAGGGAACAAUUGUUGUAGCAGGUCUAAAAGUUCAGGUCCAGGAAAUGGAAACAUUGCUUUGCUUUUCCUGAAUUGUCCAGUGACCUAUCCCAGGCCUUCCUUUCCAGUGAACAAUGGAC\
C\
) } def
/len { sequence length } bind def

/coor [
[188.05081177 177.01361084]
[184.23899841 162.50602722]
[185.56225586 147.56451416]
[191.86441040 133.95265198]
[202.40159607 123.27707672]
[215.92959595 116.79800415]
[200.93659973 116.33967590]
[185.94360352 115.88134003]
[170.95060730 115.42301178]
[164.19499207 123.04200745]
[154.15364075 125.75692749]
[144.06253052 122.44375610]
[137.31140137 113.96234894]
[122.33408356 113.13764191]
[107.35677338 112.31292725]
[93.42095184 117.86206055]
[83.11005402 128.75634766]
[72.79915619 139.65061951]
[62.48825073 150.54490662]
[52.17735291 161.43917847]
[41.86645126 172.33346558]
[31.55554962 183.22773743]
[21.24464989 194.12202454]
[11.13523006 205.20352173]
[1.23069060 216.46852112]
[-8.67384911 227.73350525]
[-7.41029167 243.48721313]
[-17.71983528 255.46589661]
[-33.48601151 256.56280518]
[-45.35502625 246.12721252]
[-46.28520584 230.35031128]
[-35.72468948 218.59230042]
[-19.93884277 217.82896423]
[-10.03430367 206.56398010]
[-0.12976433 195.29898071]
[0.02129842 191.80364990]
[1.85503292 188.20494080]
[5.40314770 185.28492737]
[10.35036945 183.81112671]
[20.66127014 172.91683960]
[30.97217178 162.02256775]
[41.28307343 151.12828064]
[51.59397125 140.23400879]
[61.90487289 129.33972168]
[72.21577454 118.44544220]
[82.52667236 107.55116272]
[80.71127319 100.27419281]
[66.43960571 104.89151001]
[52.16794586 109.50883484]
[37.89628601 114.12615204]
[23.62462234 118.74347687]
[9.35295963 123.36079407]
[-4.91870308 127.97811890]
[-18.34518623 134.66613770]
[-31.96674156 128.38494873]
[-35.59819412 113.83116913]
[-26.52421761 101.88700867]
[-11.52823925 101.48404694]
[3.23987842 98.85674286]
[18.00799561 96.22944641]
[32.77611542 93.60214996]
[47.54423141 90.97484589]
[62.31234741 88.34754944]
[77.08046722 85.72024536]
[75.26506042 78.44327545]
[61.04522705 73.66873932]
[46.82538986 68.89419556]
[32.60555267 64.11965179]
[18.38571548 59.34511566]
[4.16587925 54.57057571]
[-10.05395699 49.79603195]
[-24.27379417 45.02149200]
[-39.81901169 47.96373749]
[-49.42152405 36.57773590]
[-63.64136124 31.80319405]
[-79.59865570 35.58430481]
[-90.65348816 23.47138977]
[-85.43359375 7.92517710]
[-69.30875397 4.93827724]
[-58.86681747 17.58335686]
[-44.64698410 22.35789871]
[-30.11886406 19.07414627]
[-19.49925423 30.80165482]
[-5.27941656 35.57619476]
[8.94042015 40.35073853]
[23.16025734 45.12527847]
[37.38009262 49.89981842]
[51.59992981 54.67435837]
[65.81977081 59.44889832]
[80.03960419 64.22344208]
[84.92265320 58.53083038]
[73.53742981 48.76472855]
[62.15220642 38.99863052]
[50.76698303 29.23253250]
[36.92111206 23.46262741]
[38.13003159 8.51142216]
[52.72305679 5.04102278]
[60.53308105 17.84730911]
[71.91830444 27.61340714]
[83.30352783 37.37950516]
[94.68875122 47.14560699]
[99.57180023 41.45299149]
[92.68852997 28.12555695]
[85.80525208 14.79812145]
[78.92198181 1.47068560]
[72.03871155 -11.85675049]
[57.25212860 -18.08062744]
[53.03772736 -33.56023788]
[62.62843323 -46.42095184]
[78.66707611 -46.79712677]
[88.85018158 -34.40019608]
[85.36614227 -18.74002457]
[92.24942017 -5.41258764]
[99.13269043 7.91484785]
[106.01596069 21.24228477]
[112.89923859 34.56972122]
[124.97376251 71.82891083]
[108.18148804 97.33561707]
[123.15879822 98.16032410]
[138.13610840 98.98503876]
[155.72317505 89.09469604]
[171.40893555 100.43001556]
[186.40193176 100.88834381]
[201.39492798 101.34667969]
[216.38792419 101.80500793]
[231.35403442 100.79727936]
[246.15025330 98.33312225]
[260.93112183 95.77857208]
[275.69610596 93.13373566]
[290.46109009 90.48889160]
[302.68078613 80.43953705]
[316.57293701 85.81150055]
[331.33792114 83.16666412]
[346.10290527 80.52182007]
[360.86788940 77.87697601]
[375.63287354 75.23213959]
[390.39785767 72.58729553]
[405.16284180 69.94245911]
[419.92782593 67.29761505]
[434.69281006 64.65277100]
[447.92062378 40.44071198]
[474.59036255 34.96022415]
[481.14578247 21.46850204]
[487.70120239 7.97678280]
[494.25662231 -5.51493692]
[495.74038696 -22.40383148]
[512.38000488 -25.65335655]
[520.10882568 -10.56357670]
[507.74832153 1.04048014]
[501.19290161 14.53219986]
[494.63751221 28.02392006]
[488.08209229 41.51564026]
[491.32839966 44.58377838]
[494.11828613 48.07214355]
[496.39788818 51.91343689]
[498.12322998 56.03354263]
[513.06024170 54.66025925]
[527.99725342 53.28697205]
[542.93426514 51.91368866]
[557.87127686 50.54040527]
[565.05352783 33.49771118]
[579.84094238 22.53340721]
[598.06518555 20.62994194]
[614.64379883 28.23071289]
[624.99774170 43.14071274]
[639.87438965 41.22069931]
[654.75097656 39.30068588]
[669.62762451 37.38067245]
[684.50421143 35.46066284]
[699.38079834 33.54064941]
[714.25744629 31.62063408]
[729.13403320 29.70062256]
[740.58679199 13.16012192]
[760.21429443 10.46379375]
[775.23089600 22.91202927]
[790.02716064 20.44787025]
[804.82336426 17.98371124]
[819.61956787 15.51955128]
[833.58044434 3.49169993]
[849.75909424 10.32197666]
[864.52404785 7.67713547]
[879.28906250 5.03229427]
[894.05401611 2.38745332]
[906.23205566 -8.59559250]
[921.74719238 -3.28390574]
[924.63873291 12.85830688]
[911.93212891 23.22531891]
[896.69885254 17.15243912]
[881.93389893 19.79728127]
[867.16888428 22.44212151]
[852.40393066 25.08696175]
[845.25244141 34.82051468]
[832.99475098 37.15840912]
[822.08374023 30.31576538]
[807.28747559 32.77992249]
[792.49127197 35.24408340]
[777.69506836 37.70824051]
[774.21868896 47.31356049]
[767.02331543 54.67745972]
[757.35076904 58.43362427]
[746.91040039 57.84675217]
[737.57696533 52.95544815]
[731.05407715 44.57723236]
[716.17742920 46.49724579]
[701.30084229 48.41725922]
[686.42425537 50.33727264]
[671.54760742 52.25728607]
[656.67102051 54.17729950]
[641.79437256 56.09731293]
[626.91778564 58.01732254]
[623.96099854 69.36705780]
[617.34106445 79.09058380]
[607.80950928 86.04280090]
[596.46228027 89.39557648]
[584.61395264 88.73629761]
[573.64508057 84.11853790]
[564.84173584 76.05849457]
[559.24450684 65.47740936]
[544.30755615 66.85069275]
[529.37054443 68.22397614]
[514.43353271 69.59725952]
[499.49652100 70.97055054]
[496.96539307 79.85932159]
[491.99923706 87.68643188]
[484.99386597 93.79885864]
[476.51593018 97.68143463]
[467.25720215 99.00017548]
[457.97796631 97.63101196]
[449.44473267 93.67123413]
[442.36688232 87.43280029]
[437.33764648 79.41776276]
[422.57266235 82.06259918]
[407.80767822 84.70744324]
[393.04269409 87.35227966]
[378.27770996 89.99712372]
[363.51272583 92.64196777]
[348.74774170 95.28680420]
[333.98275757 97.93164825]
[319.21777344 100.57648468]
[308.05416870 110.43666840]
[293.10592651 105.25387573]
[278.34094238 107.89871979]
[263.57595825 110.54356384]
[257.56372070 114.80399323]
[248.61441040 113.12933350]
[233.81819153 115.59349823]
[248.09310913 120.20075226]
[259.96624756 129.36747742]
[268.03616333 142.01168823]
[271.35037231 156.64097595]
[269.51770020 171.52859497]
[262.75442505 184.91732788]
[251.85885620 195.22686768]
[238.11701965 201.24035645]
[223.15090942 202.24800110]
[208.72700500 198.13085938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 125]
[7 124]
[8 123]
[9 122]
[13 120]
[14 119]
[15 118]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[23 39]
[24 35]
[25 34]
[26 33]
[65 90]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[74 81]
[75 80]
[102 116]
[103 115]
[104 114]
[105 113]
[106 112]
[126 246]
[127 245]
[128 243]
[129 242]
[130 241]
[132 239]
[133 238]
[134 237]
[135 236]
[136 235]
[137 234]
[138 233]
[139 232]
[140 231]
[142 152]
[143 151]
[144 150]
[145 149]
[156 222]
[157 221]
[158 220]
[159 219]
[160 218]
[165 210]
[166 209]
[167 208]
[168 207]
[169 206]
[170 205]
[171 204]
[172 203]
[175 197]
[176 196]
[177 195]
[178 194]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
