%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIAA1614)
} def

/sequence { (\
CCUCCCCGAACCCAGCAGCUGGCCUGGGAGGGAGAAGGGGCUGGAGAGGGCCUGGCCUCUCCGAGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.161694599 ubox
1 32 0.031475061 ubox
1 38 0.741990234 ubox
1 39 0.201076587 ubox
1 40 0.215589581 ubox
1 66 0.385174278 ubox
1 67 0.030226693 ubox
2 30 0.163938760 ubox
2 31 0.030977992 ubox
2 32 0.016456603 ubox
2 34 0.409574805 ubox
2 37 0.744643835 ubox
2 38 0.197626417 ubox
2 39 0.218436587 ubox
2 40 0.031437685 ubox
2 65 0.386258034 ubox
2 66 0.030010351 ubox
2 67 0.008128222 ubox
3 29 0.164037027 ubox
3 30 0.029036363 ubox
3 31 0.016534303 ubox
3 32 0.003467775 ubox
3 33 0.414975725 ubox
3 35 0.529556802 ubox
3 36 0.545014978 ubox
3 37 0.126539908 ubox
3 38 0.212030089 ubox
3 39 0.031617575 ubox
3 40 0.007459135 ubox
3 64 0.384616978 ubox
3 65 0.024033796 ubox
3 66 0.008135371 ubox
4 28 0.161455952 ubox
4 30 0.018033303 ubox
4 31 0.006256004 ubox
4 32 0.413150142 ubox
4 34 0.742918718 ubox
4 37 0.208333061 ubox
4 38 0.034375849 ubox
4 39 0.011641335 ubox
4 40 0.074758300 ubox
4 63 0.378845662 ubox
4 65 0.008368210 ubox
4 66 0.003996245 ubox
4 67 0.009191577 ubox
5 27 0.158777660 ubox
5 28 0.066685119 ubox
5 30 0.007373418 ubox
5 31 0.408472237 ubox
5 32 0.880975720 ubox
5 37 0.031297212 ubox
5 38 0.011934175 ubox
5 39 0.098987847 ubox
5 40 0.025119701 ubox
5 65 0.003622510 ubox
5 66 0.009384627 ubox
5 67 0.006558025 ubox
6 26 0.155792694 ubox
6 27 0.073021674 ubox
6 28 0.011491592 ubox
6 30 0.402788324 ubox
6 31 0.883816275 ubox
6 32 0.097438197 ubox
6 37 0.011115220 ubox
6 38 0.099093734 ubox
6 39 0.025285610 ubox
6 65 0.009346050 ubox
6 66 0.006667846 ubox
7 26 0.078741895 ubox
7 27 0.013725299 ubox
7 30 0.885568789 ubox
7 31 0.097585385 ubox
7 37 0.099068919 ubox
7 38 0.025226920 ubox
7 63 0.008765486 ubox
7 65 0.006660274 ubox
8 25 0.074635047 ubox
8 62 0.007798669 ubox
11 22 0.029986903 ubox
11 27 0.057252935 ubox
11 28 0.977165646 ubox
11 31 0.013536845 ubox
11 32 0.072389677 ubox
12 21 0.025447188 ubox
12 22 0.173788366 ubox
12 26 0.054933410 ubox
12 27 0.979758838 ubox
12 30 0.012801848 ubox
12 31 0.072438185 ubox
12 32 0.010374393 ubox
12 44 0.003294773 ubox
13 21 0.174934866 ubox
13 26 0.979878069 ubox
13 30 0.072158060 ubox
13 31 0.010386162 ubox
13 43 0.004074833 ubox
14 20 0.175234756 ubox
14 25 0.977620185 ubox
14 42 0.004883706 ubox
15 19 0.171409834 ubox
15 23 0.584903262 ubox
15 24 0.787021793 ubox
15 41 0.004979187 ubox
16 22 0.822521505 ubox
16 26 0.073145007 ubox
16 40 0.004977524 ubox
17 25 0.073309648 ubox
18 24 0.072919101 ubox
19 27 0.004934970 ubox
19 28 0.003428120 ubox
19 37 0.004523507 ubox
20 26 0.004816424 ubox
20 27 0.003396347 ubox
20 36 0.004430723 ubox
23 31 0.005170707 ubox
23 32 0.010996394 ubox
23 66 0.013229497 ubox
24 30 0.005193348 ubox
24 31 0.011026826 ubox
24 65 0.013276080 ubox
25 29 0.004685347 ubox
25 30 0.010740263 ubox
25 64 0.013238571 ubox
27 62 0.013352117 ubox
28 61 0.013361918 ubox
29 42 0.007561218 ubox
29 60 0.013346060 ubox
30 41 0.007755278 ubox
30 42 0.004647440 ubox
30 59 0.013288724 ubox
30 61 0.015124576 ubox
30 62 0.011571346 ubox
31 41 0.005100689 ubox
31 42 0.006112819 ubox
31 57 0.007658401 ubox
31 58 0.010855511 ubox
31 60 0.015367508 ubox
31 61 0.011383371 ubox
31 62 0.056086805 ubox
32 41 0.011266436 ubox
32 56 0.007686346 ubox
32 57 0.010790115 ubox
32 59 0.018812246 ubox
32 61 0.057530572 ubox
33 42 0.204804265 ubox
33 58 0.018887127 ubox
33 60 0.057079649 ubox
34 41 0.209687476 ubox
34 57 0.018839467 ubox
34 59 0.056134756 ubox
34 61 0.065568517 ubox
35 58 0.045382489 ubox
35 60 0.046513735 ubox
36 42 0.070279518 ubox
36 58 0.027501794 ubox
36 60 0.101309801 ubox
37 41 0.071317997 ubox
37 53 0.008244205 ubox
37 57 0.038863257 ubox
37 59 0.116330986 ubox
37 60 0.003291928 ubox
38 52 0.008347687 ubox
38 53 0.040420552 ubox
38 56 0.037650386 ubox
38 58 0.117635609 ubox
38 59 0.003596319 ubox
39 51 0.008272258 ubox
39 52 0.056067203 ubox
39 57 0.119833402 ubox
39 62 0.003261714 ubox
40 51 0.056116852 ubox
40 56 0.119859683 ubox
41 49 0.008317700 ubox
41 50 0.056109503 ubox
41 55 0.119876912 ubox
41 65 0.588457462 ubox
41 66 0.171580626 ubox
41 67 0.044223725 ubox
42 48 0.008368017 ubox
42 49 0.055419073 ubox
42 54 0.117021244 ubox
42 63 0.631272621 ubox
42 64 0.512261634 ubox
42 65 0.140029035 ubox
42 66 0.038972968 ubox
43 52 0.068980775 ubox
43 53 0.097183519 ubox
43 62 0.990274974 ubox
44 51 0.069119950 ubox
44 52 0.097194577 ubox
44 61 0.991133152 ubox
45 53 0.007637335 ubox
45 60 0.991002885 ubox
46 52 0.008180129 ubox
46 59 0.991131438 ubox
47 58 0.989308031 ubox
48 57 0.982350189 ubox
48 58 0.057077042 ubox
49 56 0.974598122 ubox
49 57 0.131725958 ubox
50 56 0.177029754 ubox
51 55 0.211344565 ubox
56 66 0.017470907 ubox
57 65 0.017523601 ubox
58 64 0.017514916 ubox
59 63 0.017369182 ubox
61 66 0.010873882 ubox
61 67 0.010630401 ubox
62 66 0.010854638 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
42 63 0.9500000 lbox
43 62 0.9500000 lbox
44 61 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
showpage
end
%%EOF
