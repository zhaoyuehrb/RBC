%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGACAGCCCCCGGGCCGCCUGCACUUGCAGCCUCCUUCCCCCCGAGCGGAGCUGCGGGGCCGGCCGGGCCGGGGCUGGACCCCGGGAACCCGGACGCGGCCGCCCGGGCCCGCGGGCGGGGGGAUCGGCGGGGGGGACCCGCGGGGUGACCGGCGGCAGGAGCCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[140.22117615 354.18600464]
[135.79241943 345.65762329]
[133.52352905 336.30505371]
[133.55216980 326.66720581]
[135.88337708 317.30096436]
[140.38899231 308.74920654]
[146.81457520 301.50921631]
[154.79386902 296.00384521]
[150.49665833 281.63256836]
[146.19943237 267.26126099]
[141.90222168 252.88998413]
[137.60501099 238.51869202]
[133.17747498 224.18701172]
[128.62001038 209.89611816]
[124.06254578 195.60523987]
[119.50507355 181.31434631]
[114.81803894 167.06542969]
[110.00182343 152.85964966]
[98.58770752 143.29057312]
[101.48435974 127.73679352]
[96.66813660 113.53102112]
[82.41921997 108.84398651]
[70.11028290 117.41661072]
[57.80133820 125.98924255]
[51.32690048 141.05621338]
[35.01173019 142.71369934]
[25.63947678 129.25662231]
[32.85150909 114.52847290]
[49.22871017 113.68029785]
[61.53765106 105.10767365]
[73.84658813 96.53504181]
[83.46261597 94.62747192]
[92.61920166 96.00120544]
[90.71758270 81.12223053]
[81.29320526 68.41429901]
[87.35458374 54.80882263]
[85.45296478 39.92985153]
[73.95983887 25.56387329]
[81.32003021 9.64970493]
[79.14854431 -5.19228458]
[76.97706604 -20.03427505]
[74.80558014 -34.87626266]
[72.63410187 -49.71825409]
[70.46261597 -64.56024170]
[68.29113770 -79.40223694]
[66.11965179 -94.24422455]
[52.90653992 -109.43740082]
[60.73299789 -127.09616852]
[58.02401733 -141.84951782]
[55.31504059 -156.60287476]
[52.60606384 -171.35623169]
[47.96299362 -179.26504517]
[49.98439407 -186.40191650]
[47.54376221 -201.20202637]
[45.10312653 -216.00213623]
[32.54229736 -225.21426392]
[30.27798080 -240.25845337]
[39.13774490 -252.17651367]
[36.69710922 -266.97662354]
[34.12220001 -281.75396729]
[31.41322136 -296.50732422]
[28.70424461 -311.26068115]
[25.99526596 -326.01403809]
[23.28628731 -340.76739502]
[9.53020954 -355.47076416]
[16.71029663 -373.40206909]
[13.46739674 -388.04733276]
[10.22449589 -402.69259644]
[6.98159552 -417.33782959]
[3.73869491 -431.98309326]
[0.09812105 -446.53460693]
[-3.93742537 -460.98156738]
[-7.97297144 -475.42849731]
[-12.00851822 -489.87545776]
[-16.04406357 -504.32241821]
[-20.07961082 -518.76934814]
[-33.29553604 -527.86431885]
[-34.28100204 -543.87713623]
[-22.28004456 -554.52398682]
[-6.49877214 -551.63769531]
[0.95677555 -537.43225098]
[-5.63266039 -522.80493164]
[-1.59711421 -508.35794067]
[2.43843198 -493.91101074]
[6.47397852 -479.46405029]
[10.50952435 -465.01708984]
[14.54507065 -450.57015991]
[17.45756149 -448.52349854]
[19.50823021 -444.94769287]
[19.98165321 -440.27041626]
[18.38395309 -435.22601318]
[21.62685394 -420.58074951]
[24.86975479 -405.93548584]
[28.11265564 -391.29022217]
[31.35555649 -376.64495850]
[40.46723557 -371.92440796]
[45.56655502 -362.76647949]
[44.74726486 -352.09594727]
[38.03964233 -343.47634888]
[40.74861908 -328.72299194]
[43.45759583 -313.96966553]
[46.16657639 -299.21630859]
[48.87555313 -284.46295166]
[53.19168854 -278.43038940]
[51.49722290 -269.41726685]
[53.93785477 -254.61714172]
[66.15517426 -246.17483521]
[68.84115601 -231.20018005]
[59.90324020 -218.44277954]
[62.34387207 -203.64265442]
[64.78450775 -188.84254456]
[67.35941315 -174.06520081]
[70.06839752 -159.31185913]
[72.77737427 -144.55850220]
[75.48635101 -129.80514526]
[84.42061615 -124.75683594]
[89.18403625 -115.41979218]
[87.97782898 -104.78604126]
[80.96163940 -96.41570282]
[83.13312531 -81.57371521]
[85.30460358 -66.73172760]
[87.47608948 -51.88973618]
[89.64757538 -37.04774857]
[91.81905365 -22.20575714]
[93.99053955 -7.36376715]
[96.16201782 7.47822285]
[105.68688965 14.97124195]
[107.59985352 27.34445572]
[100.33193970 38.02823257]
[102.23355865 52.90720749]
[111.52191925 64.55089569]
[105.59655762 79.22061920]
[107.49817657 94.09959412]
[110.87391663 108.71479797]
[115.69013214 122.92057800]
[127.44873047 133.50575256]
[124.20759583 148.04344177]
[129.02381897 162.24920654]
[134.76289368 169.40255737]
[133.79595947 176.75688171]
[138.35343933 191.04777527]
[142.91090393 205.33865356]
[147.46836853 219.62954712]
[153.07661438 226.88592529]
[151.97628784 234.22148132]
[156.27351379 248.59275818]
[160.57072449 262.96405029]
[164.86793518 277.33532715]
[169.16516113 291.70663452]
[189.87936401 295.18908691]
[205.96881104 308.57791138]
[213.10696411 328.17678833]
[209.42266846 348.63262939]
[195.99012756 364.39779663]
[202.07458496 378.10833740]
[208.15904236 391.81890869]
[214.24349976 405.52947998]
[220.32795715 419.24002075]
[226.41241455 432.95059204]
[239.97927856 442.16320801]
[238.51464844 458.49679565]
[223.52522278 465.14880371]
[210.43081665 455.27618408]
[212.70184326 439.03503418]
[206.61740112 425.32449341]
[200.53294373 411.61392212]
[194.44848633 397.90335083]
[188.36402893 384.19281006]
[182.27957153 370.48223877]
[172.80108643 371.55798340]
[163.32577515 370.33886719]
[154.40202332 366.88867188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[13 143]
[14 142]
[15 141]
[16 140]
[17 138]
[18 137]
[20 135]
[21 134]
[22 31]
[23 30]
[24 29]
[33 133]
[34 132]
[36 130]
[37 129]
[39 126]
[40 125]
[41 124]
[42 123]
[43 122]
[44 121]
[45 120]
[46 119]
[48 115]
[49 114]
[50 113]
[51 112]
[53 111]
[54 110]
[55 109]
[58 106]
[59 105]
[60 103]
[61 102]
[62 101]
[63 100]
[64 99]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[154 169]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
