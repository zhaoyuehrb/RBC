%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RTL8C)
} def

/sequence { (\
CGCAUUUCCGGCGACGCCUCGGUACUGACCUCUGCAGAGCCGGGUGGAGCCCAUUGACGUCCAGCGAAGCGAGGAGCAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.005602821 ubox
1 13 0.007349502 ubox
1 56 0.006510944 ubox
1 59 0.116210020 ubox
1 66 0.073793839 ubox
1 71 0.045307708 ubox
1 81 0.862748616 ubox
2 9 0.014663210 ubox
2 12 0.007492632 ubox
2 55 0.006134809 ubox
2 58 0.122729126 ubox
2 60 0.036639187 ubox
2 65 0.075530513 ubox
2 70 0.046188710 ubox
2 77 0.126362778 ubox
2 80 0.957636926 ubox
3 11 0.007488369 ubox
3 56 0.126992997 ubox
3 59 0.039466123 ubox
3 64 0.075405261 ubox
3 69 0.046112187 ubox
3 76 0.126198411 ubox
3 79 0.956783901 ubox
4 54 0.013552134 ubox
4 55 0.125380392 ubox
4 60 0.046367980 ubox
5 53 0.014938243 ubox
5 57 0.052654674 ubox
5 59 0.046173373 ubox
5 67 0.008460108 ubox
5 68 0.012334875 ubox
5 73 0.003911627 ubox
5 74 0.072175495 ubox
5 75 0.013696406 ubox
5 76 0.060370095 ubox
5 79 0.004189515 ubox
6 56 0.055388091 ubox
6 57 0.019786689 ubox
6 66 0.006770260 ubox
6 67 0.011777766 ubox
6 68 0.015288271 ubox
6 72 0.003763359 ubox
6 73 0.073033407 ubox
6 74 0.011854264 ubox
6 75 0.063243806 ubox
6 76 0.837745138 ubox
6 78 0.012689991 ubox
7 44 0.007448282 ubox
7 56 0.020480014 ubox
7 57 0.068591864 ubox
7 66 0.008947417 ubox
7 67 0.017673411 ubox
7 71 0.003199754 ubox
7 72 0.073411821 ubox
7 73 0.009469307 ubox
7 74 0.058892802 ubox
7 75 0.919904381 ubox
7 78 0.004419029 ubox
8 43 0.011954622 ubox
8 56 0.071268856 ubox
8 66 0.017637438 ubox
8 71 0.072908500 ubox
8 73 0.058785399 ubox
8 74 0.923696787 ubox
9 42 0.011991398 ubox
9 56 0.024242484 ubox
9 59 0.010353831 ubox
9 66 0.003513588 ubox
9 71 0.027355333 ubox
9 73 0.922440081 ubox
9 81 0.004010825 ubox
10 18 0.003490179 ubox
10 41 0.012169617 ubox
10 51 0.972972589 ubox
10 52 0.087825417 ubox
10 55 0.003655431 ubox
10 58 0.004616416 ubox
10 70 0.011683259 ubox
11 17 0.003556617 ubox
11 40 0.012170219 ubox
11 50 0.976990110 ubox
11 51 0.062284517 ubox
11 70 0.202601850 ubox
12 16 0.003531737 ubox
12 39 0.012167041 ubox
12 49 0.978948258 ubox
12 69 0.202908566 ubox
12 71 0.012052019 ubox
13 70 0.012064803 ubox
15 46 0.978824985 ubox
15 66 0.202891913 ubox
16 35 0.012025908 ubox
16 45 0.978577054 ubox
16 65 0.203144522 ubox
17 34 0.012025686 ubox
17 44 0.975382374 ubox
17 64 0.202485674 ubox
18 43 0.971714774 ubox
18 44 0.216569137 ubox
18 64 0.003431930 ubox
19 42 0.160902500 ubox
19 43 0.233685297 ubox
19 63 0.004256731 ubox
20 42 0.986225599 ubox
20 59 0.009838661 ubox
21 30 0.012295997 ubox
21 41 0.999805551 ubox
21 58 0.009668771 ubox
21 62 0.005278396 ubox
22 29 0.012317162 ubox
22 40 0.999824359 ubox
22 61 0.005271362 ubox
23 28 0.011730909 ubox
23 39 0.983643669 ubox
23 56 0.005615141 ubox
24 55 0.007817025 ubox
24 60 0.004605107 ubox
25 37 0.993939842 ubox
25 39 0.006678303 ubox
25 59 0.004653241 ubox
26 36 0.998718752 ubox
26 38 0.007801961 ubox
26 53 0.010728059 ubox
27 33 0.006355885 ubox
27 35 0.997332950 ubox
27 52 0.010935766 ubox
30 37 0.003810141 ubox
30 39 0.015799212 ubox
30 49 0.011276529 ubox
31 36 0.003520866 ubox
31 38 0.018519050 ubox
31 48 0.011289430 ubox
32 37 0.018477178 ubox
32 47 0.011291461 ubox
33 38 0.003503071 ubox
33 46 0.011246248 ubox
34 45 0.011259419 ubox
35 44 0.011280562 ubox
42 52 0.012146952 ubox
43 51 0.012695023 ubox
43 55 0.008845643 ubox
44 50 0.012703772 ubox
44 54 0.015410278 ubox
44 58 0.008490253 ubox
45 49 0.011887700 ubox
45 53 0.027078365 ubox
45 57 0.008847433 ubox
45 59 0.003729722 ubox
45 63 0.180168648 ubox
46 52 0.029906532 ubox
46 58 0.004384931 ubox
46 62 0.200030580 ubox
46 80 0.003314200 ubox
47 51 0.029431293 ubox
47 55 0.009011674 ubox
47 61 0.200050292 ubox
48 54 0.009032817 ubox
48 60 0.187536723 ubox
49 60 0.064143467 ubox
49 77 0.009605394 ubox
50 59 0.122469235 ubox
50 76 0.009617846 ubox
51 74 0.013183879 ubox
52 73 0.019312371 ubox
53 60 0.026898698 ubox
54 59 0.027049515 ubox
54 64 0.132051073 ubox
54 67 0.135939886 ubox
54 68 0.041166584 ubox
54 69 0.063964294 ubox
54 72 0.298677569 ubox
54 73 0.003488727 ubox
54 74 0.005688747 ubox
54 75 0.022307157 ubox
54 76 0.003636678 ubox
54 79 0.051160108 ubox
55 63 0.216190788 ubox
55 66 0.146406585 ubox
55 67 0.041147821 ubox
55 68 0.083784678 ubox
55 71 0.321810627 ubox
55 72 0.037549448 ubox
55 73 0.011342848 ubox
55 74 0.024037723 ubox
55 75 0.003522243 ubox
55 78 0.107786932 ubox
55 81 0.052414116 ubox
56 62 0.227057689 ubox
56 65 0.151896272 ubox
56 70 0.332400061 ubox
56 77 0.113882210 ubox
56 80 0.089332468 ubox
58 66 0.534331110 ubox
58 71 0.615079588 ubox
58 81 0.044495647 ubox
59 65 0.541715369 ubox
59 70 0.626853792 ubox
59 77 0.156793062 ubox
59 80 0.046810911 ubox
60 64 0.506801420 ubox
60 67 0.128412290 ubox
60 69 0.617535336 ubox
60 72 0.075696750 ubox
60 74 0.014782361 ubox
60 75 0.272029289 ubox
60 76 0.082532165 ubox
60 79 0.039345112 ubox
61 66 0.158271939 ubox
61 71 0.080452356 ubox
61 73 0.022144432 ubox
61 74 0.296799738 ubox
62 73 0.296553714 ubox
64 70 0.385244159 ubox
64 77 0.043895477 ubox
64 80 0.084700226 ubox
65 69 0.382804287 ubox
65 71 0.137480257 ubox
65 76 0.043926791 ubox
65 79 0.084771790 ubox
65 81 0.066628176 ubox
66 70 0.130449300 ubox
66 80 0.072423855 ubox
69 77 0.188490111 ubox
69 80 0.076284097 ubox
70 76 0.188692335 ubox
70 79 0.076377079 ubox
70 81 0.005722359 ubox
71 80 0.006304423 ubox
1 81 0.9500000 lbox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
6 76 0.9500000 lbox
7 75 0.9500000 lbox
8 74 0.9500000 lbox
9 73 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
15 46 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
58 71 0.9500000 lbox
59 70 0.9500000 lbox
60 69 0.9500000 lbox
showpage
end
%%EOF
