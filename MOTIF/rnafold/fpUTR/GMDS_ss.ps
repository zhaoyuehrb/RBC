%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUGGCCGGCUCGGCCCGCCCCCGGCCCUCCCUGCACGGCCUCCCGUGCGCCCCUGUCAGACUGUGGCGGCCGGUCGCGCGGUGCGCUCUCCCUCCCUGCCCGCAGCCUGGAGAGGCGCUUCGUGCUGCACACCCCCGCGUUCCUGCCGGCACCGCGCCUGCCCUCUGCCGCGCUCCGCCCUGCCGCCGACCGCACGCCCGCCGCGGGAC\
) } def
/len { sequence length } bind def

/coor [
[89.36339569 173.08061218]
[87.21003723 179.41267395]
[83.23727417 184.72891235]
[77.85897064 188.52864075]
[71.61930847 190.46635437]
[65.13775635 190.38294983]
[57.73375702 203.42828369]
[50.32975769 216.47363281]
[42.92575836 229.51896667]
[35.52176285 242.56430054]
[28.11776543 255.60963440]
[31.61103249 265.90838623]
[28.91603279 276.21743774]
[21.15584183 283.19512939]
[11.05352020 284.71762085]
[3.26798129 297.53890991]
[3.44634819 313.93707275]
[-10.80161572 322.05667114]
[-24.81882668 313.54492188]
[-24.18557930 297.15798950]
[-9.55330467 289.75335693]
[-1.76776612 276.93206787]
[-2.75364470 257.62017822]
[15.07242775 248.20564270]
[22.47642517 235.16030884]
[29.88042259 222.11497498]
[37.28442001 209.06962585]
[44.68841934 196.02429199]
[52.09241486 182.97895813]
[49.24438477 160.03291321]
[69.85764313 148.03904724]
[76.07971954 134.39039612]
[82.30179596 120.74174500]
[88.52387238 107.09308624]
[78.68576813 95.77002716]
[64.30190277 100.02494812]
[49.91803741 104.27987671]
[35.53417206 108.53480530]
[21.15030479 112.78973389]
[6.76643848 117.04465485]
[-7.61742783 121.29958344]
[-18.51174164 133.55706787]
[-34.51745605 129.98649597]
[-39.16926956 114.26094818]
[-27.68178940 102.55753326]
[-11.87235451 106.91571808]
[2.51151156 102.66078949]
[16.89537811 98.40586853]
[31.27924347 94.15093994]
[45.66310883 89.89601135]
[60.04697418 85.64108276]
[74.43083954 81.38616180]
[59.76789093 78.22421265]
[49.91662598 66.91260529]
[45.34925079 52.62487793]
[46.81232071 37.69639969]
[54.06668854 24.56726837]
[65.92661285 15.38346577]
[80.45355988 11.64611053]
[95.27306366 13.96608067]
[107.96284485 21.96417236]
[116.44872284 34.33307648]
[119.34366608 49.05106735]
[116.17449188 63.71245575]
[107.45878601 75.92118835]
[101.82601166 89.82341766]
[113.43431854 80.32355499]
[125.04261780 70.82369995]
[136.65092468 61.32384491]
[148.25923157 51.82398605]
[159.86753845 42.32413101]
[171.40545654 32.73892593]
[182.87239075 23.06889343]
[194.12258911 13.14755630]
[205.15055847 2.97976851]
[216.17852783 -7.18801880]
[227.20649719 -17.35580635]
[238.23446655 -27.52359390]
[249.26243591 -37.69137955]
[253.44950867 -45.80788803]
[260.52883911 -47.92632675]
[271.70556641 -57.93035889]
[282.88232422 -67.93439484]
[294.05905151 -77.93842316]
[305.23577881 -87.94245911]
[316.18844604 -98.19129944]
[326.91174316 -108.67992401]
[337.63500977 -119.16854858]
[322.81759644 -116.83534241]
[308.38812256 -120.93293762]
[297.00839233 -130.70545959]
[290.77764893 -144.35015869]
[290.84527588 -159.35000610]
[297.19876099 -172.93797302]
[308.66613770 -182.60749817]
[323.13195801 -186.57484436]
[337.92773438 -184.10815430]
[350.32412720 -175.66246033]
[358.03433228 -162.79573059]
[359.63604736 -147.88148499]
[354.83541870 -133.67359924]
[366.98367310 -142.47247314]
[373.62155151 -156.83383179]
[388.46777344 -158.03323364]
[400.61602783 -166.83210754]
[412.69906616 -175.72032166]
[424.71621704 -184.69740295]
[436.73336792 -193.67449951]
[437.66708374 -204.50939941]
[444.27294922 -212.87014771]
[454.18115234 -216.14675903]
[464.04519653 -213.48678589]
[476.32189941 -222.10552979]
[479.17395020 -237.41903687]
[491.74703979 -245.98477173]
[506.32855225 -243.17141724]
[518.60522461 -251.79016113]
[530.88195801 -260.40890503]
[543.15863037 -269.02764893]
[555.43536377 -277.64639282]
[567.71203613 -286.26513672]
[568.96490479 -297.06777954]
[575.81451416 -305.23004150]
[585.81506348 -308.21301270]
[595.59631348 -305.26324463]
[608.12188721 -313.51614380]
[620.64746094 -321.76904297]
[633.17303467 -330.02194214]
[645.69854736 -338.27487183]
[658.22412109 -346.52777100]
[670.68847656 -354.87280273]
[683.09094238 -363.30953979]
[691.03009033 -381.83987427]
[710.35833740 -382.42211914]
[722.50659180 -391.22097778]
[724.75415039 -406.86465454]
[737.45501709 -416.27011108]
[753.07403564 -413.85729980]
[762.34472656 -401.05767822]
[759.76690674 -385.46502686]
[746.86999512 -376.33020020]
[731.30548096 -379.07275391]
[719.15722656 -370.27386475]
[718.45837402 -360.08139038]
[712.13238525 -351.78131104]
[702.07562256 -348.25982666]
[691.52770996 -350.90707397]
[679.12524414 -342.47033691]
[675.36334229 -336.11007690]
[666.47705078 -334.00219727]
[653.95147705 -325.74929810]
[641.42590332 -317.49639893]
[628.90032959 -309.24349976]
[616.37481689 -300.99060059]
[603.84924316 -292.73770142]
[596.47119141 -274.86352539]
[576.33074951 -273.98843384]
[564.05407715 -265.36968994]
[551.77740479 -256.75094604]
[539.50067139 -248.13220215]
[527.22399902 -239.51345825]
[514.94726562 -230.89471436]
[512.63989258 -216.22463989]
[500.31231689 -207.30911255]
[484.94064331 -209.82882690]
[472.66394043 -201.21008301]
[465.81631470 -183.12608337]
[445.71044922 -181.65734863]
[433.69329834 -172.68025208]
[421.67614746 -163.70317078]
[418.19924927 -157.18273926]
[409.41491699 -154.68385315]
[397.26666260 -145.88499451]
[391.49768066 -132.15296936]
[375.78253174 -130.32421875]
[363.63427734 -121.52535248]
[362.07284546 -114.98110962]
[356.49328613 -109.81726074]
[348.12365723 -108.44526672]
[337.40036011 -97.95664215]
[326.67709351 -87.46801758]
[326.27224731 -83.96683502]
[324.15237427 -80.48757172]
[320.34613037 -77.83374023]
[315.23980713 -76.76573181]
[304.06307983 -66.76169586]
[292.88635254 -56.75766373]
[281.70962524 -46.75362778]
[270.53286743 -36.74959564]
[259.43023682 -26.66341209]
[248.40225220 -16.49562454]
[237.37429810 -6.32783699]
[226.34632874 3.83995008]
[215.31835938 14.00773716]
[204.29039001 24.17552567]
[203.78244019 27.66324615]
[201.56088257 31.07847023]
[197.67803955 33.61888504]
[192.54241943 34.53582382]
[181.07550049 44.20585632]
[177.98912048 50.91994858]
[169.36738586 53.93243408]
[157.75907898 63.43228912]
[146.15078735 72.93214417]
[134.54248047 82.43200684]
[122.93417358 91.93186188]
[111.32587433 101.43171692]
[102.17252350 113.31516266]
[95.95044708 126.96382141]
[89.72837067 140.61247253]
[83.50629425 154.26112366]
[87.44904327 159.85382080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[15 22]
[16 21]
[31 211]
[32 210]
[33 209]
[34 208]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[66 207]
[67 206]
[68 205]
[69 204]
[70 203]
[71 202]
[72 200]
[73 199]
[74 195]
[75 194]
[76 193]
[77 192]
[78 191]
[79 190]
[81 189]
[82 188]
[83 187]
[84 186]
[85 185]
[86 181]
[87 180]
[88 179]
[101 176]
[102 175]
[104 173]
[105 172]
[106 170]
[107 169]
[108 168]
[112 166]
[113 165]
[116 162]
[117 161]
[118 160]
[119 159]
[120 158]
[121 157]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 148]
[132 147]
[134 143]
[135 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
