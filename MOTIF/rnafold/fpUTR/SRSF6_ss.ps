%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAUAGCGAAAGCCUGGCGCGCGCGCGCGCCAUUGUGUGGCUGGACUCGGCCGCCCCUGUGGUGUGAGGCGCGUGUUCGGGCUCUUGCCGUCCCCGCACCCGCACCGCGGUUACUGGCUUGCGGUCCGCCGUUCGACAACCAGCCCUUGGGUCCCCGCCCGCCACGGAC\
) } def
/len { sequence length } bind def

/coor [
[-32.07101822 136.98144531]
[-38.56663895 139.17520142]
[-45.37074280 139.23236084]
[-51.80374146 137.17944336]
[-57.23315811 133.25216675]
[-61.13581467 127.86878967]
[-63.14815903 121.58572388]
[-77.86993408 118.71006775]
[-92.59170532 115.83440399]
[-107.31347656 112.95874786]
[-122.34099579 117.90689087]
[-133.34887695 107.87315369]
[-148.07064819 104.99748993]
[-162.79241943 102.12183380]
[-177.51419067 99.24617004]
[-192.23596191 96.37051392]
[-206.95773315 93.49485779]
[-221.67950439 90.61919403]
[-236.42707825 87.87889099]
[-251.19918823 85.27416229]
[-265.97131348 82.66944122]
[-280.74343872 80.06472015]
[-295.51553345 77.45999908]
[-310.28765869 74.85527802]
[-325.05978394 72.25054932]
[-342.19027710 78.95720673]
[-355.20025635 67.20393372]
[-370.01773071 64.87102509]
[-384.83520508 62.53812027]
[-399.65267944 60.20521164]
[-414.47015381 57.87230682]
[-429.28762817 55.53939819]
[-444.10510254 53.20649338]
[-458.92257690 50.87358475]
[-470.68960571 62.99870300]
[-487.19903564 65.70803070]
[-501.92901611 58.13150406]
[-509.17953491 43.42315674]
[-524.03735352 41.36285400]
[-538.89520264 39.30255127]
[-553.75305176 37.24224854]
[-568.61090088 35.18194580]
[-583.46868896 33.12164307]
[-598.32653809 31.06133842]
[-613.30834961 37.73044205]
[-626.41400146 27.87277412]
[-624.16156006 11.62905693]
[-608.86810303 5.70943403]
[-596.26623535 16.20350647]
[-581.40838623 18.26381111]
[-566.55059814 20.32411385]
[-551.69274902 22.38441658]
[-536.83489990 24.44472122]
[-521.97705078 26.50502396]
[-507.11923218 28.56532669]
[-498.77883911 18.11346054]
[-486.25912476 13.11649418]
[-472.79940796 14.98278046]
[-461.93969727 23.32970619]
[-456.58966064 36.05611038]
[-441.77218628 38.38901901]
[-426.95471191 40.72192383]
[-412.13723755 43.05483246]
[-397.31976318 45.38773727]
[-382.50228882 47.72064590]
[-367.68481445 50.05355072]
[-352.86734009 52.38645935]
[-342.88287354 45.51519012]
[-330.49835205 47.36358643]
[-322.45504761 57.47843552]
[-307.68292236 60.08316040]
[-292.91082764 62.68788147]
[-278.13870239 65.29260254]
[-263.36657715 67.89732361]
[-248.59446716 70.50205231]
[-233.82235718 73.10677338]
[-226.66181946 71.16418457]
[-218.80384827 75.89742279]
[-204.08207703 78.77307892]
[-189.36030579 81.64874268]
[-174.63853455 84.52439880]
[-159.91676331 87.40006256]
[-145.19499207 90.27571869]
[-130.47322083 93.15138245]
[-116.49869537 87.99755096]
[-104.43781281 98.23696899]
[-89.71604156 101.11263275]
[-74.99427032 103.98828888]
[-60.27249908 106.86395264]
[-39.47628021 96.72457886]
[-21.31430435 112.18839264]
[-6.36553621 113.42708588]
[8.58323097 114.66577911]
[23.53199768 115.90446472]
[35.86894608 104.50000763]
[52.97473907 105.54904938]
[64.26158905 118.89034271]
[79.23059082 119.85420227]
[65.92907715 100.17977905]
[71.22633362 73.06961060]
[97.27735138 55.33375168]
[107.53751373 44.39167786]
[117.79768372 33.44960785]
[128.05784607 22.50753403]
[134.48136902 6.81757498]
[151.33636475 8.64664078]
[154.24470520 25.34927177]
[138.99992371 32.76770401]
[128.73976135 43.70977402]
[118.47959137 54.65184784]
[108.21942139 65.59391785]
[111.04174042 72.54262543]
[125.89957428 74.60289764]
[116.68637848 86.44003296]
[119.50870514 93.38874054]
[134.49288940 94.07744598]
[149.47706604 94.76615143]
[164.46124268 95.45484924]
[173.21589661 92.71493530]
[179.71362305 96.29634857]
[194.68261719 97.26020813]
[209.65162659 98.22406769]
[224.62884521 99.05038452]
[239.61302185 99.73908997]
[254.59721375 100.42779541]
[264.17910767 88.22260284]
[279.11422729 84.01289368]
[293.65972900 89.41738129]
[302.22253418 102.35794067]
[301.51010132 117.85865021]
[291.79635620 129.95918274]
[276.81643677 134.00662231]
[262.33044434 128.44465637]
[253.90850830 115.41197205]
[238.92433167 114.72326660]
[223.94013977 114.03456879]
[217.08787537 116.87944031]
[208.68775940 113.19306946]
[193.71876526 112.22920990]
[178.74977112 111.26535034]
[163.77253723 110.43903351]
[148.78836060 109.75032806]
[133.80418396 109.06163025]
[118.81999969 108.37292480]
[115.06999969 114.86811066]
[129.74220276 117.98681641]
[131.31008911 132.90464783]
[117.60687256 139.00563049]
[107.56999969 127.85849762]
[103.81999969 134.35368347]
[111.90852356 146.98600769]
[119.99704742 159.61834717]
[128.08557129 172.25067139]
[142.88995361 179.30490112]
[143.91310120 195.67210388]
[130.10246277 204.51510620]
[115.66526031 196.73698425]
[115.45324707 180.33920288]
[107.36471558 167.70686340]
[99.27619171 155.07453918]
[91.18766785 142.44221497]
[78.26673126 134.82319641]
[63.29772949 133.85934448]
[54.25374222 143.87107849]
[41.28141022 146.79135132]
[29.17963409 141.77008057]
[22.29330826 130.85322571]
[7.34454107 129.61454773]
[-7.60422659 128.37585449]
[-22.55299377 127.13716125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 89]
[8 88]
[9 87]
[10 86]
[12 84]
[13 83]
[14 82]
[15 81]
[16 80]
[17 79]
[18 78]
[19 76]
[20 75]
[21 74]
[22 73]
[23 72]
[24 71]
[25 70]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[91 170]
[92 169]
[93 168]
[94 167]
[97 163]
[98 162]
[101 111]
[102 110]
[103 109]
[104 108]
[115 144]
[116 143]
[117 142]
[118 141]
[120 140]
[121 139]
[122 138]
[123 136]
[124 135]
[125 134]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
