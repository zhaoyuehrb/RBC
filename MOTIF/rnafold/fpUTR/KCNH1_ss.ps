%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGAGGGCGCGAGGGUAGCAGCCAGAGGGAGCCGCCAGCCCUGCCUGCGGAUCCCCGCCGGGCGCAUGGGGCGCUUCGAGCCGGGACUGCGUGCGGGCCCCGAGGCCAGUUUCCUGCUGUCGUAAGAAGCCGCGCCAGGACGCCCGCCGGACCCCGAGCUGCUGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[136.18058777 203.85383606]
[122.22480011 198.35511780]
[110.89633942 188.52323914]
[103.48812103 175.48028564]
[100.84564972 160.71488953]
[103.27050781 145.91217041]
[110.48751831 132.75962830]
[102.39898682 145.39195251]
[94.31046295 158.02429199]
[86.33831787 170.73039246]
[78.48322296 183.50917053]
[83.59599304 198.28732300]
[77.96513367 212.87593079]
[64.24936676 220.38670349]
[48.92485428 217.27328491]
[39.22736740 205.00573730]
[39.73575974 189.37641907]
[50.20998383 177.76501465]
[65.70443726 175.65408325]
[73.55952454 162.87528992]
[74.38661957 155.50218201]
[81.67813110 149.93576050]
[89.76666260 137.30343628]
[97.85518646 124.67110443]
[84.65638733 115.21881866]
[81.59891510 101.44841766]
[67.45699310 96.44780731]
[53.31507111 91.44719696]
[39.17314911 86.44659424]
[27.19404793 91.29489899]
[15.50285149 86.81060028]
[10.19139194 75.91600800]
[-3.85627651 70.65644073]
[-17.90394592 65.39688110]
[-27.07696533 65.31420898]
[-32.15988922 59.90950394]
[-46.10856247 54.39276123]
[-60.05723953 48.87601852]
[-74.05599976 43.48763657]
[-88.10366821 38.22807312]
[-93.32653809 39.10548019]
[-97.89501190 37.98036194]
[-101.14972687 35.44594955]
[-102.76694489 32.27236557]
[-116.50354767 26.24693298]
[-130.24014282 20.22150230]
[-143.97674561 14.19606972]
[-157.71334839 8.17063904]
[-171.50471497 2.27164340]
[-185.34968567 -3.50041819]
[-199.19467163 -9.27248001]
[-215.38014221 -6.63383341]
[-225.54708862 -19.50104523]
[-219.23663330 -34.63742828]
[-202.94041443 -36.47197342]
[-193.42260742 -23.11745453]
[-179.57763672 -17.34539223]
[-165.73265076 -11.57333088]
[-158.32061768 -11.90302277]
[-151.68791199 -5.56596136]
[-137.95132446 0.45947012]
[-124.21471405 6.48490143]
[-110.47811890 12.51033306]
[-96.74151611 18.53576469]
[-82.84410858 24.18040466]
[-68.79644012 29.43996811]
[-61.40151978 28.83821297]
[-54.54049683 34.92734146]
[-40.59181976 40.44408417]
[-26.64314461 45.96083069]
[-12.64438152 51.34920883]
[1.40328670 56.60877228]
[15.45095539 61.86833572]
[32.56007767 58.03735733]
[44.17375946 72.30467224]
[58.31567764 77.30527496]
[72.45759583 82.30588531]
[86.59951782 87.30649567]
[109.94461823 80.81293488]
[124.28009033 104.87244415]
[138.67601013 100.65847778]
[153.07192993 96.44451141]
[167.42852783 92.09848022]
[181.74461365 87.62075806]
[196.06068420 83.14303589]
[210.37675476 78.66531372]
[213.80538940 65.29261780]
[223.32560730 55.44532394]
[236.36689758 51.62802887]
[249.48345947 54.73764801]
[259.26455688 63.85540771]
[273.66049194 59.64144135]
[281.05114746 54.20734787]
[288.35968018 55.48490524]
[302.83056641 51.53611374]
[317.30148315 47.58732224]
[331.77239990 43.63853073]
[346.24328613 39.68973923]
[360.71420288 35.74094772]
[373.34405518 22.36483574]
[390.12573242 27.44164848]
[404.52163696 23.22768021]
[411.40341187 12.28939342]
[423.50942993 9.08981419]
[434.18917847 14.82100677]
[448.66009521 10.87221527]
[463.13101196 6.92342377]
[471.51031494 -8.41182899]
[488.05743408 -12.87296391]
[502.43237305 -4.17684555]
[516.82830811 -8.39081383]
[531.22424316 -12.60478115]
[545.62011719 -16.81875038]
[560.01605225 -21.03271675]
[571.08679199 -32.33531952]
[585.47515869 -28.48510361]
[599.87109375 -32.69907379]
[614.26702881 -36.91304016]
[625.19616699 -49.13946915]
[641.19165039 -45.52334213]
[645.79870605 -29.78462219]
[634.27795410 -18.11395454]
[618.48101807 -22.51712227]
[604.08508301 -18.30315399]
[589.68914795 -14.08918571]
[579.64807129 -3.08799481]
[564.23004150 -6.63679886]
[549.83410645 -2.42283106]
[535.43817139 1.79113710]
[521.04229736 6.00510502]
[506.64636230 10.21907330]
[502.09136963 22.29595375]
[491.24374390 29.64408112]
[477.94924927 29.38702583]
[467.07980347 21.39432716]
[452.60888672 25.34311867]
[438.13796997 29.29191017]
[426.49993896 42.40505219]
[408.73562622 37.62360001]
[394.33969116 41.83756638]
[388.24267578 52.31278229]
[376.25378418 55.92658997]
[364.66299438 50.21184921]
[350.19207764 54.16064072]
[335.72119141 58.10943222]
[321.25027466 62.05822372]
[306.77935791 66.00701904]
[292.30847168 69.95581055]
[277.87445068 74.03736115]
[263.47851562 78.25132751]
[258.46014404 93.86291504]
[244.99855042 103.51490784]
[228.27035522 103.25253296]
[214.85447693 92.98139191]
[200.53840637 97.45911407]
[186.22233582 101.93683624]
[171.90625000 106.41455841]
[166.44023132 111.43148041]
[157.28590393 110.84042358]
[142.88998413 115.05439758]
[128.49406433 119.26836395]
[143.14189148 116.03707886]
[158.02978516 117.86756897]
[171.45858765 124.55092621]
[181.89567566 135.32437134]
[188.14985657 148.95834351]
[189.50735474 163.89678955]
[185.81324768 178.43478394]
[177.48910522 190.91313171]
[165.48500061 199.90763855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[10 20]
[11 19]
[26 78]
[27 77]
[28 76]
[29 75]
[32 73]
[33 72]
[34 71]
[36 70]
[37 69]
[38 68]
[39 66]
[40 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[49 58]
[50 57]
[51 56]
[80 161]
[81 160]
[82 159]
[83 157]
[84 156]
[85 155]
[86 154]
[91 150]
[92 149]
[94 148]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
[101 140]
[102 139]
[105 137]
[106 136]
[107 135]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
