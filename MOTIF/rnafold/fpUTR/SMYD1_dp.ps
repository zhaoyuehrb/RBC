%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SMYD1)
} def

/sequence { (\
GGGAUGCUGAAGGUGCUGAAAUAGCAAUGACAAGAGACUUGGCUCAGUGUUAAAUAACUGCCGCGCUGGCCUGACAGUCUCUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.276746779 ubox
1 17 0.050206638 ubox
1 81 0.029527307 ubox
1 82 0.008043547 ubox
2 7 0.303010839 ubox
2 8 0.060498618 ubox
2 16 0.053429440 ubox
2 17 0.032680029 ubox
2 80 0.029734189 ubox
2 81 0.007884588 ubox
2 82 0.054207178 ubox
3 7 0.064095142 ubox
3 16 0.034454706 ubox
3 79 0.029817481 ubox
3 80 0.006030373 ubox
3 81 0.056937050 ubox
4 14 0.059218261 ubox
4 22 0.004643447 ubox
4 28 0.062428023 ubox
4 78 0.023717698 ubox
4 80 0.056273518 ubox
5 13 0.060215565 ubox
5 15 0.035831664 ubox
5 18 0.003361537 ubox
5 21 0.004735795 ubox
5 26 0.272180844 ubox
5 27 0.047460238 ubox
5 29 0.003696036 ubox
5 32 0.091696101 ubox
5 76 0.004097500 ubox
5 77 0.016746465 ubox
5 83 0.004579927 ubox
6 14 0.140087039 ubox
6 16 0.076444185 ubox
6 25 0.304558519 ubox
6 28 0.003252024 ubox
6 31 0.101325189 ubox
6 75 0.004991339 ubox
6 78 0.059389967 ubox
7 13 0.160179462 ubox
7 15 0.076577218 ubox
7 24 0.304611001 ubox
7 34 0.017101326 ubox
7 77 0.062320803 ubox
7 85 0.037941805 ubox
8 12 0.144539768 ubox
8 23 0.301420733 ubox
8 26 0.006893619 ubox
8 29 0.038685493 ubox
8 32 0.556451839 ubox
8 33 0.024014868 ubox
8 76 0.062611161 ubox
8 83 0.005782620 ubox
8 84 0.037312207 ubox
9 14 0.007388647 ubox
9 17 0.005791421 ubox
9 22 0.249389589 ubox
9 25 0.007016754 ubox
9 28 0.021080749 ubox
9 31 0.606640697 ubox
9 75 0.062457970 ubox
11 17 0.089410765 ubox
11 39 0.003229166 ubox
11 40 0.005037452 ubox
11 72 0.053579015 ubox
12 16 0.089680757 ubox
12 38 0.003220488 ubox
12 39 0.005521931 ubox
12 71 0.053772832 ubox
12 72 0.024410611 ubox
13 22 0.089194559 ubox
13 25 0.013507095 ubox
13 28 0.153368408 ubox
13 31 0.072367558 ubox
13 38 0.005599278 ubox
13 70 0.052027539 ubox
13 71 0.023284340 ubox
14 21 0.109606222 ubox
14 23 0.004242907 ubox
14 24 0.013190392 ubox
14 26 0.872805500 ubox
14 27 0.111423322 ubox
14 29 0.007656260 ubox
14 30 0.053821422 ubox
14 32 0.003756223 ubox
14 37 0.004922675 ubox
14 69 0.040453872 ubox
15 22 0.006190634 ubox
15 25 0.945045370 ubox
15 28 0.004932804 ubox
15 31 0.003675552 ubox
15 66 0.006335440 ubox
15 70 0.010116873 ubox
16 24 0.945188183 ubox
16 34 0.003488201 ubox
16 65 0.006336980 ubox
16 69 0.010134345 ubox
17 23 0.935823658 ubox
17 26 0.029358692 ubox
17 32 0.013848717 ubox
17 33 0.003345765 ubox
17 68 0.008784245 ubox
18 22 0.779060194 ubox
18 25 0.032341105 ubox
18 31 0.015419354 ubox
21 28 0.014583455 ubox
22 27 0.013965656 ubox
22 29 0.007557851 ubox
22 68 0.009774531 ubox
23 28 0.008379085 ubox
23 67 0.012509380 ubox
24 66 0.012673292 ubox
25 65 0.012660020 ubox
25 83 0.003790232 ubox
28 52 0.009105562 ubox
28 83 0.008522696 ubox
29 45 0.003655615 ubox
29 51 0.009992225 ubox
29 82 0.003872291 ubox
30 44 0.003574139 ubox
30 50 0.010084198 ubox
31 41 0.055992908 ubox
31 49 0.010094266 ubox
31 83 0.359675531 ubox
32 40 0.056744593 ubox
32 48 0.009786681 ubox
32 82 0.254897545 ubox
33 39 0.056738875 ubox
33 80 0.003803721 ubox
33 82 0.936741045 ubox
34 38 0.055534404 ubox
34 45 0.011796529 ubox
34 79 0.003983026 ubox
34 81 0.997539145 ubox
35 44 0.012146016 ubox
35 67 0.004293038 ubox
35 78 0.003960539 ubox
35 80 0.997692426 ubox
36 43 0.012159669 ubox
36 66 0.004417306 ubox
36 79 0.997864649 ubox
37 78 0.997726299 ubox
38 77 0.997049927 ubox
39 74 0.189333249 ubox
39 76 0.883932365 ubox
39 77 0.010131335 ubox
40 63 0.008412995 ubox
40 73 0.294660364 ubox
40 76 0.064145499 ubox
41 62 0.014867172 ubox
41 67 0.003943233 ubox
41 71 0.987699979 ubox
41 72 0.121937004 ubox
41 75 0.047570664 ubox
42 61 0.014990214 ubox
42 64 0.028155013 ubox
42 66 0.005805933 ubox
42 70 0.991337029 ubox
42 71 0.116683735 ubox
43 60 0.013554905 ubox
43 63 0.028154061 ubox
43 65 0.005802307 ubox
43 69 0.986078091 ubox
44 68 0.157128469 ubox
44 69 0.152250726 ubox
44 74 0.009823765 ubox
45 60 0.043587431 ubox
45 68 0.986532451 ubox
45 73 0.010249706 ubox
46 59 0.045643920 ubox
46 67 0.998001187 ubox
46 72 0.010215917 ubox
47 58 0.045975939 ubox
47 64 0.024692570 ubox
47 66 0.998493401 ubox
47 71 0.010171586 ubox
48 56 0.004034264 ubox
48 57 0.045783498 ubox
48 63 0.025112066 ubox
48 65 0.998050279 ubox
49 55 0.005640582 ubox
49 58 0.028870694 ubox
49 61 0.035932913 ubox
49 62 0.026906344 ubox
49 64 0.996705739 ubox
49 70 0.005423149 ubox
50 54 0.006028312 ubox
50 57 0.032086623 ubox
50 60 0.038242635 ubox
50 63 0.967136023 ubox
50 69 0.005404094 ubox
51 56 0.042446962 ubox
51 60 0.391134597 ubox
51 68 0.005302835 ubox
52 59 0.408106195 ubox
52 67 0.005062146 ubox
60 66 0.004455766 ubox
60 70 0.013109634 ubox
61 65 0.004468136 ubox
61 69 0.015033766 ubox
62 68 0.015119523 ubox
63 67 0.009331596 ubox
63 70 0.010703037 ubox
64 69 0.010877123 ubox
67 76 0.003398286 ubox
68 75 0.003885887 ubox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
18 22 0.9500000 lbox
33 82 0.9500000 lbox
34 81 0.9500000 lbox
35 80 0.9500000 lbox
36 79 0.9500000 lbox
37 78 0.9500000 lbox
38 77 0.9500000 lbox
39 76 0.9500000 lbox
41 71 0.9500000 lbox
42 70 0.9500000 lbox
43 69 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
showpage
end
%%EOF
