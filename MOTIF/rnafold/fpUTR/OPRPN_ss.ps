%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCCAAUAAAAAUCCAGACAGAGGUAUUUAAGAAGAAAGGCUUUUCUAUCAAAGUUCUUUCUCUUCUUGGACUUUUAAAUUGUGGCUACCUAAAUUGAGUAUCUGGCAAGAGUAAGAUUAAGCAGUAAUUUGUUCCAAAGAAGAAUCUUCUACCAAGGAGCAACUUUAAAGA\
) } def
/len { sequence length } bind def

/coor [
[38.84283447 127.86203766]
[34.83839035 116.44557953]
[32.94571686 104.49614716]
[17.96081924 103.82317352]
[3.82741117 110.93354034]
[-8.53991222 102.63302612]
[-23.52480888 101.96005249]
[-38.50970459 101.28707886]
[-53.50426483 100.88320923]
[-68.50366211 100.74857330]
[-83.50305939 100.61393738]
[-98.50245667 100.47930145]
[-113.50184631 100.34465790]
[-127.37091827 107.95777893]
[-140.02822876 100.10655212]
[-155.02761841 99.97191620]
[-170.02702332 99.83728027]
[-185.02641296 99.70263672]
[-189.62588501 102.30945587]
[-194.29577637 102.81727600]
[-198.21710205 101.55603027]
[-200.82395935 99.13520050]
[-215.79437256 98.19334412]
[-230.76477051 97.25148773]
[-245.73516846 96.30963135]
[-260.70556641 95.36776733]
[-249.76358032 105.62802124]
[-245.98162842 120.14342499]
[-250.52581787 134.43853760]
[-261.99502563 144.10586548]
[-276.85305786 146.16471863]
[-290.51882935 139.98031616]
[-298.77886963 127.45945740]
[-299.08639526 112.46261597]
[-291.34661865 99.61365509]
[-277.94711304 92.87445068]
[-292.57101440 89.53663635]
[-307.19494629 86.19882202]
[-321.81884766 82.86100769]
[-336.44277954 79.52319336]
[-351.06668091 76.18537903]
[-365.69061279 72.84756470]
[-380.34390259 69.64115143]
[-395.02539062 66.56639099]
[-409.70684814 63.49162674]
[-424.38833618 60.41686249]
[-437.47833252 69.27281952]
[-452.98040771 66.19691467]
[-461.69744873 53.01403046]
[-458.45782471 37.54534149]
[-445.18353271 28.96814346]
[-429.74993896 32.37113571]
[-421.31356812 45.73538208]
[-406.63211060 48.81014633]
[-391.95062256 51.88490677]
[-377.26913452 54.95967102]
[-370.05361938 53.24746323]
[-362.35278320 58.22364807]
[-347.72888184 61.56146240]
[-333.10494995 64.89927673]
[-318.48104858 68.23709106]
[-303.85711670 71.57490540]
[-289.23321533 74.91271973]
[-274.60928345 78.25053406]
[-259.76370239 80.39736938]
[-244.79330444 81.33922577]
[-229.82290649 82.28108215]
[-214.85250854 83.22294617]
[-199.88211060 84.16480255]
[-184.89176941 84.70324707]
[-169.89237976 84.83788300]
[-154.89299011 84.97251892]
[-139.89358521 85.10715485]
[-127.09738159 77.48440552]
[-113.36721039 85.34526062]
[-98.36781311 85.47990417]
[-83.36842346 85.61454010]
[-68.36902618 85.74917603]
[-53.36962891 85.88381195]
[-49.37448502 83.21179962]
[-43.65173340 83.04399872]
[-37.83673096 86.30218506]
[-22.85183716 86.97515869]
[-7.86694002 87.64813232]
[5.19464874 80.48963165]
[18.63379288 88.83827972]
[33.61869049 89.51125336]
[38.07788086 73.88212585]
[46.15867996 59.78054428]
[57.38847351 48.03125763]
[71.11046600 39.32144547]
[86.52210999 34.16050720]
[102.72202301 32.85029602]
[118.76274109 35.46743393]
[133.70608521 41.85886002]
[146.67808533 51.65076065]
[158.23577881 42.08940125]
[169.79347229 32.52804184]
[181.35118103 22.96668053]
[180.05392456 6.11814356]
[188.95590210 -8.04973316]
[204.38932800 -14.07102299]
[220.21362305 -9.76213932]
[231.59782410 -19.52943039]
[242.98202515 -29.29672241]
[254.36622620 -39.06401443]
[259.80166626 -53.92223358]
[274.49914551 -56.33743286]
[285.88333130 -66.10472107]
[290.80935669 -81.74653625]
[306.87506104 -85.03674316]
[317.55340576 -72.59066772]
[311.85943604 -57.21175766]
[295.65063477 -54.72052383]
[284.26641846 -44.95323181]
[279.64526367 -30.79363441]
[264.13351440 -27.67981339]
[252.74931335 -17.91252136]
[241.36511230 -8.14523029]
[229.98091125 1.62206078]
[232.28782654 14.79073906]
[227.74212646 27.47858810]
[217.43310547 36.32740402]
[203.99015808 38.93899918]
[190.91253662 34.52437973]
[179.35484314 44.08573914]
[167.79713440 53.64709854]
[156.23944092 63.20845795]
[164.05023193 79.65152740]
[167.16154480 97.58760071]
[165.34509277 115.70067596]
[158.73416138 132.66175842]
[170.94805908 141.36926270]
[183.16197205 150.07676697]
[195.37586975 158.78425598]
[207.58978271 167.49176025]
[219.80368042 176.19926453]
[232.01757812 184.90675354]
[251.59069824 180.51107788]
[267.86679077 191.71003723]
[270.66870117 210.96003723]
[283.33361816 218.99743652]
[295.99856567 227.03485107]
[308.66348267 235.07225037]
[321.32839966 243.10964966]
[337.94158936 246.49159241]
[339.29083252 263.39175415]
[323.42462158 269.36669922]
[313.29098511 255.77456665]
[300.62606812 247.73716736]
[287.96115112 239.69976807]
[275.29623413 231.66236877]
[262.63131714 223.62495422]
[253.53427124 228.50315857]
[243.15116882 229.15261841]
[233.36605835 225.38795471]
[225.98262024 217.83084106]
[222.39179993 207.80845642]
[223.31008911 197.12066650]
[211.09617615 188.41316223]
[198.88227844 179.70565796]
[186.66836548 170.99816895]
[174.45446777 162.29066467]
[162.24057007 153.58316040]
[150.02665710 144.87567139]
[141.17018127 153.11787415]
[130.97946167 159.63862610]
[119.78474426 164.22660828]
[107.94883728 166.73310852]
[95.85533142 167.07691956]
[83.89614868 165.24690247]
[72.45885468 161.30235291]
[61.91411972 155.37109375]
[52.60367966 147.64537048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 87]
[4 86]
[6 84]
[7 83]
[8 82]
[9 79]
[10 78]
[11 77]
[12 76]
[13 75]
[15 73]
[16 72]
[17 71]
[18 70]
[22 69]
[23 68]
[24 67]
[25 66]
[26 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 56]
[44 55]
[45 54]
[46 53]
[96 128]
[97 127]
[98 126]
[99 125]
[103 120]
[104 119]
[105 118]
[106 117]
[108 115]
[109 114]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
