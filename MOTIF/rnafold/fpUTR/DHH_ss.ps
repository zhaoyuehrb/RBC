%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCGGAGUCCGGGCGUUCUGGCAGCACCAGAGUCCUGCAGCAGAGACGGGCUGGGCUGGCACUCACCCACGACCCCCCUUCCCUGCUAUGAUGGUUUGUCAGUAGCAGGUCCUAGACACCCCCCGCCCGCUCCCGGGGCACGUGGGCAGAGCUAGCAGCAGCCAGGUGCACGGAGCCACAAGAGCUCUAGGGCACUCUGGGGGCAGCUGUGCCUGCUGCCCUCUCUGGUGCCUGUGGAGAUGCCUAACUGACAG\
GAGAGUUAGUGAGGACAAGAACGCUCCCUUUUGGCCGAGGUCCGCUGUAUCC\
) } def
/len { sequence length } bind def

/coor [
[127.35886383 142.88917542]
[124.92172241 157.68986511]
[122.48458099 172.49055481]
[120.04743958 187.29124451]
[117.61029816 202.09193420]
[115.17315674 216.89260864]
[118.56567383 233.50367737]
[103.54292297 241.36199951]
[91.83298492 229.10176086]
[100.37246704 214.45547485]
[102.80960846 199.65478516]
[105.24674988 184.85409546]
[107.68389130 170.05340576]
[110.12103271 155.25273132]
[112.55818176 140.45204163]
[105.47904968 137.97494507]
[91.32080078 133.02075195]
[84.24167633 130.54367065]
[76.91903687 143.63484192]
[69.59638977 156.72601318]
[62.27375031 169.81719971]
[54.95110703 182.90837097]
[57.91246796 198.67573547]
[47.32276154 210.72720337]
[31.30549622 209.81790161]
[22.14775276 196.64537048]
[26.87456512 181.31446838]
[41.85992813 175.58572388]
[49.18257141 162.49455261]
[56.50521469 149.40338135]
[63.82785797 136.31219482]
[71.15050507 123.22102356]
[59.37548447 113.92860413]
[48.34508133 124.09375000]
[37.31467819 134.25889587]
[26.33626175 144.48016357]
[15.41011429 154.75729370]
[4.48396730 165.03442383]
[-2.91081214 180.29067993]
[-19.61793327 177.40824890]
[-21.47313690 160.55610657]
[-5.79315805 154.10827637]
[5.13298845 143.83114624]
[16.05913544 133.55401611]
[18.76449013 126.71772766]
[27.14953232 123.22850037]
[38.17993546 113.06334686]
[49.21033859 102.89820099]
[62.02609634 95.05349731]
[75.55671692 92.00640106]
[63.27919769 83.38883209]
[51.00167465 74.77126312]
[38.72415161 66.15370178]
[26.44663048 57.53613281]
[8.04950333 56.31306076]
[1.32282197 40.08097458]
[-11.04195881 31.58908463]
[-23.40674019 23.09719467]
[-35.77151871 14.60530376]
[-48.13630295 6.11341381]
[-60.50108337 -2.37847614]
[-76.25711060 -3.81311107]
[-82.36814880 -17.39635277]
[-94.73293304 -25.88824272]
[-107.49945831 -24.30237770]
[-117.61303711 -31.58796883]
[-119.99308777 -43.41529465]
[-132.27061462 -52.03285980]
[-144.54812622 -60.65042496]
[-156.82565308 -69.26799011]
[-169.10317993 -77.88555908]
[-181.38069153 -86.50312805]
[-187.00654602 -81.22982025]
[-193.80046082 -77.19648743]
[-201.48440552 -74.66230011]
[-209.72302246 -73.82311249]
[-218.13809204 -74.79884338]
[-226.32603455 -77.62423706]
[-233.87716675 -82.24363708]
[-240.39604187 -88.51012421]
[-245.52188110 -96.18930054]
[-248.94790649 -104.96762848]
[-250.43873596 -114.46499634]
[-264.26748657 -120.27584839]
[-278.09622192 -126.08670044]
[-291.92495728 -131.89755249]
[-305.75369263 -137.70840454]
[-319.58242798 -143.51925659]
[-333.41116333 -149.33010864]
[-347.26934814 -155.07035828]
[-361.15664673 -160.73986816]
[-375.04394531 -166.40936279]
[-388.93121338 -172.07887268]
[-404.21905518 -167.21455383]
[-417.47329712 -176.25361633]
[-418.52642822 -192.26206970]
[-406.57055664 -202.95959473]
[-390.77722168 -200.13995361]
[-383.26171875 -185.96615601]
[-369.37442017 -180.29666138]
[-355.48715210 -174.62715149]
[-341.59985352 -168.95765686]
[-334.25750732 -169.33666992]
[-327.60031128 -163.15884399]
[-313.77157593 -157.34799194]
[-299.94284058 -151.53713989]
[-286.11410522 -145.72628784]
[-272.28536987 -139.91543579]
[-258.45663452 -134.10458374]
[-244.62788391 -128.29373169]
[-239.54531860 -133.80892944]
[-250.57571411 -143.97407532]
[-261.60610962 -154.13922119]
[-272.63653564 -164.30436707]
[-286.26824951 -170.56344604]
[-284.52792358 -185.46214294]
[-269.82064819 -188.41093445]
[-262.47137451 -175.33477783]
[-251.44097900 -165.16963196]
[-240.41056824 -155.00448608]
[-229.38017273 -144.83934021]
[-224.29759216 -150.35453796]
[-231.21627808 -163.66362000]
[-238.13496399 -176.97270203]
[-245.05366516 -190.28179932]
[-251.97235107 -203.59088135]
[-267.33709717 -205.75988770]
[-278.46908569 -216.56999207]
[-281.08786011 -231.86448669]
[-274.18643188 -245.76232910]
[-260.41857910 -252.91950989]
[-245.07826233 -250.58396912]
[-234.06419373 -239.65373230]
[-231.61148071 -224.33172607]
[-238.66326904 -210.50956726]
[-231.74456787 -197.20048523]
[-224.82588196 -183.89140320]
[-217.90719604 -170.58230591]
[-210.98851013 -157.27322388]
[-182.64086914 -147.67602539]
[-168.45050049 -123.88693237]
[-172.76312256 -98.78064728]
[-160.48561096 -90.16307831]
[-148.20808411 -81.54551697]
[-135.93055725 -72.92794800]
[-123.65303802 -64.31037903]
[-111.37551880 -55.69281387]
[-93.81613922 -55.06278610]
[-86.24104309 -38.25302124]
[-73.87625885 -29.76113319]
[-59.00464630 -28.93389511]
[-52.00919342 -14.74325657]
[-39.64440918 -6.25136709]
[-27.27963066 2.24052310]
[-14.91484928 10.73241329]
[-2.55006886 19.22430229]
[9.81471157 27.71619225]
[21.72806168 25.81295395]
[32.08863068 32.74281311]
[35.06419754 45.25860977]
[47.34172058 53.87617874]
[59.61923981 62.49374390]
[71.89675903 71.11131287]
[84.17428589 79.72887421]
[108.98722076 75.90432739]
[125.23503876 95.04374695]
[140.15707397 96.57109070]
[155.07911682 98.09843445]
[170.00115967 99.62577820]
[184.92318726 101.15312958]
[199.84523010 102.68047333]
[214.77485657 104.13169098]
[229.71170044 105.50675964]
[244.64854431 106.88182068]
[259.58538818 108.25688171]
[274.55242920 109.25065613]
[289.53994751 109.86248016]
[304.52746582 110.47431183]
[319.51498413 111.08614349]
[333.61926270 103.91816711]
[346.02035522 112.16815948]
[361.00787354 112.77998352]
[375.99539185 113.39181519]
[391.43170166 93.19210815]
[416.34301758 89.27931976]
[436.89053345 103.53929901]
[450.89056396 98.15425873]
[464.89062500 92.76921844]
[478.89065552 87.38417816]
[492.89071655 81.99913788]
[506.86309814 76.54277039]
[520.80749512 71.01521301]
[534.75189209 65.48765564]
[548.69628906 59.96009445]
[562.64068604 54.43253708]
[576.58508301 48.90497971]
[590.52947998 43.37742233]
[597.19781494 27.17844009]
[613.21246338 20.96074677]
[628.45184326 28.12829399]
[642.33911133 22.45879364]
[656.22644043 16.78929329]
[670.11370850 11.11979198]
[684.00097656 5.45029163]
[697.88830566 -0.21920867]
[711.77557373 -5.88870907]
[725.66284180 -11.55820942]
[739.55017090 -17.22771072]
[744.15588379 -32.17165375]
[757.31781006 -40.61541748]
[772.82135010 -38.57211304]
[783.34613037 -27.00652885]
[783.92272949 -11.37957859]
[774.27880859 0.93016887]
[758.96807861 4.11042786]
[745.21966553 -3.34042239]
[731.33233643 2.32907820]
[717.44506836 7.99857855]
[703.55780029 13.66807938]
[689.67047119 19.33757973]
[675.78320312 25.00708008]
[661.89593506 30.67658043]
[648.00860596 36.34608078]
[634.12133789 42.01558304]
[630.85522461 54.44924164]
[620.88543701 62.86941528]
[607.69354248 64.04338837]
[596.05700684 57.32181549]
[582.11260986 62.84937286]
[568.16827393 68.37693024]
[554.22387695 73.90448761]
[540.27947998 79.43204498]
[526.33508301 84.95960236]
[512.39068604 90.48715973]
[507.35650635 95.84542084]
[498.27575684 95.99918365]
[484.27569580 101.38423157]
[470.27566528 106.76927185]
[456.27560425 112.15431213]
[442.27557373 117.53935242]
[442.49743652 124.97932434]
[441.06970215 132.28439331]
[454.00875854 139.87254333]
[466.98638916 147.39462280]
[480.00219727 154.85041809]
[493.01800537 162.30619812]
[508.83853149 162.45179749]
[516.03637695 175.49174500]
[529.05218506 182.94752502]
[542.06799316 190.40332031]
[555.08380127 197.85910034]
[568.09960938 205.31489563]
[581.11541748 212.77069092]
[596.29962158 208.38700867]
[610.09558105 216.09713745]
[614.31848145 231.32679749]
[606.46295166 245.04051208]
[591.18945312 249.10215759]
[577.55957031 241.10203552]
[573.65966797 225.78649902]
[560.64385986 218.33070374]
[547.62805176 210.87490845]
[534.61224365 203.41912842]
[521.59643555 195.96333313]
[508.58059692 188.50753784]
[493.69104004 188.89523315]
[485.56219482 175.32200623]
[472.54638672 167.86622620]
[459.53057861 160.41043091]
[452.20257568 159.81538391]
[446.42062378 152.81163025]
[433.48153687 145.22346497]
[428.46182251 149.67390442]
[422.64312744 153.04284668]
[416.25567627 155.19003296]
[409.55349731 156.02371216]
[402.80453491 155.50451660]
[396.27972412 153.64724731]
[390.24221802 150.52055359]
[384.93673706 146.24441528]
[380.57971191 140.98551941]
[377.35040283 134.95082092]
[375.38354492 128.37933350]
[360.39602661 127.76750183]
[345.40850830 127.15567780]
[332.37625122 134.36740112]
[318.90313721 126.07365417]
[303.91561890 125.46183014]
[288.92813110 124.84999847]
[273.94061279 124.23817444]
[282.27871704 136.70715332]
[277.82897949 151.03195190]
[263.89352417 156.58204651]
[250.81396484 149.23869324]
[248.29669189 134.45141602]
[258.21032715 123.19372559]
[243.27348328 121.81866455]
[228.33663940 120.44359589]
[213.39979553 119.06853485]
[206.48681641 121.57142639]
[198.31788635 117.60250854]
[183.39584351 116.07516479]
[168.47381592 114.54782104]
[153.55177307 113.02047729]
[138.62973022 111.49313354]
[123.70769501 109.96578217]
[128.15315247 119.24472046]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[6 10]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[33 48]
[34 47]
[35 46]
[36 44]
[37 43]
[38 42]
[50 164]
[51 163]
[52 162]
[53 161]
[54 160]
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[61 152]
[63 150]
[64 149]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[83 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[90 102]
[91 101]
[92 100]
[93 99]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
[166 306]
[167 305]
[168 304]
[169 303]
[170 302]
[171 301]
[172 299]
[173 298]
[174 297]
[175 296]
[176 290]
[177 289]
[178 288]
[179 287]
[181 285]
[182 284]
[183 283]
[186 240]
[187 239]
[188 238]
[189 237]
[190 236]
[191 234]
[192 233]
[193 232]
[194 231]
[195 230]
[196 229]
[197 228]
[200 224]
[201 223]
[202 222]
[203 221]
[204 220]
[205 219]
[206 218]
[207 217]
[208 216]
[242 272]
[243 271]
[244 269]
[245 268]
[246 267]
[248 265]
[249 264]
[250 263]
[251 262]
[252 261]
[253 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
