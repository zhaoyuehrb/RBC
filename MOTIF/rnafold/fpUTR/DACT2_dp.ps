%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DACT2)
} def

/sequence { (\
CUGCGGAGCCGGGGGCGGAGAGAGGAGGCGCAGGAGGACCCGCGACACAGCUCGGGAUCCGCGCGCGCUGGGCCUCCGGCGCCGCUCGUGGGGUUCGGGAGGCCGGGACCCUGCCCGGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.021437045 ubox
1 12 0.007828559 ubox
1 14 0.018285181 ubox
1 18 0.006804629 ubox
1 20 0.004064163 ubox
1 99 0.004628315 ubox
1 101 0.007542755 ubox
1 118 0.089096481 ubox
1 119 0.088003912 ubox
1 121 0.050942301 ubox
2 7 0.021642431 ubox
2 11 0.007824184 ubox
2 13 0.018315740 ubox
2 17 0.006842726 ubox
2 19 0.004073852 ubox
2 88 0.003242637 ubox
2 98 0.004216000 ubox
2 100 0.007461419 ubox
2 117 0.085213841 ubox
2 118 0.082750378 ubox
2 120 0.051486980 ubox
3 9 0.004324038 ubox
3 10 0.007206946 ubox
3 16 0.006880291 ubox
3 85 0.972156626 ubox
3 87 0.007403802 ubox
3 116 0.024193487 ubox
4 8 0.005625533 ubox
4 11 0.019072993 ubox
4 15 0.006877957 ubox
4 17 0.003843645 ubox
4 84 0.992114688 ubox
4 97 0.010274542 ubox
4 117 0.080494409 ubox
5 10 0.018835000 ubox
5 83 0.992876880 ubox
5 96 0.010351470 ubox
5 115 0.011121585 ubox
5 116 0.081544656 ubox
6 82 0.991214305 ubox
6 95 0.010296741 ubox
6 96 0.003775118 ubox
6 114 0.009029263 ubox
6 115 0.081362882 ubox
7 94 0.010203609 ubox
7 95 0.003824100 ubox
8 16 0.035678149 ubox
8 80 0.991007516 ubox
8 94 0.003792437 ubox
8 114 0.010458954 ubox
9 15 0.035746074 ubox
9 18 0.073448143 ubox
9 79 0.992986733 ubox
9 91 0.007738017 ubox
9 92 0.007566616 ubox
9 93 0.003733841 ubox
9 113 0.009669087 ubox
9 118 0.070895464 ubox
9 119 0.037295064 ubox
10 14 0.035486765 ubox
10 17 0.073762880 ubox
10 78 0.992970766 ubox
10 90 0.011902159 ubox
10 91 0.006024500 ubox
10 92 0.003677761 ubox
10 117 0.071176365 ubox
10 118 0.037290636 ubox
11 16 0.073440027 ubox
11 77 0.992969145 ubox
11 89 0.013195705 ubox
11 116 0.070755655 ubox
12 76 0.992958250 ubox
12 115 0.070485677 ubox
12 116 0.023838707 ubox
13 75 0.992341097 ubox
13 87 0.059778670 ubox
13 114 0.033669750 ubox
13 115 0.021690844 ubox
13 116 0.031698202 ubox
14 74 0.992973107 ubox
14 83 0.003586276 ubox
14 86 0.060577527 ubox
14 87 0.003832833 ubox
14 114 0.016910665 ubox
14 115 0.033494827 ubox
15 62 0.005340255 ubox
15 73 0.992972206 ubox
15 82 0.003589756 ubox
15 85 0.060847915 ubox
15 89 0.007660112 ubox
15 114 0.035164243 ubox
16 61 0.005367347 ubox
16 70 0.007823452 ubox
16 72 0.992625763 ubox
16 81 0.003590167 ubox
16 84 0.060850626 ubox
16 88 0.007989228 ubox
16 113 0.036730339 ubox
16 117 0.018059618 ubox
17 60 0.006958601 ubox
17 69 0.025879514 ubox
17 80 0.003584635 ubox
17 83 0.060086258 ubox
17 87 0.007003226 ubox
17 112 0.019233291 ubox
17 116 0.018385636 ubox
18 59 0.006962042 ubox
18 68 0.027208992 ubox
18 82 0.059781938 ubox
18 86 0.004012942 ubox
18 87 0.003749765 ubox
18 111 0.012310972 ubox
18 115 0.018343284 ubox
19 58 0.006934321 ubox
19 69 0.189291826 ubox
19 86 0.003867261 ubox
20 68 0.193710605 ubox
20 85 0.003643399 ubox
20 87 0.012792579 ubox
21 69 0.411644515 ubox
21 86 0.012611873 ubox
22 53 0.006665536 ubox
22 68 0.412431889 ubox
22 85 0.012043481 ubox
22 87 0.097929272 ubox
23 52 0.006666623 ubox
23 69 0.491418601 ubox
23 86 0.097877971 ubox
24 51 0.006660557 ubox
24 68 0.494618498 ubox
24 69 0.257802284 ubox
24 77 0.059629794 ubox
24 85 0.096781354 ubox
24 86 0.017069977 ubox
24 87 0.007071196 ubox
25 68 0.260652848 ubox
25 76 0.059649682 ubox
25 85 0.022843112 ubox
25 86 0.004830272 ubox
25 87 0.004516217 ubox
26 69 0.276508161 ubox
26 75 0.059641748 ubox
26 86 0.004359473 ubox
27 68 0.276763780 ubox
27 69 0.603763097 ubox
27 74 0.059649725 ubox
27 83 0.101456660 ubox
28 62 0.003286358 ubox
28 64 0.660172908 ubox
28 66 0.420725882 ubox
28 68 0.609459773 ubox
28 73 0.059642174 ubox
28 82 0.101689159 ubox
29 44 0.008742808 ubox
29 61 0.003285214 ubox
29 63 0.660346754 ubox
29 65 0.421092898 ubox
29 67 0.610373242 ubox
29 72 0.059633353 ubox
29 81 0.101786623 ubox
30 43 0.008828525 ubox
30 62 0.660337886 ubox
30 64 0.421113899 ubox
30 66 0.610339038 ubox
30 80 0.101785397 ubox
31 42 0.008815559 ubox
31 61 0.658558735 ubox
31 63 0.420638515 ubox
31 65 0.609451314 ubox
31 70 0.059605084 ubox
31 79 0.101400912 ubox
32 69 0.059529316 ubox
33 40 0.007808903 ubox
33 41 0.005627798 ubox
33 59 0.013493900 ubox
33 60 0.649301987 ubox
33 68 0.059077410 ubox
33 77 0.101402771 ubox
34 39 0.007771703 ubox
34 40 0.005623420 ubox
34 58 0.011594514 ubox
34 59 0.649504370 ubox
34 76 0.101788412 ubox
35 58 0.644886659 ubox
35 75 0.101774426 ubox
36 59 0.011733976 ubox
36 60 0.752822096 ubox
36 74 0.101788114 ubox
37 58 0.017703314 ubox
37 59 0.753156972 ubox
37 73 0.101745578 ubox
38 58 0.749892466 ubox
39 55 0.260860788 ubox
39 56 0.928266096 ubox
39 71 0.013343352 ubox
39 72 0.100883737 ubox
40 54 0.260356003 ubox
40 55 0.929367459 ubox
40 56 0.236393462 ubox
40 70 0.013437880 ubox
40 71 0.100891801 ubox
41 54 0.925298444 ubox
41 55 0.236714811 ubox
41 67 0.003346232 ubox
41 70 0.100820398 ubox
42 51 0.830715052 ubox
42 53 0.474903298 ubox
42 66 0.004931199 ubox
42 68 0.098741377 ubox
42 69 0.023438600 ubox
43 50 0.903551491 ubox
43 54 0.234466781 ubox
43 65 0.004955039 ubox
43 67 0.100971857 ubox
44 53 0.245153645 ubox
44 66 0.097973390 ubox
45 52 0.233319600 ubox
48 70 0.004825588 ubox
49 69 0.005066498 ubox
50 62 0.018007841 ubox
50 64 0.099440806 ubox
50 66 0.004329544 ubox
50 68 0.005141645 ubox
51 61 0.017070676 ubox
51 63 0.099836283 ubox
51 65 0.004679249 ubox
51 67 0.005138422 ubox
53 61 0.100237507 ubox
53 63 0.004300135 ubox
53 65 0.005032662 ubox
54 60 0.101088795 ubox
54 62 0.004309170 ubox
54 64 0.005019386 ubox
55 59 0.099465430 ubox
61 66 0.003867384 ubox
61 68 0.009043486 ubox
62 67 0.009794436 ubox
63 85 0.003533318 ubox
64 84 0.003538319 ubox
65 73 0.003346307 ubox
65 82 0.005080809 ubox
66 72 0.003410985 ubox
66 81 0.006286977 ubox
67 80 0.006383496 ubox
68 79 0.006383764 ubox
69 78 0.006378757 ubox
70 77 0.006382261 ubox
71 76 0.006360898 ubox
82 118 0.011601610 ubox
83 117 0.011684129 ubox
84 116 0.011861142 ubox
85 101 0.008027904 ubox
85 118 0.032933303 ubox
85 119 0.179824673 ubox
85 121 0.058727132 ubox
86 98 0.003182985 ubox
86 100 0.014280312 ubox
86 117 0.055777271 ubox
86 118 0.338792292 ubox
86 119 0.134610854 ubox
86 120 0.236405967 ubox
87 97 0.003654886 ubox
87 99 0.014785401 ubox
87 113 0.009613178 ubox
87 117 0.384861387 ubox
87 118 0.160751823 ubox
87 119 0.246977958 ubox
88 96 0.003651828 ubox
88 112 0.006973157 ubox
88 114 0.940051263 ubox
88 116 0.294453786 ubox
89 97 0.014695261 ubox
89 113 0.952335656 ubox
89 117 0.122592219 ubox
90 96 0.014730594 ubox
90 111 0.025533608 ubox
90 112 0.987412233 ubox
90 115 0.037665994 ubox
90 116 0.112343309 ubox
91 95 0.009544337 ubox
91 110 0.025988502 ubox
91 111 0.994642300 ubox
91 112 0.003584684 ubox
91 114 0.027057660 ubox
91 115 0.092619884 ubox
91 116 0.007819412 ubox
92 109 0.025923045 ubox
92 110 0.997094374 ubox
92 111 0.009285077 ubox
92 114 0.067004712 ubox
92 115 0.009384785 ubox
93 109 0.999094285 ubox
93 110 0.010599560 ubox
93 111 0.005063272 ubox
93 114 0.010713056 ubox
94 107 0.247372281 ubox
94 108 0.966951608 ubox
94 113 0.011647173 ubox
94 119 0.004297374 ubox
95 106 0.446319946 ubox
95 107 0.890431065 ubox
95 108 0.006296136 ubox
95 118 0.005472846 ubox
96 105 0.584163830 ubox
96 106 0.809208586 ubox
96 107 0.007616573 ubox
96 113 0.008698576 ubox
96 117 0.005944985 ubox
97 104 0.691780571 ubox
97 110 0.004100821 ubox
97 111 0.015769115 ubox
97 112 0.008658582 ubox
97 116 0.005971456 ubox
98 103 0.691796511 ubox
98 104 0.718877366 ubox
98 109 0.004108203 ubox
98 110 0.015787751 ubox
98 111 0.008679291 ubox
98 115 0.005966772 ubox
99 103 0.707613500 ubox
99 109 0.015738485 ubox
99 110 0.008522540 ubox
99 114 0.005957740 ubox
100 112 0.005765582 ubox
101 111 0.005759024 ubox
102 110 0.005703417 ubox
103 118 0.019024498 ubox
104 117 0.019098556 ubox
105 116 0.019120203 ubox
106 115 0.019120525 ubox
107 114 0.019067893 ubox
3 85 0.9500000 lbox
4 84 0.9500000 lbox
5 83 0.9500000 lbox
6 82 0.9500000 lbox
8 80 0.9500000 lbox
9 79 0.9500000 lbox
10 78 0.9500000 lbox
11 77 0.9500000 lbox
12 76 0.9500000 lbox
13 75 0.9500000 lbox
14 74 0.9500000 lbox
15 73 0.9500000 lbox
16 72 0.9500000 lbox
27 69 0.9500000 lbox
28 68 0.9500000 lbox
29 67 0.9500000 lbox
30 66 0.9500000 lbox
31 65 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
41 54 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
88 114 0.9500000 lbox
89 113 0.9500000 lbox
90 112 0.9500000 lbox
91 111 0.9500000 lbox
92 110 0.9500000 lbox
93 109 0.9500000 lbox
94 108 0.9500000 lbox
95 107 0.9500000 lbox
96 106 0.9500000 lbox
98 104 0.9500000 lbox
99 103 0.9500000 lbox
showpage
end
%%EOF
