%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGAACCCGCGGUCGCCACCGCGGCGGCGGCCCCAGGCUGGAGGCGUCCGGGCGCCUCUUUCCUCCAGCCUCUGGGACUGCGCUGCUCGCAGUCUCCUCGCCCUGCCUGGGCUUGAGAAACCUAGUGCAUACCCCAAAGAGGGUUUUUGUGUAUGUGUGUGUUUUUAAAGGGUGGCUAUGAUGACUGGGCCUUGGAGAUGUGAGACUGGGAGGUAAA\
) } def
/len { sequence length } bind def

/coor [
[113.35180664 198.88905334]
[111.85490417 183.96392822]
[110.35800171 169.03880310]
[108.86109924 154.11367798]
[107.36420441 139.18855286]
[100.01358032 137.69912720]
[90.08322144 148.94136047]
[85.31234741 134.72027588]
[77.96172333 133.23085022]
[70.77298737 146.39602661]
[63.58425522 159.56121826]
[56.39551926 172.72639465]
[49.20678711 185.89158630]
[42.01805115 199.05676270]
[34.82931519 212.22195435]
[35.76029968 228.59465027]
[21.90010643 237.35975647]
[7.50691938 229.50048828]
[7.38721323 213.10177612]
[21.66413116 205.03321838]
[28.85286713 191.86802673]
[36.04160309 178.70285034]
[43.23033524 165.53765869]
[50.41907120 152.37248230]
[57.60780716 139.20729065]
[64.79653931 126.04210663]
[64.73006439 118.93404388]
[65.90709686 112.38464355]
[68.16106415 106.59349823]
[53.16718292 106.16515350]
[38.17329788 105.73681641]
[23.17941666 105.30847168]
[8.18285751 104.98719788]
[-6.81561279 104.77300262]
[-21.81408310 104.55881500]
[-37.68246841 113.90702057]
[-52.38951492 104.32741547]
[-67.38951874 104.32741547]
[-82.38951874 104.32741547]
[-97.38951874 104.32741547]
[-112.38951874 104.32741547]
[-127.38951874 104.32741547]
[-142.38951111 104.32741547]
[-157.38951111 104.32741547]
[-172.37078857 105.07679749]
[-187.29591370 106.57369995]
[-202.22102356 108.07060242]
[-217.14614868 109.56749725]
[-232.07127380 111.06439972]
[-245.06098938 121.07436371]
[-260.11962891 114.58056641]
[-261.75616455 98.26328278]
[-248.28704834 88.90832520]
[-233.56817627 96.13928223]
[-218.64305115 94.64237976]
[-203.71792603 93.14547729]
[-188.79280090 91.64857483]
[-173.86769104 90.15167236]
[-185.56634521 80.76331329]
[-188.61141968 66.07564545]
[-181.60939026 52.81021881]
[-167.76460266 47.03770828]
[-153.41287231 51.39979553]
[-145.12200928 63.90025330]
[-146.68615723 78.81847382]
[-157.38951111 89.32741547]
[-142.38951111 89.32741547]
[-127.38951874 89.32741547]
[-112.38951874 89.32741547]
[-97.38951874 89.32741547]
[-82.38951874 89.32741547]
[-67.38951874 89.32741547]
[-52.38951492 89.32741547]
[-43.62094116 81.00048065]
[-31.12849617 80.87378693]
[-21.59989166 89.56034088]
[-6.60142040 89.77453613]
[8.39704990 89.98872375]
[15.12556267 86.94326019]
[23.60775757 90.31459045]
[38.60163879 90.74292755]
[53.59552383 91.17127228]
[68.58940887 91.59960938]
[74.88215637 79.35330963]
[85.67892456 70.80927277]
[99.04367065 67.49958038]
[112.57991028 70.01770782]
[123.86037445 77.91212463]
[136.92156982 70.53612518]
[149.98275757 63.16013336]
[163.04394531 55.78414154]
[176.10514832 48.40814590]
[189.16633606 41.03215408]
[195.09497070 34.09207916]
[202.46711731 33.64561081]
[215.63229370 26.45687485]
[228.79748535 19.26813889]
[241.96266174 12.07940483]
[255.12785339 4.89067030]
[259.75076294 -11.98413563]
[274.85202026 -20.13111496]
[290.85067749 -14.93666172]
[303.91186523 -22.31265450]
[316.97305298 -29.68864822]
[330.03424072 -37.06464386]
[336.57611084 -47.20353699]
[347.26193237 -48.31082535]
[359.27005005 -57.29998779]
[371.27816772 -66.28915405]
[370.05609131 -80.01480865]
[375.72906494 -92.45399475]
[386.71875000 -100.40352631]
[400.09338379 -101.87457275]
[412.34942627 -96.58934021]
[424.48468018 -105.40612030]
[436.61993408 -114.22289276]
[443.23663330 -128.59403992]
[458.08108521 -129.81533813]
[470.21633911 -138.63211060]
[482.35159302 -147.44889832]
[494.48684692 -156.26567078]
[506.62210083 -165.08245850]
[518.75732422 -173.89923096]
[517.94927979 -193.02908325]
[528.75537109 -208.65274048]
[546.65454102 -214.55210876]
[564.34814453 -208.51246643]
[576.09466553 -217.84086609]
[587.84118652 -227.16926575]
[599.58770752 -236.49768066]
[611.33422852 -245.82608032]
[623.08081055 -255.15447998]
[634.55615234 -264.81451416]
[645.75097656 -274.79830933]
[656.94580078 -284.78207397]
[668.14062500 -294.76586914]
[668.79254150 -310.55670166]
[680.47570801 -321.19995117]
[696.25878906 -320.38110352]
[706.77789307 -308.58602905]
[705.79223633 -292.81250000]
[693.88659668 -282.41870117]
[678.12438965 -283.57104492]
[666.92956543 -273.58728027]
[655.73474121 -263.60348511]
[644.53991699 -253.61968994]
[644.24237061 -250.83863831]
[642.82904053 -248.00738525]
[640.27502441 -245.55020142]
[636.70904541 -243.89253235]
[632.40917969 -243.40795898]
[620.66265869 -234.07955933]
[608.91613770 -224.75114441]
[597.16961670 -215.42274475]
[585.42309570 -206.09434509]
[573.67657471 -196.76594543]
[576.24926758 -185.92237854]
[574.58514404 -174.85089111]
[568.88647461 -165.15431213]
[559.94238281 -158.25086975]
[549.01971436 -155.16673279]
[537.68383789 -156.38360596]
[527.57415771 -161.76397705]
[515.43890381 -152.94718933]
[503.30361938 -144.13041687]
[491.16836548 -135.31364441]
[479.03311157 -126.49685669]
[466.89785767 -117.68008423]
[461.14913940 -103.93957520]
[445.43670654 -102.08763885]
[433.30145264 -93.27085876]
[421.16619873 -84.45408630]
[421.69064331 -68.04364777]
[412.23355103 -54.41913605]
[396.36083984 -49.06538773]
[380.26733398 -54.28103638]
[368.25921631 -45.29187012]
[356.25109863 -36.30270767]
[371.22909546 -35.49023438]
[383.96963501 -27.57324219]
[391.33114624 -14.50389385]
[391.49847412 0.49517241]
[384.43032837 13.72549438]
[371.86959839 21.92474365]
[356.91348267 23.07115173]
[343.24984741 16.88204002]
[334.24786377 4.88351488]
[332.12725830 -9.96583080]
[337.41024780 -24.00345230]
[324.34906006 -16.62745857]
[311.28787231 -9.25146389]
[298.22665405 -1.87547016]
[296.54562378 10.89575005]
[287.68499756 20.51183701]
[274.71331787 23.31210709]
[262.31658936 18.05585480]
[249.15139771 25.24458885]
[235.98622131 32.43332291]
[222.82102966 39.62205887]
[209.65585327 46.81079483]
[196.54232788 54.09334564]
[183.48114014 61.46933746]
[170.41993713 68.84532928]
[157.35874939 76.22132874]
[144.29756165 83.59732056]
[131.23637390 90.97331238]
[135.46235657 114.07040405]
[122.28932190 137.69165039]
[123.78622437 152.61677551]
[125.28312683 167.54190063]
[126.78002930 182.46702576]
[128.27693176 197.39215088]
[141.74540710 205.09796143]
[148.08155823 219.26246643]
[144.84898376 234.43908691]
[133.29069519 244.79212952]
[117.85108185 246.34063721]
[104.46698761 238.48916626]
[98.28487396 224.25677490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 212]
[2 211]
[3 210]
[4 209]
[5 208]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[29 83]
[30 82]
[31 81]
[32 80]
[33 78]
[34 77]
[35 76]
[37 73]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[88 206]
[89 205]
[90 204]
[91 203]
[92 202]
[93 201]
[95 200]
[96 199]
[97 198]
[98 197]
[99 196]
[102 192]
[103 191]
[104 190]
[105 189]
[107 178]
[108 177]
[109 176]
[114 172]
[115 171]
[116 170]
[118 168]
[119 167]
[120 166]
[121 165]
[122 164]
[123 163]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 146]
[134 145]
[135 144]
[136 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
