%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGCCUCUGUGGCCGUCCAGGCUAGCGGCGGCCCGCAGGCGGCGGGGAGAAAGACUCUCUCACCUGGUCUUGCGGCUGUGGCCACCGCCGGCCAGGGGUGUGGAGGGCGUGCUGCCGGAGACGUCCGCCGGGCUCUGCAGUUCCGCCGGGGGUCGGGCAGCU\
) } def
/len { sequence length } bind def

/coor [
[78.64817047 88.00915527]
[63.76289368 86.15749359]
[48.87762070 84.30583191]
[33.99234772 82.45417023]
[19.10707474 80.60250854]
[4.22180223 78.75085449]
[-10.66347122 76.89919281]
[-23.51927948 90.24806213]
[-44.67285156 88.73263550]
[-54.81547546 99.78375244]
[-64.95809937 110.83486938]
[-74.99505615 121.98204041]
[-84.92543793 133.22425842]
[-94.85582733 144.46647644]
[-104.78620911 155.70869446]
[-114.71659851 166.95091248]
[-115.16359711 182.98773193]
[-128.06654358 192.52154541]
[-143.52738953 188.23883057]
[-149.68591309 173.42491150]
[-141.81779480 159.44375610]
[-125.95881653 157.02052307]
[-116.02842712 145.77830505]
[-106.09804535 134.53608704]
[-96.16765594 123.29386902]
[-86.23727417 112.05165100]
[-84.15648651 104.92430115]
[-76.00921631 100.69224548]
[-65.86659241 89.64112854]
[-55.72396851 78.59001160]
[-57.85868835 63.74268723]
[-70.70392609 55.99672699]
[-83.54916382 48.25076294]
[-96.39439392 40.50480270]
[-109.23963165 32.75883865]
[-118.24919128 30.99356079]
[-122.25370026 24.74114227]
[-134.94912720 16.75202560]
[-147.64456177 8.76290989]
[-160.33999634 0.77379423]
[-173.03543091 -7.21532154]
[-185.88066101 -14.96128368]
[-198.87104797 -22.46128273]
[-211.86143494 -29.96128273]
[-226.95027161 -26.09288597]
[-240.01753235 -33.88400650]
[-243.61247253 -48.29275513]
[-256.60284424 -55.79275513]
[-269.59323120 -63.29275513]
[-282.58361816 -70.79275513]
[-295.57400513 -78.29275513]
[-308.56436157 -85.79275513]
[-324.37054443 -83.04608917]
[-336.27688599 -93.79871368]
[-335.14984131 -109.80213165]
[-321.85400391 -118.77989197]
[-306.58877563 -113.84502411]
[-301.06436157 -98.78313446]
[-288.07400513 -91.28313446]
[-275.08361816 -83.78313446]
[-262.09323120 -76.28313446]
[-249.10284424 -68.78313446]
[-236.11247253 -61.28313446]
[-221.83665466 -65.37419891]
[-208.55572510 -57.95318604]
[-204.36143494 -42.95166397]
[-191.37104797 -35.45166397]
[-178.38066101 -27.95166397]
[-173.57720947 -28.31497574]
[-168.50195312 -25.63316917]
[-165.04631042 -19.91075516]
[-152.35087585 -11.92163944]
[-139.65545654 -3.93252325]
[-126.96001434 4.05659246]
[-114.26457977 12.04570866]
[-101.49366760 19.91360474]
[-88.64843750 27.65956497]
[-75.80319977 35.40552902]
[-62.95796204 43.15148926]
[-50.11272812 50.89745331]
[-23.96069145 43.88260651]
[-8.81181049 62.01391983]
[6.07346249 63.86557770]
[20.95873642 65.71723938]
[35.84400940 67.56890106]
[50.72928238 69.42056274]
[65.61455536 71.27221680]
[80.49982452 73.12387848]
[94.31668091 67.28482819]
[103.36290741 55.31963348]
[112.40912628 43.35443878]
[110.43294525 27.90347099]
[119.77754974 15.89792919]
[134.51986694 14.10916042]
[143.56608582 2.14396596]
[152.61230469 -9.82122803]
[150.18963623 -25.43872452]
[159.58708191 -38.14554977]
[175.22932434 -40.40296936]
[187.83609009 -30.87169647]
[189.92799377 -15.20646572]
[180.26397705 -2.70118189]
[164.57749939 -0.77500701]
[155.53128052 11.19018745]
[146.48506165 23.15538216]
[148.78257751 37.82702255]
[139.77886963 50.09029770]
[124.37432098 52.40066147]
[115.32810211 64.36585236]
[106.28187561 76.33104706]
[115.43940735 83.25325012]
[119.85691071 92.96209717]
[119.15422058 102.79230499]
[131.99945068 110.53826904]
[144.84469604 118.28423309]
[157.68992615 126.03019714]
[170.53515625 133.77615356]
[183.38040161 141.52212524]
[193.82559204 138.28918457]
[204.10731506 141.30157471]
[210.87232971 149.32366943]
[212.05488586 159.52902222]
[224.59591675 167.75839233]
[237.13693237 175.98776245]
[252.91970825 177.08996582]
[259.31570435 190.54138184]
[271.85671997 198.77075195]
[284.39776611 207.00012207]
[296.93878174 215.22950745]
[312.72155762 216.33171082]
[319.11755371 229.78312683]
[331.65856934 238.01249695]
[344.19961548 246.24186707]
[356.74063110 254.47123718]
[369.35943604 262.58084106]
[382.05487061 270.56997681]
[398.45379639 270.65325928]
[406.34503174 285.02896118]
[397.61071777 298.90856934]
[381.23599243 298.01394653]
[374.06576538 283.26541138]
[361.37033081 275.27627563]
[354.00082397 274.37115479]
[348.51126099 267.01226807]
[335.97024536 258.78289795]
[323.42919922 250.55352783]
[310.88818359 242.32414246]
[296.00244141 241.81056213]
[288.70941162 227.77053833]
[276.16839600 219.54115295]
[263.62734985 211.31178284]
[251.08633423 203.08241272]
[236.20057678 202.56883240]
[228.90756226 188.52879333]
[216.36653137 180.29942322]
[203.82550049 172.07005310]
[184.51905823 172.42910767]
[175.63442993 154.36735535]
[162.78919983 146.62139893]
[149.94396973 138.87542725]
[137.09872437 131.12947083]
[124.25349426 123.38350677]
[111.40825653 115.63754272]
[94.30000305 120.28149414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[3 86]
[4 85]
[5 84]
[6 83]
[7 82]
[9 30]
[10 29]
[11 28]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[31 80]
[32 79]
[33 78]
[34 77]
[35 76]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 68]
[43 67]
[44 66]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[89 110]
[90 109]
[91 108]
[94 105]
[95 104]
[96 103]
[113 163]
[114 162]
[115 161]
[116 160]
[117 159]
[118 158]
[122 156]
[123 155]
[124 154]
[126 152]
[127 151]
[128 150]
[129 149]
[131 147]
[132 146]
[133 145]
[134 144]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
