%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCUCUUCUCGGCCACCUCCUGCAUAGAGGGUACCAUUCUGCGCUGCUGCAAGUUACGGAAUGAAAAAUUAGAACAACAGAAACAUGGUUCUCUUGACACUUCAGUGUUAGGGAACAUCAGCAAGACCCAUCCCAGGAGACCUUGAAGGAAGCCUUUGAAAGGGAGA\
) } def
/len { sequence length } bind def

/coor [
[168.29592896 532.34008789]
[169.78930664 527.25891113]
[166.24075317 512.68475342]
[162.69219971 498.11050415]
[159.14364624 483.53628540]
[155.59509277 468.96206665]
[150.93977356 463.18496704]
[152.11782837 454.08755493]
[148.83761597 439.45059204]
[145.55738831 424.81365967]
[142.27717590 410.17669678]
[129.59854126 402.44445801]
[126.06342316 387.64724731]
[134.25968933 374.40115356]
[130.97947693 359.76419067]
[122.74698639 356.26589966]
[116.97692871 349.25122070]
[115.07509613 340.22863770]
[117.59709930 331.21603394]
[124.09428406 324.28964233]
[121.62536621 309.49423218]
[119.15644836 294.69879150]
[116.68752289 279.90338135]
[114.21860504 265.10797119]
[111.74968719 250.31254578]
[103.72241211 246.36602783]
[98.34754181 239.04417419]
[96.94564056 229.93051147]
[99.96028900 221.07054138]
[106.82917023 214.51257324]
[105.17904663 199.60360718]
[103.39204407 184.71043396]
[101.46830750 169.83430481]
[99.54457092 154.95817566]
[97.62083435 140.08204651]
[68.96719360 132.19430542]
[50.94787979 104.72472382]
[55.92122269 69.07967377]
[41.77930450 64.07906342]
[27.63738251 59.07845688]
[13.49546242 54.07784653]
[-0.64645863 49.07723999]
[-14.78837967 44.07663345]
[-28.93029976 39.07602310]
[-46.93105698 42.87162018]
[-57.82904816 29.13727570]
[-72.06044769 24.39731026]
[-86.29184723 19.65734482]
[-100.31200409 26.95192337]
[-115.35843658 22.11661339]
[-122.50437927 8.02012253]
[-117.51026154 -6.97435427]
[-103.33900452 -13.97085857]
[-88.39817047 -8.81848907]
[-81.55187988 5.42594576]
[-67.32048035 10.16591072]
[-53.08908463 14.90587616]
[-42.10982513 9.77170944]
[-30.19844818 13.63332367]
[-23.92969131 24.93410301]
[-9.78777122 29.93471146]
[4.35414934 34.93531799]
[18.49607086 39.93592834]
[32.63798904 44.93653488]
[46.77991104 49.93714523]
[60.92183304 54.93775177]
[67.04564667 50.60775757]
[57.03236389 39.43931198]
[47.01908112 28.27086830]
[37.00579834 17.10242271]
[23.06068230 11.57669163]
[16.17084885 -1.74735510]
[19.72275352 -16.32075500]
[31.97058296 -24.98047066]
[46.89435196 -23.47012901]
[57.15880966 -12.53208160]
[57.71913528 2.45655036]
[64.91051483 15.62028885]
[72.10189819 28.78402710]
[79.29328156 41.94776535]
[85.41709900 37.61777115]
[85.41709900 22.61777115]
[74.06596375 11.62108040]
[73.89887238 -4.18232584]
[85.01495361 -15.41656590]
[100.81924438 -15.41656590]
[111.93533325 -4.18232584]
[111.76824188 11.62108040]
[100.41709900 22.61777115]
[100.41709900 37.61777115]
[114.46476746 42.87733459]
[124.31604767 31.56573486]
[134.16732788 20.25413513]
[144.01861572 8.94253635]
[147.31243896 0.38088682]
[154.15626526 -2.48423505]
[164.21368408 -13.61294842]
[174.27111816 -24.74166298]
[184.32853699 -35.87037659]
[194.38595581 -46.99908829]
[204.44337463 -58.12780380]
[214.50079346 -69.25651550]
[224.55821228 -80.38523102]
[227.46633911 -96.52446747]
[242.98686218 -101.82022095]
[255.15362549 -90.82468414]
[251.45050049 -74.84911346]
[235.68693542 -70.32781219]
[225.62951660 -59.19909668]
[215.57208252 -48.07038116]
[205.51466370 -36.94166946]
[195.45724487 -25.81295395]
[185.39982605 -14.68424129]
[175.34240723 -3.55552721]
[165.28498840 7.57318640]
[155.33021545 18.79381561]
[145.47892761 30.10541534]
[135.62765503 41.41701508]
[125.77636719 52.72861481]
[135.06343079 60.96134186]
[141.99266052 70.87474823]
[146.30076599 81.83808899]
[147.88494873 93.19200897]
[146.80149841 104.28775787]
[143.25518799 114.52413940]
[137.58030701 123.38006592]
[130.21495056 130.44104004]
[121.67031097 135.41806030]
[112.49696350 138.15830994]
[114.42070007 153.03443909]
[116.34443665 167.91056824]
[118.26817322 182.78669739]
[122.48669434 190.93257141]
[120.08800507 197.95347595]
[121.73812866 212.86244202]
[135.48890686 229.26582336]
[126.54510498 247.84362793]
[129.01402283 262.63903809]
[131.48294067 277.43447876]
[133.95185852 292.22988892]
[136.42077637 307.02529907]
[138.88970947 321.82070923]
[153.52322388 337.44171143]
[145.61642456 356.48397827]
[148.89663696 371.12094116]
[161.96209717 379.60214233]
[165.08020020 394.49282837]
[156.91412354 406.89648438]
[160.19433594 421.53344727]
[163.47456360 436.17037964]
[166.75477600 450.80734253]
[170.16931152 465.41351318]
[173.71786499 479.98773193]
[177.26641846 494.56195068]
[180.81497192 509.13616943]
[184.36352539 523.71038818]
[188.31231689 538.18127441]
[192.65835571 552.53790283]
[197.00437927 566.89447021]
[201.35040283 581.25109863]
[214.75930786 590.05908203]
[216.08972168 606.04687500]
[204.32106018 616.95001221]
[188.48123169 614.40454102]
[180.72120667 600.36309814]
[186.99380493 585.59710693]
[182.64778137 571.24053955]
[178.30174255 556.88391113]
[173.95571899 542.52734375]
[170.99739075 540.54351807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[8 151]
[9 150]
[10 149]
[11 148]
[14 145]
[15 144]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[25 137]
[30 135]
[31 134]
[32 132]
[33 131]
[34 130]
[35 129]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[46 57]
[47 56]
[48 55]
[81 90]
[82 89]
[91 119]
[92 118]
[93 117]
[94 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[157 169]
[158 168]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
