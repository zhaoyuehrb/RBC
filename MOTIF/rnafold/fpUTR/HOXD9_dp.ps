%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HOXD9)
} def

/sequence { (\
CGCGACCAAUGGUGGAGGCUGCAGCCUGCGAACUAGUCGGUGGCUCGGGCGCCGGCGGGGAGCUGCUCGGCGGCGGACAGUGUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.003218578 ubox
1 14 0.035465209 ubox
1 30 0.063058234 ubox
1 42 0.073580197 ubox
1 47 0.067823404 ubox
1 75 0.038957564 ubox
1 82 0.038892757 ubox
2 13 0.039793652 ubox
2 19 0.045857241 ubox
2 22 0.005856251 ubox
2 29 0.064242024 ubox
2 41 0.071851261 ubox
2 44 0.985498786 ubox
2 46 0.029005551 ubox
2 74 0.038302249 ubox
2 81 0.030179971 ubox
2 83 0.020585217 ubox
3 11 0.004103875 ubox
3 12 0.040382216 ubox
3 14 0.006995285 ubox
3 18 0.047399733 ubox
3 21 0.005861053 ubox
3 28 0.064179432 ubox
3 30 0.004358739 ubox
3 39 0.076550490 ubox
3 40 0.051472496 ubox
3 42 0.013947263 ubox
3 43 0.987255876 ubox
3 47 0.020951282 ubox
3 73 0.038193657 ubox
3 75 0.003928684 ubox
3 80 0.030149804 ubox
3 82 0.021204590 ubox
4 13 0.004962590 ubox
4 20 0.005629024 ubox
4 27 0.019762102 ubox
4 29 0.003854971 ubox
4 38 0.092228898 ubox
4 41 0.008746863 ubox
4 46 0.021535515 ubox
4 74 0.003789897 ubox
4 81 0.010456448 ubox
5 13 0.064210935 ubox
5 37 0.092325051 ubox
5 41 0.985094201 ubox
5 45 0.021182439 ubox
5 81 0.003632930 ubox
5 83 0.003672623 ubox
6 12 0.067366539 ubox
6 15 0.081886169 ubox
6 18 0.008239025 ubox
6 36 0.092147932 ubox
6 40 0.987876960 ubox
6 43 0.021034683 ubox
6 70 0.003339384 ubox
6 73 0.003249863 ubox
6 76 0.010240089 ubox
6 80 0.004198243 ubox
6 82 0.003705811 ubox
7 11 0.066908031 ubox
7 14 0.082131478 ubox
7 17 0.008270193 ubox
7 39 0.986236205 ubox
7 42 0.021040223 ubox
7 69 0.003333824 ubox
7 72 0.003259148 ubox
7 75 0.010222961 ubox
8 13 0.071465405 ubox
8 41 0.020092951 ubox
9 37 0.332154666 ubox
9 83 0.006533721 ubox
10 35 0.945312248 ubox
10 36 0.235144908 ubox
10 39 0.015094388 ubox
10 82 0.006674808 ubox
11 20 0.004446713 ubox
11 34 0.963740471 ubox
11 38 0.018467601 ubox
11 81 0.006687569 ubox
12 19 0.004638248 ubox
12 29 0.006468955 ubox
12 33 0.969991811 ubox
12 37 0.017563672 ubox
13 18 0.004601906 ubox
13 28 0.006393685 ubox
13 30 0.435757949 ubox
13 32 0.845318713 ubox
13 35 0.011177904 ubox
13 36 0.003664368 ubox
13 79 0.007159398 ubox
14 29 0.901161741 ubox
14 34 0.011213118 ubox
14 78 0.007321339 ubox
15 33 0.011242145 ubox
16 27 0.992966054 ubox
16 34 0.005357721 ubox
17 26 0.997024012 ubox
17 27 0.003210798 ubox
17 33 0.005520674 ubox
18 25 0.997014925 ubox
18 29 0.024649223 ubox
18 44 0.003973532 ubox
18 50 0.034031032 ubox
18 71 0.003713350 ubox
18 74 0.007734440 ubox
18 81 0.006742291 ubox
19 24 0.993776956 ubox
19 28 0.024653071 ubox
19 43 0.004409485 ubox
19 48 0.040445289 ubox
19 49 0.034964795 ubox
19 70 0.003717483 ubox
19 73 0.007729929 ubox
19 76 0.004532189 ubox
19 80 0.007003481 ubox
20 30 0.020222379 ubox
20 42 0.004341276 ubox
20 47 0.045438071 ubox
20 48 0.035003044 ubox
20 69 0.003696209 ubox
20 72 0.007694412 ubox
20 75 0.005783591 ubox
20 79 0.007232634 ubox
20 84 0.005834784 ubox
21 29 0.024702609 ubox
21 44 0.019028404 ubox
21 46 0.047999673 ubox
21 50 0.005480594 ubox
21 68 0.003571322 ubox
21 71 0.007676053 ubox
21 74 0.006347412 ubox
21 78 0.007191049 ubox
21 81 0.003770303 ubox
21 83 0.007409515 ubox
22 28 0.024706991 ubox
22 43 0.018963170 ubox
22 49 0.005742849 ubox
22 70 0.007653690 ubox
22 73 0.006337218 ubox
22 80 0.003845497 ubox
22 82 0.007498009 ubox
23 27 0.020024093 ubox
23 45 0.062479224 ubox
23 67 0.007845244 ubox
23 81 0.005582268 ubox
24 41 0.018829512 ubox
24 44 0.063755019 ubox
24 50 0.007031824 ubox
24 66 0.008355324 ubox
24 71 0.003214994 ubox
25 40 0.019808344 ubox
25 43 0.063751944 ubox
25 49 0.007380801 ubox
25 65 0.008352460 ubox
25 70 0.003227289 ubox
26 39 0.019797256 ubox
26 42 0.063640160 ubox
26 48 0.007378590 ubox
26 69 0.003224745 ubox
27 47 0.006807639 ubox
27 84 0.004558168 ubox
28 37 0.020352097 ubox
28 38 0.003743452 ubox
28 41 0.010345750 ubox
28 44 0.004023590 ubox
28 46 0.006046801 ubox
28 63 0.008472090 ubox
28 83 0.013135563 ubox
29 36 0.020930695 ubox
29 39 0.062718345 ubox
29 40 0.009057630 ubox
29 43 0.004105980 ubox
29 47 0.008868406 ubox
29 62 0.008477612 ubox
29 82 0.013455928 ubox
30 38 0.064675842 ubox
30 46 0.009976561 ubox
30 81 0.006471229 ubox
31 37 0.062026827 ubox
31 45 0.009808037 ubox
32 41 0.007412227 ubox
32 81 0.090861629 ubox
32 83 0.009342669 ubox
33 40 0.007552146 ubox
33 43 0.010069773 ubox
33 48 0.006677896 ubox
33 58 0.004047940 ubox
33 59 0.008616269 ubox
33 80 0.094046303 ubox
33 82 0.009608188 ubox
34 39 0.007067912 ubox
34 42 0.010070787 ubox
34 47 0.006616087 ubox
34 57 0.003594391 ubox
34 58 0.007981247 ubox
34 79 0.093521192 ubox
35 41 0.009914657 ubox
35 45 0.008266601 ubox
36 44 0.008668323 ubox
36 56 0.010507238 ubox
36 71 0.007204769 ubox
36 78 0.099991691 ubox
37 43 0.008653436 ubox
37 48 0.004130469 ubox
37 55 0.010551326 ubox
37 70 0.007211227 ubox
37 77 0.100049887 ubox
38 42 0.008352491 ubox
38 47 0.005426693 ubox
38 54 0.010707357 ubox
38 69 0.007234699 ubox
38 76 0.099958975 ubox
38 82 0.006123364 ubox
39 46 0.005800408 ubox
39 53 0.010718916 ubox
39 68 0.007148198 ubox
39 81 0.007788529 ubox
40 45 0.004242465 ubox
40 52 0.010719252 ubox
40 66 0.007408735 ubox
40 74 0.100113853 ubox
40 78 0.006716149 ubox
40 83 0.006233733 ubox
41 51 0.010630935 ubox
41 65 0.007394960 ubox
41 73 0.099967071 ubox
41 77 0.006551397 ubox
41 79 0.019114635 ubox
41 84 0.005649926 ubox
42 50 0.010040055 ubox
42 64 0.007390935 ubox
42 78 0.021336226 ubox
42 83 0.006098948 ubox
43 50 0.008740922 ubox
43 63 0.007421072 ubox
43 71 0.099865915 ubox
43 74 0.005025433 ubox
43 81 0.073294233 ubox
43 83 0.030853716 ubox
44 49 0.009828273 ubox
44 62 0.007421283 ubox
44 70 0.099264905 ubox
44 73 0.005042047 ubox
44 76 0.018104482 ubox
44 80 0.078170772 ubox
44 82 0.032109708 ubox
45 61 0.007422091 ubox
45 69 0.017701028 ubox
45 70 0.011034910 ubox
45 75 0.009012942 ubox
45 76 0.524078745 ubox
45 77 0.343618053 ubox
45 79 0.086157439 ubox
46 60 0.007397887 ubox
46 69 0.098257977 ubox
46 75 0.631120256 ubox
46 76 0.369252728 ubox
46 82 0.130157238 ubox
47 68 0.099651071 ubox
47 74 0.632305154 ubox
47 81 0.131060595 ubox
48 64 0.007108437 ubox
48 67 0.099468716 ubox
49 56 0.007297051 ubox
49 63 0.008086172 ubox
49 66 0.099424452 ubox
49 74 0.192091455 ubox
49 81 0.012325094 ubox
49 83 0.010054439 ubox
50 55 0.007301791 ubox
50 62 0.008223599 ubox
50 65 0.097281165 ubox
50 72 0.741374605 ubox
50 73 0.136322831 ubox
50 75 0.638559221 ubox
50 80 0.010838354 ubox
50 82 0.008829650 ubox
51 63 0.022278033 ubox
51 64 0.063016020 ubox
51 66 0.004470946 ubox
51 71 0.756236138 ubox
51 74 0.646314408 ubox
52 58 0.003870265 ubox
52 59 0.032120896 ubox
52 60 0.041979910 ubox
52 62 0.020016542 ubox
52 65 0.003454122 ubox
52 70 0.756337648 ubox
52 73 0.646355815 ubox
53 57 0.003950035 ubox
53 58 0.032991699 ubox
53 59 0.042958289 ubox
53 65 0.020579691 ubox
53 69 0.756306203 ubox
53 72 0.646345279 ubox
54 64 0.071444636 ubox
54 67 0.124574118 ubox
54 68 0.745622616 ubox
54 71 0.646071218 ubox
55 63 0.082137641 ubox
55 66 0.751751325 ubox
55 67 0.083078391 ubox
55 71 0.013188873 ubox
56 62 0.082138825 ubox
56 65 0.756363929 ubox
56 69 0.645880057 ubox
56 70 0.018004362 ubox
57 64 0.755309109 ubox
57 68 0.645841527 ubox
58 63 0.754759745 ubox
58 64 0.008121641 ubox
58 66 0.014517990 ubox
58 67 0.645197322 ubox
58 68 0.020758832 ubox
59 63 0.010620119 ubox
59 66 0.644945162 ubox
59 67 0.023522800 ubox
60 66 0.026068831 ubox
60 68 0.003431634 ubox
61 67 0.003809855 ubox
62 66 0.003867994 ubox
62 74 0.004307283 ubox
63 73 0.004313934 ubox
64 72 0.004324202 ubox
65 71 0.004336958 ubox
66 70 0.004305576 ubox
73 81 0.069486957 ubox
73 83 0.110086325 ubox
74 80 0.071666554 ubox
74 82 0.112204636 ubox
75 81 0.106153763 ubox
77 83 0.110456219 ubox
78 82 0.113247801 ubox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
50 75 0.9500000 lbox
51 74 0.9500000 lbox
52 73 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
showpage
end
%%EOF
