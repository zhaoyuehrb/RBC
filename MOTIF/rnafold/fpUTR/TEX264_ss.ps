%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCGGCUGCUGAGGUGAGGGCCGGGCCAGAGGAGAGGCAUACCCACUGGGGCGUAGGUCUGGGACUCCCCCUGUCCGCCCUGGCGCGACCUCAGGACUCUCCGUGUCCCCUCCGUGACCCCCGCGGCCCGGGCCGCUCUUUGCAUCUUGUCUUGCCCACAGCUGGCCUCGGCCAGGUCCGAGGGCCUGGAUGCGACCUUGGGGCAGCCCCUACUCUUCCGGGCAGCCCACUUCCGCGGCCACCGGUGCAGGGC\
AUGCCCCGGGGCCGUGGAGCUGCCUUGAGGUGCAGUGUUGGGGAUCCAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[296.11892700 260.43511963]
[300.63125610 245.83636475]
[288.38052368 237.18074036]
[276.12979126 228.52511597]
[268.89141846 227.23838806]
[263.79913330 219.71870422]
[251.63703918 210.93898010]
[239.47494507 202.15925598]
[227.31285095 193.37953186]
[215.15077209 184.59980774]
[202.98867798 175.82008362]
[190.82658386 167.04035950]
[178.57586670 158.38473511]
[166.23777771 149.85411072]
[153.89968872 141.32348633]
[141.56159973 132.79286194]
[129.22349548 124.26224518]
[114.27947998 122.96756744]
[100.65813446 129.24919128]
[87.03678131 135.53082275]
[73.41543579 141.81245422]
[68.24852753 153.59362793]
[56.81547546 158.55787659]
[45.43504715 154.55404663]
[31.75053787 160.69686890]
[22.32922173 173.40707397]
[7.54953480 171.56042480]
[-6.13497496 177.70323181]
[-19.81948471 183.84605408]
[-33.50399399 189.98887634]
[-47.18850327 196.13168335]
[-58.29953766 212.99145508]
[-77.44272614 210.06491089]
[-90.99951172 216.48471069]
[-104.55628967 222.90449524]
[-113.71723175 235.80363464]
[-128.53140259 234.25785828]
[-142.08819580 240.67765808]
[-155.64497375 247.09744263]
[-156.68350220 264.68402100]
[-166.46267700 279.23019409]
[-182.19506836 286.75262451]
[-199.47853088 285.24719238]
[-213.52780151 275.22186279]
[-226.95124817 281.91595459]
[-240.37469482 288.61007690]
[-253.79814148 295.30416870]
[-256.01129150 298.90509033]
[-258.94610596 301.39248657]
[-262.17364502 302.67651367]
[-265.27896118 302.81265259]
[-267.90621948 301.98501587]
[-281.59072876 308.12783813]
[-295.27523804 314.27066040]
[-304.42996216 327.87664795]
[-320.76965332 326.48162842]
[-327.48547363 311.52069092]
[-317.66870117 298.38433838]
[-301.41806030 300.58615112]
[-287.73355103 294.44332886]
[-274.04904175 288.30050659]
[-260.49224854 281.88073730]
[-247.06880188 275.18661499]
[-233.64535522 268.49252319]
[-220.22190857 261.79840088]
[-220.81750488 249.23481750]
[-216.61839294 237.32934570]
[-208.21083069 227.84968567]
[-196.80859375 222.21734619]
[-184.07794189 221.29455566]
[-171.89401245 225.25245667]
[-162.06475830 233.54066467]
[-148.50798035 227.12086487]
[-134.95120239 220.70108032]
[-126.75992584 208.26113892]
[-110.97608185 209.34771729]
[-97.41929626 202.92791748]
[-83.86251831 196.50813293]
[-81.32830048 186.67417908]
[-73.65637207 179.69104004]
[-63.19578934 178.02098083]
[-53.33132172 182.44717407]
[-39.64681244 176.30436707]
[-25.96230125 170.16154480]
[-12.27779198 164.01872253]
[1.40671742 157.87591553]
[9.84922791 145.60507202]
[25.60772133 147.01235962]
[39.29223251 140.86953735]
[48.81455612 126.10270691]
[67.13380432 128.19110107]
[80.75515747 121.90946960]
[94.37650299 115.62784576]
[107.99785614 109.34621429]
[89.87130737 146.63343811]
[24.61062813 135.05369568]
[11.62024784 127.55368805]
[-1.37013316 120.05368805]
[-14.36051464 112.55368805]
[-28.99217033 118.07172394]
[-43.73039246 112.84497833]
[-51.61624146 99.34137726]
[-48.92626190 83.93688965]
[-36.93058014 73.90505981]
[-21.29319000 73.98260498]
[-9.39758778 84.13291168]
[-6.86051416 99.56330872]
[6.12986660 107.06330872]
[19.12024689 114.56330872]
[32.11063004 122.06330872]
[36.98003769 116.35902405]
[31.96931458 102.22068787]
[46.71886063 104.95046234]
[51.58827209 99.24617767]
[42.14253998 87.59378815]
[32.69681168 75.94139862]
[23.25107956 64.28900909]
[13.80534935 52.63662338]
[-1.93688262 49.54442596]
[-9.20627117 35.24283218]
[-2.42636466 20.70280457]
[13.20187378 17.07820511]
[25.68979645 27.14951706]
[25.45773888 43.19089127]
[34.90346909 54.84328079]
[44.34920120 66.49567413]
[53.79492950 78.14806366]
[63.24066162 89.80044556]
[70.23014069 87.08068085]
[91.19859314 78.92138672]
[90.28413391 63.94928741]
[89.36967468 48.97718811]
[88.37911224 34.00992966]
[87.31248474 19.04790115]
[86.24585724 4.08587217]
[85.17922211 -10.87615585]
[84.03655243 -25.83256912]
[82.81785583 -40.78298187]
[81.59916687 -55.73339081]
[67.81972504 -62.37223053]
[59.26982498 -74.93392181]
[58.16287613 -89.98852539]
[64.69628906 -103.48558044]
[77.02528381 -111.84388733]
[75.80659485 -126.79429626]
[74.58790588 -141.74470520]
[61.26526642 -149.70001221]
[55.19400024 -163.98004150]
[58.70864105 -179.09384155]
[70.45773315 -189.22984314]
[85.92350769 -190.49055481]
[99.15906525 -182.39118958]
[105.07505798 -168.04612732]
[101.39667511 -152.97134399]
[89.53831482 -142.96339417]
[90.75700378 -128.01298523]
[91.97570038 -113.06257629]
[105.49560547 -106.81135559]
[114.12867737 -94.55060577]
[115.47451019 -79.51548004]
[109.07191467 -65.73492432]
[96.54957581 -56.95208359]
[97.76827240 -42.00167084]
[98.98696136 -27.05125999]
[102.64320374 -20.67303658]
[100.14125061 -11.94278717]
[101.20788574 3.01924181]
[102.27451324 17.98126984]
[103.34114838 32.94329834]
[106.93235016 39.35836411]
[104.34177399 48.06272888]
[105.25623322 63.03482819]
[106.17069244 78.00692749]
[120.68875885 81.77861786]
[128.77503967 69.14484406]
[136.86131287 56.51107407]
[144.94757080 43.87730026]
[153.03384399 31.24353027]
[161.12011719 18.60975838]
[169.20639038 5.97598505]
[169.41548157 -10.42182922]
[183.85130310 -18.20252991]
[197.66351318 -9.36199856]
[196.64329529 7.00538349]
[181.84016418 14.06225681]
[173.75389099 26.69602966]
[165.66761780 39.32980347]
[157.58134460 51.96357346]
[149.49507141 64.59734344]
[141.40881348 77.23111725]
[133.32254028 89.86489105]
[144.75823975 80.15795135]
[159.63793945 82.05387115]
[168.27413940 94.31829071]
[165.04420471 108.96641541]
[152.05097961 116.46150970]
[137.75411987 111.92414856]
[150.09220886 120.45477295]
[162.43031311 128.98539734]
[174.76840210 137.51602173]
[187.10649109 146.04664612]
[193.57188416 146.95216370]
[197.97799683 150.43823242]
[199.60630798 154.87826538]
[211.76840210 163.65798950]
[223.93049622 172.43771362]
[236.09257507 181.21743774]
[248.25466919 189.99716187]
[260.41677856 198.77688599]
[272.57885742 207.55661011]
[284.78543091 216.27439880]
[297.03613281 224.93002319]
[309.28686523 233.58563232]
[325.82400513 223.69512939]
[346.55038452 225.16728210]
[363.88839722 239.17518616]
[370.54879761 262.02624512]
[384.41427612 267.74887085]
[398.27975464 273.47149658]
[412.14523315 279.19415283]
[427.85348511 277.30694580]
[436.66629028 289.31460571]
[450.53176880 295.03723145]
[464.39724731 300.75985718]
[478.26272583 306.48251343]
[492.12820435 312.20513916]
[505.99365234 317.92776489]
[519.85913086 323.65042114]
[516.30926514 309.07650757]
[525.40734863 297.15069580]
[540.40124512 296.72360229]
[550.16339111 308.11221313]
[547.44885254 322.86456299]
[534.27185059 330.03228760]
[547.82861328 336.45205688]
[561.38543701 342.87185669]
[574.94219971 349.29165649]
[588.49896240 355.71142578]
[602.05578613 362.13122559]
[615.61254883 368.55099487]
[629.16931152 374.97079468]
[642.72613525 381.39059448]
[651.76940918 382.22485352]
[656.38757324 387.94515991]
[669.87841797 394.50247192]
[683.36920166 401.05975342]
[696.85998535 407.61703491]
[712.65411377 406.69097900]
[720.71844482 419.21356201]
[734.20928955 425.77084351]
[747.70007324 432.32812500]
[763.27093506 428.46447754]
[775.91174316 438.34323120]
[775.92553711 454.38629150]
[763.30175781 464.28674316]
[747.72424316 460.44985962]
[741.14282227 445.81893921]
[727.65197754 439.26165771]
[714.16119385 432.70437622]
[699.33203125 434.09945679]
[690.30273438 421.10784912]
[676.81188965 414.55056763]
[663.32110596 407.99325562]
[649.83026123 401.43597412]
[636.30633545 394.94735718]
[622.74951172 388.52758789]
[609.19274902 382.10778809]
[595.63598633 375.68798828]
[582.07922363 369.26821899]
[568.52239990 362.84841919]
[554.96563721 356.42864990]
[541.40887451 350.00885010]
[527.85205078 343.58905029]
[514.13653564 337.51589966]
[500.27102661 331.79324341]
[486.40554810 326.07061768]
[472.54006958 320.34799194]
[458.67459106 314.62533569]
[444.80911255 308.90270996]
[430.94363403 303.18008423]
[416.22714233 305.47659302]
[406.42260742 293.05963135]
[392.55712891 287.33697510]
[378.69165039 281.61434937]
[364.82617188 275.89172363]
[359.07269287 280.70288086]
[368.69482422 292.21002197]
[357.18753052 301.83200073]
[347.56570435 290.32519531]
[341.81219482 295.13638306]
[344.99050903 309.79577637]
[355.47622681 321.64315796]
[350.61135864 335.72088623]
[353.78967285 350.38031006]
[356.96798706 365.03970337]
[360.14630127 379.69912720]
[371.56356812 391.47103882]
[366.81777954 407.16848755]
[350.79101562 410.64324951]
[339.97021484 398.32083130]
[345.48690796 382.87744141]
[342.30859375 368.21804810]
[339.13027954 353.55862427]
[335.95193481 338.89920044]
[325.69357300 328.10037231]
[330.33111572 312.97409058]
[327.15277100 298.31469727]
[310.00021362 290.52182007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 213]
[3 212]
[4 211]
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 201]
[14 200]
[15 199]
[16 198]
[17 197]
[18 94]
[19 93]
[20 92]
[21 91]
[24 89]
[25 88]
[27 86]
[28 85]
[29 84]
[30 83]
[31 82]
[33 78]
[34 77]
[35 76]
[37 74]
[38 73]
[39 72]
[44 65]
[45 64]
[46 63]
[47 62]
[52 61]
[53 60]
[54 59]
[96 110]
[97 109]
[98 108]
[99 107]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[130 173]
[131 172]
[132 171]
[133 169]
[134 168]
[135 167]
[136 166]
[137 164]
[138 163]
[139 162]
[144 157]
[145 156]
[146 155]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
[180 185]
[217 285]
[218 284]
[219 283]
[220 282]
[222 280]
[223 279]
[224 278]
[225 277]
[226 276]
[227 275]
[228 274]
[234 273]
[235 272]
[236 271]
[237 270]
[238 269]
[239 268]
[240 267]
[241 266]
[242 265]
[244 264]
[245 263]
[246 262]
[247 261]
[249 259]
[250 258]
[251 257]
[290 307]
[291 306]
[293 304]
[294 303]
[295 302]
[296 301]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
