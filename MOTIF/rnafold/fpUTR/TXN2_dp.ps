%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TXN2)
} def

/sequence { (\
GAGGAAGUGACGACAGGCGUGCCCUUGACAGGCAGGGAGGGCUAGGCUGUGCAUCCCUCCGCUCGCAUUGCAGGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.017079790 ubox
1 55 0.008135591 ubox
1 59 0.301329917 ubox
1 64 0.011406768 ubox
2 25 0.020272956 ubox
2 54 0.007210593 ubox
2 58 0.308728273 ubox
2 63 0.011177722 ubox
3 23 0.033351917 ubox
3 24 0.021267902 ubox
3 55 0.011292862 ubox
3 56 0.468680981 ubox
3 57 0.312714324 ubox
3 58 0.011842812 ubox
3 60 0.060488754 ubox
3 62 0.008551259 ubox
4 22 0.046556413 ubox
4 23 0.021632279 ubox
4 54 0.007119858 ubox
4 55 0.470457923 ubox
4 56 0.311300766 ubox
4 57 0.015779130 ubox
4 59 0.060695947 ubox
5 54 0.429110591 ubox
5 58 0.056081850 ubox
6 58 0.023030825 ubox
6 69 0.011385872 ubox
7 14 0.171352720 ubox
7 18 0.161101061 ubox
7 20 0.011617195 ubox
7 22 0.490743289 ubox
7 52 0.330399599 ubox
7 54 0.376599062 ubox
7 57 0.032025303 ubox
7 66 0.004483671 ubox
7 68 0.012471765 ubox
8 13 0.169926989 ubox
8 15 0.044292990 ubox
8 17 0.160801130 ubox
8 19 0.028686017 ubox
8 21 0.477368673 ubox
8 51 0.325559098 ubox
8 53 0.478661200 ubox
8 65 0.004484521 ubox
8 67 0.012589378 ubox
8 72 0.003169434 ubox
9 14 0.049845889 ubox
9 18 0.039987496 ubox
9 20 0.194164459 ubox
9 50 0.079568134 ubox
9 52 0.490433763 ubox
9 55 0.045461830 ubox
9 64 0.004483453 ubox
9 66 0.012624053 ubox
9 71 0.003516649 ubox
10 20 0.660344814 ubox
10 50 0.138207976 ubox
10 54 0.043936699 ubox
10 63 0.003948549 ubox
11 19 0.699990555 ubox
11 21 0.043087653 ubox
11 49 0.147915361 ubox
11 51 0.455232569 ubox
11 65 0.012696612 ubox
11 70 0.003667529 ubox
12 18 0.694456602 ubox
12 20 0.028556835 ubox
12 48 0.073074894 ubox
12 50 0.274349164 ubox
12 55 0.006619252 ubox
12 64 0.012687475 ubox
12 69 0.003643310 ubox
13 20 0.094791798 ubox
13 50 0.510233171 ubox
13 54 0.006219515 ubox
13 63 0.010194440 ubox
13 68 0.003472485 ubox
14 19 0.099490871 ubox
14 21 0.084381746 ubox
14 49 0.580009302 ubox
14 51 0.038525622 ubox
14 70 0.004360521 ubox
15 20 0.081481522 ubox
15 48 0.549159944 ubox
15 50 0.035496488 ubox
15 69 0.004377936 ubox
16 23 0.015433264 ubox
16 43 0.016084319 ubox
16 47 0.443287932 ubox
16 48 0.260365761 ubox
16 63 0.007189496 ubox
16 68 0.003891780 ubox
17 22 0.021507212 ubox
17 42 0.020018117 ubox
17 47 0.425202440 ubox
17 62 0.011531993 ubox
17 66 0.006294257 ubox
17 71 0.003687050 ubox
18 41 0.020023330 ubox
18 46 0.534591600 ubox
18 61 0.011551356 ubox
18 65 0.006300182 ubox
18 70 0.003690102 ubox
19 42 0.003534962 ubox
19 60 0.004931996 ubox
19 64 0.006215661 ubox
20 34 0.012039321 ubox
20 41 0.003429656 ubox
20 44 0.506617093 ubox
20 67 0.003628174 ubox
21 33 0.014516331 ubox
21 42 0.606087031 ubox
21 43 0.098781874 ubox
21 62 0.005128632 ubox
21 66 0.003673178 ubox
22 32 0.014296758 ubox
22 37 0.019524371 ubox
22 40 0.003476712 ubox
22 41 0.614296698 ubox
22 61 0.005126198 ubox
22 65 0.003646015 ubox
22 74 0.004423249 ubox
22 75 0.285691478 ubox
23 31 0.014052030 ubox
23 32 0.004966934 ubox
23 36 0.019541499 ubox
23 37 0.022733690 ubox
23 39 0.003478842 ubox
23 40 0.613918508 ubox
23 41 0.005729736 ubox
23 73 0.004305306 ubox
23 74 0.286591575 ubox
23 75 0.731313696 ubox
24 31 0.005623252 ubox
24 35 0.019553928 ubox
24 36 0.031378437 ubox
24 37 0.005397018 ubox
24 39 0.613514194 ubox
24 40 0.005887656 ubox
24 73 0.285778555 ubox
24 74 0.734232016 ubox
24 75 0.010261480 ubox
25 30 0.005663546 ubox
25 34 0.017430346 ubox
25 35 0.049171431 ubox
25 36 0.009564210 ubox
25 37 0.017183843 ubox
25 38 0.611076962 ubox
25 39 0.006011713 ubox
25 72 0.211939612 ubox
25 73 0.733909378 ubox
25 74 0.009901262 ubox
26 31 0.005178370 ubox
26 34 0.099467302 ubox
26 35 0.021505783 ubox
26 36 0.033863195 ubox
26 37 0.598171909 ubox
26 38 0.013467595 ubox
26 65 0.006096823 ubox
26 67 0.003787593 ubox
26 70 0.011743061 ubox
26 72 0.758105978 ubox
26 73 0.010151555 ubox
27 33 0.120644810 ubox
27 64 0.007805046 ubox
27 66 0.003821578 ubox
27 69 0.012493757 ubox
27 71 0.782268318 ubox
28 63 0.007644636 ubox
28 68 0.012298315 ubox
29 70 0.753131013 ubox
30 69 0.750872899 ubox
31 60 0.011843924 ubox
31 63 0.019930678 ubox
31 64 0.008007096 ubox
31 68 0.666288102 ubox
31 69 0.003945782 ubox
32 59 0.011859814 ubox
32 62 0.022949834 ubox
32 66 0.786196992 ubox
33 61 0.022882432 ubox
33 65 0.786845767 ubox
34 58 0.016850340 ubox
34 63 0.769972815 ubox
35 57 0.017647829 ubox
35 60 0.005454970 ubox
35 62 0.773515871 ubox
35 63 0.023072134 ubox
35 64 0.022106705 ubox
36 56 0.017660919 ubox
36 59 0.004119535 ubox
36 60 0.787747222 ubox
36 62 0.011661286 ubox
36 63 0.005283188 ubox
37 55 0.017660256 ubox
37 59 0.788534573 ubox
37 62 0.004104946 ubox
38 54 0.017528255 ubox
38 58 0.788434600 ubox
39 56 0.009337748 ubox
39 57 0.788482377 ubox
40 55 0.013070418 ubox
40 56 0.788394608 ubox
40 57 0.004024688 ubox
41 47 0.008204669 ubox
41 50 0.025175043 ubox
41 52 0.135622850 ubox
41 54 0.004364802 ubox
41 55 0.775143947 ubox
41 56 0.005344100 ubox
42 46 0.010847203 ubox
42 49 0.073866895 ubox
42 51 0.183470512 ubox
43 49 0.018789942 ubox
43 51 0.124514980 ubox
44 48 0.016546255 ubox
44 50 0.126468592 ubox
45 55 0.003845504 ubox
46 52 0.735735100 ubox
46 54 0.008272082 ubox
47 51 0.730626339 ubox
54 76 0.164709106 ubox
55 75 0.208978492 ubox
56 74 0.209190525 ubox
56 75 0.015055390 ubox
57 73 0.209177507 ubox
57 74 0.015696469 ubox
57 75 0.085931109 ubox
57 77 0.457709583 ubox
58 72 0.194469358 ubox
58 73 0.011374298 ubox
58 74 0.083553133 ubox
58 75 0.054048384 ubox
58 76 0.470320043 ubox
59 73 0.084478494 ubox
59 74 0.084248792 ubox
59 75 0.473236201 ubox
60 70 0.052962356 ubox
60 73 0.093677249 ubox
60 74 0.473297693 ubox
61 69 0.044245516 ubox
61 71 0.301719799 ubox
62 70 0.302531981 ubox
62 73 0.437014344 ubox
62 74 0.059302264 ubox
62 75 0.252836925 ubox
62 77 0.085062744 ubox
63 72 0.434940977 ubox
63 73 0.058962729 ubox
63 74 0.253759723 ubox
63 75 0.011104453 ubox
63 76 0.087266243 ubox
64 70 0.118341746 ubox
64 73 0.254750521 ubox
64 74 0.014455145 ubox
64 75 0.087331802 ubox
65 69 0.073319337 ubox
65 71 0.455670933 ubox
66 70 0.452669326 ubox
68 76 0.004408589 ubox
69 74 0.003326159 ubox
69 75 0.004723543 ubox
69 76 0.004304138 ubox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
23 75 0.9500000 lbox
24 74 0.9500000 lbox
25 73 0.9500000 lbox
26 72 0.9500000 lbox
27 71 0.9500000 lbox
29 70 0.9500000 lbox
30 69 0.9500000 lbox
31 68 0.9500000 lbox
32 66 0.9500000 lbox
33 65 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
46 52 0.9500000 lbox
47 51 0.9500000 lbox
showpage
end
%%EOF
