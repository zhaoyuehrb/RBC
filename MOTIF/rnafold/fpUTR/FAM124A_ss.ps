%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGGCGCGGCGCGGGGUUCGCGGCUGGCGCUUGAGUUGUUUGCCGGCUCCCGGGCCGCCAGACGCUCGGAGGGAGCCCGGCCGGCUCGGACUGGGCGGCCGGGAGGGAGGGCGCCCCGGGUCACGACGGCGCCCGCAAGCCGAGCGCGGCCGGGACGUGCACC\
) } def
/len { sequence length } bind def

/coor [
[109.55315399 229.63505554]
[100.33812714 242.26902771]
[85.14572144 245.97370911]
[71.14931488 238.99986267]
[64.95758057 224.64031982]
[69.49407959 209.67521667]
[82.61679840 201.17062378]
[84.28636932 186.26382446]
[85.81732178 171.34216309]
[87.20951080 156.40690613]
[88.60169983 141.47164917]
[89.99389648 126.53639984]
[91.38608551 111.60114288]
[84.59041595 108.42799377]
[64.20339966 98.90855408]
[53.64620590 109.56433868]
[43.08901215 120.22011566]
[32.53181458 130.87590027]
[31.16821861 146.86088562]
[17.74105453 155.64103699]
[2.55049825 150.48094177]
[-2.75055766 135.33900452]
[5.90440369 121.83081055]
[21.87603760 120.31870270]
[32.43323135 109.66291809]
[42.99042892 99.00714111]
[53.54762268 88.35136414]
[47.20132828 74.76001740]
[32.25378036 76.01333618]
[17.30623245 77.26664734]
[2.35868430 78.51996613]
[-12.58886433 79.77328491]
[-27.53641319 81.02659607]
[-42.45808029 82.55754089]
[-57.34871292 84.36559296]
[-65.73097229 97.56679535]
[-80.65325928 102.24218750]
[-95.06973267 96.18418884]
[-102.17337036 82.25320435]
[-98.61005402 67.02702332]
[-86.06227112 57.69496918]
[-70.45470428 58.66336441]
[-59.15676498 69.47496033]
[-44.26613235 67.66690826]
[-40.64685059 64.49472046]
[-34.98485184 63.58884430]
[-28.78972816 66.07904816]
[-13.84217930 64.82572937]
[1.10536897 63.57241821]
[16.05291748 62.31910324]
[31.00046539 61.06578827]
[45.94801331 59.81247330]
[102.66316986 88.57633209]
[113.60914612 78.32032776]
[124.55512238 68.06432343]
[135.50109863 57.80831909]
[146.44706726 47.55231476]
[157.39305115 37.29631042]
[161.53814697 29.11010933]
[168.63911438 26.95373726]
[179.77383423 16.90297127]
[190.90856934 6.85220528]
[202.04328918 -3.19856071]
[187.47888184 -6.78713799]
[181.03105164 -20.33060837]
[187.42762756 -33.89836121]
[201.97836304 -37.54197693]
[214.01409912 -28.58981514]
[214.70974731 -13.60597134]
[226.72924805 -22.57991028]
[238.74874878 -31.55384827]
[250.76824951 -40.52778625]
[262.78775024 -49.50172424]
[274.80725098 -58.47566223]
[269.78164673 -73.59970856]
[269.85162354 -89.51016998]
[274.99288940 -104.53916168]
[284.65039062 -117.11663055]
[297.79824829 -125.93436432]
[313.04864502 -130.08206177]
[328.79837036 -129.14128113]
[334.24758911 -143.11648560]
[339.69677734 -157.09167480]
[345.14599609 -171.06687927]
[350.59518433 -185.04208374]
[356.04437256 -199.01727295]
[361.49359131 -212.99247742]
[366.94277954 -226.96768188]
[367.14990234 -236.14115906]
[372.62536621 -241.15045166]
[378.33337402 -255.02195740]
[384.04141235 -268.89343262]
[379.21957397 -284.19473267]
[388.29541016 -297.42382812]
[404.30670166 -298.43249512]
[414.97100830 -286.44699097]
[412.10754395 -270.66152954]
[397.91290283 -263.18542480]
[392.20489502 -249.31391907]
[386.49685669 -235.44242859]
[380.91799927 -221.51847839]
[375.46878052 -207.54327393]
[370.01959229 -193.56806946]
[364.57037354 -179.59288025]
[359.12118530 -165.61767578]
[353.67196655 -151.64247131]
[348.22277832 -137.66728210]
[342.77359009 -123.69207764]
[348.66564941 -119.66277313]
[353.90527344 -114.81529999]
[358.37985229 -109.25382996]
[361.99319458 -103.09790802]
[364.66766357 -96.47983551]
[366.34576416 -89.54184723]
[381.34512329 -89.68126678]
[396.34448242 -89.82068634]
[411.34384155 -89.96010590]
[426.34320068 -90.09951782]
[441.34252930 -90.23893738]
[456.34188843 -90.37835693]
[471.95635986 -100.10364532]
[486.89608765 -90.92937469]
[501.89025879 -91.34757996]
[513.91406250 -101.96870422]
[529.68908691 -99.04850006]
[537.11413574 -84.82709503]
[530.49334717 -70.21393585]
[514.90557861 -66.41899109]
[502.30847168 -76.35340881]
[487.31430054 -75.93520355]
[478.75460815 -67.35198975]
[466.23941040 -66.90407562]
[456.48132324 -75.37900543]
[441.48196411 -75.23958588]
[426.48260498 -75.10016632]
[411.48324585 -74.96075439]
[396.48388672 -74.82133484]
[381.48455811 -74.68191528]
[366.48519897 -74.54249573]
[360.82965088 -57.67836761]
[349.47702026 -43.93988037]
[333.92016602 -35.17296219]
[316.21896362 -32.56720352]
[298.72750854 -36.49448776]
[283.78118896 -46.45615768]
[271.76168823 -37.48221970]
[259.74218750 -28.50828362]
[247.72268677 -19.53434563]
[235.70318604 -10.56040668]
[223.68368530 -1.58646905]
[212.09405518 7.93616438]
[200.95933533 17.98693085]
[189.82460022 28.03769684]
[178.68988037 38.08846283]
[167.64904785 48.24228668]
[156.70307922 58.49829102]
[145.75709534 68.75429535]
[134.81112671 79.01029968]
[123.86515045 89.26630402]
[112.91917419 99.52230835]
[106.32133484 112.99333191]
[104.92914581 127.92858887]
[103.53695679 142.86384583]
[102.14476776 157.79910278]
[100.75257111 172.73434448]
[103.07836914 181.61051941]
[99.19316864 187.93339539]
[97.52359772 202.84019470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 168]
[8 167]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[15 27]
[16 26]
[17 25]
[18 24]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[34 44]
[35 43]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[60 154]
[61 153]
[62 152]
[63 151]
[69 150]
[70 149]
[71 148]
[72 147]
[73 146]
[74 145]
[81 108]
[82 107]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[90 100]
[91 99]
[92 98]
[114 139]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[122 130]
[123 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
