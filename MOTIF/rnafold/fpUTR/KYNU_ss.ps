%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUUCUUUGAAUUUCUCACCCUAAGAUCUGGCCUGUACAUUUUCAAGGAAUUCUUGAGAGGUUCUUGGAGAGAUUCUGGGAGCCAAACACUCCAUUGGGAUCCUAGCUGGAAUAUAAAGAAUGGCUUAUCAGUGGAGACCAUCGACAGUUGAGAAAAGAAGAAGCCCAAAAAGUACAAGAAUGAAAAUCGAGAGUUUUUAGAGAACAACUUGUA\
) } def
/len { sequence length } bind def

/coor [
[122.50453949 595.11236572]
[124.84973907 580.03051758]
[133.51354980 567.46459961]
[146.77574158 559.90972900]
[145.69088745 544.94897461]
[144.60603333 529.98828125]
[143.52117920 515.02752686]
[142.43632507 500.06683350]
[141.35147095 485.10610962]
[140.26661682 470.14538574]
[139.18174744 455.18466187]
[138.09689331 440.22396851]
[137.01203918 425.26324463]
[126.39360046 411.28887939]
[134.56678772 394.78564453]
[133.26547241 379.84219360]
[131.96414185 364.89874268]
[130.66281128 349.95532227]
[129.36148071 335.01187134]
[114.68790436 332.10266113]
[101.41523743 325.16958618]
[90.62307739 314.76693726]
[83.19198608 301.73162842]
[79.73162079 287.11581421]
[80.53073883 272.10205078]
[85.53311157 257.90750122]
[94.34140015 245.68544006]
[106.24868774 236.43132019]
[120.29522705 230.90187073]
[118.99390411 215.95843506]
[117.69257355 201.01498413]
[115.63994598 199.11209106]
[114.21565247 196.28329468]
[113.77545929 192.76319885]
[114.58393097 188.91055298]
[116.77414703 185.17306519]
[116.33988953 170.17935181]
[115.90562439 155.18563843]
[115.47136688 140.19192505]
[115.03710175 125.19821167]
[100.46210480 135.06629944]
[80.02534485 135.57005310]
[59.96281815 123.68876648]
[44.99463654 124.66529846]
[30.02645874 125.64183807]
[15.05827999 126.61837006]
[0.09010062 127.59490204]
[-14.87807846 128.57142639]
[-29.84625816 129.54795837]
[-41.46599197 140.60966492]
[-57.33887863 138.27920532]
[-65.28859711 124.34429932]
[-59.21680069 109.49462128]
[-43.78125381 105.12157440]
[-30.82279015 114.57978821]
[-15.85461044 113.60325623]
[-0.88643175 112.62671661]
[14.08174706 111.65018463]
[29.04992676 110.67365265]
[44.01810455 109.69712067]
[58.98628616 108.72058868]
[62.74607086 94.19943237]
[50.13261032 86.08152008]
[37.51914597 77.96360779]
[24.90568161 69.84568787]
[12.29221821 61.72777557]
[-0.32124567 53.60986328]
[-12.93470955 45.49194717]
[-25.54817200 37.37403107]
[-38.16163635 29.25611877]
[-50.77510071 21.13820457]
[-66.69538116 23.11918831]
[-78.06914520 11.80473042]
[-76.17142487 -4.12568712]
[-62.45797729 -12.45161057]
[-47.44859314 -6.78610468]
[-42.65718460 8.52474022]
[-30.04372215 16.64265442]
[-17.43025780 24.76056862]
[-4.81679487 32.87848282]
[7.79666901 40.99639893]
[20.41013336 49.11431122]
[33.02359772 57.23222733]
[45.63705826 65.35014343]
[58.25052261 73.46805573]
[70.86398315 81.58596802]
[77.77739716 78.67826843]
[67.97403717 67.32511139]
[75.74228668 54.49334335]
[90.34650421 57.91633224]
[91.60422516 72.86286926]
[98.51763916 69.95516205]
[101.53711700 55.26221466]
[104.55659485 40.56926727]
[107.57607269 25.87631798]
[110.59555054 11.18336773]
[113.61502838 -3.50958109]
[116.63450623 -18.20252991]
[119.65398407 -32.89548111]
[122.67346191 -47.58842850]
[111.10116577 -59.92741776]
[109.18445587 -76.56768036]
[117.48208618 -90.92665863]
[132.55139160 -97.44287872]
[135.35784912 -112.17800140]
[124.90550232 -123.49413300]
[123.14128876 -138.61831665]
[130.53358459 -151.72625732]
[144.06491089 -157.89399719]
[146.87136841 -172.62911987]
[135.61218262 -183.17588806]
[131.86454773 -198.14114380]
[136.82427979 -212.74951172]
[148.90878296 -222.33952332]
[164.26193237 -223.85104370]
[177.98457336 -216.80175781]
[185.69787598 -203.44104004]
[184.94055176 -188.03227234]
[175.95425415 -175.49234009]
[161.60649109 -169.82267761]
[158.80003357 -155.08755493]
[169.11685181 -144.37767029]
[171.17332458 -129.47013855]
[163.97317505 -116.05329895]
[150.09297180 -109.37155151]
[147.28651428 -94.63642883]
[157.29039001 -85.79911041]
[161.65730286 -73.07091522]
[159.14584351 -59.74072647]
[150.30673218 -49.30907822]
[137.36640930 -44.56895065]
[134.34692383 -29.87600136]
[131.32745361 -15.18305206]
[128.30796814 -0.49010339]
[125.28849792 14.20284557]
[122.26902008 28.89579391]
[119.24954224 43.58874512]
[116.23006439 58.28169250]
[113.21058655 72.97463989]
[119.00601196 77.73521423]
[128.52732849 66.14450836]
[140.11788940 75.66601562]
[130.59686279 87.25635529]
[136.39228821 92.01692963]
[150.21911621 86.20153046]
[164.04594421 80.38612366]
[177.87275696 74.57072449]
[190.12896729 62.85654831]
[204.77819824 71.39096832]
[200.63261414 87.83026123]
[183.68817139 88.39754486]
[169.86134338 94.21295166]
[156.03451538 100.02835083]
[142.20768738 105.84375763]
[157.12992859 107.36919403]
[172.05215454 108.89463043]
[186.31755066 104.25796509]
[201.31716919 104.15077972]
[215.64735413 108.58310699]
[227.96711731 117.14017487]
[237.12359619 129.02120972]
[242.25990295 143.11441040]
[242.89541626 158.10093689]
[238.97065735 172.57838440]
[230.85289001 185.19194031]
[219.30177307 194.76126099]
[205.39825439 200.39085388]
[190.44342041 201.55389404]
[175.83670044 198.14155579]
[162.94500732 190.47317505]
[152.97471619 179.26632690]
[146.85884094 165.56976318]
[145.16975403 150.66400146]
[137.60028076 137.71397400]
[130.03082275 124.76395416]
[130.46507263 139.75765991]
[130.89933777 154.75137329]
[131.33360291 169.74508667]
[131.76786804 184.73880005]
[132.63601685 199.71365356]
[133.93734741 214.65710449]
[135.23867798 229.60054016]
[150.02957153 232.61872864]
[163.35725403 239.67530823]
[174.14559937 250.19082642]
[181.52629089 263.30700684]
[184.90859985 277.95663452]
[184.02674866 292.95059204]
[178.96075439 307.07418823]
[170.12921143 319.18572998]
[158.25476074 328.30871582]
[144.30493164 333.71054077]
[145.60626221 348.65399170]
[146.90757751 363.59744263]
[148.20890808 378.54086304]
[149.51023865 393.48431396]
[158.86576843 402.35906982]
[159.64427185 414.82925415]
[151.97276306 424.17837524]
[153.05761719 439.13909912]
[154.14247131 454.09982300]
[155.22732544 469.06054688]
[156.31217957 484.02124023]
[157.39703369 498.98196411]
[158.48190308 513.94268799]
[159.56675720 528.90338135]
[160.65161133 543.86413574]
[161.73646545 558.82482910]
[175.94985962 564.38739014]
[186.33589172 575.57189941]
[190.83239746 590.15765381]
[188.54660034 605.24865723]
[179.93235779 617.84857178]
[166.70001221 625.45562744]
[151.47686768 626.55950928]
[137.28547668 620.94104004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[29 182]
[30 181]
[31 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
[98 133]
[99 132]
[100 131]
[104 126]
[105 125]
[109 121]
[110 120]
[144 154]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
