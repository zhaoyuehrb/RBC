%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGGGCGAGGGGCAGGGCAGGGCGGACCCUGGACGCGCGGGCGCGCGCGGAAGGUAGCGCGGGGCCGCGUUGGCGCGCACGCGCCUGAGCGUGCGCCCGGUGGGGCCGGCCGGGACUCGCCGCUCGCACGCCCUUGGGCCGCGGCCGGGCGCCCGCUCUUCCUUCCGCUUGCGCUGUGAGCUGAGGCGGUGU\
) } def
/len { sequence length } bind def

/coor [
[195.71583557 575.81268311]
[208.33450317 567.70281982]
[222.59487915 572.35516357]
[218.30569458 557.98150635]
[214.01651001 543.60778809]
[209.72732544 529.23413086]
[205.43814087 514.86041260]
[201.14895630 500.48675537]
[196.85977173 486.11306763]
[192.45494080 471.77438354]
[187.93475342 457.47164917]
[183.41456604 443.16894531]
[178.89437866 428.86621094]
[174.37419128 414.56347656]
[169.35412598 409.12570190]
[169.89839172 399.99380493]
[165.60920715 385.62011719]
[161.32002258 371.24642944]
[157.03083801 356.87274170]
[152.74165344 342.49905396]
[147.80984497 336.98110962]
[148.50115967 327.85919189]
[144.44409180 313.41824341]
[140.38702393 298.97732544]
[136.32995605 284.53640747]
[132.27288818 270.09548950]
[129.38021851 268.05743408]
[127.33660889 264.51080322]
[126.84312439 259.87258911]
[128.38679504 254.85832214]
[125.03215790 240.23826599]
[121.67752075 225.61819458]
[118.32288361 210.99812317]
[114.96823883 196.37805176]
[104.58055115 185.70353699]
[109.03556824 170.52252197]
[105.68093109 155.90245056]
[102.32628632 141.28237915]
[98.85398865 126.68981171]
[95.26425171 112.12568665]
[91.20718384 97.68476105]
[86.68699646 83.38204193]
[82.16680908 69.07931519]
[77.64662170 54.77659607]
[73.12642670 40.47387314]
[61.59017181 29.64680672]
[65.13249207 15.17955875]
[60.61230469 0.87683558]
[55.86228180 -13.35121059]
[50.88366699 -27.50088882]
[45.90504837 -41.65056610]
[40.92642975 -55.80024338]
[26.95429802 -62.68626404]
[22.10683823 -77.10697174]
[28.75771141 -90.38482666]
[23.77909470 -104.53450012]
[18.80047607 -118.68418121]
[7.27001047 -121.64450836]
[-1.30765104 -129.72518921]
[-4.87664890 -140.83027649]
[-2.65882015 -152.15980530]
[4.68000078 -160.91555786]
[0.15981185 -175.21829224]
[-4.36037731 -189.52101135]
[-9.11039734 -203.74905396]
[-14.08901501 -217.89872742]
[-19.06763268 -232.04841614]
[-24.04625130 -246.19808960]
[-35.92532349 -256.64788818]
[-32.85091782 -271.22174072]
[-37.82953644 -285.37142944]
[-42.80815506 -299.52108765]
[-47.78676987 -313.67077637]
[-52.76538849 -327.82043457]
[-57.74400711 -341.97012329]
[-63.55191803 -349.03805542]
[-62.68685150 -356.38803101]
[-67.43687439 -370.61608887]
[-72.18688965 -384.84414673]
[-76.93691254 -399.07217407]
[-81.68693542 -413.30023193]
[-86.43695068 -427.52828979]
[-91.18697357 -441.75631714]
[-95.93698883 -455.98437500]
[-110.18626404 -462.82058716]
[-115.34918976 -477.75778198]
[-108.36270142 -491.93399048]
[-93.37175751 -496.93869019]
[-79.27021790 -489.80270386]
[-74.42427826 -474.75970459]
[-81.70894623 -460.73440552]
[-76.95892334 -446.50634766]
[-72.20890808 -432.27828979]
[-67.45888519 -418.05026245]
[-62.70886612 -403.82220459]
[-57.95884705 -389.59414673]
[-53.20882416 -375.36611938]
[-48.45880508 -361.13806152]
[-43.59432983 -346.94873047]
[-38.61571121 -332.79907227]
[-33.63709259 -318.64938354]
[-28.65847588 -304.49972534]
[-23.67985916 -290.35003662]
[-18.70124054 -276.20034790]
[-7.17827225 -266.76263428]
[-9.89657307 -251.17671204]
[-4.91795540 -237.02702332]
[0.06066220 -222.87734985]
[5.03927994 -208.72767639]
[8.89379597 -205.88729858]
[10.99729443 -200.58979797]
[9.94234562 -194.04119873]
[14.46253490 -179.73847961]
[18.98272324 -165.43574524]
[35.69972992 -157.99903870]
[41.78932953 -140.40765381]
[32.95015335 -123.66279602]
[37.92877197 -109.51312256]
[42.90739059 -95.36344147]
[56.40730286 -89.17572021]
[61.65789413 -74.89685822]
[55.07610703 -60.77886200]
[60.05472565 -46.62918472]
[65.03334045 -32.47950745]
[70.01196289 -18.32982826]
[73.86647797 -15.48944950]
[75.96997833 -10.19195080]
[74.91502380 -3.64335346]
[79.43521881 10.65936947]
[90.64815521 20.46340942]
[87.42915344 35.95368195]
[91.94934082 50.25640488]
[96.46952820 64.55912781]
[100.98972321 78.86185455]
[105.50991058 93.16457367]
[108.10072327 94.79786682]
[110.15087128 97.41497803]
[111.29300690 100.81607819]
[111.23928833 104.66783142]
[109.82838440 108.53594971]
[113.41811371 123.10007477]
[118.51676178 130.69555664]
[116.94635773 137.92774963]
[120.30099487 152.54780579]
[123.65563965 167.16787720]
[134.28326416 178.88812256]
[129.58830261 193.02342224]
[132.94294739 207.64347839]
[136.29759216 222.26354980]
[139.65223694 236.88362122]
[143.00686646 251.50369263]
[146.71380615 266.03842163]
[150.77087402 280.47933960]
[154.82794189 294.92025757]
[158.88500977 309.36117554]
[162.94207764 323.80212402]
[167.11534119 338.20986938]
[171.40452576 352.58355713]
[175.69371033 366.95724487]
[179.98289490 381.33093262]
[184.27207947 395.70462036]
[188.67691040 410.04330444]
[193.19709778 424.34603882]
[197.71728516 438.64874268]
[202.23747253 452.95147705]
[206.75767517 467.25418091]
[212.33486938 474.50555420]
[211.23345947 481.82388306]
[215.52264404 496.19757080]
[219.81182861 510.57122803]
[224.10101318 524.94494629]
[228.39019775 539.31860352]
[232.67938232 553.69232178]
[236.96856689 568.06597900]
[241.83305359 582.25531006]
[247.26492310 596.23724365]
[252.69680786 610.21917725]
[258.12869263 624.20111084]
[263.56054688 638.18310547]
[278.59872437 642.00842285]
[288.49044800 653.96392822]
[289.43218994 669.45239258]
[281.06179810 682.51818848]
[266.59786987 688.13732910]
[251.60208130 684.14910889]
[241.84062195 672.08697510]
[241.06698608 656.58923340]
[249.57861328 643.61499023]
[244.14674377 629.63299561]
[238.71485901 615.65106201]
[233.28298950 601.66912842]
[227.85110474 587.68719482]
[219.44473267 600.11029053]
[204.50454712 601.44842529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[36 145]
[37 144]
[38 143]
[39 141]
[40 140]
[41 135]
[42 134]
[43 133]
[44 132]
[45 131]
[47 129]
[48 128]
[49 125]
[50 124]
[51 123]
[52 122]
[55 119]
[56 118]
[57 117]
[62 114]
[63 113]
[64 112]
[65 109]
[66 108]
[67 107]
[68 106]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
