%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AQP12B)
} def

/sequence { (\
GCCAGCUCCUGCUCUGUCCCCUCAGGUGUCCUGCAGGCACAGCAUCUCGGGGGGCCCAGGCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.072018045 ubox
1 17 0.021405015 ubox
1 55 0.012722839 ubox
1 61 0.877210787 ubox
2 11 0.061189483 ubox
2 16 0.023382485 ubox
2 51 0.004320140 ubox
2 52 0.006370927 ubox
2 54 0.012757333 ubox
2 60 0.879983877 ubox
3 11 0.058759253 ubox
3 16 0.014806582 ubox
3 50 0.004330854 ubox
3 51 0.006362279 ubox
3 53 0.012159708 ubox
3 59 0.877095744 ubox
4 10 0.074157599 ubox
4 13 0.799094270 ubox
4 15 0.025024607 ubox
5 9 0.073065615 ubox
5 12 0.858432704 ubox
5 14 0.021908147 ubox
5 17 0.005629115 ubox
5 55 0.293167441 ubox
5 61 0.080825116 ubox
6 11 0.858287921 ubox
6 16 0.005887034 ubox
6 51 0.003540230 ubox
6 52 0.035701412 ubox
6 53 0.072462763 ubox
6 54 0.288118923 ubox
6 60 0.064815888 ubox
7 51 0.035265296 ubox
7 52 0.092346514 ubox
7 53 0.282255455 ubox
7 59 0.029068972 ubox
7 60 0.004579517 ubox
8 50 0.035744786 ubox
8 51 0.108626581 ubox
8 52 0.277013152 ubox
8 53 0.008763293 ubox
8 54 0.009817219 ubox
8 59 0.016864764 ubox
8 60 0.314966387 ubox
9 49 0.035764855 ubox
9 50 0.121687862 ubox
9 51 0.271503695 ubox
9 52 0.008752073 ubox
9 53 0.009876252 ubox
9 59 0.323168121 ubox
9 60 0.007954351 ubox
10 44 0.110347524 ubox
10 49 0.132294043 ubox
10 50 0.242264205 ubox
10 51 0.007622452 ubox
10 52 0.009813322 ubox
10 58 0.325057381 ubox
10 59 0.007752082 ubox
10 63 0.032331675 ubox
11 43 0.153112441 ubox
11 48 0.141052220 ubox
11 55 0.007627320 ubox
11 57 0.323795387 ubox
11 61 0.222120695 ubox
11 62 0.054215654 ubox
12 42 0.151179573 ubox
12 50 0.020437373 ubox
12 54 0.007607473 ubox
12 59 0.046028999 ubox
12 60 0.222798536 ubox
13 41 0.139461759 ubox
13 49 0.021744416 ubox
13 53 0.003425553 ubox
13 58 0.064439129 ubox
13 59 0.122206421 ubox
13 60 0.110988857 ubox
14 25 0.011734781 ubox
14 36 0.003213006 ubox
14 42 0.252671069 ubox
14 54 0.010706634 ubox
14 59 0.289357216 ubox
14 60 0.027563040 ubox
15 24 0.011882939 ubox
15 35 0.003229415 ubox
15 39 0.131483200 ubox
15 41 0.257900671 ubox
15 44 0.051068119 ubox
15 53 0.004443905 ubox
15 58 0.302683143 ubox
15 59 0.027454417 ubox
16 23 0.011892618 ubox
16 34 0.003228683 ubox
16 38 0.132300885 ubox
16 40 0.262971910 ubox
16 43 0.052835299 ubox
16 55 0.901568323 ubox
16 57 0.273565603 ubox
16 61 0.003889552 ubox
17 37 0.086785961 ubox
17 39 0.257325232 ubox
17 42 0.051971225 ubox
17 52 0.003294249 ubox
17 53 0.010213773 ubox
17 54 0.903613992 ubox
17 60 0.003891636 ubox
18 36 0.080923583 ubox
18 37 0.071617256 ubox
18 51 0.004518295 ubox
18 52 0.039319738 ubox
18 53 0.908228818 ubox
18 54 0.284980262 ubox
19 36 0.070548747 ubox
19 37 0.187611219 ubox
19 50 0.004607128 ubox
19 51 0.039513846 ubox
19 52 0.908850687 ubox
19 53 0.285949192 ubox
19 54 0.015915896 ubox
20 36 0.184789910 ubox
20 37 0.204660909 ubox
20 49 0.004604311 ubox
20 50 0.039609046 ubox
20 51 0.908790054 ubox
20 52 0.286297838 ubox
20 53 0.015767296 ubox
21 36 0.209977730 ubox
21 37 0.003302757 ubox
21 49 0.039631116 ubox
21 50 0.908699802 ubox
21 51 0.286496943 ubox
21 52 0.015606530 ubox
22 35 0.213260496 ubox
22 49 0.885542808 ubox
22 50 0.286467308 ubox
22 51 0.015416461 ubox
23 33 0.299607687 ubox
23 49 0.312385455 ubox
23 50 0.015297689 ubox
24 32 0.299878400 ubox
24 47 0.938932056 ubox
25 31 0.299946742 ubox
25 32 0.003970297 ubox
25 46 0.953223333 ubox
25 47 0.017646256 ubox
25 48 0.009142907 ubox
25 56 0.003500617 ubox
26 30 0.295101768 ubox
26 31 0.004344405 ubox
26 40 0.067216454 ubox
26 43 0.012614793 ubox
26 45 0.950534928 ubox
26 46 0.017793878 ubox
26 47 0.007337262 ubox
26 55 0.003771984 ubox
27 39 0.069205030 ubox
27 41 0.036492183 ubox
27 42 0.008003187 ubox
27 44 0.950152593 ubox
27 54 0.003776834 ubox
28 38 0.070596947 ubox
28 40 0.047090042 ubox
28 43 0.947351102 ubox
28 45 0.011676170 ubox
29 37 0.065159546 ubox
29 39 0.053689051 ubox
29 42 0.830361495 ubox
29 44 0.012841746 ubox
29 52 0.003769780 ubox
30 36 0.067686922 ubox
30 37 0.445102759 ubox
30 51 0.003836530 ubox
31 36 0.443867212 ubox
31 37 0.048107335 ubox
31 42 0.444719706 ubox
31 50 0.003858946 ubox
32 36 0.043609677 ubox
32 39 0.613130174 ubox
32 41 0.524432475 ubox
32 44 0.010873215 ubox
32 49 0.003853479 ubox
33 38 0.618034144 ubox
33 40 0.530911478 ubox
33 43 0.014167920 ubox
33 48 0.003845576 ubox
34 42 0.014907709 ubox
35 47 0.003350523 ubox
36 46 0.003361618 ubox
37 43 0.004195895 ubox
38 42 0.004434767 ubox
46 50 0.003732946 ubox
49 57 0.007166099 ubox
50 56 0.007171908 ubox
51 55 0.007056103 ubox
53 62 0.065449359 ubox
54 61 0.069470135 ubox
55 60 0.069518829 ubox
1 61 0.9500000 lbox
2 60 0.9500000 lbox
3 59 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
showpage
end
%%EOF
