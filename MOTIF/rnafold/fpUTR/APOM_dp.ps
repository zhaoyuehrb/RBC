%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (APOM)
} def

/sequence { (\
AGAGUGGACUGAGCAGCCAGUAGGGGAGAGAGCAGUUAAGGCACACAGAGCACCAGCUCCCUCCUGCCUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.060036485 ubox
1 37 0.004675498 ubox
1 69 0.067810103 ubox
2 9 0.063271820 ubox
2 36 0.003993450 ubox
2 37 0.095280322 ubox
2 63 0.004705756 ubox
2 68 0.071647725 ubox
3 10 0.076849458 ubox
3 36 0.098753063 ubox
3 37 0.007537633 ubox
3 62 0.004737932 ubox
3 69 0.046025979 ubox
4 9 0.078243827 ubox
4 14 0.097732109 ubox
4 17 0.062588566 ubox
4 21 0.032007530 ubox
4 33 0.015675356 ubox
4 36 0.005800793 ubox
4 44 0.008970209 ubox
4 46 0.004303580 ubox
4 61 0.004641527 ubox
4 67 0.060027845 ubox
4 68 0.046275709 ubox
5 11 0.005505451 ubox
5 13 0.097262638 ubox
5 15 0.084321703 ubox
5 16 0.050456266 ubox
5 19 0.500225255 ubox
5 20 0.008690824 ubox
5 22 0.010822115 ubox
5 32 0.015584654 ubox
5 34 0.100699347 ubox
5 38 0.071950059 ubox
5 43 0.008984404 ubox
5 45 0.004320427 ubox
5 66 0.058607442 ubox
5 70 0.020678998 ubox
6 10 0.004794937 ubox
6 14 0.095724356 ubox
6 18 0.557014848 ubox
6 21 0.006296123 ubox
6 33 0.101234709 ubox
6 37 0.060274608 ubox
6 42 0.008981743 ubox
6 44 0.004324022 ubox
6 60 0.004006757 ubox
6 64 0.012901014 ubox
6 65 0.030028564 ubox
6 68 0.107435737 ubox
6 69 0.029845818 ubox
7 17 0.557773735 ubox
7 36 0.034525097 ubox
7 37 0.565952751 ubox
7 59 0.003323156 ubox
7 63 0.012900724 ubox
7 64 0.026721389 ubox
7 67 0.107302903 ubox
7 68 0.030635446 ubox
8 21 0.403438597 ubox
8 36 0.586794417 ubox
8 62 0.003926051 ubox
9 16 0.539462397 ubox
9 20 0.447820627 ubox
9 23 0.008866600 ubox
9 24 0.005883922 ubox
9 25 0.015375609 ubox
9 28 0.008779171 ubox
9 30 0.097641505 ubox
9 32 0.022957599 ubox
9 35 0.590851208 ubox
9 73 0.050239567 ubox
10 15 0.504804004 ubox
10 19 0.448645334 ubox
10 22 0.008679322 ubox
10 23 0.005924774 ubox
10 24 0.015427230 ubox
10 27 0.008742620 ubox
10 29 0.097005022 ubox
10 31 0.023054965 ubox
10 34 0.590534967 ubox
10 70 0.004445867 ubox
10 72 0.049046631 ubox
11 18 0.448036595 ubox
11 21 0.006770380 ubox
11 33 0.589046217 ubox
11 69 0.005448174 ubox
12 37 0.006132830 ubox
12 69 0.011233161 ubox
13 21 0.022164457 ubox
13 33 0.039494620 ubox
13 36 0.006826378 ubox
13 67 0.021148473 ubox
13 68 0.010674153 ubox
14 20 0.023038047 ubox
14 32 0.043425905 ubox
14 35 0.006910936 ubox
14 66 0.021625703 ubox
14 70 0.202035614 ubox
15 65 0.019598183 ubox
15 69 0.202739680 ubox
16 33 0.007297495 ubox
16 64 0.012303425 ubox
16 67 0.021704762 ubox
16 68 0.201677206 ubox
17 24 0.194324560 ubox
17 25 0.265648687 ubox
17 26 0.501132011 ubox
17 32 0.007270952 ubox
17 66 0.026547855 ubox
18 23 0.194715493 ubox
18 24 0.265766429 ubox
18 25 0.500509063 ubox
18 66 0.109499890 ubox
18 70 0.273336814 ubox
19 65 0.108116643 ubox
19 69 0.277011753 ubox
20 33 0.006034900 ubox
20 64 0.105881466 ubox
20 67 0.431513116 ubox
20 68 0.240018305 ubox
21 32 0.005953753 ubox
21 66 0.454096394 ubox
21 70 0.400345572 ubox
22 62 0.058069599 ubox
22 65 0.447521470 ubox
22 69 0.526475828 ubox
23 61 0.057190422 ubox
23 62 0.083293851 ubox
23 63 0.036771122 ubox
23 64 0.444802008 ubox
23 65 0.054916679 ubox
23 68 0.537633827 ubox
23 69 0.100271669 ubox
24 60 0.054885065 ubox
24 61 0.089996462 ubox
24 62 0.036993405 ubox
24 63 0.443393235 ubox
24 64 0.048027806 ubox
24 65 0.349005641 ubox
24 67 0.519013024 ubox
24 68 0.108565189 ubox
24 69 0.014309004 ubox
25 59 0.047786242 ubox
25 60 0.092807176 ubox
25 61 0.140783102 ubox
25 62 0.419329949 ubox
25 63 0.037237340 ubox
25 64 0.634527708 ubox
25 65 0.026042237 ubox
25 67 0.108078101 ubox
25 68 0.014971349 ubox
26 37 0.008012809 ubox
26 57 0.011307822 ubox
26 58 0.024198616 ubox
26 59 0.094117824 ubox
26 60 0.141046462 ubox
26 61 0.418171147 ubox
26 62 0.017385565 ubox
26 63 0.638737223 ubox
26 64 0.024745141 ubox
26 67 0.014844212 ubox
27 36 0.009192649 ubox
27 37 0.004064862 ubox
27 58 0.094939930 ubox
27 62 0.640802684 ubox
27 65 0.108456493 ubox
27 69 0.006377287 ubox
28 36 0.003891122 ubox
28 37 0.018358869 ubox
28 57 0.094215529 ubox
28 59 0.149085513 ubox
28 61 0.640790662 ubox
28 63 0.027893025 ubox
28 64 0.107967607 ubox
28 68 0.006492994 ubox
29 36 0.018829775 ubox
29 37 0.005776737 ubox
29 58 0.145878933 ubox
29 62 0.030962927 ubox
29 69 0.056522410 ubox
30 36 0.005479359 ubox
30 37 0.017418354 ubox
30 57 0.140623636 ubox
30 59 0.742652948 ubox
30 61 0.030418982 ubox
30 63 0.106893210 ubox
30 68 0.058015953 ubox
31 36 0.017761916 ubox
31 37 0.005781831 ubox
31 58 0.743949165 ubox
31 62 0.106748312 ubox
31 69 0.005519495 ubox
32 36 0.004292774 ubox
32 42 0.169497134 ubox
32 51 0.085079081 ubox
32 57 0.744420477 ubox
32 61 0.105472900 ubox
32 67 0.062095089 ubox
32 68 0.004008024 ubox
33 41 0.169614717 ubox
33 50 0.085187342 ubox
33 56 0.743458914 ubox
33 66 0.062309212 ubox
33 70 0.005586187 ubox
34 58 0.101207116 ubox
34 65 0.062285504 ubox
34 69 0.005002769 ubox
35 42 0.054958398 ubox
35 44 0.049716938 ubox
35 46 0.073773267 ubox
35 51 0.139232617 ubox
35 53 0.380454215 ubox
35 57 0.110248965 ubox
35 64 0.062214799 ubox
35 68 0.004287820 ubox
36 41 0.052396624 ubox
36 43 0.047054184 ubox
36 45 0.072856290 ubox
36 48 0.013705690 ubox
36 49 0.027084931 ubox
36 50 0.138595957 ubox
36 52 0.377088374 ubox
36 56 0.112392685 ubox
36 71 0.026423340 ubox
36 72 0.035514632 ubox
36 73 0.008185614 ubox
37 47 0.014002204 ubox
37 48 0.028153050 ubox
37 49 0.128511105 ubox
37 55 0.152560325 ubox
37 70 0.033365690 ubox
37 71 0.044243224 ubox
37 72 0.019422846 ubox
38 69 0.031351532 ubox
39 62 0.061829363 ubox
39 65 0.005971520 ubox
39 69 0.584444662 ubox
40 54 0.079605815 ubox
40 58 0.003975195 ubox
40 60 0.004332275 ubox
40 61 0.062745206 ubox
40 64 0.006215778 ubox
40 68 0.603559153 ubox
41 51 0.701682115 ubox
41 53 0.077191673 ubox
41 57 0.005074130 ubox
41 59 0.003542998 ubox
41 60 0.062765422 ubox
41 63 0.006219668 ubox
41 67 0.603652469 ubox
42 50 0.701796909 ubox
42 56 0.005239482 ubox
42 66 0.603585841 ubox
43 65 0.582238077 ubox
45 65 0.004075360 ubox
46 70 0.007526821 ubox
47 62 0.042866088 ubox
47 65 0.003269854 ubox
47 69 0.007572056 ubox
48 59 0.632975946 ubox
48 61 0.028814648 ubox
48 63 0.005849726 ubox
48 68 0.007560576 ubox
49 58 0.635397517 ubox
49 62 0.005652649 ubox
50 57 0.635964069 ubox
50 61 0.005210697 ubox
50 67 0.007558820 ubox
51 56 0.635111929 ubox
51 66 0.007557330 ubox
52 65 0.007359841 ubox
55 62 0.006836859 ubox
56 61 0.006823950 ubox
64 73 0.004278556 ubox
65 72 0.006292198 ubox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
39 69 0.9500000 lbox
40 68 0.9500000 lbox
41 67 0.9500000 lbox
42 66 0.9500000 lbox
43 65 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
51 56 0.9500000 lbox
showpage
end
%%EOF
