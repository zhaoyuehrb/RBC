%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCUCCAUUAACCGGCAAAAAGCAGCAGAACCUGGAAGUCCACGGGGAGCUUGGAUGCCAAAGGGAGGACGGCUGGGUCCUCUGGAGAGGACUACUCACUGGCAUAUUUCUGAGGUAUCUGUAGAAUAACCACAGCCUCAGAUACUGGGGACUUUACAGUCCCACAGAACCGUCCUCCCAGGAAGCUGAAUCCAGCAAGAACA\
) } def
/len { sequence length } bind def

/coor [
[-7.54005957 392.96453857]
[5.42547512 385.14318848]
[2.24715710 370.48376465]
[-0.93116117 355.82437134]
[-4.10947943 341.16494751]
[-7.28779745 326.50555420]
[-10.57780361 311.87078857]
[-13.97930622 297.26156616]
[-20.65665436 293.84643555]
[-17.67005539 308.54611206]
[-27.30047226 320.04632568]
[-42.29617691 319.68740845]
[-51.36537170 307.73962402]
[-47.67893600 293.19967651]
[-34.01135254 287.01620483]
[-40.68870163 283.60110474]
[-54.52490616 289.39413452]
[-68.36111450 295.18719482]
[-82.19731903 300.98022461]
[-88.53084564 317.28482056]
[-104.38391876 323.83706665]
[-119.76271820 317.03472900]
[-133.50897217 323.03811646]
[-147.25523376 329.04147339]
[-161.00148010 335.04486084]
[-161.42887878 343.96365356]
[-164.71501160 352.21923828]
[-170.47702026 358.92611694]
[-178.06817627 363.37484741]
[-186.65034485 365.10693359]
[-195.28657532 363.96209717]
[-203.04327393 360.09259033]
[-209.09126282 353.94360352]
[-223.25489807 358.88235474]
[-237.41854858 363.82110596]
[-251.58218384 368.75988770]
[-255.93196106 383.65481567]
[-268.22659302 393.12167358]
[-283.73855591 393.52026367]
[-296.50317383 384.69729614]
[-301.61218262 370.04544067]
[-297.10107422 355.19854736]
[-284.70443726 345.86563110]
[-269.18908691 345.63534546]
[-256.52093506 354.59625244]
[-242.35729980 349.65747070]
[-228.19366455 344.71871948]
[-214.03002930 339.77996826]
[-206.62031555 319.87359619]
[-186.65318298 311.83407593]
[-167.00485229 321.29861450]
[-153.25860596 315.29522705]
[-139.51234436 309.29187012]
[-125.76609039 303.28848267]
[-122.78656769 290.75009155]
[-112.98224640 282.08880615]
[-99.78524780 280.63565063]
[-87.99036407 287.14401245]
[-74.15415955 281.35098267]
[-60.31795120 275.55792236]
[-46.48174667 269.76489258]
[-44.18849564 250.97872925]
[-33.22950363 237.26562500]
[-17.98219681 231.83689880]
[-3.50395346 234.99414062]
[5.08927965 222.69958496]
[13.68251228 210.40501404]
[22.27574539 198.11044312]
[30.86897850 185.81588745]
[39.46221161 173.52131653]
[48.05544662 161.22674561]
[56.64867783 148.93218994]
[65.24191284 136.63761902]
[73.83514404 124.34305573]
[63.68741608 111.28382874]
[60.12045288 94.10408020]
[64.71653748 76.12751770]
[77.38912964 61.22227859]
[70.15480804 48.08208847]
[62.92048645 34.94189835]
[55.68616486 21.80170822]
[48.45184326 8.66152000]
[41.21752167 -4.47867012]
[33.98320007 -17.61886024]
[19.67840004 -25.63788605]
[19.74126816 -42.03691483]
[34.10712814 -49.94602585]
[47.99761581 -41.22901154]
[47.12338638 -24.85318184]
[54.35771179 -11.71299267]
[61.59203339 1.42719734]
[68.82635498 14.56738663]
[76.06067657 27.70757675]
[83.29499817 40.84776688]
[90.52931976 53.98795700]
[97.97357178 54.90071487]
[97.92459869 39.90079498]
[97.87562561 24.90087509]
[97.82665253 9.90095425]
[97.77767944 -5.09896612]
[94.47482300 -19.73081779]
[102.23741150 -32.56601334]
[116.72971344 -36.43553925]
[129.85714722 -29.17809868]
[134.28747559 -14.84728718]
[127.54766846 -1.44879174]
[123.87626648 13.09496403]
[120.20487213 27.63871956]
[116.53347015 42.18247604]
[112.86207581 56.72623062]
[120.30632782 57.63898849]
[130.50093079 46.63580704]
[140.69552612 35.63262177]
[150.89013672 24.62943649]
[161.08473206 13.62625217]
[171.27934265 2.62306809]
[181.47393799 -8.38011646]
[182.63140869 -13.47811508]
[185.35780334 -17.24375153]
[188.88183594 -19.30226898]
[192.39532471 -19.63980103]
[203.08250427 -30.16521645]
[213.76966858 -40.69063187]
[224.45684814 -51.21604919]
[221.19198608 -66.29399109]
[226.61857605 -80.73545074]
[239.00497437 -89.93221283]
[254.39875793 -90.94962311]
[267.88781738 -83.46303558]
[275.16781616 -69.86138153]
[273.91577148 -54.48490906]
[264.53118896 -42.24019241]
[250.00865173 -37.03447342]
[234.98225403 -40.52888107]
[224.29508972 -30.00346375]
[213.60791016 -19.47804642]
[202.92074585 -8.95263100]
[192.47712708 1.81448686]
[182.28253174 12.81767178]
[172.08792114 23.82085609]
[161.89332581 34.82403946]
[151.69871521 45.82722473]
[141.50411987 56.83041000]
[131.30950928 67.83359528]
[135.28009033 77.51123047]
[136.61784363 87.20793915]
[135.54208374 96.26576996]
[150.45669556 97.86402893]
[165.37129211 99.46228027]
[180.29766846 100.94676971]
[195.23490906 102.31739807]
[210.17216492 103.68801880]
[225.10940552 105.05864716]
[240.04666138 106.42927551]
[254.98390198 107.79989624]
[269.64111328 100.44472504]
[283.18884277 109.68544006]
[281.69036865 126.01598358]
[266.68719482 132.63688660]
[253.61328125 122.73714447]
[238.67602539 121.36652374]
[223.73878479 119.99589539]
[208.80152893 118.62526703]
[193.86428833 117.25464630]
[178.92703247 115.88401794]
[171.97619629 118.40427399]
[163.77304077 114.37689209]
[148.85842896 112.77863312]
[133.94381714 111.18037415]
[123.08325195 127.28273010]
[105.40466309 135.32667542]
[86.12970734 132.93627930]
[77.53647614 145.23085022]
[68.94324493 157.52542114]
[60.35000992 169.81997681]
[51.75677872 182.11454773]
[43.16354370 194.40911865]
[34.57031250 206.70367432]
[25.97707748 218.99824524]
[17.38384438 231.29281616]
[8.79061222 243.58737183]
[18.32913399 268.26898193]
[0.62993014 293.86004639]
[4.03143263 308.46929932]
[9.02721119 316.12133789]
[7.37161207 323.32720947]
[10.54993057 337.98663330]
[13.72824860 352.64605713]
[16.90656662 367.30545044]
[20.08488464 381.96487427]
[35.12545013 383.71420288]
[48.78199005 390.25466919]
[59.57314301 400.87680054]
[66.32837677 414.42837524]
[68.31491852 429.43945312]
[65.31729889 444.28170776]
[57.66066360 457.34521484]
[46.17555237 467.21289062]
[32.10778809 472.81436157]
[16.98333168 473.54208374]
[2.44277215 469.31704712]
[-9.93663883 460.59759521]
[-18.81207466 448.32952881]
[-23.22079659 433.84359741]
[-22.68457794 418.71115112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[7 184]
[8 183]
[16 61]
[17 60]
[18 59]
[19 58]
[22 54]
[23 53]
[24 52]
[25 51]
[33 48]
[34 47]
[35 46]
[36 45]
[65 181]
[66 180]
[67 179]
[68 178]
[69 177]
[70 176]
[71 175]
[72 174]
[73 173]
[74 172]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[111 144]
[112 143]
[113 142]
[114 141]
[115 140]
[116 139]
[117 138]
[121 137]
[122 136]
[123 135]
[124 134]
[147 169]
[148 168]
[149 167]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
