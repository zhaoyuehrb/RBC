%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGACUCACCCGUGAGCCAGCUCUCAAAGAAAGCAGCUUGCGUUGACAGCCUGGGGGCAGCAAGGAUGCAGUCUCCCAGGAGAGGAUGCACUCGGUGGUGGGAAGCCAGGCUGGAGGGGCCUGAGUGACCCUCUCCACAGGCGGGCAGGGCAGUGGGAGAGGUGGUGUGUGGAUACCUCUGUCUCACGCCCAGGGAUCAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[142.29341125 306.77325439]
[136.46098328 292.62258911]
[137.88430786 277.38342285]
[146.23631287 264.55755615]
[159.59779358 257.09231567]
[159.14256287 242.09924316]
[158.57356262 227.11003113]
[157.89083862 212.12557983]
[157.20812988 197.14112854]
[142.92247009 184.72598267]
[143.44554138 165.27313232]
[133.29072571 154.23323059]
[123.13591003 143.19331360]
[112.98109436 132.15339661]
[102.82627869 121.11347961]
[87.85391235 120.20343018]
[76.43674469 129.93215942]
[65.01956940 139.66088867]
[53.60240173 149.38961792]
[51.79900742 162.16317749]
[42.08668900 170.03114319]
[30.01685905 169.19839478]
[18.45335770 178.75274658]
[6.88985682 188.30708313]
[1.17962372 203.06187439]
[-13.56015205 205.20390320]
[-25.12365341 214.75823975]
[-33.48278809 229.50819397]
[-49.97034836 225.55894470]
[-50.73963547 208.62245178]
[-34.67799377 203.19474792]
[-23.11449432 193.64039612]
[-18.23135948 179.56900024]
[-2.66448522 176.74359131]
[8.89901543 167.18923950]
[20.46251678 157.63490295]
[25.69274139 140.88482666]
[43.87366867 137.97245789]
[55.29084015 128.24372864]
[66.70800781 118.51499176]
[78.12518311 108.78626251]
[76.19550323 93.91089630]
[62.67392349 87.41729736]
[49.15234375 80.92369843]
[35.63076401 74.43009186]
[22.10918427 67.93649292]
[10.98393726 76.41821289]
[-2.64545703 79.26481628]
[-16.10696602 75.97649384]
[-26.78650665 67.25049591]
[-32.63556671 54.83423615]
[-32.56402206 41.17562103]
[-45.98549652 34.47755814]
[-59.40697098 27.77949905]
[-72.82844543 21.08143997]
[-86.24992371 14.38337994]
[-99.67139435 7.68531990]
[-113.14331055 1.08929896]
[-126.66489410 -5.40430307]
[-140.18647766 -11.89790440]
[-155.97601318 -10.89739132]
[-164.09933472 -23.38181496]
[-177.62091064 -29.87541771]
[-191.14250183 -36.36901855]
[-207.44453430 -34.58692932]
[-216.91931152 -47.97201157]
[-209.82002258 -62.75483704]
[-193.44976807 -63.72810364]
[-184.64889526 -49.89059830]
[-171.12731934 -43.39699554]
[-157.60572815 -36.90339661]
[-142.78335571 -38.36837387]
[-133.69287109 -25.41948509]
[-120.17128754 -18.92588234]
[-106.64971161 -12.43228149]
[-99.25694275 -12.37037373]
[-92.97333527 -5.73615551]
[-79.55186462 0.96190476]
[-66.13038635 7.65996504]
[-52.70891190 14.35802460]
[-39.28743744 21.05608559]
[-25.86596107 27.75414467]
[-12.61124802 18.51410294]
[3.58783412 17.21090508]
[18.31845284 24.29453659]
[27.51988220 37.91733932]
[28.60278511 54.41491318]
[42.12436676 60.90851593]
[55.64594650 67.40211487]
[69.16752625 73.89572144]
[82.68910980 80.38932037]
[71.52500916 70.37119293]
[71.39151001 55.37178421]
[82.37553406 45.15653229]
[97.32586670 46.37612534]
[106.50904083 58.23653793]
[103.94654083 73.01562500]
[110.54256439 59.54370880]
[117.13858795 46.07179260]
[123.73460388 32.59987640]
[121.44972992 12.57341385]
[137.94424438 2.48639345]
[144.12837219 -11.17949867]
[150.31250000 -24.84539032]
[144.97682190 -39.47988129]
[151.44306946 -53.25094223]
[165.42770386 -58.24750900]
[171.61183167 -71.91339874]
[177.69207764 -85.62582397]
[183.66809082 -99.38399506]
[189.64410400 -113.14216614]
[195.62013245 -126.90033722]
[201.59614563 -140.65850830]
[207.57215881 -154.41667175]
[203.04800415 -169.80860901]
[212.37872314 -182.85917664]
[228.40658569 -183.55708313]
[238.83639526 -171.36698914]
[235.66728210 -155.64004517]
[221.33032227 -148.44065857]
[215.35430908 -134.68247986]
[209.37829590 -120.92431641]
[203.40228271 -107.16614532]
[197.42626953 -93.40798187]
[191.45024109 -79.64981079]
[191.66880798 -72.26001740]
[185.27772522 -65.72927856]
[179.09359741 -52.06338501]
[184.57078552 -38.25990677]
[178.49388123 -24.31265259]
[163.97837830 -18.66126633]
[157.79426575 -4.99537373]
[151.61013794 8.67051792]
[156.06068420 17.87290955]
[154.68066406 28.22302437]
[147.68655396 36.26953506]
[137.20652771 39.19589996]
[130.61050415 52.66781235]
[124.01448059 66.13973236]
[117.41845703 79.61164856]
[122.30352020 91.78456116]
[120.46323395 103.25913239]
[113.86619568 110.95866394]
[124.02101135 121.99858093]
[134.17582703 133.03849792]
[144.33064270 144.07841492]
[154.48545837 155.11831665]
[170.38237000 154.57618713]
[182.57080078 164.33973694]
[185.40420532 179.40303040]
[198.61621094 186.50532532]
[211.82823181 193.60763550]
[225.04023743 200.70993042]
[234.08383179 202.01762390]
[238.39767456 208.02159119]
[251.50038147 215.32359314]
[264.60308838 222.62557983]
[277.70578003 229.92756653]
[290.80850220 237.22956848]
[303.91119385 244.53155518]
[319.73236084 244.49082947]
[327.08328247 257.44509888]
[340.18600464 264.74710083]
[353.28869629 272.04907227]
[362.31140137 273.49386597]
[366.53363037 279.56262207]
[379.52401733 287.06262207]
[392.51440430 294.56262207]
[405.50476074 302.06262207]
[418.49514771 309.56262207]
[434.88537598 309.02154541]
[443.31814575 323.08639526]
[435.11859131 337.28845215]
[418.72167969 337.01788330]
[410.99514771 322.55300903]
[398.00476074 315.05300903]
[385.01440430 307.55300903]
[372.02401733 300.05300903]
[359.03363037 292.55300903]
[345.98672485 285.15179443]
[332.88400269 277.84979248]
[319.78131104 270.54782104]
[304.89733887 271.11080933]
[296.60922241 257.63424683]
[283.50650024 250.33227539]
[270.40380859 243.03027344]
[257.30108643 235.72828674]
[244.19837952 228.42630005]
[231.09567261 221.12429810]
[217.93794250 213.92195129]
[204.72592163 206.81964111]
[191.51391602 199.71734619]
[178.30189514 192.61503601]
[175.40695190 194.79058838]
[172.19258118 196.45840454]
[172.87530518 211.44285583]
[173.55801392 226.42730713]
[177.07571411 234.86073303]
[174.13565063 241.64399719]
[174.59088135 256.63708496]
[188.38064575 263.27792358]
[197.49542236 275.57345581]
[199.84068298 290.69821167]
[194.87751770 305.17666626]
[183.74641418 315.68176270]
[169.00521851 319.79949951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 200]
[6 199]
[7 197]
[8 196]
[9 195]
[11 147]
[12 146]
[13 145]
[14 144]
[15 143]
[16 41]
[17 40]
[18 39]
[19 38]
[22 36]
[23 35]
[24 34]
[26 32]
[27 31]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[52 82]
[53 81]
[54 80]
[55 79]
[56 78]
[57 77]
[58 75]
[59 74]
[60 73]
[62 71]
[63 70]
[64 69]
[97 140]
[98 139]
[99 138]
[100 137]
[102 133]
[103 132]
[104 131]
[107 128]
[108 127]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[150 193]
[151 192]
[152 191]
[153 190]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[162 182]
[163 181]
[164 180]
[166 179]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
