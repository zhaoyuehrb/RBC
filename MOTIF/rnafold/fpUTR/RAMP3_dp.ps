%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAMP3)
} def

/sequence { (\
GGGCGUCCCCCAGCCGCGCCCCCAGCGGGACCGAGCGUGACCCAGCUGCGGCCGGCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004079905 ubox
1 8 0.049190140 ubox
1 9 0.252435887 ubox
1 10 0.376910805 ubox
1 11 0.717657212 ubox
1 15 0.003309818 ubox
1 20 0.007305943 ubox
1 21 0.486571316 ubox
1 22 0.038731075 ubox
1 23 0.013919873 ubox
1 57 0.070185056 ubox
1 61 0.011706421 ubox
2 7 0.049239736 ubox
2 8 0.253528431 ubox
2 9 0.379644952 ubox
2 10 0.717279838 ubox
2 11 0.049456730 ubox
2 15 0.044180889 ubox
2 19 0.007156624 ubox
2 20 0.488729698 ubox
2 21 0.031912757 ubox
2 22 0.011532309 ubox
2 56 0.069980457 ubox
2 57 0.037235280 ubox
2 60 0.009692684 ubox
2 61 0.143917553 ubox
3 7 0.249726847 ubox
3 8 0.376687267 ubox
3 9 0.712623483 ubox
3 10 0.049211556 ubox
3 14 0.044308526 ubox
3 17 0.007659282 ubox
3 19 0.489308733 ubox
3 20 0.022745493 ubox
3 21 0.008667290 ubox
3 56 0.037331506 ubox
3 60 0.145728667 ubox
4 13 0.044373193 ubox
4 16 0.007836866 ubox
4 18 0.489867693 ubox
4 54 0.070139185 ubox
4 55 0.036794767 ubox
4 59 0.145840067 ubox
5 14 0.013171203 ubox
5 15 0.007503353 ubox
5 17 0.489287583 ubox
5 19 0.005757403 ubox
5 52 0.006420279 ubox
5 53 0.069953382 ubox
5 56 0.011660058 ubox
5 60 0.005939758 ubox
6 13 0.015132674 ubox
6 16 0.474433050 ubox
6 18 0.005585198 ubox
6 51 0.007486135 ubox
6 55 0.011053111 ubox
6 59 0.005855078 ubox
7 50 0.007442798 ubox
7 51 0.040734859 ubox
7 54 0.010916406 ubox
7 55 0.012959740 ubox
8 50 0.039945002 ubox
8 51 0.050881445 ubox
8 54 0.012882499 ubox
8 55 0.033362029 ubox
9 50 0.051462718 ubox
9 51 0.045325449 ubox
9 54 0.033360040 ubox
9 55 0.019289137 ubox
10 50 0.045450149 ubox
10 54 0.019005701 ubox
10 55 0.044322467 ubox
11 48 0.079803963 ubox
11 54 0.044663865 ubox
12 47 0.079898729 ubox
13 46 0.079925077 ubox
13 52 0.060252516 ubox
13 56 0.862544958 ubox
13 60 0.012426691 ubox
14 28 0.007205227 ubox
14 45 0.079897543 ubox
14 51 0.060281958 ubox
14 55 0.864566657 ubox
14 59 0.012090694 ubox
15 27 0.009146213 ubox
15 33 0.003461869 ubox
15 37 0.006170409 ubox
15 39 0.079467284 ubox
15 50 0.060279703 ubox
15 54 0.864574517 ubox
16 26 0.009911949 ubox
16 32 0.003467118 ubox
16 36 0.006194426 ubox
16 38 0.079667840 ubox
16 49 0.060264807 ubox
16 52 0.003744709 ubox
16 53 0.864052648 ubox
16 56 0.011125024 ubox
16 60 0.034309059 ubox
17 25 0.009913179 ubox
17 27 0.010162166 ubox
17 35 0.006152337 ubox
17 37 0.079705926 ubox
17 48 0.059196503 ubox
17 50 0.003576354 ubox
17 51 0.004574746 ubox
17 54 0.007430661 ubox
17 55 0.010508204 ubox
17 59 0.034231154 ubox
18 26 0.010844398 ubox
18 32 0.010911419 ubox
18 36 0.079716856 ubox
18 46 0.019301983 ubox
18 47 0.017571875 ubox
18 49 0.004014127 ubox
18 52 0.862688819 ubox
18 53 0.008832357 ubox
18 56 0.040337976 ubox
18 60 0.010852197 ubox
19 25 0.010832519 ubox
19 29 0.029389055 ubox
19 35 0.079620022 ubox
19 45 0.019715757 ubox
19 48 0.003669140 ubox
19 51 0.846775529 ubox
19 55 0.040485645 ubox
19 59 0.010860573 ubox
20 28 0.029650076 ubox
20 29 0.083958810 ubox
20 50 0.829269770 ubox
20 51 0.172105434 ubox
20 54 0.040226340 ubox
21 27 0.029584163 ubox
21 28 0.084040665 ubox
21 29 0.035960458 ubox
21 50 0.237001563 ubox
21 51 0.049249483 ubox
22 27 0.083820602 ubox
22 28 0.036083108 ubox
22 29 0.008568133 ubox
22 50 0.056256291 ubox
22 55 0.006340954 ubox
23 27 0.035879509 ubox
23 28 0.008572989 ubox
23 39 0.005877043 ubox
23 48 0.862736699 ubox
23 54 0.006357345 ubox
24 38 0.005476633 ubox
24 47 0.865437813 ubox
25 36 0.006251537 ubox
25 38 0.017966971 ubox
25 46 0.865947593 ubox
25 49 0.003199166 ubox
25 56 0.485001006 ubox
25 60 0.055782988 ubox
26 35 0.006256702 ubox
26 37 0.018179249 ubox
26 45 0.865361327 ubox
26 48 0.003199503 ubox
26 54 0.017164998 ubox
26 55 0.485891169 ubox
26 59 0.055686545 ubox
27 36 0.018201251 ubox
27 42 0.047394359 ubox
27 43 0.833222732 ubox
27 53 0.018368263 ubox
27 57 0.013944341 ubox
28 41 0.048084633 ubox
28 42 0.836363140 ubox
28 43 0.217410379 ubox
28 52 0.017433276 ubox
28 53 0.486367266 ubox
28 56 0.013370027 ubox
28 57 0.054320089 ubox
29 41 0.834019252 ubox
29 42 0.218076589 ubox
29 52 0.486604865 ubox
29 56 0.054535305 ubox
30 38 0.456628622 ubox
31 37 0.486734779 ubox
31 51 0.487210542 ubox
31 55 0.054315179 ubox
32 39 0.465836435 ubox
32 48 0.003474459 ubox
32 50 0.487304825 ubox
32 54 0.054320520 ubox
33 38 0.332338516 ubox
33 49 0.485154478 ubox
33 53 0.054255950 ubox
34 47 0.488013812 ubox
35 46 0.490147176 ubox
35 49 0.010025464 ubox
35 52 0.026496583 ubox
36 45 0.490093332 ubox
36 48 0.010169775 ubox
36 50 0.048086955 ubox
36 51 0.022026491 ubox
37 46 0.012872434 ubox
37 47 0.003514086 ubox
37 49 0.050266178 ubox
38 44 0.112673523 ubox
38 45 0.012756991 ubox
38 48 0.049765026 ubox
38 50 0.006542481 ubox
39 43 0.115609311 ubox
39 47 0.039220099 ubox
39 49 0.007326484 ubox
45 60 0.005183352 ubox
46 59 0.005195632 ubox
47 58 0.005178725 ubox
48 56 0.003588500 ubox
48 57 0.003795303 ubox
49 55 0.005030508 ubox
50 61 0.017175056 ubox
51 60 0.017501920 ubox
52 59 0.017470377 ubox
54 61 0.009301793 ubox
55 60 0.009367239 ubox
1 21 0.9500000 lbox
2 20 0.9500000 lbox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
showpage
end
%%EOF
