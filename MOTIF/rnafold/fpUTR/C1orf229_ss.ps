%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGCUGGGGCCUCCCUGCGAGGCUGUCAGCGGCCGAGGUGGGGGCCCUUGCCGGGGUGAGGAGCCGAUCGUCCACCGGAUCAGGCCCCCUGCAGCAGCCCGCCUGGAGCCCGAGCAUGGCCGGGCGGGGAAGGGGCGGCGGCACCGGAAUUGCUCCGCCCAGCUAAGGCCGGGGCCGUGGCUCCUGUGCAAG\
) } def
/len { sequence length } bind def

/coor [
[107.76087189 128.45814514]
[101.38229370 135.02671814]
[93.32849121 147.68121338]
[85.27468872 160.33570862]
[77.22088623 172.99021912]
[69.16708374 185.64471436]
[61.11328125 198.29920959]
[53.05947876 210.95370483]
[45.10840225 223.67298889]
[37.26057053 236.45623779]
[29.41273689 249.23950195]
[21.56490707 262.02273560]
[13.71707439 274.80599976]
[5.86924314 287.58926392]
[8.18835258 303.46380615]
[-2.88166428 315.07562256]
[-18.84883690 313.51712036]
[-27.46451759 299.98382568]
[-22.11949348 284.85736084]
[-6.91400909 279.74142456]
[0.93382245 266.95816040]
[8.78165436 254.17491150]
[16.62948608 241.39166260]
[24.47731781 228.60841370]
[32.32514954 215.82516479]
[33.14659119 208.46948242]
[40.40498352 202.89990234]
[48.45878601 190.24540710]
[56.51258850 177.59091187]
[64.56639099 164.93641663]
[72.62019348 152.28190613]
[80.67399597 139.62741089]
[88.72779846 126.97292328]
[87.04197693 119.66484070]
[77.71692657 131.41403198]
[62.71696472 131.44908142]
[53.33710480 119.74359894]
[56.64039612 105.11184692]
[70.13945770 98.57155609]
[83.67034149 105.04868317]
[81.98452759 97.74060822]
[69.20127106 89.89277649]
[56.41802216 82.04494476]
[43.63476944 74.19711304]
[30.85151672 66.34928131]
[18.06826401 58.50144958]
[5.28501225 50.65361786]
[-8.21131229 57.85059357]
[-23.39765549 57.32926941]
[-36.19897461 49.32973099]
[-43.23036957 36.08528137]
[-42.69190216 21.19986534]
[-55.47515488 13.35203266]
[-68.25840759 5.50420141]
[-81.04166412 -2.34362984]
[-93.88803864 -10.08770084]
[-106.79669189 -17.72750282]
[-119.76678467 -25.26253700]
[-132.79745483 -32.69230652]
[-145.82814026 -40.12207794]
[-159.91345215 -33.61180115]
[-175.12876892 -36.65703583]
[-185.62351990 -48.08682251]
[-187.36222839 -63.50617981]
[-179.67634583 -76.98604584]
[-165.52124023 -83.34313965]
[-150.33984375 -80.13302612]
[-139.96971130 -68.59006500]
[-138.39836121 -53.15275192]
[-125.36769104 -45.72298050]
[-112.33701324 -38.29321289]
[-104.95859528 -37.71039200]
[-99.15689087 -30.63615990]
[-86.24823761 -22.99635696]
[-78.88021851 -22.29413605]
[-73.19383240 -15.12688255]
[-60.41057587 -7.27905083]
[-47.62732315 0.56878078]
[-34.84407043 8.41661263]
[-21.81382370 1.20008957]
[-6.82117319 1.47653317]
[6.10553837 9.27182007]
[13.44295883 22.57817459]
[13.13284397 37.87036514]
[25.91609573 45.71819687]
[38.69934845 53.56602859]
[51.48260117 61.41386032]
[64.26585388 69.26168823]
[77.04910278 77.10951996]
[89.83235931 84.95735168]
[104.52609253 87.97299194]
[119.36706543 85.79456329]
[134.20803833 83.61613464]
[149.04901123 81.43770599]
[151.94209290 73.07379150]
[157.38973999 66.19106293]
[164.74337769 61.53198624]
[173.15248108 59.57884979]
[181.66285706 60.50421906]
[189.51069641 47.72096634]
[197.35852051 34.93771362]
[205.20635986 22.15446091]
[213.05418396 9.37120819]
[220.90200806 -3.41204381]
[228.74984741 -16.19529533]
[236.59767151 -28.97854805]
[244.44551086 -41.76180267]
[244.58389282 -47.00830078]
[246.53378296 -51.24720383]
[249.60446167 -53.95559311]
[252.99769592 -54.96219635]
[261.45706177 -67.34925842]
[258.28491211 -82.83192444]
[267.05935669 -95.97667694]
[282.57470703 -98.98496246]
[295.62594604 -90.07202148]
[298.47003174 -74.52574158]
[289.41958618 -61.56946182]
[273.84411621 -58.88990402]
[265.38476562 -46.50284195]
[257.22875977 -33.91397095]
[249.38093567 -21.13071632]
[241.53309631 -8.34746456]
[233.68527222 4.43578768]
[225.83743286 17.21903992]
[217.98960876 30.00229263]
[210.14176941 42.78554535]
[202.29394531 55.56879807]
[194.44610596 68.35205078]
[198.41639709 74.43931580]
[200.50495911 81.40035248]
[200.54154968 88.66786194]
[214.13044739 95.01936340]
[227.71936035 101.37086487]
[241.30827332 107.72236633]
[254.89717102 114.07386780]
[268.48608398 120.42536926]
[284.26428223 119.25939178]
[292.51800537 131.65797424]
[306.10693359 138.00947571]
[319.69583130 144.36097717]
[333.28472900 150.71247864]
[346.87365723 157.06398010]
[362.65182495 155.89801025]
[370.90557861 168.29658508]
[384.49450684 174.64808655]
[398.08340454 180.99958801]
[411.67230225 187.35108948]
[426.37121582 182.19555664]
[440.06182861 188.83045959]
[444.88626099 202.87541199]
[458.47515869 209.22691345]
[472.11505127 215.46818542]
[485.80502319 221.59880066]
[499.49502563 227.72943115]
[514.17059326 221.86407471]
[528.66210938 228.17056274]
[534.37200928 242.90734863]
[527.91265869 257.33135986]
[513.11633301 262.88510132]
[498.76138306 256.27362061]
[493.36437988 241.41940308]
[479.67440796 235.28877258]
[465.98443604 229.15815735]
[458.58428955 229.29386902]
[452.12365723 222.81582642]
[438.53475952 216.46432495]
[424.66503906 221.77156067]
[410.79348755 215.52381897]
[405.32080078 200.94000244]
[391.73190308 194.58850098]
[378.14300537 188.23699951]
[364.55407715 181.88549805]
[349.74786377 183.50578308]
[340.52215576 170.65289307]
[326.93322754 164.30139160]
[313.34432983 157.94989014]
[299.75543213 151.59838867]
[286.16650391 145.24688721]
[271.36029053 146.86715698]
[262.13458252 134.01428223]
[248.54566956 127.66277313]
[234.95677185 121.31127167]
[221.36785889 114.95977020]
[207.77894592 108.60826874]
[194.19004822 102.25676727]
[171.38926697 110.86000061]
[151.22743225 96.27867889]
[136.38647461 98.45710754]
[121.54549408 100.63553619]
[106.70452118 102.81396484]
[110.40895844 107.49687958]
[112.11988831 113.82350922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 33]
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[14 20]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[52 79]
[53 78]
[54 77]
[55 76]
[56 74]
[57 73]
[58 71]
[59 70]
[60 69]
[91 191]
[92 190]
[93 189]
[94 188]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[107 121]
[111 120]
[112 119]
[132 186]
[133 185]
[134 184]
[135 183]
[136 182]
[137 181]
[139 179]
[140 178]
[141 177]
[142 176]
[143 175]
[145 173]
[146 172]
[147 171]
[148 170]
[151 167]
[152 166]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
