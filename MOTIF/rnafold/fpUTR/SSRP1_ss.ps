%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACGGCUUCCGGUGGCGGGACGCGGGGCCGCGCACGCGGGAAAAGCUUCCCCGGUGUCCCCCCAUCCCCCUCCCCGCGCCCCCCCCGCGUCCCCCCAGCGCGCCCACCUCUCGCGCCGGGGCCCUCGCGAGGCCGCAGCCUGAGGAGAUUCCCAACCUGCUGAGCAUCCGCACACCCACUCAGGAGUUGGGGCCCAGCUCCCAGUUUACUUGGUUUCCCUUGUGCAGCCUGGGGCUCUGCCCAGGCCACCACAG\
GCAGGGGUCGAC\
) } def
/len { sequence length } bind def

/coor [
[79.39573669 140.08900452]
[67.42121124 131.14941406]
[59.02750397 118.78611755]
[55.13719177 104.35798645]
[40.17427826 103.30384827]
[25.21136475 102.24970245]
[10.24845123 101.19555664]
[-4.71446276 100.14141846]
[-19.67737579 99.08727264]
[-34.64028931 98.03312683]
[-49.60912323 97.06670380]
[-64.58336639 96.18803406]
[-79.55760956 95.30935669]
[-93.78732300 102.22498322]
[-106.03950500 93.75542450]
[-121.01374054 92.87675476]
[-135.98799133 91.99807739]
[-161.84088135 106.87574768]
[-176.34483337 110.70139313]
[-190.84877014 114.52703094]
[-205.35272217 118.35267639]
[-219.85667419 122.17831421]
[-234.36061096 126.00395966]
[-248.86456299 129.82960510]
[-263.36849976 133.65524292]
[-277.87246704 137.48088074]
[-292.37640381 141.30651855]
[-306.88034058 145.13217163]
[-315.42446899 160.41596985]
[-332.05554199 164.69052124]
[-346.33633423 155.77868652]
[-360.79443359 159.77407837]
[-375.25253296 163.76948547]
[-389.71063232 167.76487732]
[-390.64913940 187.19035339]
[-400.49359131 204.88912964]
[-417.82339478 216.85043335]
[-439.45462036 220.01603699]
[-461.01791382 213.03048706]
[-474.15234375 220.27528381]
[-487.28674316 227.52006531]
[-500.42117310 234.76486206]
[-513.55560303 242.00964355]
[-521.56323242 256.32083130]
[-537.96228027 256.27102661]
[-545.88287354 241.91146851]
[-537.17687988 228.01403809]
[-520.80041504 228.87522888]
[-507.66595459 221.63043213]
[-494.53155518 214.38565063]
[-481.39712524 207.14085388]
[-468.26269531 199.89607239]
[-470.68041992 192.79644775]
[-477.93362427 171.49760437]
[-492.75979614 173.77462769]
[-507.58596802 176.05165100]
[-522.41210938 178.32867432]
[-531.55822754 191.21757507]
[-547.15313721 193.78170776]
[-559.94464111 184.49981689]
[-562.34375000 168.87869263]
[-552.92712402 156.18605042]
[-537.28149414 153.95222473]
[-524.68914795 163.50250244]
[-509.86297607 161.22547913]
[-495.03680420 158.94845581]
[-480.21066284 156.67143250]
[-474.52355957 145.99661255]
[-466.59579468 137.14567566]
[-456.96072388 130.56253052]
[-446.23217773 126.54420471]
[-435.06597900 125.22839355]
[-424.11987305 126.59086609]
[-414.01492310 130.45249939]
[-405.30010986 136.49533081]
[-398.42285156 144.28623962]
[-393.70605469 153.30676270]
[-379.24792480 149.31137085]
[-364.78982544 145.31597900]
[-350.33172607 141.32058716]
[-345.61907959 129.34965515]
[-334.71514893 122.16249847]
[-321.46728516 122.56278992]
[-310.70599365 130.62821960]
[-296.20205688 126.80257416]
[-281.69808960 122.97693634]
[-267.19415283 119.15129089]
[-252.69020081 115.32565308]
[-238.18626404 111.50000763]
[-223.68231201 107.67436981]
[-209.17835999 103.84872437]
[-194.67442322 100.02308655]
[-180.17047119 96.19744110]
[-165.66651917 92.37180328]
[-160.49952698 78.28982544]
[-169.08715820 65.99134827]
[-177.67478943 53.69287491]
[-191.91931152 46.80780792]
[-192.86199951 31.94306374]
[-201.44963074 19.64458656]
[-210.03726196 7.34611082]
[-218.62489319 -4.95236588]
[-227.21253967 -17.25084114]
[-242.62426758 -16.55639076]
[-255.95338440 -24.32414055]
[-262.94662476 -38.07543182]
[-261.37249756 -53.42227554]
[-251.73326111 -65.46755219]
[-237.10476685 -70.36765289]
[-222.15493774 -66.55898285]
[-211.65419006 -55.25686264]
[-208.95327759 -40.06776810]
[-214.91406250 -25.83847809]
[-206.32641602 -13.54000092]
[-197.73878479 -1.24152458]
[-189.15115356 11.05695152]
[-180.56352234 23.35542870]
[-166.93324280 29.36082458]
[-165.37631226 45.10523605]
[-156.78868103 57.40371323]
[-148.20104980 69.70219421]
[-135.10931396 77.02383423]
[-120.13507080 77.90251160]
[-105.16082764 78.78118134]
[-92.00217438 71.80271149]
[-78.67893219 80.33511353]
[-63.70469284 81.21379089]
[-48.73044968 82.09246063]
[-41.89286423 79.35657501]
[-33.58614731 83.07021332]
[-18.62323380 84.12435913]
[-3.66031981 85.17850494]
[11.30259323 86.23264313]
[26.26550674 87.28678894]
[41.22842026 88.34093475]
[56.19133377 89.39507294]
[64.21570587 72.59291840]
[78.34666443 60.46777725]
[96.17276001 55.08879852]
[114.65197754 57.37391281]
[130.63082886 66.93315887]
[142.51325989 57.77850723]
[154.39570618 48.62385178]
[159.26185608 40.93533707]
[166.47151184 39.43250656]
[178.46044922 30.41776657]
[190.44937134 21.40302849]
[202.43830872 12.38829136]
[204.23762512 -7.65455723]
[219.98748779 -19.68123245]
[239.19259644 -16.24661827]
[250.85716248 -25.67731094]
[262.52172852 -35.10800552]
[274.18627930 -44.53869629]
[285.85086060 -53.96939087]
[297.51541138 -63.40008163]
[302.19998169 -71.20056152]
[309.37243652 -72.87199402]
[321.14672852 -82.16530609]
[327.18557739 -96.78868103]
[341.96957397 -98.60049438]
[353.74386597 -107.89380646]
[365.51818848 -117.18711853]
[377.29248047 -126.48043060]
[389.06680298 -135.77374268]
[384.89840698 -150.39198303]
[386.64645386 -165.49208069]
[394.04434204 -178.77136230]
[405.96398926 -188.20484924]
[420.58770752 -192.35400391]
[435.68548584 -190.58610535]
[448.95501709 -183.17074585]
[458.37283325 -171.23870850]
[462.50274658 -156.60955811]
[460.71496582 -141.51411438]
[453.28216553 -128.25433350]
[441.33776855 -118.85223389]
[426.70318604 -114.74156952]
[411.61010742 -116.54918671]
[398.36010742 -123.99942780]
[386.58581543 -114.70611572]
[374.81149292 -105.41280365]
[363.03717041 -96.11949158]
[351.26287842 -86.82617950]
[346.06622314 -72.86752319]
[330.44006348 -70.39099884]
[318.66574097 -61.09768295]
[306.94610596 -51.73551941]
[295.28155518 -42.30482864]
[283.61697388 -32.87413406]
[271.95242310 -23.44344139]
[260.28784180 -14.01274872]
[248.62329102 -4.58205509]
[250.32659912 5.48045588]
[247.69610596 15.42463779]
[241.13821411 23.45360756]
[231.77511597 28.08819008]
[221.25305176 28.43919182]
[211.45304871 24.37722397]
[199.46411133 33.39196014]
[187.47517395 42.40670013]
[175.48625183 51.42143631]
[163.55035400 60.50629044]
[151.66792297 69.66094208]
[139.78547668 78.81559753]
[143.20387268 87.15130615]
[144.89617920 96.00034332]
[144.79476929 105.00917816]
[142.90373230 113.81788635]
[139.29858398 122.07453918]
[134.12336731 129.44926453]
[143.69015503 141.00248718]
[153.25692749 152.55569458]
[162.82369995 164.10890198]
[168.82725525 166.74243164]
[172.12817383 171.31512451]
[172.47549438 176.04693604]
[181.76879883 187.82124329]
[191.06211853 199.59555054]
[200.35542297 211.36985779]
[209.64874268 223.14418030]
[219.14764404 234.75326538]
[228.84918213 246.19354248]
[238.55073547 257.63381958]
[248.25228882 269.07409668]
[265.72601318 270.19918823]
[276.74914551 283.36563110]
[274.86004639 300.09265137]
[284.69503784 311.41839600]
[294.52999878 322.74417114]
[304.36499023 334.06994629]
[314.19998169 345.39572144]
[324.03497314 356.72149658]
[333.86996460 368.04724121]
[349.65078735 368.90777588]
[360.13870239 380.73059082]
[359.11141968 396.50146484]
[347.17834473 406.86380005]
[331.41925049 405.66979980]
[321.18365479 393.62786865]
[322.54418945 377.88223267]
[312.70919800 366.55645752]
[302.87420654 355.23071289]
[293.03921509 343.90493774]
[283.20425415 332.57916260]
[273.36926270 321.25338745]
[263.53427124 309.92761230]
[250.70100403 310.83270264]
[239.51707458 304.08947754]
[234.17027283 291.96191406]
[236.81201172 278.77563477]
[227.11045837 267.33535767]
[217.40890503 255.89508057]
[207.70736694 244.45480347]
[204.27682495 243.79476929]
[200.98905945 241.46075439]
[198.61830139 237.53474426]
[197.87443542 232.43748474]
[188.58111572 220.66317749]
[179.28781128 208.88887024]
[169.99449158 197.11456299]
[160.70118713 185.34025574]
[151.27049255 173.67568970]
[141.70370483 162.12246704]
[132.13693237 150.56925964]
[122.57015228 139.01603699]
[108.57372284 144.25103760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 136]
[5 135]
[6 134]
[7 133]
[8 132]
[9 131]
[10 130]
[11 128]
[12 127]
[13 126]
[15 124]
[16 123]
[17 122]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[25 87]
[26 86]
[27 85]
[28 84]
[31 80]
[32 79]
[33 78]
[34 77]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[54 67]
[55 66]
[56 65]
[57 64]
[95 121]
[96 120]
[97 119]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[141 205]
[142 204]
[143 203]
[145 202]
[146 201]
[147 200]
[148 199]
[151 193]
[152 192]
[153 191]
[154 190]
[155 189]
[156 188]
[158 187]
[159 186]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[211 266]
[212 265]
[213 264]
[214 263]
[217 262]
[218 261]
[219 260]
[220 259]
[221 258]
[222 254]
[223 253]
[224 252]
[225 251]
[228 247]
[229 246]
[230 245]
[231 244]
[232 243]
[233 242]
[234 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
