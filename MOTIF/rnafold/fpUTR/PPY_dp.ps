%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPY)
} def

/sequence { (\
GUCACGCUAGAAGAGCCGUCUGCUGACUGCACGUGUGUGUGCACACUCGUGUGCAUGGCUGUGAACUGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.022784023 ubox
1 23 0.004228132 ubox
1 27 0.284126919 ubox
1 54 0.004153245 ubox
1 59 0.040142253 ubox
1 66 0.314934711 ubox
2 6 0.022493697 ubox
2 11 0.037011422 ubox
2 14 0.004790763 ubox
2 22 0.004076062 ubox
2 26 0.284795127 ubox
2 58 0.040186296 ubox
2 64 0.448008192 ubox
2 65 0.224140399 ubox
2 69 0.036901467 ubox
2 70 0.041288391 ubox
3 10 0.039543499 ubox
3 13 0.007815163 ubox
3 25 0.284955111 ubox
3 35 0.005266724 ubox
3 37 0.008011585 ubox
3 39 0.005949152 ubox
3 41 0.003491996 ubox
3 53 0.005030396 ubox
3 57 0.040193016 ubox
3 61 0.007910057 ubox
3 63 0.521263990 ubox
3 68 0.046842817 ubox
3 69 0.047497262 ubox
4 19 0.016042173 ubox
4 24 0.282854286 ubox
4 34 0.005383643 ubox
4 36 0.008299217 ubox
4 38 0.007027265 ubox
4 40 0.003758300 ubox
4 52 0.005139439 ubox
4 56 0.037781523 ubox
4 60 0.007789302 ubox
4 62 0.521153206 ubox
4 67 0.045549494 ubox
5 18 0.019572225 ubox
5 22 0.011124028 ubox
5 33 0.005395793 ubox
5 35 0.008339565 ubox
5 37 0.007216966 ubox
5 39 0.004005993 ubox
5 51 0.005171351 ubox
5 53 0.005546497 ubox
5 61 0.520770238 ubox
5 63 0.076340897 ubox
5 68 0.049075447 ubox
6 16 0.117709776 ubox
6 17 0.015790670 ubox
6 21 0.003867535 ubox
6 23 0.282679883 ubox
6 30 0.008097788 ubox
6 32 0.005202173 ubox
6 34 0.008350014 ubox
6 36 0.007414922 ubox
6 38 0.004499415 ubox
6 50 0.005134891 ubox
6 52 0.005334518 ubox
6 54 0.030573220 ubox
6 59 0.344872225 ubox
6 60 0.194468381 ubox
6 62 0.077375708 ubox
6 67 0.043157987 ubox
7 13 0.091804661 ubox
7 15 0.119269024 ubox
7 22 0.278300047 ubox
7 29 0.008149290 ubox
7 33 0.008341721 ubox
7 35 0.007446202 ubox
7 37 0.004601574 ubox
7 49 0.005128061 ubox
7 51 0.005338499 ubox
7 53 0.030516677 ubox
7 58 0.352770880 ubox
7 61 0.077568084 ubox
7 69 0.784338986 ubox
8 12 0.083108196 ubox
8 14 0.116767767 ubox
8 22 0.057448842 ubox
8 25 0.048609262 ubox
8 29 0.005953482 ubox
8 35 0.003348026 ubox
8 37 0.004034118 ubox
8 57 0.344793286 ubox
8 61 0.003352073 ubox
8 63 0.007232908 ubox
8 68 0.787664137 ubox
9 21 0.257838840 ubox
9 24 0.069511772 ubox
9 28 0.015721620 ubox
9 34 0.005401842 ubox
9 36 0.008145834 ubox
9 52 0.003693560 ubox
9 56 0.296554279 ubox
9 60 0.010818764 ubox
9 62 0.006087736 ubox
9 67 0.787777827 ubox
10 20 0.263438510 ubox
10 23 0.078554481 ubox
10 27 0.022905495 ubox
10 48 0.006531414 ubox
10 59 0.008863022 ubox
10 66 0.785219294 ubox
11 19 0.254106355 ubox
11 47 0.006189029 ubox
12 21 0.141446608 ubox
12 24 0.011824411 ubox
12 28 0.023279412 ubox
12 60 0.006957427 ubox
12 67 0.014791365 ubox
13 20 0.148872122 ubox
13 23 0.012045106 ubox
13 27 0.025078318 ubox
13 48 0.015181573 ubox
13 59 0.004035907 ubox
13 66 0.015444672 ubox
14 19 0.145118320 ubox
14 21 0.013744734 ubox
14 24 0.109988540 ubox
14 28 0.009156419 ubox
14 47 0.015007581 ubox
14 60 0.844148365 ubox
15 20 0.013661406 ubox
15 23 0.113270110 ubox
15 27 0.008576249 ubox
15 30 0.153106607 ubox
15 34 0.003200083 ubox
15 36 0.026479653 ubox
15 38 0.009399983 ubox
15 46 0.013152019 ubox
15 50 0.010798842 ubox
15 52 0.014536320 ubox
15 54 0.039090001 ubox
15 59 0.868435692 ubox
15 62 0.135144062 ubox
16 22 0.113060341 ubox
16 29 0.154587629 ubox
16 35 0.027831967 ubox
16 37 0.010081078 ubox
16 49 0.010614333 ubox
16 51 0.014413685 ubox
16 53 0.038985118 ubox
16 58 0.868495848 ubox
16 61 0.135499497 ubox
16 69 0.012795778 ubox
17 25 0.009298983 ubox
17 29 0.010962010 ubox
17 33 0.032395255 ubox
17 35 0.012541217 ubox
17 49 0.013920806 ubox
17 53 0.005216832 ubox
17 57 0.868057056 ubox
17 61 0.005510238 ubox
17 63 0.004404703 ubox
17 68 0.013155735 ubox
18 24 0.007873092 ubox
18 27 0.641569953 ubox
18 28 0.004452439 ubox
18 32 0.033940925 ubox
18 34 0.012635414 ubox
18 48 0.013407860 ubox
18 54 0.011836521 ubox
18 56 0.615583121 ubox
18 59 0.149245666 ubox
18 62 0.003724347 ubox
18 66 0.008762364 ubox
18 67 0.007754076 ubox
19 26 0.643368800 ubox
19 31 0.024140734 ubox
19 33 0.010800148 ubox
19 53 0.011841486 ubox
19 55 0.411255607 ubox
19 58 0.149222438 ubox
19 64 0.010905799 ubox
19 65 0.007129947 ubox
20 25 0.644001969 ubox
20 57 0.149095058 ubox
20 58 0.003878315 ubox
20 63 0.012531521 ubox
21 31 0.049905049 ubox
21 43 0.003726744 ubox
21 45 0.011954675 ubox
21 51 0.014848680 ubox
21 53 0.143631117 ubox
21 55 0.517867213 ubox
21 57 0.003659947 ubox
22 30 0.063910833 ubox
22 34 0.004854131 ubox
22 36 0.003766986 ubox
22 38 0.005550726 ubox
22 42 0.003944664 ubox
22 44 0.012032567 ubox
22 50 0.017808450 ubox
22 52 0.165467136 ubox
22 54 0.649921718 ubox
22 56 0.006351055 ubox
22 59 0.065956041 ubox
23 29 0.064107042 ubox
23 33 0.004966544 ubox
23 35 0.003865386 ubox
23 37 0.005748223 ubox
23 41 0.003941038 ubox
23 49 0.017928224 ubox
23 51 0.166052786 ubox
23 53 0.649493449 ubox
23 58 0.066086184 ubox
23 69 0.004384958 ubox
24 31 0.005651656 ubox
24 43 0.004221383 ubox
24 45 0.008642491 ubox
24 49 0.159679879 ubox
24 51 0.006699445 ubox
24 53 0.014204845 ubox
24 55 0.046855538 ubox
24 57 0.065149226 ubox
24 68 0.004344036 ubox
25 30 0.006160377 ubox
25 32 0.003508506 ubox
25 42 0.004174276 ubox
25 44 0.008771124 ubox
25 48 0.171279504 ubox
25 50 0.003767945 ubox
25 52 0.017459195 ubox
25 54 0.059998280 ubox
25 56 0.040453659 ubox
26 34 0.008284573 ubox
26 36 0.008290612 ubox
26 38 0.006174231 ubox
26 40 0.003777097 ubox
26 47 0.170014093 ubox
26 50 0.059530511 ubox
26 52 0.025439444 ubox
27 33 0.008449867 ubox
27 35 0.008541073 ubox
27 37 0.006362151 ubox
27 39 0.004023116 ubox
27 49 0.059758832 ubox
27 51 0.024323991 ubox
27 58 0.004097840 ubox
27 69 0.005610635 ubox
28 37 0.017454515 ubox
28 39 0.011037232 ubox
28 41 0.006192762 ubox
28 43 0.189849076 ubox
28 45 0.010775591 ubox
28 49 0.010622548 ubox
28 51 0.006042981 ubox
28 53 0.183418921 ubox
28 55 0.500724833 ubox
28 57 0.003655433 ubox
28 63 0.039299957 ubox
28 68 0.008577081 ubox
29 36 0.038474921 ubox
29 38 0.044819344 ubox
29 40 0.109513344 ubox
29 42 0.195162019 ubox
29 44 0.005344959 ubox
29 48 0.021863859 ubox
29 50 0.020241732 ubox
29 52 0.715968680 ubox
29 54 0.558352759 ubox
29 59 0.015334620 ubox
29 62 0.057861121 ubox
29 67 0.009267029 ubox
30 35 0.039432770 ubox
30 37 0.046378752 ubox
30 39 0.123183009 ubox
30 41 0.195251083 ubox
30 49 0.020758029 ubox
30 51 0.721496889 ubox
30 53 0.558105736 ubox
30 58 0.015346724 ubox
30 61 0.058900558 ubox
30 63 0.271949548 ubox
30 68 0.004519346 ubox
31 36 0.038826843 ubox
31 38 0.132793600 ubox
31 40 0.196266733 ubox
31 50 0.723185042 ubox
31 52 0.556524164 ubox
31 60 0.058535569 ubox
31 62 0.273376908 ubox
31 67 0.004268411 ubox
32 37 0.134024080 ubox
32 39 0.196620993 ubox
32 49 0.724251713 ubox
32 51 0.555302454 ubox
32 57 0.017330843 ubox
32 61 0.273480998 ubox
32 63 0.006223544 ubox
33 38 0.127400381 ubox
33 44 0.016697551 ubox
33 46 0.234575424 ubox
33 48 0.717564185 ubox
33 50 0.484759178 ubox
33 56 0.016598493 ubox
33 59 0.114441361 ubox
33 60 0.238868474 ubox
33 62 0.005896996 ubox
33 66 0.004558101 ubox
34 43 0.017766035 ubox
34 45 0.251518229 ubox
34 49 0.465760537 ubox
34 55 0.016190791 ubox
34 57 0.006663854 ubox
34 58 0.112726184 ubox
34 65 0.004536187 ubox
35 42 0.017805495 ubox
35 44 0.253557979 ubox
35 46 0.722250087 ubox
35 48 0.486845163 ubox
35 54 0.015847258 ubox
35 56 0.009034362 ubox
35 59 0.210637135 ubox
35 60 0.004049054 ubox
36 41 0.017076266 ubox
36 43 0.253412015 ubox
36 45 0.724254676 ubox
36 49 0.007223734 ubox
36 53 0.015588356 ubox
36 55 0.009811252 ubox
36 57 0.157320309 ubox
36 58 0.197455192 ubox
37 42 0.251911160 ubox
37 44 0.724096441 ubox
37 46 0.494215647 ubox
37 48 0.008079422 ubox
37 54 0.009907879 ubox
37 56 0.229965817 ubox
37 59 0.020736416 ubox
38 43 0.677393693 ubox
38 45 0.495193265 ubox
38 53 0.009545220 ubox
38 55 0.248716097 ubox
38 57 0.085352742 ubox
38 58 0.016936601 ubox
39 44 0.492254192 ubox
39 46 0.010835047 ubox
39 54 0.252749316 ubox
39 56 0.203819609 ubox
40 45 0.010178416 ubox
40 53 0.252262310 ubox
40 55 0.218740088 ubox
41 52 0.253224646 ubox
41 54 0.248983200 ubox
42 51 0.253799548 ubox
42 53 0.249076651 ubox
42 63 0.004234605 ubox
43 50 0.253635864 ubox
43 52 0.249060707 ubox
43 62 0.004526156 ubox
44 49 0.253193088 ubox
44 51 0.249027140 ubox
44 53 0.069910346 ubox
44 61 0.004648316 ubox
44 63 0.003419203 ubox
45 50 0.207219057 ubox
45 52 0.070498439 ubox
45 60 0.004631288 ubox
45 62 0.003435024 ubox
46 51 0.070562864 ubox
46 61 0.003426073 ubox
46 69 0.004480883 ubox
47 58 0.004868776 ubox
47 68 0.004368134 ubox
48 57 0.005943052 ubox
48 68 0.003318705 ubox
49 56 0.005836247 ubox
49 66 0.005635390 ubox
50 55 0.005594227 ubox
50 65 0.005621282 ubox
51 66 0.004130842 ubox
52 63 0.004956539 ubox
52 65 0.003803354 ubox
53 59 0.033001036 ubox
53 62 0.020300704 ubox
54 58 0.032850846 ubox
54 61 0.021174353 ubox
54 63 0.020447278 ubox
54 68 0.003261400 ubox
55 60 0.018503670 ubox
55 62 0.020299134 ubox
56 61 0.019352294 ubox
56 68 0.005182295 ubox
57 67 0.009399810 ubox
58 66 0.009739450 ubox
59 69 0.013275638 ubox
60 68 0.013182216 ubox
61 67 0.009586564 ubox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
showpage
end
%%EOF
