%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGCAGCGGCGGGGGUUGUUCCGGCUGCCUUUCACUGAGGGGACCCGCCAGUUUCUAACUCAGUGGCGUUUGCCCUGAUUCCCGGGGCCUGGCUUUCAGCGUAGCAAUUCUGCCGGCGAAGAAGGUGAGCGCAGUGCUGUGUGGCAGCAGAGCUCCUUAGGACGAGGAGCAGCGGGACGAGGAAGGGCAGACUGGUGAAAUCGCAAACUGGGCGUCUGUUCCGGCGCCGGACCCCUAUUUGCAAAGGUCC\
) } def
/len { sequence length } bind def

/coor [
[137.71093750 174.11351013]
[129.73045349 161.41264343]
[121.74997711 148.71177673]
[113.76949310 136.01092529]
[106.10951996 138.06651306]
[98.19099426 138.51119995]
[90.34902954 137.32618713]
[83.84077454 150.84071350]
[77.33251953 164.35525513]
[70.82425690 177.86978149]
[64.31600189 191.38432312]
[65.29940033 207.17492676]
[52.80617905 215.28471375]
[46.29792023 228.79925537]
[39.78966522 242.31378174]
[43.70984268 257.87051392]
[33.87704468 270.54708862]
[17.83415413 270.61914062]
[7.88790226 258.03137207]
[11.66820240 242.44007874]
[26.27513313 235.80552673]
[32.78339005 222.29100037]
[39.29164505 208.77645874]
[37.84273529 193.95249939]
[50.80147171 184.87606812]
[57.30972672 171.36152649]
[63.81798172 157.84700012]
[70.32624054 144.33245850]
[76.83449554 130.81793213]
[73.82894897 128.31008911]
[71.09318542 125.51041412]
[68.65541077 122.44776154]
[66.54075623 119.15370941]
[52.32184601 123.93100739]
[38.10293579 128.70831299]
[23.88402748 133.48561096]
[9.66511726 138.26290894]
[-4.55379343 143.04020691]
[-18.77270317 147.81750488]
[-32.99161530 152.59480286]
[-47.11870956 157.63714600]
[-61.14904404 162.94276428]
[-75.17938232 168.24838257]
[-89.20972443 173.55401611]
[-103.24005890 178.85963440]
[-109.51088715 193.36660767]
[-124.23359680 199.11268616]
[-138.67346191 192.68882751]
[-144.26356506 177.90618896]
[-137.68739319 163.53506470]
[-122.84648895 158.10156250]
[-108.54568481 164.82929993]
[-94.51534271 159.52366638]
[-80.48500824 154.21804810]
[-66.45466614 148.91242981]
[-52.42432785 143.60681152]
[-50.65164566 140.58767700]
[-47.34164429 138.26722717]
[-42.83396530 137.35292053]
[-37.76891327 138.37590027]
[-23.55000305 133.59860229]
[-9.33109283 128.82128906]
[4.88781691 124.04399872]
[19.10672760 119.26669312]
[33.32563782 114.48939514]
[47.54454803 109.71209717]
[61.76345825 104.93479919]
[70.15953064 75.58827972]
[97.26052856 61.54378128]
[99.12568665 46.66019440]
[100.99083710 31.77660561]
[102.85599518 16.89301872]
[104.72115326 2.00943017]
[106.58630371 -12.87415791]
[108.45146179 -27.75774574]
[110.31661987 -42.64133453]
[112.18177032 -57.52492142]
[97.66558838 -70.04215240]
[93.68950653 -88.63884735]
[101.69023132 -105.72466278]
[118.25372314 -114.43809509]
[119.56105804 -129.38101196]
[120.86839294 -144.32392883]
[122.17572784 -159.26686096]
[123.48306274 -174.20977783]
[100.65998840 -182.45802307]
[87.33396149 -209.31803894]
[97.25456238 -243.71174622]
[91.60080719 -257.60543823]
[85.86054993 -271.46365356]
[80.03403473 -285.28579712]
[67.54382324 -294.99688721]
[69.72985077 -309.73019409]
[63.90332794 -323.55233765]
[58.07680511 -337.37448120]
[52.25028229 -351.19662476]
[46.42376328 -365.01876831]
[40.59724045 -378.84091187]
[26.23367500 -384.86798096]
[20.52165413 -398.96862793]
[26.35607910 -412.62493896]
[20.52955627 -426.44708252]
[14.70303440 -440.26922607]
[-0.23281108 -451.06048584]
[2.65843177 -468.38104248]
[-3.33994865 -482.12948608]
[-9.33832932 -495.87789917]
[-22.84716988 -505.17538452]
[-21.28017616 -521.49951172]
[-6.24933624 -528.05737305]
[6.78290987 -518.10284424]
[4.41010475 -501.87628174]
[10.40848541 -488.12786865]
[16.40686607 -474.37942505]
[27.53540802 -469.68038940]
[32.65275192 -458.29736328]
[28.52517700 -446.09573364]
[34.35169983 -432.27359009]
[40.17822266 -418.45144653]
[54.02813721 -413.09277344]
[60.13396072 -399.15817261]
[54.41938400 -384.66741943]
[60.24590302 -370.84527588]
[66.07242584 -357.02313232]
[71.89894867 -343.20098877]
[77.72547150 -329.37884521]
[83.55199432 -315.55670166]
[95.62544250 -306.83425903]
[93.85617828 -291.11230469]
[99.68269348 -277.29016113]
[105.16231537 -272.36050415]
[105.49450684 -263.25921631]
[111.14826965 -249.36550903]
[118.64695740 -249.22526550]
[133.64433289 -248.94477844]
[141.14302063 -248.80453491]
[147.31233215 -262.47711182]
[153.48162842 -276.14971924]
[159.65093994 -289.82229614]
[165.82025146 -303.49487305]
[171.98954773 -317.16748047]
[172.99270630 -334.09170532]
[189.53324890 -337.81286621]
[197.68785095 -322.94885254]
[185.66213989 -310.99816895]
[179.49284363 -297.32559204]
[173.32353210 -283.65298462]
[167.15422058 -269.98040771]
[160.98490906 -256.30783081]
[154.81561279 -242.63522339]
[160.73718262 -238.03251648]
[172.58033752 -228.82710266]
[178.50190735 -224.22438049]
[190.22938538 -233.57673645]
[201.95684814 -242.92907715]
[213.68432617 -252.28143311]
[225.41180420 -261.63378906]
[237.13926697 -270.98611450]
[248.86674500 -280.33847046]
[252.08459473 -296.05551147]
[266.44381714 -303.21041870]
[280.92919922 -296.31457520]
[284.42883301 -280.65786743]
[274.25808716 -268.25079346]
[258.21908569 -268.61099243]
[246.49162292 -259.25863647]
[234.76414490 -249.90629578]
[223.03666687 -240.55395508]
[211.30920410 -231.20161438]
[199.58172607 -221.84925842]
[187.85426331 -212.49691772]
[177.55128479 -186.25410461]
[157.97779846 -172.69116211]
[138.42597961 -172.90243530]
[137.11865234 -157.95951843]
[135.81130981 -143.01660156]
[134.50398254 -128.07368469]
[133.19664001 -113.13076019]
[142.81022644 -107.55941772]
[149.69168091 -98.77038574]
[152.82258606 -88.00261688]
[151.71662903 -76.79209900]
[146.49473572 -66.75281525]
[137.87313843 -59.34436417]
[127.06536102 -55.65976715]
[125.20020294 -40.77618027]
[123.33505249 -25.89259148]
[121.46989441 -11.00900269]
[119.60473633 3.87458563]
[117.73958588 18.75817299]
[115.87442780 33.64176178]
[114.00926971 48.52534866]
[112.14411926 63.40893936]
[119.38645172 66.67507172]
[125.80554962 71.35634613]
[131.12881470 77.25395966]
[135.13020325 84.11748505]
[137.63978577 91.65545654]
[138.55101013 99.54778290]
[137.82518005 107.45930481]
[135.49310303 115.05407715]
[131.65382385 122.00957489]
[126.47035980 128.03044128]
[134.45083618 140.73130798]
[142.43132019 153.43215942]
[150.41180420 166.13302612]
[158.71186829 164.29399109]
[167.57159424 165.49647522]
[175.86131287 169.88780212]
[182.42556763 177.19334412]
[186.24047852 186.72009277]
[186.56402588 197.41845703]
[197.17062378 208.02507019]
[207.77722168 218.63166809]
[218.38381958 229.23826599]
[228.99043274 239.84486389]
[239.59703064 250.45147705]
[255.39932251 250.20083618]
[266.69216919 261.25738525]
[266.77572632 277.06146240]
[255.60040283 288.23678589]
[239.79634094 288.15322876]
[228.73979187 276.86038208]
[228.99043274 261.05807495]
[218.38381958 250.45147705]
[207.77722168 239.84486389]
[197.17062378 229.23826599]
[186.56402588 218.63166809]
[175.95741272 208.02507019]
[163.06153870 215.68643188]
[167.30383301 230.07402039]
[171.54614258 244.46162415]
[175.78843689 258.84921265]
[180.03073120 273.23681641]
[195.10206604 275.64877319]
[207.62945557 284.36813354]
[215.12557983 297.66366577]
[216.10206604 312.89550781]
[210.36505127 327.03939819]
[199.05360413 337.28701782]
[184.41363525 341.60372925]
[169.35191345 339.13244629]
[156.85894775 330.36380005]
[149.41525269 317.03887939]
[148.49874878 301.80328369]
[154.29142761 287.68212891]
[165.64312744 277.47909546]
[161.40083313 263.09152222]
[157.15853882 248.70391846]
[152.91624451 234.31631470]
[148.67395020 219.92872620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[13 23]
[14 22]
[15 21]
[33 67]
[34 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[69 193]
[70 192]
[71 191]
[72 190]
[73 189]
[74 188]
[75 187]
[76 186]
[77 185]
[81 178]
[82 177]
[83 176]
[84 175]
[85 174]
[88 133]
[89 132]
[90 130]
[91 129]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[101 119]
[102 118]
[103 117]
[105 114]
[106 113]
[107 112]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[141 145]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
[212 229]
[213 228]
[214 227]
[215 226]
[216 225]
[217 224]
[230 251]
[231 250]
[232 249]
[233 248]
[234 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
