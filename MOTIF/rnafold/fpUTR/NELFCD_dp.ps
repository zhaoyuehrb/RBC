%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NELFCD)
} def

/sequence { (\
GAGGCGCGCGGCCGCGCGUGCGCCCGCCCGCCCGUCCCCGCCUCGCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.063722362 ubox
1 44 0.974393159 ubox
2 35 0.061004305 ubox
2 43 0.975113916 ubox
3 13 0.003723155 ubox
3 24 0.046061596 ubox
3 32 0.161370864 ubox
3 33 0.020834109 ubox
3 36 0.011852524 ubox
3 37 0.004985521 ubox
3 42 0.975305985 ubox
3 43 0.003226724 ubox
4 12 0.003727797 ubox
4 21 0.005212683 ubox
4 23 0.046199753 ubox
4 31 0.162453103 ubox
4 32 0.015753598 ubox
4 35 0.012099955 ubox
4 36 0.004966912 ubox
4 41 0.975235304 ubox
4 42 0.004679552 ubox
4 46 0.015351176 ubox
4 48 0.137987638 ubox
5 11 0.003727286 ubox
5 20 0.005264406 ubox
5 22 0.046223393 ubox
5 30 0.163093801 ubox
5 34 0.013872648 ubox
5 40 0.975137877 ubox
5 45 0.015363887 ubox
5 47 0.139583272 ubox
6 17 0.004922859 ubox
6 19 0.008850478 ubox
6 21 0.046278738 ubox
6 27 0.013326831 ubox
6 29 0.163148445 ubox
6 31 0.048698183 ubox
6 33 0.017293947 ubox
6 35 0.059983309 ubox
6 39 0.969256300 ubox
6 41 0.012333568 ubox
6 44 0.015003602 ubox
6 46 0.139644349 ubox
6 48 0.004188646 ubox
7 16 0.005700605 ubox
7 18 0.011234251 ubox
7 20 0.046264734 ubox
7 26 0.014489561 ubox
7 30 0.053032309 ubox
7 34 0.102469425 ubox
7 40 0.015735828 ubox
7 45 0.139638760 ubox
7 47 0.004219322 ubox
8 15 0.006301988 ubox
8 17 0.011714221 ubox
8 19 0.046170741 ubox
8 25 0.014496325 ubox
8 27 0.174123053 ubox
8 29 0.043665928 ubox
8 31 0.061118911 ubox
8 33 0.098629215 ubox
8 35 0.897940058 ubox
8 39 0.026825642 ubox
8 41 0.035181169 ubox
8 44 0.135878118 ubox
8 46 0.004216377 ubox
9 14 0.006294314 ubox
9 16 0.011726647 ubox
9 18 0.046184039 ubox
9 26 0.174866921 ubox
9 30 0.062352095 ubox
9 34 0.903560330 ubox
9 40 0.037969877 ubox
9 45 0.004208879 ubox
10 15 0.011695457 ubox
10 17 0.045722021 ubox
10 24 0.019098473 ubox
10 25 0.174463835 ubox
10 28 0.043896464 ubox
10 29 0.060995908 ubox
10 32 0.119381095 ubox
10 33 0.901077836 ubox
10 36 0.052786528 ubox
10 37 0.332486592 ubox
10 38 0.039223890 ubox
10 39 0.038100390 ubox
10 42 0.135160944 ubox
10 44 0.003321987 ubox
11 17 0.005744805 ubox
11 23 0.022697639 ubox
11 24 0.173815073 ubox
11 27 0.045889014 ubox
11 28 0.059478959 ubox
11 31 0.137232836 ubox
11 32 0.897040766 ubox
11 35 0.053319681 ubox
11 36 0.332333225 ubox
11 37 0.038522739 ubox
11 38 0.038074683 ubox
11 41 0.135218061 ubox
12 16 0.007931799 ubox
12 22 0.018446787 ubox
12 26 0.046641156 ubox
12 30 0.122001403 ubox
12 34 0.048027595 ubox
12 40 0.130950412 ubox
13 20 0.003707212 ubox
13 22 0.175334123 ubox
13 26 0.063779135 ubox
13 30 0.825241142 ubox
13 34 0.350875650 ubox
13 40 0.033486985 ubox
14 21 0.176612536 ubox
14 23 0.044679501 ubox
14 25 0.064236157 ubox
14 27 0.056735358 ubox
14 29 0.830837306 ubox
14 31 0.309350787 ubox
14 33 0.352913613 ubox
14 35 0.022759914 ubox
14 39 0.047130534 ubox
14 48 0.003697055 ubox
15 20 0.176361805 ubox
15 22 0.044930900 ubox
15 26 0.057137849 ubox
15 30 0.310702159 ubox
15 34 0.023250176 ubox
15 47 0.003724100 ubox
16 21 0.043777668 ubox
16 23 0.068310349 ubox
16 25 0.052635285 ubox
16 27 0.834407369 ubox
16 29 0.307021906 ubox
16 31 0.394281440 ubox
16 33 0.016933344 ubox
16 35 0.088254163 ubox
16 46 0.003725214 ubox
17 22 0.068952882 ubox
17 26 0.835379263 ubox
17 30 0.394671897 ubox
17 34 0.089506527 ubox
17 45 0.003725189 ubox
18 25 0.819555569 ubox
18 27 0.296137194 ubox
18 29 0.393966516 ubox
18 31 0.011012104 ubox
18 33 0.089438879 ubox
18 44 0.003718629 ubox
19 26 0.295670689 ubox
19 30 0.010887405 ubox
20 25 0.285496600 ubox
20 27 0.402974421 ubox
20 29 0.009283041 ubox
20 31 0.090686125 ubox
20 41 0.003736797 ubox
21 26 0.402813683 ubox
21 30 0.090780891 ubox
21 40 0.003744206 ubox
22 29 0.088036583 ubox
22 31 0.006666624 ubox
22 39 0.003720773 ubox
23 30 0.006685212 ubox
25 34 0.004207656 ubox
25 47 0.039917694 ubox
26 33 0.004174050 ubox
26 35 0.004332515 ubox
26 44 0.003202621 ubox
26 46 0.041393565 ubox
26 48 0.009059092 ubox
27 34 0.004509943 ubox
27 45 0.041318365 ubox
27 47 0.009070635 ubox
29 40 0.005021498 ubox
29 45 0.008756662 ubox
29 47 0.011994195 ubox
30 39 0.006107139 ubox
30 41 0.039486158 ubox
30 44 0.008728319 ubox
30 46 0.012608266 ubox
30 48 0.007087383 ubox
31 40 0.039514749 ubox
31 45 0.012569514 ubox
31 47 0.007129879 ubox
33 40 0.022068196 ubox
33 45 0.014907414 ubox
33 47 0.030457356 ubox
34 39 0.024065568 ubox
34 41 0.015467971 ubox
34 44 0.015311815 ubox
34 46 0.031550055 ubox
34 48 0.007886894 ubox
35 40 0.014644008 ubox
35 45 0.030427978 ubox
35 47 0.006097663 ubox
39 45 0.010839595 ubox
39 47 0.140100302 ubox
40 44 0.010676524 ubox
40 46 0.145270237 ubox
40 48 0.027541099 ubox
41 45 0.144226791 ubox
41 47 0.027724137 ubox
1 44 0.9500000 lbox
2 43 0.9500000 lbox
3 42 0.9500000 lbox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
showpage
end
%%EOF
