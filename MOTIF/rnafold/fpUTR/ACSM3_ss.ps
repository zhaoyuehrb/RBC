%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUUGUCAGACUGCUCCUCCCUCUUCUUUAGACUGCCACGAGGAAAAAGCAGAUGUGAGAACUCAAGGUUCAGGGCUGCUCUUCUAAGAAACAAGUCUGCCAUAAUCUCCAUCUGUGUUGGAAUCUGUUAACUAAUGAACUGGUCUCUGUGCAAAUCCUGAGUGCUAAAGCUUCCAACAAGACUG\
) } def
/len { sequence length } bind def

/coor [
[312.48364258 180.97802734]
[310.05081177 168.69317627]
[295.72427368 164.24903870]
[281.39773560 159.80490112]
[267.07119751 155.36077881]
[252.74464417 150.91664124]
[238.41810608 146.47250366]
[224.09156799 142.02836609]
[209.69277954 137.82424927]
[195.22573853 133.86132812]
[180.75869751 129.89839172]
[166.29165649 125.93546295]
[151.82463074 121.97252655]
[137.35758972 118.00959778]
[118.31528473 137.20867920]
[91.48641205 140.58883667]
[68.27701569 126.71305084]
[55.24505615 134.14057922]
[42.21310043 141.56809998]
[29.18114662 148.99562073]
[16.14919090 156.42314148]
[19.64204979 171.11929321]
[18.85166550 186.20411682]
[13.84210968 200.45477295]
[5.01948309 212.71600342]
[-6.90100193 221.99386597]
[-20.95300484 227.53623962]
[-35.99739456 228.89382935]
[-50.81458664 225.95657349]
[-64.20342255 218.96258545]
[-75.07852173 208.47885132]
[-82.55829620 195.35520935]
[-86.03639221 180.65556335]
[-85.23085785 165.57154846]
[-80.20698547 151.32594299]
[-71.37204742 139.07356262]
[-59.44224548 129.80769348]
[-45.38468170 124.27943420]
[-30.33893585 122.93696594]
[-15.52470016 125.88909912]
[-2.14289927 132.89653015]
[8.72166538 143.39118958]
[21.75362206 135.96366882]
[34.78557587 128.53614807]
[47.81753159 121.10861969]
[60.84948730 113.68109131]
[58.92702866 105.73984528]
[58.59881592 97.57579803]
[59.87759018 89.50585175]
[62.71371841 81.84323883]
[50.63766861 72.94554138]
[38.56161880 64.04784393]
[26.48556709 55.15014648]
[14.40951538 46.25245285]
[3.10158038 52.53561401]
[-9.69714165 54.06283951]
[-22.07586479 50.64179611]
[-32.19999313 42.81624222]
[-38.58302307 31.77996254]
[-40.30474854 19.19473267]
[-37.14377594 6.94015741]
[-48.91576767 -2.35609102]
[-60.68775940 -11.65233898]
[-72.45974731 -20.94858742]
[-84.23174286 -30.24483681]
[-100.40950012 -35.31597137]
[-100.01499176 -52.26533127]
[-83.61881256 -56.57829285]
[-74.93549347 -42.01682663]
[-63.16350174 -32.72057724]
[-51.39151001 -23.42432976]
[-39.61951828 -14.12808228]
[-27.84752846 -4.83183336]
[-12.11020184 -11.77533245]
[5.06580830 -9.79358101]
[18.95051384 0.65823412]
[25.67453766 16.78001022]
[23.30721092 34.17639923]
[35.38326263 43.07409668]
[47.45931244 51.97179413]
[59.53536224 60.86948776]
[71.61141205 69.76718903]
[77.21036530 65.35079956]
[83.48312378 61.95886993]
[90.24423218 59.69168854]
[97.29379272 58.61629105]
[104.42336273 58.76447296]
[111.42214203 60.13185120]
[118.08321381 62.67799377]
[124.20962524 66.32762146]
[129.62023926 70.97283936]
[134.15507507 76.47628021]
[137.68006897 82.67524719]
[140.09098816 89.38644409]
[141.31654358 96.41145325]
[141.32051086 103.54256439]
[155.78755188 107.50549316]
[170.25459290 111.46842194]
[184.72163391 115.43135071]
[199.18867493 119.39428711]
[213.65570068 123.35721588]
[220.16891479 122.04734802]
[225.55026245 123.95092773]
[228.53570557 127.70183563]
[242.86224365 132.14596558]
[257.18878174 136.59010315]
[271.51531982 141.03424072]
[285.84185791 145.47836304]
[300.16839600 149.92250061]
[314.49493408 154.36663818]
[328.67117310 143.08854675]
[346.62182617 142.56689453]
[361.17239380 152.82185364]
[366.62020874 169.60397339]
[381.08724976 173.56690979]
[395.55429077 177.52983093]
[404.67828369 176.77926636]
[410.22891235 181.68174744]
[424.62771606 185.88586426]
[439.02648926 190.08998108]
[453.42529297 194.29409790]
[467.82409668 198.49821472]
[482.22290039 202.70234680]
[496.62170410 206.90646362]
[511.02050781 211.11058044]
[526.43609619 207.55122375]
[536.48474121 218.54554749]
[550.88348389 222.74966431]
[562.70538330 211.20309448]
[578.64440918 207.21104431]
[594.33288574 211.76995850]
[605.52099609 223.54634094]
[609.22753906 239.26506042]
[623.69458008 243.22799683]
[638.16162109 247.19093323]
[650.26892090 237.66621399]
[665.48522949 237.10356140]
[677.96752930 245.50929260]
[683.04589844 259.48599243]
[697.51293945 263.44894409]
[711.12878418 255.88278198]
[725.74395752 260.10784912]
[732.87322998 273.13510132]
[747.34027100 277.09805298]
[758.74438477 266.70816040]
[773.95910645 264.15573120]
[788.12951660 270.25518799]
[796.73382568 283.06021118]
[797.02648926 298.48480225]
[788.91406250 311.60702515]
[774.98522949 318.23959351]
[759.68463135 316.26608276]
[747.89459229 306.31628418]
[743.37731934 291.56506348]
[728.91027832 287.60214233]
[716.13732910 295.17764282]
[701.40924072 291.36474609]
[693.54998779 277.91595459]
[679.08294678 273.95303345]
[667.59075928 283.39059448]
[652.56726074 284.26171875]
[639.76184082 276.02310181]
[634.19866943 261.65795898]
[619.73168945 257.69503784]
[605.26464844 253.73210144]
[596.19958496 263.96112061]
[583.54931641 269.30819702]
[569.76361084 268.67584229]
[557.53924561 262.13064575]
[549.29193115 250.90129089]
[546.67938232 237.14846802]
[532.28057861 232.94435120]
[517.89483643 236.80439758]
[506.81637573 225.50938416]
[492.41757202 221.30525208]
[478.01876831 217.10113525]
[463.61999512 212.89701843]
[449.22119141 208.69290161]
[434.82238770 204.48878479]
[420.42358398 200.28466797]
[406.02478027 196.08053589]
[391.59136963 191.99687195]
[377.12432861 188.03395081]
[362.65728760 184.07101440]
[354.39273071 192.99374390]
[343.04873657 197.57577515]
[330.76129150 196.88801575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[9 101]
[10 100]
[11 99]
[12 98]
[13 97]
[14 96]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[114 184]
[115 183]
[116 182]
[118 181]
[119 180]
[120 179]
[121 178]
[122 177]
[123 176]
[124 175]
[125 174]
[127 172]
[128 171]
[133 165]
[134 164]
[135 163]
[139 159]
[140 158]
[143 155]
[144 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
