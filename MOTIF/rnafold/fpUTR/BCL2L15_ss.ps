%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUCUGAGCAGCUGUGUUUGAAGAAAGCUAGUGGGAAAAGUUCCAGGAUUACAUGUCAGGAAACUACAAGAGGUAGAAACAUUUGUUGAUUUACCAGUGUUUUUAACUUCCUGCUGGGCUGAAAACUGCUUGUUUCGUGGAAAAGCAAAACUUGACAGCAAACAUCUAAA\
) } def
/len { sequence length } bind def

/coor [
[98.75081635 129.50802612]
[99.69435883 114.53773499]
[91.68917847 127.22305298]
[83.68399811 139.90835571]
[75.67882538 152.59367371]
[67.67364502 165.27899170]
[59.66846848 177.96429443]
[51.89495850 190.79287720]
[44.35567474 203.76049805]
[36.81639481 216.72811890]
[29.27711105 229.69573975]
[21.73782921 242.66336060]
[22.22930527 259.05514526]
[8.13899231 267.44534302]
[-6.03820467 259.20281982]
[-5.71799994 242.80679321]
[8.77020645 235.12408447]
[16.30948830 222.15646362]
[23.84877014 209.18884277]
[31.38805389 196.22122192]
[38.92733383 183.25360107]
[38.58162689 178.45764160]
[41.26976776 173.39950562]
[46.98315811 169.95912170]
[54.98833466 157.27380371]
[62.99351120 144.58850098]
[70.99868774 131.90318298]
[79.00386810 119.21787262]
[87.00904846 106.53256226]
[87.96177673 91.56285095]
[81.62936401 77.96503448]
[75.29694366 64.36722565]
[68.96453094 50.76940918]
[62.63211441 37.17159653]
[56.29969788 23.57378387]
[49.96728516 9.97597122]
[43.63486862 -3.62184143]
[37.30245209 -17.21965408]
[30.97003746 -30.81746674]
[6.33819199 -34.72743607]
[-6.17251539 -61.90027237]
[-20.04370308 -67.60904694]
[-33.91489029 -73.31783295]
[-47.78607559 -79.02661133]
[-61.70852661 -84.60920715]
[-75.68109131 -90.06517029]
[-87.80938721 -85.60756683]
[-99.34835815 -90.46637726]
[-104.30560303 -101.52504730]
[-118.17678833 -107.23382568]
[-132.04797363 -112.94260406]
[-147.34951782 -108.12157440]
[-160.57812500 -117.19812012]
[-161.58593750 -133.20948792]
[-149.59983826 -143.87312317]
[-133.81455994 -141.00880432]
[-126.33919525 -126.81379700]
[-112.46800995 -121.10501099]
[-98.59681702 -115.39623260]
[-81.37213135 -118.67391205]
[-70.22512817 -104.03772736]
[-56.25256729 -98.58177185]
[-48.85168457 -99.07964325]
[-42.07729721 -92.89779663]
[-28.20611000 -87.18901825]
[-14.33492279 -81.48023987]
[-0.46373579 -75.77146149]
[6.12033939 -79.36310577]
[-3.31583786 -91.02323914]
[-14.94159985 -100.50171661]
[-13.55921555 -115.43788147]
[-0.39131576 -122.62164307]
[12.91593266 -115.69942474]
[14.59270763 -100.79244995]
[19.28849030 -86.54640961]
[25.87256622 -90.13806152]
[28.58154297 -104.89141083]
[31.29052162 -119.64476776]
[33.99950027 -134.39811707]
[36.70847702 -149.15147400]
[39.41745377 -163.90483093]
[42.12643433 -178.65818787]
[44.83541107 -193.41152954]
[47.54438782 -208.16488647]
[50.25336838 -222.91824341]
[45.13558197 -237.88883972]
[55.04418564 -249.00949097]
[57.75316238 -263.76284790]
[48.57465744 -276.62872314]
[51.26438522 -292.20245361]
[64.22657776 -301.24441528]
[79.77099609 -298.39016724]
[88.67540741 -285.33309937]
[85.65699005 -269.81973267]
[72.50651550 -261.05386353]
[69.79753876 -246.30050659]
[75.10908508 -232.38517761]
[65.00672150 -220.20925903]
[62.29774094 -205.45590210]
[59.58876419 -190.70256042]
[56.87978745 -175.94920349]
[54.17080688 -161.19584656]
[51.46183014 -146.44248962]
[48.75285339 -131.68914795]
[46.04387665 -116.93579102]
[43.33489609 -102.18243408]
[40.62591934 -87.42908478]
[55.18593216 -70.57699585]
[55.55553055 -50.71955490]
[44.56784821 -37.14988327]
[50.90026474 -23.55207062]
[57.23268127 -9.95425701]
[63.56509781 3.64355588]
[69.89751434 17.24136925]
[76.22992706 30.83918190]
[82.56233978 44.43699265]
[88.89476013 58.03480530]
[95.22717285 71.63262177]
[101.55959320 85.23043060]
[126.83946991 93.83034515]
[140.71066284 99.53913116]
[154.58184814 105.24790955]
[168.45303345 110.95668793]
[181.43780518 98.61003113]
[198.45690918 93.17803192]
[216.08903503 95.70435333]
[230.81068420 105.63768005]
[239.70022583 120.95114136]
[241.01773071 138.55583191]
[255.17918396 143.50082397]
[269.34063721 148.44583130]
[283.50210571 153.39083862]
[297.66357422 158.33583069]
[308.80288696 147.83944702]
[323.54730225 143.73321533]
[338.50863647 146.96073914]
[350.24890137 156.78034973]
[356.07025146 170.93557739]
[354.63500977 186.17364502]
[346.27297974 198.99295044]
[332.90567017 206.44773865]
[317.60482788 206.82492065]
[303.88641357 200.03785706]
[294.90289307 187.64613342]
[292.71856689 172.49729919]
[278.55709839 167.55229187]
[264.39562988 162.60728455]
[250.23417664 157.66229248]
[236.07272339 152.71728516]
[228.36685181 162.29260254]
[218.06686401 169.04393005]
[206.16502380 172.30281067]
[193.81347656 171.73814392]
[182.21275330 167.38970947]
[172.49501038 159.66577148]
[165.61361694 149.30484009]
[162.24960327 137.30502319]
[162.74424744 124.82787323]
[148.87306213 119.11909485]
[135.00187683 113.41031647]
[121.13069153 107.70153809]
[130.56686401 119.36166382]
[144.28002930 125.44025421]
[154.10690308 136.77307129]
[158.18212891 151.20886230]
[155.73216248 166.00743103]
[147.22203064 178.35968018]
[134.26716614 185.92085266]
[119.32668304 187.25570679]
[105.23660278 182.11082458]
[94.67154694 171.46284485]
[89.63698578 157.33297729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[36 113]
[37 112]
[38 111]
[39 110]
[41 67]
[42 66]
[43 65]
[44 64]
[45 62]
[46 61]
[49 59]
[50 58]
[51 57]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[87 96]
[88 95]
[120 161]
[121 160]
[122 159]
[123 158]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
