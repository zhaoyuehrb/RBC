%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUUGCCAUGGAGAUGCGGCCUGGCCGCCGCCGGUGGCUCCCGGGUUGACGGGACUGUUAGGUUGCGGGCUUUGGGGCUCACUCCCGACGGCAUUGUCUUCUCCUCUUCUCAGACAGGGCAGACCGAGGAGUUUGGACCGAGAGUUUAUAGAAACCUAUUCACCAAA\
) } def
/len { sequence length } bind def

/coor [
[78.99544525 101.44207001]
[64.64637756 97.07122040]
[50.29731369 92.70037842]
[35.94824600 88.32952881]
[20.49237251 91.70983887]
[10.57197762 80.59970093]
[-3.77708888 76.22885895]
[-18.12615585 71.85800934]
[-32.47521973 67.48716736]
[-48.80196762 77.03663635]
[-66.63069153 71.74980927]
[-74.82677460 55.41272736]
[-89.32755280 51.57508469]
[-103.82832336 47.73744583]
[-118.32910156 43.89980316]
[-133.05917358 55.79010391]
[-153.48626709 52.96343613]
[-166.41502380 34.77589417]
[-181.41246033 34.49871063]
[-196.40989685 34.22152710]
[-211.40733337 33.94434357]
[-226.40476990 33.66716003]
[-241.40222168 33.38997650]
[-256.39965820 33.11279297]
[-271.39709473 32.83560944]
[-286.19009399 35.31891632]
[-300.27493286 40.47814941]
[-314.35974121 45.63738251]
[-328.44458008 50.79661942]
[-342.52941895 55.95585251]
[-356.61422729 61.11508560]
[-369.40734863 72.24037933]
[-383.63937378 63.02700043]
[-378.72586060 46.80067062]
[-361.77346802 47.03025818]
[-347.68862915 41.87102509]
[-333.60382080 36.71179199]
[-319.51898193 31.55255890]
[-305.43417358 26.39332390]
[-291.34933472 21.23409081]
[-292.31884766 6.26545620]
[-306.95153809 2.96626091]
[-321.58422852 -0.33293456]
[-336.21688843 -3.63212991]
[-350.84957886 -6.93132544]
[-364.07360840 1.72316444]
[-379.52679443 -1.58973634]
[-388.04098511 -14.90454197]
[-384.56488037 -30.32181549]
[-371.16079712 -38.69475937]
[-355.78112793 -35.05585861]
[-347.55038452 -21.56400490]
[-332.91769409 -18.26480865]
[-318.28503418 -14.96561432]
[-303.65234375 -11.66641903]
[-289.01965332 -8.36722374]
[-281.56085205 -4.72894382]
[-275.92303467 0.35592234]
[-272.32293701 6.24160814]
[-270.77874756 12.27227402]
[-271.11990356 17.83816910]
[-256.12246704 18.11535263]
[-241.12503052 18.39253616]
[-226.12759399 18.66971970]
[-211.13015747 18.94690323]
[-196.13272095 19.22408676]
[-181.13526917 19.50127029]
[-166.13783264 19.77845383]
[-157.43356323 7.56225204]
[-162.59280396 -6.52257347]
[-167.75202942 -20.60739899]
[-172.91127014 -34.69222260]
[-178.07049561 -48.77705002]
[-190.99468994 -58.87146759]
[-188.44712830 -75.07152557]
[-173.04850769 -80.71199799]
[-160.63963318 -69.99044037]
[-163.98567200 -53.93628311]
[-158.82643127 -39.85145950]
[-153.66720581 -25.76663208]
[-148.50796509 -11.68180752]
[-143.34873962 2.40301824]
[-121.62138367 10.23998833]
[-114.49146271 29.39902687]
[-99.99068451 33.23666763]
[-85.48990631 37.07431030]
[-70.98913574 40.91195297]
[-62.56584549 33.14921188]
[-51.32080841 30.40561867]
[-40.03708649 33.47985458]
[-31.56547928 41.71570587]
[-28.10437584 53.13809967]
[-13.75530910 57.50894547]
[0.59375727 61.87979126]
[14.94282341 66.25064087]
[29.37235832 62.55769730]
[40.31909561 73.98046112]
[54.66815948 78.35131073]
[69.01722717 82.72215271]
[83.36629486 87.09300232]
[94.25859070 77.05666351]
[110.71413422 76.03870392]
[125.52278900 86.56175232]
[139.60762024 81.40251923]
[153.69244385 76.24328613]
[167.77726746 71.08404541]
[181.86209106 65.92481232]
[195.94691467 60.76558304]
[181.64233398 56.25128174]
[171.42140198 45.27255630]
[167.93995667 30.68216515]
[172.10263062 16.27133369]
[182.82778931 5.78462934]
[197.32855225 1.94696224]
[211.83700562 5.75552654]
[222.58317566 16.22068977]
[226.77476501 30.62314034]
[223.32260132 45.22048950]
[213.12362671 56.21975327]
[227.91662598 53.73644638]
[238.35972595 41.55772400]
[254.38682556 42.27313232]
[263.70330811 55.33386612]
[259.16235352 70.72085571]
[244.24740601 76.63050842]
[230.39993286 68.52945709]
[215.60693359 71.01276398]
[201.10615540 74.85041046]
[187.02133179 80.00964355]
[172.93650818 85.16887665]
[158.85166931 90.32810974]
[144.76684570 95.48734283]
[130.68202209 100.64657593]
[126.71056366 115.11127472]
[136.18623352 126.73933411]
[145.66189575 138.36738586]
[155.13755798 149.99545288]
[164.61322021 161.62350464]
[180.88873291 158.81550598]
[196.27542114 164.55473328]
[206.61758423 177.19032288]
[209.17283630 193.22265625]
[203.33883667 208.27238464]
[213.02775574 219.72335815]
[220.99269104 224.27670288]
[222.78753662 231.47662354]
[232.26321411 243.10467529]
[241.73887634 254.73274231]
[251.21453857 266.36080933]
[266.72650146 271.68164062]
[269.60852051 287.82553101]
[256.89584351 298.18505859]
[241.66615295 292.10321045]
[239.58647156 275.83645630]
[230.11080933 264.20840454]
[220.63514709 252.58033752]
[211.15948486 240.95228577]
[201.57678223 229.41227722]
[191.88786316 217.96130371]
[178.61604309 221.27006531]
[165.15043640 218.51632690]
[154.13746643 210.18293762]
[147.76663208 197.85501099]
[147.33535767 183.91867065]
[152.98516846 171.09918213]
[143.50950623 159.47111511]
[134.03382874 147.84306335]
[124.55816650 136.21499634]
[115.08250427 124.58693695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[3 98]
[4 97]
[6 95]
[7 94]
[8 93]
[9 92]
[12 87]
[13 86]
[14 85]
[15 84]
[18 68]
[19 67]
[20 66]
[21 65]
[22 64]
[23 63]
[24 62]
[25 61]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[108 128]
[119 127]
[120 126]
[134 169]
[135 168]
[136 167]
[137 166]
[138 165]
[143 159]
[144 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
