%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYL3)
} def

/sequence { (\
AUCCGGGCAGGAUAAAGGCCUGGGUGAGGCGGCUCACCUACCCUGCUUUCUGCAUUCUUCUCUCCACAUCCCUCUCUGUACUUACAGCCCCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.023950809 ubox
1 25 0.008538388 ubox
1 55 0.011738115 ubox
1 69 0.013569961 ubox
2 12 0.025599468 ubox
2 24 0.009019959 ubox
2 54 0.013549790 ubox
2 68 0.015153483 ubox
3 11 0.025919986 ubox
3 23 0.011280581 ubox
4 10 0.025917374 ubox
4 22 0.012846598 ubox
4 52 0.003721674 ubox
4 78 0.020090249 ubox
5 21 0.013073856 ubox
5 43 0.006871901 ubox
5 48 0.011136703 ubox
5 51 0.003629918 ubox
5 56 0.085246418 ubox
5 57 0.159456089 ubox
5 58 0.081399131 ubox
5 59 0.013014966 ubox
5 60 0.051038369 ubox
5 61 0.030828271 ubox
5 62 0.042814627 ubox
5 63 0.024301755 ubox
5 64 0.025503319 ubox
5 65 0.170314385 ubox
5 70 0.012833105 ubox
5 71 0.080603709 ubox
5 72 0.132634464 ubox
5 73 0.017093146 ubox
5 74 0.019416078 ubox
5 75 0.011155855 ubox
5 76 0.015773372 ubox
5 77 0.020169802 ubox
5 82 0.009823813 ubox
5 89 0.286911475 ubox
5 90 0.403632812 ubox
5 91 0.334832158 ubox
5 92 0.463623818 ubox
6 20 0.013222669 ubox
6 42 0.006880132 ubox
6 47 0.013897956 ubox
6 50 0.003360490 ubox
6 55 0.094531177 ubox
6 56 0.132568177 ubox
6 57 0.087083582 ubox
6 58 0.015237380 ubox
6 59 0.049948405 ubox
6 60 0.034632940 ubox
6 61 0.040908572 ubox
6 62 0.026809363 ubox
6 63 0.024346613 ubox
6 64 0.170352434 ubox
6 65 0.014480091 ubox
6 69 0.012508954 ubox
6 70 0.080833265 ubox
6 71 0.132661004 ubox
6 72 0.019186338 ubox
6 73 0.018193336 ubox
6 74 0.011960776 ubox
6 75 0.016637986 ubox
6 76 0.020200734 ubox
6 81 0.010483323 ubox
6 88 0.286990732 ubox
6 89 0.404094627 ubox
6 90 0.334961182 ubox
6 91 0.462646500 ubox
6 92 0.029464009 ubox
7 19 0.013242110 ubox
7 41 0.006852315 ubox
7 46 0.015014474 ubox
7 53 0.934813210 ubox
7 55 0.012864081 ubox
7 56 0.012424851 ubox
7 57 0.007702417 ubox
7 58 0.004821438 ubox
7 59 0.005640339 ubox
7 60 0.027399373 ubox
7 61 0.004584950 ubox
7 62 0.016167639 ubox
7 63 0.028724598 ubox
7 64 0.010687512 ubox
7 69 0.012965396 ubox
7 70 0.094021008 ubox
7 71 0.013270017 ubox
7 72 0.012268369 ubox
7 73 0.003566557 ubox
7 74 0.017213131 ubox
7 75 0.011106796 ubox
7 79 0.005317985 ubox
7 88 0.257679703 ubox
7 89 0.122069317 ubox
7 90 0.170354304 ubox
7 91 0.011250831 ubox
8 18 0.013235316 ubox
8 22 0.033934866 ubox
8 45 0.015153068 ubox
8 52 0.975731733 ubox
8 78 0.008218380 ubox
8 87 0.195669820 ubox
9 21 0.045931044 ubox
9 44 0.015655813 ubox
9 51 0.979658605 ubox
9 58 0.039847483 ubox
9 59 0.020014799 ubox
9 61 0.023256001 ubox
9 63 0.011203690 ubox
9 73 0.052248246 ubox
9 75 0.007106149 ubox
9 77 0.010820462 ubox
9 82 0.019737881 ubox
9 83 0.031314121 ubox
10 20 0.050888281 ubox
10 42 0.005184386 ubox
10 43 0.015864180 ubox
10 47 0.003175863 ubox
10 49 0.004095402 ubox
10 50 0.980122235 ubox
10 51 0.032550409 ubox
10 57 0.041967806 ubox
10 58 0.022932928 ubox
10 60 0.024012075 ubox
10 61 0.013114045 ubox
10 62 0.011760871 ubox
10 63 0.012889553 ubox
10 64 0.004091160 ubox
10 65 0.090112517 ubox
10 71 0.102931358 ubox
10 72 0.052499318 ubox
10 74 0.006676741 ubox
10 75 0.008186891 ubox
10 76 0.010860393 ubox
10 77 0.006072755 ubox
10 81 0.019783480 ubox
10 82 0.032702098 ubox
10 83 0.004773476 ubox
10 89 0.030528978 ubox
11 19 0.050825510 ubox
11 20 0.004017506 ubox
11 41 0.005343762 ubox
11 42 0.015158352 ubox
11 46 0.003462003 ubox
11 48 0.019665070 ubox
11 49 0.976269213 ubox
11 50 0.040201477 ubox
11 56 0.041759920 ubox
11 57 0.023360095 ubox
11 59 0.023332130 ubox
11 60 0.016559690 ubox
11 61 0.006345069 ubox
11 62 0.014040753 ubox
11 64 0.090190080 ubox
11 70 0.104354679 ubox
11 71 0.050048447 ubox
11 72 0.003713927 ubox
11 73 0.004976366 ubox
11 74 0.011580348 ubox
11 75 0.006325492 ubox
11 76 0.007425318 ubox
11 81 0.032784859 ubox
11 82 0.004005309 ubox
11 83 0.007033780 ubox
11 88 0.030602005 ubox
11 89 0.003522414 ubox
12 47 0.026555088 ubox
12 48 0.963092218 ubox
12 49 0.043978010 ubox
12 55 0.041318150 ubox
12 56 0.022046524 ubox
12 58 0.021959173 ubox
12 59 0.015896726 ubox
12 61 0.013458185 ubox
12 63 0.085229807 ubox
12 69 0.104457809 ubox
12 73 0.010820252 ubox
12 75 0.007238770 ubox
12 79 0.029048165 ubox
12 82 0.006688008 ubox
13 40 0.004225815 ubox
13 45 0.013585346 ubox
13 52 0.009208504 ubox
13 54 0.038287799 ubox
13 68 0.098638610 ubox
13 78 0.030096467 ubox
13 80 0.008155420 ubox
13 84 0.007311765 ubox
14 44 0.009735406 ubox
14 48 0.010648073 ubox
14 49 0.011326558 ubox
14 51 0.010866711 ubox
14 56 0.010736135 ubox
14 59 0.012746972 ubox
14 77 0.028755980 ubox
14 79 0.007451564 ubox
14 83 0.007464055 ubox
15 47 0.014574137 ubox
15 48 0.013604317 ubox
15 49 0.031940748 ubox
15 55 0.010057036 ubox
15 56 0.008818057 ubox
15 58 0.011824864 ubox
15 59 0.029910758 ubox
15 82 0.006720179 ubox
15 83 0.004007019 ubox
16 44 0.976124139 ubox
16 47 0.016074680 ubox
16 48 0.039405069 ubox
16 51 0.008387518 ubox
16 55 0.006702574 ubox
16 58 0.032507417 ubox
16 59 0.010863313 ubox
16 61 0.017698683 ubox
16 63 0.011471273 ubox
16 73 0.019867482 ubox
16 75 0.015803161 ubox
16 77 0.007404526 ubox
16 82 0.004349366 ubox
17 42 0.092111560 ubox
17 43 0.984338851 ubox
17 44 0.105440745 ubox
17 46 0.015365102 ubox
17 47 0.052395489 ubox
17 50 0.007743539 ubox
17 57 0.032339752 ubox
17 58 0.011305018 ubox
17 60 0.017698357 ubox
17 62 0.011898340 ubox
17 63 0.004620157 ubox
17 64 0.009411269 ubox
17 65 0.024867418 ubox
17 72 0.020305248 ubox
17 74 0.015856601 ubox
17 76 0.007510265 ubox
17 81 0.004376812 ubox
17 89 0.013509392 ubox
17 90 0.003481718 ubox
17 92 0.003372148 ubox
18 41 0.099793227 ubox
18 42 0.982169481 ubox
18 43 0.108052402 ubox
18 46 0.053254324 ubox
18 56 0.023475016 ubox
18 57 0.011188965 ubox
18 59 0.012855853 ubox
18 61 0.008527790 ubox
18 62 0.004998146 ubox
18 63 0.006788593 ubox
18 64 0.024556814 ubox
18 71 0.020122518 ubox
18 72 0.003562105 ubox
18 73 0.011294088 ubox
18 75 0.005389847 ubox
18 88 0.013549960 ubox
18 89 0.003427223 ubox
18 91 0.003337582 ubox
19 45 0.053314484 ubox
19 87 0.012862471 ubox
20 87 0.004111278 ubox
21 40 0.937994604 ubox
21 68 0.008127423 ubox
21 86 0.004984327 ubox
22 38 0.018180926 ubox
22 39 0.993854444 ubox
22 42 0.005166766 ubox
22 43 0.014939351 ubox
22 67 0.008067698 ubox
22 85 0.004882320 ubox
23 37 0.013091733 ubox
23 38 0.999611123 ubox
23 41 0.003679283 ubox
23 42 0.014754136 ubox
23 65 0.003300536 ubox
24 37 0.999740358 ubox
24 41 0.014537879 ubox
24 64 0.003286166 ubox
25 36 0.999631367 ubox
25 40 0.013664614 ubox
26 35 0.999839233 ubox
26 39 0.008101978 ubox
26 62 0.003409664 ubox
26 74 0.003559635 ubox
26 92 0.004315066 ubox
27 34 0.999569562 ubox
27 39 0.010372276 ubox
27 61 0.003413655 ubox
27 73 0.003566186 ubox
28 33 0.998229934 ubox
28 34 0.004459217 ubox
28 38 0.013055817 ubox
28 60 0.003390013 ubox
28 72 0.003562991 ubox
28 91 0.005793437 ubox
28 92 0.005872992 ubox
29 33 0.010059257 ubox
29 37 0.013026387 ubox
29 71 0.003537450 ubox
29 90 0.005805297 ubox
29 91 0.005869443 ubox
31 38 0.003768535 ubox
31 89 0.008237118 ubox
32 37 0.003755034 ubox
32 88 0.008246023 ubox
33 87 0.008189172 ubox
34 86 0.007294854 ubox
44 54 0.118849982 ubox
45 53 0.188671851 ubox
46 52 0.188747044 ubox
51 66 0.004148969 ubox
51 68 0.004647722 ubox
51 80 0.013863556 ubox
52 65 0.007307752 ubox
52 67 0.007505626 ubox
52 79 0.023309290 ubox
53 78 0.024016899 ubox
54 69 0.022641759 ubox
54 77 0.021985193 ubox
54 79 0.005738155 ubox
55 68 0.023123731 ubox
55 78 0.005878088 ubox
57 87 0.021090184 ubox
58 86 0.020560066 ubox
58 87 0.009192883 ubox
59 86 0.010988990 ubox
60 87 0.017197651 ubox
61 86 0.016856852 ubox
62 87 0.009547778 ubox
63 86 0.009223140 ubox
65 78 0.022333977 ubox
66 77 0.020559622 ubox
66 79 0.181336230 ubox
67 78 0.190393934 ubox
68 77 0.186283486 ubox
68 79 0.013533900 ubox
69 78 0.013867302 ubox
72 87 0.016585127 ubox
73 86 0.014783670 ubox
74 87 0.032209932 ubox
75 86 0.029772431 ubox
76 87 0.933677159 ubox
77 84 0.032881156 ubox
77 86 0.959302053 ubox
77 93 0.006137650 ubox
78 83 0.033424054 ubox
78 85 0.963432608 ubox
78 88 0.038163250 ubox
78 92 0.008006570 ubox
79 84 0.901306382 ubox
79 87 0.037783888 ubox
81 87 0.044916111 ubox
82 86 0.040896619 ubox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
10 50 0.9500000 lbox
11 49 0.9500000 lbox
12 48 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
76 87 0.9500000 lbox
77 86 0.9500000 lbox
78 85 0.9500000 lbox
79 84 0.9500000 lbox
showpage
end
%%EOF
