%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GYPE)
} def

/sequence { (\
AGUUGUCUUUGGUAGUUUUUUUGCACUAACUUCAGGAGCCAGCUCGUGAUCUCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.118271499 ubox
1 9 0.009028427 ubox
1 10 0.019482151 ubox
1 17 0.003347659 ubox
1 21 0.003360657 ubox
1 22 0.003400404 ubox
1 27 0.048823521 ubox
1 31 0.182523520 ubox
1 32 0.003897704 ubox
1 44 0.478254457 ubox
1 52 0.024049376 ubox
2 7 0.135568995 ubox
2 8 0.013349542 ubox
2 9 0.024431818 ubox
2 13 0.003200460 ubox
2 16 0.004407700 ubox
2 19 0.003463430 ubox
2 20 0.004524664 ubox
2 21 0.003777179 ubox
2 24 0.018107283 ubox
2 26 0.051707716 ubox
2 30 0.209869525 ubox
2 31 0.006155635 ubox
2 39 0.014651291 ubox
2 43 0.551159911 ubox
2 50 0.007535902 ubox
2 51 0.027267361 ubox
3 12 0.007637381 ubox
3 15 0.008576038 ubox
3 23 0.017922459 ubox
3 25 0.041182995 ubox
3 29 0.205898171 ubox
3 35 0.030366919 ubox
3 38 0.014544268 ubox
3 42 0.551168103 ubox
3 49 0.006797371 ubox
3 55 0.066733745 ubox
3 56 0.005722581 ubox
4 11 0.012400309 ubox
4 14 0.011722449 ubox
4 25 0.045312577 ubox
4 28 0.186437587 ubox
4 34 0.038357564 ubox
4 37 0.012309414 ubox
4 41 0.550676836 ubox
4 48 0.003751220 ubox
4 54 0.082058482 ubox
4 55 0.006650666 ubox
5 10 0.014254421 ubox
5 13 0.011675265 ubox
5 16 0.004352703 ubox
5 24 0.057600261 ubox
5 26 0.099664215 ubox
5 27 0.136458858 ubox
5 30 0.148973851 ubox
5 33 0.040374140 ubox
5 39 0.068054144 ubox
5 40 0.545975845 ubox
5 43 0.003660004 ubox
5 50 0.010325865 ubox
5 53 0.083694548 ubox
6 12 0.013332218 ubox
6 23 0.056195879 ubox
6 25 0.100301665 ubox
6 29 0.134403690 ubox
6 36 0.039923606 ubox
6 37 0.170699205 ubox
6 38 0.075397165 ubox
6 42 0.003452178 ubox
6 49 0.010424855 ubox
6 56 0.060146113 ubox
7 11 0.018575468 ubox
7 15 0.030355303 ubox
7 35 0.044094656 ubox
7 36 0.180640771 ubox
7 38 0.511080628 ubox
7 48 0.009321691 ubox
7 55 0.097304751 ubox
7 56 0.038915381 ubox
8 14 0.030244062 ubox
8 15 0.005600364 ubox
8 29 0.042704767 ubox
8 34 0.042780749 ubox
8 35 0.170505579 ubox
8 36 0.132585458 ubox
8 37 0.500244200 ubox
8 38 0.006752646 ubox
8 54 0.091770934 ubox
8 55 0.037818772 ubox
8 56 0.037530108 ubox
9 14 0.007054208 ubox
9 28 0.038637357 ubox
9 29 0.604870704 ubox
9 34 0.146801218 ubox
9 35 0.250435792 ubox
9 36 0.452256192 ubox
9 37 0.010319548 ubox
9 42 0.007461594 ubox
9 49 0.004976045 ubox
9 54 0.028097308 ubox
9 55 0.064798901 ubox
10 23 0.013670371 ubox
10 25 0.055307817 ubox
10 28 0.723694092 ubox
10 34 0.329939650 ubox
10 35 0.389006926 ubox
10 36 0.012113197 ubox
10 41 0.009665311 ubox
10 48 0.003236117 ubox
10 54 0.073081664 ubox
11 17 0.009333272 ubox
11 18 0.032247979 ubox
11 19 0.022625536 ubox
11 20 0.030779317 ubox
11 21 0.018396920 ubox
11 22 0.019844920 ubox
11 24 0.050809669 ubox
11 27 0.742327225 ubox
11 31 0.268384151 ubox
11 32 0.027266456 ubox
11 33 0.353247103 ubox
11 40 0.009969921 ubox
11 44 0.003930838 ubox
11 51 0.039966887 ubox
11 52 0.015457691 ubox
11 53 0.075019259 ubox
12 16 0.006500430 ubox
12 17 0.030422767 ubox
12 18 0.022650282 ubox
12 19 0.030292570 ubox
12 20 0.018651449 ubox
12 21 0.020844587 ubox
12 24 0.272885542 ubox
12 26 0.745292113 ubox
12 30 0.282962552 ubox
12 31 0.019020198 ubox
12 32 0.330862254 ubox
12 39 0.009970616 ubox
12 43 0.004340967 ubox
12 50 0.028791361 ubox
12 51 0.020019257 ubox
12 52 0.046865514 ubox
13 23 0.275364516 ubox
13 25 0.740877582 ubox
13 28 0.271500868 ubox
13 29 0.201306696 ubox
13 38 0.009676984 ubox
13 42 0.004267426 ubox
13 49 0.020562545 ubox
14 20 0.009817073 ubox
14 21 0.035391262 ubox
14 22 0.275163828 ubox
14 27 0.340182738 ubox
14 31 0.465542565 ubox
14 32 0.007449884 ubox
14 44 0.004454938 ubox
15 19 0.007728651 ubox
15 20 0.035894286 ubox
15 21 0.262663673 ubox
15 24 0.742610530 ubox
15 26 0.341388960 ubox
15 30 0.474325417 ubox
15 31 0.003432665 ubox
15 39 0.004170366 ubox
15 43 0.004597000 ubox
16 23 0.735475730 ubox
16 25 0.336610087 ubox
16 29 0.472192521 ubox
16 38 0.004166838 ubox
16 42 0.004573513 ubox
17 28 0.458747023 ubox
17 29 0.024087390 ubox
17 37 0.004181658 ubox
17 41 0.003929093 ubox
18 28 0.032890227 ubox
18 29 0.013798395 ubox
18 36 0.004113534 ubox
18 38 0.004027113 ubox
19 28 0.027907419 ubox
19 29 0.006912310 ubox
19 35 0.003771508 ubox
19 37 0.006226202 ubox
20 28 0.013179694 ubox
20 29 0.008858741 ubox
20 36 0.006300480 ubox
20 56 0.004809586 ubox
21 28 0.015963495 ubox
21 29 0.006414106 ubox
21 35 0.006440803 ubox
21 55 0.007747770 ubox
22 28 0.010701706 ubox
22 34 0.006608519 ubox
22 54 0.008618055 ubox
23 27 0.010979623 ubox
23 33 0.006593210 ubox
23 39 0.004617596 ubox
23 53 0.008739716 ubox
24 38 0.004704648 ubox
26 35 0.007249028 ubox
26 55 0.182567243 ubox
26 56 0.042547038 ubox
27 34 0.006988409 ubox
27 54 0.176693652 ubox
27 55 0.041635515 ubox
30 36 0.004177154 ubox
30 38 0.005614354 ubox
30 55 0.244593559 ubox
30 56 0.079407553 ubox
31 35 0.003845081 ubox
31 37 0.005627269 ubox
31 49 0.031979402 ubox
31 54 0.243507021 ubox
31 55 0.080341206 ubox
31 56 0.005054340 ubox
32 36 0.005089649 ubox
32 48 0.006174910 ubox
32 49 0.783894374 ubox
32 54 0.033339370 ubox
32 56 0.004933752 ubox
33 48 0.831421750 ubox
33 55 0.007803849 ubox
34 47 0.830520368 ubox
34 52 0.024430779 ubox
35 45 0.005220168 ubox
35 51 0.025252052 ubox
35 52 0.012520754 ubox
35 53 0.004491276 ubox
36 43 0.003737571 ubox
36 44 0.003310632 ubox
36 45 0.832261569 ubox
36 50 0.024807387 ubox
36 51 0.014198450 ubox
36 53 0.026808306 ubox
37 44 0.831857153 ubox
37 50 0.014125969 ubox
37 52 0.026863681 ubox
38 43 0.824876098 ubox
38 47 0.025554846 ubox
38 51 0.026745077 ubox
39 46 0.025661621 ubox
39 56 0.003832703 ubox
40 48 0.030130045 ubox
40 55 0.003971711 ubox
41 47 0.029653830 ubox
43 55 0.003672639 ubox
44 54 0.004165164 ubox
44 55 0.004947374 ubox
44 56 0.039949593 ubox
45 55 0.117609128 ubox
47 54 0.160946912 ubox
48 53 0.174574733 ubox
50 56 0.034018975 ubox
51 55 0.050676037 ubox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
34 47 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
showpage
end
%%EOF
