%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYF6)
} def

/sequence { (\
ACUGCACUAAUUAAAUGCCAUCUGGGUGGUUCCUCUGGGUUUUUGAGUCCAUCACCCAGUUCAGAUCGAGUCAGAGGCCAAGGAGGAGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.026734820 ubox
1 30 0.256922791 ubox
2 25 0.018248884 ubox
2 26 0.028278045 ubox
2 29 0.352438661 ubox
2 88 0.036020738 ubox
3 9 0.030745141 ubox
3 13 0.029327002 ubox
3 17 0.003251509 ubox
3 20 0.015845442 ubox
3 24 0.018129746 ubox
3 25 0.027490742 ubox
3 28 0.351407854 ubox
3 87 0.028916460 ubox
4 8 0.027358609 ubox
4 12 0.029614754 ubox
4 16 0.006193609 ubox
4 18 0.086750874 ubox
4 19 0.012896772 ubox
4 23 0.003705538 ubox
4 27 0.351958592 ubox
4 30 0.020325691 ubox
5 17 0.095532353 ubox
5 24 0.010634986 ubox
5 26 0.352427277 ubox
5 28 0.181308525 ubox
5 29 0.018507645 ubox
6 16 0.086314666 ubox
6 23 0.009926418 ubox
6 27 0.182336091 ubox
6 30 0.048396609 ubox
7 25 0.344592255 ubox
7 26 0.181198186 ubox
7 29 0.057065854 ubox
7 88 0.034407035 ubox
8 17 0.021571010 ubox
8 24 0.344393356 ubox
8 25 0.168193877 ubox
8 28 0.056052804 ubox
8 87 0.027240433 ubox
9 16 0.028024330 ubox
9 23 0.327866077 ubox
9 27 0.034509792 ubox
9 31 0.010505910 ubox
10 16 0.037582703 ubox
10 21 0.156964279 ubox
10 27 0.007944500 ubox
10 30 0.021249332 ubox
11 15 0.034612734 ubox
11 20 0.158925063 ubox
11 25 0.024703078 ubox
11 26 0.010047616 ubox
11 29 0.022925353 ubox
11 84 0.007314632 ubox
11 88 0.004683699 ubox
11 89 0.022086553 ubox
11 90 0.016563630 ubox
12 24 0.034166565 ubox
12 25 0.007426063 ubox
12 28 0.021862179 ubox
12 83 0.007261570 ubox
12 87 0.003952074 ubox
12 88 0.022857036 ubox
12 89 0.018773889 ubox
13 23 0.033444737 ubox
13 27 0.011020267 ubox
13 31 0.018595170 ubox
14 30 0.033626970 ubox
14 31 0.020801345 ubox
15 21 0.025345667 ubox
15 27 0.023664102 ubox
15 30 0.029088952 ubox
16 20 0.023508829 ubox
16 24 0.004751813 ubox
16 26 0.022330359 ubox
16 28 0.147680706 ubox
16 29 0.022865642 ubox
17 23 0.004506092 ubox
17 27 0.267763199 ubox
17 30 0.759876390 ubox
17 78 0.008707493 ubox
18 25 0.121637730 ubox
18 26 0.274292916 ubox
18 29 0.861551580 ubox
18 77 0.008794321 ubox
19 24 0.123544466 ubox
19 25 0.273858509 ubox
19 28 0.863497953 ubox
19 76 0.008779689 ubox
20 27 0.850856804 ubox
20 30 0.027628958 ubox
21 26 0.803706154 ubox
21 29 0.031350919 ubox
21 75 0.008738234 ubox
21 89 0.004904876 ubox
22 28 0.034270450 ubox
22 29 0.010653130 ubox
22 74 0.008771593 ubox
22 88 0.005201978 ubox
23 28 0.010088214 ubox
23 73 0.008769028 ubox
23 87 0.003220359 ubox
24 72 0.008764343 ubox
25 71 0.008622420 ubox
26 91 0.058237221 ubox
27 68 0.008262592 ubox
27 90 0.059100534 ubox
28 67 0.008695214 ubox
29 66 0.008693837 ubox
29 91 0.047650584 ubox
30 65 0.008603827 ubox
30 85 0.005778323 ubox
30 87 0.014105414 ubox
30 88 0.469543993 ubox
30 89 0.033243031 ubox
30 90 0.045372270 ubox
31 64 0.008207211 ubox
31 84 0.011885606 ubox
31 86 0.003857733 ubox
31 87 0.960705148 ubox
31 88 0.026143565 ubox
31 89 0.024063549 ubox
32 83 0.012378079 ubox
32 85 0.003745584 ubox
32 86 0.999573319 ubox
32 88 0.014908175 ubox
33 82 0.012374343 ubox
33 85 0.999843734 ubox
33 86 0.005165884 ubox
34 81 0.011920989 ubox
34 83 0.041586120 ubox
34 84 0.998826083 ubox
35 59 0.008759726 ubox
35 82 0.095820734 ubox
35 83 0.995146057 ubox
36 58 0.008768836 ubox
36 80 0.028109021 ubox
36 81 0.119071100 ubox
36 82 0.979925241 ubox
37 57 0.008771961 ubox
37 79 0.034702817 ubox
38 56 0.008772004 ubox
38 78 0.026933926 ubox
38 79 0.997882120 ubox
39 55 0.008770217 ubox
39 78 0.999583456 ubox
40 54 0.007642962 ubox
40 76 0.012512383 ubox
40 77 0.999192687 ubox
41 75 0.011183795 ubox
41 76 0.995883246 ubox
42 74 0.009148844 ubox
42 75 0.998640507 ubox
43 73 0.006481826 ubox
43 74 0.998689210 ubox
44 51 0.006205762 ubox
44 54 0.003629264 ubox
44 73 0.999005121 ubox
45 50 0.006340333 ubox
45 53 0.005376670 ubox
45 72 0.999939350 ubox
46 52 0.005324836 ubox
46 71 0.997199070 ubox
47 66 0.003791283 ubox
48 65 0.003819434 ubox
48 69 0.996888565 ubox
49 64 0.003845071 ubox
49 68 0.997967920 ubox
51 60 0.003468571 ubox
51 66 0.975216113 ubox
52 59 0.003503347 ubox
52 65 0.996968771 ubox
53 64 0.996755702 ubox
54 60 0.211036871 ubox
55 59 0.211427385 ubox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
31 87 0.9500000 lbox
32 86 0.9500000 lbox
33 85 0.9500000 lbox
34 84 0.9500000 lbox
35 83 0.9500000 lbox
36 82 0.9500000 lbox
38 79 0.9500000 lbox
39 78 0.9500000 lbox
40 77 0.9500000 lbox
41 76 0.9500000 lbox
42 75 0.9500000 lbox
43 74 0.9500000 lbox
44 73 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
51 66 0.9500000 lbox
52 65 0.9500000 lbox
53 64 0.9500000 lbox
showpage
end
%%EOF
