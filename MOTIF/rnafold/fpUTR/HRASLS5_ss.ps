%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCCUCUGCCGUUUGCAGCCCGCGGCGCUUUCCCCUCCGCGGUUCCUCCCCGAGCCGCCCCCAGUGCCCAAGCUUCCGCGGCUCCGCCGACCAGGGGCCGCGCCGACUGGGAACUCGCCAGGGGCGUAGUCCCCUGCAAGGCCUGGGGGCCGGCGAGGCCGCAGAGGCGGG\
) } def
/len { sequence length } bind def

/coor [
[-218.91096497 544.83862305]
[-227.06172180 557.43090820]
[-235.21247864 570.02319336]
[-243.36323547 582.61547852]
[-251.40063477 595.28039551]
[-259.32403564 608.01690674]
[-255.03837585 624.96075439]
[-264.13958740 639.48486328]
[-280.59558105 642.88073730]
[-288.28906250 655.75744629]
[-295.98254395 668.63415527]
[-303.67602539 681.51092529]
[-301.16613770 697.35644531]
[-312.09567261 709.10058594]
[-328.08044434 707.73425293]
[-336.85827637 694.30560303]
[-331.69561768 679.11590576]
[-316.55276489 673.81744385]
[-308.85928345 660.94067383]
[-301.16580200 648.06396484]
[-293.47229004 635.18725586]
[-298.34094238 623.23620605]
[-295.38299561 610.47509766]
[-285.46237183 601.62530518]
[-272.06057739 600.09350586]
[-264.13717651 587.35699463]
[-263.27093506 579.99182129]
[-255.95550537 574.46472168]
[-247.80474854 561.87243652]
[-239.65399170 549.28015137]
[-231.50323486 536.68786621]
[-235.93974304 524.56982422]
[-232.52563477 511.92309570]
[-222.29373169 503.43515015]
[-208.84559631 502.38540649]
[-200.47010803 489.94146729]
[-192.20664978 477.42288208]
[-184.05589294 464.83062744]
[-175.90513611 452.23834229]
[-167.75437927 439.64608765]
[-167.33392334 424.75741577]
[-153.33979797 417.37670898]
[-145.18904114 404.78442383]
[-137.03828430 392.19216919]
[-128.88752747 379.59991455]
[-129.00288391 374.79495239]
[-126.07815552 369.87316895]
[-120.21134186 366.70922852]
[-111.61382294 354.41766357]
[-103.01630402 342.12606812]
[-94.41878510 329.83450317]
[-93.46416473 314.97052002]
[-79.21411133 308.09692383]
[-70.61659241 295.80535889]
[-62.01906967 283.51379395]
[-62.39685822 280.70401001]
[-61.66547394 277.57321167]
[-59.69613266 274.55017090]
[-56.52007294 272.10244751]
[-52.33735657 270.67904663]
[-42.88012314 259.03598022]
[-33.42288971 247.39292908]
[-23.96565437 235.74986267]
[-14.50842094 224.10681152]
[-5.05118656 212.46376038]
[4.40604782 200.82070923]
[13.86328220 189.17765808]
[15.64580059 181.97917175]
[23.59628487 177.41247559]
[33.26100159 165.94105530]
[42.92571640 154.46965027]
[40.04298782 141.89109802]
[45.01522827 129.77198792]
[56.23027039 122.63336182]
[69.70394135 123.27739716]
[79.57302094 111.98132324]
[73.16231537 100.86006927]
[73.18500519 86.50030518]
[81.09549713 72.71836853]
[96.09720612 63.84872055]
[98.77556610 49.08977509]
[101.45391846 34.33083344]
[104.13227081 19.57188797]
[106.81062317 4.81294441]
[109.48897552 -9.94599915]
[112.16732788 -24.70494270]
[114.84568024 -39.46388626]
[117.52404022 -54.22283173]
[106.70383453 -65.34500885]
[104.52088165 -80.70776367]
[111.81457520 -94.40381622]
[125.78034210 -101.16673279]
[141.04804993 -98.39605713]
[151.74696350 -87.15715027]
[153.76312256 -71.77162170]
[146.32128906 -58.15550232]
[132.28297424 -51.54447556]
[129.60462952 -36.78553391]
[126.92627716 -22.02659035]
[124.24791718 -7.26764584]
[121.56956482 7.49129772]
[118.89121246 22.25024223]
[116.21286011 37.00918579]
[113.53450775 51.76812744]
[110.85615540 66.52707672]
[116.32341766 71.66117859]
[119.74878693 57.05751801]
[134.10864258 52.72224808]
[145.04295349 62.99069214]
[141.61726379 77.59427643]
[127.25794983 81.92938232]
[132.72521973 87.06348419]
[147.28684998 83.46369934]
[161.84849548 79.86390686]
[173.38853455 69.04087067]
[187.60072327 73.49768829]
[202.16236877 69.89790344]
[216.72401428 66.29811096]
[231.25276184 62.56776428]
[245.74743652 58.70715714]
[260.24212646 54.84654999]
[274.73678589 50.98594284]
[288.48617554 41.06671906]
[301.82394409 51.53284454]
[295.45910645 67.24669647]
[278.59741211 65.48062134]
[264.10272217 69.34123230]
[249.60804749 73.20183563]
[235.11335754 77.06243896]
[229.44010925 81.83840179]
[220.32379150 80.85975647]
[205.76214600 84.45954895]
[191.20050049 88.05933380]
[180.70201111 98.62489319]
[165.44828796 94.42555237]
[150.88664246 98.02534485]
[136.32499695 101.62512970]
[116.07724762 125.35365295]
[90.86908722 121.85040283]
[81.00000763 133.14646912]
[82.50418091 150.55903625]
[71.18508148 163.42993164]
[54.39712524 164.13436890]
[44.73241043 175.60577393]
[35.06769562 187.07719421]
[25.50633621 198.63488770]
[16.04910278 210.27793884]
[6.59186792 221.92098999]
[-2.86536622 233.56405640]
[-12.32260036 245.20710754]
[-21.77983475 256.85015869]
[-31.23707008 268.49322510]
[-40.69430542 280.13626099]
[-49.72750092 292.11129761]
[-58.32501984 304.40286255]
[-66.92253876 316.69442749]
[-68.49211884 332.43759155]
[-82.12722015 338.43203735]
[-90.72473907 350.72360229]
[-99.32225037 363.01516724]
[-107.91976929 375.30673218]
[-116.29525757 387.75067139]
[-124.44601440 400.34292603]
[-132.59677124 412.93518066]
[-140.74752808 425.52746582]
[-141.75097656 441.31680298]
[-155.16210938 447.79684448]
[-163.31286621 460.38909912]
[-171.46362305 472.98135376]
[-179.61437988 485.57363892]
[-181.66149902 494.51086426]
[-188.02618408 498.31695557]
[-196.40167236 510.76089478]
[-192.72698975 527.84759521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 26]
[6 25]
[9 21]
[10 20]
[11 19]
[12 18]
[35 173]
[36 172]
[37 170]
[38 169]
[39 168]
[40 167]
[42 165]
[43 164]
[44 163]
[45 162]
[48 161]
[49 160]
[50 159]
[51 158]
[53 156]
[54 155]
[55 154]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[69 145]
[70 144]
[71 143]
[75 140]
[76 139]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[112 137]
[113 136]
[114 135]
[116 133]
[117 132]
[118 131]
[119 129]
[120 128]
[121 127]
[122 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
