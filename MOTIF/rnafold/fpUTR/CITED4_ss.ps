%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACAGGUUGCGGGCCUUUGUGACCCCAGGCUGCGGCCGCAAGGUGCGCAGUAGUGGGCUGGGCCGGGGCACCAGUCGGGUUUGGUUUUGCUCCGCCCGGCCGAGCUGCAGGGACCGCACGGUGCCCGGGUCUCCCGCCGCAGAGCAGCCGCUGGCCCGGGCCGGGGGAGCCGGCGCUGACCACCGCGCGCUGUCCCCGCAGGCAGCCGGCCUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[100.82286072 371.74783325]
[88.93365479 382.16046143]
[73.16963196 381.03298950]
[62.88330841 369.03436279]
[64.17737579 353.28314209]
[76.28408813 343.12423706]
[77.35417938 328.16244507]
[78.42426300 313.20068359]
[71.61463165 299.95385742]
[80.31671143 286.74081421]
[81.38679504 271.77905273]
[82.45688629 256.81726074]
[83.52696991 241.85548401]
[84.59706116 226.89369202]
[85.66714478 211.93191528]
[86.73723602 196.97013855]
[78.23122406 181.61715698]
[88.68765259 166.45610046]
[89.54398346 151.48056030]
[90.40031433 136.50502014]
[91.25664520 121.52948761]
[85.15769958 117.16452789]
[80.62439728 131.46310425]
[65.62477875 131.57015991]
[60.88785553 117.33773804]
[72.95980072 108.43462372]
[66.86085510 104.06966400]
[52.96202850 109.71082306]
[41.98426437 124.49876404]
[24.70819855 121.39978027]
[10.89134312 127.23883057]
[-2.92551112 133.07788086]
[-16.74236679 138.91693115]
[-30.55922127 144.75598145]
[-44.37607574 150.59503174]
[-58.15088654 156.53259277]
[-71.88295746 162.56834412]
[-85.61502075 168.60409546]
[-94.87573242 182.13818359]
[-111.20404053 180.61558533]
[-117.80278778 165.60264587]
[-107.88375092 152.54336548]
[-91.65077972 154.87202454]
[-77.91870880 148.83627319]
[-64.18663788 142.80052185]
[-59.33130264 137.23515320]
[-50.21512604 136.77818298]
[-36.39827347 130.93913269]
[-22.58141708 125.10007477]
[-8.76456261 119.26102448]
[5.05229187 113.42197418]
[18.86914635 107.58292389]
[23.70466232 96.49944305]
[35.16242981 91.51980591]
[47.32086945 95.81200409]
[61.21969604 90.17084503]
[63.56621170 75.35551453]
[52.09085846 65.69548035]
[40.61550522 56.03544998]
[29.14015007 46.37541580]
[17.66479683 36.71538162]
[6.18944311 27.05534744]
[-5.28591061 17.39531326]
[-16.76126480 7.73528051]
[-25.33561516 4.60574579]
[-28.33023071 -2.14555073]
[-39.66647339 -11.96846199]
[-51.00271988 -21.79137230]
[-62.33896255 -31.61428452]
[-73.67520905 -41.43719482]
[-85.21923828 -51.01504898]
[-96.96576691 -60.34345245]
[-108.71229553 -69.67185974]
[-120.45881653 -79.00025940]
[-132.20535278 -88.32866669]
[-147.87606812 -86.27833557]
[-160.35566711 -95.97552490]
[-162.24018860 -111.66705322]
[-152.41160583 -124.04341888]
[-136.70103455 -125.76194763]
[-124.42926788 -115.80305481]
[-122.87693787 -100.07518768]
[-111.13041687 -90.74678802]
[-99.38388824 -81.41838074]
[-87.63735962 -72.08998108]
[-75.89083862 -62.76157761]
[-72.37130737 -62.79523468]
[-68.66015625 -61.12998199]
[-65.55419922 -57.69405746]
[-63.85229492 -52.77343750]
[-52.51605225 -42.95052719]
[-41.17980576 -33.12761688]
[-29.84356308 -23.30470467]
[-18.50732040 -13.48179436]
[-7.10123062 -3.74007344]
[4.37412310 5.91996050]
[15.84947681 15.57999420]
[27.32483101 25.24002838]
[38.80018616 34.90006256]
[50.27553940 44.56009674]
[61.75089264 54.22013092]
[73.22624969 63.88016129]
[93.82225037 63.95636749]
[108.28349304 73.06745911]
[113.72409821 85.74744415]
[110.75664520 96.24143982]
[125.02249908 91.60617828]
[139.28834534 86.97092438]
[153.55418396 82.33567047]
[164.28797913 70.71257019]
[178.78329468 74.13823700]
[193.04913330 69.50298309]
[207.31498718 64.86772919]
[221.58082581 60.23247528]
[235.84667969 55.59722137]
[250.04489136 50.75872803]
[264.17254639 45.71798706]
[278.30020142 40.67724609]
[288.69772339 28.75237465]
[303.28494263 31.76271629]
[317.41259766 26.72197533]
[331.54028320 21.68123436]
[345.66793823 16.64049339]
[359.60668945 11.09871483]
[373.33874512 5.06296110]
[387.02737427 -1.07068467]
[400.67184448 -7.30190992]
[414.31634521 -13.53313541]
[427.96081543 -19.76436043]
[437.29971313 -32.53525543]
[452.09103394 -30.78425980]
[465.73550415 -37.01548386]
[479.37997437 -43.24670792]
[493.02447510 -49.47793579]
[506.66894531 -55.70915985]
[520.31341553 -61.94038391]
[533.95788574 -68.17160797]
[547.55755615 -74.50009918]
[561.11163330 -80.92552185]
[574.52502441 -87.63977814]
[587.79150391 -94.63979340]
[592.33795166 -106.70546722]
[603.52630615 -112.26403046]
[615.11956787 -108.82553101]
[628.48461914 -115.63539124]
[641.84973145 -122.44524384]
[650.32269287 -136.48593140]
[666.71130371 -135.89799500]
[674.15637207 -121.28624725]
[664.99902344 -107.68200684]
[648.65960693 -109.08014679]
[635.29449463 -102.27028656]
[621.92938232 -95.46043396]
[613.17437744 -80.24807739]
[594.79156494 -81.37329865]
[581.52502441 -74.37328339]
[580.13964844 -71.13771820]
[577.12188721 -68.41033936]
[572.72656250 -66.94947815]
[567.53710938 -67.37141418]
[553.98297119 -60.94598770]
[549.28851318 -55.24423218]
[540.18914795 -54.52713013]
[526.54467773 -48.29590607]
[512.90014648 -42.06467819]
[499.25567627 -35.83345413]
[485.61120605 -29.60223007]
[471.96673584 -23.37100410]
[458.32226562 -17.13977814]
[449.95932007 -4.81458330]
[434.19204712 -6.11988020]
[420.54754639 0.11134486]
[406.90307617 6.34256983]
[393.25860596 12.57379532]
[388.48321533 18.20793533]
[379.37451172 18.79502869]
[365.64242554 24.83078194]
[378.47991943 32.58958817]
[380.56314087 47.44422150]
[370.35513306 58.43496323]
[355.38732910 57.45286560]
[346.70294189 45.22251892]
[350.70867920 30.76815796]
[336.58102417 35.80889893]
[322.45333862 40.84963989]
[308.32568359 45.89038086]
[298.93869019 57.45470428]
[283.34094238 54.80491257]
[269.21328735 59.84565353]
[255.08563232 64.88639832]
[252.26889038 68.73573303]
[247.00691223 70.86026001]
[240.48193359 69.86306763]
[226.21609497 74.49832153]
[211.95024109 79.13357544]
[197.68438721 83.76882935]
[183.41854858 88.40409088]
[173.70515442 99.69564056]
[158.18945312 96.60151672]
[143.92359924 101.23677063]
[129.65774536 105.87203217]
[115.39189911 110.50728607]
[106.23218536 122.38581848]
[105.37585449 137.36135864]
[104.51952362 152.33688354]
[103.66318512 167.31242371]
[111.64785004 177.43644714]
[110.63027954 189.88803101]
[101.69902039 198.04022217]
[100.62892914 213.00199890]
[99.55884552 227.96379089]
[98.48875427 242.92556763]
[97.41867065 257.88735962]
[96.34857941 272.84912109]
[95.27848816 287.81091309]
[102.01158142 302.12789917]
[93.38604736 314.27075195]
[92.31595612 329.23254395]
[91.24587250 344.19433594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 219]
[7 218]
[8 217]
[10 215]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[16 209]
[18 206]
[19 205]
[20 204]
[21 203]
[27 56]
[28 55]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[36 45]
[37 44]
[38 43]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[64 95]
[66 94]
[67 93]
[68 92]
[69 91]
[70 90]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[106 202]
[107 201]
[108 200]
[109 199]
[111 197]
[112 196]
[113 195]
[114 194]
[115 193]
[116 190]
[117 189]
[118 188]
[120 186]
[121 185]
[122 184]
[123 183]
[124 177]
[125 176]
[126 174]
[127 173]
[128 172]
[129 171]
[131 169]
[132 168]
[133 167]
[134 166]
[135 165]
[136 164]
[137 163]
[138 161]
[139 160]
[140 156]
[141 155]
[144 153]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
