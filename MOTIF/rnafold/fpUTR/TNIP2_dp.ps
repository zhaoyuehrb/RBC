%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNIP2)
} def

/sequence { (\
GGAAAGUUCCGGGAAGGGCGGCAGCCGGCGGGGCCCGGGCGCGGAAGUUGCCGGCGGCCGCGCGGCCUCCCGGGCGGGCCUACAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005465206 ubox
1 9 0.006492060 ubox
1 10 0.054455593 ubox
1 80 0.808025879 ubox
1 81 0.047707199 ubox
1 87 0.023441607 ubox
2 7 0.007717683 ubox
2 8 0.010972638 ubox
2 9 0.055223636 ubox
2 79 0.809102180 ubox
2 80 0.049918769 ubox
2 86 0.023638403 ubox
3 7 0.010275599 ubox
3 8 0.051905025 ubox
5 81 0.014208453 ubox
6 19 0.003905463 ubox
6 75 0.886441360 ubox
6 79 0.038760877 ubox
6 80 0.012484713 ubox
6 83 0.012050848 ubox
6 86 0.008734317 ubox
7 18 0.003185412 ubox
7 74 0.627960109 ubox
7 77 0.007079513 ubox
7 78 0.039403763 ubox
7 82 0.012003831 ubox
7 85 0.008723796 ubox
8 18 0.003322876 ubox
8 73 0.090881097 ubox
8 74 0.717097747 ubox
8 76 0.009047686 ubox
8 77 0.022447825 ubox
8 78 0.003388255 ubox
8 84 0.005125799 ubox
9 17 0.005742856 ubox
9 72 0.064420974 ubox
9 73 0.993252941 ubox
9 74 0.010234718 ubox
9 76 0.007532199 ubox
10 16 0.005786874 ubox
10 72 0.996304479 ubox
10 73 0.007883851 ubox
11 68 0.003166372 ubox
11 71 0.999054700 ubox
11 87 0.029264694 ubox
12 67 0.003767585 ubox
12 70 0.999069795 ubox
12 71 0.005446749 ubox
12 86 0.029460233 ubox
12 87 0.013374569 ubox
13 66 0.004139108 ubox
13 69 0.998974871 ubox
13 70 0.006043400 ubox
13 86 0.013545516 ubox
14 68 0.712356409 ubox
15 68 0.696707537 ubox
15 81 0.004037268 ubox
16 67 0.987034852 ubox
16 68 0.022750437 ubox
16 80 0.004010939 ubox
16 81 0.034903203 ubox
17 26 0.009503302 ubox
17 66 0.986545320 ubox
17 67 0.038237741 ubox
17 79 0.003811618 ubox
17 80 0.036049644 ubox
17 87 0.015818660 ubox
18 25 0.009570463 ubox
18 61 0.973507796 ubox
18 63 0.034616696 ubox
18 66 0.036898964 ubox
18 79 0.036070969 ubox
18 86 0.016060127 ubox
19 24 0.009578955 ubox
19 60 0.974167902 ubox
19 62 0.032292582 ubox
19 64 0.216433401 ubox
19 65 0.035028658 ubox
19 78 0.036073938 ubox
19 85 0.016074934 ubox
20 59 0.976590484 ubox
20 61 0.014800708 ubox
20 63 0.208300121 ubox
20 80 0.017506634 ubox
21 58 0.977082442 ubox
21 61 0.207063555 ubox
21 63 0.022286460 ubox
21 75 0.025951415 ubox
21 79 0.017527023 ubox
22 57 0.973381079 ubox
22 60 0.207043584 ubox
22 62 0.022542886 ubox
22 74 0.025855087 ubox
22 78 0.017514776 ubox
24 55 0.973696233 ubox
24 58 0.207053363 ubox
24 61 0.006247977 ubox
24 75 0.023501572 ubox
25 54 0.977401769 ubox
25 57 0.207129167 ubox
25 60 0.004432360 ubox
25 73 0.034997645 ubox
25 74 0.019244625 ubox
26 53 0.977389390 ubox
26 56 0.207118349 ubox
26 60 0.005383816 ubox
26 72 0.037608524 ubox
26 73 0.013707307 ubox
27 52 0.977395549 ubox
27 55 0.206987997 ubox
27 59 0.006963752 ubox
27 71 0.039962732 ubox
27 87 0.009080755 ubox
28 51 0.977413661 ubox
28 55 0.004927533 ubox
28 58 0.006965254 ubox
28 63 0.004122377 ubox
28 70 0.039975160 ubox
28 86 0.009147855 ubox
29 50 0.977350909 ubox
29 53 0.206864974 ubox
29 54 0.006786292 ubox
29 57 0.006926997 ubox
29 62 0.004418198 ubox
29 85 0.009134129 ubox
30 49 0.964667238 ubox
30 52 0.206749734 ubox
30 61 0.004445109 ubox
30 69 0.039992084 ubox
31 48 0.937910022 ubox
31 49 0.023723171 ubox
31 51 0.206213433 ubox
31 52 0.005722343 ubox
31 68 0.040002716 ubox
31 81 0.008650685 ubox
32 48 0.032593688 ubox
32 49 0.159259168 ubox
32 51 0.006115624 ubox
32 52 0.009556281 ubox
32 59 0.004468352 ubox
32 67 0.040043774 ubox
32 80 0.009169609 ubox
33 40 0.004429923 ubox
33 42 0.007300401 ubox
33 48 0.232839170 ubox
33 51 0.010378798 ubox
33 55 0.006743782 ubox
33 58 0.004469934 ubox
33 66 0.040046454 ubox
33 79 0.009174401 ubox
34 39 0.004423762 ubox
34 41 0.007306691 ubox
34 44 0.043457922 ubox
34 47 0.234973406 ubox
34 50 0.011080258 ubox
34 54 0.006081722 ubox
34 57 0.004441172 ubox
34 65 0.039979741 ubox
34 78 0.009177351 ubox
35 43 0.035026820 ubox
35 44 0.996392418 ubox
35 53 0.005290447 ubox
35 54 0.005352621 ubox
35 56 0.003883341 ubox
35 64 0.039882140 ubox
35 77 0.009176787 ubox
36 43 0.998371706 ubox
36 53 0.006502236 ubox
36 60 0.016348355 ubox
36 62 0.016470180 ubox
36 64 0.003282032 ubox
36 76 0.009161085 ubox
37 42 0.994262748 ubox
37 52 0.007005733 ubox
37 59 0.016657268 ubox
37 61 0.016275436 ubox
37 75 0.007203552 ubox
38 49 0.003294131 ubox
38 51 0.006838561 ubox
38 52 0.005915903 ubox
38 58 0.016688963 ubox
38 59 0.016308988 ubox
39 48 0.004553706 ubox
39 51 0.006137110 ubox
39 58 0.016317963 ubox
39 63 0.032619387 ubox
39 75 0.005055832 ubox
40 47 0.004724072 ubox
40 50 0.006327907 ubox
40 56 0.019945449 ubox
40 57 0.012125877 ubox
40 62 0.032684611 ubox
40 72 0.006586451 ubox
40 74 0.005547351 ubox
41 48 0.008630577 ubox
41 49 0.004535826 ubox
41 55 0.022703564 ubox
41 61 0.032689706 ubox
41 71 0.006630602 ubox
42 47 0.009743678 ubox
42 53 0.016801507 ubox
42 54 0.016243365 ubox
42 60 0.032689891 ubox
42 72 0.005711745 ubox
43 52 0.023138378 ubox
43 59 0.032690117 ubox
43 70 0.006791525 ubox
43 71 0.005550769 ubox
44 51 0.023116684 ubox
44 58 0.032660649 ubox
44 69 0.006925781 ubox
44 70 0.005374805 ubox
45 68 0.006892559 ubox
46 68 0.004893599 ubox
47 55 0.032573675 ubox
47 66 0.007051484 ubox
47 67 0.004923418 ubox
48 54 0.032232329 ubox
48 65 0.007133601 ubox
49 53 0.023710375 ubox
49 64 0.007117268 ubox
50 63 0.007140972 ubox
50 66 0.005072165 ubox
51 62 0.007138575 ubox
51 65 0.005093679 ubox
52 60 0.007116959 ubox
52 64 0.005087944 ubox
53 59 0.007119755 ubox
53 63 0.004265994 ubox
54 58 0.007004850 ubox
54 61 0.003284636 ubox
55 60 0.003284458 ubox
55 62 0.003958434 ubox
56 61 0.004613663 ubox
56 80 0.003801928 ubox
57 79 0.003805715 ubox
58 77 0.003213380 ubox
59 76 0.004027293 ubox
60 75 0.005831740 ubox
61 74 0.005837622 ubox
62 86 0.003358996 ubox
63 72 0.005871705 ubox
63 76 0.004240921 ubox
63 85 0.003365102 ubox
64 71 0.005876758 ubox
64 75 0.004250628 ubox
64 80 0.006434190 ubox
65 70 0.005805138 ubox
65 75 0.003699227 ubox
65 79 0.006442161 ubox
66 73 0.004217591 ubox
66 74 0.003798853 ubox
66 78 0.006427303 ubox
67 72 0.004212635 ubox
67 73 0.003796607 ubox
67 77 0.006403057 ubox
68 72 0.003420572 ubox
68 76 0.005656035 ubox
72 80 0.008794981 ubox
72 81 0.008844013 ubox
73 79 0.008813342 ubox
73 80 0.009791803 ubox
73 87 0.040250639 ubox
74 79 0.010180379 ubox
74 86 0.073775303 ubox
75 85 0.074078936 ubox
76 87 0.141636903 ubox
77 86 0.139132192 ubox
77 87 0.542602113 ubox
78 86 0.549781650 ubox
79 85 0.549918778 ubox
1 80 0.9500000 lbox
2 79 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
9 73 0.9500000 lbox
10 72 0.9500000 lbox
11 71 0.9500000 lbox
12 70 0.9500000 lbox
13 69 0.9500000 lbox
14 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
