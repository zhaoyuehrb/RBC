%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRIM65)
} def

/sequence { (\
AGCGCGCGAGGCCCGCGGUCCCUUUAAGACGCCCGGGGCCCGCCUGGCUCUCGCCGCCGCCGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.017295518 ubox
1 49 0.017628376 ubox
1 51 0.005554562 ubox
2 16 0.017332419 ubox
2 19 0.013471926 ubox
2 43 0.003533188 ubox
2 44 0.018293446 ubox
2 48 0.020266887 ubox
2 50 0.006374950 ubox
2 54 0.030382381 ubox
2 57 0.702324560 ubox
2 60 0.452497689 ubox
2 65 0.040078715 ubox
3 15 0.017352397 ubox
3 17 0.008374469 ubox
3 18 0.013964271 ubox
3 42 0.003598112 ubox
3 46 0.008657267 ubox
3 47 0.019723170 ubox
3 53 0.030430302 ubox
3 56 0.713257912 ubox
3 59 0.453458844 ubox
3 62 0.007245124 ubox
3 64 0.040004400 ubox
4 12 0.003861861 ubox
4 14 0.017206297 ubox
4 16 0.008611988 ubox
4 41 0.003842559 ubox
4 43 0.014880913 ubox
4 45 0.015497536 ubox
4 48 0.007961386 ubox
4 52 0.030162013 ubox
4 54 0.040406155 ubox
4 55 0.794030217 ubox
4 57 0.314327416 ubox
4 58 0.336206517 ubox
4 60 0.013231960 ubox
4 61 0.004549707 ubox
4 65 0.011336377 ubox
5 11 0.003998934 ubox
5 15 0.008609581 ubox
5 17 0.024122900 ubox
5 42 0.014888750 ubox
5 46 0.006056673 ubox
5 47 0.007999678 ubox
5 53 0.040816774 ubox
5 56 0.437459416 ubox
5 59 0.013723350 ubox
5 62 0.024121904 ubox
5 64 0.011318745 ubox
6 12 0.017243932 ubox
6 14 0.008260375 ubox
6 16 0.024621820 ubox
6 41 0.014950805 ubox
6 43 0.070946724 ubox
6 48 0.029617775 ubox
6 52 0.040348624 ubox
6 54 0.944163294 ubox
6 55 0.310310430 ubox
6 57 0.008959548 ubox
6 58 0.005578919 ubox
6 60 0.005360510 ubox
6 61 0.010641556 ubox
7 11 0.017152389 ubox
7 15 0.024623119 ubox
7 42 0.071544529 ubox
7 47 0.029636502 ubox
7 53 0.994273898 ubox
7 56 0.008516190 ubox
7 59 0.007437119 ubox
7 62 0.004749594 ubox
8 14 0.024472824 ubox
8 41 0.075493907 ubox
8 50 0.040121914 ubox
8 52 0.994366663 ubox
8 55 0.005091322 ubox
8 58 0.007084356 ubox
8 61 0.004660848 ubox
9 45 0.029715175 ubox
9 49 0.038011610 ubox
9 51 0.994087892 ubox
10 40 0.081012462 ubox
10 44 0.029818553 ubox
10 48 0.027246612 ubox
10 49 0.111863955 ubox
10 50 0.987918078 ubox
10 58 0.005140581 ubox
10 66 0.030830051 ubox
11 39 0.081065126 ubox
11 43 0.029784503 ubox
11 48 0.985114501 ubox
11 49 0.134989490 ubox
11 57 0.005165194 ubox
11 65 0.031095596 ubox
12 37 0.013516969 ubox
12 38 0.080092042 ubox
12 42 0.027844744 ubox
12 47 0.991164904 ubox
12 56 0.005142488 ubox
12 64 0.031096532 ubox
13 36 0.018930405 ubox
13 37 0.079091045 ubox
13 38 0.003270948 ubox
13 46 0.989301223 ubox
13 47 0.089552527 ubox
13 63 0.031096236 ubox
14 35 0.022735448 ubox
14 36 0.078056833 ubox
14 37 0.003462228 ubox
14 42 0.202069198 ubox
14 46 0.094055205 ubox
14 62 0.031086746 ubox
15 32 0.019071941 ubox
15 34 0.025846409 ubox
15 41 0.204065283 ubox
15 43 0.972463045 ubox
15 45 0.014930708 ubox
15 60 0.021643123 ubox
15 61 0.021880736 ubox
16 31 0.019098410 ubox
16 35 0.039960584 ubox
16 42 0.973663972 ubox
16 59 0.030605150 ubox
17 30 0.015655351 ubox
17 33 0.068665771 ubox
17 34 0.038118320 ubox
17 40 0.502235897 ubox
17 41 0.859716313 ubox
17 44 0.004006433 ubox
17 58 0.030481390 ubox
18 30 0.029099111 ubox
18 32 0.069712135 ubox
18 33 0.034521389 ubox
18 39 0.679135943 ubox
18 40 0.727769690 ubox
18 43 0.003985807 ubox
18 57 0.030423794 ubox
19 29 0.035662971 ubox
19 31 0.069833451 ubox
19 37 0.004820102 ubox
19 38 0.816743079 ubox
19 42 0.003921533 ubox
19 56 0.029762651 ubox
20 28 0.036381097 ubox
20 36 0.005999058 ubox
20 37 0.819095435 ubox
20 38 0.565239514 ubox
21 35 0.006269088 ubox
21 36 0.819184281 ubox
21 37 0.565822853 ubox
21 38 0.016637192 ubox
22 28 0.065967764 ubox
22 35 0.818509910 ubox
22 36 0.565604280 ubox
22 37 0.016978410 ubox
23 27 0.060106661 ubox
23 29 0.043513922 ubox
23 35 0.537797743 ubox
23 36 0.017045504 ubox
24 28 0.041004189 ubox
24 35 0.030460475 ubox
25 35 0.009760417 ubox
27 51 0.028497829 ubox
28 50 0.029547956 ubox
28 52 0.003565030 ubox
29 49 0.029435850 ubox
29 51 0.003496901 ubox
31 39 0.007306640 ubox
31 48 0.029001939 ubox
31 54 0.004060537 ubox
31 65 0.028039881 ubox
32 38 0.007314482 ubox
32 47 0.025405694 ubox
32 53 0.004093009 ubox
32 64 0.028096342 ubox
33 37 0.007261371 ubox
33 46 0.021179478 ubox
33 47 0.015815059 ubox
33 63 0.028097428 ubox
34 46 0.021130953 ubox
34 53 0.003317673 ubox
34 62 0.028096944 ubox
35 44 0.015204765 ubox
35 45 0.025344702 ubox
35 51 0.004238385 ubox
35 52 0.003426985 ubox
35 61 0.028093520 ubox
36 43 0.015197007 ubox
36 44 0.025505818 ubox
36 50 0.004984315 ubox
36 60 0.028067212 ubox
37 43 0.025495383 ubox
37 44 0.003430286 ubox
37 49 0.005046201 ubox
37 58 0.028028627 ubox
37 66 0.004179914 ubox
38 43 0.003453277 ubox
38 48 0.006803694 ubox
38 57 0.028050644 ubox
38 65 0.004923649 ubox
39 47 0.006790785 ubox
39 56 0.027800542 ubox
39 64 0.004928328 ubox
40 46 0.006752810 ubox
40 63 0.004929635 ubox
41 62 0.004929446 ubox
42 54 0.004473634 ubox
42 57 0.004457154 ubox
42 60 0.004244806 ubox
42 61 0.004115804 ubox
42 65 0.036919309 ubox
43 53 0.004470032 ubox
43 56 0.004436432 ubox
43 59 0.005026003 ubox
43 64 0.037805250 ubox
44 63 0.040964221 ubox
45 56 0.011245943 ubox
45 59 0.005140343 ubox
45 62 0.040949342 ubox
46 55 0.070609301 ubox
46 58 0.007102810 ubox
46 61 0.041054448 ubox
46 66 0.018591044 ubox
47 54 0.070800531 ubox
47 57 0.007116996 ubox
47 60 0.041053990 ubox
47 65 0.019240716 ubox
48 53 0.070681587 ubox
48 56 0.007118384 ubox
48 59 0.040998301 ubox
48 64 0.019228744 ubox
49 63 0.018297663 ubox
50 62 0.018114362 ubox
50 63 0.005794120 ubox
51 62 0.005517324 ubox
52 59 0.006248118 ubox
53 58 0.006522266 ubox
53 60 0.017855331 ubox
53 65 0.013640136 ubox
54 59 0.017951793 ubox
54 63 0.006021066 ubox
54 64 0.013622823 ubox
55 62 0.008486392 ubox
55 63 0.013712881 ubox
56 61 0.008542079 ubox
56 65 0.522187092 ubox
57 63 0.026383306 ubox
57 64 0.535223435 ubox
58 62 0.037334300 ubox
58 63 0.557477730 ubox
59 65 0.301220672 ubox
60 64 0.299629819 ubox
2 57 0.9500000 lbox
3 56 0.9500000 lbox
4 55 0.9500000 lbox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
10 50 0.9500000 lbox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
13 46 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
showpage
end
%%EOF
