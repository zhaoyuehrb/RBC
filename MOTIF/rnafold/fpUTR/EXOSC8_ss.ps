%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCACAGCACCAGCUCUUUUAUAAAGAGGGAGACCCGCUCCUUCUUUAACAGCAGAUUCGUCAAAAUACGUCCAAGGCAAGGAAACCUAGAAAGGCGUCUGGGCAGGGGAAAGUCGAUGCGAGGGCGGGCCAGGGACCUUUCGUCGCGUCCCCACCUUGGCAUUUCCCGUGGCGUGAGCGGCCCCGGCAUCCGUGUCGAAAGUGCGGCGGCGGAACAGGCGCGCAGGAGAGGAGCGGCGCAGGCGCAGACGCGC\
GGGCGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[59.36835861 335.68539429]
[50.40254593 323.65985107]
[46.03775406 309.30892944]
[46.78955460 294.32778931]
[52.56913757 280.48593140]
[62.69383240 269.41839600]
[75.96772003 262.43243408]
[90.82291412 260.35317993]
[105.50474548 263.42630005]
[118.27899933 271.28875732]
[127.63660431 283.01147461]
[124.64511871 268.31280518]
[120.24652100 262.40512085]
[121.70617676 253.42291260]
[118.88849640 238.68992615]
[116.07081604 223.95695496]
[113.25313568 209.22396851]
[110.43545532 194.49099731]
[107.61777496 179.75801086]
[104.80010223 165.02503967]
[101.98242188 150.29205322]
[71.03553009 159.75695801]
[33.29035950 148.50888062]
[22.01762962 158.40461731]
[10.74490166 168.30035400]
[-0.52782708 178.19609070]
[-11.80055618 188.09182739]
[-23.07328415 197.98756409]
[-34.34601212 207.88330078]
[-45.61874390 217.77903748]
[-56.89147186 227.67477417]
[-68.16419983 237.57051086]
[-79.43692780 247.46624756]
[-81.90896606 263.31768799]
[-95.91426086 271.14273071]
[-110.70915985 264.93865967]
[-114.94427490 249.46469116]
[-105.37078857 236.59115601]
[-89.33266449 236.19351196]
[-78.05993652 226.29777527]
[-66.78720856 216.40203857]
[-55.51447678 206.50630188]
[-44.24174881 196.61056519]
[-32.96902084 186.71482849]
[-21.69629097 176.81910706]
[-10.42356300 166.92337036]
[0.84916586 157.02763367]
[12.12189484 147.13189697]
[23.39462280 137.23616028]
[20.66831398 130.24922180]
[6.69444704 135.70184326]
[-7.27941895 141.15446472]
[-21.25328445 146.60708618]
[-35.22724152 152.05946350]
[-40.67939758 138.08541870]
[-26.70590401 132.63320923]
[-12.73203850 127.18059540]
[1.24182773 121.72797394]
[15.21569443 116.27536011]
[12.48938465 109.28842163]
[-2.50643134 109.64270782]
[-17.50224686 109.99698639]
[-28.22776985 121.60469055]
[-44.02281952 122.14498901]
[-55.51647568 111.29734802]
[-55.88975525 95.49746704]
[-44.92119598 84.11914062]
[-29.11825180 83.91292572]
[-17.85652924 95.00117493]
[-2.86071324 94.64688873]
[12.13510227 94.29261017]
[13.99049187 79.40779877]
[-0.45948479 75.38310242]
[-14.90946102 71.35840607]
[-27.70349693 80.34988403]
[-43.27940750 78.96240997]
[-54.28271866 67.85110474]
[-55.51800919 52.26238632]
[-46.40200806 39.55677414]
[-31.23901558 35.73346710]
[-17.18853188 42.59771729]
[-10.88476467 56.90843201]
[3.56521130 60.93312836]
[18.01518822 64.95782471]
[21.46738434 58.29957199]
[28.37178040 44.98306274]
[31.82397842 38.32481003]
[20.20777702 28.83461189]
[8.59157562 19.34441376]
[-3.02462554 9.85421467]
[-14.64082623 0.36401591]
[-26.25702667 -9.12618256]
[-41.95465088 -7.29309416]
[-54.29873276 -17.16219330]
[-55.96575546 -32.87831879]
[-45.96670151 -45.11737061]
[-30.23382759 -46.61813736]
[-18.10117531 -36.49024200]
[-16.76682854 -20.74238396]
[-5.15062761 -11.25218487]
[6.46557331 -1.76198626]
[18.08177376 7.72821236]
[29.69797516 17.21841049]
[41.31417465 26.70861053]
[55.25559998 21.17356682]
[57.19885635 6.29997444]
[51.31457520 -8.38627148]
[60.63549423 -20.00391960]
[62.57875061 -34.87751007]
[64.52200317 -49.75110626]
[66.46526337 -64.62469482]
[53.25519180 -57.51877594]
[39.41591263 -63.30448151]
[35.19401932 -77.69808197]
[43.71539688 -90.04255676]
[58.67082596 -91.19806671]
[68.98738098 -80.30886078]
[71.80506134 -95.04183960]
[74.62274170 -109.77481842]
[77.44042206 -124.50779724]
[80.25810242 -139.24078369]
[75.25083160 -154.24870300]
[85.24115753 -165.29600525]
[88.05883789 -180.02897644]
[90.87651825 -194.76196289]
[93.69419861 -209.49493408]
[88.68692780 -224.50286865]
[98.67725372 -235.55015564]
[101.49493408 -250.28314209]
[104.31261444 -265.01611328]
[92.13021851 -274.14575195]
[85.14824677 -287.60455322]
[84.70400238 -302.69836426]
[90.83204651 -316.43182373]
[102.26800537 -326.10281372]
[116.70903778 -329.83407593]
[119.52671814 -344.56704712]
[122.34439850 -359.30001831]
[114.55901337 -373.32739258]
[120.80493164 -388.10467529]
[136.29080200 -392.29602051]
[149.13720703 -382.68612671]
[149.48947144 -366.64694214]
[137.07737732 -356.48233032]
[134.25970459 -341.74935913]
[131.44201660 -327.01638794]
[143.48707581 -318.21969604]
[150.54736328 -305.01129150]
[151.17524719 -289.98574829]
[145.19270325 -276.12106323]
[133.73712158 -266.18844604]
[119.04559326 -262.19842529]
[116.22791290 -247.46545410]
[113.41023254 -232.73248291]
[118.61904144 -218.77835083]
[108.42717743 -206.67726135]
[105.60949707 -191.94427490]
[102.79181671 -177.21130371]
[99.97413635 -162.47831726]
[105.18294525 -148.52420044]
[94.99108124 -136.42309570]
[92.17340088 -121.69012451]
[89.35572052 -106.95713806]
[86.53804016 -92.22415924]
[83.72035980 -77.49118042]
[81.33885193 -62.68144226]
[79.39559937 -47.80784988]
[77.45233917 -32.93425751]
[75.50908661 -18.06066322]
[81.53236389 -4.43827677]
[72.07244873 8.24322987]
[70.12919617 23.11682129]
[91.74641418 22.54947662]
[111.55017090 27.61970711]
[128.18049622 37.34242249]
[140.66275024 50.43545532]
[148.46275330 65.45082092]
[151.50082397 80.91277313]
[150.12506104 95.45035553]
[165.09890747 96.33563232]
[180.07276917 97.22090149]
[195.05158997 98.01773834]
[210.03485107 98.72610474]
[225.01811218 99.43447113]
[230.49072266 89.42666626]
[239.25277710 82.20399475]
[250.02348328 78.77288818]
[261.24664307 79.58914185]
[271.31552124 84.49772644]
[278.80279541 92.76047516]
[282.66287231 103.16685486]
[297.61166382 104.40554810]
[312.56042480 105.64423370]
[327.50918579 106.88292694]
[342.45794678 108.12162018]
[357.41375732 109.27201080]
[372.37612915 110.33406830]
[387.33847046 111.39611816]
[402.30084229 112.45817566]
[414.07363892 101.91413116]
[429.84921265 102.86640167]
[440.26818848 114.75001526]
[439.14920044 130.51463318]
[427.15606689 140.80740356]
[411.40417480 139.52178955]
[401.23876953 127.42053223]
[386.27642822 126.35847473]
[371.31405640 125.29641724]
[356.35171509 124.23436737]
[349.48046875 126.88655853]
[341.21926880 123.07038116]
[326.27050781 121.83169556]
[311.32171631 120.59300232]
[296.37295532 119.35431671]
[281.42419434 118.11562347]
[270.02612305 132.96893311]
[251.82258606 137.95281982]
[234.16802979 130.86466980]
[224.30975342 114.41773224]
[209.32649231 113.70936584]
[194.34321594 113.00099945]
[187.53651428 115.81475067]
[179.18750000 112.19475555]
[164.21363831 111.30948639]
[149.23979187 110.42420959]
[144.99760437 122.54854584]
[137.82460022 133.20422363]
[128.18797302 141.69721985]
[116.71540070 147.47438049]
[119.53308105 162.20735168]
[122.35076141 176.94033813]
[125.16844177 191.67330933]
[127.98612213 206.40629578]
[130.80380249 221.13926697]
[133.62147522 235.87225342]
[136.43916321 250.60522461]
[139.34379578 265.32131958]
[142.33528137 280.01998901]
[146.70013428 294.37088013]
[152.39944458 308.24597168]
[158.09875488 322.12103271]
[172.40635681 328.27981567]
[177.98860168 342.43231201]
[172.02897644 356.03445435]
[177.72828674 369.90954590]
[183.42759705 383.78460693]
[189.12690735 397.65969849]
[202.43128967 407.24749756]
[200.51123047 423.53384399]
[185.34191895 429.76477051]
[172.52825928 419.53039551]
[175.25183105 403.35900879]
[169.55252075 389.48391724]
[163.85321045 375.60885620]
[158.15390015 361.73376465]
[144.35379028 356.24807739]
[138.37623596 342.25796509]
[144.22367859 327.82034302]
[138.52436829 313.94525146]
[132.82505798 300.07019043]
[131.57923889 315.01837158]
[125.34597015 328.66189575]
[114.86151886 339.38928223]
[101.36429596 345.93334961]
[86.44857025 347.52117920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 238]
[12 237]
[14 236]
[15 235]
[16 234]
[17 233]
[18 232]
[19 231]
[20 230]
[21 229]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[60 71]
[61 70]
[62 69]
[72 84]
[73 83]
[74 82]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[105 172]
[106 171]
[108 169]
[109 168]
[110 167]
[111 166]
[117 165]
[118 164]
[119 163]
[120 162]
[121 161]
[123 159]
[124 158]
[125 157]
[126 156]
[128 154]
[129 153]
[130 152]
[136 146]
[137 145]
[138 144]
[179 225]
[180 224]
[181 223]
[182 221]
[183 220]
[184 219]
[191 215]
[192 214]
[193 213]
[194 212]
[195 211]
[196 209]
[197 208]
[198 207]
[199 206]
[239 260]
[240 259]
[241 258]
[244 255]
[245 254]
[246 253]
[247 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
