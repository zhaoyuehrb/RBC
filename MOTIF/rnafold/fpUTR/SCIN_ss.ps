%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUGGAAGCCAGCGCUGCGCUCCCCGUGGGAAGCGAUCGUCUCCUCUGUCAACUCGCGCCUGGGCACUUAGCCCCUCCCGUUUCAGGGCGCCGCCUCCCCGGAUGGCAAACACUAUAAAGUGGCGGCGAAUAAGGUUCCUCCUGCUGCUCUCGGUUUAGUCCAAGAUCAGCGAUAUCACGCGUCCCCCGGAGCAUCGCGUGCAGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[84.24792480 124.09638214]
[80.92566681 138.72384644]
[77.60340881 153.35130310]
[78.75439453 162.41293335]
[74.12126160 168.17103577]
[70.58158875 182.74742126]
[72.71948242 199.56602478]
[57.14997482 206.27622986]
[46.39194489 193.17274475]
[56.00521469 179.20774841]
[59.54488754 164.63136292]
[62.97594833 150.02905273]
[66.29821014 135.40158081]
[69.62046814 120.77412415]
[63.85443497 106.92664337]
[51.13239670 98.97995758]
[38.41036224 91.03327179]
[25.68832397 83.08658600]
[12.96628761 75.13990021]
[-23.26140022 66.70273590]
[-37.42753601 61.77114105]
[-51.59366989 56.83954620]
[-65.68972778 63.46819305]
[-79.98595428 58.26505280]
[-86.21848297 44.78576660]
[-100.38461304 39.85417175]
[-114.55075073 34.92258072]
[-123.68419647 35.05661011]
[-128.89015198 29.81066895]
[-142.98129272 24.66870880]
[-157.07243347 19.52674866]
[-171.16357422 14.38478947]
[-186.77990723 16.92262077]
[-196.08369446 5.29125309]
[-210.17483521 0.14929365]
[-224.26597595 -4.99266624]
[-214.06292725 6.00268698]
[-207.31941223 19.40138245]
[-204.56726074 34.14674377]
[-206.02351379 49.07588577]
[-211.57331848 63.01144028]
[-220.77899170 74.85438538]
[-232.91456604 83.67074585]
[-247.02293396 88.76521301]
[-261.99148560 89.73603058]
[-276.63973999 86.50662994]
[-289.81243896 79.33168793]
[-300.47076416 68.77706146]
[-307.77413940 55.67512894]
[-311.14660645 41.05915833]
[-310.32217407 26.08183098]
[-305.36587524 11.92432213]
[-296.66857910 -0.29685113]
[-284.91616821 -9.61787415]
[-271.03555298 -15.30365276]
[-256.12136841 -16.90578270]
[-241.34649658 -14.29683685]
[-253.30883789 -23.34683609]
[-265.27117920 -32.39683533]
[-277.23352051 -41.44683456]
[-289.19583130 -50.49683762]
[-301.15817261 -59.54683685]
[-313.82070923 -67.58801270]
[-327.09854126 -74.56645966]
[-340.37640381 -81.54491425]
[-353.65423584 -88.52336884]
[-369.33895874 -85.15146637]
[-381.66268921 -95.42300415]
[-381.17178345 -111.45854950]
[-368.24276733 -120.95699310]
[-352.79370117 -116.63194275]
[-346.67578125 -101.80121613]
[-333.39794922 -94.82276154]
[-320.12008667 -87.84430695]
[-306.84225464 -80.86585236]
[-313.87313843 -94.11600494]
[-314.03332520 -109.11515045]
[-307.28704834 -122.51244354]
[-295.14138794 -131.31489563]
[-280.30975342 -133.55599976]
[-266.10556030 -128.73512268]
[-255.70205688 -117.92922211]
[-251.42343140 -103.55239105]
[-254.22552490 -88.81643677]
[-263.48233032 -77.01342010]
[-277.12588501 -70.78015137]
[-292.10818481 -71.50917053]
[-280.14584351 -62.45917130]
[-268.18350220 -53.40917206]
[-256.22116089 -44.35917282]
[-244.25883484 -35.30917358]
[-232.29649353 -26.25917244]
[-219.12402344 -19.08380699]
[-205.03288269 -13.94184685]
[-190.94174194 -8.79988766]
[-176.33329773 -11.70550537]
[-166.02160645 0.29364905]
[-151.93046570 5.43560886]
[-137.83932495 10.57756805]
[-123.74818420 15.71952820]
[-109.61915588 20.75644493]
[-95.45302582 25.68803787]
[-81.28688812 30.61963081]
[-68.03119659 23.92469406]
[-53.59446716 28.72422791]
[-46.66207886 42.67341232]
[-32.49594116 47.60500717]
[-18.32980728 52.53659821]
[-26.02170181 39.65891647]
[-17.86577606 27.06999779]
[-2.96900153 28.82673836]
[2.03450370 42.96869278]
[7.28122187 28.91622162]
[12.52793980 14.86374950]
[17.77465820 0.81127852]
[14.52851391 -15.26337814]
[27.00382614 -25.90756035]
[42.36706161 -20.17144775]
[44.81384277 -3.95585918]
[31.82712936 6.05799675]
[26.58041191 20.11046791]
[21.33369255 34.16294098]
[16.08697510 48.21541214]
[20.91297340 62.41786575]
[33.63500977 70.36454773]
[46.35704422 78.31123352]
[59.07908249 86.25791931]
[71.80111694 94.20460510]
[77.43608856 83.29228210]
[86.91075897 75.96923828]
[98.29322052 73.40235901]
[109.39471436 75.82061005]
[118.19000244 82.51867676]
[123.18674469 92.03564453]
[123.67632294 102.46673584]
[137.34599304 108.64250946]
[151.01567078 114.81827545]
[164.68533325 120.99404144]
[178.35501099 127.16981506]
[192.02467346 133.34558105]
[205.69435120 139.52134705]
[217.52380371 128.64968872]
[236.19323730 127.43910217]
[253.77590942 139.58544922]
[268.77551270 139.69711304]
[283.77508545 139.80877686]
[298.77465820 139.92044067]
[313.77426147 140.03211975]
[327.63165283 132.39776611]
[340.30096436 140.22959900]
[355.30053711 140.34126282]
[370.30014038 140.45292664]
[384.15753174 132.81857300]
[396.82684326 140.65040588]
[411.82641602 140.76208496]
[422.90731812 129.49311829]
[438.71151733 129.44367981]
[449.86270142 140.64309692]
[449.74505615 156.44694519]
[438.42837524 167.47909546]
[422.62664795 167.19435120]
[411.71475220 155.76165771]
[396.71517944 155.64999390]
[383.93066406 163.29232788]
[370.18847656 155.45251465]
[355.18887329 155.34085083]
[340.18930054 155.22918701]
[327.40478516 162.87152100]
[313.66259766 155.03169250]
[298.66299438 154.92002869]
[283.66342163 154.80836487]
[268.66381836 154.69670105]
[253.66424561 154.58503723]
[250.22454834 161.24974060]
[263.55386353 168.12937927]
[256.67401123 181.45857239]
[243.34512329 174.57917786]
[239.90542603 181.24388123]
[248.68601990 193.40534973]
[257.46664429 205.56680298]
[266.24722290 217.72825623]
[275.02783203 229.88970947]
[283.80844116 242.05116272]
[292.94723511 253.94580078]
[302.43612671 265.56304932]
[311.92504883 277.18032837]
[326.62756348 285.62261963]
[322.58526611 302.08761597]
[305.64471436 302.76126099]
[300.30776978 286.66921997]
[290.81887817 275.05197144]
[281.32998657 263.43469238]
[278.55764771 263.01959229]
[275.78271484 261.48129272]
[273.43377686 258.81335449]
[271.93389893 255.16439819]
[271.64697266 250.83177185]
[262.86639404 238.67031860]
[254.08576965 226.50886536]
[245.30517578 214.34739685]
[236.52456665 202.18594360]
[227.74397278 190.02449036]
[202.29385376 176.36691284]
[199.51858521 153.19102478]
[185.84890747 147.01524353]
[172.17924500 140.83947754]
[158.50956726 134.66371155]
[144.83990479 128.48794556]
[131.17022705 122.31217957]
[117.50055695 116.13640594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[5 11]
[6 10]
[15 128]
[16 127]
[17 126]
[18 125]
[19 124]
[20 108]
[21 107]
[22 106]
[25 103]
[26 102]
[27 101]
[29 100]
[30 99]
[31 98]
[32 97]
[34 95]
[35 94]
[36 93]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[62 87]
[63 75]
[64 74]
[65 73]
[66 72]
[112 123]
[113 122]
[114 121]
[115 120]
[135 210]
[136 209]
[137 208]
[138 207]
[139 206]
[140 205]
[141 204]
[144 173]
[145 172]
[146 171]
[147 170]
[148 169]
[150 167]
[151 166]
[152 165]
[154 163]
[155 162]
[178 202]
[179 201]
[180 200]
[181 199]
[182 198]
[183 197]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
