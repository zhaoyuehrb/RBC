%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCGGCGCGCGCGGCAGCCCCGAGGCAGCAGAGCGCGGAGCCGGGAGCGCGGGGAGCGCGGGCCGGCGGCGGCGAGGGAGGACGGGGGCGCAGACGGCCGGCGCGCGGCGCGGCUACCAUGGGCGUGCGGUGAGCAGCCGCUCGGGACGACUUCCUCGGCUGCGCGGCGCUCGCGCGGAGCUCCCCGGCCGGCGGUGCGUCCCCACGGUCACC\
) } def
/len { sequence length } bind def

/coor [
[-83.67898560 409.99960327]
[-88.70864868 413.43905640]
[-94.45922852 415.32812500]
[-100.46813965 415.53848267]
[-106.25855255 414.07586670]
[-116.23049164 425.28125000]
[-126.20243073 436.48663330]
[-136.17436218 447.69198608]
[-139.48042297 465.80871582]
[-156.34405518 470.67089844]
[-166.15197754 482.02014160]
[-175.95988464 493.36935425]
[-185.76780701 504.71856689]
[-195.57571411 516.06781006]
[-198.47117615 536.01965332]
[-216.99865723 541.56072998]
[-226.47233582 553.19036865]
[-229.18940735 568.77655029]
[-243.22650146 573.75744629]
[-252.70018005 585.38708496]
[-262.17385864 597.01678467]
[-264.25076294 613.28387451]
[-279.47937012 619.36834717]
[-292.19384766 609.01098633]
[-289.31457520 592.86657715]
[-273.80352783 587.54309082]
[-264.32986450 575.91345215]
[-254.85618591 564.28375244]
[-252.81672668 549.52941895]
[-238.10202026 543.71673584]
[-228.62834167 532.08703613]
[-230.57676697 522.06091309]
[-226.60330200 512.41400146]
[-217.79597473 506.42141724]
[-206.92494202 506.25988770]
[-197.11701965 494.91067505]
[-187.30911255 483.56143188]
[-177.50119019 472.21221924]
[-167.69328308 460.86300659]
[-168.25971985 448.78207397]
[-160.18473816 439.24697876]
[-147.37974548 437.72006226]
[-137.40780640 426.51467896]
[-127.43586731 415.30929565]
[-117.46392822 404.10394287]
[-115.56327820 380.48760986]
[-92.40983582 372.77545166]
[-83.62839508 360.61459351]
[-82.45028687 345.76666260]
[-68.09844971 339.10818481]
[-59.31700516 326.94732666]
[-58.13889694 312.09939575]
[-43.78705978 305.44091797]
[-35.00561523 293.28005981]
[-26.22417450 281.11923218]
[-17.44273376 268.95837402]
[-8.66129208 256.79751587]
[0.03148185 244.57313538]
[8.63512802 232.28584290]
[17.23877525 219.99856567]
[25.84242058 207.71128845]
[24.05107880 195.75048828]
[31.11513901 185.44406128]
[43.69863892 182.62362671]
[52.48007965 170.46276855]
[61.26152039 158.30192566]
[70.04296112 146.14106750]
[78.82440186 133.98022461]
[87.60584259 121.81937408]
[78.72705841 95.86553192]
[97.58624268 81.91218567]
[101.88829041 67.54234314]
[106.19033813 53.17250061]
[110.49238586 38.80265808]
[114.79443359 24.43281364]
[118.99186707 10.03206635]
[123.08447266 -4.39882517]
[127.17707062 -18.82971573]
[131.26966858 -33.26060867]
[135.36227417 -47.69149780]
[139.45486450 -62.12239075]
[143.54747009 -76.55328369]
[137.95513916 -88.17330933]
[141.65827942 -100.10688782]
[152.15156555 -106.12023926]
[156.45361328 -120.49008179]
[147.30329895 -130.79560852]
[144.46157837 -144.17039490]
[148.56591797 -157.09970093]
[158.44264221 -166.23962402]
[171.44000244 -169.28189087]
[175.95059204 -183.58764648]
[175.54634094 -192.70927429]
[180.63220215 -198.06781006]
[185.35037231 -212.30644226]
[185.07884216 -221.43298340]
[190.24209595 -226.71697998]
[195.16685486 -240.88549805]
[200.09161377 -255.05401611]
[205.01637268 -269.22253418]
[200.10913086 -281.14807129]
[204.49989319 -292.84613037]
[215.32507324 -298.23916626]
[220.45536804 -312.33456421]
[217.90461731 -327.94879150]
[229.52828979 -337.26220703]
[234.65859985 -351.35760498]
[239.78889465 -365.45297241]
[237.23814392 -381.06723022]
[248.86181641 -390.38061523]
[253.99211121 -404.47601318]
[259.12240601 -418.57141113]
[264.25271606 -432.66680908]
[269.38302612 -446.76217651]
[266.83227539 -462.37640381]
[278.45593262 -471.68981934]
[283.58624268 -485.78521729]
[288.71655273 -499.88061523]
[288.45214844 -516.83251953]
[304.66836548 -521.77929688]
[313.91094971 -507.56625366]
[302.81195068 -494.75030518]
[297.68164062 -480.65490723]
[292.55133057 -466.55953979]
[295.46902466 -451.95349121]
[283.47842407 -441.63189697]
[278.34811401 -427.53649902]
[273.21780396 -413.44110107]
[268.08749390 -399.34570312]
[262.95721436 -385.25033569]
[265.87490845 -370.64428711]
[253.88429260 -360.32269287]
[248.75398254 -346.22729492]
[243.62368774 -332.13189697]
[246.54138184 -317.52587891]
[234.55076599 -307.20425415]
[229.42045593 -293.10885620]
[233.39328003 -276.01385498]
[219.18487549 -264.29776001]
[214.26011658 -250.12925720]
[209.33535767 -235.96073914]
[204.41059875 -221.79222107]
[199.58901978 -207.58827209]
[194.87084961 -193.34963989]
[190.25634766 -179.07705688]
[185.74575806 -164.77130127]
[195.92831421 -151.89305115]
[196.43197632 -135.31698608]
[186.86016846 -121.57141113]
[170.82345581 -116.18802643]
[166.52140808 -101.81818390]
[171.48150635 -84.98308563]
[157.97836304 -72.46068573]
[153.88575745 -58.02978897]
[149.79316711 -43.59889984]
[145.70056152 -29.16800880]
[141.60795593 -14.73711681]
[137.51536560 -0.30622533]
[133.42276001 14.12466621]
[134.62147522 21.41458702]
[129.16427612 28.73486328]
[124.86222839 43.10470581]
[120.56018066 57.47454834]
[116.25813293 71.84439087]
[111.95608521 86.21423340]
[121.45576477 96.95332336]
[121.06881714 113.63103485]
[134.47329712 120.36302185]
[147.87779236 127.09500885]
[167.93154907 125.01932526]
[177.83853149 141.62722778]
[191.43315125 147.96649170]
[205.02777100 154.30577087]
[218.62239075 160.64505005]
[234.12902832 156.53123474]
[246.92720032 166.20524597]
[247.19923401 182.24598694]
[234.73645020 192.34838867]
[219.09922791 188.76275635]
[212.28311157 174.23966980]
[198.68849182 167.90039062]
[185.09387207 161.56111145]
[171.49926758 155.22184753]
[162.25494385 159.56483459]
[151.92892456 158.07322693]
[143.96305847 151.00038147]
[141.14581299 140.49949646]
[127.74131775 133.76751709]
[114.33683014 127.03552246]
[99.76669312 130.60081482]
[90.98525238 142.76165771]
[82.20381165 154.92251587]
[73.42237091 167.08335876]
[64.64093018 179.24421692]
[55.85948944 191.40505981]
[54.41184235 209.76397705]
[38.12970352 216.31492615]
[29.52605629 228.60221863]
[20.92240906 240.88949585]
[12.31876278 253.17677307]
[9.96137238 261.99777222]
[3.49955845 265.57894897]
[-5.28188324 277.73980713]
[-14.06332493 289.90066528]
[-22.84476662 302.06152344]
[-31.62620735 314.22235107]
[-33.43242264 329.94012451]
[-47.15615463 335.72879028]
[-55.93759537 347.88961792]
[-57.74381256 363.60739136]
[-71.46754456 369.39605713]
[-80.24898529 381.55688477]
[-77.56221771 387.24954224]
[-76.57450104 393.42556763]
[-77.34191132 399.59219360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 45]
[6 44]
[7 43]
[8 42]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[16 31]
[17 30]
[19 28]
[20 27]
[21 26]
[47 212]
[48 211]
[50 209]
[51 208]
[53 206]
[54 205]
[55 204]
[56 203]
[57 202]
[58 200]
[59 199]
[60 198]
[61 197]
[64 195]
[65 194]
[66 193]
[67 192]
[68 191]
[69 190]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[85 151]
[86 150]
[91 146]
[92 145]
[94 144]
[95 143]
[97 142]
[98 141]
[99 140]
[100 139]
[103 137]
[104 136]
[106 134]
[107 133]
[108 132]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[116 124]
[117 123]
[118 122]
[167 189]
[168 188]
[169 187]
[171 183]
[172 182]
[173 181]
[174 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
