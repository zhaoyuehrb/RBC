%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NXF3)
} def

/sequence { (\
AUCUUCUCCAAACUCCCGUCCCCAGGCCACACAGAUUCUCCUCAAGAGAGCCCUAUAAGGACAUUGGUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.003618953 ubox
1 68 0.020921041 ubox
2 35 0.004671660 ubox
2 61 0.003423164 ubox
2 67 0.020219105 ubox
3 25 0.003436906 ubox
3 34 0.004852196 ubox
3 60 0.003761796 ubox
3 66 0.020736575 ubox
3 67 0.007664861 ubox
4 11 0.028465483 ubox
4 12 0.014924929 ubox
4 24 0.003266153 ubox
4 33 0.004669782 ubox
4 50 0.005001349 ubox
4 59 0.003672725 ubox
4 66 0.007409280 ubox
4 70 0.178648599 ubox
4 71 0.284221567 ubox
5 10 0.026929152 ubox
5 11 0.018199379 ubox
5 26 0.003907005 ubox
5 35 0.010157742 ubox
5 49 0.006812743 ubox
5 67 0.005061133 ubox
5 69 0.192327782 ubox
5 70 0.397176130 ubox
6 25 0.010273597 ubox
6 34 0.010880606 ubox
6 48 0.007040522 ubox
6 59 0.003239857 ubox
6 66 0.006652688 ubox
6 67 0.008765206 ubox
7 24 0.009915540 ubox
7 33 0.010447527 ubox
7 35 0.006405772 ubox
7 47 0.007036261 ubox
7 61 0.019718322 ubox
7 66 0.006589228 ubox
7 67 0.009561580 ubox
8 26 0.005256397 ubox
8 34 0.006841376 ubox
8 46 0.007015610 ubox
8 60 0.020655980 ubox
8 66 0.009950222 ubox
8 67 0.733368935 ubox
9 25 0.005648753 ubox
9 59 0.020632531 ubox
9 66 0.737431961 ubox
10 65 0.734451412 ubox
11 64 0.705490267 ubox
11 65 0.031027258 ubox
12 19 0.024091977 ubox
12 64 0.040824177 ubox
12 68 0.459088707 ubox
13 18 0.025570755 ubox
13 25 0.008093733 ubox
13 26 0.003902224 ubox
13 34 0.014370313 ubox
13 50 0.004447431 ubox
13 59 0.003324735 ubox
13 60 0.008686784 ubox
13 67 0.475294835 ubox
14 24 0.007735579 ubox
14 25 0.003647149 ubox
14 33 0.013974763 ubox
14 35 0.009902789 ubox
14 49 0.004405260 ubox
14 58 0.003205866 ubox
14 59 0.007746002 ubox
14 60 0.006210468 ubox
14 61 0.642192690 ubox
14 66 0.457204052 ubox
14 67 0.043183214 ubox
15 25 0.003624172 ubox
15 26 0.026350331 ubox
15 34 0.010570118 ubox
15 48 0.004344162 ubox
15 59 0.007418311 ubox
15 60 0.639491427 ubox
15 66 0.080817767 ubox
15 67 0.319206632 ubox
16 25 0.026819215 ubox
16 26 0.058840190 ubox
16 59 0.629288859 ubox
16 60 0.207867732 ubox
16 66 0.321919851 ubox
16 67 0.202457100 ubox
17 25 0.064301906 ubox
17 59 0.233238876 ubox
17 66 0.203534145 ubox
18 27 0.228361445 ubox
18 30 0.044374765 ubox
18 32 0.025437116 ubox
18 36 0.019690017 ubox
18 51 0.003365579 ubox
18 56 0.119110819 ubox
18 62 0.725904721 ubox
18 64 0.013974936 ubox
18 65 0.049238178 ubox
19 26 0.223503984 ubox
19 29 0.041695082 ubox
19 31 0.024840888 ubox
19 35 0.021720776 ubox
19 47 0.004796844 ubox
19 55 0.119750137 ubox
19 60 0.004805661 ubox
19 61 0.728883788 ubox
19 63 0.013006045 ubox
20 25 0.220315669 ubox
20 26 0.077112035 ubox
20 34 0.022042820 ubox
20 46 0.004873069 ubox
20 59 0.006971984 ubox
20 60 0.728764632 ubox
20 67 0.010545132 ubox
21 25 0.077105048 ubox
21 59 0.727233536 ubox
21 60 0.025287799 ubox
21 66 0.010603790 ubox
21 67 0.009418778 ubox
22 59 0.033345552 ubox
22 60 0.019277023 ubox
22 66 0.009180148 ubox
22 67 0.049487692 ubox
23 59 0.019595275 ubox
23 66 0.049801501 ubox
24 39 0.005365482 ubox
24 42 0.006778854 ubox
24 54 0.433780338 ubox
24 65 0.049316106 ubox
25 38 0.005745635 ubox
25 41 0.007163487 ubox
25 52 0.877668875 ubox
25 53 0.394413109 ubox
25 54 0.023449363 ubox
25 64 0.042292618 ubox
26 37 0.004673317 ubox
26 40 0.007113359 ubox
26 51 0.904253668 ubox
26 52 0.332815075 ubox
26 53 0.023370788 ubox
26 68 0.046908605 ubox
27 50 0.923416982 ubox
27 60 0.051649085 ubox
27 67 0.049472536 ubox
28 59 0.051765817 ubox
28 66 0.049497049 ubox
29 65 0.043923080 ubox
29 68 0.007755192 ubox
30 67 0.008129493 ubox
31 68 0.006355175 ubox
32 66 0.009451149 ubox
32 67 0.006600094 ubox
33 39 0.010922070 ubox
33 42 0.063369191 ubox
33 54 0.108130687 ubox
33 65 0.009193808 ubox
34 38 0.011444160 ubox
34 40 0.026366083 ubox
34 41 0.065526460 ubox
34 43 0.149205218 ubox
34 53 0.112873759 ubox
34 64 0.007535374 ubox
34 65 0.006738152 ubox
35 39 0.023374500 ubox
35 42 0.141233987 ubox
35 56 0.015035740 ubox
35 64 0.008867164 ubox
36 45 0.007860954 ubox
36 47 0.007634975 ubox
36 48 0.061745694 ubox
36 49 0.048281700 ubox
36 50 0.313761513 ubox
36 55 0.014588325 ubox
36 63 0.008627185 ubox
37 44 0.007217258 ubox
37 46 0.006721344 ubox
37 47 0.070782853 ubox
37 48 0.008310794 ubox
37 49 0.969945416 ubox
38 46 0.071551330 ubox
38 48 0.977807739 ubox
38 50 0.032287434 ubox
39 45 0.069037362 ubox
39 47 0.977640031 ubox
39 49 0.036258792 ubox
39 61 0.018698973 ubox
40 46 0.976125146 ubox
40 48 0.035614886 ubox
40 60 0.019710442 ubox
41 48 0.012081596 ubox
41 50 0.063452823 ubox
41 59 0.019715524 ubox
42 47 0.012920929 ubox
42 49 0.069323643 ubox
42 58 0.019038311 ubox
43 48 0.069502851 ubox
45 54 0.013360539 ubox
46 53 0.013855342 ubox
47 54 0.017512991 ubox
48 53 0.017780002 ubox
50 68 0.009381179 ubox
51 60 0.043842225 ubox
51 67 0.009788031 ubox
52 59 0.043912018 ubox
52 60 0.092462425 ubox
52 66 0.009626831 ubox
52 67 0.007297408 ubox
53 59 0.093333561 ubox
53 60 0.014445836 ubox
53 66 0.007458901 ubox
53 67 0.004500960 ubox
54 58 0.084668272 ubox
54 59 0.013869651 ubox
54 66 0.004523420 ubox
55 64 0.007150492 ubox
55 65 0.004596237 ubox
56 63 0.007205626 ubox
58 64 0.003238704 ubox
61 68 0.011822423 ubox
62 67 0.012346515 ubox
64 70 0.007267115 ubox
64 71 0.017696252 ubox
65 69 0.006953273 ubox
65 70 0.022787885 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
showpage
end
%%EOF
