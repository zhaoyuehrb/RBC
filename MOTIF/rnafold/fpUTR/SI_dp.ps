%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SI)
} def

/sequence { (\
UUAUUUUGGCAGCCUUAUCCAAGUCUGGUACAACAUAGCAAAGAGAACAGGCUAUGAAAUAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.004690028 ubox
1 28 0.007308573 ubox
1 33 0.008730670 ubox
1 57 0.008761176 ubox
1 58 0.008004368 ubox
1 59 0.006497482 ubox
1 62 0.795418586 ubox
1 63 0.022203392 ubox
2 8 0.006463644 ubox
2 27 0.009730970 ubox
2 30 0.015169920 ubox
2 32 0.009646379 ubox
2 37 0.003373794 ubox
2 56 0.009038220 ubox
2 57 0.008674013 ubox
2 58 0.007230965 ubox
2 61 0.913725016 ubox
2 62 0.027100278 ubox
3 7 0.005746733 ubox
3 24 0.006447768 ubox
3 26 0.009694637 ubox
3 29 0.016051697 ubox
3 36 0.003531325 ubox
3 55 0.009067992 ubox
3 60 0.923698174 ubox
4 23 0.006001259 ubox
4 28 0.015948240 ubox
4 33 0.119940282 ubox
4 35 0.003448553 ubox
4 54 0.008922243 ubox
4 57 0.004865765 ubox
4 58 0.014721640 ubox
4 59 0.923955961 ubox
4 62 0.006541842 ubox
4 63 0.005994312 ubox
5 22 0.005187122 ubox
5 23 0.025670957 ubox
5 27 0.011139944 ubox
5 28 0.003354195 ubox
5 32 0.133846612 ubox
5 33 0.057104197 ubox
5 56 0.004268291 ubox
5 57 0.017975850 ubox
5 58 0.922729904 ubox
5 59 0.036176275 ubox
5 61 0.006566382 ubox
5 62 0.008376062 ubox
5 63 0.006472160 ubox
6 21 0.003957660 ubox
6 22 0.034130446 ubox
6 27 0.003587598 ubox
6 32 0.065171590 ubox
6 33 0.089605352 ubox
6 56 0.017701458 ubox
6 57 0.918103018 ubox
6 58 0.044878859 ubox
6 59 0.009206111 ubox
6 61 0.007779262 ubox
6 62 0.009704811 ubox
7 21 0.038357282 ubox
7 30 0.341046299 ubox
7 32 0.107352985 ubox
7 54 0.011984959 ubox
7 56 0.893386675 ubox
7 57 0.049195876 ubox
7 58 0.010453858 ubox
7 61 0.009622574 ubox
8 14 0.027152756 ubox
8 15 0.005702764 ubox
8 19 0.003323425 ubox
8 20 0.039849953 ubox
8 25 0.015538775 ubox
8 29 0.372323698 ubox
8 31 0.108857741 ubox
8 34 0.003400415 ubox
8 53 0.015751633 ubox
8 55 0.828959782 ubox
8 60 0.008397091 ubox
9 13 0.026796295 ubox
9 14 0.006150726 ubox
9 18 0.003223348 ubox
9 19 0.039508379 ubox
9 24 0.015626426 ubox
9 29 0.054252577 ubox
9 52 0.015492887 ubox
10 23 0.015671126 ubox
10 27 0.403838686 ubox
10 28 0.041499708 ubox
10 51 0.015222986 ubox
10 56 0.019103829 ubox
11 26 0.405817719 ubox
11 53 0.877890886 ubox
11 55 0.013507037 ubox
12 24 0.007092805 ubox
12 25 0.405093178 ubox
12 29 0.071671619 ubox
12 52 0.906892023 ubox
13 23 0.037391450 ubox
13 28 0.073578868 ubox
13 51 0.906974470 ubox
14 23 0.402986162 ubox
14 27 0.073556230 ubox
14 45 0.003894903 ubox
14 50 0.906864090 ubox
14 51 0.003494588 ubox
14 63 0.046427240 ubox
15 22 0.399675093 ubox
15 23 0.008633861 ubox
15 33 0.008188023 ubox
15 38 0.009864413 ubox
15 44 0.005016506 ubox
15 45 0.006324507 ubox
15 46 0.022275269 ubox
15 47 0.069696673 ubox
15 49 0.880787849 ubox
15 50 0.004850479 ubox
15 57 0.006598479 ubox
15 62 0.047695777 ubox
16 21 0.354501120 ubox
16 22 0.013463604 ubox
16 27 0.003249620 ubox
16 30 0.095270449 ubox
16 32 0.012727894 ubox
16 37 0.024364494 ubox
16 43 0.006066021 ubox
16 44 0.013191674 ubox
16 45 0.032346407 ubox
16 46 0.113864495 ubox
16 49 0.026549884 ubox
16 56 0.007071584 ubox
16 58 0.003368154 ubox
16 61 0.047923402 ubox
17 24 0.047346053 ubox
17 26 0.004147209 ubox
17 29 0.094646297 ubox
17 36 0.024481793 ubox
17 55 0.007277326 ubox
17 60 0.047246590 ubox
18 23 0.045112620 ubox
18 28 0.037822572 ubox
18 35 0.024067518 ubox
18 44 0.482008861 ubox
18 46 0.669724238 ubox
18 54 0.007186052 ubox
18 57 0.024224917 ubox
18 59 0.041179757 ubox
19 27 0.036124420 ubox
19 28 0.151693337 ubox
19 43 0.483802842 ubox
19 45 0.676668368 ubox
19 56 0.026830677 ubox
20 27 0.154621122 ubox
20 56 0.039993219 ubox
21 26 0.139642102 ubox
21 55 0.039732457 ubox
22 53 0.055037830 ubox
23 31 0.009786428 ubox
23 34 0.012359719 ubox
23 36 0.005411507 ubox
23 39 0.490867343 ubox
23 48 0.050700476 ubox
23 52 0.056596443 ubox
24 30 0.009348852 ubox
24 33 0.012283987 ubox
24 35 0.004301978 ubox
24 38 0.314471854 ubox
24 44 0.555092462 ubox
24 46 0.062129676 ubox
24 47 0.036167463 ubox
24 51 0.056586914 ubox
25 38 0.543525383 ubox
25 43 0.558368317 ubox
25 45 0.070168022 ubox
25 50 0.056713485 ubox
25 63 0.005234673 ubox
26 32 0.011515172 ubox
26 35 0.313350688 ubox
26 37 0.543668365 ubox
26 40 0.235631744 ubox
26 42 0.537059518 ubox
26 44 0.065445866 ubox
26 49 0.056815351 ubox
26 62 0.005340492 ubox
27 31 0.012317110 ubox
27 34 0.329223554 ubox
27 36 0.530038490 ubox
27 39 0.274706959 ubox
27 48 0.056829387 ubox
28 34 0.303104052 ubox
28 36 0.063822092 ubox
28 39 0.487072846 ubox
28 48 0.006301113 ubox
28 60 0.009815974 ubox
29 33 0.273854918 ubox
29 35 0.071034909 ubox
29 37 0.273955957 ubox
29 38 0.484905982 ubox
29 47 0.007018105 ubox
29 59 0.009796993 ubox
29 61 0.018964439 ubox
30 36 0.263471343 ubox
30 60 0.020960225 ubox
31 56 0.006086663 ubox
32 55 0.005081855 ubox
34 56 0.413731821 ubox
35 55 0.416372191 ubox
36 54 0.416728184 ubox
37 53 0.416868080 ubox
38 52 0.416995993 ubox
39 51 0.416628301 ubox
42 53 0.003335592 ubox
43 52 0.003413715 ubox
1 62 0.9500000 lbox
2 61 0.9500000 lbox
3 60 0.9500000 lbox
4 59 0.9500000 lbox
5 58 0.9500000 lbox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
showpage
end
%%EOF
