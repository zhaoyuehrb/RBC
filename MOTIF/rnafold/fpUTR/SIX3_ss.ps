%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGUGUGUGUGUGUGUGGAUGUGUGUGGGGUGUGGGUGUCCCUUACGCCCUUCCUCCUCUCCCUCCUCCUCCUGCUCCCCCCUCCUUUCCUUCUCCUCCUCCCCCCUCUCCUCUCCCUCCUCCUGGUCCUCAUCGCCCCUCUCCUCCUCUUCCUCCCCUCUCUCUUCCUCUCCCUGAAUUUUCUCCUCUCCUCUCAGGUCAGUCC\
) } def
/len { sequence length } bind def

/coor [
[194.28494263 224.32194519]
[197.68153381 202.05099487]
[206.24014282 181.20463562]
[193.76811218 172.87107849]
[181.29606628 164.53752136]
[168.82402039 156.20396423]
[156.35197449 147.87042236]
[149.04223633 146.76782227]
[143.75579834 139.31562805]
[131.41104126 130.79466248]
[119.06628418 122.27368927]
[110.31700897 128.18016052]
[99.81393433 130.69854736]
[88.85223389 129.34259033]
[78.84571075 124.11498260]
[71.14456940 115.52829742]
[66.85395050 104.55878448]
[66.67772675 92.53675842]
[70.80917358 80.98548126]
[55.89293289 79.40253448]
[40.97669220 77.81958771]
[34.27713394 91.39682007]
[23.35710144 101.84310913]
[9.54791069 107.91159058]
[-5.47599125 108.88751221]
[-19.90006447 104.67235565]
[-31.98883247 95.79338074]
[-40.29467773 83.33777618]
[-43.83120346 68.81957245]
[-58.74744415 67.23662567]
[-73.66368866 65.65367889]
[-88.57992554 64.07073212]
[-103.11956024 70.30849457]
[-114.95924377 61.27129364]
[-129.87548828 59.68834686]
[-144.84085083 60.70706940]
[-159.40498352 64.29680634]
[-173.96911621 67.88653564]
[-188.53323364 71.47627258]
[-203.09736633 75.06600952]
[-217.66149902 78.65574646]
[-227.15826416 91.58596802]
[-243.19375610 92.07895660]
[-253.46687317 79.75652313]
[-250.09700012 64.07138824]
[-235.66918945 57.05584335]
[-221.25122070 64.09161377]
[-206.68710327 60.50188065]
[-192.12297058 56.91214752]
[-177.55885315 53.32241058]
[-162.99472046 49.73267746]
[-148.43058777 46.14294052]
[-163.05886841 42.82426453]
[-176.42585754 36.01811600]
[-187.71447754 26.14052773]
[-196.23474121 13.79527283]
[-201.46578979 -0.26303464]
[-203.08792114 -15.17506790]
[-201.00193787 -30.02931595]
[-195.33537292 -43.91780090]
[-186.43460083 -55.99158096]
[-174.84367371 -65.51263428]
[-161.27110291 -71.89897156]
[-146.54652405 -74.76023102]
[-131.56999207 -73.92151642]
[-117.25695038 -69.43408966]
[-104.48230743 -61.57225418]
[-94.02691650 -50.81656647]
[-86.52987671 -37.82447433]
[-82.44944763 -23.39013863]
[-82.03504944 -8.39586353]
[-85.31201172 6.24181080]
[-92.08002472 19.62814522]
[-101.92539978 30.94488907]
[-114.24631500 39.50029755]
[-128.29254150 44.77210617]
[-113.37629700 46.35505295]
[-99.90357971 40.00406265]
[-86.99697876 49.15448761]
[-72.08074188 50.73743439]
[-57.16449738 52.32038116]
[-42.24825668 53.90332794]
[-35.74340439 40.45073700]
[-25.00835800 30.01580238]
[-11.32531643 23.87179184]
[3.66217113 22.77785683]
[18.14661598 26.88527870]
[30.37457275 35.71688461]
[38.85890579 48.22240829]
[42.55963898 62.90334702]
[57.47587967 64.48628998]
[72.39212036 66.06923676]
[60.06079483 57.52884674]
[47.72946548 48.98845291]
[35.39813614 40.44805908]
[20.80830383 36.96427536]
[7.36910200 30.30185509]
[-4.23688984 20.79917336]
[-13.42020607 8.93887424]
[-19.71442604 -4.67666101]
[-22.79986763 -19.35589981]
[-22.51982307 -34.35328674]
[-18.88851357 -48.90710068]
[-12.09037304 -62.27816391]
[-2.47067928 -73.78735352]
[9.48198509 -82.85012817]
[23.16054535 -89.00617981]
[37.87026978 -91.94284821]
[52.86405182 -91.51098633]
[67.38035583 -87.73252106]
[80.68190765 -80.79935455]
[92.09312439 -71.06363678]
[101.03441620 -59.01983643]
[107.05167389 -45.27965164]
[109.83927155 -30.54095078]
[109.25563049 -15.55230999]
[105.33039856 -1.07499981]
[98.26368713 12.15456963]
[96.47908020 27.04803085]
[94.69447327 41.94149017]
[92.90986633 56.83495331]
[101.61631775 44.62029648]
[102.64315796 28.25332832]
[117.44914246 21.20245171]
[130.80314636 30.72100449]
[128.96769714 47.01711273]
[113.83097076 53.32674026]
[105.12452698 65.54139709]
[116.21321106 70.41769409]
[124.62384796 78.58952332]
[129.48379517 88.83553314]
[130.42218018 99.74895477]
[127.58725739 109.92892456]
[139.93200684 118.44989777]
[152.27677917 126.97087097]
[164.68553162 135.39837646]
[177.15757751 143.73193359]
[189.62960815 152.06547546]
[202.10165405 160.39903259]
[214.57369995 168.73258972]
[220.52732849 161.90254211]
[227.10504150 155.67245483]
[234.24670410 150.09907532]
[241.88699341 145.23318481]
[249.95608521 141.11904907]
[258.38024902 137.79411316]
[267.08248901 135.28858948]
[275.98336792 133.62519836]
[285.00155640 132.81895447]
[294.05468750 132.87710571]
[303.06018066 133.79891968]
[311.93576050 135.57586670]
[320.60046387 138.19154358]
[328.97521973 141.62193298]
[336.98361206 145.83558655]
[344.55264282 150.79386902]
[351.61328125 156.45141602]
[358.10113525 162.75642395]
[363.95709229 169.65124512]
[369.12783813 177.07281494]
[373.56622314 184.95330811]
[377.23193359 193.22067261]
[380.09161377 201.79939270]
[382.11929321 210.61108398]
[383.29663086 219.57527161]
[383.61303711 228.61009216]
[383.06573486 237.63305664]
[381.65991211 246.56181335]
[379.40856934 255.31483459]
[376.33236694 263.81228638]
[372.45956421 271.97662354]
[367.82565308 279.73333740]
[362.47305298 287.01177979]
[356.45080566 293.74551392]
[349.81393433 299.87319946]
[358.52038574 312.08786011]
[367.22683716 324.30249023]
[375.93328857 336.51715088]
[384.63973999 348.73181152]
[399.24148560 344.66189575]
[414.35443115 345.83462524]
[428.15353394 352.10836792]
[438.97256470 362.72555542]
[445.50500488 376.40411377]
[446.96209717 391.49227905]
[443.16781616 406.16809082]
[434.58038330 418.65936279]
[422.23678589 427.45773315]
[407.62753296 431.50073242]
[392.51681519 430.30014038]
[378.72927856 424.00097656]
[367.92984009 413.36386108]
[361.42260742 399.67330933]
[359.99334717 384.58248901]
[363.81463623 369.91369629]
[372.42507935 357.43826294]
[363.71862793 345.22360229]
[355.01217651 333.00894165]
[346.30572510 320.79428101]
[337.59930420 308.57962036]
[317.09912109 317.78158569]
[295.00015259 321.88714600]
[272.55001831 320.66146851]
[251.01707458 314.17074585]
[231.61840820 302.77868652]
[215.45130920 287.12619019]
[203.43109131 268.09518433]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[6 137]
[7 136]
[9 135]
[10 134]
[11 133]
[19 92]
[20 91]
[21 90]
[29 82]
[30 81]
[31 80]
[32 79]
[34 77]
[35 76]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[121 128]
[122 127]
[175 200]
[176 199]
[177 198]
[178 197]
[179 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
