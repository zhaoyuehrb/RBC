%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUUCUCGCCCUGAGCAACGAGCGACGGCCUGACGUCGGCGGAGGGAAGCCGGCCCAGGCUCGGUGAGGAGGCAAGGUUCUGAGGGGACAGGCUGACCUGGAGGACCAGAGGCCCCCGGAGGAGCACUGAAGGAGAAGAUCUGCCAGUGGGUCUCCAUUGCCCAGCUCCUGCCCACACUCCCGCCUGUUGCCCUGACCAGAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[83.17419434 444.59378052]
[83.10485840 428.78964233]
[94.29022217 417.62438965]
[94.06582642 402.62606812]
[93.84143829 387.62774658]
[93.61704254 372.62942505]
[93.39265442 357.63110352]
[93.16826630 342.63278198]
[79.65936279 338.39791870]
[68.10129547 330.18554688]
[59.63181686 318.78778076]
[55.08965302 305.31115723]
[54.93147278 291.06909180]
[59.18598938 277.45394897]
[67.44986725 265.80090332]
[78.92591858 257.25695801]
[92.50000000 252.66815186]
[92.50000000 237.66815186]
[92.50000000 222.66815186]
[92.50000000 207.66815186]
[92.50000000 192.66815186]
[92.50000000 177.66815186]
[84.76270294 164.94087219]
[92.50000000 151.14070129]
[92.50000000 136.14070129]
[92.50000000 121.14070892]
[85.62409210 117.21955109]
[80.53820801 111.15428925]
[65.77926636 113.83264160]
[51.04076767 116.62131500]
[36.32354355 119.52015686]
[21.60631752 122.41899872]
[6.88909101 125.31783295]
[-7.82813454 128.21667480]
[-15.64933395 138.47360229]
[-27.96758461 140.58474731]
[-38.08668518 133.95585632]
[-52.84562683 136.63420105]
[-67.60456848 139.31256104]
[-82.36351776 141.99092102]
[-97.12245941 144.66926575]
[-111.88140106 147.34762573]
[-118.49242401 161.38592529]
[-132.10855103 168.82775879]
[-147.49407959 166.81159973]
[-158.73298645 156.11268616]
[-161.50366211 140.84498596]
[-154.74073792 126.87921906]
[-141.04469299 119.58552551]
[-125.68193054 121.76847839]
[-114.55975342 132.58868408]
[-99.80081177 129.91032410]
[-85.04187012 127.23197174]
[-70.28292084 124.55361938]
[-55.52397919 121.87526703]
[-40.76503754 119.19690704]
[-28.00954056 107.14482880]
[-10.72697353 113.49945068]
[3.99025226 110.60060883]
[18.70747757 107.70176697]
[33.42470551 104.80293274]
[48.14192963 101.90409088]
[54.09760666 97.52684021]
[63.10091019 99.07369995]
[77.85985565 96.39534760]
[83.09179688 85.25917053]
[93.41076660 78.55795288]
[105.71219635 78.30783081]
[114.16199493 65.91424561]
[122.61179352 53.52066422]
[118.38169861 35.05453873]
[128.81295776 19.62469673]
[146.89437866 16.76861000]
[154.96965027 4.12779522]
[163.04490662 -8.51301956]
[171.12016296 -21.15383339]
[173.10313416 -30.07123947]
[179.41195679 -33.92208862]
[187.67541504 -46.44068527]
[184.71632385 -61.73387146]
[193.27497864 -74.31179810]
[207.87292480 -77.03859711]
[216.13638306 -89.55719757]
[224.39982605 -102.07579041]
[226.51597595 -110.96253967]
[232.88171387 -114.71857452]
[241.33151245 -127.11215973]
[245.43009949 -141.54135132]
[244.75714111 -156.52624512]
[236.31721497 -163.38902283]
[233.11390686 -173.55462646]
[235.97463989 -183.59378052]
[243.72248840 -190.25733948]
[243.49809265 -205.25566101]
[243.27371216 -220.25398254]
[243.04931641 -235.25230408]
[234.81848145 -242.36448669]
[231.92071533 -252.62138367]
[235.08049011 -262.57046509]
[243.02421570 -268.99926758]
[243.24861145 -283.99758911]
[243.47300720 -298.99591064]
[243.69738770 -313.99423218]
[235.24295044 -328.04608154]
[243.42063904 -342.26077271]
[259.81796265 -342.01544189]
[267.56674194 -327.56246948]
[258.69570923 -313.76983643]
[258.47131348 -298.77151489]
[258.24691772 -283.77319336]
[258.02255249 -268.77487183]
[268.64962769 -252.62138367]
[258.04763794 -235.47669983]
[258.27203369 -220.47837830]
[258.49642944 -205.48005676]
[258.72082520 -190.48173523]
[269.82638550 -174.65339661]
[259.74203491 -157.19921875]
[260.41500854 -142.21432495]
[273.67672729 -135.20529175]
[286.43692017 -143.09054565]
[299.19714355 -150.97579956]
[311.95733643 -158.86106873]
[324.71752930 -166.74632263]
[328.46118164 -181.86660767]
[341.51416016 -189.68159485]
[355.90597534 -186.01942444]
[368.66616821 -193.90469360]
[381.42636108 -201.78994751]
[394.18658447 -209.67520142]
[406.94677734 -217.56045532]
[410.69039917 -232.68074036]
[423.74340820 -240.49574280]
[438.13519287 -236.83357239]
[450.89541626 -244.71882629]
[463.65560913 -252.60408020]
[468.72695923 -267.82449341]
[483.83770752 -273.21380615]
[497.39617920 -264.63781738]
[499.00146484 -248.67529297]
[487.42214966 -237.57130432]
[471.54086304 -239.84388733]
[458.78067017 -231.95861816]
[446.02044678 -224.07336426]
[442.85818481 -209.56352234]
[430.02984619 -201.38497925]
[414.83203125 -204.80026245]
[402.07183838 -196.91499329]
[389.31161499 -189.02973938]
[376.55142212 -181.14448547]
[363.79122925 -173.25923157]
[360.62893677 -158.74938965]
[347.80059814 -150.57084656]
[332.60278320 -153.98611450]
[319.84259033 -146.10086060]
[307.08239746 -138.21560669]
[294.32220459 -130.33035278]
[281.56198120 -122.44509125]
[275.97314453 -118.42650604]
[269.93951416 -116.13622284]
[263.94308472 -115.53728485]
[258.41897583 -116.46790314]
[253.72509766 -118.66236115]
[245.27528381 -106.26877594]
[236.91842651 -93.81233978]
[228.65496826 -81.29373932]
[220.39152527 -68.77513885]
[223.62150574 -54.28022003]
[215.41952515 -41.46686172]
[200.19401550 -38.17723083]
[191.93055725 -25.65863228]
[183.76097107 -13.07857418]
[175.68571472 -0.43776006]
[167.61045837 12.20305443]
[159.53520203 24.84386826]
[164.34745789 35.18935013]
[163.55957031 46.69221497]
[157.25189209 56.48651505]
[146.89433289 62.07612228]
[135.00537109 61.97046661]
[126.55557251 74.36404419]
[118.10577393 86.75762939]
[121.43508911 106.61184692]
[107.50000000 121.14070892]
[107.50000000 136.14070129]
[107.50000000 151.14070129]
[115.23729706 164.94087219]
[107.50000000 177.66815186]
[107.50000000 192.66815186]
[107.50000000 207.66815186]
[107.50000000 222.66815186]
[107.50000000 237.66815186]
[107.50000000 252.66815186]
[122.49971008 258.03814697]
[134.73327637 268.20248413]
[142.73341370 281.91815186]
[145.54875183 297.51760864]
[142.85699463 313.11166382]
[135.00170898 326.81805420]
[122.94854736 336.98883057]
[108.16658783 342.40838623]
[108.39097595 357.40670776]
[108.61536407 372.40502930]
[108.83975983 387.40335083]
[109.06414795 402.40167236]
[109.28854370 417.39999390]
[120.80290985 428.22564697]
[121.20639801 444.02478027]
[110.25961304 455.42407227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[17 193]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[24 186]
[25 185]
[26 184]
[28 65]
[29 64]
[30 62]
[31 61]
[32 60]
[33 59]
[34 58]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[68 182]
[69 181]
[70 180]
[73 175]
[74 174]
[75 173]
[76 172]
[78 171]
[79 170]
[82 167]
[83 166]
[84 165]
[86 164]
[87 163]
[88 119]
[89 118]
[93 116]
[94 115]
[95 114]
[96 113]
[100 111]
[101 110]
[102 109]
[103 108]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[127 151]
[128 150]
[129 149]
[130 148]
[131 147]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
