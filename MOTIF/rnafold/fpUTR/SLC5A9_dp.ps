%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC5A9)
} def

/sequence { (\
AUGAAGCCAGGAGCGCCUCAAAGUCCAGCCUGCUGUUGACCAACACUAACAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.006327408 ubox
1 36 0.014078570 ubox
2 9 0.060564208 ubox
2 20 0.172571910 ubox
2 23 0.006302577 ubox
2 27 0.028918956 ubox
2 32 0.017471770 ubox
2 35 0.014835312 ubox
2 38 0.028236159 ubox
2 42 0.080535305 ubox
2 45 0.034312988 ubox
2 48 0.004918859 ubox
2 51 0.017902795 ubox
3 8 0.068668209 ubox
3 19 0.191565350 ubox
3 25 0.049778066 ubox
3 26 0.030729457 ubox
3 31 0.021423240 ubox
3 34 0.005637146 ubox
3 37 0.056681119 ubox
3 41 0.088978101 ubox
3 44 0.039249779 ubox
3 47 0.004841569 ubox
3 50 0.019554416 ubox
4 18 0.187937475 ubox
4 24 0.050150138 ubox
4 36 0.055011797 ubox
4 37 0.031827030 ubox
5 18 0.009807408 ubox
5 31 0.145841740 ubox
5 34 0.391997653 ubox
5 36 0.027205085 ubox
5 37 0.133924005 ubox
5 47 0.014897445 ubox
6 14 0.062460658 ubox
6 16 0.183655607 ubox
6 17 0.010043619 ubox
6 24 0.050198881 ubox
6 29 0.362843034 ubox
6 30 0.134568298 ubox
6 33 0.450736029 ubox
6 36 0.145280808 ubox
6 46 0.015313108 ubox
7 13 0.062439882 ubox
7 15 0.183808475 ubox
7 23 0.051937915 ubox
7 28 0.369250771 ubox
7 32 0.326977654 ubox
7 35 0.109939786 ubox
8 32 0.714796346 ubox
8 35 0.234902337 ubox
8 38 0.212421416 ubox
9 18 0.096378913 ubox
9 31 0.785722860 ubox
9 34 0.257438446 ubox
9 37 0.212715952 ubox
9 47 0.004535805 ubox
10 17 0.104183409 ubox
10 18 0.008776629 ubox
10 19 0.009459886 ubox
10 25 0.019806633 ubox
10 26 0.451146113 ubox
10 30 0.786298993 ubox
10 31 0.068340207 ubox
10 33 0.259609477 ubox
10 34 0.005599051 ubox
10 36 0.210919759 ubox
10 41 0.009522620 ubox
10 46 0.004756023 ubox
11 16 0.103753550 ubox
11 17 0.009645828 ubox
11 18 0.007508306 ubox
11 19 0.073778806 ubox
11 24 0.009616109 ubox
11 25 0.451941210 ubox
11 29 0.781716894 ubox
11 30 0.076858652 ubox
11 33 0.006945343 ubox
11 40 0.009403001 ubox
12 18 0.076435964 ubox
12 24 0.396949251 ubox
12 31 0.260646159 ubox
12 34 0.213411586 ubox
12 37 0.003886922 ubox
13 17 0.074928296 ubox
13 24 0.392231879 ubox
13 29 0.118875611 ubox
13 30 0.257932375 ubox
13 33 0.213805011 ubox
13 36 0.004794411 ubox
14 23 0.539400851 ubox
14 28 0.143574292 ubox
14 32 0.213450666 ubox
14 35 0.004808529 ubox
15 24 0.588063718 ubox
15 29 0.282063051 ubox
15 31 0.149679366 ubox
15 33 0.006288804 ubox
16 23 0.595182723 ubox
16 28 0.272304257 ubox
16 32 0.006411796 ubox
17 23 0.302100570 ubox
17 28 0.164994251 ubox
18 22 0.276714080 ubox
18 27 0.179577939 ubox
18 39 0.013606564 ubox
19 32 0.007175903 ubox
19 38 0.015971937 ubox
20 31 0.007056552 ubox
20 37 0.015874496 ubox
21 36 0.014359785 ubox
22 31 0.047921869 ubox
22 34 0.016432384 ubox
22 47 0.007042786 ubox
23 29 0.030830330 ubox
23 30 0.049539256 ubox
23 33 0.017672895 ubox
23 40 0.109067591 ubox
23 44 0.007077126 ubox
23 46 0.007157682 ubox
23 50 0.003350216 ubox
24 28 0.029416776 ubox
24 32 0.017197540 ubox
24 39 0.109333627 ubox
24 43 0.006776941 ubox
24 45 0.006744507 ubox
24 49 0.003249343 ubox
25 38 0.094626644 ubox
26 32 0.019117110 ubox
26 35 0.079070512 ubox
26 38 0.071397206 ubox
27 31 0.015848388 ubox
27 34 0.080061225 ubox
27 37 0.089683686 ubox
27 47 0.004548977 ubox
28 33 0.079546744 ubox
28 36 0.090427498 ubox
28 46 0.004748663 ubox
29 35 0.090343428 ubox
30 52 0.044925874 ubox
31 42 0.004596008 ubox
31 45 0.008439542 ubox
31 48 0.020451405 ubox
31 51 0.045699683 ubox
32 41 0.004990967 ubox
32 44 0.009612914 ubox
32 47 0.021426128 ubox
32 50 0.045500709 ubox
33 52 0.785669605 ubox
34 42 0.015281872 ubox
34 45 0.089267281 ubox
34 48 0.028550953 ubox
34 51 0.829091570 ubox
35 41 0.021435794 ubox
35 44 0.157864939 ubox
35 46 0.051324009 ubox
35 47 0.027705800 ubox
35 50 0.892737744 ubox
36 43 0.156412416 ubox
36 45 0.046817556 ubox
36 49 0.892504800 ubox
36 52 0.022784315 ubox
37 42 0.138846556 ubox
37 45 0.074896616 ubox
37 48 0.889162100 ubox
37 51 0.035553694 ubox
38 44 0.086314191 ubox
38 47 0.877473095 ubox
38 50 0.037543600 ubox
46 52 0.033592057 ubox
47 51 0.030765415 ubox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
33 52 0.9500000 lbox
34 51 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
showpage
end
%%EOF
