%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TXLNA)
} def

/sequence { (\
GAGGUGGGGAAGCCAUCGGACGUCGGCGGUGAGGAUCUUCUCCUGACCCAGCAUCGCUCAUCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.089410275 ubox
1 24 0.081268308 ubox
1 55 0.037935318 ubox
1 59 0.106478472 ubox
1 62 0.120961555 ubox
2 16 0.087418469 ubox
2 23 0.081073150 ubox
2 44 0.012043162 ubox
2 54 0.036493736 ubox
2 58 0.102478364 ubox
2 61 0.112564644 ubox
3 14 0.094426057 ubox
3 17 0.643562097 ubox
3 43 0.012739414 ubox
3 48 0.066134056 ubox
3 49 0.011995359 ubox
3 55 0.020125064 ubox
3 57 0.086306797 ubox
3 58 0.030554262 ubox
3 59 0.019041868 ubox
3 62 0.728135283 ubox
4 13 0.094593289 ubox
4 16 0.651629371 ubox
4 21 0.049927453 ubox
4 27 0.012294156 ubox
4 42 0.012723657 ubox
4 47 0.066534497 ubox
4 48 0.011019916 ubox
4 52 0.027440199 ubox
4 54 0.026118919 ubox
4 57 0.041305131 ubox
4 58 0.004660904 ubox
4 61 0.731703750 ubox
4 64 0.112654593 ubox
5 12 0.093645907 ubox
5 15 0.653372678 ubox
5 18 0.009345048 ubox
5 20 0.044460498 ubox
5 26 0.012271861 ubox
5 45 0.010340851 ubox
5 46 0.062576523 ubox
5 50 0.026059406 ubox
5 51 0.021780027 ubox
5 53 0.026876859 ubox
5 56 0.046156740 ubox
5 60 0.732811420 ubox
5 63 0.112756067 ubox
5 65 0.003884853 ubox
6 14 0.653384310 ubox
6 17 0.017993608 ubox
6 40 0.012620285 ubox
6 43 0.064081268 ubox
6 44 0.018644928 ubox
6 49 0.029183753 ubox
6 52 0.026658468 ubox
6 55 0.046213363 ubox
6 58 0.042268199 ubox
6 59 0.732291777 ubox
6 62 0.112513576 ubox
6 64 0.004922065 ubox
7 13 0.652287783 ubox
7 14 0.067652357 ubox
7 16 0.015114157 ubox
7 17 0.013370040 ubox
7 24 0.013217188 ubox
7 39 0.012658155 ubox
7 42 0.064381516 ubox
7 43 0.019656637 ubox
7 44 0.024472071 ubox
7 48 0.029080822 ubox
7 49 0.025581408 ubox
7 54 0.026575161 ubox
7 55 0.003557580 ubox
7 57 0.216688069 ubox
7 58 0.698463117 ubox
7 59 0.015256155 ubox
7 61 0.090687511 ubox
7 62 0.007362459 ubox
8 13 0.075102421 ubox
8 14 0.028144204 ubox
8 16 0.012179705 ubox
8 17 0.015452252 ubox
8 23 0.012956913 ubox
8 24 0.010096364 ubox
8 38 0.012688822 ubox
8 41 0.064394914 ubox
8 42 0.019602215 ubox
8 43 0.024484997 ubox
8 47 0.028923548 ubox
8 48 0.025471866 ubox
8 49 0.012394195 ubox
8 55 0.009070080 ubox
8 57 0.697262377 ubox
8 58 0.018349465 ubox
8 59 0.023097578 ubox
8 61 0.008520229 ubox
9 13 0.027933269 ubox
9 16 0.010622451 ubox
9 17 0.029680789 ubox
9 23 0.010441283 ubox
9 24 0.014133769 ubox
9 37 0.012714967 ubox
9 40 0.067423173 ubox
9 42 0.024208546 ubox
9 47 0.025143657 ubox
9 48 0.009389775 ubox
9 54 0.007449950 ubox
9 55 0.695501088 ubox
9 57 0.020760630 ubox
9 58 0.013246548 ubox
9 59 0.095017738 ubox
10 16 0.028554867 ubox
10 23 0.012919777 ubox
10 36 0.012364608 ubox
10 39 0.067543288 ubox
10 41 0.021725026 ubox
10 54 0.672382008 ubox
10 58 0.071119306 ubox
11 38 0.068088495 ubox
11 39 0.003588482 ubox
11 41 0.004266816 ubox
11 44 0.014254624 ubox
11 58 0.068661502 ubox
12 23 0.021006694 ubox
12 27 0.484994630 ubox
12 30 0.034816720 ubox
12 37 0.067143721 ubox
12 40 0.005804744 ubox
12 43 0.012265839 ubox
12 52 0.539927411 ubox
12 57 0.090044937 ubox
13 19 0.057112037 ubox
13 22 0.021883752 ubox
13 26 0.485799096 ubox
13 29 0.041520744 ubox
13 34 0.045780571 ubox
13 51 0.538661808 ubox
13 56 0.089755170 ubox
14 18 0.058760103 ubox
14 25 0.484412838 ubox
14 28 0.062590571 ubox
14 31 0.168181512 ubox
14 33 0.042174769 ubox
15 23 0.212781467 ubox
15 30 0.171656616 ubox
15 36 0.007382917 ubox
15 54 0.036706402 ubox
15 61 0.009850399 ubox
16 22 0.207665524 ubox
16 26 0.357492825 ubox
16 29 0.172144478 ubox
16 32 0.025309572 ubox
16 35 0.008218460 ubox
16 46 0.006112503 ubox
16 53 0.035687726 ubox
16 60 0.010535775 ubox
17 25 0.497622260 ubox
17 28 0.175331478 ubox
17 31 0.025400406 ubox
17 33 0.003356281 ubox
17 34 0.008183857 ubox
17 45 0.006221624 ubox
17 56 0.020186025 ubox
18 24 0.506964254 ubox
18 27 0.191119641 ubox
18 30 0.022645977 ubox
18 44 0.005381565 ubox
18 48 0.022609515 ubox
18 49 0.144333930 ubox
18 55 0.025637978 ubox
18 58 0.219928682 ubox
18 59 0.248900993 ubox
18 62 0.074599694 ubox
19 23 0.328504048 ubox
19 42 0.003169953 ubox
19 43 0.005290824 ubox
19 47 0.019623603 ubox
19 48 0.143342244 ubox
19 54 0.022151708 ubox
19 55 0.112063530 ubox
19 57 0.249737945 ubox
19 58 0.219341814 ubox
19 59 0.356646275 ubox
19 61 0.053540364 ubox
19 62 0.147729225 ubox
20 30 0.008732624 ubox
20 54 0.111490712 ubox
20 58 0.355628805 ubox
20 61 0.142292265 ubox
21 28 0.032236618 ubox
21 29 0.009112524 ubox
21 45 0.004249005 ubox
21 56 0.472281852 ubox
22 27 0.043060004 ubox
22 44 0.003508652 ubox
22 47 0.144674926 ubox
22 52 0.119583320 ubox
22 54 0.027220062 ubox
22 55 0.469486024 ubox
22 57 0.196817825 ubox
22 61 0.158333948 ubox
22 64 0.082002081 ubox
23 46 0.147172652 ubox
23 51 0.118445393 ubox
23 53 0.052798061 ubox
23 56 0.156434046 ubox
23 60 0.172382381 ubox
23 63 0.079641390 ubox
24 45 0.147050716 ubox
24 56 0.133012159 ubox
25 40 0.003237064 ubox
25 43 0.020392834 ubox
25 44 0.143367710 ubox
25 48 0.060620060 ubox
25 49 0.093097222 ubox
25 55 0.133281818 ubox
25 58 0.320902676 ubox
25 59 0.104868110 ubox
25 62 0.015587131 ubox
26 39 0.003165821 ubox
26 42 0.020636623 ubox
26 43 0.140586987 ubox
26 47 0.061659702 ubox
26 48 0.068310788 ubox
26 52 0.531088777 ubox
26 54 0.043083294 ubox
26 57 0.354200469 ubox
26 58 0.011919958 ubox
26 61 0.006681789 ubox
27 45 0.069102142 ubox
27 51 0.529860868 ubox
27 56 0.354501919 ubox
28 37 0.008733596 ubox
28 38 0.003591864 ubox
28 40 0.023872407 ubox
28 41 0.051103074 ubox
28 42 0.099126966 ubox
28 43 0.032976725 ubox
28 44 0.071318686 ubox
28 48 0.888247244 ubox
28 49 0.124509523 ubox
28 55 0.349231270 ubox
28 62 0.040865820 ubox
29 36 0.008915365 ubox
29 37 0.003815746 ubox
29 39 0.020552962 ubox
29 40 0.053158853 ubox
29 41 0.092950782 ubox
29 42 0.036105313 ubox
29 43 0.072008995 ubox
29 47 0.899994836 ubox
29 48 0.089625976 ubox
29 52 0.011914201 ubox
29 54 0.347629385 ubox
29 61 0.041163394 ubox
30 35 0.009175933 ubox
30 45 0.003829028 ubox
30 46 0.901876023 ubox
30 50 0.009734715 ubox
30 51 0.011890168 ubox
30 53 0.347517607 ubox
30 60 0.041219873 ubox
31 37 0.034475340 ubox
31 39 0.069881166 ubox
31 40 0.087684254 ubox
31 42 0.109989378 ubox
31 49 0.012806787 ubox
31 52 0.346793927 ubox
31 59 0.041253015 ubox
32 36 0.030023529 ubox
32 38 0.072761433 ubox
32 39 0.086071495 ubox
32 41 0.110701184 ubox
32 44 0.919681364 ubox
32 58 0.041233627 ubox
33 37 0.071748793 ubox
33 38 0.069479153 ubox
33 40 0.110714985 ubox
33 41 0.011005353 ubox
33 42 0.004643990 ubox
33 43 0.922905201 ubox
33 44 0.003696349 ubox
33 48 0.174662356 ubox
33 49 0.286325800 ubox
33 57 0.041159483 ubox
34 39 0.087063840 ubox
34 40 0.014599959 ubox
34 41 0.003981467 ubox
34 42 0.922813197 ubox
34 43 0.004124515 ubox
34 47 0.175212943 ubox
34 48 0.286120014 ubox
34 55 0.041087802 ubox
35 39 0.014638810 ubox
35 41 0.884816857 ubox
35 54 0.041098633 ubox
36 46 0.327524499 ubox
36 53 0.040660736 ubox
37 45 0.331658457 ubox
37 51 0.038753240 ubox
38 46 0.008902555 ubox
38 50 0.038161156 ubox
38 51 0.004749669 ubox
39 45 0.007322403 ubox
39 46 0.057525311 ubox
39 50 0.003369536 ubox
40 45 0.058533719 ubox
40 51 0.009400322 ubox
41 50 0.009281610 ubox
43 51 0.013691300 ubox
44 50 0.016262053 ubox
44 53 0.006103638 ubox
44 56 0.003953637 ubox
44 60 0.003619600 ubox
44 63 0.013629954 ubox
45 49 0.021541030 ubox
45 52 0.009028553 ubox
45 55 0.007975104 ubox
45 59 0.004333992 ubox
45 62 0.016752970 ubox
46 54 0.007601880 ubox
46 58 0.003618047 ubox
46 61 0.016328771 ubox
50 58 0.099917436 ubox
51 57 0.112593028 ubox
52 56 0.112595650 ubox
53 61 0.003639754 ubox
54 60 0.003781442 ubox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
6 59 0.9500000 lbox
7 58 0.9500000 lbox
8 57 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
