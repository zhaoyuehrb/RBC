%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC59)
} def

/sequence { (\
GGGCGUCCGUCGUGGUCUUCUGAUGACGCAGUUAGUCGGCUGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.023516091 ubox
1 8 0.571506009 ubox
1 11 0.074672180 ubox
1 17 0.006397114 ubox
1 18 0.017467982 ubox
1 20 0.005264110 ubox
1 21 0.010982586 ubox
1 37 0.005870914 ubox
1 41 0.019604591 ubox
2 6 0.015548682 ubox
2 7 0.570035005 ubox
2 8 0.186589424 ubox
2 10 0.062504023 ubox
2 11 0.695969796 ubox
2 16 0.006019002 ubox
2 17 0.020121583 ubox
2 18 0.004263303 ubox
2 19 0.004972567 ubox
2 20 0.011618046 ubox
2 21 0.003290489 ubox
2 33 0.007406644 ubox
2 36 0.005436151 ubox
2 37 0.035471030 ubox
2 40 0.020744461 ubox
2 41 0.007070387 ubox
3 7 0.183994181 ubox
3 10 0.699163296 ubox
3 13 0.069982942 ubox
3 16 0.020074482 ubox
3 17 0.004502698 ubox
3 18 0.004035295 ubox
3 19 0.010710420 ubox
3 20 0.003445213 ubox
3 29 0.103778510 ubox
3 32 0.008255558 ubox
3 36 0.035637989 ubox
3 40 0.007419746 ubox
3 43 0.122370344 ubox
4 9 0.699644311 ubox
4 12 0.072471991 ubox
4 14 0.005529823 ubox
4 15 0.019961765 ubox
4 25 0.006915081 ubox
4 28 0.110733712 ubox
4 31 0.008323808 ubox
4 35 0.035691415 ubox
4 38 0.020774427 ubox
4 39 0.006908349 ubox
4 42 0.122491210 ubox
5 11 0.076304040 ubox
5 13 0.004624585 ubox
5 16 0.003494563 ubox
5 24 0.006948061 ubox
5 27 0.198674862 ubox
5 37 0.020861129 ubox
5 40 0.026866973 ubox
5 41 0.115873034 ubox
5 43 0.004444087 ubox
6 23 0.006940575 ubox
6 26 0.198535280 ubox
6 35 0.005009828 ubox
6 39 0.013396397 ubox
6 42 0.003980987 ubox
7 15 0.015128669 ubox
7 22 0.006760248 ubox
7 25 0.142152274 ubox
7 38 0.013076861 ubox
7 39 0.121670821 ubox
8 14 0.015854022 ubox
8 25 0.151488280 ubox
8 28 0.035326204 ubox
8 38 0.121759469 ubox
9 13 0.009812166 ubox
9 24 0.205978669 ubox
9 27 0.433331281 ubox
9 29 0.031059662 ubox
9 32 0.004993188 ubox
9 37 0.119613175 ubox
9 40 0.005951933 ubox
9 43 0.009166330 ubox
10 23 0.207892310 ubox
10 26 0.433885116 ubox
10 28 0.006999826 ubox
10 31 0.014664596 ubox
10 35 0.051856597 ubox
10 39 0.005953971 ubox
10 42 0.008418291 ubox
11 22 0.207884147 ubox
11 25 0.434021026 ubox
11 28 0.137069273 ubox
11 38 0.005800707 ubox
12 21 0.188524576 ubox
12 24 0.422664592 ubox
12 27 0.794435695 ubox
12 29 0.007480181 ubox
12 32 0.005569004 ubox
12 37 0.005549312 ubox
12 43 0.336025071 ubox
13 22 0.025242528 ubox
13 23 0.414879245 ubox
13 26 0.794236509 ubox
13 28 0.007355807 ubox
13 30 0.038859921 ubox
13 42 0.335634505 ubox
14 20 0.127119022 ubox
14 21 0.310615196 ubox
14 24 0.006747402 ubox
14 27 0.010853894 ubox
14 29 0.039093381 ubox
14 41 0.336050248 ubox
15 19 0.082672880 ubox
15 20 0.331545014 ubox
15 24 0.798784661 ubox
15 27 0.135910335 ubox
15 40 0.337459929 ubox
16 23 0.803609070 ubox
16 26 0.136216501 ubox
16 39 0.337081536 ubox
17 22 0.804245985 ubox
17 25 0.136229525 ubox
17 35 0.003539650 ubox
17 38 0.336225264 ubox
17 39 0.012351925 ubox
18 34 0.003787881 ubox
18 38 0.012267919 ubox
19 26 0.014008479 ubox
20 25 0.015153830 ubox
20 31 0.008827449 ubox
20 35 0.337066218 ubox
20 39 0.003511771 ubox
21 30 0.008880573 ubox
21 34 0.337016800 ubox
21 38 0.004013569 ubox
22 29 0.008899663 ubox
22 33 0.336926446 ubox
22 37 0.006173981 ubox
23 32 0.336615842 ubox
23 36 0.006052832 ubox
24 30 0.034426978 ubox
24 31 0.331232153 ubox
24 34 0.006354315 ubox
24 35 0.004049437 ubox
24 38 0.003441100 ubox
25 29 0.041052928 ubox
25 33 0.008145964 ubox
25 37 0.009522557 ubox
26 32 0.009201215 ubox
26 36 0.009557754 ubox
27 31 0.009487306 ubox
27 35 0.009568430 ubox
28 36 0.009414763 ubox
28 43 0.921785124 ubox
29 35 0.012876660 ubox
29 42 0.926310199 ubox
30 41 0.929087790 ubox
31 40 0.929586100 ubox
31 43 0.034549418 ubox
32 39 0.919323802 ubox
32 42 0.027277143 ubox
33 38 0.745453405 ubox
33 42 0.029714756 ubox
34 41 0.037831290 ubox
35 40 0.038174429 ubox
35 43 0.014447232 ubox
36 42 0.014022609 ubox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
showpage
end
%%EOF
