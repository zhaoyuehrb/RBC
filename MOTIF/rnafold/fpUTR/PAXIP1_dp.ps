%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PAXIP1)
} def

/sequence { (\
CGGGGCCGGGCGCCGCCGCGGAGCCUCCCGGGCCGCCGCGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.013536251 ubox
1 15 0.402951106 ubox
1 18 0.008401938 ubox
1 20 0.004390527 ubox
1 30 0.033019348 ubox
1 35 0.016118151 ubox
1 38 0.833758715 ubox
1 40 0.117867508 ubox
2 7 0.013592250 ubox
2 14 0.427501354 ubox
2 17 0.062379775 ubox
2 19 0.004650193 ubox
2 25 0.015663855 ubox
2 26 0.004644891 ubox
2 27 0.010215787 ubox
2 28 0.006950319 ubox
2 29 0.034587135 ubox
2 34 0.014708091 ubox
2 37 0.883120964 ubox
2 39 0.117964031 ubox
2 43 0.012330444 ubox
3 13 0.427570538 ubox
3 14 0.019943621 ubox
3 16 0.065429912 ubox
3 24 0.015677562 ubox
3 25 0.006159226 ubox
3 26 0.010438177 ubox
3 27 0.006960371 ubox
3 28 0.034568356 ubox
3 29 0.014374869 ubox
3 33 0.011927699 ubox
3 34 0.072008665 ubox
3 36 0.882306486 ubox
3 37 0.016098331 ubox
3 42 0.012242418 ubox
3 43 0.016869796 ubox
4 13 0.020001885 ubox
4 14 0.082062389 ubox
4 17 0.025971201 ubox
4 24 0.006170907 ubox
4 25 0.011918313 ubox
4 26 0.004328306 ubox
4 27 0.034476894 ubox
4 28 0.014659231 ubox
4 33 0.075097327 ubox
4 34 0.882725467 ubox
4 36 0.011464675 ubox
4 37 0.115004468 ubox
4 42 0.017488410 ubox
4 43 0.028176298 ubox
5 11 0.427796190 ubox
5 13 0.082219634 ubox
5 16 0.027084168 ubox
5 24 0.011961963 ubox
5 25 0.005204962 ubox
5 26 0.018883957 ubox
5 27 0.014738287 ubox
5 33 0.883559291 ubox
5 36 0.114903354 ubox
5 39 0.028511431 ubox
5 42 0.027894468 ubox
6 10 0.424728650 ubox
6 12 0.082155755 ubox
6 15 0.020116930 ubox
6 21 0.022376688 ubox
6 23 0.009826782 ubox
6 31 0.217661765 ubox
6 32 0.859955540 ubox
6 35 0.109510772 ubox
6 38 0.027574787 ubox
7 15 0.020313841 ubox
7 18 0.005011971 ubox
7 20 0.026246499 ubox
7 30 0.298048098 ubox
7 31 0.835233410 ubox
7 35 0.027637530 ubox
7 38 0.009177280 ubox
7 40 0.076657900 ubox
8 14 0.029396555 ubox
8 17 0.011683085 ubox
8 19 0.026577394 ubox
8 25 0.010747962 ubox
8 26 0.776320009 ubox
8 27 0.196972071 ubox
8 28 0.063388250 ubox
8 29 0.348602668 ubox
8 34 0.033103298 ubox
8 37 0.009635631 ubox
8 39 0.077029106 ubox
9 13 0.028933818 ubox
9 16 0.011624079 ubox
9 17 0.040453100 ubox
9 24 0.008039174 ubox
9 25 0.826475841 ubox
9 26 0.025165511 ubox
9 27 0.048210878 ubox
9 28 0.306326018 ubox
9 29 0.085953619 ubox
9 33 0.023956635 ubox
9 34 0.103940564 ubox
9 36 0.007177150 ubox
9 37 0.084772801 ubox
10 16 0.040574000 ubox
10 19 0.014961654 ubox
10 24 0.845850696 ubox
10 25 0.025370673 ubox
10 26 0.012755453 ubox
10 27 0.256464962 ubox
10 28 0.072036431 ubox
10 33 0.106463912 ubox
10 36 0.085132300 ubox
10 39 0.009604630 ubox
11 15 0.040309497 ubox
11 18 0.015669187 ubox
11 20 0.118951143 ubox
11 23 0.859397368 ubox
11 32 0.108348659 ubox
11 35 0.085374909 ubox
11 38 0.009618494 ubox
12 17 0.014937615 ubox
12 19 0.120588545 ubox
12 24 0.066826716 ubox
12 33 0.010835767 ubox
12 34 0.083175985 ubox
12 36 0.006519853 ubox
12 37 0.007412066 ubox
13 18 0.120260479 ubox
13 21 0.873959706 ubox
13 23 0.058257619 ubox
13 31 0.079104450 ubox
13 32 0.014384688 ubox
13 35 0.008989083 ubox
14 20 0.876041236 ubox
14 30 0.078998151 ubox
14 31 0.010914230 ubox
14 35 0.003975580 ubox
14 40 0.010287311 ubox
15 19 0.819573969 ubox
15 24 0.053070882 ubox
15 29 0.077892464 ubox
15 33 0.084757660 ubox
15 39 0.029944937 ubox
16 23 0.053054320 ubox
16 31 0.077063701 ubox
16 32 0.085320678 ubox
16 38 0.030140549 ubox
17 30 0.078096042 ubox
17 31 0.085098692 ubox
17 40 0.426143125 ubox
18 24 0.021389913 ubox
18 29 0.079050993 ubox
18 36 0.031297290 ubox
18 39 0.435599080 ubox
19 23 0.021261593 ubox
19 30 0.085349472 ubox
19 35 0.031387518 ubox
19 38 0.435693468 ubox
20 26 0.004752131 ubox
20 27 0.007639195 ubox
20 28 0.113183641 ubox
20 29 0.085810106 ubox
20 34 0.031377682 ubox
20 37 0.435686320 ubox
21 25 0.005617878 ubox
21 26 0.006303123 ubox
21 27 0.113554411 ubox
21 28 0.085452824 ubox
21 33 0.029207438 ubox
21 36 0.435066763 ubox
22 26 0.098947500 ubox
23 33 0.433974554 ubox
24 31 0.047894417 ubox
24 32 0.434443286 ubox
25 30 0.049567466 ubox
25 31 0.434134481 ubox
25 32 0.007130512 ubox
26 30 0.391110062 ubox
26 31 0.006832834 ubox
26 41 0.015052716 ubox
27 40 0.016553809 ubox
29 38 0.020945398 ubox
29 40 0.003780777 ubox
30 37 0.025971091 ubox
30 39 0.004399435 ubox
31 36 0.026063961 ubox
31 37 0.012460346 ubox
32 36 0.012272236 ubox
32 39 0.026378967 ubox
33 38 0.026329842 ubox
34 40 0.006305767 ubox
35 39 0.006728049 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
showpage
end
%%EOF
