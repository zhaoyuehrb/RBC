%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EDA2R)
} def

/sequence { (\
GUGACGGGAGGGGGCUGGGUGAGAUGUGUGCUCUGCGCUGAGGUGGAUUUGUACCGGAGUCCCAUUUGGGAGCAAGAGCCAUCUACUCGUCCGUUACCGGCCUUCCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 97 0.009521352 ubox
1 101 0.033303053 ubox
1 109 0.366397047 ubox
2 96 0.009560280 ubox
2 100 0.032055128 ubox
2 108 0.367215074 ubox
3 95 0.009570130 ubox
3 104 0.005172585 ubox
3 105 0.020751037 ubox
3 107 0.333436628 ubox
4 94 0.009573745 ubox
4 103 0.007602470 ubox
4 104 0.021505607 ubox
5 93 0.009573341 ubox
5 99 0.124777212 ubox
6 92 0.009227272 ubox
6 98 0.127390460 ubox
6 102 0.015832087 ubox
6 103 0.022893334 ubox
6 104 0.004359148 ubox
6 105 0.003276065 ubox
6 106 0.343775683 ubox
6 107 0.855109187 ubox
6 110 0.207946535 ubox
7 91 0.008988924 ubox
7 97 0.127217670 ubox
7 98 0.013923574 ubox
7 101 0.015788590 ubox
7 102 0.024130296 ubox
7 105 0.345425748 ubox
7 106 0.859628571 ubox
7 107 0.273572357 ubox
7 109 0.209104103 ubox
7 110 0.058136575 ubox
8 90 0.008050572 ubox
8 95 0.006633736 ubox
8 97 0.014266814 ubox
8 101 0.024125787 ubox
8 104 0.344916100 ubox
8 105 0.858285942 ubox
8 106 0.275189739 ubox
8 109 0.058798236 ubox
9 90 0.003288131 ubox
9 94 0.007201406 ubox
9 95 0.071076861 ubox
9 103 0.353848506 ubox
9 104 0.835495021 ubox
10 88 0.004829870 ubox
10 94 0.124945584 ubox
10 95 0.007565631 ubox
10 98 0.026659058 ubox
10 102 0.362709868 ubox
10 103 0.704976653 ubox
10 104 0.028378003 ubox
10 105 0.285610725 ubox
10 106 0.189327759 ubox
10 107 0.093175774 ubox
11 87 0.004688297 ubox
11 88 0.003286041 ubox
11 92 0.006928028 ubox
11 94 0.009928117 ubox
11 97 0.026774514 ubox
11 98 0.024925951 ubox
11 101 0.361648067 ubox
11 102 0.679435903 ubox
11 103 0.060457302 ubox
11 104 0.315231379 ubox
11 105 0.188835642 ubox
11 106 0.093165428 ubox
11 107 0.003855672 ubox
12 86 0.004623367 ubox
12 87 0.003221496 ubox
12 91 0.006515900 ubox
12 92 0.236809579 ubox
12 94 0.005830660 ubox
12 97 0.029314549 ubox
12 98 0.174304759 ubox
12 101 0.655466929 ubox
12 102 0.067844231 ubox
12 103 0.548588521 ubox
12 104 0.133237621 ubox
12 105 0.089984788 ubox
12 106 0.003809328 ubox
13 86 0.003168881 ubox
13 90 0.008466411 ubox
13 91 0.262119641 ubox
13 92 0.194630692 ubox
13 94 0.005393914 ubox
13 95 0.123395415 ubox
13 97 0.186014369 ubox
13 98 0.617598288 ubox
13 101 0.059182244 ubox
13 102 0.618876043 ubox
13 103 0.020001183 ubox
13 104 0.014175672 ubox
14 90 0.273566597 ubox
14 91 0.195042490 ubox
14 94 0.138175479 ubox
14 97 0.619612481 ubox
14 101 0.629954111 ubox
14 102 0.014644623 ubox
15 89 0.276843466 ubox
15 93 0.148675264 ubox
15 100 0.639910020 ubox
16 85 0.005992563 ubox
16 89 0.219009535 ubox
16 93 0.607196459 ubox
16 96 0.043262172 ubox
16 99 0.629161972 ubox
17 84 0.006263956 ubox
17 87 0.010865068 ubox
17 88 0.368279396 ubox
17 91 0.005448037 ubox
17 92 0.656089650 ubox
17 95 0.027616978 ubox
17 98 0.591529156 ubox
18 83 0.006319056 ubox
18 86 0.010166050 ubox
18 87 0.369547201 ubox
18 88 0.008285882 ubox
18 90 0.004840641 ubox
18 91 0.656731089 ubox
18 92 0.231321253 ubox
18 94 0.005398468 ubox
18 95 0.009714009 ubox
18 97 0.534092200 ubox
18 98 0.232937929 ubox
19 82 0.006267201 ubox
19 86 0.379181123 ubox
19 87 0.007957260 ubox
19 90 0.631264831 ubox
19 91 0.280586679 ubox
19 94 0.078550177 ubox
19 97 0.303661257 ubox
20 81 0.006236721 ubox
20 85 0.370758829 ubox
20 89 0.687238882 ubox
20 93 0.269497109 ubox
20 96 0.359881542 ubox
21 80 0.006205135 ubox
21 83 0.011326618 ubox
21 84 0.228352953 ubox
21 88 0.730294436 ubox
21 91 0.043426215 ubox
21 92 0.314410924 ubox
21 95 0.362512349 ubox
22 82 0.009601150 ubox
22 84 0.322232065 ubox
22 87 0.728956524 ubox
22 90 0.042426535 ubox
22 94 0.330194757 ubox
22 95 0.008179510 ubox
23 83 0.401583908 ubox
23 86 0.724061332 ubox
23 88 0.043889197 ubox
23 91 0.551241229 ubox
23 95 0.006100570 ubox
24 82 0.401091767 ubox
24 87 0.043153500 ubox
24 90 0.552552453 ubox
24 94 0.007773520 ubox
25 81 0.395020965 ubox
25 85 0.204484034 ubox
25 89 0.551879842 ubox
25 93 0.008401391 ubox
26 80 0.391997900 ubox
26 82 0.684002149 ubox
26 84 0.159463810 ubox
26 86 0.051783515 ubox
26 88 0.532326673 ubox
26 92 0.007235781 ubox
27 81 0.747190458 ubox
27 85 0.053253517 ubox
28 38 0.003241735 ubox
28 79 0.042372334 ubox
28 80 0.751577665 ubox
28 82 0.152105677 ubox
28 84 0.040075437 ubox
28 86 0.490328183 ubox
29 37 0.003253562 ubox
29 78 0.034302041 ubox
29 81 0.161773299 ubox
29 85 0.487508773 ubox
30 36 0.003346489 ubox
30 79 0.989347373 ubox
30 80 0.118757351 ubox
30 84 0.068828377 ubox
31 35 0.003322484 ubox
31 76 0.030730359 ubox
31 78 0.999325734 ubox
32 75 0.030571347 ubox
32 77 0.999284518 ubox
33 76 0.999225883 ubox
34 74 0.703961130 ubox
34 75 0.705782087 ubox
35 73 0.997951257 ubox
36 72 0.996695931 ubox
37 60 0.033661622 ubox
37 73 0.024288730 ubox
38 57 0.004941472 ubox
38 59 0.043844953 ubox
38 69 0.050105333 ubox
38 70 0.994753216 ubox
38 72 0.024022686 ubox
39 56 0.004633264 ubox
39 58 0.043462365 ubox
39 68 0.049898216 ubox
39 69 0.993682186 ubox
39 71 0.021629971 ubox
40 66 0.004812281 ubox
40 67 0.045486688 ubox
41 65 0.005102804 ubox
41 66 0.045357774 ubox
41 67 0.991706642 ubox
41 84 0.003680578 ubox
42 55 0.046985769 ubox
42 63 0.003353102 ubox
42 65 0.040503011 ubox
42 66 0.992925655 ubox
42 67 0.005263842 ubox
42 83 0.003861955 ubox
43 54 0.047037197 ubox
43 65 0.995769702 ubox
43 66 0.005260807 ubox
43 82 0.003946315 ubox
44 53 0.046998973 ubox
44 64 0.994904560 ubox
44 81 0.003958708 ubox
45 52 0.045973481 ubox
45 62 0.577834907 ubox
45 63 0.814639429 ubox
45 80 0.003962197 ubox
46 61 0.812797199 ubox
46 62 0.580482368 ubox
46 79 0.003954231 ubox
47 60 0.993367762 ubox
48 57 0.003596276 ubox
48 58 0.076465563 ubox
48 59 0.992670707 ubox
49 56 0.005634241 ubox
49 57 0.082640734 ubox
49 58 0.991350617 ubox
49 59 0.033560965 ubox
49 75 0.003499747 ubox
50 56 0.102415946 ubox
50 57 0.978942169 ubox
50 58 0.037531648 ubox
50 74 0.003851360 ubox
51 55 0.114055189 ubox
51 73 0.003983961 ubox
52 72 0.003918965 ubox
53 60 0.005143606 ubox
54 59 0.005350041 ubox
60 71 0.029710404 ubox
61 70 0.046873003 ubox
62 69 0.046940405 ubox
63 68 0.046874459 ubox
85 94 0.033148296 ubox
86 93 0.036110533 ubox
89 97 0.009049505 ubox
89 98 0.004535020 ubox
89 101 0.008674912 ubox
90 96 0.009519653 ubox
90 100 0.003955114 ubox
91 99 0.004864598 ubox
91 100 0.162279890 ubox
92 99 0.182169575 ubox
93 98 0.185019960 ubox
93 101 0.075551280 ubox
94 100 0.075776102 ubox
95 99 0.056381606 ubox
99 106 0.014454287 ubox
99 107 0.015616728 ubox
99 110 0.009523229 ubox
100 105 0.015426562 ubox
100 106 0.016805801 ubox
100 109 0.012046528 ubox
6 107 0.9500000 lbox
7 106 0.9500000 lbox
8 105 0.9500000 lbox
9 104 0.9500000 lbox
10 103 0.9500000 lbox
11 102 0.9500000 lbox
12 101 0.9500000 lbox
13 98 0.9500000 lbox
14 97 0.9500000 lbox
16 93 0.9500000 lbox
17 92 0.9500000 lbox
18 91 0.9500000 lbox
19 90 0.9500000 lbox
20 89 0.9500000 lbox
21 88 0.9500000 lbox
22 87 0.9500000 lbox
23 86 0.9500000 lbox
26 82 0.9500000 lbox
27 81 0.9500000 lbox
28 80 0.9500000 lbox
30 79 0.9500000 lbox
31 78 0.9500000 lbox
32 77 0.9500000 lbox
33 76 0.9500000 lbox
34 75 0.9500000 lbox
35 73 0.9500000 lbox
36 72 0.9500000 lbox
38 70 0.9500000 lbox
39 69 0.9500000 lbox
41 67 0.9500000 lbox
42 66 0.9500000 lbox
43 65 0.9500000 lbox
44 64 0.9500000 lbox
45 63 0.9500000 lbox
46 62 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
showpage
end
%%EOF
