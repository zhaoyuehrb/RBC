%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC96)
} def

/sequence { (\
GUUGCCCCGGGAAACCUAACAGCGUCCUGCCGGGGUCCGCUGCGCUGGCCGAGCCGGGAGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.057903765 ubox
1 20 0.120388976 ubox
1 23 0.918924848 ubox
1 40 0.028023833 ubox
1 43 0.008914750 ubox
2 13 0.005044441 ubox
2 14 0.058034354 ubox
2 19 0.120435270 ubox
2 22 0.919049216 ubox
2 24 0.006318360 ubox
2 39 0.027691099 ubox
2 42 0.008720570 ubox
2 59 0.003487705 ubox
2 60 0.009760158 ubox
2 61 0.021691053 ubox
2 62 0.122802211 ubox
2 63 0.010285130 ubox
3 12 0.006007118 ubox
3 13 0.041916085 ubox
3 18 0.120080566 ubox
3 21 0.918272512 ubox
3 24 0.131562246 ubox
3 39 0.005052357 ubox
3 59 0.009825501 ubox
3 60 0.026706108 ubox
3 61 0.132464655 ubox
3 62 0.014933271 ubox
4 8 0.005255414 ubox
4 17 0.116010882 ubox
4 20 0.916174511 ubox
4 23 0.186146660 ubox
4 36 0.157726854 ubox
4 38 0.004485218 ubox
4 40 0.003838445 ubox
4 43 0.003722500 ubox
5 11 0.065744624 ubox
5 22 0.185993831 ubox
5 34 0.003835154 ubox
5 35 0.203538437 ubox
5 42 0.003685435 ubox
5 58 0.015611474 ubox
5 61 0.038648960 ubox
6 10 0.065396539 ubox
6 33 0.003817605 ubox
6 34 0.203922978 ubox
6 57 0.013580090 ubox
6 58 0.217883104 ubox
6 60 0.035595736 ubox
6 61 0.006076964 ubox
7 32 0.003769833 ubox
7 33 0.203925755 ubox
7 56 0.011100455 ubox
7 57 0.218908176 ubox
7 58 0.031930432 ubox
7 60 0.005994845 ubox
7 61 0.008079782 ubox
8 24 0.009824765 ubox
8 29 0.005223095 ubox
8 32 0.203897347 ubox
8 39 0.003395579 ubox
8 56 0.219096760 ubox
8 57 0.031414171 ubox
8 60 0.008096678 ubox
9 16 0.888241372 ubox
9 17 0.308897087 ubox
9 23 0.009841492 ubox
9 28 0.011328420 ubox
9 31 0.203480272 ubox
9 38 0.003354362 ubox
9 55 0.218788229 ubox
10 15 0.888952659 ubox
10 16 0.318830037 ubox
10 17 0.086029053 ubox
10 27 0.022263358 ubox
10 28 0.003391890 ubox
10 30 0.202288934 ubox
10 31 0.006186905 ubox
10 37 0.003284713 ubox
10 38 0.004297342 ubox
10 50 0.004064849 ubox
10 54 0.218304939 ubox
10 55 0.030311588 ubox
11 15 0.313793165 ubox
11 16 0.086951799 ubox
11 26 0.029323300 ubox
11 27 0.013647349 ubox
11 30 0.008378051 ubox
11 37 0.004384203 ubox
11 49 0.005679551 ubox
11 54 0.031010998 ubox
12 25 0.026611335 ubox
12 36 0.004319285 ubox
14 25 0.171474728 ubox
15 24 0.176372667 ubox
15 34 0.004590108 ubox
15 48 0.177461813 ubox
16 22 0.138274813 ubox
16 33 0.004703668 ubox
16 47 0.177549150 ubox
16 48 0.111120298 ubox
16 53 0.021242727 ubox
17 21 0.124644848 ubox
17 32 0.004639995 ubox
17 47 0.110794007 ubox
17 52 0.021080685 ubox
18 46 0.110400991 ubox
19 25 0.008023513 ubox
20 24 0.008906731 ubox
20 29 0.054889434 ubox
20 42 0.211024355 ubox
20 47 0.065245226 ubox
21 28 0.054848534 ubox
21 41 0.211571588 ubox
21 46 0.066237495 ubox
22 27 0.054005558 ubox
22 30 0.007082857 ubox
22 40 0.211665927 ubox
22 45 0.066357019 ubox
22 54 0.003347011 ubox
23 29 0.007776103 ubox
23 39 0.211660823 ubox
23 44 0.066356440 ubox
23 51 0.005480692 ubox
23 53 0.003637017 ubox
24 28 0.004803251 ubox
24 36 0.003659373 ubox
24 38 0.210856873 ubox
24 43 0.066332629 ubox
24 50 0.005476440 ubox
25 34 0.025687466 ubox
25 35 0.055301574 ubox
25 42 0.065219684 ubox
25 52 0.003693838 ubox
25 59 0.003781493 ubox
25 62 0.891613462 ubox
26 33 0.026938946 ubox
26 34 0.066356307 ubox
26 35 0.199273719 ubox
26 48 0.003960816 ubox
26 51 0.003908749 ubox
26 58 0.004041987 ubox
26 61 0.953116526 ubox
27 32 0.026972594 ubox
27 33 0.066395096 ubox
27 34 0.199310497 ubox
27 35 0.018677461 ubox
27 47 0.003955441 ubox
27 57 0.004032644 ubox
27 60 0.953391804 ubox
27 61 0.007145789 ubox
28 32 0.059883805 ubox
28 33 0.195522796 ubox
28 34 0.018523582 ubox
28 56 0.003997297 ubox
28 59 0.950283913 ubox
28 60 0.006563292 ubox
29 40 0.060344768 ubox
29 41 0.008004837 ubox
29 45 0.003986503 ubox
29 49 0.008085116 ubox
29 55 0.003202331 ubox
30 39 0.044788980 ubox
30 44 0.003944430 ubox
30 48 0.008221709 ubox
30 57 0.934967913 ubox
30 58 0.185825139 ubox
31 39 0.043985601 ubox
31 42 0.004474469 ubox
31 47 0.008223123 ubox
31 56 0.934956534 ubox
31 57 0.185882255 ubox
32 38 0.059796401 ubox
32 41 0.005142970 ubox
32 46 0.008289193 ubox
32 55 0.916269003 ubox
33 37 0.058845822 ubox
33 40 0.005156976 ubox
33 45 0.008303677 ubox
33 50 0.003406450 ubox
33 54 0.896557873 ubox
33 55 0.262879686 ubox
34 49 0.003799004 ubox
34 50 0.848280259 ubox
34 54 0.321608747 ubox
34 55 0.012912013 ubox
35 43 0.008324707 ubox
35 49 0.849035661 ubox
35 54 0.014376426 ubox
36 42 0.008074158 ubox
36 48 0.819047043 ubox
36 52 0.424036564 ubox
36 53 0.014544658 ubox
36 58 0.014071687 ubox
36 59 0.008299111 ubox
36 61 0.010701006 ubox
36 62 0.117358429 ubox
37 47 0.816117414 ubox
37 48 0.225724545 ubox
37 51 0.425231807 ubox
37 56 0.003701289 ubox
37 57 0.038597569 ubox
37 58 0.012979090 ubox
37 60 0.029300279 ubox
37 61 0.186008782 ubox
38 44 0.061221943 ubox
38 47 0.227073078 ubox
38 51 0.047579385 ubox
38 56 0.038724886 ubox
38 57 0.012466399 ubox
38 60 0.186036338 ubox
39 43 0.058563626 ubox
39 45 0.829614020 ubox
39 46 0.122962351 ubox
39 49 0.427953168 ubox
39 50 0.048549199 ubox
39 54 0.029104364 ubox
39 55 0.028651687 ubox
40 44 0.824841449 ubox
40 48 0.428660275 ubox
40 53 0.039228701 ubox
40 57 0.143892630 ubox
40 58 0.104659005 ubox
40 60 0.014291119 ubox
40 61 0.041675094 ubox
40 63 0.018484245 ubox
41 47 0.418046534 ubox
41 51 0.004690037 ubox
41 52 0.036701786 ubox
41 56 0.145474308 ubox
41 57 0.097345042 ubox
41 59 0.014040776 ubox
41 60 0.041549398 ubox
41 62 0.019315610 ubox
42 46 0.194369826 ubox
42 49 0.063510006 ubox
42 50 0.006685239 ubox
42 54 0.005522259 ubox
42 55 0.146789786 ubox
43 48 0.064102127 ubox
43 51 0.016754164 ubox
43 53 0.005987161 ubox
43 56 0.017779966 ubox
44 50 0.016471281 ubox
44 54 0.175718296 ubox
44 55 0.012625924 ubox
45 53 0.176294362 ubox
45 57 0.095079139 ubox
45 58 0.003372662 ubox
45 61 0.004294254 ubox
46 52 0.175506021 ubox
46 56 0.096600143 ubox
46 60 0.004283237 ubox
47 55 0.097769100 ubox
48 54 0.097806257 ubox
49 53 0.097105672 ubox
49 57 0.005019235 ubox
50 56 0.005093881 ubox
51 55 0.004778936 ubox
54 61 0.003975459 ubox
55 60 0.004105247 ubox
1 23 0.9500000 lbox
2 22 0.9500000 lbox
3 21 0.9500000 lbox
4 20 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
25 62 0.9500000 lbox
26 61 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
33 54 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
showpage
end
%%EOF
