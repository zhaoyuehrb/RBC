%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DEFB107B)
} def

/sequence { (\
UCAGGGCAGUAGAACAUAUUUUAAUCAAUGCCCCUUGAUAAAAGAGCUUGAUUCCAGCUACUGCACUUCCUUCAUCAGCUCUCCACUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.741649714 ubox
2 37 0.811448003 ubox
2 88 0.043878461 ubox
3 35 0.264490580 ubox
3 36 0.726776174 ubox
3 67 0.107142219 ubox
3 68 0.170560574 ubox
3 71 0.124034074 ubox
3 72 0.015358292 ubox
3 82 0.012876139 ubox
3 87 0.043849300 ubox
4 32 0.003407407 ubox
4 33 0.882174439 ubox
4 34 0.313664009 ubox
4 35 0.185802214 ubox
4 66 0.113582949 ubox
4 67 0.204748543 ubox
4 68 0.006900664 ubox
4 69 0.011237635 ubox
4 70 0.132652755 ubox
4 71 0.016841118 ubox
4 73 0.005238516 ubox
4 76 0.003442747 ubox
4 81 0.013673299 ubox
4 84 0.019004332 ubox
4 86 0.037830313 ubox
5 32 0.904582034 ubox
5 33 0.263493541 ubox
5 34 0.168937280 ubox
5 66 0.208734711 ubox
5 67 0.004546265 ubox
5 68 0.010277496 ubox
5 69 0.132343938 ubox
5 70 0.017110079 ubox
5 72 0.004816340 ubox
5 75 0.003215048 ubox
5 80 0.013475546 ubox
5 83 0.018939076 ubox
5 84 0.030026726 ubox
6 31 0.921771739 ubox
6 32 0.200166570 ubox
6 33 0.162552830 ubox
6 64 0.284436821 ubox
6 68 0.019045907 ubox
6 69 0.012065481 ubox
6 79 0.012810200 ubox
6 82 0.006118272 ubox
6 83 0.029019838 ubox
7 30 0.938453317 ubox
7 63 0.286249183 ubox
7 78 0.012605623 ubox
7 88 0.020392049 ubox
8 20 0.067897160 ubox
8 21 0.006177774 ubox
8 22 0.004970170 ubox
8 29 0.910467201 ubox
8 62 0.286213912 ubox
8 67 0.005058077 ubox
8 80 0.005041158 ubox
8 82 0.005494531 ubox
8 87 0.020779357 ubox
9 15 0.040035976 ubox
9 17 0.021680449 ubox
9 19 0.163245380 ubox
9 20 0.012008153 ubox
9 21 0.009745643 ubox
9 25 0.242232103 ubox
9 29 0.138341672 ubox
9 31 0.156406485 ubox
9 61 0.286277383 ubox
9 64 0.003540151 ubox
9 66 0.005096246 ubox
9 79 0.005123155 ubox
9 81 0.004276695 ubox
9 86 0.020817397 ubox
10 14 0.036110902 ubox
10 16 0.021392024 ubox
10 18 0.164529912 ubox
10 23 0.323673663 ubox
10 24 0.198743862 ubox
10 28 0.197368255 ubox
10 30 0.156421573 ubox
10 60 0.286147993 ubox
10 63 0.003576689 ubox
10 65 0.004794472 ubox
10 78 0.004925805 ubox
10 85 0.020138024 ubox
11 17 0.163671465 ubox
11 20 0.024365214 ubox
11 21 0.068439767 ubox
11 22 0.388856604 ubox
11 29 0.151493998 ubox
11 59 0.285631528 ubox
11 62 0.003669717 ubox
11 80 0.003250304 ubox
12 19 0.018210962 ubox
12 20 0.072690632 ubox
12 21 0.398791679 ubox
12 22 0.177989682 ubox
12 26 0.572402131 ubox
12 54 0.021442587 ubox
12 58 0.284192416 ubox
12 61 0.003659480 ubox
12 73 0.006171207 ubox
12 76 0.003556754 ubox
12 79 0.003268814 ubox
12 83 0.017590086 ubox
13 19 0.070258408 ubox
13 20 0.392706115 ubox
13 21 0.184012453 ubox
13 22 0.174419175 ubox
13 25 0.546302932 ubox
13 49 0.005925740 ubox
13 52 0.008053281 ubox
13 53 0.026932037 ubox
13 72 0.006094332 ubox
13 75 0.003363341 ubox
13 82 0.014550740 ubox
14 19 0.310083932 ubox
14 20 0.168499817 ubox
14 21 0.160999439 ubox
14 48 0.005690233 ubox
14 52 0.026154825 ubox
14 71 0.005202171 ubox
15 30 0.009317846 ubox
15 50 0.032353187 ubox
16 25 0.079369644 ubox
16 29 0.010292312 ubox
16 49 0.032006820 ubox
16 52 0.004766808 ubox
17 23 0.129134489 ubox
17 24 0.096987917 ubox
17 28 0.011500307 ubox
17 30 0.007084369 ubox
17 50 0.003836680 ubox
17 51 0.003509222 ubox
18 22 0.116867590 ubox
18 25 0.023511688 ubox
18 29 0.015763463 ubox
18 49 0.004134383 ubox
18 52 0.023869359 ubox
19 24 0.029502507 ubox
19 28 0.024805637 ubox
19 42 0.005033920 ubox
19 43 0.036672069 ubox
19 44 0.020702808 ubox
19 45 0.018090977 ubox
19 46 0.017129392 ubox
19 51 0.018723109 ubox
19 57 0.107446234 ubox
20 27 0.022872066 ubox
20 28 0.014243049 ubox
20 41 0.005741032 ubox
20 42 0.041906243 ubox
20 43 0.028562113 ubox
20 44 0.018168922 ubox
20 45 0.018164619 ubox
20 50 0.015342552 ubox
20 51 0.003423931 ubox
20 56 0.105855137 ubox
20 57 0.038555273 ubox
21 27 0.013764886 ubox
21 28 0.018031707 ubox
21 40 0.005338592 ubox
21 41 0.043517673 ubox
21 42 0.032406581 ubox
21 43 0.017717603 ubox
21 44 0.018205231 ubox
21 51 0.007135810 ubox
21 56 0.035900724 ubox
21 57 0.036100218 ubox
22 27 0.016777492 ubox
22 40 0.043554910 ubox
22 41 0.031559392 ubox
22 42 0.016357144 ubox
22 43 0.017299920 ubox
22 50 0.007178170 ubox
22 56 0.032113283 ubox
23 39 0.030784767 ubox
23 49 0.007275735 ubox
23 53 0.255302245 ubox
24 39 0.060664219 ubox
24 48 0.006345481 ubox
24 52 0.276563164 ubox
25 38 0.069665311 ubox
25 45 0.006582198 ubox
25 51 0.279966326 ubox
26 37 0.069916194 ubox
26 44 0.006587215 ubox
26 50 0.280303488 ubox
27 36 0.069642457 ubox
27 49 0.279811319 ubox
28 35 0.061757515 ubox
28 48 0.266525929 ubox
30 47 0.279945940 ubox
31 46 0.279614062 ubox
34 44 0.272224310 ubox
34 46 0.007550654 ubox
35 41 0.016373355 ubox
35 42 0.069095406 ubox
35 43 0.272870211 ubox
35 44 0.028221306 ubox
35 45 0.012992292 ubox
35 78 0.006905267 ubox
36 40 0.015219097 ubox
36 41 0.075615717 ubox
36 42 0.271668475 ubox
36 43 0.031635639 ubox
36 44 0.012949183 ubox
36 45 0.006477070 ubox
36 74 0.004881354 ubox
36 77 0.009020676 ubox
36 85 0.043087165 ubox
36 88 0.010569547 ubox
37 69 0.005389084 ubox
37 73 0.005393757 ubox
37 76 0.009456209 ubox
37 83 0.032663953 ubox
37 84 0.048139859 ubox
37 87 0.016492591 ubox
38 68 0.005367199 ubox
38 72 0.005345824 ubox
38 75 0.009437063 ubox
38 82 0.026164731 ubox
39 74 0.008953533 ubox
39 88 0.038222574 ubox
40 87 0.043355859 ubox
41 72 0.005114223 ubox
42 68 0.005707184 ubox
42 71 0.005052614 ubox
42 72 0.003555845 ubox
43 62 0.016508317 ubox
43 67 0.006237536 ubox
43 71 0.003861390 ubox
43 82 0.903448873 ubox
43 87 0.007523146 ubox
44 53 0.004618939 ubox
44 54 0.013480365 ubox
44 61 0.016943452 ubox
44 66 0.006252761 ubox
44 69 0.003333761 ubox
44 70 0.003913341 ubox
44 81 0.957268853 ubox
44 83 0.007466043 ubox
44 86 0.004821910 ubox
45 52 0.004958847 ubox
45 53 0.013374133 ubox
45 59 0.026603203 ubox
45 80 0.957569111 ubox
45 82 0.006692469 ubox
46 52 0.011149172 ubox
46 58 0.030164569 ubox
46 64 0.005312095 ubox
46 79 0.957762116 ubox
46 81 0.005354565 ubox
47 57 0.031505723 ubox
47 63 0.005320140 ubox
47 78 0.956528948 ubox
48 56 0.025068144 ubox
48 57 0.018370622 ubox
48 77 0.859530418 ubox
48 78 0.046440322 ubox
49 56 0.061813136 ubox
49 65 0.010895211 ubox
49 74 0.790585512 ubox
49 77 0.326879590 ubox
50 55 0.068258105 ubox
50 64 0.010899824 ubox
50 68 0.006581209 ubox
50 69 0.039527642 ubox
50 72 0.020397132 ubox
50 73 0.833097214 ubox
50 76 0.461163385 ubox
51 67 0.008196409 ubox
51 68 0.040061405 ubox
51 71 0.043470188 ubox
51 72 0.825032271 ubox
51 75 0.459113423 ubox
52 74 0.430716479 ubox
55 63 0.171050446 ubox
56 62 0.171292309 ubox
56 67 0.315420735 ubox
56 68 0.086572079 ubox
56 71 0.129052931 ubox
56 72 0.058173366 ubox
56 80 0.003522378 ubox
57 61 0.167598538 ubox
57 64 0.841372425 ubox
57 66 0.303362251 ubox
57 67 0.023336152 ubox
57 70 0.123875094 ubox
57 71 0.026971512 ubox
57 79 0.003741502 ubox
58 63 0.845038349 ubox
58 78 0.003743723 ubox
59 77 0.003657093 ubox
61 78 0.003721774 ubox
62 74 0.010871218 ubox
62 77 0.003865279 ubox
63 73 0.012864706 ubox
63 76 0.003940615 ubox
63 79 0.007206367 ubox
64 78 0.007221624 ubox
66 78 0.008846037 ubox
67 77 0.008488593 ubox
68 77 0.004657342 ubox
70 78 0.024416826 ubox
71 77 0.023711936 ubox
71 78 0.006457999 ubox
72 77 0.006970306 ubox
73 88 0.008822328 ubox
74 87 0.008265309 ubox
76 88 0.148500053 ubox
77 87 0.151776333 ubox
78 86 0.151666327 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
43 82 0.9500000 lbox
44 81 0.9500000 lbox
45 80 0.9500000 lbox
46 79 0.9500000 lbox
47 78 0.9500000 lbox
48 77 0.9500000 lbox
49 74 0.9500000 lbox
50 73 0.9500000 lbox
51 72 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
