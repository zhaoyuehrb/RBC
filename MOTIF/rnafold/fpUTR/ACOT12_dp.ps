%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ACOT12)
} def

/sequence { (\
GGAGCGGGCAUGGUGGGGUGUCGGGGGCCGCAGGCGUAGCGCUCUCGCCCUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.008719444 ubox
1 46 0.005808744 ubox
1 50 0.023436328 ubox
1 51 0.004653506 ubox
1 55 0.031396463 ubox
2 44 0.011588267 ubox
2 49 0.023472733 ubox
2 50 0.004917248 ubox
2 54 0.031138898 ubox
3 43 0.011614326 ubox
4 14 0.010392023 ubox
4 31 0.003299693 ubox
4 42 0.011618158 ubox
4 48 0.024034466 ubox
4 54 0.127750657 ubox
5 12 0.028148307 ubox
5 13 0.011172417 ubox
5 23 0.017888970 ubox
5 30 0.003306667 ubox
5 41 0.011614686 ubox
5 47 0.024030305 ubox
5 52 0.026753097 ubox
5 53 0.127997249 ubox
6 11 0.031875139 ubox
6 22 0.014856468 ubox
6 40 0.011192094 ubox
6 46 0.020232880 ubox
6 50 0.026163878 ubox
6 51 0.026209934 ubox
6 55 0.691620142 ubox
7 21 0.010489417 ubox
7 22 0.046595193 ubox
7 45 0.008211317 ubox
7 49 0.026242194 ubox
7 50 0.026308620 ubox
7 51 0.124857117 ubox
7 54 0.696489581 ubox
7 55 0.215800116 ubox
8 14 0.003942943 ubox
8 21 0.048111831 ubox
8 37 0.005638686 ubox
8 40 0.004156101 ubox
8 44 0.007337698 ubox
8 48 0.026239666 ubox
8 49 0.018831442 ubox
8 50 0.124885283 ubox
8 54 0.218631942 ubox
9 13 0.004109857 ubox
9 20 0.049445095 ubox
9 36 0.005676735 ubox
9 39 0.004531028 ubox
9 47 0.025918485 ubox
9 52 0.699271685 ubox
9 53 0.209802896 ubox
10 19 0.049458391 ubox
10 37 0.007985727 ubox
10 51 0.694811694 ubox
11 18 0.049051140 ubox
11 36 0.008318734 ubox
11 52 0.039300471 ubox
12 35 0.008390183 ubox
12 43 0.005164770 ubox
12 44 0.004157471 ubox
12 46 0.011069573 ubox
12 49 0.717144915 ubox
12 50 0.075654086 ubox
12 51 0.017995888 ubox
12 55 0.659143631 ubox
13 42 0.005898382 ubox
13 45 0.006206095 ubox
13 48 0.719862492 ubox
13 49 0.057085722 ubox
13 50 0.013611192 ubox
13 54 0.667310022 ubox
14 32 0.013472111 ubox
14 41 0.005888833 ubox
14 47 0.721067011 ubox
14 52 0.138852787 ubox
14 53 0.662376170 ubox
15 22 0.006557824 ubox
15 31 0.014078286 ubox
15 40 0.005851759 ubox
15 43 0.003375097 ubox
15 45 0.057763071 ubox
15 46 0.719442821 ubox
15 49 0.011936375 ubox
15 50 0.038632161 ubox
15 51 0.184677265 ubox
16 21 0.005951125 ubox
16 22 0.003388022 ubox
16 42 0.003746801 ubox
16 44 0.495898096 ubox
16 45 0.524204461 ubox
16 46 0.014325170 ubox
16 48 0.012014761 ubox
16 49 0.038330356 ubox
16 50 0.211394539 ubox
16 51 0.653356896 ubox
17 29 0.014363196 ubox
17 43 0.498552178 ubox
17 44 0.521713749 ubox
17 45 0.016783197 ubox
17 48 0.037792769 ubox
17 49 0.211967145 ubox
17 50 0.654621670 ubox
18 28 0.014406494 ubox
18 31 0.007703927 ubox
18 40 0.005595607 ubox
18 42 0.700839737 ubox
18 43 0.161327262 ubox
18 44 0.018960314 ubox
18 48 0.212287565 ubox
18 49 0.654431025 ubox
18 50 0.003542613 ubox
19 27 0.014338878 ubox
19 30 0.007639803 ubox
19 32 0.022656857 ubox
19 36 0.005413079 ubox
19 39 0.005639289 ubox
19 41 0.700460472 ubox
19 47 0.195643869 ubox
20 28 0.004566158 ubox
20 29 0.006789174 ubox
20 31 0.025250839 ubox
20 35 0.006900357 ubox
20 40 0.700356969 ubox
20 42 0.156249321 ubox
20 46 0.185454828 ubox
20 48 0.624425624 ubox
20 54 0.007231763 ubox
21 27 0.005727474 ubox
21 30 0.005825567 ubox
21 34 0.007047475 ubox
21 39 0.687079648 ubox
21 41 0.069048032 ubox
21 47 0.134483831 ubox
21 53 0.007301129 ubox
22 26 0.009934210 ubox
22 30 0.066043476 ubox
22 33 0.006887839 ubox
22 36 0.059513432 ubox
22 41 0.154768019 ubox
22 47 0.646729645 ubox
22 52 0.007757963 ubox
23 29 0.066607000 ubox
23 35 0.048361968 ubox
23 40 0.157938253 ubox
23 43 0.007883373 ubox
23 44 0.174611070 ubox
23 45 0.041498638 ubox
23 46 0.663023012 ubox
23 51 0.007753916 ubox
23 55 0.003633331 ubox
24 28 0.065536220 ubox
24 42 0.006980411 ubox
24 43 0.176520499 ubox
24 44 0.044676497 ubox
24 45 0.665123261 ubox
24 46 0.007692593 ubox
24 50 0.007292299 ubox
24 51 0.022663306 ubox
24 54 0.003550849 ubox
25 42 0.177675458 ubox
25 43 0.042537997 ubox
25 44 0.665610629 ubox
25 45 0.008191297 ubox
25 49 0.006729551 ubox
25 50 0.024229959 ubox
26 42 0.043255965 ubox
26 43 0.665175369 ubox
26 44 0.008573743 ubox
26 48 0.006082878 ubox
26 49 0.024399311 ubox
26 55 0.035745575 ubox
27 35 0.716706273 ubox
27 37 0.006033877 ubox
27 40 0.182759826 ubox
27 42 0.665537464 ubox
27 43 0.007443252 ubox
27 48 0.024559647 ubox
27 54 0.036198256 ubox
28 34 0.717072769 ubox
28 36 0.005641443 ubox
28 39 0.182663101 ubox
28 41 0.476244273 ubox
28 47 0.019889203 ubox
28 53 0.036238956 ubox
29 33 0.711859263 ubox
29 36 0.048874494 ubox
29 41 0.465039909 ubox
29 47 0.015528138 ubox
29 52 0.036159155 ubox
30 35 0.048239862 ubox
30 37 0.195832191 ubox
30 40 0.657550975 ubox
30 46 0.021355338 ubox
30 48 0.003904540 ubox
30 51 0.032653297 ubox
31 36 0.197785034 ubox
31 39 0.657335360 ubox
31 47 0.003949266 ubox
32 45 0.017918415 ubox
32 51 0.004974898 ubox
33 43 0.030307613 ubox
33 44 0.017960102 ubox
33 49 0.035810453 ubox
33 50 0.004766460 ubox
33 55 0.003325032 ubox
34 40 0.027863404 ubox
34 42 0.037674451 ubox
34 48 0.036000121 ubox
34 49 0.003664109 ubox
34 54 0.003353672 ubox
35 39 0.027693635 ubox
35 41 0.037761187 ubox
35 47 0.036128793 ubox
35 53 0.003347519 ubox
36 40 0.035348766 ubox
36 46 0.036032995 ubox
38 45 0.029196217 ubox
39 44 0.028949404 ubox
47 54 0.008066527 ubox
48 53 0.008056685 ubox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
15 46 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
29 33 0.9500000 lbox
showpage
end
%%EOF
