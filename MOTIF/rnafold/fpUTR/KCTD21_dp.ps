%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KCTD21)
} def

/sequence { (\
CUCGCAAAGCUGCGCUGGCCGCUCGCGGAGGGAGAGGCUGCAGAGCGAGGGCAGGAGGACUACUUCCAGCAACCCAGUCUCCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 49 0.994613805 ubox
1 50 0.007714210 ubox
2 48 0.999000855 ubox
2 49 0.003984651 ubox
3 14 0.008705916 ubox
3 47 0.999590402 ubox
3 49 0.005537445 ubox
4 10 0.004340165 ubox
4 13 0.011998102 ubox
4 19 0.004228033 ubox
4 46 0.999061561 ubox
5 9 0.004556489 ubox
5 12 0.012076057 ubox
5 18 0.004231211 ubox
5 45 0.992935589 ubox
6 11 0.011113791 ubox
8 16 0.029516377 ubox
8 23 0.006005354 ubox
8 39 0.029779186 ubox
9 15 0.030860162 ubox
9 22 0.006568879 ubox
9 38 0.029981583 ubox
9 41 0.124396233 ubox
9 46 0.037222900 ubox
10 14 0.030650046 ubox
10 21 0.006569374 ubox
10 37 0.029972920 ubox
10 40 0.124262632 ubox
10 43 0.985074718 ubox
10 45 0.039527202 ubox
10 49 0.006366066 ubox
11 36 0.029744934 ubox
11 42 0.989147033 ubox
11 44 0.046802231 ubox
11 47 0.004338286 ubox
11 48 0.006125883 ubox
12 19 0.006733913 ubox
12 38 0.115444961 ubox
12 41 0.989115397 ubox
12 46 0.006848117 ubox
13 18 0.006743125 ubox
13 37 0.115629678 ubox
13 40 0.987651368 ubox
13 45 0.006888321 ubox
13 47 0.006380473 ubox
14 38 0.150191119 ubox
14 39 0.477637564 ubox
14 41 0.061966078 ubox
14 46 0.008056699 ubox
15 31 0.007356528 ubox
15 32 0.028940456 ubox
15 34 0.018190629 ubox
15 36 0.118501882 ubox
15 37 0.151589501 ubox
15 40 0.063877771 ubox
15 43 0.009086418 ubox
15 45 0.008064005 ubox
16 30 0.007348538 ubox
16 31 0.028793892 ubox
16 33 0.017735148 ubox
16 35 0.120621093 ubox
16 36 0.146055879 ubox
16 40 0.043113188 ubox
16 42 0.009056284 ubox
16 44 0.007821662 ubox
17 39 0.844889472 ubox
17 41 0.008341045 ubox
18 38 0.980207401 ubox
19 28 0.036683578 ubox
19 31 0.036844142 ubox
19 32 0.184429852 ubox
19 37 0.980377315 ubox
20 27 0.036705708 ubox
20 30 0.036778726 ubox
20 31 0.184457926 ubox
20 36 0.978088895 ubox
20 47 0.009506245 ubox
21 26 0.035781311 ubox
21 46 0.009695186 ubox
22 28 0.034171730 ubox
22 30 0.185355258 ubox
22 31 0.004673437 ubox
22 32 0.083767556 ubox
22 34 0.973600795 ubox
22 36 0.004481152 ubox
22 45 0.009696785 ubox
23 27 0.030832928 ubox
23 29 0.185564331 ubox
23 30 0.003971779 ubox
23 31 0.084355347 ubox
23 32 0.040963478 ubox
23 33 0.975922275 ubox
23 35 0.008747790 ubox
23 44 0.009864697 ubox
24 28 0.184020581 ubox
24 30 0.085354349 ubox
24 31 0.084171829 ubox
24 32 0.973209637 ubox
24 34 0.009068665 ubox
24 43 0.010008206 ubox
25 41 0.011299515 ubox
26 40 0.011330186 ubox
27 39 0.011248538 ubox
28 38 0.011202624 ubox
49 86 0.007633456 ubox
50 85 0.008782473 ubox
50 86 0.988403705 ubox
51 70 0.003671847 ubox
51 85 0.999893660 ubox
52 69 0.003768467 ubox
52 84 0.999980360 ubox
53 83 0.999745456 ubox
54 67 0.004350887 ubox
54 82 0.999974310 ubox
55 66 0.004411546 ubox
55 81 0.999909546 ubox
56 65 0.004471570 ubox
56 80 0.955420466 ubox
57 64 0.004861259 ubox
57 66 0.003535946 ubox
57 67 0.037951981 ubox
57 74 0.013870235 ubox
57 75 0.016689570 ubox
57 79 0.741083750 ubox
57 80 0.289961140 ubox
58 63 0.007425988 ubox
58 65 0.006624226 ubox
58 66 0.043246530 ubox
58 73 0.015930871 ubox
58 74 0.019100227 ubox
58 78 0.408201866 ubox
58 79 0.669636835 ubox
59 64 0.007086613 ubox
59 65 0.041266319 ubox
59 78 0.900024969 ubox
60 69 0.032225177 ubox
60 77 0.973913032 ubox
61 68 0.032298618 ubox
61 76 0.933956251 ubox
62 78 0.071985443 ubox
63 69 0.098325884 ubox
63 77 0.083572133 ubox
64 68 0.088883875 ubox
64 72 0.201323730 ubox
64 76 0.079980025 ubox
64 77 0.007105725 ubox
65 71 0.203214598 ubox
65 76 0.010206103 ubox
68 80 0.003921660 ubox
69 78 0.050594058 ubox
69 79 0.006106891 ubox
70 77 0.055519798 ubox
72 78 0.011006725 ubox
73 77 0.012237922 ubox
1 49 0.9500000 lbox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
13 40 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
50 86 0.9500000 lbox
51 85 0.9500000 lbox
52 84 0.9500000 lbox
53 83 0.9500000 lbox
54 82 0.9500000 lbox
55 81 0.9500000 lbox
56 80 0.9500000 lbox
57 79 0.9500000 lbox
59 78 0.9500000 lbox
60 77 0.9500000 lbox
61 76 0.9500000 lbox
showpage
end
%%EOF
