%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BCL6B)
} def

/sequence { (\
GAGACCCCGCCCCCCUUAAGAAGAGAAGCCGCGGCCCCUGCAGGACGGGGGCCUGUGUCGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.185911994 ubox
1 59 0.465188291 ubox
2 16 0.196794022 ubox
2 17 0.012907199 ubox
2 54 0.007163821 ubox
2 58 0.464467209 ubox
2 62 0.017960204 ubox
3 15 0.197727183 ubox
3 16 0.011868553 ubox
3 17 0.016039315 ubox
3 53 0.007342709 ubox
3 59 0.201813406 ubox
3 61 0.018972878 ubox
4 16 0.015566096 ubox
4 56 0.461365243 ubox
4 58 0.201810361 ubox
5 50 0.007384649 ubox
5 55 0.461295587 ubox
5 57 0.199846690 ubox
6 49 0.007492840 ubox
7 33 0.003336117 ubox
7 34 0.020415526 ubox
7 48 0.007504053 ubox
8 31 0.034770540 ubox
8 33 0.043786252 ubox
8 47 0.007514840 ubox
8 55 0.032456402 ubox
8 57 0.015725592 ubox
8 60 0.016522645 ubox
9 29 0.173315009 ubox
9 30 0.030807747 ubox
9 32 0.119719736 ubox
9 46 0.007500033 ubox
9 52 0.477617331 ubox
9 54 0.010402061 ubox
9 56 0.019075398 ubox
9 58 0.003493865 ubox
9 59 0.015813981 ubox
9 61 0.092306599 ubox
10 28 0.174450249 ubox
10 31 0.119663300 ubox
10 44 0.005136042 ubox
10 50 0.006298634 ubox
10 51 0.478264614 ubox
10 55 0.019059173 ubox
10 57 0.005039186 ubox
10 60 0.092241635 ubox
11 43 0.005117699 ubox
11 44 0.004762552 ubox
11 49 0.006512054 ubox
11 50 0.478116457 ubox
11 51 0.016147654 ubox
12 43 0.004756656 ubox
12 48 0.006710813 ubox
12 49 0.477966071 ubox
12 50 0.020049002 ubox
13 47 0.006882392 ubox
13 48 0.477810087 ubox
13 49 0.023296717 ubox
14 44 0.013361442 ubox
14 47 0.476551337 ubox
14 48 0.026142058 ubox
15 23 0.316375083 ubox
15 25 0.601358974 ubox
15 28 0.176193147 ubox
15 43 0.018455620 ubox
15 44 0.039112845 ubox
15 47 0.028519117 ubox
16 22 0.313587383 ubox
16 23 0.040087839 ubox
16 24 0.601956127 ubox
16 25 0.038528672 ubox
16 26 0.038526249 ubox
16 27 0.178254164 ubox
16 28 0.008206110 ubox
16 42 0.018021072 ubox
16 43 0.039248136 ubox
16 44 0.006621630 ubox
16 45 0.140341685 ubox
17 21 0.261345170 ubox
17 22 0.046458269 ubox
17 23 0.588657652 ubox
17 24 0.043325846 ubox
17 25 0.040580568 ubox
17 26 0.176711076 ubox
17 27 0.010353484 ubox
17 42 0.036117879 ubox
17 43 0.006914491 ubox
17 44 0.130690829 ubox
19 39 0.010295619 ubox
19 62 0.018397628 ubox
20 38 0.010293058 ubox
20 59 0.022424426 ubox
20 61 0.020122785 ubox
21 58 0.022167145 ubox
22 39 0.072960586 ubox
22 62 0.153253662 ubox
23 38 0.073109800 ubox
23 59 0.044941172 ubox
23 61 0.169577963 ubox
24 39 0.128636881 ubox
24 58 0.044315514 ubox
24 62 0.167076647 ubox
25 38 0.129580296 ubox
25 59 0.194075703 ubox
25 61 0.182718290 ubox
26 58 0.187036368 ubox
27 62 0.688345433 ubox
28 35 0.162130130 ubox
28 41 0.005098627 ubox
28 56 0.116933854 ubox
28 58 0.183067654 ubox
28 61 0.764212727 ubox
29 34 0.162207608 ubox
29 40 0.005013440 ubox
29 44 0.435040303 ubox
29 55 0.116082385 ubox
29 57 0.164523572 ubox
29 60 0.761180786 ubox
30 43 0.436113323 ubox
30 55 0.144988998 ubox
30 57 0.795456952 ubox
30 60 0.023325429 ubox
31 41 0.447363047 ubox
31 54 0.145484865 ubox
31 56 0.826559819 ubox
31 58 0.129772835 ubox
31 59 0.029366520 ubox
31 61 0.021503279 ubox
32 40 0.448749081 ubox
32 47 0.003960432 ubox
32 55 0.827031439 ubox
32 57 0.133889870 ubox
32 60 0.021515264 ubox
33 39 0.445346045 ubox
33 46 0.010120540 ubox
33 53 0.855066109 ubox
33 54 0.190996754 ubox
33 56 0.018945012 ubox
33 59 0.009523309 ubox
34 38 0.435811685 ubox
34 41 0.021861522 ubox
34 52 0.867270423 ubox
34 53 0.135195020 ubox
35 40 0.021809690 ubox
35 44 0.014170745 ubox
35 50 0.004616627 ubox
35 51 0.877972119 ubox
36 43 0.014699738 ubox
36 44 0.039794291 ubox
36 49 0.005856187 ubox
36 50 0.877968725 ubox
36 51 0.003543853 ubox
37 43 0.039794789 ubox
37 44 0.042967726 ubox
37 48 0.006865704 ubox
37 49 0.877960951 ubox
37 50 0.003679317 ubox
38 43 0.042985378 ubox
38 44 0.006263837 ubox
38 47 0.007740246 ubox
38 48 0.877945710 ubox
38 49 0.003801725 ubox
39 43 0.005707542 ubox
39 47 0.876899565 ubox
39 48 0.003904649 ubox
40 46 0.870078894 ubox
54 60 0.003223689 ubox
55 59 0.004830309 ubox
55 61 0.011976540 ubox
56 60 0.011223446 ubox
27 62 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
showpage
end
%%EOF
