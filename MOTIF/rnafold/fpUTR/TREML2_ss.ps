%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUGAAUCCCUGCGGUUGGCUGGGGGCAGUGGGUCCCACACUGCCUCACUUCCCUAAAUGGGCAGCUUCACUUUUAGAACCCCGGGUCCUUCCCUGGCAGGCCCAGGUGGCACAUCCUGUGUCGGGUGGGCCCUCACCUUGGAUCUCCAGGCCUGACACUGCCCAGCUGGAUGGAACC\
) } def
/len { sequence length } bind def

/coor [
[-129.96852112 373.91708374]
[-133.66920471 383.29873657]
[-139.35047913 391.72729492]
[-146.77331543 398.78689575]
[-155.61189270 404.12054443]
[-165.46791077 407.44796753]
[-175.88847351 408.58013916]
[-186.38687134 407.42987061]
[-196.46534729 404.01724243]
[-204.85324097 416.45281982]
[-213.24113464 428.88836670]
[-214.54357910 444.65588379]
[-228.07508850 450.88061523]
[-236.46298218 463.31619263]
[-234.82560730 479.27545166]
[-246.38258362 490.40270996]
[-262.26840210 488.16207886]
[-270.29681396 474.27236938]
[-264.30911255 459.38858032]
[-248.89855957 454.92828369]
[-240.51066589 442.49273682]
[-239.80816650 427.61468506]
[-225.67669678 420.50048828]
[-217.28880310 408.06491089]
[-208.90090942 395.62936401]
[-217.92814636 383.64981079]
[-232.19398499 388.28506470]
[-246.45983887 392.92031860]
[-260.72567749 397.55557251]
[-274.99151611 402.19082642]
[-289.25738525 406.82608032]
[-303.52322388 411.46133423]
[-309.21301270 426.02706909]
[-322.95904541 433.48233032]
[-338.27084351 430.30697632]
[-347.91864014 418.00033569]
[-347.34707642 402.37319946]
[-336.82598877 390.80422974]
[-321.32315063 388.75595093]
[-308.15847778 397.19549561]
[-293.89263916 392.56024170]
[-279.62677002 387.92498779]
[-265.36093140 383.28973389]
[-251.09509277 378.65447998]
[-236.82923889 374.01922607]
[-222.56340027 369.38397217]
[-220.46508789 345.96063232]
[-207.88372803 326.59448242]
[-188.07385254 315.56958008]
[-165.83064270 315.10226440]
[-146.33132935 324.90603638]
[-135.18415833 314.86907959]
[-124.03697968 304.83209229]
[-112.88980865 294.79513550]
[-101.91950226 284.56518555]
[-91.12940979 274.14529419]
[-80.33930969 263.72543335]
[-80.33695221 248.87498474]
[-69.54269409 238.15403748]
[-53.96619797 238.25720215]
[-43.17610168 227.83732605]
[-32.38600540 217.41744995]
[-21.59590721 206.99757385]
[-10.80581093 196.57769775]
[-0.01571378 186.15782166]
[10.77438354 175.73794556]
[10.77674484 160.88751221]
[21.57100296 150.16656494]
[37.14749527 150.26972961]
[47.93759155 139.84985352]
[58.72768784 129.42997742]
[54.30844498 121.95014954]
[51.23134613 113.82555389]
[49.58678818 105.29484558]
[49.42306900 96.60860443]
[50.74500275 88.02198792]
[53.51375961 79.78720856]
[57.64801025 72.14616394]
[63.02630997 65.32330322]
[69.49067688 59.51903152]
[76.85122681 54.90385818]
[84.89176178 51.61334229]
[93.37607574 49.74414444]
[93.63786316 34.74642944]
[93.89965057 19.74871254]
[94.16143799 4.75099754]
[94.42321777 -10.24671745]
[83.26573181 -21.43983841]
[83.37447357 -37.24375153]
[94.68492889 -48.28227997]
[110.48680878 -48.00645828]
[121.40513611 -36.57992554]
[120.96226501 -20.78184319]
[109.42093658 -9.98493195]
[109.15914917 5.01278353]
[108.89736176 20.01049995]
[108.63558197 35.00821304]
[108.37379456 50.00592804]
[118.58047485 52.83758545]
[127.97586823 57.72851562]
[136.14973450 64.46517181]
[148.28498840 55.64839172]
[160.42024231 46.83161163]
[172.55549622 38.01483536]
[184.69075012 29.19805527]
[196.82600403 20.38127708]
[199.42924500 5.02351141]
[211.86170959 -3.74508476]
[226.48695374 -1.16865861]
[238.62220764 -9.98543739]
[250.75746155 -18.80221558]
[262.89270020 -27.61899567]
[275.02798462 -36.43577194]
[287.16323853 -45.25255203]
[299.29849243 -54.06933212]
[308.55865479 -68.27092743]
[324.76873779 -63.30403900]
[324.48333740 -46.35249329]
[308.11526489 -41.93407822]
[295.98001099 -33.11729813]
[283.84475708 -24.30051804]
[271.70950317 -15.48373985]
[259.57424927 -6.66696119]
[247.43898010 2.14981747]
[235.30372620 10.96659660]
[233.23460388 25.67218399]
[221.05332947 34.78652191]
[205.64279175 32.51653290]
[193.50753784 41.33330917]
[181.37228394 50.15008926]
[169.23703003 58.96686935]
[157.10177612 67.78364563]
[144.96650696 76.60042572]
[147.37809753 81.97658539]
[149.14952087 87.59627533]
[150.25683594 93.38356018]
[150.68510437 99.26024628]
[150.42852783 105.14692688]
[149.49057007 110.96406555]
[163.49427795 116.33958435]
[177.49798584 121.71510315]
[191.50169373 127.09062195]
[205.50540161 132.46614075]
[221.60917664 129.36772156]
[232.13836670 141.94023132]
[226.26144409 157.25015259]
[210.02407837 159.54795837]
[200.12988281 146.46984863]
[186.12617493 141.09432983]
[172.12246704 135.71881104]
[158.11875916 130.34329224]
[144.11505127 124.96777344]
[123.66522980 144.82727051]
[95.73144531 150.51046753]
[69.14756775 140.22007751]
[58.35746765 150.63995361]
[47.56737137 161.05982971]
[47.12686157 176.63043213]
[36.03573608 187.04396057]
[21.19425964 186.52804565]
[10.40416145 196.94792175]
[-0.38593525 207.36779785]
[-11.17603207 217.78767395]
[-21.96612930 228.20755005]
[-32.75622559 238.62742615]
[-43.54632187 249.04730225]
[-43.98683167 264.61788940]
[-55.07795715 275.03143311]
[-69.91943359 274.51550293]
[-80.70953369 284.93539429]
[-91.49962616 295.35525513]
[-93.70082092 301.63757324]
[-98.09507751 305.29678345]
[-102.85285187 305.94232178]
[-114.00002289 315.97927856]
[-125.14719391 326.01623535]
[-136.29437256 336.05319214]
[-131.66430664 344.65393066]
[-128.97666931 354.12722778]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 25]
[10 24]
[11 23]
[13 21]
[14 20]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[51 177]
[52 176]
[53 175]
[54 174]
[55 171]
[56 170]
[57 169]
[60 166]
[61 165]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[69 157]
[70 156]
[71 155]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[101 133]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
