%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PSTPIP2)
} def

/sequence { (\
AGUUGAGUCUGCGGAGCCGCGGGCAGUGGCAGUCAGGCCUCCCCGCUCUGUGCUACCUGCGGCCCGGCUCUCCUCCGCGCCCCCACUCGCGCUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.017423195 ubox
1 69 0.005760040 ubox
1 71 0.009463612 ubox
1 74 0.636774423 ubox
1 93 0.035756157 ubox
2 9 0.018486674 ubox
2 12 0.009662102 ubox
2 68 0.006617852 ubox
2 70 0.006931906 ubox
2 73 0.731157886 ubox
2 78 0.013901250 ubox
2 90 0.013958282 ubox
2 92 0.037273057 ubox
2 95 0.078125462 ubox
3 11 0.009615736 ubox
3 67 0.006591162 ubox
3 77 0.013917390 ubox
3 89 0.009847423 ubox
3 91 0.035746429 ubox
3 94 0.074245815 ubox
4 66 0.003398865 ubox
4 89 0.036186882 ubox
4 94 0.006415811 ubox
4 96 0.004125548 ubox
5 12 0.003495058 ubox
5 65 0.003168850 ubox
5 70 0.905108193 ubox
5 72 0.372080965 ubox
5 75 0.181401680 ubox
5 76 0.015095881 ubox
5 88 0.041601434 ubox
5 95 0.004474460 ubox
6 69 0.905770306 ubox
6 71 0.373502762 ubox
6 74 0.182570916 ubox
6 87 0.041620191 ubox
7 68 0.905710125 ubox
7 70 0.373146543 ubox
7 73 0.182025246 ubox
7 86 0.041615075 ubox
7 95 0.006868550 ubox
8 67 0.885577471 ubox
8 85 0.040357758 ubox
8 94 0.006593240 ubox
9 22 0.005072081 ubox
9 66 0.519128658 ubox
9 67 0.170869945 ubox
10 21 0.005095920 ubox
10 66 0.088001237 ubox
10 79 0.035338878 ubox
10 96 0.016478119 ubox
11 20 0.005451374 ubox
11 60 0.003311262 ubox
11 65 0.052869689 ubox
11 68 0.208629405 ubox
11 78 0.038875026 ubox
11 80 0.010436257 ubox
11 92 0.003670682 ubox
11 95 0.030596863 ubox
12 19 0.005452234 ubox
12 59 0.003310843 ubox
12 66 0.831978953 ubox
12 67 0.148702805 ubox
12 77 0.038889560 ubox
12 79 0.010414252 ubox
12 91 0.003650403 ubox
12 94 0.030546384 ubox
13 18 0.005377193 ubox
13 64 0.042709867 ubox
13 65 0.995801277 ubox
13 71 0.041524425 ubox
13 72 0.011728123 ubox
13 73 0.006721613 ubox
13 76 0.038548752 ubox
13 78 0.008808067 ubox
13 90 0.003319268 ubox
13 93 0.012298774 ubox
14 63 0.028974985 ubox
14 64 0.996465486 ubox
14 70 0.048817066 ubox
14 72 0.006503966 ubox
14 75 0.037114209 ubox
14 88 0.003345935 ubox
14 92 0.003460654 ubox
15 54 0.003167467 ubox
15 69 0.051024517 ubox
15 71 0.005908834 ubox
15 74 0.033798536 ubox
15 87 0.003382712 ubox
16 53 0.003271437 ubox
16 63 0.997758499 ubox
16 68 0.054369147 ubox
16 70 0.004740139 ubox
16 73 0.018958094 ubox
16 86 0.003356196 ubox
17 52 0.003239766 ubox
17 62 0.998317883 ubox
17 67 0.055236559 ubox
18 61 0.998305644 ubox
18 66 0.055143790 ubox
19 46 0.003760700 ubox
19 60 0.998298360 ubox
19 63 0.005003329 ubox
19 65 0.054489723 ubox
19 68 0.010343706 ubox
20 45 0.003785855 ubox
20 59 0.998281343 ubox
20 62 0.005486000 ubox
20 66 0.013336588 ubox
20 67 0.007363485 ubox
21 44 0.004242114 ubox
21 57 0.012528558 ubox
21 58 0.997125637 ubox
21 64 0.052766022 ubox
21 65 0.016562768 ubox
21 82 0.004099732 ubox
22 43 0.004244161 ubox
22 56 0.011697339 ubox
22 57 0.997355720 ubox
22 58 0.022986127 ubox
22 63 0.052489323 ubox
22 64 0.016870710 ubox
22 81 0.004153562 ubox
23 42 0.004238786 ubox
23 53 0.006445569 ubox
23 56 0.931976770 ubox
23 57 0.032369100 ubox
23 60 0.054941274 ubox
23 63 0.016755020 ubox
23 80 0.004160661 ubox
24 50 0.006140453 ubox
24 52 0.008206410 ubox
24 59 0.055243012 ubox
24 62 0.016609057 ubox
24 79 0.004152360 ubox
25 47 0.004357726 ubox
25 49 0.005953303 ubox
25 51 0.007180065 ubox
25 54 0.700514887 ubox
25 58 0.055319409 ubox
26 46 0.005216341 ubox
26 48 0.005771811 ubox
26 53 0.715858739 ubox
26 56 0.357723671 ubox
26 57 0.039346212 ubox
26 60 0.013810400 ubox
26 78 0.004175577 ubox
27 45 0.005328034 ubox
27 50 0.007427143 ubox
27 52 0.630007567 ubox
27 55 0.678032845 ubox
27 59 0.013423749 ubox
27 77 0.004176601 ubox
28 39 0.025290560 ubox
28 43 0.003298337 ubox
28 44 0.005202081 ubox
28 47 0.010584529 ubox
28 48 0.003553875 ubox
28 49 0.040490997 ubox
28 51 0.435646781 ubox
28 54 0.690844032 ubox
28 57 0.013603759 ubox
28 58 0.005964642 ubox
28 76 0.004186700 ubox
29 38 0.025352115 ubox
29 42 0.003398294 ubox
29 43 0.005099564 ubox
29 46 0.011279297 ubox
29 48 0.043443738 ubox
29 51 0.553626402 ubox
29 53 0.692486969 ubox
29 56 0.013672770 ubox
29 57 0.005843917 ubox
29 75 0.004185601 ubox
30 37 0.025332143 ubox
30 45 0.011274920 ubox
30 50 0.715811236 ubox
30 52 0.692362345 ubox
31 40 0.006544309 ubox
31 47 0.056352650 ubox
31 49 0.716117433 ubox
31 51 0.641359188 ubox
31 54 0.016399636 ubox
31 74 0.004038437 ubox
32 39 0.006608126 ubox
32 46 0.060887327 ubox
32 48 0.715316449 ubox
32 51 0.081767057 ubox
32 53 0.016914202 ubox
32 73 0.004041110 ubox
33 45 0.060968007 ubox
33 50 0.042919575 ubox
33 52 0.016436793 ubox
34 50 0.657139947 ubox
35 47 0.062259152 ubox
35 49 0.662105054 ubox
36 42 0.072916263 ubox
36 43 0.157338837 ubox
36 44 0.561893109 ubox
36 46 0.057824608 ubox
36 47 0.453855698 ubox
36 48 0.658653422 ubox
36 69 0.003602535 ubox
37 41 0.072050118 ubox
37 42 0.158117035 ubox
37 43 0.558410695 ubox
37 46 0.799683726 ubox
37 47 0.085513235 ubox
37 68 0.004187534 ubox
38 45 0.802367672 ubox
38 67 0.004195388 ubox
39 66 0.004189171 ubox
43 62 0.004189292 ubox
44 50 0.003214943 ubox
44 52 0.004739751 ubox
44 61 0.004202540 ubox
45 51 0.006243690 ubox
45 53 0.010620815 ubox
45 60 0.004216982 ubox
46 50 0.006293822 ubox
46 52 0.010684578 ubox
46 59 0.004215445 ubox
61 81 0.005764784 ubox
62 80 0.005784363 ubox
63 79 0.005786035 ubox
65 77 0.006082108 ubox
66 73 0.018048449 ubox
66 76 0.009644544 ubox
66 81 0.005880914 ubox
67 72 0.017864085 ubox
67 75 0.009641795 ubox
67 78 0.008907022 ubox
67 80 0.006317895 ubox
67 95 0.009026044 ubox
68 77 0.008917415 ubox
68 79 0.006320253 ubox
68 94 0.009017754 ubox
76 91 0.151138779 ubox
76 94 0.179197587 ubox
76 96 0.074366169 ubox
77 90 0.156874666 ubox
77 92 0.981793637 ubox
77 93 0.038566208 ubox
77 95 0.073010338 ubox
78 89 0.156884651 ubox
78 91 0.983823198 ubox
78 94 0.071638378 ubox
78 96 0.006324641 ubox
79 88 0.155317756 ubox
79 90 0.984400189 ubox
79 92 0.060463005 ubox
79 93 0.019422069 ubox
79 95 0.007209811 ubox
80 89 0.984037856 ubox
80 91 0.061752282 ubox
80 94 0.007189227 ubox
88 96 0.013300717 ubox
89 95 0.015971930 ubox
90 94 0.015864442 ubox
1 74 0.9500000 lbox
2 73 0.9500000 lbox
5 70 0.9500000 lbox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
16 63 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
27 55 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
77 92 0.9500000 lbox
78 91 0.9500000 lbox
79 90 0.9500000 lbox
80 89 0.9500000 lbox
showpage
end
%%EOF
