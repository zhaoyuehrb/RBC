%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUCUCCCCACCUUCUCCCCACCCCAGGCUUCACCCAAACUCUGACCUCUUACUCUCUCUACUUAACUCUGGUCCCGGGCAGCCAAGACAAAGCGAAAGGCAAGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[92.53340912 342.66198730]
[77.33854675 346.35659790]
[63.34676743 339.37344360]
[57.16457367 325.00979614]
[61.71100235 310.04772949]
[74.83937073 301.55184937]
[76.51883698 286.64614868]
[77.98909760 271.71838379]
[79.24985504 256.77145386]
[67.87642670 247.19110107]
[64.28265381 232.57780457]
[70.05026245 218.48567200]
[83.16137695 210.39834595]
[84.42213440 195.45141602]
[85.68289185 180.50450134]
[86.94364929 165.55757141]
[72.68528748 161.00959778]
[59.79615784 153.40332031]
[48.92236710 143.12005615]
[40.60898972 130.67526245]
[35.27276611 116.69279480]
[33.18118668 101.87353516]
[34.43909454 86.96036530]
[38.98344040 72.70084381]
[46.58642197 59.80977631]
[56.86692047 48.93336105]
[69.30958557 40.61681366]
[83.29070282 35.27702332]
[98.10942841 33.18166351]
[99.37018585 18.23474312]
[100.63094330 3.28781986]
[101.89170074 -11.65910244]
[94.29209137 -19.69170380]
[92.48663330 -30.37672806]
[96.84366608 -40.05641937]
[105.66374969 -45.55508804]
[107.76060486 -60.40780640]
[109.85746002 -75.26052094]
[102.17127228 -80.51263428]
[96.70290375 -87.99210358]
[94.05494690 -96.82506561]
[94.50256348 -105.99151611]
[97.96520996 -114.44309235]
[104.01919556 -121.22301483]
[111.94932556 -125.57433319]
[120.83329010 -127.02440643]
[124.98582458 -141.43817139]
[129.13835144 -155.85192871]
[133.29089355 -170.26568604]
[120.28763580 -177.90547180]
[109.59342194 -188.53959656]
[101.88049316 -201.49958801]
[97.63368988 -215.97077942]
[97.11997223 -231.04350281]
[100.37163544 -245.77026367]
[107.18426514 -259.22534180]
[117.12962341 -270.56289673]
[129.58253479 -279.07031250]
[143.76020813 -284.21273804]
[158.77140808 -285.66696167]
[173.67251587 -283.34152222]
[187.52685547 -277.38265991]
[199.46351624 -268.16488647]
[208.73214722 -256.26770020]
[214.75012207 -242.43893433]
[217.13914490 -227.54788208]
[215.74903870 -212.53060913]
[210.66719055 -198.33111572]
[202.21304321 -185.84199524]
[190.91802979 -175.84831238]
[177.49217224 -168.97830200]
[162.77941895 -165.66378784]
[147.70465088 -166.11315918]
[143.55212402 -151.69940186]
[139.39958191 -137.28562927]
[135.24705505 -122.87187195]
[147.38951111 -105.58229828]
[143.11572266 -84.61190033]
[124.71017456 -73.16366577]
[122.61331940 -58.31095123]
[120.51646423 -43.45823288]
[129.14016724 -26.24686623]
[116.83862305 -10.39834499]
[115.57786560 4.54857779]
[114.31710815 19.49550056]
[113.05635071 34.44242096]
[127.31471252 38.99040222]
[140.20384216 46.59667206]
[151.07763672 56.87994003]
[159.39100647 69.32472992]
[164.72723389 83.30720520]
[166.81881714 98.12646484]
[165.56089783 113.03963470]
[161.01655579 127.29915619]
[153.41357422 140.19021606]
[143.13308716 151.06663513]
[130.69041443 159.38319397]
[116.70929718 164.72297668]
[101.89057159 166.81832886]
[100.62981415 181.76525879]
[99.36905670 196.71217346]
[98.10829926 211.65910339]
[109.67948914 221.82835388]
[113.00508881 236.68748474]
[107.01427460 250.49234009]
[94.19677734 258.03222656]
[92.93601990 272.97912598]
[95.35697937 281.93978882]
[91.42452240 288.32562256]
[89.74505615 303.23129272]
[100.65375519 314.43551636]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 110]
[7 109]
[8 107]
[9 106]
[13 102]
[14 101]
[15 100]
[16 99]
[29 86]
[30 85]
[31 84]
[32 83]
[36 81]
[37 80]
[38 79]
[46 76]
[47 75]
[48 74]
[49 73]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
