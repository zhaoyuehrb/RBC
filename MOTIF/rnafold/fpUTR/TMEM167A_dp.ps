%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM167A)
} def

/sequence { (\
GUCUUGGUAGGCGGUGCCGUGACAAGCCCAACCGGACGGCUGGAGAGGGCGAGAAGGGCAGACGGGACAUGCAGCCUCUUCCGCCUGAGCCCCGGAAGGGUGAUGUGGCUGCGGCAUCGCCGGCCUCGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 124 0.009935793 ubox
1 129 0.567568934 ubox
2 123 0.009852720 ubox
2 128 0.548348540 ubox
3 122 0.009848305 ubox
5 128 0.028682759 ubox
6 125 0.997446854 ubox
6 126 0.019467429 ubox
6 127 0.018655826 ubox
7 124 0.999018635 ubox
7 125 0.020246108 ubox
7 126 0.011785068 ubox
7 129 0.003370035 ubox
8 123 0.951246787 ubox
8 128 0.003199610 ubox
10 121 0.999561064 ubox
11 120 0.999991000 ubox
12 119 0.999979853 ubox
13 118 0.999868504 ubox
14 117 0.999335635 ubox
15 116 0.999738003 ubox
16 112 0.003389532 ubox
16 115 0.999984324 ubox
17 111 0.003665058 ubox
17 114 0.999987185 ubox
18 111 0.014780643 ubox
18 113 0.999658765 ubox
19 109 0.481031089 ubox
19 112 0.876143628 ubox
20 107 0.014962186 ubox
20 108 0.563878331 ubox
20 111 0.802913674 ubox
21 104 0.004517027 ubox
21 106 0.048686922 ubox
21 110 0.680656772 ubox
22 106 0.965359477 ubox
23 102 0.005355970 ubox
23 105 0.975903220 ubox
23 107 0.160095256 ubox
23 111 0.016306305 ubox
24 101 0.003163946 ubox
24 104 0.946484745 ubox
24 106 0.135794287 ubox
24 110 0.013493109 ubox
25 110 0.110336197 ubox
26 101 0.989267332 ubox
26 106 0.004521980 ubox
26 109 0.114384536 ubox
27 100 0.993381593 ubox
27 105 0.004127090 ubox
27 108 0.114306383 ubox
28 98 0.003244369 ubox
28 99 0.993398273 ubox
28 100 0.005617919 ubox
28 107 0.114177280 ubox
28 108 0.003595534 ubox
29 98 0.992652664 ubox
29 99 0.006030921 ubox
29 102 0.024514939 ubox
29 105 0.106881447 ubox
29 107 0.005065719 ubox
30 101 0.020407081 ubox
30 104 0.100967365 ubox
30 106 0.006112460 ubox
31 101 0.104887322 ubox
32 43 0.008951723 ubox
32 95 0.992712378 ubox
32 99 0.030986578 ubox
32 100 0.109230397 ubox
33 42 0.009007854 ubox
33 94 0.993444773 ubox
33 98 0.032239837 ubox
33 99 0.108845844 ubox
34 41 0.008985481 ubox
34 92 0.003270584 ubox
34 93 0.993420683 ubox
35 40 0.008963408 ubox
35 91 0.003344958 ubox
35 92 0.988306520 ubox
37 87 0.003355633 ubox
37 94 0.113211133 ubox
38 85 0.005469990 ubox
38 91 0.980224032 ubox
38 92 0.004409760 ubox
38 93 0.113376865 ubox
39 84 0.005502092 ubox
39 90 0.985377694 ubox
39 91 0.004732054 ubox
39 92 0.112783634 ubox
40 47 0.003914887 ubox
40 83 0.005504456 ubox
40 89 0.985100343 ubox
40 95 0.007347180 ubox
41 46 0.010203949 ubox
41 87 0.068774255 ubox
41 88 0.880957858 ubox
41 94 0.007337425 ubox
42 81 0.005891205 ubox
42 82 0.004836683 ubox
42 85 0.004692305 ubox
42 86 0.050288494 ubox
42 91 0.168908451 ubox
42 93 0.007247265 ubox
43 80 0.005912219 ubox
43 81 0.004831583 ubox
43 84 0.004150943 ubox
43 85 0.026529483 ubox
43 90 0.169316683 ubox
43 91 0.004009326 ubox
43 92 0.007198334 ubox
44 79 0.006523629 ubox
44 80 0.004011223 ubox
44 86 0.108455364 ubox
45 78 0.007049802 ubox
45 85 0.056158244 ubox
46 77 0.007008508 ubox
46 86 0.117487765 ubox
47 76 0.006805361 ubox
47 82 0.010839771 ubox
47 85 0.110285093 ubox
47 86 0.884759629 ubox
48 75 0.006589744 ubox
48 76 0.003570537 ubox
48 81 0.010828797 ubox
48 82 0.016012532 ubox
48 84 0.078350727 ubox
48 85 0.991537196 ubox
49 75 0.003946048 ubox
49 80 0.009788188 ubox
49 81 0.015982978 ubox
49 84 0.996693599 ubox
50 74 0.004275645 ubox
50 83 0.999721280 ubox
51 78 0.009876824 ubox
51 80 0.017305026 ubox
51 81 0.013716409 ubox
51 82 0.999095060 ubox
52 77 0.009857529 ubox
52 79 0.024725857 ubox
52 80 0.018007009 ubox
53 76 0.009773591 ubox
53 78 0.026156288 ubox
53 79 0.015460267 ubox
53 80 0.037888211 ubox
53 81 0.998327048 ubox
54 77 0.019037806 ubox
54 79 0.039508106 ubox
54 80 0.998086171 ubox
55 77 0.031606481 ubox
55 79 0.997074109 ubox
56 76 0.037736258 ubox
56 77 0.121829826 ubox
56 78 0.991327048 ubox
57 75 0.037886807 ubox
57 76 0.983601493 ubox
57 77 0.173213994 ubox
58 72 0.082152002 ubox
58 75 0.987067038 ubox
58 76 0.134539913 ubox
59 71 0.092417647 ubox
59 74 0.989314357 ubox
60 70 0.102084109 ubox
60 79 0.003720531 ubox
61 78 0.004152694 ubox
62 77 0.004262166 ubox
63 71 0.578703127 ubox
64 70 0.548905065 ubox
64 76 0.013641101 ubox
64 77 0.017570794 ubox
65 75 0.015389244 ubox
65 76 0.020808170 ubox
66 75 0.021678151 ubox
89 101 0.006755596 ubox
90 100 0.006983200 ubox
91 99 0.006917243 ubox
91 100 0.005807013 ubox
92 98 0.006839468 ubox
92 99 0.005993920 ubox
93 98 0.006085319 ubox
122 130 0.020466026 ubox
123 129 0.022719726 ubox
124 128 0.022564847 ubox
6 125 0.9500000 lbox
7 124 0.9500000 lbox
8 123 0.9500000 lbox
10 121 0.9500000 lbox
11 120 0.9500000 lbox
12 119 0.9500000 lbox
13 118 0.9500000 lbox
14 117 0.9500000 lbox
15 116 0.9500000 lbox
16 115 0.9500000 lbox
17 114 0.9500000 lbox
18 113 0.9500000 lbox
19 112 0.9500000 lbox
20 111 0.9500000 lbox
21 110 0.9500000 lbox
22 106 0.9500000 lbox
23 105 0.9500000 lbox
24 104 0.9500000 lbox
26 101 0.9500000 lbox
27 100 0.9500000 lbox
28 99 0.9500000 lbox
29 98 0.9500000 lbox
32 95 0.9500000 lbox
33 94 0.9500000 lbox
34 93 0.9500000 lbox
35 92 0.9500000 lbox
38 91 0.9500000 lbox
39 90 0.9500000 lbox
40 89 0.9500000 lbox
41 88 0.9500000 lbox
47 86 0.9500000 lbox
48 85 0.9500000 lbox
49 84 0.9500000 lbox
50 83 0.9500000 lbox
51 82 0.9500000 lbox
53 81 0.9500000 lbox
54 80 0.9500000 lbox
55 79 0.9500000 lbox
56 78 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
59 74 0.9500000 lbox
showpage
end
%%EOF
