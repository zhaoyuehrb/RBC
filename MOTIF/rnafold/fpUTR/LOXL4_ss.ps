%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGGGGGCCGCGGGCGGGAGGCGGAUAAAAAGGCCCCAGGGCGCCCGGGGAGGGAGCCCGUUAGCGCUGCUCCGCCGCGGCGCCCGCCCAGCCCCGGACUGUCCGCGCUCCAUCUGGUAUCUUGGCCUCAGCUGUCCUUGAAGUCACC\
) } def
/len { sequence length } bind def

/coor [
[189.67333984 383.38000488]
[185.09709167 369.09512329]
[180.52084351 354.81024170]
[175.94459534 340.52536011]
[171.36834717 326.24047852]
[167.55216980 323.27416992]
[165.59614563 317.85351562]
[166.91140747 311.26983643]
[162.92938232 296.80801392]
[158.94737244 282.34622192]
[154.96536255 267.88442993]
[150.98335266 253.42263794]
[146.25971985 239.18580627]
[140.80711365 225.21194458]
[128.97264099 216.16789246]
[131.16416931 200.49920654]
[125.71154785 186.52534485]
[112.01078796 180.79606628]
[106.28199005 166.70225525]
[112.38427734 152.37046814]
[106.93166351 138.39660645]
[101.47904205 124.42273712]
[96.02642059 110.44887543]
[90.42968750 96.53210449]
[84.68943787 82.67390442]
[78.94918060 68.81571198]
[73.20893097 54.95752335]
[67.46868134 41.09932709]
[61.72842789 27.24113655]
[55.98817825 13.38294315]
[38.56706238 11.52667618]
[24.53403282 1.18656611]
[17.67054939 -14.73998642]
[19.76993752 -31.86568069]
[30.16979599 -45.52180862]
[23.86175919 -59.13094711]
[17.55372238 -72.74008942]
[1.10012460 -74.03672791]
[-12.38782120 -83.38520050]
[-19.29780769 -98.16711426]
[-17.83711624 -114.32480621]
[-8.49666882 -127.47509003]
[-15.08461761 -140.95095825]
[-21.67256737 -154.42681885]
[-28.26051521 -167.90267944]
[-34.84846497 -181.37855530]
[-41.43641281 -194.85441589]
[-48.02436066 -208.33027649]
[-54.75122070 -221.73735046]
[-61.61626434 -235.07417297]
[-68.48130798 -248.41101074]
[-75.48381042 -261.67617798]
[-82.62302399 -274.86828613]
[-89.76223755 -288.06039429]
[-96.90144348 -301.25250244]
[-109.05390167 -305.69622803]
[-114.71605682 -316.88259888]
[-111.32505798 -328.53530884]
[-118.19010162 -341.87213135]
[-125.05515289 -355.20898438]
[-140.41102600 -357.43981934]
[-151.49940491 -368.29464722]
[-154.05657959 -383.59957886]
[-147.09925842 -397.46951294]
[-133.30268860 -404.57122803]
[-117.97191620 -402.17391968]
[-107.00193787 -391.19943237]
[-104.61094666 -375.86767578]
[-111.71831512 -362.07400513]
[-104.85327148 -348.73718262]
[-97.98822021 -335.40036011]
[-82.74942780 -326.75155640]
[-83.70934296 -308.39172363]
[-76.57012939 -295.19961548]
[-69.43091583 -282.00750732]
[-62.29170609 -268.81539917]
[-56.30434418 -264.40176392]
[-55.14447784 -255.27606201]
[-48.27943039 -241.93922424]
[-41.41438293 -228.60238647]
[-35.51951599 -224.06594849]
[-34.54849625 -214.91822815]
[-27.96054840 -201.44236755]
[-21.37260056 -187.96649170]
[-14.78465080 -174.49063110]
[-8.19670200 -161.01477051]
[-1.60875320 -147.53890991]
[4.97919559 -134.06303406]
[18.66990280 -134.01678467]
[31.05862427 -128.03541565]
[39.69223785 -117.23976898]
[42.83383560 -103.71006012]
[39.81190109 -90.08521271]
[31.16286087 -79.04812622]
[37.47089767 -65.43898773]
[43.77893448 -51.82984543]
[56.47966385 -52.05327606]
[68.35724640 -47.41921234]
[77.61875153 -38.58895874]
[82.85167694 -26.86005592]
[83.23930359 -13.97569752]
[78.68795776 -1.86566961]
[69.84636688 7.64269161]
[75.58662415 21.50088501]
[81.32687378 35.35907745]
[87.06712341 49.21726990]
[92.80737305 63.07546234]
[98.54763031 76.93365479]
[104.28787994 90.79184723]
[110.07228088 96.48426056]
[110.00028992 104.99625397]
[115.45290375 118.97012329]
[120.90552521 132.94398499]
[126.35814667 146.91784668]
[140.55439758 153.32911682]
[145.88505554 167.57827759]
[139.68540955 181.07272339]
[145.13803101 195.04658508]
[157.36250305 205.09013367]
[154.78097534 219.75932312]
[160.23359680 233.73318481]
[168.85794067 221.46043396]
[183.81602478 220.33976746]
[194.17279053 231.19044495]
[192.35697937 246.08013916]
[179.69602966 254.12377930]
[165.44514465 249.44062805]
[169.42715454 263.90240479]
[173.40916443 278.36422729]
[177.39118958 292.82601929]
[181.37319946 307.28781128]
[185.65324402 321.66421509]
[190.22949219 335.94909668]
[194.80572510 350.23400879]
[199.38197327 364.51889038]
[203.95822144 378.80377197]
[219.10597229 379.37060547]
[233.14517212 385.08694458]
[244.38052368 395.26254272]
[251.45527649 408.66864014]
[253.51515198 423.68640137]
[250.31138611 438.50231934]
[242.23086548 451.32733154]
[230.24934387 460.61276245]
[215.81364441 465.23730469]
[200.66696167 464.64257812]
[186.63832092 458.90036011]
[175.42175293 448.70407104]
[168.37170410 435.28494263]
[166.33950806 420.26342773]
[169.57057190 405.45343018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 136]
[2 135]
[3 134]
[4 133]
[5 132]
[8 131]
[9 130]
[10 129]
[11 128]
[12 127]
[13 121]
[14 120]
[16 118]
[17 117]
[20 114]
[21 113]
[22 112]
[23 111]
[24 109]
[25 108]
[26 107]
[27 106]
[28 105]
[29 104]
[30 103]
[35 96]
[36 95]
[37 94]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[49 80]
[50 79]
[51 78]
[52 76]
[53 75]
[54 74]
[55 73]
[58 71]
[59 70]
[60 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
