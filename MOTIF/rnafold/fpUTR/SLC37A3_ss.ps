%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGUCACGUGGGCGUCCGGAAACCCUGGUCGCACCGCCAGGGGUGAGCUGGCGGCGGGGGAGGCGGGCAGCGGAGCCAAGCUGACCCGGCGAGCGGAGCCGGGGCUGGAGAGCGGCGACCACUGCGGAUCUCGGAAGGAAGAAAUGAUGUAAAUCACUCAUCCAAACCUUAAGGUCAAAGGUGAGAAGGAAGGUCAGGAAGAAC\
) } def
/len { sequence length } bind def

/coor [
[233.32145691 221.72480774]
[234.61570740 199.06333923]
[221.26101685 192.23310852]
[207.90631104 185.40287781]
[194.55162048 178.57264709]
[181.19692993 171.74241638]
[173.80741882 171.49536133]
[167.69183350 164.70483398]
[154.44285583 157.67173767]
[141.19386292 150.63864136]
[127.94488525 143.60554504]
[114.69589996 136.57246399]
[99.96762085 139.41462708]
[90.28692627 150.87255859]
[80.60622406 162.33047485]
[77.61009216 177.86540222]
[63.48593903 182.59378052]
[53.80524063 194.05169678]
[44.12453842 205.50962830]
[34.44384003 216.96754456]
[34.34968567 233.01033020]
[21.65957069 242.82565308]
[6.10826015 238.88403320]
[-0.37460953 224.20915222]
[7.18406439 210.05833435]
[22.98591423 207.28684998]
[32.66661453 195.82891846]
[42.34731674 184.37100220]
[52.02801514 172.91307068]
[54.33171463 158.19770813]
[69.14830017 152.64978027]
[78.82899475 141.19184875]
[88.50969696 129.73393250]
[80.36220551 121.94337463]
[76.02933502 112.46543121]
[61.32316208 115.41982269]
[46.61698914 118.37422180]
[31.91081619 121.32861328]
[17.20464134 124.28301239]
[2.49846745 127.23740387]
[-12.20770645 130.19180298]
[-19.54376411 144.00180054]
[-34.05971909 149.81739807]
[-48.90157318 144.89263916]
[-57.06146622 131.55284119]
[-54.68653870 116.09664917]
[-42.89816284 105.82201385]
[-27.26244926 105.58029175]
[-15.16210079 115.48562622]
[-0.45592722 112.53122711]
[14.25024700 109.57683563]
[28.95642090 106.62244415]
[43.66259384 103.66804504]
[58.36876678 100.71365356]
[73.07494354 97.75925446]
[67.95372009 94.15966797]
[63.32868958 89.55393982]
[59.34567261 84.00936127]
[47.45698547 74.86282349]
[35.56830215 65.71628571]
[20.10125732 67.56244659]
[8.17473412 58.11719513]
[6.51002312 43.36035538]
[-5.37866259 34.21381760]
[-17.26734734 25.06727982]
[-35.57068253 23.06669235]
[-41.63145447 6.59929657]
[-53.65824127 -2.36487675]
[-65.68502808 -11.32905006]
[-81.28559113 -8.79961777]
[-94.05638885 -18.10994339]
[-96.42074585 -33.73637390]
[-86.97591400 -46.40803146]
[-71.32536316 -48.60703659]
[-58.75427246 -39.02876663]
[-56.72085190 -23.35583687]
[-44.69406509 -14.39166355]
[-32.66727829 -5.42748976]
[-20.65367317 -6.86264515]
[-10.55994511 0.51052368]
[-8.12081051 13.17859459]
[3.76787543 22.32513237]
[15.65656090 31.47167015]
[30.34700584 29.29763985]
[42.53411865 38.40417099]
[44.71483994 53.82760239]
[56.60352325 62.97414017]
[68.49221039 72.12067413]
[81.04312134 63.90637970]
[77.41921997 49.35071182]
[73.79532623 34.79504776]
[59.66425323 28.09827232]
[53.19085312 13.86348820]
[57.43166351 -1.18807459]
[70.38430786 -9.94952774]
[85.93293762 -8.28398228]
[96.73596954 3.02214384]
[97.69254303 18.63044167]
[88.35099030 31.17115211]
[91.97488403 45.72681808]
[95.59878540 60.28248215]
[110.59834290 60.39685822]
[114.44379425 45.89815140]
[109.22035980 28.24226952]
[122.06942749 16.29197311]
[125.69332123 1.73630810]
[129.31721497 -12.81935692]
[132.94111633 -27.37502098]
[125.93918610 -41.80944443]
[132.98855591 -56.22075653]
[148.68156433 -59.55382919]
[160.97985840 -49.25181961]
[160.44924927 -33.21754074]
[147.49678040 -23.75112534]
[143.87287903 -9.19546127]
[140.24897766 5.36020374]
[136.62509155 19.91586876]
[142.58859253 30.44312477]
[139.68569946 42.60125732]
[128.94250488 49.74359894]
[125.09705353 64.24230194]
[137.69151306 97.39429474]
[121.72899628 123.32347107]
[134.97798157 130.35656738]
[148.22695923 137.38966370]
[161.47595215 144.42276001]
[174.72492981 151.45585632]
[188.02716064 158.38771057]
[201.38185120 165.21795654]
[214.73655701 172.04818726]
[228.09124756 178.87841797]
[241.44593811 185.70864868]
[246.35585022 180.12861633]
[252.08998108 175.41061401]
[258.49914551 171.67451477]
[265.41702271 169.01467896]
[272.66452026 167.49754333]
[280.05438232 167.16001892]
[287.39608765 168.00857544]
[294.50064087 170.01910400]
[301.18560791 173.13761902]
[307.27957153 177.28175354]
[312.62677002 182.34280396]
[317.09097290 188.18873596]
[320.55883789 194.66751099]
[322.94302368 201.61109924]
[337.88027954 200.24047852]
[352.81753540 198.86985779]
[367.75479126 197.49922180]
[380.82870483 187.59948730]
[395.83187866 194.22039795]
[397.33035278 210.55093384]
[383.78262329 219.79164124]
[369.12539673 212.43647766]
[354.18817139 213.80709839]
[339.25091553 215.17773438]
[324.31365967 216.54835510]
[321.53228760 229.23310852]
[315.29595947 240.62379456]
[325.65716553 251.47023010]
[340.78442383 256.10455322]
[343.98092651 270.65209961]
[354.34216309 281.49856567]
[364.70336914 292.34500122]
[380.27136230 292.86993408]
[390.62457275 304.01736450]
[390.02819824 318.85580444]
[400.38940430 329.70223999]
[410.75064087 340.54867554]
[421.11184692 351.39514160]
[431.47305298 362.24157715]
[447.49478149 358.16302490]
[463.29690552 362.69372559]
[474.59368896 374.50640869]
[478.37103271 390.31234741]
[473.69030762 405.77667236]
[484.21572876 416.46383667]
[494.74114990 427.15100098]
[510.68408203 430.99212646]
[515.06890869 446.79418945]
[503.38488770 458.30139160]
[487.65151978 453.67608643]
[484.05395508 437.67642212]
[473.52856445 426.98925781]
[463.00314331 416.30206299]
[450.03778076 420.60028076]
[436.42013550 418.88385010]
[424.81552124 411.43127441]
[417.52008057 399.64935303]
[416.00640869 385.80795288]
[420.62661743 372.60278320]
[410.26541138 361.75634766]
[399.90420532 350.90991211]
[389.54296875 340.06347656]
[379.18176270 329.21704102]
[364.33154297 329.13415527]
[353.66931152 318.28192139]
[353.85693359 302.70620728]
[343.49569702 291.85977173]
[333.13449097 281.01333618]
[318.74835205 277.15481567]
[314.81072998 261.83145142]
[304.44952393 250.98500061]
[283.39227295 258.79370117]
[261.09613037 255.63742065]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 132]
[3 131]
[4 130]
[5 129]
[6 128]
[8 127]
[9 126]
[10 125]
[11 124]
[12 123]
[13 33]
[14 32]
[15 31]
[17 29]
[18 28]
[19 27]
[20 26]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[58 88]
[59 87]
[60 86]
[63 83]
[64 82]
[65 81]
[67 78]
[68 77]
[69 76]
[89 101]
[90 100]
[91 99]
[102 121]
[103 120]
[105 117]
[106 116]
[107 115]
[108 114]
[146 157]
[147 156]
[148 155]
[149 154]
[159 203]
[160 202]
[162 200]
[163 199]
[164 198]
[167 195]
[168 194]
[169 193]
[170 192]
[171 191]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
