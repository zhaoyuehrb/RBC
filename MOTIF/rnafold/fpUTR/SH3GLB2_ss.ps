%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGGCCUCCGCGCCCCGCCCUGCGCGCUCGGGCUGGCUCGGCGGCUGCGGCGGGCGGGCAGGCGGGCAGGCCGGCAGGCGGGUGCGCGGAGGGCUGGUGCCCCGCAGCAGGUGGGCGGGGUGCGGUUGGCGGCGGCGGCUGGGCCGGGGGCUGCCGGCUGCGCUCGGGCCGUGCGCGGCGGCCGUGCGGGCACGCC\
) } def
/len { sequence length } bind def

/coor [
[341.06085205 295.01132202]
[343.67227173 289.23577881]
[347.49197388 285.04437256]
[335.35671997 276.22760010]
[323.22146606 267.41082764]
[308.37701416 266.18951416]
[301.76031494 251.81837463]
[289.62506104 243.00160217]
[277.48980713 234.18481445]
[259.96704102 233.29797363]
[252.60888672 216.42234802]
[240.33663940 207.79727173]
[228.06439209 199.17219543]
[215.79214478 190.54711914]
[203.51989746 181.92202759]
[191.24765015 173.29695129]
[178.97541809 164.67187500]
[166.70317078 156.04679871]
[154.43092346 147.42172241]
[142.15867615 138.79664612]
[129.88642883 130.17155457]
[117.61418152 121.54647827]
[105.34193420 112.92140198]
[90.87357330 108.96331024]
[75.91981506 110.14019012]
[60.96605682 111.31707764]
[47.81548691 120.11328125]
[34.52038574 113.39839935]
[19.56662750 114.57528687]
[4.61286688 115.75217438]
[-10.34089375 116.92906189]
[-16.92263031 125.60285187]
[-26.98607445 129.14477539]
[-37.12323761 126.61161804]
[-44.04027939 119.07564545]
[-59.02362823 119.78224182]
[-74.00697327 120.48883820]
[-87.42735291 128.86763000]
[-100.50496674 121.73844910]
[-115.48831940 122.44504547]
[-130.47166443 123.15164185]
[-145.45501709 123.85823822]
[-160.43836975 124.56483459]
[-173.85873413 132.94361877]
[-186.93635559 125.81445312]
[-201.91970825 126.52104950]
[-215.41993713 135.83103943]
[-230.11462402 128.55104065]
[-230.88713074 112.17009735]
[-216.94276428 103.53951263]
[-202.62629700 111.53769684]
[-187.64295959 110.83110046]
[-175.29428101 102.50285339]
[-161.14495850 109.58148956]
[-146.16160583 108.87489319]
[-131.17826843 108.16829681]
[-116.19491577 107.46170044]
[-101.21157074 106.75510406]
[-88.86289978 98.42685699]
[-74.71356964 105.50548553]
[-59.73022461 104.79888916]
[-44.74687576 104.09229279]
[-29.29286766 92.47933197]
[-11.51777935 101.97529602]
[3.43598032 100.79840851]
[18.38973999 99.62152863]
[33.34350204 98.44464111]
[45.42447662 89.73262024]
[59.78916931 96.36331940]
[74.74292755 95.18643188]
[89.69668579 94.00954437]
[90.27146149 92.40899658]
[91.09608459 90.85847473]
[88.28536224 76.12416077]
[85.47464752 61.38985443]
[75.28849792 49.28394699]
[80.50389862 35.33228683]
[77.69317627 20.59797668]
[67.47966766 12.71140671]
[65.44583893 0.37485451]
[72.14434052 -9.70444965]
[69.56539917 -24.48108864]
[66.98646545 -39.25772858]
[64.40753174 -54.03437042]
[61.82859421 -68.81101227]
[57.26659393 -76.73523712]
[59.32710266 -83.83986664]
[56.98058701 -98.65518951]
[54.63407135 -113.47052002]
[52.28755188 -128.28584290]
[38.12318420 -134.39929199]
[29.53150558 -147.21281433]
[29.25409126 -162.63769531]
[37.37946320 -175.75187683]
[51.31484222 -182.37068176]
[66.61350250 -180.38209534]
[78.39369965 -170.42063904]
[82.89640808 -155.66499329]
[78.68483734 -140.82362366]
[67.10288239 -130.63235474]
[69.44939423 -115.81703186]
[71.79591370 -101.00170898]
[74.14243317 -86.18638611]
[76.60523224 -71.38994598]
[79.18416595 -56.61330414]
[81.76310730 -41.83666611]
[84.34204102 -27.06002617]
[86.92097473 -12.28338623]
[98.88736725 0.54778641]
[92.42748260 17.78725624]
[95.23820496 32.52156448]
[105.22331238 43.57357788]
[100.20895386 58.57913589]
[103.01967621 73.31344604]
[105.83039093 88.04775238]
[113.96701813 100.64915466]
[126.23925781 109.27423859]
[138.51150513 117.89931488]
[150.78375244 126.52439117]
[163.05599976 135.14947510]
[175.32824707 143.77455139]
[187.60049438 152.39962769]
[199.87274170 161.02470398]
[212.14498901 169.64978027]
[224.41722107 178.27487183]
[236.68946838 186.89994812]
[248.96171570 195.52502441]
[261.23397827 204.15010071]
[274.05691528 202.70594788]
[284.10263062 210.14978027]
[286.30657959 222.04956055]
[298.44183350 230.86634827]
[310.57708740 239.68312073]
[326.28952026 241.53504944]
[332.03823853 255.27555847]
[344.17349243 264.09234619]
[356.30874634 272.90911865]
[369.83056641 279.40222168]
[384.29895020 283.36029053]
[398.76730347 287.31838989]
[412.38061523 279.74771118]
[426.99722290 283.96789551]
[434.13079834 296.99276733]
[448.59918213 300.95086670]
[463.06753540 304.90896606]
[478.42025757 301.08737183]
[488.65478516 311.90884399]
[503.12313843 315.86691284]
[517.59149170 319.82501221]
[532.05987549 323.78311157]
[546.52819824 327.74121094]
[561.88092041 323.91964722]
[572.11547852 334.74108887]
[586.58380127 338.69918823]
[598.60919189 328.89251709]
[614.10394287 328.06069946]
[627.11004639 336.52355957]
[632.62646484 351.02697754]
[628.53192139 365.99407959]
[616.40087891 375.66973877]
[600.89801025 376.33343506]
[587.98443604 367.72994995]
[582.62573242 353.16754150]
[568.15734863 349.20944214]
[553.83953857 353.31414795]
[542.57012939 342.20956421]
[528.10174561 338.25146484]
[513.63342285 334.29339600]
[499.16503906 330.33529663]
[484.69668579 326.37719727]
[470.37884521 330.48187256]
[459.10943604 319.37731934]
[444.64108276 315.41921997]
[430.17272949 311.46112061]
[417.40231323 319.04089355]
[402.67297363 315.23291016]
[394.80920410 301.78677368]
[380.34085083 297.82867432]
[365.87246704 293.87057495]
[355.60427856 304.80508423]
[360.46304321 318.99636841]
[365.32180786 333.18765259]
[370.18057251 347.37893677]
[375.15063477 361.53161621]
[380.23168945 375.64483643]
[385.31277466 389.75805664]
[399.15832520 397.86236572]
[401.31195068 413.76022339]
[390.12161255 425.25610352]
[374.17153931 423.53137207]
[365.69726562 409.90908813]
[371.19955444 394.83911133]
[366.11849976 380.72589111]
[361.03741455 366.61270142]
[355.80908203 361.37951660]
[355.98928833 352.23770142]
[351.13052368 338.04641724]
[346.27175903 323.85513306]
[341.41299438 309.66384888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 137]
[4 136]
[5 135]
[7 133]
[8 132]
[9 131]
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[16 123]
[17 122]
[18 121]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 71]
[25 70]
[26 69]
[28 67]
[29 66]
[30 65]
[31 64]
[35 62]
[36 61]
[37 60]
[39 58]
[40 57]
[41 56]
[42 55]
[43 54]
[45 52]
[46 51]
[73 115]
[74 114]
[75 113]
[77 111]
[78 110]
[81 108]
[82 107]
[83 106]
[84 105]
[85 104]
[87 103]
[88 102]
[89 101]
[90 100]
[138 179]
[139 178]
[140 177]
[143 174]
[144 173]
[145 172]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[153 164]
[154 163]
[180 199]
[181 198]
[182 197]
[183 196]
[184 194]
[185 193]
[186 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
