%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RBFOX2)
} def

/sequence { (\
GGGGGCGGGGGCAGGCGCGCGCCCGCCUGUCGCGACAGUCGGGGCCGAGGCCCAGGGGGAGGUGGCCUGUCGCGGGUCGCCCGGCUCCCGGAGGCGAGGGGGGCGCGGGCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.003240177 ubox
1 27 0.006105809 ubox
1 28 0.014209424 ubox
1 31 0.088581044 ubox
1 78 0.011398091 ubox
2 23 0.003242614 ubox
2 26 0.005828898 ubox
2 27 0.009214233 ubox
2 28 0.075012300 ubox
2 30 0.081306145 ubox
2 31 0.020322206 ubox
2 77 0.010537622 ubox
2 78 0.006952537 ubox
3 22 0.003242091 ubox
3 24 0.005771141 ubox
3 26 0.006168299 ubox
3 27 0.064418267 ubox
3 28 0.948103733 ubox
3 30 0.012158197 ubox
3 31 0.003266327 ubox
4 23 0.005778723 ubox
4 26 0.045674766 ubox
4 27 0.997302380 ubox
4 28 0.009126349 ubox
5 12 0.022202924 ubox
5 20 0.003254206 ubox
5 22 0.005781447 ubox
5 26 0.998617826 ubox
5 27 0.006535054 ubox
6 11 0.022222893 ubox
6 19 0.003254146 ubox
6 21 0.005783901 ubox
6 25 0.999683718 ubox
7 18 0.003212576 ubox
7 20 0.005711680 ubox
7 24 0.999672061 ubox
8 23 0.999674357 ubox
8 24 0.005220741 ubox
9 22 0.999514283 ubox
9 23 0.007351163 ubox
10 22 0.008970441 ubox
11 18 0.022839034 ubox
11 20 0.999328865 ubox
12 17 0.023524719 ubox
12 19 0.998530530 ubox
15 110 0.023008649 ubox
16 109 0.023026812 ubox
18 107 0.023026717 ubox
19 106 0.023035862 ubox
20 105 0.023035893 ubox
21 104 0.023035889 ubox
22 103 0.023022540 ubox
23 102 0.023007515 ubox
24 101 0.022871528 ubox
26 99 0.019607952 ubox
26 100 0.011523054 ubox
27 75 0.003316718 ubox
27 76 0.004078986 ubox
27 98 0.019567800 ubox
27 99 0.011508916 ubox
27 100 0.003629918 ubox
28 75 0.006674502 ubox
28 97 0.012277467 ubox
28 98 0.010360393 ubox
28 99 0.003704864 ubox
29 77 0.018527067 ubox
29 78 0.019779392 ubox
29 95 0.004442017 ubox
30 75 0.778625046 ubox
30 76 0.044699744 ubox
30 94 0.004442846 ubox
30 97 0.018368708 ubox
31 74 0.990752827 ubox
31 75 0.042393049 ubox
31 93 0.004400316 ubox
31 96 0.022366265 ubox
32 73 0.999690157 ubox
32 95 0.022465817 ubox
33 41 0.004117097 ubox
33 72 0.999712575 ubox
33 94 0.022458155 ubox
34 40 0.004367167 ubox
34 71 0.999700203 ubox
35 39 0.003802676 ubox
35 70 0.999540074 ubox
36 69 0.998486476 ubox
37 68 0.760950493 ubox
38 66 0.118724915 ubox
38 67 0.392585261 ubox
38 70 0.003315809 ubox
39 48 0.005683405 ubox
39 56 0.070286806 ubox
39 57 0.043585114 ubox
39 58 0.017886856 ubox
39 59 0.006172109 ubox
39 60 0.008698504 ubox
39 62 0.004374434 ubox
39 65 0.167249637 ubox
39 69 0.006691834 ubox
39 91 0.021735089 ubox
40 47 0.006650819 ubox
40 55 0.077187034 ubox
40 56 0.046802994 ubox
40 57 0.018417358 ubox
40 58 0.005958434 ubox
40 59 0.008590598 ubox
40 61 0.004193809 ubox
40 64 0.167126813 ubox
40 69 0.042821949 ubox
40 90 0.022259281 ubox
41 46 0.006585936 ubox
41 53 0.009368356 ubox
41 63 0.160400234 ubox
41 67 0.014522847 ubox
41 68 0.079186853 ubox
41 89 0.022172995 ubox
42 52 0.008225011 ubox
42 53 0.197949565 ubox
42 66 0.012883985 ubox
42 67 0.086712778 ubox
42 68 0.637750550 ubox
42 87 0.003235327 ubox
42 88 0.022083583 ubox
43 51 0.006807736 ubox
43 52 0.198249563 ubox
43 66 0.065583600 ubox
43 67 0.905337170 ubox
43 86 0.003759716 ubox
43 87 0.021997470 ubox
44 51 0.198318016 ubox
44 63 0.031448013 ubox
44 66 0.976770455 ubox
44 85 0.022182665 ubox
45 50 0.198265582 ubox
45 56 0.006492246 ubox
45 57 0.005886113 ubox
45 58 0.010293057 ubox
45 59 0.014862171 ubox
45 62 0.032942823 ubox
45 65 0.979052337 ubox
45 84 0.022319325 ubox
46 55 0.006518342 ubox
46 56 0.005887998 ubox
46 57 0.010303724 ubox
46 58 0.014840542 ubox
46 61 0.032858905 ubox
46 64 0.978941621 ubox
46 83 0.022318502 ubox
47 63 0.952775797 ubox
47 82 0.022098231 ubox
49 67 0.005804022 ubox
49 78 0.003558667 ubox
49 81 0.004391537 ubox
50 63 0.040658519 ubox
50 66 0.006354858 ubox
50 77 0.003643545 ubox
50 80 0.004275076 ubox
51 57 0.028830025 ubox
51 58 0.087487145 ubox
51 59 0.972632136 ubox
51 62 0.044113811 ubox
51 65 0.005677686 ubox
51 76 0.003705273 ubox
51 79 0.004114133 ubox
52 56 0.028710087 ubox
52 57 0.087373614 ubox
52 58 0.972952036 ubox
52 59 0.052736896 ubox
52 61 0.043652269 ubox
52 62 0.012409465 ubox
52 64 0.004750908 ubox
52 65 0.003315351 ubox
52 75 0.003765298 ubox
53 57 0.965879741 ubox
53 58 0.053662807 ubox
53 61 0.012680718 ubox
53 64 0.004849099 ubox
53 74 0.003754689 ubox
54 63 0.009203538 ubox
54 68 0.012691283 ubox
55 67 0.016541897 ubox
55 68 0.020460509 ubox
55 89 0.005236200 ubox
56 66 0.017857650 ubox
56 67 0.034061456 ubox
56 68 0.021471973 ubox
56 88 0.005256057 ubox
57 66 0.038915744 ubox
57 67 0.031985428 ubox
57 68 0.022040424 ubox
57 71 0.004454603 ubox
57 87 0.005256063 ubox
58 66 0.034642679 ubox
58 67 0.029664626 ubox
58 70 0.004484901 ubox
58 86 0.005244548 ubox
59 66 0.031429161 ubox
59 85 0.005247105 ubox
60 68 0.012465748 ubox
61 67 0.014340544 ubox
61 81 0.022205854 ubox
62 66 0.014582766 ubox
62 80 0.022293847 ubox
63 79 0.022305856 ubox
64 78 0.022470146 ubox
65 77 0.022484209 ubox
66 76 0.022495705 ubox
67 75 0.022498293 ubox
68 74 0.022416850 ubox
69 73 0.021359334 ubox
77 112 0.612700801 ubox
78 111 0.993139996 ubox
79 110 0.999701932 ubox
80 109 0.999726407 ubox
81 107 0.003601160 ubox
81 108 0.999722323 ubox
82 105 0.008878056 ubox
82 107 0.999666486 ubox
83 104 0.019121195 ubox
83 106 0.995711788 ubox
84 104 0.998352452 ubox
84 106 0.004584915 ubox
85 101 0.004109058 ubox
85 102 0.091908397 ubox
85 103 0.995407526 ubox
85 105 0.006376764 ubox
86 100 0.007698308 ubox
86 101 0.125543100 ubox
86 102 0.990421405 ubox
86 103 0.009784216 ubox
87 99 0.013706532 ubox
87 100 0.152727463 ubox
87 101 0.987269702 ubox
87 102 0.033927122 ubox
87 103 0.004447015 ubox
88 98 0.014332597 ubox
88 99 0.175084301 ubox
88 100 0.983567012 ubox
88 101 0.034004272 ubox
88 102 0.004454761 ubox
89 96 0.059325479 ubox
89 98 0.194685645 ubox
89 99 0.978009426 ubox
89 100 0.034036083 ubox
89 101 0.004447081 ubox
90 95 0.133005276 ubox
3 28 0.9500000 lbox
4 27 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
30 75 0.9500000 lbox
31 74 0.9500000 lbox
32 73 0.9500000 lbox
33 72 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
43 67 0.9500000 lbox
44 66 0.9500000 lbox
45 65 0.9500000 lbox
46 64 0.9500000 lbox
47 63 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
53 57 0.9500000 lbox
78 111 0.9500000 lbox
79 110 0.9500000 lbox
80 109 0.9500000 lbox
81 108 0.9500000 lbox
82 107 0.9500000 lbox
83 106 0.9500000 lbox
84 104 0.9500000 lbox
85 103 0.9500000 lbox
86 102 0.9500000 lbox
87 101 0.9500000 lbox
88 100 0.9500000 lbox
89 99 0.9500000 lbox
showpage
end
%%EOF
