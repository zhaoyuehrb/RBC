%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUUCUUUCCGGAAAUUAUGACUGCAGCUGUUUUCACUCCGCUGUGACUCAGAGCGCUCCGGGCUGCAGGAGAGGAAGCCCAGCCUGUUCUACCAGAGAACUUGCCCAGGUCAGAGGUCUGCGUAGAAGCCCUUUUCUGAGCAUCCUCUCCUCUCCUCACACCUGCCACUGUCCUCUGCGUUGCUGUCGAAUUAAAUCUUGCAUCACC\
) } def
/len { sequence length } bind def

/coor [
[-115.65924835 887.04071045]
[-118.55808258 901.75793457]
[-121.45692444 916.47515869]
[-112.44494629 929.45825195]
[-115.33510590 944.99603271]
[-128.41271973 953.87023926]
[-143.91906738 950.81597900]
[-152.65452576 937.64526367]
[-149.43647766 922.17205811]
[-136.17414856 913.57635498]
[-133.27531433 898.85913086]
[-130.37646484 884.14190674]
[-138.90759277 878.29296875]
[-145.02906799 869.90783691]
[-148.02278137 859.92712402]
[-147.52325439 849.48077393]
[-143.56198120 839.76043701]
[-136.56680298 831.88336182]
[-127.31583405 826.76403809]
[-116.85092926 825.00817871]
[-113.07712555 810.49066162]
[-109.30332947 795.97314453]
[-110.66302490 788.70800781]
[-105.36296082 781.26745605]
[-101.37240601 766.80804443]
[-97.38185883 752.34857178]
[-93.39130402 737.88916016]
[-89.40074921 723.42968750]
[-95.09588623 712.75714111]
[-91.88905334 700.67773438]
[-80.97232056 693.80743408]
[-76.76590729 679.40930176]
[-72.55949402 665.01116943]
[-68.35308838 650.61303711]
[-77.46504211 640.85467529]
[-80.59017181 627.76312256]
[-76.80809784 614.73321533]
[-67.00405121 605.19848633]
[-53.66441727 601.72619629]
[-49.24308777 587.39257812]
[-52.88521194 572.95013428]
[-41.42398453 562.04370117]
[-37.00265884 547.71008301]
[-40.64478302 533.26763916]
[-29.18355751 522.36120605]
[-24.76222992 508.02758789]
[-20.34090233 493.69400024]
[-15.91957474 479.36041260]
[-11.49824715 465.02682495]
[-15.14037132 450.58438110]
[-3.67914534 439.67791748]
[0.74218225 425.34432983]
[5.16350985 411.01074219]
[9.58483791 396.67715454]
[14.00616550 382.34353638]
[10.36404037 367.90109253]
[21.82526588 356.99465942]
[26.24659348 342.66104126]
[17.28163528 332.76745605]
[14.35270119 319.63061523]
[18.32926941 306.65878296]
[28.27485275 297.27178955]
[41.66493988 293.99938965]
[46.30019379 279.73355103]
[50.93545151 265.46771240]
[55.03404617 251.03851318]
[58.59025192 236.46617126]
[57.12202454 229.22222900]
[62.31018829 221.70323181]
[66.08399200 207.18571472]
[69.85778809 192.66818237]
[73.63159180 178.15066528]
[77.40539551 163.63314819]
[81.17919159 149.11563110]
[84.95299530 134.59809875]
[88.72679901 120.08058167]
[92.50060272 105.56305695]
[73.93793488 102.70866394]
[60.87323380 82.00286102]
[56.66682434 67.60472870]
[52.46041107 53.20660400]
[36.96712875 45.08474731]
[32.23420334 28.59529877]
[40.72081375 14.07619095]
[36.29948807 -0.25740153]
[22.60740280 -7.68468714]
[18.32773399 -22.28397179]
[25.49289513 -35.29150772]
[21.07156754 -49.62510300]
[16.65023994 -63.95869446]
[12.22891331 -78.29228210]
[7.80758572 -92.62587738]
[-5.64736986 -101.36336517]
[-7.06168318 -117.34395599]
[4.64958572 -128.30870056]
[20.50255394 -125.84639740]
[28.33617973 -111.84590149]
[22.14117813 -97.04720306]
[26.56250572 -82.71361542]
[30.98383331 -68.38002014]
[35.40515900 -54.04642868]
[39.82648849 -39.71283722]
[53.07402802 -33.00178528]
[57.76207352 -18.52846718]
[50.63307953 -4.67872906]
[55.05440521 9.65486336]
[67.17717743 14.02286911]
[74.68250275 24.73567200]
[74.64660645 38.01050949]
[66.85854340 49.00019073]
[71.06494904 63.39831924]
[75.27136230 77.79644775]
[82.51580811 79.73759460]
[97.00469208 83.61988068]
[104.24913788 85.56101990]
[115.09106445 75.19508362]
[125.93298340 64.82913971]
[136.77490234 54.46319962]
[137.84416199 41.60892105]
[147.08848572 33.19828796]
[159.18472290 33.33696365]
[170.18051147 23.13437271]
[181.17628479 12.93178272]
[186.02983093 -2.12656093]
[200.62228394 -5.11146164]
[211.61805725 -15.31405258]
[222.61383057 -25.51664352]
[233.60961914 -35.71923447]
[244.60539246 -45.92182541]
[255.60116577 -56.12441635]
[259.91522217 -71.94595337]
[275.84082031 -75.85840607]
[286.99508667 -63.83697891]
[281.90344238 -48.24828720]
[265.80377197 -45.12863922]
[254.80798340 -34.92604828]
[243.81221008 -24.72345734]
[232.81642151 -14.52086544]
[221.82064819 -4.31827497]
[210.82487488 5.88431644]
[206.75781250 20.21290207]
[191.37887573 23.92756081]
[180.38310242 34.13014984]
[169.38731384 44.33274460]
[165.12623596 61.35621643]
[147.14085388 65.30512238]
[136.29891968 75.67106628]
[125.45700073 86.03700256]
[114.61507416 96.40294647]
[107.01811981 109.33686066]
[103.24431610 123.85438538]
[99.47052002 138.37190247]
[95.69671631 152.88941956]
[91.92291260 167.40695190]
[88.14911652 181.92446899]
[84.37531281 196.44198608]
[80.60150909 210.95950317]
[76.82770538 225.47703552]
[73.16260529 240.02236938]
[69.60639954 254.59472656]
[83.58686066 249.15904236]
[96.62983704 256.56719971]
[99.12158966 271.35879517]
[89.22550201 282.63122559]
[74.23579407 282.07577515]
[65.20130157 270.10296631]
[60.56604385 284.36880493]
[55.93078995 298.63464355]
[66.05796051 312.18176270]
[66.11463928 328.92947388]
[56.27656174 342.27722168]
[40.58018494 347.08239746]
[36.15885925 361.41598511]
[39.48474121 376.88366699]
[28.33975792 386.76489258]
[23.91843033 401.09848022]
[19.49710274 415.43206787]
[15.07577419 429.76565552]
[10.65444660 444.09924316]
[13.98032856 459.56692505]
[2.83534527 469.44815063]
[-1.58598232 483.78173828]
[-6.00730991 498.11532593]
[-10.42863750 512.44891357]
[-14.84996510 526.78253174]
[-11.52408409 542.25018311]
[-22.66906738 552.13140869]
[-27.09039497 566.46502686]
[-23.76451302 581.93267822]
[-34.90949631 591.81390381]
[-39.33082199 606.14752197]
[-29.00212669 619.54162598]
[-28.69491959 636.28662109]
[-38.33222198 649.78002930]
[-53.95495987 654.81945801]
[-58.16136932 669.21759033]
[-62.36777878 683.61572266]
[-66.57418823 698.01385498]
[-61.79434967 715.79644775]
[-74.94130707 727.42028809]
[-78.93186188 741.87969971]
[-82.92241669 756.33917236]
[-86.91296387 770.79858398]
[-90.90351868 785.25805664]
[-94.78580475 799.74694824]
[-98.55960846 814.26446533]
[-102.33340454 828.78198242]
[-88.83670807 843.53131104]
[-87.00114441 863.29455566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[20 207]
[21 206]
[22 205]
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[31 198]
[32 197]
[33 196]
[34 195]
[39 191]
[40 190]
[42 188]
[43 187]
[45 185]
[46 184]
[47 183]
[48 182]
[49 181]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[57 173]
[58 172]
[63 168]
[64 167]
[65 166]
[66 160]
[67 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[79 112]
[80 111]
[81 110]
[84 106]
[85 105]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[115 149]
[116 148]
[117 147]
[118 146]
[121 144]
[122 143]
[123 142]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
