%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NIFK)
} def

/sequence { (\
CUCUACUUCCGCCUCGGGGGAGCUGGGAGCCCGACGUUUCCGGGAGCGCCGCGUGGUUAGCGUCGGCGGCUUUUGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.004280966 ubox
1 19 0.009818460 ubox
1 20 0.017401613 ubox
1 22 0.107353752 ubox
1 26 0.017628515 ubox
1 27 0.166989544 ubox
1 29 0.142444045 ubox
1 44 0.005452744 ubox
1 46 0.031995678 ubox
1 69 0.003520371 ubox
1 76 0.032251276 ubox
2 17 0.004249320 ubox
2 18 0.009750304 ubox
2 19 0.017035266 ubox
2 20 0.008793231 ubox
2 21 0.121664686 ubox
2 25 0.014115221 ubox
2 26 0.166326574 ubox
2 27 0.090414401 ubox
2 28 0.143940705 ubox
2 34 0.261417187 ubox
2 43 0.004602973 ubox
2 45 0.032735862 ubox
2 75 0.029320757 ubox
2 76 0.035922464 ubox
3 16 0.004248497 ubox
3 17 0.009557787 ubox
3 18 0.016066803 ubox
3 19 0.010896624 ubox
3 20 0.119000552 ubox
3 22 0.192391778 ubox
3 25 0.167887402 ubox
3 26 0.130387616 ubox
3 27 0.138483659 ubox
3 29 0.006833824 ubox
3 33 0.281730268 ubox
3 42 0.004728024 ubox
3 44 0.032457675 ubox
3 46 0.008467279 ubox
3 69 0.003764829 ubox
3 75 0.047347762 ubox
3 76 0.081372995 ubox
4 16 0.009193930 ubox
4 17 0.009775601 ubox
4 18 0.009276951 ubox
4 19 0.106061677 ubox
4 21 0.213477088 ubox
4 25 0.136631543 ubox
4 26 0.130334213 ubox
4 28 0.005635369 ubox
4 43 0.012921406 ubox
4 45 0.008384783 ubox
4 75 0.081859064 ubox
5 24 0.142136406 ubox
5 37 0.048692125 ubox
5 74 0.074052260 ubox
6 17 0.022209744 ubox
6 18 0.018825807 ubox
6 19 0.044825954 ubox
6 20 0.525563832 ubox
6 22 0.312085019 ubox
6 26 0.003250530 ubox
6 29 0.736615355 ubox
6 36 0.052309733 ubox
6 46 0.045975633 ubox
6 76 0.008003144 ubox
7 16 0.021788274 ubox
7 17 0.010007577 ubox
7 18 0.035764168 ubox
7 19 0.529189996 ubox
7 20 0.052430514 ubox
7 21 0.316394865 ubox
7 22 0.091631426 ubox
7 28 0.740982000 ubox
7 29 0.018744976 ubox
7 34 0.018149906 ubox
7 45 0.046332217 ubox
7 75 0.006689040 ubox
8 16 0.007765297 ubox
8 17 0.022013680 ubox
8 18 0.539318577 ubox
8 19 0.070534851 ubox
8 20 0.314634413 ubox
8 21 0.154956524 ubox
8 26 0.003220147 ubox
8 27 0.741221673 ubox
8 28 0.023266775 ubox
8 33 0.018251716 ubox
8 34 0.053589219 ubox
8 44 0.046435433 ubox
9 16 0.022034684 ubox
9 17 0.543469452 ubox
9 18 0.085439932 ubox
9 19 0.314122743 ubox
9 20 0.161959746 ubox
9 25 0.004412184 ubox
9 26 0.742347138 ubox
9 27 0.023595716 ubox
9 33 0.054827178 ubox
9 43 0.046859930 ubox
9 76 0.011864428 ubox
10 16 0.543516555 ubox
10 17 0.088521158 ubox
10 18 0.313121000 ubox
10 19 0.161853911 ubox
10 25 0.742303137 ubox
10 26 0.022955016 ubox
10 33 0.007886896 ubox
10 36 0.031615471 ubox
10 42 0.046861542 ubox
10 75 0.011996061 ubox
11 15 0.508543838 ubox
11 23 0.202046604 ubox
11 24 0.692830531 ubox
11 30 0.074195570 ubox
11 32 0.004239868 ubox
11 35 0.031820665 ubox
11 37 0.086197571 ubox
11 41 0.045055008 ubox
11 47 0.004925116 ubox
11 74 0.008217742 ubox
11 77 0.018043329 ubox
12 18 0.135326304 ubox
12 19 0.011098686 ubox
12 20 0.027698988 ubox
12 22 0.151972287 ubox
12 27 0.003910769 ubox
12 29 0.074376979 ubox
12 36 0.090672706 ubox
12 46 0.005006123 ubox
12 76 0.018157093 ubox
13 17 0.134674048 ubox
13 18 0.011605710 ubox
13 19 0.028280704 ubox
13 20 0.053198522 ubox
13 22 0.725929805 ubox
13 26 0.003937910 ubox
13 27 0.074256138 ubox
13 44 0.006639209 ubox
13 75 0.017598425 ubox
14 18 0.025538800 ubox
14 19 0.048916827 ubox
14 20 0.017883376 ubox
14 21 0.740020802 ubox
14 26 0.074193486 ubox
14 27 0.008467916 ubox
14 34 0.100689645 ubox
14 43 0.007279759 ubox
15 19 0.020026906 ubox
15 20 0.739945932 ubox
15 25 0.074366078 ubox
15 26 0.009563672 ubox
15 33 0.102719031 ubox
15 36 0.046532592 ubox
15 42 0.008289105 ubox
16 24 0.074248838 ubox
16 32 0.102603129 ubox
16 35 0.046886721 ubox
16 41 0.008253342 ubox
16 72 0.003598323 ubox
17 23 0.074174790 ubox
17 24 0.010608456 ubox
17 31 0.102472356 ubox
17 32 0.006288923 ubox
17 40 0.008219903 ubox
17 71 0.003719933 ubox
18 23 0.011323958 ubox
18 30 0.101729252 ubox
18 31 0.008124827 ubox
18 32 0.007721798 ubox
18 39 0.007976694 ubox
18 41 0.012979119 ubox
18 70 0.003703333 ubox
18 74 0.004369490 ubox
19 30 0.009511532 ubox
19 31 0.007720171 ubox
19 32 0.053186971 ubox
19 38 0.007470211 ubox
19 40 0.014103272 ubox
19 73 0.005245377 ubox
20 30 0.007311570 ubox
20 31 0.053230169 ubox
20 37 0.007145613 ubox
20 39 0.017215956 ubox
20 72 0.006272951 ubox
21 38 0.025475567 ubox
21 71 0.008858272 ubox
21 74 0.003310900 ubox
22 30 0.056965797 ubox
22 37 0.028282361 ubox
22 70 0.009154752 ubox
22 77 0.480208070 ubox
23 29 0.057908114 ubox
23 36 0.028910622 ubox
23 43 0.328686733 ubox
23 44 0.012380329 ubox
23 69 0.008737536 ubox
23 76 0.494399112 ubox
24 28 0.052172290 ubox
24 33 0.048657479 ubox
24 36 0.003393194 ubox
24 42 0.332373241 ubox
24 43 0.011384766 ubox
24 68 0.007320120 ubox
24 75 0.492392180 ubox
25 31 0.006533018 ubox
25 32 0.060048818 ubox
25 35 0.005225238 ubox
25 41 0.338617832 ubox
25 67 0.006672277 ubox
25 74 0.485337608 ubox
26 30 0.006528518 ubox
26 31 0.059867209 ubox
26 32 0.016561064 ubox
26 39 0.004018833 ubox
26 40 0.339271030 ubox
26 41 0.012018489 ubox
26 73 0.491304908 ubox
27 31 0.016415012 ubox
27 38 0.007283086 ubox
27 39 0.344369536 ubox
27 40 0.013046678 ubox
27 72 0.494051673 ubox
28 37 0.009470438 ubox
28 38 0.349713081 ubox
28 39 0.013455506 ubox
28 71 0.495026364 ubox
29 37 0.352257487 ubox
29 38 0.012059343 ubox
29 67 0.008751863 ubox
29 70 0.495193536 ubox
29 77 0.013755710 ubox
30 36 0.354308551 ubox
30 43 0.017660191 ubox
30 44 0.260640957 ubox
30 66 0.007321162 ubox
30 69 0.491960958 ubox
30 76 0.014670662 ubox
31 42 0.017707096 ubox
31 43 0.271560439 ubox
31 44 0.013540691 ubox
31 65 0.005236327 ubox
31 66 0.342074058 ubox
31 68 0.349141644 ubox
31 69 0.003652299 ubox
31 75 0.013690334 ubox
31 76 0.013171202 ubox
32 42 0.271859671 ubox
32 43 0.013473909 ubox
32 65 0.483757733 ubox
32 68 0.005023971 ubox
32 75 0.013368921 ubox
33 39 0.020821663 ubox
33 40 0.054847625 ubox
33 41 0.266687973 ubox
33 64 0.489240315 ubox
33 67 0.004595943 ubox
33 74 0.012581980 ubox
34 38 0.019932311 ubox
34 39 0.064865534 ubox
34 63 0.489203216 ubox
34 73 0.010945591 ubox
35 42 0.015728777 ubox
35 48 0.006889709 ubox
35 62 0.489244457 ubox
36 41 0.015717881 ubox
36 47 0.025116407 ubox
36 61 0.489218491 ubox
36 77 0.049181255 ubox
37 46 0.024984405 ubox
37 56 0.003284602 ubox
37 60 0.487083752 ubox
37 76 0.017270626 ubox
38 45 0.024330877 ubox
38 46 0.004730394 ubox
38 55 0.010594047 ubox
38 56 0.033228293 ubox
38 59 0.443457387 ubox
38 60 0.011121815 ubox
38 75 0.005768153 ubox
38 76 0.003246367 ubox
39 44 0.022420376 ubox
39 45 0.007006149 ubox
39 55 0.046388147 ubox
39 56 0.290821510 ubox
39 59 0.012060705 ubox
39 76 0.009286302 ubox
40 44 0.007554734 ubox
40 55 0.323535510 ubox
40 56 0.335376137 ubox
40 66 0.003383172 ubox
40 75 0.009133003 ubox
40 76 0.743443881 ubox
41 48 0.008499832 ubox
41 51 0.140319877 ubox
41 53 0.325939678 ubox
41 55 0.327438010 ubox
41 65 0.003391193 ubox
41 75 0.753178774 ubox
42 47 0.011795972 ubox
42 50 0.188326326 ubox
42 52 0.335456026 ubox
42 54 0.259422721 ubox
42 58 0.011410855 ubox
42 64 0.003305565 ubox
42 72 0.005169889 ubox
42 73 0.003617078 ubox
42 74 0.752579188 ubox
43 49 0.189197821 ubox
43 50 0.387773559 ubox
43 57 0.010835637 ubox
43 58 0.006291561 ubox
43 71 0.007621974 ubox
43 72 0.004433351 ubox
43 73 0.753356575 ubox
43 74 0.005249445 ubox
44 49 0.386386401 ubox
44 57 0.004456811 ubox
44 58 0.050052924 ubox
44 70 0.016741117 ubox
44 71 0.011604270 ubox
44 72 0.815595050 ubox
44 73 0.022488970 ubox
44 74 0.012342289 ubox
45 57 0.050340891 ubox
45 58 0.014276550 ubox
45 71 0.849575945 ubox
45 72 0.021469636 ubox
45 73 0.013453767 ubox
45 74 0.005275850 ubox
46 52 0.175143627 ubox
46 54 0.075163045 ubox
46 57 0.014473632 ubox
46 61 0.003518480 ubox
46 70 0.853374548 ubox
46 71 0.010634787 ubox
46 72 0.012692358 ubox
46 73 0.004348707 ubox
46 77 0.005472984 ubox
47 51 0.174172537 ubox
47 53 0.080706925 ubox
47 55 0.051037769 ubox
47 56 0.014350014 ubox
47 60 0.003544078 ubox
47 68 0.626656840 ubox
47 69 0.604292089 ubox
47 76 0.005438139 ubox
48 52 0.075526185 ubox
48 54 0.051182180 ubox
48 57 0.020111039 ubox
48 67 0.870252708 ubox
48 70 0.028228793 ubox
48 77 0.003847075 ubox
49 53 0.050934896 ubox
49 56 0.021947721 ubox
49 66 0.871647851 ubox
49 69 0.028289451 ubox
49 76 0.003881979 ubox
50 55 0.021939094 ubox
50 62 0.004723003 ubox
50 65 0.871589588 ubox
50 68 0.028314587 ubox
50 75 0.003880568 ubox
51 61 0.010367370 ubox
51 63 0.182393238 ubox
51 64 0.851891690 ubox
51 67 0.028286619 ubox
51 74 0.003344267 ubox
52 60 0.011195470 ubox
52 62 0.870884618 ubox
52 65 0.008670676 ubox
52 66 0.026879585 ubox
53 61 0.871122078 ubox
53 63 0.011440753 ubox
53 64 0.012254455 ubox
54 60 0.864803887 ubox
54 62 0.024182472 ubox
54 65 0.019004022 ubox
55 61 0.026539609 ubox
55 64 0.021426099 ubox
55 71 0.003400372 ubox
56 63 0.016591930 ubox
56 70 0.003478604 ubox
57 62 0.004998055 ubox
57 69 0.003449583 ubox
60 67 0.003643208 ubox
61 66 0.003644433 ubox
69 77 0.095043512 ubox
70 76 0.096122141 ubox
71 75 0.086613822 ubox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
40 76 0.9500000 lbox
41 75 0.9500000 lbox
42 74 0.9500000 lbox
43 73 0.9500000 lbox
44 72 0.9500000 lbox
45 71 0.9500000 lbox
46 70 0.9500000 lbox
47 69 0.9500000 lbox
48 67 0.9500000 lbox
49 66 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
showpage
end
%%EOF
