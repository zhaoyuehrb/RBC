%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IFNA1)
} def

/sequence { (\
CAAGGUUCAGAGUCACCCAUCUCAGCAAGCCCAGAAGUAUCUGCAAUAUCUACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.005939386 ubox
2 42 0.004717777 ubox
3 22 0.013237408 ubox
3 42 0.009642295 ubox
3 51 0.109897100 ubox
4 14 0.005317884 ubox
4 17 0.095387322 ubox
4 18 0.022241596 ubox
4 21 0.013880014 ubox
4 22 0.003399068 ubox
4 23 0.007005270 ubox
4 31 0.889090270 ubox
4 32 0.030660666 ubox
4 41 0.010009828 ubox
4 50 0.113395884 ubox
4 51 0.015549725 ubox
5 13 0.004659629 ubox
5 16 0.095837756 ubox
5 17 0.021202717 ubox
5 20 0.013512962 ubox
5 21 0.003774142 ubox
5 22 0.003893698 ubox
5 26 0.363941188 ubox
5 30 0.891263432 ubox
5 31 0.025946594 ubox
5 40 0.009067757 ubox
5 44 0.007715064 ubox
5 47 0.041075077 ubox
5 49 0.097436864 ubox
5 50 0.015426952 ubox
5 53 0.024895142 ubox
6 12 0.003412892 ubox
6 15 0.094734098 ubox
6 19 0.013047359 ubox
6 25 0.364155180 ubox
6 28 0.066114243 ubox
6 29 0.885300329 ubox
6 36 0.003369680 ubox
6 39 0.008602136 ubox
6 43 0.003880026 ubox
6 46 0.043507412 ubox
6 48 0.091803515 ubox
6 52 0.023107747 ubox
7 11 0.003525563 ubox
7 24 0.340176398 ubox
7 27 0.085387049 ubox
7 28 0.794868336 ubox
7 35 0.004700356 ubox
7 45 0.045855931 ubox
8 34 0.004737706 ubox
8 43 0.054148659 ubox
9 22 0.351399702 ubox
9 42 0.054356917 ubox
9 51 0.008981434 ubox
10 21 0.358536281 ubox
10 23 0.922287186 ubox
10 41 0.054302609 ubox
10 50 0.009131389 ubox
11 20 0.357288231 ubox
11 22 0.924033338 ubox
11 40 0.053390677 ubox
11 42 0.013901285 ubox
11 49 0.008894479 ubox
12 20 0.014360373 ubox
12 21 0.923754086 ubox
12 26 0.015994834 ubox
12 30 0.003787822 ubox
12 40 0.006274854 ubox
12 41 0.014017868 ubox
13 19 0.066417339 ubox
13 25 0.015611492 ubox
13 29 0.003692020 ubox
13 35 0.006428376 ubox
13 39 0.011914139 ubox
14 34 0.007086631 ubox
15 38 0.037365723 ubox
16 37 0.038832494 ubox
19 47 0.006494646 ubox
20 35 0.039275173 ubox
20 37 0.003227668 ubox
20 46 0.006775987 ubox
21 29 0.022170996 ubox
21 34 0.039669486 ubox
21 37 0.006434587 ubox
22 28 0.021539388 ubox
22 33 0.037771096 ubox
22 35 0.008011473 ubox
22 36 0.005063898 ubox
23 34 0.009059452 ubox
23 43 0.013404718 ubox
24 42 0.013941896 ubox
24 51 0.077225101 ubox
25 38 0.007817015 ubox
25 41 0.013909572 ubox
25 44 0.128195487 ubox
25 50 0.080811051 ubox
26 37 0.008105194 ubox
26 43 0.127923099 ubox
27 42 0.122144459 ubox
28 42 0.019481242 ubox
28 51 0.037728014 ubox
29 38 0.109590505 ubox
29 41 0.026512441 ubox
29 44 0.170909233 ubox
29 50 0.038932798 ubox
30 37 0.110474771 ubox
30 43 0.154233195 ubox
32 43 0.941661816 ubox
33 42 0.960091878 ubox
33 51 0.094383276 ubox
34 41 0.962602955 ubox
34 50 0.099076209 ubox
35 40 0.879708090 ubox
35 49 0.093631322 ubox
36 42 0.022222853 ubox
36 51 0.041133919 ubox
37 41 0.022376307 ubox
37 44 0.066575966 ubox
37 47 0.069908481 ubox
37 49 0.057475161 ubox
37 50 0.042280806 ubox
37 53 0.064398186 ubox
38 43 0.063912549 ubox
38 46 0.070245708 ubox
38 48 0.076740912 ubox
38 52 0.064279264 ubox
39 47 0.078140999 ubox
39 49 0.010263808 ubox
39 51 0.061967259 ubox
40 46 0.075093104 ubox
40 48 0.010718727 ubox
42 48 0.029952702 ubox
42 52 0.004458535 ubox
42 54 0.005402124 ubox
43 47 0.025530257 ubox
43 51 0.004936953 ubox
43 53 0.011221606 ubox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
