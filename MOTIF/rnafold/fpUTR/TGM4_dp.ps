%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TGM4)
} def

/sequence { (\
GGACCGACUGUGUGGAAGCACCAGGCAUCAGAGAUAGAGUCUUCCCUGGCAUUGCAGGAGAGAAUCUGAAGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.024510150 ubox
1 22 0.004278998 ubox
1 29 0.084447063 ubox
1 42 0.006551664 ubox
1 66 0.003383059 ubox
1 67 0.014914142 ubox
2 8 0.031128770 ubox
2 21 0.004175891 ubox
2 28 0.077797049 ubox
2 29 0.219384890 ubox
2 41 0.009081875 ubox
2 66 0.015741853 ubox
3 28 0.216211706 ubox
3 40 0.009128296 ubox
3 65 0.014338321 ubox
4 15 0.009207420 ubox
4 25 0.083473088 ubox
4 39 0.009143019 ubox
4 72 0.570618221 ubox
4 73 0.275971078 ubox
5 14 0.009342062 ubox
5 24 0.082017034 ubox
5 68 0.023664514 ubox
5 71 0.571150308 ubox
5 72 0.278786787 ubox
6 13 0.007152877 ubox
6 29 0.749670831 ubox
6 41 0.016989475 ubox
6 66 0.006258852 ubox
6 67 0.006430450 ubox
7 13 0.003304941 ubox
7 28 0.745784755 ubox
7 40 0.017067188 ubox
7 65 0.005709658 ubox
8 12 0.003825824 ubox
8 24 0.444411018 ubox
8 25 0.035444119 ubox
8 31 0.082122927 ubox
8 33 0.031701208 ubox
8 37 0.008762199 ubox
8 39 0.017103596 ubox
8 71 0.033170814 ubox
8 72 0.020421279 ubox
8 73 0.009771513 ubox
9 20 0.021647946 ubox
9 23 0.446427789 ubox
9 24 0.032232176 ubox
9 27 0.853797255 ubox
9 30 0.075221664 ubox
9 32 0.026661074 ubox
9 36 0.008826479 ubox
9 38 0.015457111 ubox
9 68 0.005777017 ubox
9 70 0.029316969 ubox
9 71 0.015139391 ubox
9 72 0.008026944 ubox
10 19 0.022384703 ubox
10 21 0.113002059 ubox
10 22 0.439476403 ubox
10 26 0.886974886 ubox
10 28 0.015218115 ubox
10 29 0.066260662 ubox
10 35 0.008950982 ubox
11 18 0.022166298 ubox
11 20 0.138528898 ubox
11 23 0.005727005 ubox
11 25 0.885293294 ubox
11 27 0.056324587 ubox
11 30 0.019539987 ubox
11 34 0.008927374 ubox
11 36 0.012729849 ubox
12 19 0.138798360 ubox
12 21 0.434068677 ubox
12 22 0.004631228 ubox
12 26 0.057182100 ubox
12 28 0.011295172 ubox
12 29 0.019132123 ubox
12 35 0.012609970 ubox
13 18 0.136557989 ubox
13 20 0.434084486 ubox
13 23 0.887168669 ubox
13 25 0.046765293 ubox
13 27 0.016028497 ubox
13 30 0.003821198 ubox
13 34 0.011157752 ubox
14 19 0.433740471 ubox
14 22 0.889030803 ubox
14 26 0.016025383 ubox
14 29 0.004210854 ubox
15 21 0.886588839 ubox
15 28 0.003721683 ubox
15 29 0.017169198 ubox
16 28 0.017261391 ubox
18 26 0.022114805 ubox
19 25 0.022137570 ubox
24 41 0.003957095 ubox
25 40 0.007393978 ubox
25 55 0.003998204 ubox
26 39 0.008477385 ubox
26 54 0.004049661 ubox
26 68 0.008745747 ubox
27 35 0.087586491 ubox
27 53 0.003983950 ubox
27 67 0.006036918 ubox
28 34 0.114492534 ubox
28 38 0.015460005 ubox
28 49 0.004742030 ubox
28 69 0.277217742 ubox
28 72 0.038595500 ubox
28 73 0.073568770 ubox
29 33 0.118124944 ubox
29 37 0.016521499 ubox
29 48 0.005951457 ubox
29 68 0.296316173 ubox
29 71 0.053696945 ubox
29 72 0.113479589 ubox
30 42 0.011268439 ubox
30 47 0.005970464 ubox
30 67 0.291578798 ubox
31 41 0.013216433 ubox
31 43 0.033154436 ubox
31 44 0.009952444 ubox
31 46 0.005929698 ubox
31 66 0.286886570 ubox
32 40 0.013184867 ubox
32 42 0.045754842 ubox
32 43 0.007593963 ubox
32 65 0.267969680 ubox
32 67 0.184555447 ubox
33 41 0.063684475 ubox
33 42 0.003939151 ubox
33 44 0.013165873 ubox
33 66 0.192888428 ubox
34 40 0.063409990 ubox
34 43 0.013149739 ubox
34 65 0.194494652 ubox
35 39 0.058818244 ubox
35 64 0.199429055 ubox
35 68 0.762148027 ubox
36 42 0.004993563 ubox
36 67 0.918183711 ubox
37 41 0.005710757 ubox
37 44 0.006586337 ubox
37 66 0.933753698 ubox
38 43 0.006184315 ubox
38 65 0.913253035 ubox
38 67 0.032986291 ubox
39 65 0.035247986 ubox
39 66 0.033657297 ubox
40 59 0.003611141 ubox
40 61 0.108104703 ubox
40 63 0.916379519 ubox
40 64 0.050096675 ubox
40 72 0.007579944 ubox
41 60 0.108560295 ubox
41 62 0.985179149 ubox
41 71 0.009969829 ubox
42 59 0.096450742 ubox
42 60 0.037325300 ubox
42 61 0.967331864 ubox
42 62 0.103186588 ubox
42 63 0.005612175 ubox
42 64 0.012200100 ubox
42 70 0.010019235 ubox
43 58 0.022056098 ubox
43 59 0.068256256 ubox
43 60 0.910706219 ubox
43 61 0.215886568 ubox
43 62 0.004011746 ubox
43 63 0.012866608 ubox
43 69 0.009999720 ubox
44 57 0.012843199 ubox
44 58 0.067714407 ubox
44 60 0.281981035 ubox
44 62 0.012993916 ubox
44 68 0.009988916 ubox
44 73 0.004133450 ubox
45 57 0.049120486 ubox
45 58 0.996589836 ubox
45 72 0.004236875 ubox
46 57 0.998636657 ubox
46 58 0.005736425 ubox
46 71 0.004236262 ubox
47 56 0.998916397 ubox
47 57 0.005242135 ubox
47 70 0.004030350 ubox
48 55 0.991284027 ubox
49 55 0.126329792 ubox
50 54 0.173175971 ubox
55 68 0.005667328 ubox
56 67 0.005778328 ubox
57 66 0.005725692 ubox
57 67 0.003949109 ubox
58 65 0.003834815 ubox
58 66 0.004498660 ubox
59 65 0.004787152 ubox
59 67 0.026942913 ubox
60 66 0.027668772 ubox
61 65 0.024079278 ubox
61 67 0.006063330 ubox
62 66 0.006176888 ubox
65 72 0.004652046 ubox
65 73 0.007628638 ubox
66 71 0.007391575 ubox
66 72 0.011984221 ubox
66 73 0.008491018 ubox
67 71 0.011025169 ubox
67 72 0.009957744 ubox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
35 68 0.9500000 lbox
36 67 0.9500000 lbox
37 66 0.9500000 lbox
38 65 0.9500000 lbox
40 63 0.9500000 lbox
41 62 0.9500000 lbox
42 61 0.9500000 lbox
43 60 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
showpage
end
%%EOF
