%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUUUCCUGUUCCGGGGCGUGUGGGACCCGGAUGCAAGCGUGCUAUAUAAGCGUUGCUCAAGUCCCACCCCUUUCUUUUUGAGGAAGACGCGGUCGUAAGGGCUGAGGAUUUUUGGUCCGCACGCUCCUGCUCCUGACUCACCGCUGUUCGCUCUCGCCGAGGAACAAGUCGGUCAGGAAGCCCGCGCGCAACAGCC\
) } def
/len { sequence length } bind def

/coor [
[106.43781281 351.50271606]
[92.57940674 358.12390137]
[77.26833344 356.91281128]
[64.62320709 348.19522095]
[58.04549408 334.31613159]
[59.30456543 319.00894165]
[68.06174469 306.39120483]
[81.96138763 299.85702515]
[83.14418030 284.90371704]
[84.32696533 269.95043945]
[85.50975037 254.99714661]
[86.69254303 240.04383850]
[77.11412048 223.25331116]
[88.76729584 206.81227112]
[89.47744751 191.82908630]
[90.06929779 176.84077454]
[90.54282379 161.84825134]
[91.01635742 146.85572815]
[91.48988342 131.86320496]
[82.02581024 127.65165710]
[74.33498383 120.71213531]
[69.17614746 111.72925568]
[54.31098938 113.73604584]
[39.44583893 115.74284363]
[24.58068466 117.74963379]
[9.71553135 119.75643158]
[-5.14962149 121.76322174]
[-20.01477432 123.77001953]
[-26.89553833 135.35569763]
[-39.01704407 140.78099060]
[-51.85915375 138.26844788]
[-60.77293396 128.95603943]
[-75.66791534 130.72792053]
[-83.82923889 134.85273743]
[-90.81177521 132.40829468]
[-105.73287201 133.94480896]
[-120.65396881 135.48133850]
[-135.57505798 137.01786804]
[-143.80049133 141.01332092]
[-150.74356079 138.45895386]
[-165.68705750 139.75973511]
[-180.63053894 141.06051636]
[-187.72315979 154.76081848]
[-201.10816956 162.43188477]
[-216.51446533 161.62586975]
[-229.02595520 152.60000610]
[-234.65026855 138.23440552]
[-231.59269714 123.11306763]
[-220.82891846 112.06116486]
[-205.79359436 108.60531616]
[-191.28446960 113.84827423]
[-181.93133545 126.11702728]
[-166.98783875 124.81624603]
[-152.04434204 123.51546478]
[-137.11158752 122.09676361]
[-122.19049072 120.56024170]
[-107.26939392 119.02371979]
[-92.34829712 117.48719788]
[-77.43979645 115.83294678]
[-62.54481506 114.06106567]
[-52.71988297 100.41698456]
[-35.73308182 98.04900360]
[-22.02156830 108.90486145]
[-7.15641546 106.89807129]
[7.70873737 104.89127350]
[22.57389069 102.88448334]
[37.43904495 100.87768555]
[52.30419540 98.87089539]
[67.16934967 96.86409760]
[68.54584503 90.08428192]
[71.30639648 83.74077606]
[75.32952881 78.11270905]
[66.66670990 65.86707306]
[58.00389481 53.62144089]
[49.34107971 41.37580490]
[40.67826080 29.13016891]
[32.01544571 16.88453293]
[23.35262680 4.63889647]
[9.26910782 -4.79989767]
[14.44032478 -20.94594574]
[31.38691330 -20.44649315]
[35.59826279 -4.02392101]
[44.26108170 8.22171497]
[52.92389679 20.46735001]
[61.58671570 32.71298599]
[70.24953461 44.95862198]
[78.91234589 57.20425797]
[87.57516479 69.44989777]
[97.65719604 65.42671204]
[109.02046204 64.81275177]
[120.49074554 68.00086212]
[126.03902435 54.06469727]
[131.58731079 40.12853622]
[137.13558960 26.19237328]
[133.32273865 6.40433073]
[148.98625183 -4.92360020]
[154.09182739 -19.02796745]
[159.19740295 -33.13233185]
[152.74273682 -47.30890656]
[158.12142944 -61.54000854]
[171.67640686 -67.60617065]
[176.78198242 -81.71053314]
[181.88754272 -95.81490326]
[186.99311829 -109.91927338]
[192.09869385 -124.02363586]
[197.20425415 -138.12800598]
[202.30982971 -152.23237610]
[207.41539001 -166.33673096]
[204.00825500 -182.37803650]
[216.37622070 -193.14675903]
[231.79620361 -187.56495667]
[234.40542603 -171.37472534]
[221.51976013 -161.23117065]
[216.41418457 -147.12680054]
[211.30862427 -133.02243042]
[206.20304871 -118.91806793]
[201.09748840 -104.81369781]
[195.99191284 -90.70933533]
[190.88633728 -76.60496521]
[185.78077698 -62.50059891]
[192.31205750 -49.16351318]
[187.33520508 -34.78694916]
[173.30175781 -28.02676392]
[168.19619751 -13.92239761]
[163.09062195 0.18196927]
[168.24462891 9.01905632]
[167.66627502 19.45297432]
[161.30545044 28.01924324]
[151.07174683 31.74065399]
[145.52346802 45.67681503]
[139.97518921 59.61297607]
[134.42691040 73.54914093]
[141.37355042 86.84365082]
[155.98226929 90.24739838]
[170.59097290 93.65113831]
[185.19969177 97.05487823]
[199.80841064 100.45861816]
[214.41712952 103.86236572]
[229.02583313 107.26610565]
[243.63455200 110.66984558]
[258.83044434 106.26586151]
[269.47000122 116.68934631]
[284.07873535 120.09309387]
[292.97772217 113.81729889]
[303.64224243 113.48748779]
[312.53781128 118.97109222]
[316.84902954 128.24856567]
[331.34298706 132.11178589]
[345.83697510 135.97500610]
[360.33096313 139.83822632]
[374.82495117 143.70144653]
[383.93316650 142.88792419]
[389.51629639 147.74174500]
[403.94750977 151.83329773]
[418.37869263 155.92483521]
[433.03146362 149.39218140]
[447.20788574 156.90277100]
[450.03298950 172.69511414]
[439.33963013 184.65469360]
[423.33081055 183.60713196]
[414.28713989 170.35603333]
[399.85595703 166.26448059]
[385.42477417 162.17294312]
[370.96173096 158.19543457]
[356.46774292 154.33221436]
[341.97375488 150.46899414]
[327.47976685 146.60577393]
[312.98580933 142.74255371]
[294.74179077 149.13195801]
[280.67498779 134.70181274]
[266.06625366 131.29806519]
[251.91528320 135.94551086]
[240.23080444 125.27855682]
[225.62210083 121.87481689]
[211.01338196 118.47107697]
[196.40466309 115.06733704]
[181.79595947 111.66359711]
[167.18724060 108.25984955]
[152.57852173 104.85610962]
[137.96980286 101.45236969]
[127.01506805 123.01396942]
[106.48240662 132.33673096]
[106.00888062 147.32925415]
[105.53535461 162.32177734]
[105.06182098 177.31430054]
[107.92092133 186.00032043]
[104.46062469 192.53923035]
[103.75048065 207.52241516]
[111.52987671 215.14202881]
[113.77978516 225.57174683]
[109.99243164 235.31120300]
[101.64583588 241.22663879]
[100.46305084 256.17993164]
[99.28025818 271.13320923]
[98.09747314 286.08651733]
[96.91468048 301.03982544]
[109.61421204 309.67794800]
[116.27880859 323.51553345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[14 188]
[15 187]
[16 185]
[17 184]
[18 183]
[19 182]
[22 69]
[23 68]
[24 67]
[25 66]
[26 65]
[27 64]
[28 63]
[32 60]
[33 59]
[35 58]
[36 57]
[37 56]
[38 55]
[40 54]
[41 53]
[42 52]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[91 132]
[92 131]
[93 130]
[94 129]
[96 125]
[97 124]
[98 123]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
[133 180]
[134 179]
[135 178]
[136 177]
[137 176]
[138 175]
[139 174]
[140 173]
[142 171]
[143 170]
[147 168]
[148 167]
[149 166]
[150 165]
[151 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
