%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCGGCGGUGCCCUUGCGGCGCAGCUGGGGUCGCGGCCCUGCUCCCCGCGCUUUCUUAAGGCCCGCGGGCGGCGCAGGAGCGGCACUCGUGGCUGUGGUGGCUUCGGCAGCGGCUUCAGCAGAUCGGCGGCAUCAGCGGUAGCACCAGCACUAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[253.54519653 299.70223999]
[256.02511597 276.79040527]
[245.52185059 266.08148193]
[235.01860046 255.37252808]
[224.51533508 244.66357422]
[214.01206970 233.95463562]
[199.57632446 230.28604126]
[195.43710327 215.01589966]
[184.93383789 204.30696106]
[180.20524597 203.36907959]
[176.03257751 199.42001343]
[174.24099731 192.97320557]
[164.16087341 181.86505127]
[154.08076477 170.75688171]
[144.00064087 159.64872742]
[129.23872375 161.44419861]
[116.09469604 154.11627197]
[109.71133423 140.29216003]
[112.72688293 125.18544769]
[102.64676666 114.07728577]
[89.39248657 109.62580109]
[86.24507141 96.00283051]
[76.16495514 84.89466858]
[65.97760773 73.88477325]
[55.68397903 62.97416687]
[45.39035416 52.06356049]
[35.09672928 41.15295792]
[24.80310631 30.24235153]
[14.50948143 19.33174706]
[-3.23250651 14.48764133]
[-6.66099691 -2.70179939]
[-17.16425705 -13.41074562]
[-27.66751671 -24.11969185]
[-38.17077637 -34.82863617]
[-46.45720291 -38.79046249]
[-48.77136612 -45.84855652]
[-59.06499100 -56.75916290]
[-74.16315460 -61.48738480]
[-77.26922607 -76.05452728]
[-87.56285095 -86.96512604]
[-97.96178436 -97.77541351]
[-108.46504211 -108.48435974]
[-118.96830750 -119.19330597]
[-129.47157288 -129.90225220]
[-139.97482300 -140.61119080]
[-150.58142090 -151.21780396]
[-161.29037476 -161.72105408]
[-172.10066223 -172.11999512]
[-183.01126099 -182.41362000]
[-193.92185974 -192.70724487]
[-204.83247375 -203.00086975]
[-215.74307251 -213.29449463]
[-226.85124207 -223.37460327]
[-238.15277100 -233.23742676]
[-249.45431519 -243.10025024]
[-260.75585938 -252.96307373]
[-272.05740356 -262.82589722]
[-287.96676636 -268.68493652]
[-286.74084473 -285.59448242]
[-270.15274048 -289.09753418]
[-262.19458008 -274.12744141]
[-250.89303589 -264.26461792]
[-239.59149170 -254.40177917]
[-228.28994751 -244.53897095]
[-216.98841858 -234.67614746]
[-212.20137024 -234.10751343]
[-207.73521423 -230.49368286]
[-205.44944763 -224.20509338]
[-194.53884888 -213.91146851]
[-183.62823486 -203.61784363]
[-172.71763611 -193.32421875]
[-161.80703735 -183.03059387]
[-154.74893188 -180.71643066]
[-150.78710938 -172.43000793]
[-140.07817078 -161.92674255]
[-133.06626892 -159.47615051]
[-129.26588440 -151.11445618]
[-118.76261902 -140.40551758]
[-108.25936127 -129.69656372]
[-97.75609589 -118.98761749]
[-87.25283813 -108.27867126]
[-80.28978729 -105.69257355]
[-76.65225220 -97.25875092]
[-66.35862732 -86.34815216]
[-51.99673080 -82.40032196]
[-48.15438843 -67.05278778]
[-37.86076355 -56.14218140]
[-27.46183205 -45.33189774]
[-16.95857048 -34.62295151]
[-6.45531130 -23.91400528]
[4.04794884 -13.20505905]
[16.16731071 -12.76450634]
[25.00679588 -3.88559127]
[25.42008591 9.03812313]
[35.71371078 19.94872665]
[46.00733566 30.85933113]
[56.30096054 41.76993561]
[66.59458160 52.68054199]
[76.88820648 63.59114456]
[83.79980469 66.31178284]
[87.27311707 74.81455231]
[97.35323334 85.92271423]
[110.60751343 90.37419891]
[113.75492859 103.99716949]
[123.83504486 115.10533142]
[139.16273499 113.56643677]
[152.30392456 121.25813293]
[158.32495117 135.04985046]
[155.10881042 149.56860352]
[165.18891907 160.67677307]
[175.26904297 171.78492737]
[185.34915161 182.89309692]
[195.64277649 193.80369568]
[206.14604187 204.51263428]
[221.33305359 208.94720459]
[224.72102356 223.45137024]
[235.22427368 234.16032410]
[245.72753906 244.86926270]
[256.23080444 255.57821655]
[266.73406982 266.28717041]
[274.11770630 263.47451782]
[281.96032715 262.77020264]
[289.67379761 264.21231079]
[296.68371582 267.67852783]
[302.47210693 272.89639282]
[306.61566162 279.46466064]
[308.81677246 286.88400269]
[308.92477417 294.59515381]
[306.94625854 302.02099609]
[303.04342651 308.60964966]
[312.00079346 320.64151001]
[326.44796753 327.09054565]
[327.84188843 341.91976929]
[336.79928589 353.95162964]
[352.00277710 352.27798462]
[365.91085815 358.39855957]
[374.82870483 370.57800293]
[376.44210815 385.48614502]
[370.41726685 399.10842896]
[379.37466431 411.14028931]
[388.44827271 423.08471680]
[397.63729858 434.94061279]
[406.82629395 446.79650879]
[421.30834961 455.61163330]
[416.84671021 471.96798706]
[399.89447021 472.20864868]
[394.97039795 455.98550415]
[385.78140259 444.12960815]
[376.59237671 432.27374268]
[369.97665405 428.89675903]
[367.34280396 420.09765625]
[358.38543701 408.06582642]
[343.60748291 409.93060303]
[329.78833008 404.10931396]
[320.67825317 392.07299805]
[318.80368042 376.99377441]
[324.76742554 362.90899658]
[315.81005859 350.87716675]
[302.00357056 345.28872681]
[299.96896362 329.59887695]
[291.01156616 317.56704712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 120]
[3 119]
[4 118]
[5 117]
[6 116]
[8 114]
[9 113]
[12 112]
[13 111]
[14 110]
[15 109]
[19 105]
[20 104]
[22 102]
[23 101]
[24 99]
[25 98]
[26 97]
[27 96]
[28 95]
[29 94]
[31 91]
[32 90]
[33 89]
[34 88]
[36 87]
[37 86]
[39 84]
[40 83]
[41 81]
[42 80]
[43 79]
[44 78]
[45 77]
[46 75]
[47 74]
[48 72]
[49 71]
[50 70]
[51 69]
[52 68]
[53 65]
[54 64]
[55 63]
[56 62]
[57 61]
[130 161]
[131 160]
[133 158]
[134 157]
[139 152]
[140 151]
[141 149]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
