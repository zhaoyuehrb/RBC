%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NEFH)
} def

/sequence { (\
AAAAGGGCCGGCGCCCUGGUGCUGCCGCAGUGCCUCCCGCCCCGUCCCGGCCUCGCGCACCUGCUCAGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 17 0.026210654 ubox
4 23 0.005669119 ubox
5 16 0.027029191 ubox
5 22 0.005845399 ubox
5 38 0.012962519 ubox
5 42 0.046214325 ubox
5 43 0.022148554 ubox
5 46 0.006107503 ubox
5 47 0.429183074 ubox
5 48 0.899144036 ubox
5 53 0.005873955 ubox
6 15 0.027033307 ubox
6 26 0.004456430 ubox
6 37 0.012978815 ubox
6 41 0.046414861 ubox
6 42 0.021968665 ubox
6 43 0.015947239 ubox
6 45 0.005814588 ubox
6 46 0.431036617 ubox
6 47 0.899835146 ubox
6 48 0.017960270 ubox
6 52 0.006509209 ubox
6 71 0.010691689 ubox
7 14 0.027032887 ubox
7 20 0.005856975 ubox
7 25 0.004464394 ubox
7 36 0.012963074 ubox
7 40 0.046506451 ubox
7 41 0.019485689 ubox
7 42 0.015923714 ubox
7 45 0.431547854 ubox
7 46 0.898399120 ubox
7 47 0.017624300 ubox
7 51 0.006519909 ubox
7 70 0.010830373 ubox
8 13 0.026958229 ubox
8 19 0.005868585 ubox
8 24 0.003187066 ubox
8 39 0.044661303 ubox
8 44 0.487299000 ubox
8 50 0.006528176 ubox
8 69 0.010845904 ubox
9 18 0.005870365 ubox
9 24 0.003288739 ubox
9 39 0.021181411 ubox
9 44 0.856944131 ubox
9 49 0.006519137 ubox
9 68 0.010827900 ubox
10 17 0.005740731 ubox
10 23 0.004858971 ubox
10 34 0.042592595 ubox
10 37 0.013942462 ubox
10 38 0.024561382 ubox
10 41 0.471326581 ubox
10 42 0.219552162 ubox
10 43 0.851530057 ubox
10 48 0.005103442 ubox
10 65 0.004424002 ubox
10 66 0.005033583 ubox
11 16 0.005652100 ubox
11 22 0.004942877 ubox
11 33 0.042860628 ubox
11 36 0.013587699 ubox
11 37 0.024437285 ubox
11 40 0.484416068 ubox
11 41 0.206046045 ubox
11 42 0.847543911 ubox
11 47 0.004645670 ubox
11 64 0.005391611 ubox
11 65 0.004375519 ubox
12 21 0.004944170 ubox
12 32 0.043014346 ubox
12 39 0.496067752 ubox
12 63 0.005399288 ubox
13 20 0.004935689 ubox
13 31 0.042979009 ubox
13 33 0.009362264 ubox
13 38 0.493163639 ubox
13 40 0.864025227 ubox
13 62 0.005233829 ubox
13 64 0.008247381 ubox
14 19 0.004924996 ubox
14 30 0.042928465 ubox
14 32 0.009368627 ubox
14 39 0.863699005 ubox
14 63 0.008245201 ubox
16 30 0.008859410 ubox
17 27 0.039826119 ubox
17 29 0.008733293 ubox
18 26 0.042668903 ubox
18 28 0.007460360 ubox
18 31 0.003639038 ubox
18 34 0.998051892 ubox
18 35 0.014647381 ubox
18 36 0.005133773 ubox
18 37 0.011466716 ubox
18 38 0.003449417 ubox
18 61 0.012207187 ubox
18 71 0.012613157 ubox
19 25 0.042682641 ubox
19 28 0.004468257 ubox
19 33 0.998653220 ubox
19 34 0.011654137 ubox
19 36 0.010801632 ubox
19 37 0.003169065 ubox
19 60 0.012219077 ubox
19 70 0.012753934 ubox
20 24 0.039929258 ubox
20 27 0.005904856 ubox
20 29 0.011322985 ubox
20 32 0.996648208 ubox
20 59 0.012214463 ubox
20 69 0.012058268 ubox
21 26 0.005873679 ubox
21 28 0.016101866 ubox
21 31 0.996587833 ubox
21 33 0.010313565 ubox
21 58 0.012213457 ubox
21 70 0.005802218 ubox
22 27 0.016095403 ubox
22 30 0.998613977 ubox
22 32 0.010265783 ubox
22 57 0.011928058 ubox
22 68 0.012804090 ubox
22 69 0.005751296 ubox
23 29 0.997386199 ubox
23 67 0.012948549 ubox
23 68 0.005640478 ubox
24 28 0.981503674 ubox
24 31 0.007266188 ubox
24 56 0.010983447 ubox
24 66 0.012935245 ubox
24 70 0.007275418 ubox
25 30 0.007480053 ubox
25 55 0.008754693 ubox
25 69 0.007300714 ubox
26 55 0.007923646 ubox
26 68 0.007294618 ubox
27 54 0.010332432 ubox
27 64 0.016899026 ubox
28 63 0.016916403 ubox
29 53 0.012073413 ubox
29 62 0.016861608 ubox
30 52 0.012139449 ubox
30 60 0.011938502 ubox
30 61 0.011944572 ubox
31 59 0.016827747 ubox
32 51 0.012179032 ubox
32 58 0.016873413 ubox
33 50 0.012174147 ubox
33 57 0.016839940 ubox
34 49 0.012151549 ubox
38 44 0.008757962 ubox
39 43 0.008301630 ubox
39 45 0.005074411 ubox
39 48 0.003245782 ubox
39 51 0.016578835 ubox
40 44 0.005162151 ubox
40 50 0.016548572 ubox
41 49 0.016475709 ubox
42 50 0.003856768 ubox
43 49 0.004433610 ubox
44 48 0.004999342 ubox
49 71 0.992433412 ubox
50 70 0.999709415 ubox
51 69 0.999736900 ubox
52 68 0.999602239 ubox
52 69 0.003681892 ubox
53 67 0.967162616 ubox
53 68 0.004969284 ubox
54 63 0.032993301 ubox
55 62 0.025253608 ubox
55 64 0.892782175 ubox
56 63 0.893458760 ubox
57 62 0.605699655 ubox
57 64 0.442901593 ubox
58 63 0.443012707 ubox
60 69 0.004375731 ubox
61 68 0.004428936 ubox
62 67 0.004160822 ubox
63 70 0.006409914 ubox
64 69 0.006426118 ubox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
49 71 0.9500000 lbox
50 70 0.9500000 lbox
51 69 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
showpage
end
%%EOF
