%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (S1PR4)
} def

/sequence { (\
GCAAGGCGGGUGGCUCCACCCUGCGUCGGGCCUCAGUCAGCCCCCGGGGGAGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.115518644 ubox
1 11 0.018743233 ubox
1 24 0.620528005 ubox
1 26 0.080692329 ubox
1 31 0.094414946 ubox
1 37 0.006280003 ubox
1 54 0.019433911 ubox
2 6 0.114769049 ubox
2 10 0.019418908 ubox
2 23 0.620916257 ubox
2 25 0.088201767 ubox
2 30 0.094785038 ubox
2 36 0.006864816 ubox
2 53 0.019428412 ubox
3 22 0.593159583 ubox
4 22 0.164644673 ubox
4 33 0.026632563 ubox
5 15 0.028594426 ubox
5 17 0.004287443 ubox
5 20 0.356994081 ubox
5 21 0.228343140 ubox
5 22 0.015338546 ubox
5 27 0.265046317 ubox
5 32 0.028156200 ubox
5 38 0.029027866 ubox
5 44 0.012644178 ubox
5 45 0.033684773 ubox
5 55 0.047410212 ubox
6 14 0.030675575 ubox
6 16 0.004247861 ubox
6 19 0.357605892 ubox
6 20 0.226646506 ubox
6 21 0.011111865 ubox
6 24 0.710166975 ubox
6 26 0.258094359 ubox
6 31 0.028148481 ubox
6 37 0.029168137 ubox
6 43 0.012685865 ubox
6 44 0.033677178 ubox
6 54 0.047753094 ubox
7 13 0.030773358 ubox
7 23 0.710579751 ubox
7 25 0.257896785 ubox
7 28 0.004181520 ubox
7 30 0.028117672 ubox
7 36 0.029141363 ubox
7 46 0.013549720 ubox
7 53 0.047662632 ubox
8 15 0.010460561 ubox
8 16 0.014955909 ubox
8 17 0.354835743 ubox
8 20 0.005970891 ubox
8 21 0.864489439 ubox
8 22 0.200458595 ubox
8 24 0.114482707 ubox
8 34 0.004065721 ubox
8 42 0.022448023 ubox
8 43 0.029227451 ubox
8 45 0.013805571 ubox
8 55 0.004337505 ubox
9 14 0.011291936 ubox
9 15 0.015332692 ubox
9 16 0.354445000 ubox
9 17 0.230310733 ubox
9 19 0.005169543 ubox
9 20 0.880033626 ubox
9 21 0.165015620 ubox
9 22 0.017701904 ubox
9 33 0.003550404 ubox
9 34 0.023610029 ubox
9 41 0.022552048 ubox
9 42 0.029226932 ubox
9 44 0.013802163 ubox
9 54 0.003988698 ubox
9 55 0.028349274 ubox
10 14 0.049358194 ubox
10 15 0.258285003 ubox
10 16 0.230223016 ubox
10 19 0.887896256 ubox
10 20 0.118426709 ubox
10 21 0.019584818 ubox
10 33 0.022725175 ubox
10 41 0.029202848 ubox
10 43 0.013795044 ubox
10 54 0.028712126 ubox
11 18 0.894867280 ubox
11 39 0.032408249 ubox
11 40 0.017940190 ubox
11 53 0.027539589 ubox
12 17 0.892216916 ubox
12 20 0.024335547 ubox
12 21 0.007876624 ubox
12 32 0.029775476 ubox
12 38 0.036503439 ubox
12 42 0.013294444 ubox
12 55 0.111219772 ubox
13 19 0.024851072 ubox
13 20 0.007832147 ubox
13 24 0.003943299 ubox
13 31 0.029848680 ubox
13 37 0.036730656 ubox
13 41 0.013295729 ubox
13 54 0.112523463 ubox
14 23 0.003974496 ubox
14 30 0.029821552 ubox
14 36 0.036746773 ubox
14 40 0.013291203 ubox
14 52 0.053111899 ubox
14 53 0.105540631 ubox
15 29 0.027908761 ubox
15 35 0.035591602 ubox
15 39 0.012791333 ubox
15 51 0.065453059 ubox
15 52 0.070626933 ubox
15 53 0.008406518 ubox
16 28 0.027816906 ubox
16 29 0.010624264 ubox
16 50 0.068019913 ubox
16 52 0.067775680 ubox
16 53 0.027446775 ubox
17 28 0.010663542 ubox
17 49 0.065458786 ubox
17 52 0.028360933 ubox
18 26 0.028602242 ubox
18 37 0.006967659 ubox
19 25 0.028873872 ubox
19 30 0.032821765 ubox
19 36 0.007064829 ubox
19 48 0.062834493 ubox
19 49 0.092342914 ubox
19 50 0.045893479 ubox
20 29 0.032889000 ubox
20 30 0.018798425 ubox
20 47 0.062656468 ubox
20 48 0.094154949 ubox
20 49 0.045884455 ubox
20 50 0.029492569 ubox
21 28 0.032878415 ubox
21 29 0.019040538 ubox
21 46 0.061226564 ubox
21 47 0.094329997 ubox
21 48 0.045817997 ubox
21 49 0.032457849 ubox
22 28 0.021325956 ubox
22 29 0.003271649 ubox
22 46 0.093396658 ubox
22 47 0.041977402 ubox
22 48 0.038539684 ubox
23 27 0.021969371 ubox
23 31 0.012806209 ubox
23 45 0.097128601 ubox
23 54 0.020751529 ubox
24 30 0.012861852 ubox
24 46 0.061445884 ubox
24 53 0.020821478 ubox
25 31 0.003537445 ubox
25 41 0.005735564 ubox
25 45 0.067044584 ubox
25 54 0.018492149 ubox
26 30 0.003316249 ubox
26 40 0.005717267 ubox
26 47 0.012075839 ubox
26 51 0.020812088 ubox
26 53 0.018477385 ubox
27 46 0.016286801 ubox
27 47 0.004013934 ubox
27 50 0.020776559 ubox
27 52 0.018414214 ubox
28 38 0.003391396 ubox
28 43 0.142442972 ubox
28 44 0.017675201 ubox
28 45 0.014966543 ubox
28 55 0.078986493 ubox
29 38 0.024266240 ubox
29 42 0.142913887 ubox
29 43 0.016714929 ubox
29 44 0.014393988 ubox
29 54 0.056283892 ubox
29 55 0.968174733 ubox
30 37 0.024398847 ubox
30 41 0.143103969 ubox
30 42 0.015589153 ubox
30 43 0.013784045 ubox
30 54 0.980976839 ubox
31 36 0.024416858 ubox
31 40 0.142405615 ubox
31 49 0.011639325 ubox
31 50 0.003272942 ubox
31 53 0.982646939 ubox
32 40 0.023130652 ubox
32 48 0.011659613 ubox
32 49 0.003320274 ubox
32 52 0.982649790 ubox
33 39 0.026620721 ubox
33 47 0.011654702 ubox
33 48 0.003370966 ubox
33 50 0.007219849 ubox
33 51 0.981709914 ubox
34 46 0.011678887 ubox
34 47 0.003524061 ubox
34 49 0.015009620 ubox
34 50 0.970537290 ubox
36 54 0.082484816 ubox
37 47 0.331930560 ubox
37 48 0.282552234 ubox
37 49 0.067917979 ubox
37 50 0.016627195 ubox
37 51 0.025981923 ubox
37 53 0.082613474 ubox
38 46 0.347742745 ubox
38 47 0.290076398 ubox
38 48 0.078122252 ubox
38 49 0.071068403 ubox
38 50 0.032778782 ubox
38 52 0.082679171 ubox
40 54 0.068204452 ubox
41 47 0.208793214 ubox
41 48 0.070569842 ubox
41 49 0.817221823 ubox
41 50 0.128747618 ubox
41 53 0.068349790 ubox
42 46 0.207575048 ubox
42 47 0.071046413 ubox
42 48 0.817723029 ubox
42 49 0.157401396 ubox
42 50 0.062515711 ubox
42 52 0.068154020 ubox
43 47 0.811793534 ubox
43 48 0.156916431 ubox
43 49 0.076599240 ubox
43 50 0.058454947 ubox
43 52 0.003219432 ubox
44 48 0.076191475 ubox
44 49 0.058592236 ubox
44 50 0.041621641 ubox
44 53 0.036680220 ubox
45 49 0.041488922 ubox
45 52 0.037625708 ubox
46 55 0.033786427 ubox
47 54 0.034021167 ubox
47 55 0.022361222 ubox
48 54 0.022638072 ubox
48 55 0.025327420 ubox
49 54 0.025632747 ubox
49 55 0.005204420 ubox
50 54 0.005191397 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
