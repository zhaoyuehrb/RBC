%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGAGAUGAACUUUCUGGAAGCAGACCCAUCUAUGCUUUGACCUGAUCAUGGAAGACCCUGAGCCCUAUAAACUCCUUUGAAUCCCUGUCCCGGGAACAGGGACACCCAAUCAAUGCCUCACACACAGCCUGGGGAAUCCACAGCUGAGCCAGCCCUCCUACAACAUUUCUUGGACAAAGAGUACUGAAAAAUUUGGUGCGGCAUGAAAGG\
) } def
/len { sequence length } bind def

/coor [
[120.76306915 210.27314758]
[119.52313995 225.40017700]
[112.89890289 239.05609131]
[101.78623962 249.39404297]
[87.68804169 255.01589966]
[72.51097870 255.16134644]
[58.30761719 249.81072998]
[46.99885559 239.68768311]
[40.11410141 226.16123962]
[38.58446884 211.06074524]
[42.61682129 196.42843628]
[51.66582108 184.24319458]
[64.50765991 176.15298462]
[79.40559387 173.25193787]
[82.02230835 158.48193359]
[84.63902283 143.71194458]
[87.25572968 128.94194031]
[89.87244415 114.17195129]
[83.47049713 110.26490021]
[70.66660309 102.45079041]
[64.26465607 98.54373932]
[52.32554626 107.62435913]
[40.38643646 116.70497894]
[28.44732857 125.78560638]
[16.50821877 134.86622620]
[4.56911039 143.94685364]
[6.58850145 159.17240906]
[0.70973736 173.36167908]
[-11.48582363 182.69784546]
[-26.71763802 184.66949463]
[-40.88842010 178.74629211]
[-50.18630600 166.52153015]
[-52.11021042 151.28359985]
[-46.14260864 137.13145447]
[-33.88875961 127.87193298]
[-18.64488411 125.99580383]
[-4.51151085 132.00773621]
[7.42759800 122.92711639]
[19.36670685 113.84649658]
[31.30581474 104.76587677]
[43.24492264 95.68524933]
[55.18403244 86.60462952]
[55.78613281 79.12883759]
[40.83456421 77.92440796]
[42.03922272 62.97286224]
[56.99032974 64.17725372]
[57.59242630 56.70146179]
[47.26048660 45.82713318]
[36.92854691 34.95280457]
[26.59660339 24.07847786]
[20.37965202 21.84319496]
[16.76532936 17.46249962]
[16.12740135 12.73218822]
[6.11761856 1.56060517]
[-3.89216352 -9.61097717]
[-18.88172340 -6.56790113]
[-33.28678131 -11.40433502]
[-43.27055359 -22.72646713]
[-46.22687531 -37.42735672]
[-41.45994949 -51.53912354]
[-51.46973038 -62.71070862]
[-61.47951126 -73.88229370]
[-71.48929596 -85.05387115]
[-81.49907684 -96.22545624]
[-97.04238129 -97.24695587]
[-107.03457642 -108.71912384]
[-105.96494293 -123.53099060]
[-115.97473145 -134.70257568]
[-125.98451233 -145.87416077]
[-139.15675354 -138.56391907]
[-153.62557983 -134.36856079]
[-168.66522217 -133.49851990]
[-183.52130127 -135.99743652]
[-197.44863892 -141.73997498]
[-209.74865723 -150.43809509]
[-219.80439758 -161.65548706]
[-227.11145020 -174.82951355]
[-231.30329895 -189.29934692]
[-232.16969299 -204.33920288]
[-229.66717529 -219.19467163]
[-223.92124939 -233.12062073]
[-215.22015381 -245.41853333]
[-204.00032043 -255.47155762]
[-190.82453918 -262.77542114]
[-176.35368347 -266.96374512]
[-161.31362915 -267.82650757]
[-146.45875549 -265.32037354]
[-132.53419495 -259.57110596]
[-120.23839569 -250.86701965]
[-110.18810272 -239.64474487]
[-102.88743591 -226.46719360]
[-98.70259094 -211.99533081]
[-97.84348297 -196.95506287]
[-100.35321045 -182.10079956]
[-106.10587311 -168.17764282]
[-114.81292725 -155.88394165]
[-104.80314636 -144.71235657]
[-94.79336548 -133.54077148]
[-79.95336151 -132.98399353]
[-69.64287567 -121.79701996]
[-70.32749176 -106.23523712]
[-60.31771088 -95.06365204]
[-50.30792999 -83.89207458]
[-40.29814911 -72.72048950]
[-30.28836632 -61.54890823]
[-15.73989010 -64.74381256]
[-1.45052755 -60.19737625]
[8.71174526 -49.03518295]
[11.94366646 -34.18757248]
[7.27941942 -19.62075996]
[17.28920174 -8.44917679]
[27.29898453 2.72240567]
[37.47093201 13.74653721]
[47.80287170 24.62086487]
[58.13481522 35.49519348]
[68.46675110 46.36951828]
[116.85894775 92.37306976]
[131.84893799 92.92089844]
[146.83892822 93.46872711]
[161.82893372 94.01655579]
[176.81892395 94.56438446]
[190.89247131 87.33625793]
[203.32865906 95.53322601]
[218.31866455 96.08105469]
[233.30865479 96.62888336]
[241.99581909 93.81563568]
[248.51321411 97.29582214]
[263.49359131 98.06262207]
[277.85760498 93.74113464]
[289.92813110 84.83592987]
[301.99862671 75.93072510]
[314.06915283 67.02552032]
[319.11495972 59.41493988]
[326.38174438 58.07991409]
[338.58108521 49.35203171]
[350.71633911 40.53525162]
[362.78683472 31.63004875]
[368.84786987 16.39207268]
[385.11175537 14.29015160]
[394.84762573 27.48656273]
[388.04000854 42.40597153]
[371.69204712 43.70056534]
[359.62152100 52.60577011]
[356.10629272 59.10432434]
[347.30895996 61.55137634]
[335.10961914 70.27925873]
[322.97436523 79.09603882]
[310.90383911 88.00124359]
[298.83331299 96.90644836]
[286.76281738 105.81165314]
[287.96313477 113.21497345]
[301.98648071 118.53901672]
[290.36373901 128.02163696]
[291.56405640 135.42495728]
[305.82989502 140.06021118]
[320.09576416 144.69546509]
[334.05056763 137.77445984]
[348.45214844 142.67848206]
[354.96426392 156.02493286]
[369.23013306 160.66020203]
[383.49597168 165.29545593]
[393.40136719 153.79940796]
[406.91705322 146.98992920]
[421.96945190 145.87683105]
[436.26251221 150.59869385]
[447.62796021 160.40641785]
[454.35424805 173.78186035]
[455.44418335 188.67283630]
[469.71002197 193.30809021]
[484.59976196 187.33515930]
[498.48147583 195.37734985]
[500.70635986 211.26538086]
[489.56765747 222.81130981]
[473.61001587 221.15809631]
[465.07476807 207.57394409]
[450.80892944 202.93869019]
[441.17443848 214.34509277]
[427.87088013 221.21246338]
[412.91122437 222.46661377]
[398.57244873 217.88543701]
[387.04904175 208.13734436]
[380.11715698 194.68403625]
[378.86071777 179.56129456]
[364.59487915 174.92604065]
[350.32901001 170.29078674]
[337.21575928 177.26055908]
[322.68212891 172.76296997]
[315.46047974 158.96131897]
[301.19464111 154.32606506]
[286.92880249 149.69081116]
[278.20697021 161.89447021]
[264.37200928 167.69052124]
[249.55607605 165.34780884]
[238.18431091 155.56607056]
[233.65312195 141.26681519]
[237.31590271 126.72088623]
[248.07862854 116.27275848]
[262.72680664 113.04300690]
[247.74641418 112.27620697]
[232.76081848 111.61887360]
[217.77082825 111.07104492]
[202.78083801 110.52321625]
[189.77947998 117.79052734]
[176.27108765 109.55438232]
[161.28109741 109.00655365]
[146.29110718 108.45871735]
[131.30111694 107.91088867]
[116.31111908 107.36306000]
[104.64244080 116.78866577]
[102.02572632 131.55865479]
[99.40901947 146.32865906]
[96.79230499 161.09864807]
[94.17559052 175.86865234]
[107.17012787 183.71124268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 213]
[15 212]
[16 211]
[17 210]
[18 209]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[47 116]
[48 115]
[49 114]
[50 113]
[53 112]
[54 111]
[55 110]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[67 98]
[68 97]
[69 96]
[117 208]
[118 207]
[119 206]
[120 205]
[121 204]
[123 202]
[124 201]
[125 200]
[127 199]
[128 198]
[129 150]
[130 149]
[131 148]
[132 147]
[134 146]
[135 145]
[136 143]
[137 142]
[154 190]
[155 189]
[156 188]
[159 185]
[160 184]
[161 183]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
