%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUGCUAGGGCCGAGCUAGUGGGGUGAGGCGAGAGGCUCUGGAAGAGACUCGGUGGUUGCUAAGGCGGGAGGUCACAGAGCGCGGCGCAGGGAUUGGGCCGUGUUGGGGGAGGUGUGUGGUGAUUGGGCGGCGCCCAGGAGGCGCCCGGGUGAGGCACGGGUGCGCAAGCGGGAGUUCCGGCUGGAGACCCGUGCUCUGGGCCGGCGCCUUCACC\
) } def
/len { sequence length } bind def

/coor [
[99.68871307 189.24668884]
[102.15683746 170.02278137]
[102.37300110 155.02435303]
[102.58915710 140.02590942]
[81.48851013 140.72814941]
[60.79045105 129.99313354]
[46.71136856 108.69810486]
[36.65301132 119.82597351]
[26.59465027 130.95384216]
[16.53629112 142.08169556]
[6.47793198 153.20956421]
[-3.58042765 164.33743286]
[-13.63878727 175.46530151]
[-23.69714737 186.59317017]
[-22.02386856 205.46823120]
[-34.46909714 219.33094788]
[-52.77564240 219.68295288]
[-62.50914001 231.09605408]
[-72.24263763 242.50915527]
[-67.02976227 256.95635986]
[-69.75466156 272.07159424]
[-79.68437195 283.78894043]
[-94.14783478 288.95651245]
[-109.25445557 286.18426514]
[-120.94063568 276.21786499]
[-126.06284332 261.73828125]
[-123.24323273 246.64041138]
[-113.24027252 234.98553467]
[-98.74468994 229.90873718]
[-83.65574646 232.77566528]
[-73.92224884 221.36254883]
[-64.18874359 209.94944763]
[-67.53467560 199.04844666]
[-65.18083954 187.76864624]
[-57.59836578 178.93368530]
[-46.58172607 174.81193542]
[-34.82501221 176.53480530]
[-24.76665306 165.40693665]
[-14.70829391 154.27906799]
[-4.64993429 143.15121460]
[5.40842533 132.02334595]
[15.46678448 120.89547729]
[25.52514458 109.76760864]
[35.58350372 98.63974762]
[33.76442719 91.36369324]
[22.98093224 101.79039764]
[8.55942154 97.66486359]
[4.92158842 83.11267090]
[15.70531178 72.68620300]
[30.12627983 76.81158447]
[28.30720329 69.53553009]
[14.19545746 64.45039368]
[0.08371121 59.36525345]
[-15.52227306 61.96599197]
[-24.87285995 50.37221146]
[-38.98460770 45.28707504]
[-53.09635162 40.20193863]
[-67.20809937 35.11680222]
[-81.46052551 30.44044876]
[-95.84179688 26.17676353]
[-110.22307587 21.91308022]
[-124.60434723 17.64939499]
[-140.41642761 21.99795341]
[-151.89678955 10.28754711]
[-147.23539734 -5.43515968]
[-131.22750854 -8.99599552]
[-120.34066010 3.26812243]
[-105.95938873 7.53180695]
[-91.57811737 11.79549122]
[-77.19684601 16.05917549]
[-74.67471313 14.84704018]
[-71.52168274 14.55825996]
[-68.08609009 15.43766975]
[-64.79821777 17.59995842]
[-62.12296295 21.00505447]
[-48.01121521 26.09019089]
[-33.89947128 31.17532730]
[-19.78772354 36.26046371]
[-5.19110632 33.29600143]
[5.16884756 45.25350952]
[19.28059387 50.33864594]
[33.39234161 55.42377853]
[43.53062057 44.36867905]
[37.24581528 30.74879265]
[30.96101379 17.12891006]
[24.67621040 3.50902510]
[18.39140701 -10.11085892]
[12.10660267 -23.73074341]
[-0.70089728 -33.01936722]
[0.99195158 -47.81745911]
[-5.29285192 -61.43734360]
[-19.78853607 -68.31154633]
[-23.31155205 -83.96299744]
[-13.15934086 -96.38523865]
[2.88018799 -96.04899597]
[12.50288105 -83.21220398]
[8.32703209 -67.72214508]
[14.61183548 -54.10226059]
[26.96980476 -45.78782272]
[25.72648811 -30.01554680]
[32.01129150 -16.39566231]
[38.29609299 -2.77577829]
[44.58089828 10.84410572]
[50.86569977 24.46399117]
[57.15050507 38.08387375]
[64.64739227 38.30001068]
[65.07965851 23.30623817]
[65.51192474 8.31246853]
[65.94444275 -6.68129396]
[80.93820190 -6.24852705]
[80.50569916 8.74473858]
[80.07342529 23.73850822]
[79.64115906 38.73227692]
[87.13804626 38.94841385]
[94.19707489 25.71323013]
[95.47310638 16.67376518]
[101.45439148 12.33926296]
[108.70341492 -0.79282069]
[115.95243835 -13.92490482]
[123.20146942 -27.05698776]
[123.09686279 -42.87784958]
[136.02134705 -50.28102875]
[143.27037048 -63.41311264]
[138.64710999 -78.52605438]
[146.13810730 -92.44225311]
[161.29908752 -96.90546417]
[175.13531494 -89.26775360]
[179.43798828 -74.06043243]
[171.65440369 -60.30574036]
[156.40245056 -56.16408920]
[149.15342712 -43.03200531]
[149.77653503 -28.15043831]
[136.33355713 -19.80796242]
[129.08451843 -6.67587900]
[121.83550262 6.45620489]
[114.58647156 19.58828926]
[107.43225861 32.77226257]
[100.37322998 46.00744629]
[140.16453552 75.49137878]
[135.79478455 118.09724426]
[149.67356873 123.78752899]
[163.55235291 129.47781372]
[177.43113708 135.16810608]
[191.30992126 140.85839844]
[205.18870544 146.54867554]
[219.06748962 152.23896790]
[232.94627380 157.92926025]
[246.82505798 163.61953735]
[255.94706726 163.97875977]
[260.86187744 169.49311829]
[274.65722656 175.38281250]
[287.94515991 167.58940125]
[303.09704590 169.09707642]
[314.32305908 179.11911011]
[317.45755005 193.65571594]
[331.25286865 199.54541016]
[345.09030151 205.33555603]
[358.96908569 211.02583313]
[372.84786987 216.71612549]
[386.72665405 222.40641785]
[400.60543823 228.09669495]
[414.48422241 233.78698730]
[428.36300659 239.47726440]
[442.24179077 245.16755676]
[455.41601562 237.18347168]
[470.58807373 238.47264099]
[481.95733643 248.33184814]
[485.30099487 262.82177734]
[499.17977905 268.51205444]
[508.30178833 268.87127686]
[513.21661377 274.38565063]
[527.01196289 280.27536011]
[542.74182129 278.57803345]
[551.40893555 290.69125366]
[565.20428467 296.58096313]
[581.41162109 294.08016968]
[591.46868896 307.03344727]
[585.02966309 322.11557007]
[568.71838379 323.81134033]
[559.31457520 310.37628174]
[545.51928711 304.48660278]
[530.77612305 306.60519409]
[521.12225342 294.07067871]
[507.32690430 288.18099976]
[493.48947144 282.39083862]
[479.61068726 276.70056152]
[467.05758667 284.67282104]
[452.03948975 283.71325684]
[440.32919312 273.98071289]
[436.55151367 259.04635620]
[422.67272949 253.35604858]
[408.79394531 247.66577148]
[394.91516113 241.97547913]
[381.03637695 236.28520203]
[367.15759277 230.59490967]
[353.27880859 224.90461731]
[339.40002441 219.21434021]
[332.02261353 219.58512878]
[325.36318970 213.34074402]
[311.56784058 207.45104980]
[298.90115356 215.24159241]
[283.89843750 214.06571960]
[272.32962036 204.16542053]
[268.76751709 189.17816162]
[254.97218323 183.28846741]
[241.13476562 177.49832153]
[227.25598145 171.80804443]
[213.37719727 166.11775208]
[199.49841309 160.42745972]
[185.61962891 154.73718262]
[171.74084473 149.04689026]
[157.86206055 143.35659790]
[143.98327637 137.66632080]
[130.10449219 131.97602844]
[117.58760071 140.24206543]
[117.37143707 155.24050903]
[117.15528107 170.23895264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 217]
[3 216]
[4 215]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[12 39]
[13 38]
[14 37]
[17 32]
[18 31]
[19 30]
[51 82]
[52 81]
[53 80]
[55 78]
[56 77]
[57 76]
[58 75]
[59 70]
[60 69]
[61 68]
[62 67]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[90 98]
[91 97]
[114 138]
[115 137]
[117 136]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[140 214]
[141 213]
[142 212]
[143 211]
[144 210]
[145 209]
[146 208]
[147 207]
[148 206]
[150 205]
[151 204]
[155 200]
[156 199]
[157 197]
[158 196]
[159 195]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[168 186]
[169 185]
[171 184]
[172 183]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
