%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CPHXL)
} def

/sequence { (\
UCUCAGUUGCUUGCUGGUCUCCGUGAAGUCCAGGUCUUCUACCCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.012292035 ubox
1 26 0.015134830 ubox
1 34 0.012547026 ubox
2 16 0.010965588 ubox
2 17 0.147168121 ubox
2 25 0.016182770 ubox
2 28 0.008112863 ubox
2 33 0.016950997 ubox
2 34 0.010450370 ubox
2 48 0.043404003 ubox
3 16 0.023245342 ubox
3 17 0.532436169 ubox
3 26 0.015491850 ubox
3 27 0.006365614 ubox
3 32 0.016287098 ubox
3 33 0.008163419 ubox
3 34 0.011714406 ubox
3 47 0.042638133 ubox
4 13 0.128186645 ubox
4 16 0.693917987 ubox
4 25 0.016810299 ubox
4 33 0.014774197 ubox
5 11 0.042104622 ubox
5 12 0.125285159 ubox
5 15 0.697199223 ubox
5 20 0.011085282 ubox
5 24 0.016611893 ubox
5 37 0.067440533 ubox
5 38 0.014168233 ubox
5 40 0.185264453 ubox
6 10 0.045824044 ubox
6 11 0.095338614 ubox
6 14 0.698833295 ubox
6 19 0.011789546 ubox
6 36 0.071799855 ubox
6 37 0.014896418 ubox
6 39 0.194267788 ubox
6 42 0.291433649 ubox
7 13 0.693848945 ubox
7 33 0.008974046 ubox
7 34 0.009228008 ubox
7 41 0.287983944 ubox
7 47 0.047730504 ubox
7 48 0.005229234 ubox
8 32 0.016710131 ubox
8 33 0.005847834 ubox
8 41 0.033287238 ubox
8 46 0.054836867 ubox
8 47 0.007497062 ubox
9 18 0.031922158 ubox
9 24 0.003391885 ubox
9 29 0.102280035 ubox
9 31 0.015394930 ubox
9 35 0.149966316 ubox
9 40 0.036752448 ubox
9 45 0.055621193 ubox
10 17 0.033263847 ubox
10 23 0.003439705 ubox
10 28 0.108197159 ubox
10 33 0.006826349 ubox
10 34 0.156785625 ubox
10 48 0.236335841 ubox
11 16 0.032412441 ubox
11 26 0.018781488 ubox
11 27 0.107110396 ubox
11 32 0.005359127 ubox
11 33 0.101786975 ubox
11 34 0.018578946 ubox
11 47 0.242464154 ubox
11 48 0.003802817 ubox
12 25 0.024315227 ubox
12 26 0.105312174 ubox
12 32 0.086370254 ubox
12 33 0.005595115 ubox
12 41 0.011561334 ubox
12 46 0.243499280 ubox
12 47 0.005381089 ubox
13 24 0.041356587 ubox
13 29 0.016236848 ubox
13 31 0.082104349 ubox
13 35 0.117769651 ubox
13 40 0.012199930 ubox
13 45 0.242968170 ubox
14 23 0.042401922 ubox
14 28 0.024335482 ubox
14 33 0.667816725 ubox
14 34 0.093100488 ubox
14 48 0.013254001 ubox
15 23 0.098417160 ubox
15 27 0.023487658 ubox
15 32 0.687661174 ubox
15 33 0.046020369 ubox
15 41 0.051016339 ubox
15 46 0.046976794 ubox
15 47 0.010219593 ubox
16 22 0.111782956 ubox
16 30 0.017525979 ubox
16 31 0.693693913 ubox
16 37 0.004315160 ubox
16 39 0.014884283 ubox
16 40 0.052395105 ubox
16 43 0.073310096 ubox
16 44 0.045760360 ubox
16 45 0.054693960 ubox
17 21 0.110604949 ubox
17 24 0.004839434 ubox
17 29 0.017611107 ubox
17 30 0.694144006 ubox
17 35 0.003470408 ubox
17 36 0.014166039 ubox
17 37 0.003434032 ubox
17 38 0.018310885 ubox
17 39 0.056679928 ubox
17 42 0.074857137 ubox
17 43 0.047812675 ubox
17 44 0.055986955 ubox
18 23 0.005594688 ubox
18 26 0.140175292 ubox
18 28 0.033618944 ubox
18 34 0.008509154 ubox
18 41 0.071034077 ubox
19 25 0.144122609 ubox
19 28 0.683175967 ubox
19 33 0.011075518 ubox
19 34 0.008961919 ubox
19 48 0.061959393 ubox
20 26 0.175948688 ubox
20 27 0.633166179 ubox
20 32 0.010421636 ubox
20 33 0.008438013 ubox
20 34 0.005060797 ubox
20 47 0.061919102 ubox
21 25 0.242169410 ubox
21 33 0.006586156 ubox
21 34 0.121068867 ubox
22 33 0.121621248 ubox
23 29 0.003470361 ubox
23 42 0.544728535 ubox
24 32 0.103936160 ubox
24 41 0.536198846 ubox
24 46 0.019240136 ubox
25 31 0.109110649 ubox
25 36 0.022890215 ubox
25 39 0.661349465 ubox
25 40 0.091809850 ubox
25 45 0.020931626 ubox
26 35 0.022622064 ubox
26 38 0.667666852 ubox
27 37 0.667714812 ubox
27 38 0.012634970 ubox
27 40 0.012451664 ubox
28 35 0.005063625 ubox
28 36 0.667166915 ubox
28 37 0.012138497 ubox
28 39 0.013170427 ubox
28 42 0.023394008 ubox
29 34 0.102097314 ubox
29 41 0.022592646 ubox
32 38 0.004637755 ubox
32 40 0.033060555 ubox
33 37 0.003436190 ubox
33 39 0.035131104 ubox
33 40 0.036095240 ubox
33 43 0.212286372 ubox
33 44 0.090906441 ubox
33 45 0.062826618 ubox
34 38 0.023526915 ubox
34 39 0.064029577 ubox
34 42 0.228173889 ubox
34 43 0.097153341 ubox
34 44 0.064539718 ubox
35 41 0.217599919 ubox
36 48 0.059909024 ubox
37 47 0.061385158 ubox
37 48 0.008959160 ubox
38 46 0.057859797 ubox
38 47 0.014206352 ubox
39 48 0.062995308 ubox
40 47 0.063924369 ubox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
16 31 0.9500000 lbox
17 30 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
showpage
end
%%EOF
