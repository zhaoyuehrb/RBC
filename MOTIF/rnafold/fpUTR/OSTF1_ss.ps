%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCUCCGGCGGCCGCGGGGCGGGGCGGAGCACUCGGCGGAGCCGCUCUGCCUGCGUCCGCUCUUCCCGCAGCCAAGGGUGGGCGCCGGUCCUAGGAGGCGCACGGUUGUAAGCCAGACAAAAAGAACUGGGGUGCCCGGAGUGCCAGGUGGCGGGCAAGCGGUGGGCUUUUCGGCGGGGUCUUUAGGAUUUGCAGCUCCAGGAAGCGAG\
) } def
/len { sequence length } bind def

/coor [
[85.57711029 183.77510071]
[82.21823120 168.08760071]
[92.50000000 155.77236938]
[92.50000000 140.77236938]
[92.50000000 125.77237701]
[92.50000000 110.77237701]
[81.21019745 100.89612579]
[66.34340668 102.89073944]
[51.47661591 104.88536072]
[36.60982132 106.87997437]
[21.74303055 108.87458801]
[6.87623835 110.86920929]
[-5.77251768 120.37287140]
[-19.41562843 114.39668274]
[-34.28242111 116.39129639]
[-62.67636490 152.33219910]
[-77.08572388 156.49998474]
[-91.49507904 160.66777039]
[-105.90443420 164.83555603]
[-120.31378937 169.00334167]
[-134.72314453 173.17112732]
[-142.09667969 178.56135559]
[-149.37696838 177.29222107]
[-163.84649658 181.24603271]
[-178.31604004 185.19982910]
[-192.78556824 189.15364075]
[-207.25509644 193.10745239]
[-221.72463989 197.06126404]
[-236.19416809 201.01506042]
[-250.66369629 204.96887207]
[-265.10354614 209.02978516]
[-279.51290894 213.19757080]
[-293.92227173 217.36535645]
[-297.53735352 221.12863159]
[-301.80737305 222.94755554]
[-305.88226318 222.89816284]
[-309.06518555 221.38282776]
[-323.64553833 224.90612793]
[-338.22586060 228.42941284]
[-352.80621338 231.95269775]
[-367.38656616 235.47599792]
[-381.96691895 238.99928284]
[-396.54724121 242.52258301]
[-410.52304077 252.12014771]
[-423.61444092 241.34739685]
[-416.88674927 225.78544617]
[-400.07052612 227.94223022]
[-385.49020386 224.41894531]
[-370.90985107 220.89564514]
[-356.32949829 217.37236023]
[-341.74917603 213.84907532]
[-327.16882324 210.32577515]
[-312.58847046 206.80249023]
[-298.09005737 202.95599365]
[-283.68069458 198.78820801]
[-269.27133179 194.62042236]
[-263.71975708 189.74259949]
[-254.61750793 190.49934387]
[-240.14797974 186.54553223]
[-225.67843628 182.59172058]
[-211.20890808 178.63792419]
[-196.73937988 174.68411255]
[-182.26983643 170.73030090]
[-167.80030823 166.77648926]
[-153.33078003 162.82269287]
[-138.89093018 158.76177979]
[-124.48157501 154.59399414]
[-110.07221985 150.42620850]
[-95.66286469 146.25842285]
[-81.25350952 142.09062195]
[-66.84415436 137.92283630]
[-63.64566422 123.26713562]
[-60.44744873 108.61273956]
[-71.81011963 98.82040405]
[-83.17278290 89.02807617]
[-99.11829376 83.26811218]
[-97.99758148 66.35124207]
[-81.43159485 62.74509811]
[-73.38045502 77.66540527]
[-62.01778412 87.45774078]
[-50.65511703 97.25006866]
[-36.27703857 101.52450562]
[-21.41024590 99.52989197]
[-9.82486153 90.16889954]
[4.88162136 96.00241852]
[19.74841309 94.00779724]
[34.61520386 92.01318359]
[49.48199844 90.01856232]
[64.34878540 88.02394867]
[79.21558380 86.02933502]
[111.44064331 84.37517548]
[125.65054321 79.57112885]
[139.86042786 74.76708221]
[154.07032776 69.96303558]
[161.19703674 64.25045013]
[168.52651978 65.19477844]
[182.80604553 60.60182190]
[197.08557129 56.00886917]
[211.36509705 51.41591644]
[218.62759399 37.63571930]
[233.17448425 33.18122864]
[246.26704407 40.18983459]
[260.54656982 35.59688187]
[274.82608032 31.00392723]
[282.03665161 25.39757538]
[289.35134888 26.45040894]
[303.69735718 22.06955910]
[318.04339600 17.68870735]
[332.38940430 13.30785561]
[343.32815552 1.87745976]
[357.76028442 5.56033564]
[372.10629272 1.17948389]
[386.45230103 -3.20136762]
[390.01123047 -7.01780081]
[394.25384521 -8.89979172]
[398.32901001 -8.91079140]
[401.53402710 -7.44279528]
[416.06057739 -11.18175507]
[430.58709717 -14.92071438]
[445.11364746 -18.65967369]
[446.42474365 -29.84250259]
[451.06655884 -40.07139206]
[458.58383179 -48.38228226]
[468.25109863 -53.99730301]
[479.14285278 -56.39756393]
[490.22189331 -55.37108231]
[500.43829346 -51.03139114]
[508.82879639 -43.80523300]
[514.60772705 -34.39066315]
[529.33026123 -37.26249695]
[544.05273438 -40.13432693]
[558.77526855 -43.00616074]
[573.49780273 -45.87799072]
[588.22033691 -48.74982452]
[600.28387451 -58.98611069]
[614.25701904 -53.82864761]
[628.97955322 -56.70048141]
[643.70208740 -59.57231140]
[658.42462158 -62.44414520]
[673.14709473 -65.31597900]
[680.30615234 -81.97518158]
[695.89575195 -90.92309570]
[713.57934570 -88.74034119]
[726.29870605 -76.48834991]
[740.92962646 -79.79520416]
[755.56060791 -83.10205078]
[770.19152832 -86.40889740]
[776.19641113 -100.71698761]
[789.48193359 -108.73411560]
[804.93957520 -107.37751770]
[816.62554932 -97.16885376]
[820.04644775 -82.03354645]
[813.88671875 -67.79143524]
[800.51501465 -59.91890717]
[785.07293701 -61.44310760]
[773.49841309 -71.77794647]
[758.86743164 -68.47109985]
[744.23645020 -65.16424561]
[729.60552979 -61.85740280]
[726.51745605 -50.11780930]
[718.68493652 -40.74956512]
[707.54724121 -35.56967926]
[695.19183350 -35.61668396]
[683.96343994 -40.94302368]
[676.01898193 -50.59345627]
[661.29644775 -47.72162247]
[646.57391357 -44.84979248]
[631.85137939 -41.97795868]
[617.12884521 -39.10612869]
[606.11840820 -29.07525253]
[591.09216309 -34.02730560]
[576.36962891 -31.15547180]
[561.64709473 -28.28363991]
[546.92462158 -25.41180801]
[532.20208740 -22.53997612]
[517.47955322 -19.66814423]
[512.31140137 -1.48214483]
[498.55993652 11.61130619]
[479.98315430 15.91922665]
[461.71633911 10.16538525]
[448.85260010 -4.13314056]
[434.32604980 -0.39418089]
[419.79953003 3.34477878]
[405.27301025 7.08373833]
[390.83316040 11.14464760]
[376.48715210 15.52549839]
[362.14111328 19.90635109]
[352.22848511 31.02339745]
[336.77026367 27.65386963]
[322.42422485 32.03472137]
[308.07821655 36.41557312]
[293.73220825 40.79642487]
[279.41903687 45.28345108]
[265.13952637 49.87640381]
[250.86000061 54.46936035]
[244.30834961 67.79645538]
[229.89230347 72.65777588]
[215.95805359 65.69543457]
[201.67852783 70.28839111]
[187.39900208 74.88134766]
[173.11947632 79.47429657]
[158.87437439 84.17292786]
[144.66448975 88.97697449]
[130.45458984 93.78102875]
[116.24468994 98.58507538]
[107.50000000 110.77237701]
[107.50000000 125.77237701]
[107.50000000 140.77236938]
[107.50000000 155.77236938]
[117.78176880 168.08760071]
[114.42288971 183.77510071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[6 206]
[7 90]
[8 89]
[9 88]
[10 87]
[11 86]
[12 85]
[14 83]
[15 82]
[16 71]
[17 70]
[18 69]
[19 68]
[20 67]
[21 66]
[23 65]
[24 64]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 56]
[32 55]
[33 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[73 81]
[74 80]
[75 79]
[91 205]
[92 204]
[93 203]
[94 202]
[96 201]
[97 200]
[98 199]
[99 198]
[102 195]
[103 194]
[104 193]
[106 192]
[107 191]
[108 190]
[109 189]
[111 187]
[112 186]
[113 185]
[117 184]
[118 183]
[119 182]
[120 181]
[129 176]
[130 175]
[131 174]
[132 173]
[133 172]
[134 171]
[136 169]
[137 168]
[138 167]
[139 166]
[140 165]
[144 159]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
