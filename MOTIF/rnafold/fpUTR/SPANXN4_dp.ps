%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPANXN4)
} def

/sequence { (\
AAAGCUCUGGGACAGCCCACUGGAAAGCUUCAAUACAGCUGUGGAAAUCUGCACCCUAGAAGAUCCUAGUACAGAAAUUCUACAACCAACCAUAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.027648471 ubox
2 29 0.024732870 ubox
2 30 0.687453182 ubox
3 21 0.097155901 ubox
3 29 0.762996638 ubox
3 30 0.015398546 ubox
3 40 0.214238893 ubox
4 16 0.019632427 ubox
4 20 0.105686572 ubox
4 28 0.772572699 ubox
4 39 0.257043921 ubox
5 15 0.019654875 ubox
5 23 0.142406530 ubox
5 27 0.771548305 ubox
5 38 0.257034037 ubox
5 62 0.006114742 ubox
6 12 0.003447832 ubox
6 14 0.018702406 ubox
6 22 0.138573202 ubox
6 23 0.170246001 ubox
6 24 0.479965272 ubox
6 26 0.572253803 ubox
6 37 0.241393696 ubox
6 60 0.010967794 ubox
6 61 0.004338143 ubox
6 75 0.003372072 ubox
7 11 0.004384544 ubox
7 15 0.014042338 ubox
7 22 0.309560950 ubox
7 23 0.618359575 ubox
7 27 0.012594693 ubox
7 38 0.010199417 ubox
7 59 0.012250144 ubox
7 74 0.003502849 ubox
8 14 0.014297806 ubox
8 19 0.808980987 ubox
8 22 0.467683803 ubox
8 26 0.013501888 ubox
8 32 0.015969078 ubox
8 35 0.081347236 ubox
8 37 0.011375201 ubox
8 58 0.012227460 ubox
8 73 0.003437271 ubox
8 88 0.065757726 ubox
8 92 0.056188880 ubox
8 94 0.005858622 ubox
9 13 0.014247258 ubox
9 17 0.045213332 ubox
9 18 0.955253133 ubox
9 21 0.231873282 ubox
9 29 0.004827611 ubox
9 30 0.007087690 ubox
9 31 0.016655868 ubox
9 34 0.077008507 ubox
9 36 0.012102081 ubox
9 55 0.003535777 ubox
9 56 0.006231915 ubox
9 57 0.011737898 ubox
9 72 0.003182796 ubox
9 87 0.070973108 ubox
9 91 0.062283957 ubox
9 93 0.004884042 ubox
10 16 0.045656161 ubox
10 17 0.955707086 ubox
10 18 0.071148076 ubox
10 20 0.229240417 ubox
10 21 0.026698555 ubox
10 28 0.005232572 ubox
10 29 0.012226863 ubox
10 30 0.014698877 ubox
10 31 0.017624346 ubox
10 54 0.003642075 ubox
10 55 0.006341402 ubox
10 56 0.011736365 ubox
10 86 0.070730925 ubox
10 87 0.016734504 ubox
10 90 0.061981999 ubox
10 91 0.017234260 ubox
11 16 0.951511581 ubox
11 17 0.073565070 ubox
11 20 0.027970310 ubox
11 28 0.014310826 ubox
11 29 0.008591235 ubox
11 30 0.016673191 ubox
11 31 0.083182656 ubox
11 54 0.006353214 ubox
11 55 0.011714529 ubox
11 86 0.017083672 ubox
11 90 0.017277544 ubox
12 29 0.012858670 ubox
12 30 0.082575483 ubox
12 42 0.018795371 ubox
13 22 0.110388644 ubox
13 41 0.020489896 ubox
13 51 0.012539318 ubox
14 21 0.110453116 ubox
14 29 0.098760725 ubox
14 40 0.023790032 ubox
14 50 0.012552791 ubox
15 20 0.109562896 ubox
15 28 0.101305931 ubox
15 39 0.025898184 ubox
15 49 0.012504535 ubox
16 23 0.033448202 ubox
16 27 0.100966087 ubox
16 38 0.025832891 ubox
16 44 0.003921498 ubox
17 22 0.033929800 ubox
17 23 0.079613258 ubox
17 43 0.003869795 ubox
17 44 0.012652713 ubox
18 22 0.079125557 ubox
18 41 0.003828488 ubox
18 43 0.012697295 ubox
19 40 0.005633952 ubox
19 42 0.012713345 ubox
20 27 0.074141779 ubox
20 38 0.162685714 ubox
20 41 0.012679883 ubox
21 26 0.075078328 ubox
21 32 0.215891399 ubox
21 35 0.006986718 ubox
21 37 0.164096131 ubox
21 82 0.003268544 ubox
21 88 0.295798382 ubox
21 92 0.251321859 ubox
21 94 0.005771287 ubox
22 29 0.026070669 ubox
22 30 0.004078136 ubox
22 31 0.233418819 ubox
22 34 0.006979280 ubox
22 36 0.164808377 ubox
22 81 0.003665448 ubox
22 87 0.322276387 ubox
22 91 0.281977851 ubox
22 93 0.004106069 ubox
22 97 0.004830857 ubox
23 28 0.028756250 ubox
23 29 0.005582358 ubox
23 30 0.227231100 ubox
23 31 0.093714325 ubox
23 80 0.003713670 ubox
23 86 0.320853300 ubox
23 90 0.280743076 ubox
23 96 0.003282288 ubox
23 97 0.010511277 ubox
24 29 0.210441580 ubox
24 30 0.093164113 ubox
24 79 0.003667329 ubox
24 96 0.010041519 ubox
25 29 0.071231701 ubox
25 78 0.003240042 ubox
26 40 0.443301579 ubox
27 39 0.531842042 ubox
28 38 0.532139146 ubox
29 37 0.512033468 ubox
29 38 0.009085398 ubox
29 95 0.007457895 ubox
30 37 0.039813634 ubox
30 94 0.011454228 ubox
32 40 0.004953026 ubox
33 93 0.026528313 ubox
33 96 0.004376779 ubox
34 92 0.026112426 ubox
34 94 0.009958291 ubox
34 95 0.004296984 ubox
35 40 0.005192477 ubox
35 42 0.003494873 ubox
35 93 0.010155555 ubox
36 41 0.003886971 ubox
38 70 0.005758865 ubox
39 69 0.005902203 ubox
39 74 0.003764601 ubox
40 53 0.005306726 ubox
40 68 0.005905098 ubox
40 73 0.003782307 ubox
40 84 0.804778714 ubox
40 88 0.007208255 ubox
40 94 0.007619274 ubox
41 52 0.008648467 ubox
41 54 0.007229893 ubox
41 67 0.005667092 ubox
41 72 0.003798159 ubox
41 83 0.998790516 ubox
41 86 0.005363763 ubox
41 87 0.005924324 ubox
41 93 0.008444954 ubox
42 51 0.008637258 ubox
42 53 0.007279076 ubox
42 71 0.003765674 ubox
42 82 0.998935491 ubox
42 85 0.004722380 ubox
42 92 0.008503297 ubox
43 50 0.008704147 ubox
43 52 0.007390589 ubox
43 66 0.006945413 ubox
43 80 0.029534769 ubox
43 81 0.998785832 ubox
43 91 0.008499620 ubox
44 49 0.008720556 ubox
44 65 0.006960203 ubox
44 79 0.029867164 ubox
44 80 0.999252308 ubox
44 90 0.008325464 ubox
45 64 0.006492688 ubox
45 78 0.051355691 ubox
45 79 0.993520607 ubox
46 78 0.927941068 ubox
46 79 0.049549351 ubox
47 64 0.004433315 ubox
47 78 0.064179490 ubox
48 60 0.005525498 ubox
48 63 0.006004848 ubox
48 75 0.978630927 ubox
48 77 0.037066496 ubox
49 59 0.005692378 ubox
49 62 0.006106582 ubox
49 74 0.999032834 ubox
50 58 0.005673017 ubox
50 61 0.006074143 ubox
50 71 0.004389714 ubox
50 73 0.998777238 ubox
50 84 0.003311771 ubox
51 57 0.005311607 ubox
51 70 0.008136336 ubox
51 72 0.996231788 ubox
51 83 0.003431143 ubox
52 69 0.011260804 ubox
53 70 0.478512153 ubox
54 69 0.375564607 ubox
56 62 0.006157397 ubox
56 69 0.922287348 ubox
57 61 0.005565801 ubox
57 68 0.984150452 ubox
57 71 0.007951040 ubox
57 82 0.010040415 ubox
58 67 0.995413185 ubox
58 70 0.007962861 ubox
58 81 0.010683679 ubox
59 65 0.091782625 ubox
59 66 0.990631114 ubox
59 80 0.010754786 ubox
60 64 0.101577982 ubox
60 79 0.010751785 ubox
61 67 0.009509127 ubox
61 78 0.010695704 ubox
61 81 0.004828282 ubox
62 66 0.009785709 ubox
62 80 0.005004877 ubox
63 79 0.004938766 ubox
64 75 0.010832349 ubox
65 74 0.010853095 ubox
66 74 0.003799666 ubox
67 73 0.003920082 ubox
69 83 0.005425361 ubox
70 82 0.005356116 ubox
71 81 0.004340746 ubox
73 81 0.006831619 ubox
74 80 0.007503146 ubox
75 79 0.006533855 ubox
2 30 0.9500000 lbox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
11 16 0.9500000 lbox
40 84 0.9500000 lbox
41 83 0.9500000 lbox
42 82 0.9500000 lbox
43 81 0.9500000 lbox
44 80 0.9500000 lbox
45 79 0.9500000 lbox
46 78 0.9500000 lbox
48 75 0.9500000 lbox
49 74 0.9500000 lbox
50 73 0.9500000 lbox
51 72 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
showpage
end
%%EOF
