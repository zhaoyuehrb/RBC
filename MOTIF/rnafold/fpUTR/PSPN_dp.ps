%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PSPN)
} def

/sequence { (\
UAGCUCCCAGCCCAGGCAGGGCAUAAAUUUGGGGCACAGCUCCCACUCUCAGGACCUGCCCGUCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.063731967 ubox
1 31 0.027008741 ubox
1 58 0.040254701 ubox
2 24 0.066944226 ubox
2 29 0.006917090 ubox
2 30 0.029130461 ubox
2 41 0.018222487 ubox
2 57 0.046278655 ubox
3 11 0.657734146 ubox
3 17 0.013041614 ubox
3 22 0.154888846 ubox
3 28 0.007537580 ubox
3 29 0.026549095 ubox
3 35 0.488378088 ubox
3 40 0.020210441 ubox
3 56 0.046770354 ubox
3 59 0.018201790 ubox
3 63 0.046929961 ubox
4 10 0.659146569 ubox
4 15 0.005728422 ubox
4 16 0.012961186 ubox
4 19 0.004275328 ubox
4 21 0.152237280 ubox
4 34 0.486120386 ubox
4 39 0.020216557 ubox
4 52 0.003251342 ubox
4 58 0.018136790 ubox
4 62 0.048587411 ubox
5 9 0.593850529 ubox
5 14 0.008970046 ubox
5 15 0.011209241 ubox
5 18 0.004795588 ubox
5 20 0.133995662 ubox
5 21 0.011430206 ubox
5 33 0.152376715 ubox
5 34 0.074487948 ubox
5 38 0.017210976 ubox
5 54 0.049399224 ubox
6 15 0.005942285 ubox
6 16 0.004204796 ubox
6 19 0.132733574 ubox
6 20 0.066308008 ubox
6 21 0.148018478 ubox
6 32 0.147015340 ubox
6 33 0.470924579 ubox
6 34 0.004918601 ubox
6 53 0.050197376 ubox
7 15 0.004597784 ubox
7 16 0.052484020 ubox
7 19 0.065790406 ubox
7 20 0.152742140 ubox
7 21 0.009599889 ubox
7 31 0.141171546 ubox
7 32 0.473316126 ubox
7 33 0.004799528 ubox
7 52 0.049956600 ubox
7 53 0.010970830 ubox
8 15 0.052854736 ubox
8 19 0.153011284 ubox
8 20 0.009784675 ubox
8 31 0.475632182 ubox
8 32 0.004581291 ubox
8 52 0.011617385 ubox
9 29 0.075170346 ubox
9 30 0.471754254 ubox
10 17 0.208104653 ubox
10 22 0.575047291 ubox
10 28 0.008651555 ubox
10 29 0.049080824 ubox
10 63 0.220415772 ubox
11 16 0.208232964 ubox
11 20 0.003510449 ubox
11 21 0.577545907 ubox
11 62 0.228460819 ubox
12 19 0.003833676 ubox
12 20 0.577548977 ubox
12 21 0.003583391 ubox
13 19 0.577179522 ubox
13 20 0.004176973 ubox
15 60 0.775154558 ubox
15 61 0.066833642 ubox
15 64 0.107216430 ubox
16 22 0.008796029 ubox
16 59 0.778336126 ubox
16 60 0.047332043 ubox
16 63 0.107610939 ubox
17 21 0.008735999 ubox
17 58 0.779778544 ubox
17 62 0.107290196 ubox
18 57 0.779574734 ubox
19 56 0.779687196 ubox
19 57 0.005970060 ubox
19 61 0.111106195 ubox
20 55 0.779341350 ubox
20 56 0.011864103 ubox
20 60 0.111179277 ubox
21 28 0.004200496 ubox
21 46 0.003296111 ubox
21 55 0.015607354 ubox
21 59 0.111182825 ubox
22 31 0.068461788 ubox
22 58 0.111150646 ubox
23 30 0.071107496 ubox
23 57 0.103391037 ubox
23 63 0.004984248 ubox
24 31 0.014201584 ubox
24 62 0.005107635 ubox
25 30 0.017555968 ubox
27 63 0.017532163 ubox
28 52 0.053393939 ubox
28 53 0.026771382 ubox
28 54 0.016140153 ubox
28 62 0.017598257 ubox
29 51 0.053721080 ubox
29 52 0.030146316 ubox
29 53 0.016461545 ubox
29 54 0.004347769 ubox
30 38 0.003547452 ubox
30 45 0.731484345 ubox
30 51 0.028406641 ubox
30 52 0.009900916 ubox
30 53 0.003667400 ubox
30 62 0.067531080 ubox
30 65 0.063069291 ubox
30 67 0.025256689 ubox
31 37 0.003705753 ubox
31 42 0.004761716 ubox
31 43 0.222480378 ubox
31 44 0.757547234 ubox
31 48 0.004466345 ubox
31 49 0.006098688 ubox
31 50 0.026724594 ubox
31 61 0.094045536 ubox
31 64 0.070422292 ubox
31 66 0.032006088 ubox
32 41 0.004959007 ubox
32 42 0.231168017 ubox
32 43 0.755333967 ubox
32 44 0.020470442 ubox
32 47 0.004119654 ubox
32 48 0.009988183 ubox
32 49 0.024302538 ubox
32 60 0.092052980 ubox
32 61 0.344738104 ubox
32 63 0.020222816 ubox
32 64 0.004072305 ubox
33 40 0.006500520 ubox
33 41 0.238549098 ubox
33 42 0.752892361 ubox
33 43 0.020661432 ubox
33 44 0.003604153 ubox
33 46 0.004230549 ubox
33 47 0.009839328 ubox
33 48 0.024088495 ubox
33 59 0.089882391 ubox
33 60 0.346132378 ubox
33 61 0.023323914 ubox
33 64 0.027187861 ubox
34 40 0.717220254 ubox
34 41 0.264480200 ubox
34 42 0.020569598 ubox
34 43 0.003772922 ubox
34 46 0.012403461 ubox
34 47 0.017550540 ubox
34 59 0.346856301 ubox
34 60 0.024036142 ubox
34 63 0.037438045 ubox
35 39 0.716022916 ubox
35 58 0.332708252 ubox
35 62 0.039012566 ubox
36 57 0.258817117 ubox
36 63 0.018880778 ubox
37 58 0.507832483 ubox
37 62 0.018342608 ubox
38 47 0.008497564 ubox
38 49 0.003383785 ubox
38 57 0.544052689 ubox
39 46 0.009520940 ubox
39 48 0.003590355 ubox
39 56 0.580106202 ubox
39 59 0.036961137 ubox
40 52 0.014162981 ubox
40 53 0.021365307 ubox
40 58 0.037020599 ubox
41 51 0.013526386 ubox
41 52 0.019800642 ubox
41 53 0.004820153 ubox
41 54 0.599257226 ubox
42 52 0.007325847 ubox
42 53 0.608656460 ubox
43 52 0.607727465 ubox
43 53 0.047567282 ubox
44 52 0.055877404 ubox
45 63 0.004974578 ubox
46 52 0.045432129 ubox
46 53 0.042748514 ubox
46 62 0.005519503 ubox
47 51 0.042232069 ubox
47 52 0.039557879 ubox
47 53 0.015363552 ubox
47 54 0.095863378 ubox
48 52 0.018607577 ubox
48 53 0.103487285 ubox
50 58 0.009039676 ubox
51 57 0.010877674 ubox
52 56 0.011476463 ubox
52 60 0.011479779 ubox
52 61 0.023839675 ubox
53 59 0.011508499 ubox
53 60 0.023812182 ubox
53 64 0.049699682 ubox
54 63 0.049933725 ubox
55 62 0.049898172 ubox
57 65 0.003361869 ubox
58 64 0.004559541 ubox
58 66 0.004748404 ubox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
5 9 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
showpage
end
%%EOF
