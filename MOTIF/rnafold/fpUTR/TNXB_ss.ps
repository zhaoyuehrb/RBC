%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCCCCUUCUCCUCCCCUGCUCGCUGCAGACUCCCUCCUCACUGUCGCUGCCGAGAUCCACAGUCGGUUGUGGCUCAGCCCCUGUUGCAGGGGACAAGUGAGGGAGACUUCCCUGUCCUGCCCUGAGACGCCGCCCUCCCGGGGUUGGGGACAGAGCAGGUGCAGAGGCACUGCAGCUGCUCGGUUGCCCAGCCUCCUGA\
) } def
/len { sequence length } bind def

/coor [
[222.39038086 265.24203491]
[209.29704285 259.99291992]
[197.48391724 252.27383423]
[187.41143799 242.38317871]
[179.47262573 230.70408630]
[173.97785950 217.68949890]
[171.14263916 203.84466553]
[171.07917786 189.70747375]
[173.79199219 175.82760620]
[179.17759705 162.74511719]
[166.76225281 154.32730103]
[154.34692383 145.90950012]
[141.93157959 137.49169922]
[131.49784851 146.60224915]
[119.15402222 152.88674927]
[105.64865112 155.96408081]
[91.80073547 155.64761353]
[78.45003510 151.95655823]
[66.40617371 145.11474609]
[55.92339325 155.84373474]
[45.44061279 166.57272339]
[34.95783234 177.30172729]
[33.70551682 193.29582214]
[20.33978271 202.16920471]
[5.11368275 197.11494446]
[-0.29262516 182.01026917]
[8.26811695 168.44216919]
[24.22883987 166.81893921]
[34.71162033 156.08995056]
[45.19440079 145.36096191]
[55.67718124 134.63195801]
[50.46743011 126.65351105]
[46.67916489 117.91014862]
[44.42110062 108.65280914]
[43.75804520 99.14714813]
[44.70901871 89.66596222]
[47.24673462 80.48133850]
[51.29836655 71.85686493]
[39.42757034 62.68712616]
[27.55677223 53.51738358]
[15.68597412 44.34764099]
[3.81517673 35.17789841]
[-8.05562019 26.00815773]
[-19.92641830 16.83841515]
[-31.79721642 7.66867399]
[-45.04989624 0.64254737]
[-59.30133057 -4.03684044]
[-73.55276489 -8.71622849]
[-87.80419159 -13.39561558]
[-102.05562592 -18.07500458]
[-117.58083344 -15.02892017]
[-127.25923157 -26.35048294]
[-141.51066589 -31.02987099]
[-155.76210022 -35.70925903]
[-170.01353455 -40.38864899]
[-184.26496887 -45.06803513]
[-196.17298889 -35.25974655]
[-211.49607849 -33.46914291]
[-225.34471130 -40.26760864]
[-233.29981995 -53.48576736]
[-232.82296753 -68.90576172]
[-224.06631470 -81.60711670]
[-209.82406616 -87.53688812]
[-194.64089966 -84.80290222]
[-183.36167908 -74.27756500]
[-179.58557129 -59.31946564]
[-165.33413696 -54.64007950]
[-151.08270264 -49.96069336]
[-136.83128357 -45.28130341]
[-122.57984161 -40.60191727]
[-108.07399750 -43.98270035]
[-97.37623596 -32.32643509]
[-83.12480927 -27.64704895]
[-68.87337494 -22.96766090]
[-54.62194061 -18.28827286]
[-40.37051010 -13.60888481]
[-35.34053802 -19.17210388]
[-46.46681976 -29.23221588]
[-36.40653992 -40.35834122]
[-25.28059959 -30.29854202]
[-20.25062943 -35.86176300]
[-26.33753777 -49.57123184]
[-32.42444611 -63.28070068]
[-38.51135635 -76.99016571]
[-44.59826279 -90.69963837]
[-50.68517303 -104.40910339]
[-62.63873672 -116.43194580]
[-54.39482880 -131.24661255]
[-37.87698746 -127.42598724]
[-36.97570419 -110.49601746]
[-30.88879395 -96.78654480]
[-24.80188560 -83.07707977]
[-18.71497726 -69.36760712]
[-12.62806892 -55.65813828]
[-6.54116058 -41.94866943]
[-5.46480274 -28.65339470]
[-8.54247570 -17.25283432]
[-14.70805550 -8.86900997]
[-22.62747383 -4.20212364]
[-10.75667572 4.96761847]
[1.11412132 14.13736057]
[12.98491859 23.30710220]
[24.85571671 32.47684479]
[36.72651291 41.64658737]
[48.59730911 50.81632996]
[60.46810913 59.98607254]
[84.95195007 45.80183411]
[113.24385071 45.33295822]
[118.68793488 31.35576439]
[124.13201141 17.37856865]
[117.54599762 3.01194167]
[123.12596893 -11.77452087]
[137.56143188 -18.20827293]
[152.28807068 -12.47228336]
[158.56884766 2.03038716]
[152.67747498 16.69556046]
[138.10920715 22.82265091]
[132.66513062 36.79984665]
[127.22104645 50.77703857]
[136.06907654 56.83859253]
[143.60572815 64.46936798]
[149.55699158 73.39193726]
[153.70652771 83.28190613]
[155.90342712 93.77969360]
[156.06784058 104.50363159]
[154.19378662 115.06383514]
[150.34939575 125.07636261]
[162.76472473 133.49417114]
[175.18005371 141.91197205]
[187.59539795 150.32977295]
[199.20985413 139.36068726]
[212.95783997 131.23701477]
[228.15621948 126.35894012]
[244.05055237 124.96550751]
[259.85253906 127.12283325]
[274.77911377 132.72099304]
[288.09127808 141.47964478]
[299.13064575 152.96205139]
[307.35202026 166.59684753]
[312.35034180 181.70648193]
[313.88064575 197.54089355]
[311.86999512 213.31471252]
[306.42105103 228.24626160]
[319.09094238 236.27581787]
[331.76083374 244.30537415]
[344.43072510 252.33494568]
[357.10061646 260.36450195]
[369.77050781 268.39407349]
[382.44039917 276.42361450]
[395.11029053 284.45318604]
[407.78018188 292.48272705]
[420.51184082 300.41403198]
[433.30447388 308.24655151]
[446.09710693 316.07907104]
[461.90664673 316.68640137]
[468.72082520 329.93087769]
[481.51345825 337.76339722]
[494.30609131 345.59594727]
[507.09872437 353.42846680]
[519.89135742 361.26098633]
[532.68402100 369.09353638]
[548.49353027 369.70083618]
[555.30773926 382.94534302]
[568.10034180 390.77786255]
[580.89300537 398.61038208]
[593.68560791 406.44293213]
[606.47827148 414.27545166]
[622.35003662 411.93734741]
[633.97509766 422.99346924]
[632.43566895 438.96249390]
[618.91271973 447.59436035]
[603.77984619 442.26742554]
[598.64575195 427.06808472]
[585.85308838 419.23556519]
[573.06048584 411.40301514]
[560.26782227 403.57049561]
[547.47521973 395.73797607]
[532.58068848 395.69088745]
[524.85144043 381.88616943]
[512.05883789 374.05361938]
[499.26620483 366.22109985]
[486.47357178 358.38858032]
[473.68093872 350.55603027]
[460.88830566 342.72351074]
[445.99377441 342.67642212]
[438.26455688 328.87170410]
[425.47192383 321.03918457]
[412.67929077 313.20666504]
[405.32855225 312.39450073]
[399.75064087 305.15261841]
[387.08074951 297.12307739]
[374.41085815 289.09350586]
[361.74096680 281.06396484]
[349.07107544 273.03439331]
[336.40118408 265.00482178]
[323.73129272 256.97528076]
[311.06137085 248.94570923]
[298.39147949 240.91615295]
[288.62301636 251.04985046]
[277.05172729 259.07269287]
[264.12640381 264.67105103]
[250.34877014 267.62539673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 130]
[11 129]
[12 128]
[13 127]
[19 31]
[20 30]
[21 29]
[22 28]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[108 119]
[109 118]
[110 117]
[143 198]
[144 197]
[145 196]
[146 195]
[147 194]
[148 193]
[149 192]
[150 191]
[151 190]
[152 188]
[153 187]
[154 186]
[156 184]
[157 183]
[158 182]
[159 181]
[160 180]
[161 179]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
