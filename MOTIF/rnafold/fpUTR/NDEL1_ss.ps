%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGUCACAGAAUGGCCUCGGACACCCAGGCAGUCCCUGACGUGUCGGGGAGGAGCCGGGCGCGGAGGUACGCUGAGUGGAGCUCGGGGCUGCGUAGGGGAGCUGAGCCGAGCGGCUGGGCGGGCCUGGCCGGGCCGGCGGAGGGGAGACGUCGGUUGAGCGGCGGCGAACAUGCGCUUUUGACACAUUGGAGGCUUUCUUGAUC\
) } def
/len { sequence length } bind def

/coor [
[104.96128082 427.54183960]
[89.17337036 426.82250977]
[78.58013153 415.09396362]
[79.46633148 399.31454468]
[91.30622101 388.84588623]
[91.98893738 373.86141968]
[92.67165375 358.87698364]
[93.35437775 343.89251709]
[90.51760101 337.06539917]
[94.16287231 328.68634033]
[95.07291412 313.71398926]
[95.98296356 298.74160767]
[96.89301300 283.76922607]
[94.16017151 276.89987183]
[97.93218231 268.57708740]
[99.06935120 253.62025452]
[100.20651245 238.66342163]
[101.34368134 223.70658875]
[102.48085022 208.74975586]
[103.61801147 193.79292297]
[96.86784363 180.51570129]
[105.62908936 167.34182739]
[106.76625061 152.38499451]
[77.47605896 142.54432678]
[61.22571945 119.62424469]
[61.64105606 94.32680511]
[47.50714493 89.30361176]
[33.37322998 84.28041840]
[17.71734047 92.08169556]
[1.58036637 86.26251221]
[-5.21983528 70.88237762]
[-19.42835426 66.07426453]
[-33.63687134 61.26614761]
[-47.84539413 56.45803070]
[-62.05391312 51.64991379]
[-76.26242828 46.84179688]
[-90.47094727 42.03367996]
[-104.67946625 37.22556305]
[-106.91637421 43.68197632]
[-112.00154114 49.59535980]
[-119.72038269 53.83121109]
[-129.43812561 55.36146164]
[-144.41697693 54.56505585]
[-159.39581299 53.76865005]
[-174.37466431 52.97224426]
[-189.35350037 52.17583847]
[-204.33235168 51.37943268]
[-218.52386475 58.37311554]
[-230.82237244 49.97099304]
[-245.80122375 49.17458344]
[-257.38507080 59.92585754]
[-273.17504883 59.25365448]
[-283.80325317 47.55677795]
[-282.96414185 31.77478027]
[-271.15554810 21.27083969]
[-255.38331604 22.27675819]
[-245.00480652 34.19574356]
[-230.02597046 34.99214935]
[-216.90585327 27.94149971]
[-203.53593445 36.40058899]
[-188.55709839 37.19699478]
[-173.57826233 37.99340057]
[-158.59941101 38.78980637]
[-143.62057495 39.58621216]
[-128.64172363 40.38262177]
[-122.87519836 26.53534126]
[-133.99185181 16.46459389]
[-145.10850525 6.39384508]
[-160.21266174 9.42213535]
[-174.04216003 3.05043101]
[-181.38116455 -10.08741570]
[-179.59814453 -24.85084534]
[-190.71479797 -34.92159271]
[-201.83145142 -44.99234390]
[-217.62940979 -51.14546585]
[-216.09005737 -68.02938843]
[-199.43983459 -71.22412872]
[-191.76071167 -56.10899734]
[-180.64404297 -46.03824997]
[-169.52738953 -35.96749878]
[-155.01135254 -39.19588470]
[-141.21456909 -33.18649673]
[-133.51177979 -20.05179024]
[-135.03775024 -4.72281027]
[-123.92110443 5.34793806]
[-112.80444336 15.41868687]
[-99.87135315 23.01704597]
[-85.66283417 27.82516289]
[-71.45431519 32.63327789]
[-57.24579620 37.44139481]
[-43.03727722 42.24951172]
[-28.82875633 47.05762863]
[-14.62023735 51.86574554]
[-0.41171837 56.67386246]
[10.22852993 49.40326309]
[23.30884171 49.59239197]
[34.04939651 57.39626312]
[38.39642334 70.14650726]
[52.53033829 75.16970062]
[66.66425323 80.19289398]
[76.11541748 69.45298004]
[88.81777191 62.87115097]
[103.04225922 61.34332657]
[107.08921051 46.89957047]
[111.13616180 32.45581055]
[107.40902710 17.07988548]
[118.29318237 6.91207504]
[122.34013367 -7.53168440]
[126.38708496 -21.97544289]
[130.43403625 -36.41920471]
[125.84820557 -52.16411209]
[137.38465881 -63.81925583]
[153.17567444 -59.39481735]
[156.97682190 -43.44228363]
[144.87779236 -32.37224960]
[140.83084106 -17.92849159]
[136.78388977 -3.48473287]
[132.73693848 10.95902634]
[136.75354004 25.30183601]
[125.57992554 36.50276184]
[121.53297424 50.94652176]
[117.48602295 65.39028168]
[131.73355103 70.30929565]
[144.31375122 81.19468689]
[152.75277710 97.33280945]
[167.03262329 92.74087524]
[181.31248474 88.14894867]
[186.03047180 83.51007080]
[191.55389404 82.15592957]
[196.09587097 83.64147949]
[210.50849915 79.48503876]
[218.18684387 65.93214417]
[232.86251831 61.92224121]
[245.73580933 69.32588959]
[260.14843750 65.16944885]
[274.56106567 61.01300812]
[288.97369385 56.85657120]
[303.38635254 52.70013046]
[317.79898071 48.54369354]
[332.21160889 44.38725281]
[346.62423706 40.23081589]
[350.94345093 25.42041016]
[362.59906006 15.31349564]
[377.87188721 13.13514805]
[391.88833618 19.58047295]
[400.17587280 32.59278870]
[400.08993530 48.01991272]
[391.65798950 60.93910599]
[377.57058716 67.22790527]
[362.32299805 64.87957001]
[350.78067017 54.64344788]
[336.36804199 58.79988861]
[321.95541382 62.95632553]
[307.54278564 67.11276245]
[293.13015747 71.26920319]
[278.71749878 75.42564392]
[264.30487061 79.58208466]
[249.89224243 83.73851776]
[242.93820190 96.86013794]
[228.38095093 101.28067780]
[214.66494751 93.89767456]
[200.25230408 98.05410767]
[185.90440369 102.42880249]
[171.62455750 107.02072906]
[157.34471130 111.61266327]
[155.75413513 126.52809143]
[168.74452209 134.02809143]
[181.73490906 141.52809143]
[194.72528076 149.02809143]
[209.92427063 144.69606018]
[223.69396973 152.45306396]
[227.86506653 167.69699097]
[219.96292114 181.38391113]
[204.67573547 185.39360046]
[191.07313538 177.34719849]
[187.22528076 162.01847839]
[174.23490906 154.51847839]
[161.24452209 147.01847839]
[148.25413513 139.51847839]
[141.62138367 143.01939392]
[149.42581177 155.82917786]
[157.23025513 168.63897705]
[166.81858826 180.17430115]
[159.72930908 193.39331055]
[144.81542969 191.78822327]
[140.70130920 177.36332703]
[134.52857971 163.69227600]
[128.35585022 150.02124023]
[121.72308350 153.52215576]
[120.58592224 168.47898865]
[127.25474548 182.82601929]
[118.57484436 194.93009949]
[117.43768311 209.88693237]
[116.30051422 224.84376526]
[115.16334534 239.80059814]
[114.02618408 254.75743103]
[112.88901520 269.71426392]
[111.86537933 284.67929077]
[110.95532990 299.65164185]
[110.04528809 314.62402344]
[109.13523865 329.59640503]
[108.33882904 344.57522583]
[107.65611267 359.55969238]
[106.97339630 374.54415894]
[106.29067230 389.52859497]
[117.12953949 401.03054810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[10 201]
[11 200]
[12 199]
[13 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[22 190]
[23 189]
[26 100]
[27 99]
[28 98]
[31 94]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[37 88]
[38 87]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[49 58]
[50 57]
[66 86]
[67 85]
[68 84]
[72 80]
[73 79]
[74 78]
[103 122]
[104 121]
[105 120]
[107 118]
[108 117]
[109 116]
[110 115]
[125 165]
[126 164]
[127 163]
[130 162]
[131 161]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[166 179]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
