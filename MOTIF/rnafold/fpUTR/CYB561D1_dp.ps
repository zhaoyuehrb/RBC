%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYB561D1)
} def

/sequence { (\
GAUCGCAAACCCGGAAGACGUGUUCGGGCAGCUGGAGUGUACGGGCCCGCGGGCCACGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.017218789 ubox
2 24 0.016862697 ubox
2 38 0.117504926 ubox
2 40 0.026132727 ubox
3 14 0.022117692 ubox
3 15 0.017376718 ubox
3 18 0.009104487 ubox
3 27 0.010516994 ubox
3 35 0.215909396 ubox
3 36 0.300395322 ubox
3 37 0.107135695 ubox
3 39 0.019038053 ubox
3 44 0.003808113 ubox
3 52 0.059475836 ubox
3 59 0.053162261 ubox
4 13 0.034428471 ubox
4 14 0.018262967 ubox
4 17 0.010192479 ubox
4 22 0.018553949 ubox
4 26 0.020083775 ubox
4 34 0.334437771 ubox
4 35 0.319166599 ubox
4 39 0.052233280 ubox
4 43 0.061881501 ubox
4 49 0.003355859 ubox
4 51 0.322383004 ubox
4 58 0.072046786 ubox
5 12 0.033761363 ubox
5 21 0.018807339 ubox
5 23 0.010500540 ubox
5 25 0.020219922 ubox
5 29 0.041600852 ubox
5 32 0.741893590 ubox
5 33 0.146301257 ubox
5 38 0.053342116 ubox
5 40 0.094752264 ubox
5 42 0.062315189 ubox
5 48 0.003473467 ubox
5 50 0.325563274 ubox
5 54 0.006303490 ubox
5 57 0.070702722 ubox
5 60 0.262350970 ubox
6 20 0.018726593 ubox
6 22 0.011256837 ubox
6 28 0.033106653 ubox
6 31 0.744381923 ubox
6 34 0.209655913 ubox
6 37 0.052993539 ubox
6 39 0.097752290 ubox
6 49 0.324971085 ubox
6 53 0.006013127 ubox
6 59 0.262542212 ubox
7 21 0.011070823 ubox
7 24 0.007606026 ubox
7 33 0.203807500 ubox
7 38 0.086414269 ubox
8 23 0.005970608 ubox
8 24 0.087647101 ubox
9 21 0.004408916 ubox
9 23 0.098938129 ubox
9 38 0.145082242 ubox
9 40 0.011783867 ubox
10 20 0.004261386 ubox
10 22 0.100656924 ubox
10 27 0.019674237 ubox
10 28 0.908353469 ubox
10 35 0.020330042 ubox
10 37 0.153541036 ubox
10 39 0.011970971 ubox
10 45 0.311143494 ubox
10 52 0.026251971 ubox
10 53 0.093206409 ubox
10 59 0.010586723 ubox
11 26 0.017292628 ubox
11 27 0.912088855 ubox
11 28 0.092223475 ubox
11 34 0.016022405 ubox
11 35 0.179412528 ubox
11 44 0.311608378 ubox
11 45 0.005174365 ubox
11 51 0.026643708 ubox
11 52 0.093611789 ubox
11 58 0.009739460 ubox
11 59 0.052234555 ubox
12 20 0.105759362 ubox
12 22 0.003697374 ubox
12 26 0.912013766 ubox
12 27 0.092969972 ubox
12 34 0.179953461 ubox
12 43 0.311619579 ubox
12 44 0.005167544 ubox
12 49 0.026817020 ubox
12 51 0.093632505 ubox
12 58 0.052867208 ubox
13 19 0.106228481 ubox
13 21 0.003688938 ubox
13 24 0.004466835 ubox
13 25 0.893421768 ubox
13 33 0.180040531 ubox
13 42 0.308957863 ubox
13 47 0.004399479 ubox
13 48 0.027184320 ubox
13 50 0.092929453 ubox
13 55 0.008065881 ubox
13 57 0.052518872 ubox
13 61 0.011908738 ubox
14 23 0.020210197 ubox
14 24 0.862530066 ubox
14 25 0.212944505 ubox
14 32 0.179949859 ubox
14 46 0.004912729 ubox
14 47 0.027150422 ubox
14 54 0.008195883 ubox
14 60 0.011946852 ubox
15 23 0.819798154 ubox
15 24 0.280025665 ubox
16 23 0.295293675 ubox
16 24 0.014773403 ubox
16 33 0.010757651 ubox
17 23 0.023476929 ubox
17 24 0.016982859 ubox
17 25 0.017220435 ubox
17 32 0.011238709 ubox
18 23 0.018893182 ubox
18 24 0.016824848 ubox
18 38 0.233472182 ubox
18 40 0.159339906 ubox
19 26 0.176018015 ubox
19 34 0.008270301 ubox
19 37 0.234347763 ubox
19 39 0.184440971 ubox
19 43 0.058247427 ubox
19 49 0.029180686 ubox
19 51 0.029997266 ubox
19 58 0.046885718 ubox
20 25 0.174264083 ubox
20 29 0.033834124 ubox
20 32 0.006325347 ubox
20 33 0.006993099 ubox
20 38 0.175559259 ubox
20 42 0.058828507 ubox
20 48 0.029200010 ubox
20 50 0.030042139 ubox
20 54 0.008855969 ubox
20 57 0.047357613 ubox
21 28 0.033641331 ubox
21 30 0.012398974 ubox
21 31 0.004340107 ubox
21 37 0.045580056 ubox
21 39 0.008049067 ubox
21 41 0.058518502 ubox
21 49 0.019952777 ubox
21 51 0.006162707 ubox
21 53 0.008846353 ubox
21 56 0.047263697 ubox
22 29 0.013713596 ubox
22 32 0.019554445 ubox
22 38 0.011653049 ubox
22 40 0.056553607 ubox
22 46 0.032004287 ubox
22 48 0.007275980 ubox
22 50 0.007540456 ubox
22 54 0.028244608 ubox
22 55 0.038027590 ubox
22 60 0.006043386 ubox
23 28 0.013065535 ubox
23 31 0.019484757 ubox
23 35 0.007446778 ubox
23 36 0.307784504 ubox
23 37 0.030017231 ubox
23 39 0.007805628 ubox
23 45 0.032241570 ubox
23 49 0.004409121 ubox
23 52 0.008578451 ubox
23 53 0.039514638 ubox
23 59 0.004661726 ubox
24 30 0.017281399 ubox
24 35 0.312661809 ubox
24 36 0.043751993 ubox
24 44 0.032355202 ubox
24 51 0.011306061 ubox
24 52 0.033639085 ubox
24 53 0.011184748 ubox
24 59 0.012618039 ubox
25 34 0.317230622 ubox
25 35 0.043214942 ubox
25 43 0.033777417 ubox
25 49 0.096183162 ubox
25 51 0.022543838 ubox
25 52 0.007024141 ubox
25 58 0.024540824 ubox
26 33 0.317090237 ubox
26 42 0.033863287 ubox
26 48 0.140633636 ubox
26 50 0.013433587 ubox
26 57 0.024779018 ubox
27 32 0.316909778 ubox
27 33 0.041311477 ubox
27 47 0.141107500 ubox
27 48 0.009989250 ubox
27 55 0.026529231 ubox
27 61 0.018985126 ubox
28 32 0.040651634 ubox
28 38 0.009375742 ubox
28 40 0.053924576 ubox
28 46 0.141141380 ubox
28 47 0.009619928 ubox
28 54 0.026601518 ubox
28 60 0.021394258 ubox
29 37 0.024837170 ubox
29 39 0.105653865 ubox
29 45 0.140574082 ubox
29 53 0.026597230 ubox
29 59 0.022366474 ubox
30 38 0.101719515 ubox
31 38 0.069859889 ubox
31 40 0.252999447 ubox
31 46 0.018905387 ubox
31 50 0.038556516 ubox
31 60 0.114372021 ubox
32 37 0.080279640 ubox
32 39 0.258774883 ubox
32 44 0.137661565 ubox
32 45 0.017094684 ubox
32 49 0.037754598 ubox
32 59 0.114629471 ubox
33 39 0.010903874 ubox
33 41 0.041683997 ubox
33 43 0.142710650 ubox
33 44 0.014832325 ubox
33 49 0.020528242 ubox
33 56 0.004433369 ubox
33 58 0.106241880 ubox
34 38 0.010276232 ubox
34 40 0.045289127 ubox
34 42 0.146286061 ubox
34 47 0.007656578 ubox
34 48 0.058087132 ubox
34 55 0.005519699 ubox
34 57 0.096793974 ubox
34 61 0.111189040 ubox
35 46 0.007598929 ubox
35 47 0.058121833 ubox
35 54 0.005560190 ubox
35 60 0.111698351 ubox
37 46 0.057796720 ubox
37 50 0.006174564 ubox
37 54 0.043693474 ubox
37 57 0.046329237 ubox
37 60 0.180623272 ubox
38 45 0.057394403 ubox
38 49 0.006177685 ubox
38 51 0.005502237 ubox
38 53 0.043081911 ubox
38 56 0.047465090 ubox
38 58 0.108264544 ubox
38 59 0.177836357 ubox
39 46 0.004436379 ubox
39 48 0.006165176 ubox
39 50 0.007282504 ubox
39 54 0.012832334 ubox
39 55 0.024487862 ubox
39 57 0.121252959 ubox
39 60 0.490177911 ubox
40 45 0.004359053 ubox
40 49 0.007057175 ubox
40 53 0.011250196 ubox
40 56 0.120144748 ubox
40 59 0.470704328 ubox
42 49 0.034631184 ubox
42 51 0.030418405 ubox
42 58 0.862500455 ubox
43 48 0.034413309 ubox
43 50 0.030585334 ubox
43 55 0.032278691 ubox
43 57 0.868783427 ubox
43 61 0.003162811 ubox
44 54 0.029925752 ubox
44 55 0.933110707 ubox
44 61 0.015231843 ubox
45 54 0.934395418 ubox
45 60 0.015593542 ubox
46 52 0.028855798 ubox
46 53 0.934380842 ubox
46 59 0.014642822 ubox
47 51 0.030326964 ubox
47 52 0.933677031 ubox
47 53 0.010059334 ubox
47 58 0.013357321 ubox
47 59 0.006440954 ubox
48 52 0.014094503 ubox
48 58 0.008448462 ubox
49 57 0.009936463 ubox
49 60 0.007842336 ubox
50 58 0.010868748 ubox
50 59 0.007601215 ubox
51 57 0.012328150 ubox
51 61 0.008223467 ubox
52 60 0.007885995 ubox
52 61 0.321277525 ubox
53 60 0.329347694 ubox
54 59 0.329201703 ubox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
