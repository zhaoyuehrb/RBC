%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGACGCACGAGGUGCUGUGACUCGUGCCAGCCCCCUAAUCUGCGGAAGUGGAGUGCGGGGAGUGCGCCGGAAGAGGGGUACGGAAGUGCGCCGGAAGUGGGGUGCGGAGGUGUGCAGCGCGCUGUCAGACUGGCUCGCAGGCGGCGCGGCCGGCGGACCCGUUCGAGACAGCGCGGGCGGCUCGGGUCCCCUGGGGCUCCGCAGCAGGAGGACGCC\
) } def
/len { sequence length } bind def

/coor [
[106.10816956 174.88380432]
[98.88809204 161.73574829]
[91.38981628 161.57510376]
[83.82806396 174.52964783]
[88.72817230 187.07142639]
[85.55862427 199.95783997]
[75.69343567 208.54026794]
[62.87941742 209.85591125]
[55.13345718 222.70115662]
[47.38749313 235.54638672]
[39.64153290 248.39163208]
[31.89557076 261.23684692]
[24.14960861 274.08209229]
[16.40364647 286.92733765]
[23.30265045 300.72613525]
[21.62354469 316.06185913]
[11.90212250 328.04089355]
[-2.75954413 332.84082031]
[-17.68297005 328.92993164]
[-28.10614586 317.55624390]
[-30.70307350 302.34902954]
[-24.64508247 288.16085815]
[-11.86525536 279.51910400]
[3.55841088 279.18136597]
[11.30437279 266.33612061]
[19.05033493 253.49089050]
[26.79629707 240.64566040]
[34.54225922 227.80043030]
[42.28821945 214.95518494]
[50.03418350 202.10995483]
[45.29870605 185.96948242]
[53.87359238 171.10705566]
[70.87352753 166.96789551]
[78.43527985 154.01336670]
[69.88043976 141.69204712]
[55.10013199 144.24987793]
[40.31982422 146.80770874]
[25.53951836 149.36555481]
[18.28113937 164.64688110]
[3.49027753 172.51049805]
[-12.90837955 170.03096008]
[-24.47883034 158.38183594]
[-39.22110748 161.15046692]
[-53.96338272 163.91909790]
[-68.70565796 166.68771362]
[-83.44793701 169.45634460]
[-95.53340149 180.54118347]
[-111.09250641 175.35984802]
[-114.11938477 159.24247742]
[-101.50023651 148.76921082]
[-86.21656036 154.71406555]
[-71.47428894 151.94544983]
[-56.73200989 149.17681885]
[-41.98973465 146.40818787]
[-27.24745750 143.63955688]
[-22.67456818 131.10032654]
[-12.42173481 122.38688660]
[0.90347648 119.85560608]
[13.84211254 124.27237701]
[22.98168373 134.58523560]
[37.76199341 132.02740479]
[52.54230118 129.46957397]
[67.32260895 126.91174316]
[65.21985626 101.18202972]
[77.82312775 84.13434601]
[68.49472809 72.38782501]
[59.16632080 60.64129639]
[49.83791733 48.89476776]
[35.19658661 42.89960861]
[33.34067154 28.12108040]
[24.01226807 16.37455368]
[14.68386459 4.62802792]
[-0.18281282 7.90572119]
[-14.93819714 4.41779661]
[-26.66796875 -5.09181166]
[-33.07932663 -18.69532204]
[-32.94906235 -33.67171860]
[-26.35657692 -47.05097961]
[-35.68498230 -58.79750443]
[-50.32631302 -64.79267120]
[-52.18222809 -79.57119751]
[-61.51063156 -91.31771851]
[-70.83903503 -103.06424713]
[-80.16743469 -114.81077576]
[-95.61112213 -120.32662964]
[-98.28951263 -136.50556946]
[-85.44731140 -146.70410156]
[-70.29547119 -140.43083191]
[-68.42091370 -124.13917542]
[-59.09250641 -112.39265442]
[-49.76410294 -100.64612579]
[-40.43569946 -88.89959717]
[-26.46159935 -83.74462891]
[-23.93845367 -68.12590790]
[-14.61005020 -56.37938309]
[-0.08531459 -59.77018356]
[14.53137875 -56.50495529]
[26.32920837 -47.17906570]
[32.93492508 -33.60023499]
[32.99015808 -18.43831062]
[26.43039131 -4.70037603]
[35.75879669 7.04615068]
[45.08720016 18.79267693]
[59.06130219 23.94764900]
[61.58444595 39.56636429]
[70.91284943 51.31289291]
[80.24124908 63.05941772]
[89.56965637 74.80594635]
[128.19642639 79.60349274]
[132.08049011 127.62057495]
[145.34698486 120.62056732]
[158.61347961 113.62055206]
[167.20805359 100.33734131]
[182.07522583 101.24106598]
[195.34172058 94.24105072]
[208.60821533 87.24104309]
[210.16772461 77.95384979]
[215.73968506 70.53316498]
[223.97560120 66.56454468]
[232.97662354 66.82276154]
[240.73094177 71.12373352]
[254.28506470 64.69830322]
[267.83917236 58.27288055]
[281.39328003 51.84745407]
[294.94738770 45.42202759]
[308.50149536 38.99660110]
[322.05560303 32.57117462]
[335.60971069 26.14574814]
[349.16381836 19.72032356]
[359.86889648 2.63412023]
[379.05749512 5.04929781]
[392.42260742 -1.76055956]
[405.78768921 -8.57041740]
[414.57107544 -21.72954941]
[429.42382812 -20.61362457]
[442.78890991 -27.42348289]
[451.57229614 -40.58261490]
[466.42504883 -39.46669006]
[479.79013062 -46.27654648]
[493.15524292 -53.08640671]
[506.52035522 -59.89626312]
[515.30371094 -73.05539703]
[530.15649414 -71.93946838]
[543.52154541 -78.74932861]
[556.88665771 -85.55918884]
[561.53149414 -100.66551971]
[575.53656006 -107.98899078]
[590.59295654 -103.18472290]
[597.76794434 -89.10300446]
[592.80474854 -74.09825897]
[578.64794922 -67.07254028]
[563.69653320 -72.19408417]
[550.33142090 -65.38423157]
[536.96630859 -58.57437134]
[529.13891602 -45.90232849]
[513.33020020 -46.53116608]
[499.96508789 -39.72130585]
[486.60000610 -32.91144943]
[473.23489380 -26.10159302]
[465.40747070 -13.42954636]
[449.59878540 -14.05838394]
[436.23367310 -7.24852705]
[428.40625000 5.42351866]
[412.59756470 4.79468060]
[399.23245239 11.60453796]
[385.86737061 18.41439629]
[383.59957886 28.36949921]
[376.07086182 35.58721161]
[365.59732056 37.51295471]
[355.58926392 33.27443314]
[342.03515625 39.69985962]
[328.48104858 46.12528610]
[314.92691040 52.55071259]
[301.37280273 58.97613525]
[287.81869507 65.40156555]
[274.26458740 71.82698822]
[260.71047974 78.25241852]
[247.15637207 84.67784119]
[236.93798828 102.61364746]
[215.60821533 100.50753784]
[202.34172058 107.50754547]
[189.07522583 114.50755310]
[181.42956543 127.29008484]
[165.61347961 126.88704681]
[152.34700012 133.88705444]
[139.08050537 140.88706970]
[134.64942932 155.21765137]
[141.64942932 168.48414612]
[148.74398804 181.70031738]
[155.93272400 194.86550903]
[163.12145996 208.03068542]
[170.31019592 221.19587708]
[177.59274292 234.30940247]
[184.96873474 247.37059021]
[192.34472656 260.43179321]
[199.72071838 273.49298096]
[214.68164062 277.82989502]
[221.97587585 291.18087769]
[217.74909973 305.41708374]
[225.12509155 318.47827148]
[238.17854309 329.29693604]
[231.39620972 344.83517456]
[214.58769226 342.61932373]
[212.06390381 325.85427856]
[204.68791199 312.79306030]
[190.31404114 309.06112671]
[182.64767456 295.92028809]
[186.65953064 280.86895752]
[179.28353882 267.80776978]
[171.90754700 254.74658203]
[164.53155518 241.68539429]
[158.50942993 237.40968323]
[157.14500427 228.38461304]
[149.95626831 215.21942139]
[142.76753235 202.05424500]
[135.57879639 188.88905334]
[129.61834717 184.52778625]
[128.38293457 175.48414612]
[121.38293457 162.21766663]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[35 63]
[36 62]
[37 61]
[38 60]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[65 108]
[66 107]
[67 106]
[68 105]
[70 103]
[71 102]
[72 101]
[78 95]
[79 94]
[81 92]
[82 91]
[83 90]
[84 89]
[110 186]
[111 185]
[112 184]
[114 182]
[115 181]
[116 180]
[121 178]
[122 177]
[123 176]
[124 175]
[125 174]
[126 173]
[127 172]
[128 171]
[129 170]
[131 166]
[132 165]
[133 164]
[135 162]
[136 161]
[138 159]
[139 158]
[140 157]
[141 156]
[143 154]
[144 153]
[145 152]
[187 219]
[188 218]
[189 216]
[190 215]
[191 214]
[192 213]
[193 211]
[194 210]
[195 209]
[196 208]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
