%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCP2D1)
} def

/sequence { (\
CUUUGAUGUCACAAUCUGACCUGUGGGUAUUAAUCUGGUCACAGCUGCUCACAGACUAGAUGGCAAGGUCCAGGGGACUAGCACAGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.008260644 ubox
1 67 0.060886773 ubox
1 68 0.016896406 ubox
1 73 0.006252033 ubox
1 74 0.040007249 ubox
1 75 0.063342702 ubox
1 76 0.012297702 ubox
1 81 0.028829644 ubox
1 86 0.206896261 ubox
1 87 0.202088527 ubox
1 90 0.284972628 ubox
2 14 0.008510521 ubox
2 19 0.069535382 ubox
2 58 0.007659096 ubox
2 60 0.011772002 ubox
2 62 0.003217613 ubox
2 66 0.064026370 ubox
2 67 0.023827625 ubox
2 68 0.004218301 ubox
2 72 0.005994715 ubox
2 73 0.040085353 ubox
2 74 0.063559258 ubox
2 75 0.012066092 ubox
2 80 0.027162953 ubox
2 81 0.008329355 ubox
2 85 0.201663435 ubox
2 86 0.191841613 ubox
2 87 0.220314883 ubox
2 88 0.073451947 ubox
2 89 0.294225679 ubox
2 90 0.047370861 ubox
3 13 0.012200174 ubox
3 14 0.061965210 ubox
3 18 0.068598852 ubox
3 19 0.023818157 ubox
3 33 0.011222236 ubox
3 59 0.012681092 ubox
3 65 0.032063754 ubox
3 66 0.045129656 ubox
3 67 0.019937412 ubox
3 68 0.004958936 ubox
3 72 0.038544554 ubox
3 73 0.063414114 ubox
3 74 0.011511049 ubox
3 80 0.008772889 ubox
3 81 0.012983228 ubox
3 85 0.164615522 ubox
3 86 0.272198020 ubox
3 87 0.075023622 ubox
3 88 0.292180705 ubox
3 89 0.076646375 ubox
3 90 0.017737969 ubox
4 11 0.082183546 ubox
4 13 0.098271027 ubox
4 18 0.024185296 ubox
4 32 0.019169953 ubox
4 58 0.012745517 ubox
4 65 0.036027688 ubox
4 66 0.041714118 ubox
4 67 0.026705992 ubox
4 72 0.063212432 ubox
4 73 0.008810464 ubox
4 80 0.014701818 ubox
4 83 0.237236845 ubox
4 85 0.296314212 ubox
4 86 0.069647612 ubox
4 87 0.277981307 ubox
4 88 0.080496541 ubox
4 89 0.026169874 ubox
5 10 0.093929278 ubox
5 12 0.103622754 ubox
5 16 0.146425680 ubox
5 17 0.003187849 ubox
5 31 0.020207306 ubox
5 57 0.011907530 ubox
5 64 0.031302471 ubox
5 70 0.058417138 ubox
5 71 0.050090540 ubox
5 79 0.008684574 ubox
5 82 0.241247414 ubox
5 84 0.305796646 ubox
6 15 0.146851905 ubox
6 30 0.020278489 ubox
6 61 0.003251482 ubox
6 69 0.069964638 ubox
7 13 0.034016162 ubox
7 14 0.145589364 ubox
7 29 0.019930366 ubox
7 62 0.004732864 ubox
7 65 0.753485409 ubox
7 68 0.060201724 ubox
7 80 0.020728802 ubox
7 83 0.184853412 ubox
7 85 0.236669341 ubox
8 12 0.038391950 ubox
8 15 0.003881245 ubox
8 20 0.166536887 ubox
8 28 0.011485897 ubox
8 61 0.006178951 ubox
8 64 0.837205086 ubox
8 78 0.008589355 ubox
8 79 0.003959700 ubox
8 82 0.185818914 ubox
8 84 0.241591643 ubox
9 14 0.004376317 ubox
9 19 0.169828455 ubox
9 26 0.018781685 ubox
9 27 0.007154190 ubox
9 60 0.005426166 ubox
9 63 0.836774532 ubox
9 77 0.008676717 ubox
9 81 0.178967703 ubox
9 83 0.225963821 ubox
9 87 0.022620173 ubox
9 88 0.042796139 ubox
10 18 0.170585728 ubox
10 25 0.023011748 ubox
10 26 0.005467238 ubox
10 59 0.005006868 ubox
10 62 0.835363922 ubox
10 67 0.007997197 ubox
10 76 0.008611602 ubox
10 86 0.028867638 ubox
10 87 0.045624116 ubox
11 17 0.157853523 ubox
11 24 0.023604756 ubox
11 61 0.690996361 ubox
12 18 0.010946046 ubox
12 23 0.023652296 ubox
12 62 0.273615902 ubox
13 17 0.009025843 ubox
13 22 0.023270531 ubox
13 61 0.195801095 ubox
14 61 0.623534081 ubox
15 60 0.964065145 ubox
15 74 0.013896571 ubox
15 75 0.005110972 ubox
15 77 0.003427679 ubox
15 87 0.013396962 ubox
15 88 0.007033884 ubox
16 59 0.969899879 ubox
16 73 0.014706738 ubox
16 74 0.005090672 ubox
16 76 0.003449828 ubox
16 81 0.007079635 ubox
16 86 0.020900408 ubox
16 87 0.007112559 ubox
16 90 0.034163546 ubox
17 58 0.967447913 ubox
17 72 0.014710412 ubox
17 73 0.004593147 ubox
17 75 0.003173369 ubox
17 80 0.007299523 ubox
17 85 0.021111414 ubox
17 86 0.006255294 ubox
17 89 0.037790014 ubox
18 40 0.003197996 ubox
18 57 0.933635886 ubox
18 70 0.011587329 ubox
18 71 0.010718940 ubox
18 79 0.006901863 ubox
18 84 0.021036465 ubox
19 28 0.006708742 ubox
19 39 0.003200983 ubox
19 69 0.015376330 ubox
20 27 0.006971836 ubox
20 38 0.003201372 ubox
20 68 0.015398952 ubox
20 74 0.003343853 ubox
20 76 0.015474775 ubox
20 87 0.152837650 ubox
21 26 0.006957068 ubox
21 37 0.003195906 ubox
21 44 0.007555590 ubox
21 54 0.984829207 ubox
21 67 0.015239303 ubox
21 73 0.003357432 ubox
21 75 0.015757530 ubox
21 86 0.156326120 ubox
22 43 0.007803381 ubox
22 53 0.986707346 ubox
22 65 0.005321641 ubox
22 66 0.013753039 ubox
22 72 0.003327396 ubox
22 74 0.015701259 ubox
22 85 0.156307168 ubox
23 42 0.008074754 ubox
23 52 0.987080776 ubox
23 64 0.007537617 ubox
23 71 0.003296634 ubox
23 84 0.156335646 ubox
24 41 0.008075957 ubox
24 51 0.986898216 ubox
24 63 0.007122782 ubox
24 65 0.009365635 ubox
24 72 0.015811623 ubox
24 83 0.155935263 ubox
25 36 0.003381226 ubox
25 40 0.008082443 ubox
25 50 0.987035064 ubox
25 64 0.010116360 ubox
25 71 0.015853639 ubox
25 82 0.152454318 ubox
26 30 0.003210394 ubox
26 35 0.008255199 ubox
26 36 0.003503355 ubox
26 39 0.008032797 ubox
26 48 0.003655961 ubox
26 49 0.986453149 ubox
26 70 0.015853228 ubox
26 79 0.024020839 ubox
27 34 0.008468794 ubox
27 35 0.003705433 ubox
27 48 0.987061060 ubox
27 64 0.039802649 ubox
27 69 0.014774060 ubox
27 78 0.025889667 ubox
27 82 0.007041152 ubox
28 33 0.008403031 ubox
28 37 0.008028821 ubox
28 47 0.984090855 ubox
28 62 0.005746972 ubox
28 63 0.036982234 ubox
28 68 0.008209185 ubox
28 77 0.025604075 ubox
28 80 0.019922121 ubox
28 81 0.008311459 ubox
29 36 0.007650218 ubox
29 39 0.012249272 ubox
29 46 0.925177848 ubox
29 61 0.005034723 ubox
29 79 0.015711006 ubox
30 38 0.015106283 ubox
30 44 0.047399645 ubox
30 63 0.022786379 ubox
30 66 0.015138180 ubox
30 75 0.004135650 ubox
30 76 0.005405284 ubox
30 77 0.012939830 ubox
30 81 0.004769478 ubox
31 37 0.014852571 ubox
31 43 0.036931878 ubox
31 47 0.035007433 ubox
31 62 0.030250448 ubox
31 65 0.014795476 ubox
31 75 0.005325871 ubox
31 76 0.013198678 ubox
31 80 0.004574872 ubox
32 36 0.012443866 ubox
32 46 0.081612392 ubox
32 61 0.022255237 ubox
33 39 0.011120208 ubox
33 61 0.143827555 ubox
33 69 0.004047247 ubox
34 38 0.010537893 ubox
34 60 0.152208507 ubox
34 68 0.004320119 ubox
34 74 0.040838985 ubox
35 44 0.973768127 ubox
35 59 0.153339294 ubox
35 67 0.006964902 ubox
35 73 0.041786681 ubox
35 81 0.004694181 ubox
36 43 0.977068350 ubox
36 47 0.008740769 ubox
36 58 0.153280903 ubox
36 66 0.006724933 ubox
36 72 0.041799243 ubox
36 80 0.004712996 ubox
37 42 0.976991971 ubox
37 46 0.057008966 ubox
37 57 0.153280727 ubox
37 71 0.041812537 ubox
37 79 0.004705135 ubox
38 45 0.066983300 ubox
38 56 0.153350183 ubox
38 64 0.013669081 ubox
38 70 0.041729694 ubox
38 78 0.004700549 ubox
39 44 0.063786199 ubox
39 55 0.153289136 ubox
39 63 0.013978966 ubox
39 68 0.021681073 ubox
39 77 0.004698536 ubox
40 54 0.150076222 ubox
40 62 0.014014821 ubox
40 67 0.022082468 ubox
40 76 0.004686963 ubox
41 46 0.003442098 ubox
41 61 0.013826313 ubox
41 69 0.012380315 ubox
42 68 0.013205609 ubox
43 49 0.031010512 ubox
43 57 0.013984978 ubox
44 48 0.031270728 ubox
44 56 0.014210242 ubox
44 64 0.039911857 ubox
44 69 0.003816546 ubox
45 54 0.034572007 ubox
45 59 0.003722872 ubox
45 63 0.039974389 ubox
45 67 0.005786940 ubox
45 68 0.003785379 ubox
45 73 0.003939951 ubox
46 53 0.051994299 ubox
46 58 0.003749905 ubox
46 62 0.039629120 ubox
46 65 0.012066614 ubox
46 66 0.004157968 ubox
46 72 0.003937412 ubox
47 52 0.051860970 ubox
47 57 0.003643049 ubox
47 61 0.036386810 ubox
47 64 0.013634130 ubox
47 71 0.003920320 ubox
48 59 0.019044830 ubox
48 63 0.013602551 ubox
49 55 0.003879982 ubox
49 58 0.018706002 ubox
49 60 0.034860110 ubox
49 62 0.008800531 ubox
50 54 0.004031839 ubox
50 59 0.035417770 ubox
50 62 0.007658631 ubox
51 61 0.006977911 ubox
52 62 0.003597489 ubox
53 61 0.003761595 ubox
54 70 0.004084386 ubox
55 69 0.004226689 ubox
56 63 0.011303413 ubox
56 67 0.005481117 ubox
56 68 0.004228421 ubox
56 73 0.003386606 ubox
56 81 0.004635587 ubox
56 86 0.027850566 ubox
56 87 0.038562704 ubox
56 90 0.090801668 ubox
57 62 0.010972043 ubox
57 66 0.005643129 ubox
57 67 0.004105918 ubox
57 72 0.003334230 ubox
57 80 0.004655000 ubox
57 85 0.025225791 ubox
57 86 0.038201523 ubox
57 89 0.089484320 ubox
58 79 0.003956638 ubox
59 70 0.005932587 ubox
59 78 0.003424606 ubox
60 69 0.005951615 ubox
61 68 0.005905178 ubox
61 72 0.005510153 ubox
61 83 0.023572264 ubox
61 85 0.179558231 ubox
62 70 0.005609551 ubox
62 71 0.009472253 ubox
62 82 0.034242397 ubox
62 84 0.253536101 ubox
63 69 0.005791507 ubox
63 70 0.009396738 ubox
63 82 0.462436050 ubox
64 68 0.007077717 ubox
64 81 0.463313622 ubox
66 79 0.135388799 ubox
67 78 0.099788934 ubox
67 79 0.948995964 ubox
68 78 0.989783973 ubox
68 82 0.007905590 ubox
68 84 0.004720135 ubox
69 76 0.009572746 ubox
69 77 0.994610359 ubox
69 81 0.007570065 ubox
69 83 0.004478035 ubox
69 88 0.026437096 ubox
70 75 0.016827781 ubox
70 76 0.994955752 ubox
70 87 0.028271477 ubox
71 75 0.987721100 ubox
71 86 0.028260798 ubox
72 79 0.020755199 ubox
73 78 0.021270888 ubox
78 86 0.020197876 ubox
78 87 0.020061861 ubox
78 90 0.005446128 ubox
79 85 0.020117660 ubox
79 86 0.020576543 ubox
79 89 0.005977509 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
67 79 0.9500000 lbox
68 78 0.9500000 lbox
69 77 0.9500000 lbox
70 76 0.9500000 lbox
71 75 0.9500000 lbox
showpage
end
%%EOF
