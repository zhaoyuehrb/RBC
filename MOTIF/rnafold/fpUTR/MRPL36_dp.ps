%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL36)
} def

/sequence { (\
GUGCCAGUGCGCAGACGCAGGGGUCGGCGCCGGGUGAGAGCGUGCGGCCGGAUUCACCACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006995824 ubox
1 10 0.009496031 ubox
1 12 0.209660666 ubox
1 16 0.008033637 ubox
1 18 0.008444724 ubox
1 24 0.010262260 ubox
1 28 0.110977554 ubox
1 30 0.230974112 ubox
1 41 0.005991187 ubox
1 53 0.013802466 ubox
1 57 0.158501015 ubox
1 60 0.415900434 ubox
1 63 0.043518654 ubox
2 7 0.010417792 ubox
2 9 0.009341904 ubox
2 11 0.209717054 ubox
2 13 0.024046535 ubox
2 15 0.006032200 ubox
2 17 0.008031204 ubox
2 19 0.021118263 ubox
2 23 0.053101505 ubox
2 26 0.039861725 ubox
2 27 0.104240314 ubox
2 29 0.231977808 ubox
2 32 0.030197701 ubox
2 36 0.012714253 ubox
2 40 0.005904162 ubox
2 50 0.011544003 ubox
2 52 0.015054147 ubox
2 56 0.158498547 ubox
2 59 0.414392268 ubox
2 61 0.047537772 ubox
2 62 0.041831686 ubox
3 8 0.007497150 ubox
3 10 0.210670099 ubox
3 12 0.027460199 ubox
3 16 0.006828568 ubox
3 18 0.023488824 ubox
3 24 0.606005105 ubox
3 25 0.072902873 ubox
3 28 0.232665872 ubox
3 31 0.039743998 ubox
3 35 0.024649139 ubox
3 48 0.133618371 ubox
3 49 0.013575528 ubox
3 55 0.151590404 ubox
3 58 0.396136408 ubox
3 60 0.052975290 ubox
4 9 0.209769210 ubox
4 11 0.027444812 ubox
4 17 0.023400094 ubox
4 21 0.151985089 ubox
4 22 0.218815930 ubox
4 23 0.766254983 ubox
4 27 0.232070521 ubox
4 33 0.103247656 ubox
4 34 0.026623745 ubox
4 47 0.134967052 ubox
4 51 0.021239760 ubox
5 20 0.153493195 ubox
5 21 0.221026285 ubox
5 22 0.767456317 ubox
5 26 0.230987410 ubox
5 32 0.147422666 ubox
5 33 0.028047937 ubox
5 46 0.134457831 ubox
5 50 0.021099432 ubox
6 54 0.018088922 ubox
7 16 0.023220072 ubox
7 18 0.052327558 ubox
7 24 0.064891323 ubox
7 30 0.038706140 ubox
7 45 0.134603596 ubox
7 48 0.004609944 ubox
7 53 0.020876936 ubox
7 57 0.066230893 ubox
7 60 0.055291055 ubox
7 63 0.021355958 ubox
8 15 0.023301738 ubox
8 17 0.052327841 ubox
8 19 0.853371789 ubox
8 23 0.009330687 ubox
8 29 0.038422520 ubox
8 32 0.050804905 ubox
8 44 0.134401036 ubox
8 47 0.004309150 ubox
8 52 0.020592257 ubox
8 56 0.065213419 ubox
8 59 0.053014927 ubox
8 61 0.004701222 ubox
8 62 0.020832786 ubox
9 16 0.051757509 ubox
9 18 0.864702841 ubox
9 24 0.013659338 ubox
9 28 0.038363234 ubox
9 30 0.414554951 ubox
9 31 0.047492196 ubox
9 43 0.134438103 ubox
9 55 0.061892201 ubox
9 58 0.025614227 ubox
9 60 0.004057413 ubox
10 17 0.864685436 ubox
10 23 0.013793932 ubox
10 27 0.038245484 ubox
10 29 0.425677628 ubox
10 42 0.134713709 ubox
10 50 0.007607197 ubox
11 16 0.842299592 ubox
11 18 0.030345628 ubox
11 28 0.426252664 ubox
11 41 0.134712119 ubox
12 17 0.030361323 ubox
12 27 0.424662161 ubox
12 40 0.134547430 ubox
14 25 0.429200156 ubox
14 55 0.007978730 ubox
15 24 0.432829088 ubox
15 35 0.011610266 ubox
15 54 0.007744825 ubox
16 23 0.432829983 ubox
16 29 0.017725712 ubox
16 34 0.011656215 ubox
16 36 0.132321720 ubox
17 24 0.006388850 ubox
17 28 0.018127048 ubox
17 35 0.133581857 ubox
18 23 0.007545793 ubox
18 27 0.018124060 ubox
18 34 0.133551533 ubox
18 36 0.005977487 ubox
19 35 0.005847618 ubox
20 31 0.062069237 ubox
20 54 0.005883622 ubox
20 55 0.102300475 ubox
20 58 0.186394142 ubox
21 30 0.062057632 ubox
21 31 0.100126183 ubox
21 53 0.007112284 ubox
21 54 0.100747086 ubox
21 55 0.161977519 ubox
21 57 0.185910241 ubox
21 58 0.028792859 ubox
22 30 0.099713780 ubox
22 31 0.067252427 ubox
22 49 0.073991169 ubox
22 53 0.099179227 ubox
22 54 0.171732068 ubox
22 55 0.147173874 ubox
22 57 0.028748731 ubox
22 58 0.111455376 ubox
23 30 0.067945525 ubox
23 48 0.074438923 ubox
23 53 0.194549146 ubox
23 54 0.127580092 ubox
23 57 0.113328176 ubox
23 60 0.016388648 ubox
24 29 0.064760487 ubox
24 33 0.004426298 ubox
24 47 0.074445034 ubox
24 51 0.443152795 ubox
24 52 0.205367710 ubox
24 56 0.103897071 ubox
24 59 0.015868431 ubox
25 32 0.048279117 ubox
25 46 0.074297123 ubox
25 50 0.809494991 ubox
25 51 0.150189445 ubox
26 31 0.048180858 ubox
26 45 0.069487624 ubox
26 49 0.836723493 ubox
26 54 0.009165040 ubox
26 55 0.090053045 ubox
26 58 0.070311566 ubox
27 35 0.004048809 ubox
27 43 0.062835919 ubox
27 45 0.023939899 ubox
27 48 0.836352237 ubox
27 53 0.008783939 ubox
27 54 0.083642992 ubox
27 57 0.070291973 ubox
28 34 0.004229146 ubox
28 36 0.005059976 ubox
28 42 0.066413721 ubox
28 44 0.033366571 ubox
28 46 0.429954619 ubox
28 47 0.717179864 ubox
28 50 0.016129900 ubox
29 35 0.005103957 ubox
29 41 0.066463089 ubox
29 43 0.033434188 ubox
29 45 0.607830413 ubox
29 48 0.065579201 ubox
29 49 0.011924390 ubox
30 34 0.005081549 ubox
30 40 0.066350938 ubox
30 42 0.026241509 ubox
30 44 0.593382395 ubox
30 47 0.070430203 ubox
30 51 0.168148953 ubox
31 42 0.574398272 ubox
31 44 0.586775117 ubox
31 46 0.074507875 ubox
31 50 0.174677302 ubox
32 41 0.574337279 ubox
32 43 0.600500532 ubox
32 45 0.074572320 ubox
32 49 0.174974737 ubox
32 55 0.003282208 ubox
32 58 0.033027556 ubox
33 48 0.174943986 ubox
33 49 0.004494370 ubox
33 54 0.003290712 ubox
33 57 0.023921680 ubox
33 58 0.477018748 ubox
34 41 0.607711772 ubox
34 43 0.065574283 ubox
34 45 0.008659357 ubox
34 48 0.005173332 ubox
34 53 0.003404508 ubox
34 57 0.489554690 ubox
34 60 0.005690346 ubox
35 40 0.598055015 ubox
35 42 0.065328491 ubox
35 44 0.008692063 ubox
35 46 0.173537869 ubox
35 47 0.005350193 ubox
35 52 0.003403141 ubox
35 56 0.490126229 ubox
35 59 0.005639551 ubox
36 41 0.068112052 ubox
36 43 0.005909309 ubox
36 45 0.173971278 ubox
36 54 0.004274043 ubox
36 55 0.490418403 ubox
36 58 0.005580164 ubox
37 53 0.017990214 ubox
37 54 0.488381978 ubox
38 53 0.452819310 ubox
38 54 0.012502787 ubox
38 55 0.007204025 ubox
39 53 0.022147354 ubox
39 54 0.007288647 ubox
40 48 0.169112690 ubox
40 53 0.005566783 ubox
41 47 0.169358663 ubox
41 50 0.458479486 ubox
42 48 0.054973677 ubox
42 49 0.447653756 ubox
42 53 0.009305121 ubox
42 57 0.003538979 ubox
42 60 0.006470974 ubox
42 63 0.003666755 ubox
43 47 0.068986897 ubox
43 50 0.019388257 ubox
43 52 0.010547135 ubox
43 56 0.003543748 ubox
43 59 0.006459162 ubox
43 61 0.009193219 ubox
44 49 0.019590274 ubox
44 55 0.003505465 ubox
44 58 0.006280737 ubox
44 60 0.010441579 ubox
46 55 0.005216868 ubox
46 58 0.011259543 ubox
47 54 0.004163211 ubox
47 57 0.011251815 ubox
50 58 0.165961015 ubox
51 57 0.170996376 ubox
53 62 0.022867817 ubox
54 61 0.024812233 ubox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
11 16 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
