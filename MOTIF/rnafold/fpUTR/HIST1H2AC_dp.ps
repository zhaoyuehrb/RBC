%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H2AC)
} def

/sequence { (\
AAAGCGGCCAUGUUUUACAUAUUUCUUGAUUUUGUUUGUUUUCUCGUGAGCUUAGGCCGCUGGUUUUGGUGAUUUUUGUCUGAUUGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.046719584 ubox
1 66 0.033702242 ubox
1 67 0.039312504 ubox
1 85 0.003848329 ubox
2 64 0.053172326 ubox
2 65 0.042073996 ubox
2 66 0.042998626 ubox
2 67 0.018540386 ubox
2 84 0.003728732 ubox
3 61 0.968753938 ubox
3 64 0.021644460 ubox
3 65 0.021907421 ubox
3 66 0.009694508 ubox
3 67 0.003189022 ubox
4 60 0.999798278 ubox
4 64 0.004427393 ubox
4 87 0.004911404 ubox
5 59 0.999935297 ubox
5 63 0.003778725 ubox
5 86 0.004909992 ubox
6 52 0.004530573 ubox
6 58 0.999946950 ubox
6 85 0.003211216 ubox
7 51 0.006598044 ubox
7 57 0.999962031 ubox
8 50 0.006849776 ubox
8 56 0.999952643 ubox
9 28 0.003270538 ubox
9 48 0.036627273 ubox
9 55 0.997135560 ubox
10 20 0.386481145 ubox
10 22 0.079485070 ubox
10 27 0.005541280 ubox
10 30 0.010360534 ubox
10 33 0.006071573 ubox
10 35 0.012670415 ubox
10 37 0.004170660 ubox
10 39 0.007941631 ubox
10 47 0.073070092 ubox
11 17 0.012215707 ubox
11 19 0.409486915 ubox
11 21 0.085661339 ubox
11 29 0.011013704 ubox
11 34 0.013085971 ubox
11 38 0.008100763 ubox
11 46 0.073559569 ubox
11 54 0.296506025 ubox
12 16 0.012329227 ubox
12 18 0.416927610 ubox
12 20 0.087075421 ubox
12 22 0.019459234 ubox
12 27 0.004497199 ubox
12 30 0.027646706 ubox
12 33 0.011664246 ubox
12 37 0.007027713 ubox
12 39 0.005060483 ubox
12 45 0.073432668 ubox
12 51 0.628030582 ubox
12 53 0.283960920 ubox
13 17 0.375637724 ubox
13 19 0.084615498 ubox
13 21 0.020517429 ubox
13 29 0.029210264 ubox
13 34 0.004370595 ubox
13 38 0.006228881 ubox
13 49 0.016216087 ubox
13 50 0.562149627 ubox
14 28 0.028658761 ubox
14 29 0.012896810 ubox
14 48 0.015872132 ubox
14 49 0.480399863 ubox
14 50 0.587831234 ubox
14 54 0.005597008 ubox
15 28 0.013442247 ubox
15 29 0.022228315 ubox
15 48 0.376740668 ubox
15 49 0.697713777 ubox
15 50 0.027727563 ubox
15 54 0.003440524 ubox
16 28 0.023706642 ubox
16 34 0.011467239 ubox
16 38 0.022781832 ubox
16 48 0.757762199 ubox
16 49 0.035720131 ubox
16 54 0.006282367 ubox
17 27 0.022189846 ubox
17 33 0.011568903 ubox
17 35 0.217372525 ubox
17 37 0.021365606 ubox
17 39 0.120017984 ubox
17 47 0.808336005 ubox
17 53 0.005890317 ubox
18 28 0.105703613 ubox
18 34 0.234774416 ubox
18 38 0.126249174 ubox
18 46 0.809980815 ubox
18 48 0.092520192 ubox
19 27 0.105996015 ubox
19 30 0.034193768 ubox
19 33 0.231111406 ubox
19 35 0.094059231 ubox
19 37 0.124174338 ubox
19 39 0.095687855 ubox
19 47 0.095483689 ubox
20 28 0.037123859 ubox
20 29 0.035763181 ubox
20 34 0.096839503 ubox
20 38 0.096498614 ubox
20 46 0.091892183 ubox
20 48 0.021253503 ubox
20 54 0.017690872 ubox
21 27 0.049998998 ubox
21 30 0.238364869 ubox
21 33 0.095072900 ubox
21 35 0.096597256 ubox
21 37 0.095029244 ubox
21 39 0.043368656 ubox
21 47 0.033269509 ubox
21 53 0.019567147 ubox
22 29 0.249887724 ubox
22 34 0.097963441 ubox
22 38 0.043526530 ubox
22 46 0.032450526 ubox
22 49 0.011627439 ubox
22 50 0.010057377 ubox
23 28 0.245883155 ubox
23 29 0.066006682 ubox
23 48 0.012347489 ubox
23 49 0.012489230 ubox
23 50 0.088449092 ubox
23 54 0.003856987 ubox
24 28 0.061313963 ubox
24 48 0.011524126 ubox
24 49 0.113885440 ubox
25 48 0.116294278 ubox
25 50 0.021985770 ubox
26 49 0.022170006 ubox
26 50 0.006173832 ubox
26 54 0.004619360 ubox
27 34 0.034659133 ubox
27 38 0.301344159 ubox
27 46 0.101699265 ubox
27 48 0.020875764 ubox
27 49 0.007893349 ubox
27 54 0.033344092 ubox
28 33 0.030802741 ubox
28 36 0.444143484 ubox
28 37 0.371669944 ubox
28 40 0.150363313 ubox
28 41 0.029667289 ubox
28 42 0.017144423 ubox
28 43 0.118252390 ubox
28 45 0.122082439 ubox
28 47 0.010964602 ubox
28 53 0.035423045 ubox
29 35 0.447763075 ubox
29 36 0.373172040 ubox
29 39 0.154148169 ubox
29 40 0.029925776 ubox
29 41 0.018924297 ubox
29 42 0.116813077 ubox
29 44 0.115201646 ubox
29 47 0.010057136 ubox
29 52 0.035224013 ubox
30 34 0.415323156 ubox
30 38 0.153733571 ubox
30 46 0.009634339 ubox
30 49 0.009759879 ubox
30 50 0.010860600 ubox
30 55 0.004405659 ubox
31 48 0.010455405 ubox
31 49 0.012382399 ubox
31 50 0.017742686 ubox
31 54 0.077396802 ubox
32 48 0.012161955 ubox
32 49 0.019908160 ubox
32 50 0.005556856 ubox
32 54 0.020663058 ubox
32 55 0.003274152 ubox
33 46 0.017260991 ubox
33 48 0.019556891 ubox
33 49 0.006609538 ubox
33 54 0.041265958 ubox
34 45 0.030357518 ubox
34 47 0.012708952 ubox
34 51 0.190301500 ubox
34 53 0.041104789 ubox
35 46 0.004166292 ubox
35 49 0.010495646 ubox
35 50 0.190203802 ubox
36 48 0.011358758 ubox
36 49 0.187742553 ubox
36 50 0.006644840 ubox
36 54 0.038578774 ubox
37 46 0.057227992 ubox
37 48 0.181738284 ubox
37 49 0.008217376 ubox
37 54 0.037745145 ubox
38 45 0.102695292 ubox
38 47 0.146486918 ubox
38 51 0.405401922 ubox
38 53 0.034939863 ubox
39 46 0.066290393 ubox
39 49 0.012725874 ubox
39 50 0.404902387 ubox
40 48 0.014098141 ubox
40 49 0.399736941 ubox
40 50 0.016703097 ubox
40 54 0.006486323 ubox
41 48 0.393170872 ubox
41 49 0.019524744 ubox
41 50 0.141690233 ubox
41 54 0.003876551 ubox
42 48 0.017454881 ubox
42 49 0.193212347 ubox
43 48 0.199209606 ubox
43 50 0.020049049 ubox
44 49 0.018927627 ubox
47 54 0.010382071 ubox
48 53 0.010522710 ubox
50 57 0.003318673 ubox
51 56 0.003381080 ubox
52 83 0.004481676 ubox
53 82 0.005784915 ubox
54 81 0.005980426 ubox
55 80 0.006002556 ubox
56 79 0.005997862 ubox
57 78 0.005985736 ubox
58 71 0.005799066 ubox
59 70 0.006085877 ubox
60 69 0.006242043 ubox
61 68 0.009336945 ubox
61 82 0.004375863 ubox
61 86 0.007353800 ubox
61 88 0.022054840 ubox
62 67 0.020296285 ubox
62 70 0.006554282 ubox
62 74 0.047844701 ubox
62 75 0.008106704 ubox
62 76 0.004037245 ubox
62 77 0.003814538 ubox
62 80 0.010108135 ubox
62 81 0.019795131 ubox
62 85 0.041334198 ubox
62 87 0.078755647 ubox
63 70 0.004930897 ubox
63 73 0.060861596 ubox
63 74 0.009399925 ubox
63 75 0.004445934 ubox
63 76 0.003980122 ubox
63 79 0.008774952 ubox
63 80 0.020665447 ubox
63 84 0.048349416 ubox
63 87 0.225054946 ubox
64 69 0.004042666 ubox
64 72 0.061875575 ubox
64 78 0.006443438 ubox
64 83 0.048398955 ubox
64 86 0.223829766 ubox
65 71 0.061329379 ubox
65 72 0.017223001 ubox
65 82 0.045987203 ubox
65 83 0.021630711 ubox
66 71 0.018038353 ubox
66 72 0.006350589 ubox
66 82 0.020973012 ubox
66 83 0.132172487 ubox
67 71 0.006163422 ubox
67 78 0.009593507 ubox
67 82 0.135001074 ubox
67 86 0.027308177 ubox
67 88 0.098608680 ubox
68 74 0.005488160 ubox
68 75 0.013591060 ubox
68 76 0.010192022 ubox
68 77 0.014898371 ubox
68 80 0.038930724 ubox
68 81 0.130048832 ubox
68 85 0.049890792 ubox
68 87 0.101359375 ubox
69 73 0.004069994 ubox
69 74 0.013529080 ubox
69 75 0.010949744 ubox
69 76 0.015429019 ubox
69 79 0.035137140 ubox
69 80 0.125925823 ubox
69 84 0.054687834 ubox
69 87 0.917152399 ubox
70 78 0.055607204 ubox
70 82 0.020495194 ubox
70 83 0.051747838 ubox
70 86 0.919060273 ubox
70 88 0.017855360 ubox
71 77 0.060945101 ubox
71 80 0.300335231 ubox
71 81 0.004535170 ubox
71 85 0.919098536 ubox
71 87 0.022502648 ubox
72 76 0.052391896 ubox
72 79 0.301173809 ubox
72 84 0.922834673 ubox
73 78 0.295793294 ubox
73 83 0.919218827 ubox
74 82 0.907749547 ubox
74 83 0.074740720 ubox
75 82 0.100769112 ubox
75 83 0.032652525 ubox
76 82 0.038628659 ubox
76 83 0.016127653 ubox
77 82 0.017981326 ubox
77 86 0.005059622 ubox
77 88 0.068488422 ubox
78 84 0.004772736 ubox
78 85 0.007265185 ubox
78 87 0.087097890 ubox
79 83 0.004758276 ubox
79 86 0.083541506 ubox
81 88 0.030980997 ubox
82 87 0.040606348 ubox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
69 87 0.9500000 lbox
70 86 0.9500000 lbox
71 85 0.9500000 lbox
72 84 0.9500000 lbox
73 83 0.9500000 lbox
74 82 0.9500000 lbox
showpage
end
%%EOF
