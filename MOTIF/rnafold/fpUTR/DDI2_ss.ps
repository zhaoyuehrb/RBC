%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACGGACUCGCAGGCGUGUGGCGGCGGCCGUGCUUGCUAGUGAGGGCGGGAGGGAGUGACUCACUGAGCGUGUGUGAGGGAGGGAGCGAGCGAGCGAACGAGCAGCCGGCGCCGUCCUCCCGCAGCACCAGCCAGGCCACGCCGCCGCCUCUUCCCCUGCGCCCCGCGCCCAGGCCGGGCCGAGCCGAGCCGAGCCGGGUCGGGCCCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[514.71002197 703.28131104]
[511.00439453 696.01702881]
[510.46377563 687.78601074]
[513.25018311 679.92242432]
[504.39782715 667.81304932]
[495.54547119 655.70373535]
[482.66275024 655.52667236]
[472.07580566 647.84790039]
[467.78067017 635.28894043]
[471.55700684 622.36157227]
[462.88336182 610.12365723]
[454.20971680 597.88568115]
[445.53604126 585.64770508]
[436.86239624 573.40972900]
[428.18875122 561.17181396]
[412.48632812 564.14135742]
[397.00469971 559.95013428]
[384.85702515 549.38836670]
[378.50897217 534.53247070]
[379.27828979 518.33721924]
[387.06164551 504.04776001]
[378.20928955 491.93844604]
[369.35690308 479.82913208]
[360.50454712 467.71981812]
[351.65219116 455.61050415]
[342.79980469 443.50119019]
[333.94744873 431.39187622]
[325.09506226 419.28256226]
[316.24270630 407.17324829]
[309.75906372 403.62939453]
[307.35079956 394.82055664]
[298.67715454 382.58261108]
[290.00347900 370.34463501]
[281.24023438 358.17068481]
[272.38787842 346.06134033]
[263.53549194 333.95202637]
[254.68313599 321.84271240]
[245.74211121 309.79870605]
[236.71293640 297.82064819]
[222.87329102 292.31488037]
[220.74485779 276.63748169]
[211.71568298 264.65942383]
[202.68650818 252.68138123]
[189.80259705 252.69342041]
[179.10408020 245.17086792]
[174.62501526 232.67636108]
[178.21119690 219.69494629]
[169.35882568 207.58563232]
[160.50645447 195.47631836]
[151.65408325 183.36700439]
[142.80171204 171.25769043]
[133.94934082 159.14836121]
[125.09696960 147.03904724]
[116.24459839 134.92973328]
[107.39222717 122.82041931]
[99.82202148 126.21839142]
[90.86601257 126.94403839]
[81.50807953 124.48246765]
[72.90795135 118.68825531]
[66.26218414 109.84038544]
[62.64979172 98.64535522]
[49.37583160 91.65950775]
[36.10187149 84.67366791]
[22.82791138 77.68782806]
[9.55395126 70.70198822]
[-3.82029986 78.39177704]
[-19.22770882 77.60736084]
[-31.75182533 68.59902954]
[-37.39625168 54.24131012]
[-34.35987091 39.11570740]
[-23.61157990 28.04873657]
[-8.58112049 24.57183456]
[5.93534184 29.79446411]
[15.30565739 42.05010605]
[16.53979301 57.42802429]
[29.81375313 64.41386414]
[43.08771515 71.39971161]
[56.36167526 78.38555145]
[69.63563538 85.37139130]
[75.55774689 80.76937103]
[66.35389709 68.92499542]
[78.19842529 59.72134781]
[87.40196991 71.56533051]
[93.32408142 66.96331024]
[89.83310699 52.37519455]
[79.09652710 40.75467300]
[83.65933228 26.57616615]
[80.16835785 11.98805046]
[66.98192596 3.69613647]
[63.64939880 -11.14801693]
[71.63573456 -23.66816139]
[68.14476013 -38.25627518]
[57.58166122 -45.65528107]
[54.97343445 -57.87593842]
[61.18472672 -68.25437164]
[57.90827942 -82.89215851]
[44.42923737 -91.14388275]
[40.81424332 -106.52918243]
[49.20801544 -119.92022705]
[64.63066864 -123.37235260]
[77.93222809 -114.83747864]
[81.22110748 -99.37918091]
[72.54606628 -86.16860962]
[75.82251740 -71.53081512]
[88.38336945 -59.27415085]
[82.73287964 -41.74724960]
[86.22384644 -27.15913582]
[99.01268768 -19.61054230]
[102.76084137 -4.86584997]
[94.75646973 8.49707699]
[98.24744415 23.08519173]
[108.73432922 33.66227341]
[104.42121887 48.88422012]
[107.91219330 63.47233582]
[128.62753296 88.96337128]
[119.50154114 113.96804810]
[128.35391235 126.07736206]
[137.20628357 138.18667603]
[146.05865479 150.29598999]
[154.91102600 162.40531921]
[163.76339722 174.51463318]
[172.61576843 186.62394714]
[181.46813965 198.73326111]
[190.32051086 210.84257507]
[207.65377808 213.21220398]
[217.71144104 227.11164856]
[214.66456604 243.65219116]
[223.69374084 255.63024902]
[232.72293091 267.60830688]
[247.20838928 273.97082520]
[248.69099426 288.79147339]
[257.72018433 300.76953125]
[265.38296509 305.73709106]
[266.79244995 312.99035645]
[275.64480591 325.09967041]
[284.49719238 337.20898438]
[293.34954834 349.31829834]
[300.93859863 354.39782715]
[302.24145508 361.67098999]
[310.91510010 373.90893555]
[319.58877563 386.14691162]
[328.35202026 398.32086182]
[337.20437622 410.43017578]
[346.05676270 422.53952026]
[354.90911865 434.64883423]
[363.76150513 446.75814819]
[372.61386108 458.86746216]
[381.46624756 470.97677612]
[390.31860352 483.08609009]
[399.17098999 495.19540405]
[412.96029663 492.10226440]
[426.84500122 494.49075317]
[438.73477173 501.96777344]
[446.85229492 513.37664795]
[449.99908447 526.97607422]
[447.73229980 540.70562744]
[440.42669678 552.49810791]
[449.10037231 564.73608398]
[457.77401733 576.97406006]
[466.44766235 589.21203613]
[475.12133789 601.44995117]
[483.79498291 613.68792725]
[501.09158325 616.31176758]
[510.94412231 630.35736084]
[507.65478516 646.85137939]
[516.50714111 658.96069336]
[525.35949707 671.07000732]
[546.46411133 678.60546875]
[547.93951416 700.19921875]
[557.48730469 711.76818848]
[567.03509521 723.33709717]
[576.58288574 734.90600586]
[591.33441162 740.62457275]
[593.46807861 755.36560059]
[603.01586914 766.93450928]
[612.56365967 778.50341797]
[622.11138916 790.07232666]
[636.86297607 795.79095459]
[638.99664307 810.53192139]
[648.54443359 822.10083008]
[658.09216309 833.66979980]
[667.63995361 845.23870850]
[683.12896729 846.89068604]
[692.64697266 858.75921631]
[690.97662354 873.51538086]
[700.52441406 885.08435059]
[710.15679932 896.58282471]
[719.87341309 908.01037598]
[734.73986816 916.16052246]
[731.02368164 932.70214844]
[714.09973145 933.71038818]
[708.44592285 917.72692871]
[698.72930908 906.29943848]
[692.00323486 903.24060059]
[688.95544434 894.63208008]
[679.40771484 883.06317139]
[664.60253906 881.90411377]
[654.75494385 870.30761719]
[656.07104492 854.78649902]
[646.52325439 843.21752930]
[636.97546387 831.64862061]
[627.42773438 820.07971191]
[613.35906982 815.18859863]
[610.54248047 799.62011719]
[600.99468994 788.05120850]
[591.44696045 776.48229980]
[581.89916992 764.91339111]
[567.83050537 760.02227783]
[565.01391602 744.45379639]
[555.46618652 732.88488770]
[545.91839600 721.31591797]
[536.37060547 709.74700928]
[528.55346680 710.68444824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 167]
[5 166]
[6 165]
[10 162]
[11 161]
[12 160]
[13 159]
[14 158]
[15 157]
[21 150]
[22 149]
[23 148]
[24 147]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[31 141]
[32 140]
[33 139]
[34 137]
[35 136]
[36 135]
[37 134]
[38 132]
[39 131]
[41 129]
[42 128]
[43 127]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
[61 79]
[62 78]
[63 77]
[64 76]
[65 75]
[84 114]
[85 113]
[87 111]
[88 110]
[91 107]
[92 106]
[95 104]
[96 103]
[169 212]
[170 211]
[171 210]
[172 209]
[174 207]
[175 206]
[176 205]
[177 204]
[179 202]
[180 201]
[181 200]
[182 199]
[185 196]
[186 195]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
