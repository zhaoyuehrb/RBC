%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCCCGUUCCCCGUCCGCGGCGGCCCUGCAGGCGACCCCGCGUCCCCACCGGCGGGAGCUCGGGGAAGAGCGGGCGGCGGCGCUGCUGCUGGCGGCGGCCGGCUGGAUGCGAGACCCGCGCAGACCCGGCGGCGGACGGCGGCUCUCGACUCCGGAGAGCGGAUCGCGGGGCGCAGGAGCCCGAUCGCGCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[89.04135132 179.82034302]
[91.53746033 160.60005188]
[91.77544403 145.60194397]
[92.01343536 130.60382080]
[92.25142670 115.60571289]
[82.70107269 104.03891754]
[67.92895508 101.43419647]
[53.15684128 98.82947540]
[42.15629578 105.57714081]
[29.90064430 103.09647369]
[22.85761642 93.25348663]
[8.12868595 90.41471863]
[-6.62230110 87.69288635]
[-21.39441681 85.08816528]
[-36.16653442 82.48344421]
[-50.93865204 79.87872314]
[-65.71076965 77.27400208]
[-80.64485168 82.49737549]
[-91.83519745 72.66755676]
[-106.60731506 70.06283569]
[-121.37943268 67.45811462]
[-136.15155029 64.85338593]
[-150.92366028 62.24866486]
[-165.69578552 59.64394379]
[-180.46789551 57.03922272]
[-195.24002075 54.43449783]
[-210.17410278 59.65787506]
[-221.36444092 49.82805634]
[-236.13656616 47.22333527]
[-250.90867615 44.61861038]
[-265.68078613 42.01388931]
[-270.60491943 43.80917740]
[-275.25796509 43.55449295]
[-278.90237427 41.69838715]
[-281.08666992 38.91769028]
[-295.71810913 35.61303329]
[-302.15097046 37.21245956]
[-307.60354614 35.56333160]
[-310.75787354 31.96443367]
[-325.27709961 28.19721222]
[-339.79632568 24.42999268]
[-354.31555176 20.66277313]
[-368.83477783 16.89555359]
[-387.99212646 23.14675331]
[-401.18603516 9.01984406]
[-415.81747437 5.71518612]
[-430.44891357 2.41052794]
[-445.08038330 -0.89412999]
[-459.71182251 -4.19878817]
[-468.56900024 2.13773537]
[-479.23217773 2.53928161]
[-488.16510010 -2.88535357]
[-492.53817749 -12.13499355]
[-507.05740356 -15.90221310]
[-521.57666016 -19.66943359]
[-537.23004150 -14.78034878]
[-549.10583496 -26.08953285]
[-544.98718262 -41.96306610]
[-529.11108398 -46.07161713]
[-517.80938721 -34.18866348]
[-503.29019165 -30.42144394]
[-488.77096558 -26.65422440]
[-470.57043457 -33.16492844]
[-456.40716553 -18.83023453]
[-441.77569580 -15.52557659]
[-427.14425659 -12.22091866]
[-412.51281738 -8.91626072]
[-397.88137817 -5.61160278]
[-389.75598145 -11.82914734]
[-379.33038330 -12.55745697]
[-370.03659058 -7.31440544]
[-365.06756592 2.37632322]
[-350.54833984 6.14354277]
[-336.02911377 9.91076279]
[-321.50985718 13.67798233]
[-306.99063110 17.44520187]
[-292.41345215 20.98158646]
[-277.78201294 24.28624535]
[-263.07608032 27.24177170]
[-248.30395508 29.84649467]
[-233.53184509 32.45121765]
[-218.75971985 35.05593872]
[-204.88223267 29.64625359]
[-192.63528442 39.66238022]
[-177.86317444 42.26710510]
[-163.09106445 44.87182617]
[-148.31893921 47.47655106]
[-133.54682922 50.08127213]
[-118.77471161 52.68599701]
[-104.00259399 55.29071808]
[-89.23047638 57.89543915]
[-75.35298920 52.48575592]
[-63.10604477 62.50188446]
[-48.33392715 65.10660553]
[-33.56180954 67.71132660]
[-18.78969574 70.31604767]
[-4.01757860 72.92077637]
[3.12318373 70.98419189]
[10.96745491 75.68579102]
[25.69638634 78.52455902]
[41.94070435 71.89660645]
[55.76156235 84.05735779]
[70.53367615 86.66207886]
[85.30579376 89.26679993]
[100.03472900 86.42803192]
[112.78060913 78.51965332]
[125.52648926 70.61126709]
[138.27236938 62.70288849]
[151.01824951 54.79450607]
[154.73446655 39.66746140]
[167.77325439 31.82880592]
[182.17167664 35.46487045]
[194.91757202 27.55648804]
[207.66345215 19.64810753]
[220.40933228 11.73972511]
[233.15521240 3.83134270]
[240.80226135 -10.01904011]
[255.69625854 -10.15460110]
[268.44213867 -18.06298256]
[281.18801880 -25.97136497]
[293.93389893 -33.87974930]
[292.76739502 -45.30209732]
[295.93826294 -56.28389359]
[302.95050049 -65.24555969]
[312.75851440 -70.91302490]
[323.92282104 -72.49883270]
[334.82138062 -69.81131744]
[343.88516235 -63.27689362]
[356.99291992 -70.56984711]
[370.10064697 -77.86279297]
[378.05569458 -92.20326996]
[394.45483398 -92.21366882]
[402.42803955 -77.88327789]
[393.77316284 -63.95399094]
[377.39361572 -64.75505066]
[364.28585815 -57.46210480]
[351.17813110 -50.16915131]
[350.01675415 -31.52656937]
[337.76593018 -17.22846031]
[319.22885132 -13.15831375]
[301.84228516 -21.13386536]
[289.09640503 -13.22548389]
[276.35052490 -5.31710196]
[263.60464478 2.59127998]
[256.86926270 15.87600231]
[241.06359863 16.57722473]
[228.31770325 24.48560715]
[215.57182312 32.39398956]
[202.82594299 40.30237198]
[190.08006287 48.21075058]
[186.94409180 62.72630692]
[174.13061523 70.92810059]
[158.92663574 67.54039001]
[146.18075562 75.44876862]
[133.43487549 83.35715485]
[120.68898773 91.26553345]
[107.94310760 99.17391205]
[116.33323669 99.11416626]
[124.72825623 99.88288879]
[133.06674194 101.47939301]
[142.52503967 113.12158966]
[151.98332214 124.76378632]
[161.44161987 136.40599060]
[170.99197388 147.97277832]
[180.63378906 159.46345520]
[190.27560425 170.95411682]
[199.91740417 182.44477844]
[204.84349060 184.23466492]
[208.24423218 187.42070007]
[209.84292603 191.18513489]
[209.72880554 194.71931458]
[218.81294250 206.65574646]
[227.89709473 218.59217834]
[236.98124695 230.52859497]
[252.67375183 232.40498352]
[262.37741089 244.87954712]
[260.33520508 260.55133057]
[247.75875854 270.12255859]
[232.10943604 267.91479492]
[222.67170715 255.23785400]
[225.04481506 239.61274719]
[215.96066284 227.67631531]
[206.87652588 215.73988342]
[197.79237366 203.80346680]
[188.42674255 192.08659363]
[178.78492737 180.59593201]
[169.14311218 169.10525513]
[159.50129700 157.61459351]
[152.78634644 154.50811768]
[149.79942322 145.86427307]
[140.34112549 134.22207642]
[130.88284302 122.57987976]
[121.42455292 110.93768311]
[107.24953461 115.84370422]
[107.01155090 130.84181213]
[106.77355957 145.83993530]
[106.53556824 160.83804321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[5 194]
[6 104]
[7 103]
[8 102]
[11 100]
[12 99]
[13 97]
[14 96]
[15 95]
[16 94]
[17 93]
[19 91]
[20 90]
[21 89]
[22 88]
[23 87]
[24 86]
[25 85]
[26 84]
[28 82]
[29 81]
[30 80]
[31 79]
[35 78]
[36 77]
[39 76]
[40 75]
[41 74]
[42 73]
[43 72]
[45 68]
[46 67]
[47 66]
[48 65]
[49 64]
[53 62]
[54 61]
[55 60]
[105 157]
[106 156]
[107 155]
[108 154]
[109 153]
[112 150]
[113 149]
[114 148]
[115 147]
[116 146]
[118 144]
[119 143]
[120 142]
[121 141]
[128 137]
[129 136]
[130 135]
[160 193]
[161 192]
[162 191]
[163 190]
[164 188]
[165 187]
[166 186]
[167 185]
[171 184]
[172 183]
[173 182]
[174 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
