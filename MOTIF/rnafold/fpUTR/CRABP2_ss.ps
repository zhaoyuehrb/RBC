%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCGGGAGGCGGGGCCACUUCAAUCCUGGGCAGGGGCGGUUCCGUACAGGGUAUAAAAGCUGUCCGCGCGGGAGCCCAGGCCAGCUUUGGGGUUGUCCCUGGACUUGUCUUGGUUCCAGAACCUGACGACCCGGCGACGGCGACGUCUCUUUUGACUAAAAGACAGUGUCCAGUGCUCCAGCCUAGGAGUCUACGGGGACCGCCUCCCGCGCCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[134.57632446 634.35388184]
[133.30424500 619.40789795]
[124.51546478 607.38269043]
[131.05455017 592.97601318]
[129.78247070 578.03009033]
[128.51037598 563.08410645]
[127.23828888 548.13812256]
[125.96620178 533.19219971]
[124.69411469 518.24621582]
[123.42201996 503.30026245]
[122.14993286 488.35430908]
[120.87784576 473.40832520]
[119.60575867 458.46237183]
[118.33366394 443.51641846]
[106.81626892 434.14169312]
[105.31327820 419.00250244]
[115.22443390 406.98556519]
[113.95234680 392.03958130]
[99.51090240 388.20159912]
[87.23091125 379.63827515]
[78.60550690 367.36727905]
[74.69153595 352.85858154]
[75.98000336 337.85824585]
[82.33464050 324.17837524]
[93.00598907 313.47817993]
[106.71974945 307.06271362]
[105.44765472 292.11676025]
[104.17556763 277.17080688]
[102.90348053 262.22482300]
[101.63139343 247.27886963]
[100.35929871 232.33290100]
[99.08721161 217.38694763]
[97.81512451 202.44097900]
[89.02635193 190.41572571]
[95.56543732 176.00910950]
[94.29335022 161.06314087]
[93.02126312 146.11718750]
[91.74917603 131.17121887]
[90.47708130 116.22525787]
[79.94579315 105.54386902]
[65.01933289 104.06040955]
[50.09286499 102.57695007]
[35.16640091 101.09349060]
[20.23993683 99.61003113]
[5.31347227 98.12657166]
[-9.62311554 96.74876404]
[-24.56907845 95.47667694]
[-39.54505157 94.62805176]
[-54.53904724 94.20356750]
[-69.53303528 93.77908325]
[-84.52703094 93.35459900]
[-92.51137543 106.47503662]
[-105.99393463 113.83141327]
[-121.34796143 113.44490051]
[-134.44329834 105.41946411]
[-141.75738525 91.91391754]
[-141.32273865 76.56118011]
[-133.25630188 63.49105453]
[-119.72789001 56.21934509]
[-104.37658691 56.70210648]
[-91.33181763 64.80947113]
[-84.10254669 78.36061096]
[-69.10855865 78.78509521]
[-54.11456299 79.20957184]
[-39.12057114 79.63405609]
[-36.99568558 77.81739807]
[-34.02602768 76.72948456]
[-30.48431396 76.69523621]
[-26.75538254 77.93537140]
[-23.29698944 80.53071594]
[-8.35102654 81.80280304]
[-1.42535448 79.24015808]
[6.79693174 83.20011139]
[21.72339630 84.68357086]
[36.64986038 86.16703033]
[51.57632446 87.65048981]
[66.50279236 89.13394928]
[81.42925262 90.61740875]
[85.31627655 84.20327759]
[93.09030914 71.37500763]
[96.97732544 64.96087646]
[88.75440979 52.41561508]
[74.71813202 45.11537552]
[74.21220398 30.22936630]
[65.98928833 17.68410492]
[57.76636887 5.13884258]
[49.54344940 -7.40641975]
[41.32052994 -19.95168114]
[26.44168282 -26.84747124]
[25.24387932 -43.20281601]
[38.95932007 -52.19274139]
[53.47873306 -44.56917953]
[53.86579132 -28.17460060]
[62.08871078 -15.62933826]
[70.31163025 -3.08407664]
[78.53454590 9.46118546]
[86.75746918 22.00644684]
[100.20558929 28.40936470]
[101.29966736 44.19269562]
[109.52259064 56.73796082]
[124.45917511 58.11576843]
[134.83825684 47.28642654]
[145.21734619 36.45708466]
[155.59642029 25.62774467]
[165.97550964 14.79840279]
[176.35459900 3.96906090]
[186.65678406 -6.93344784]
[196.88159180 -17.90857697]
[207.10638428 -28.88370705]
[217.33119202 -39.85883713]
[227.55598450 -50.83396912]
[237.78079224 -61.80909729]
[248.00558472 -72.78422546]
[242.54847717 -86.99623871]
[243.79798889 -102.10668945]
[251.45291138 -115.12292480]
[263.94876099 -123.49040222]
[278.77728271 -125.59397888]
[292.98974609 -121.06946564]
[303.21453857 -132.04460144]
[313.43933105 -143.01972961]
[323.66412354 -153.99485779]
[333.88894653 -164.96998596]
[331.86599731 -178.28134155]
[337.79016113 -190.15516663]
[349.29962158 -196.35928345]
[362.08874512 -194.82713318]
[372.46780396 -205.65646362]
[382.84689331 -216.48580933]
[393.22598267 -227.31515503]
[392.53659058 -244.79882812]
[404.47311401 -257.12612915]
[421.29409790 -257.00466919]
[431.51892090 -267.97979736]
[441.74371338 -278.95492554]
[444.89590454 -295.04827881]
[460.49484253 -300.10836792]
[472.49371338 -288.92984009]
[468.54907227 -273.01217651]
[452.71884155 -268.73013306]
[442.49404907 -257.75500488]
[432.26922607 -246.77987671]
[434.52249146 -234.09791565]
[428.97946167 -222.25590515]
[417.45980835 -215.66946411]
[404.05532837 -216.93606567]
[393.67623901 -206.10673523]
[383.29714966 -195.27738953]
[372.91806030 -184.44804382]
[373.99096680 -167.66085815]
[362.35873413 -155.04603577]
[344.86407471 -154.74517822]
[334.63925171 -143.77005005]
[324.41445923 -132.79492188]
[314.18966675 -121.81979370]
[303.96487427 -110.84466553]
[309.48284912 -96.98763275]
[308.43286133 -82.04751587]
[300.96975708 -68.99137115]
[288.52728271 -60.43538666]
[273.54296875 -58.12072754]
[258.98071289 -62.55942917]
[248.75592041 -51.58429718]
[238.53111267 -40.60916901]
[228.30632019 -29.63403702]
[218.08152771 -18.65890884]
[207.85671997 -7.68377829]
[197.63192749 3.29135180]
[195.37417603 10.32233143]
[187.18392944 14.34814358]
[176.80485535 25.17748451]
[166.42576599 36.00682831]
[156.04669189 46.83616638]
[145.66760254 57.66550827]
[135.28851318 68.49485016]
[130.64659119 107.72854614]
[105.42304230 114.95316315]
[106.69513702 129.89912415]
[107.96722412 144.84509277]
[109.23931122 159.79104614]
[110.51139832 174.73701477]
[119.39116669 187.83129883]
[112.76108551 201.16889954]
[114.03317261 216.11485291]
[115.30526733 231.06082153]
[116.57735443 246.00677490]
[117.84944153 260.95275879]
[119.12152863 275.89871216]
[120.39361572 290.84466553]
[121.66571045 305.79061890]
[136.26641846 309.79617310]
[148.59262085 318.53900146]
[157.16775513 330.94815063]
[160.97276306 345.51498413]
[159.56706238 360.47644043]
[153.13954163 374.02862549]
[142.48339844 384.54409790]
[128.89830017 390.76751709]
[130.17039490 405.71347046]
[141.96984863 415.88256836]
[143.04702759 431.05801392]
[133.27963257 442.24432373]
[134.55171204 457.19027710]
[135.82380676 472.13626099]
[137.09590149 487.08221436]
[138.36798096 502.02816772]
[139.64007568 516.97412109]
[140.91215515 531.92010498]
[142.18424988 546.86608887]
[143.45634460 561.81201172]
[144.72842407 576.75799561]
[146.00051880 591.70397949]
[154.88027954 604.79821777]
[148.25019836 618.13580322]
[149.52229309 633.08178711]
[162.41392517 641.93273926]
[166.55036926 657.01336670]
[159.97851562 671.20294189]
[145.80139160 677.80163574]
[130.71301270 673.69378662]
[121.83763123 660.81896973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 215]
[2 214]
[4 212]
[5 211]
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[17 199]
[18 198]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[35 181]
[36 180]
[37 179]
[38 178]
[39 177]
[40 78]
[41 77]
[42 76]
[43 75]
[44 74]
[45 73]
[46 71]
[47 70]
[48 65]
[49 64]
[50 63]
[51 62]
[81 100]
[82 99]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[101 175]
[102 174]
[103 173]
[104 172]
[105 171]
[106 170]
[107 168]
[108 167]
[109 166]
[110 165]
[111 164]
[112 163]
[113 162]
[119 156]
[120 155]
[121 154]
[122 153]
[123 152]
[127 149]
[128 148]
[129 147]
[130 146]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
