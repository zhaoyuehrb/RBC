%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCCUGCAGGCAGGGGGCUUCCAGGCUUGGGACACCUGGGCAUUCCUGGGCCAGGAAAGCACCCAACAAACCUGCAACUCAGAAGCCAAAUGAGACCUAUCCCAGGCAGGUCCGCUCUGCGAUGGUGGCUCUCAUACACCGCACAGAAGUGAGGCAUCGGGGACAGCCGCUGCGGCAGCACUCGAGCCAGCUCAAGCCCGCAGCUCGCAGGGAGAUCCAGCUCCGUCCUGCCUGCAGCAGCACAACCCUGCAC\
ACCCACC\
) } def
/len { sequence length } bind def

/coor [
[179.28887939 79.57959747]
[164.29557800 79.13171387]
[149.30226135 78.68383789]
[134.30894470 78.23595428]
[119.31563568 77.78807831]
[119.12331390 114.97085571]
[88.99575043 115.65663910]
[76.25082397 123.56655884]
[63.50589371 131.47648621]
[50.76096725 139.38639832]
[38.01604080 147.29632568]
[25.27111435 155.20623779]
[24.66329765 174.37025452]
[12.69240952 189.15422058]
[-5.63319445 193.66252136]
[-22.81977272 186.23930359]
[-35.27312088 194.60076904]
[-47.72646713 202.96223450]
[-60.12965393 211.39793396]
[-72.48223877 219.90756226]
[-84.83482361 228.41719055]
[-97.18740082 236.92680359]
[-109.48893738 245.51005554]
[-121.73899078 254.16662598]
[-128.54396057 268.44958496]
[-143.40316772 269.47573853]
[-155.65322876 278.13229370]
[-167.90327454 286.78887939]
[-180.15333557 295.44543457]
[-192.40338135 304.10202026]
[-204.65344238 312.75857544]
[-216.90348816 321.41513062]
[-229.15354919 330.07171631]
[-241.40361023 338.72827148]
[-239.32809448 353.89242554]
[-244.54835510 368.28015137]
[-255.86480713 378.58535767]
[-270.67700195 382.43988037]
[-285.58120728 378.95806885]
[-297.15255737 368.93994141]
[-302.73202515 354.68765259]
[-301.03750610 339.47622681]
[-292.45837402 326.80117798]
[-278.96606445 319.57510376]
[-263.66098022 319.45852661]
[-250.06016541 326.47824097]
[-237.81011963 317.82165527]
[-225.56005859 309.16510010]
[-213.31001282 300.50851440]
[-201.05995178 291.85195923]
[-188.80990601 283.19537354]
[-176.55984497 274.53881836]
[-164.30979919 265.88226318]
[-152.05973816 257.22567749]
[-146.13098145 243.56188965]
[-130.39556885 241.91658020]
[-118.14550781 233.26000977]
[-114.50839996 226.85406494]
[-105.69702911 224.57423401]
[-93.34444427 216.06460571]
[-80.99185944 207.55497742]
[-68.63928223 199.04534912]
[-64.92591095 192.68331909]
[-56.08793640 190.50889587]
[-43.63458633 182.14743042]
[-31.18124008 173.78596497]
[-32.87750626 162.81460571]
[-30.36024666 151.94947815]
[-23.95348740 142.75788879]
[-14.54508972 136.58018494]
[-3.46386027 134.33445740]
[7.70808315 136.38017273]
[17.36119461 142.46131897]
[30.10612106 134.55139160]
[42.85104752 126.64147186]
[55.59597397 118.73155212]
[68.34090424 110.82163239]
[81.08583069 102.91171265]
[76.21657562 95.08308411]
[75.06783295 84.35231018]
[62.13758850 76.74909973]
[49.20734406 69.14588928]
[36.27709961 61.54268265]
[22.55554771 68.59410095]
[7.20217466 67.08496094]
[-4.88381147 57.49681854]
[-9.84581757 42.88921738]
[-6.10048580 27.92338753]
[5.15706253 17.37487411]
[20.33458519 14.60966682]
[34.58898926 20.51013374]
[43.37174606 33.19345856]
[43.88031006 48.61243820]
[56.81055450 56.21564865]
[69.74079895 63.81885910]
[82.67104340 71.42206573]
[93.68131256 61.23512268]
[87.10395813 47.75408554]
[80.52660370 34.27304840]
[73.97245789 27.95789146]
[73.95227814 20.59146690]
[67.53641510 7.03282452]
[61.12055969 -6.52581739]
[48.22407913 -15.69049644]
[49.77414322 -30.50422478]
[43.35828400 -44.06286621]
[36.94242859 -57.62150955]
[30.44570541 -71.14159393]
[23.86834908 -84.62262726]
[8.84472942 -89.52838135]
[1.76491547 -103.65820312]
[6.82923412 -118.62911224]
[21.03311539 -125.55914307]
[35.94964981 -120.33683014]
[42.72911835 -106.06047058]
[37.34938812 -91.19998169]
[43.92674255 -77.71894836]
[49.66558838 -73.10047913]
[50.50106812 -64.03736877]
[56.91692734 -50.47872543]
[63.33278275 -36.92008209]
[75.77036285 -28.72520828]
[74.67920685 -12.94167423]
[81.09506226 0.61696756]
[87.51091766 14.17560959]
[94.00763702 27.69569016]
[100.58499908 41.17672729]
[107.16235352 54.65776825]
[119.76351166 62.79476547]
[134.75682068 63.24264526]
[149.75013733 63.69052505]
[164.74345398 64.13840485]
[179.73675537 64.58628082]
[166.74479675 57.08901596]
[156.79406738 45.86480713]
[150.90789795 32.06795883]
[149.69163513 17.11734962]
[153.27033997 2.55051041]
[161.27600098 -10.13449764]
[172.88529968 -19.63313866]
[186.90432739 -24.96856880]
[201.89135742 -25.59208679]
[216.30513000 -21.43957138]
[228.66329956 -12.93806839]
[237.69496155 -0.96187937]
[242.47128296 13.25735855]
[242.50108337 28.25732803]
[237.78126526 42.49542618]
[228.79725647 54.50739288]
[216.47294617 63.05791473]
[202.07643127 67.26757050]
[216.74987793 70.38040161]
[231.42333984 73.49323273]
[240.43453979 72.21410370]
[246.25299072 76.73188019]
[260.88821411 80.01976776]
[273.45053101 68.67063904]
[290.13751221 67.07335663]
[304.33984375 75.66114044]
[310.55099487 90.87236023]
[325.22445679 93.98519897]
[339.89788818 97.09803009]
[354.57135010 100.21086121]
[369.24481201 103.32369232]
[381.67065430 91.82531738]
[398.33737183 90.02882385]
[412.64126587 98.44635010]
[419.03366089 113.58229828]
[433.74325562 116.51963806]
[448.79138184 111.63452148]
[459.75711060 121.71430969]
[474.46670532 124.65164185]
[489.17630005 127.58898163]
[503.88589478 130.52632141]
[518.59545898 133.46365356]
[533.32232666 136.31309509]
[548.06597900 139.07450867]
[562.80963135 141.83593750]
[577.55322266 144.59735107]
[592.29687500 147.35877991]
[605.35473633 132.80857849]
[626.53308105 130.78170776]
[644.88372803 144.64982605]
[659.88348389 144.73941040]
[674.88348389 144.73941040]
[689.88317871 144.64982605]
[704.88293457 144.56022644]
[719.88262939 144.47064209]
[734.88238525 144.38105774]
[744.46813965 135.78254700]
[756.94299316 135.99880981]
[765.64703369 144.37010193]
[780.64678955 144.45968628]
[789.73345947 131.88148499]
[804.48852539 127.07852173]
[819.23828125 131.89765930]
[828.31121826 144.48583984]
[828.21850586 160.00263977]
[818.99591064 172.48153687]
[804.18963623 177.12414551]
[789.49298096 172.14527893]
[780.55718994 159.45942688]
[765.55743408 159.36984253]
[750.77783203 168.85714722]
[734.97198486 159.38078308]
[719.97222900 159.47038269]
[704.97253418 159.55996704]
[689.97277832 159.64955139]
[674.97302246 159.73913574]
[668.32464600 162.91145325]
[659.79388428 159.73913574]
[644.79412842 159.64955139]
[640.81097412 174.11103821]
[653.74121094 181.71424866]
[666.67144775 189.31745911]
[679.60174561 196.92066956]
[694.83471680 192.70980835]
[708.54217529 200.57621765]
[712.59179688 215.85287476]
[704.58087158 229.47644043]
[689.26226807 233.36425781]
[675.72418213 225.20979309]
[671.99853516 209.85090637]
[659.06823730 202.24769592]
[646.13800049 194.64448547]
[633.20776367 187.04127502]
[617.27557373 190.48281860]
[602.58319092 185.89343262]
[592.69055176 175.31126404]
[589.53546143 162.10240173]
[574.79180908 159.34098816]
[560.04815674 156.57955933]
[545.30456543 153.81814575]
[530.56091309 151.05671692]
[523.43096924 152.90832520]
[515.65814209 148.17324829]
[500.94854736 145.23591614]
[486.23895264 142.29856873]
[471.52938843 139.36123657]
[456.81979370 136.42390442]
[442.82379150 141.51911926]
[430.80593872 131.22923279]
[416.09634399 128.29188538]
[407.18301392 138.20753479]
[394.43432617 142.46594238]
[381.13882446 139.85615540]
[370.78186035 130.95353699]
[366.13198853 117.99714661]
[351.45852661 114.88431549]
[336.78506470 111.77148438]
[322.11160278 108.65865326]
[307.43817139 105.54581451]
[298.40701294 115.35428619]
[285.60839844 119.46011353]
[272.34500122 116.69168854]
[262.09509277 107.66599274]
[257.60034180 94.65499115]
[242.96510315 91.36710358]
[228.31050110 88.16668701]
[213.63705444 85.05385590]
[198.96359253 81.94102478]
[193.21745300 85.06845093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 133]
[2 132]
[3 131]
[4 130]
[5 129]
[7 78]
[8 77]
[9 76]
[10 75]
[11 74]
[12 73]
[16 66]
[17 65]
[18 64]
[19 62]
[20 61]
[21 60]
[22 59]
[23 57]
[24 56]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[80 96]
[81 95]
[82 94]
[83 93]
[97 128]
[98 127]
[99 126]
[101 125]
[102 124]
[103 123]
[105 121]
[106 120]
[107 119]
[108 117]
[109 116]
[151 261]
[152 260]
[153 259]
[155 258]
[156 257]
[160 252]
[161 251]
[162 250]
[163 249]
[164 248]
[168 243]
[169 242]
[171 240]
[172 239]
[173 238]
[174 237]
[175 236]
[176 234]
[177 233]
[178 232]
[179 231]
[180 230]
[183 212]
[184 211]
[185 209]
[186 208]
[187 207]
[188 206]
[189 205]
[192 203]
[193 202]
[213 226]
[214 225]
[215 224]
[216 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
