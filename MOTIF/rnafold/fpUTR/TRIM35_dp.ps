%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRIM35)
} def

/sequence { (\
CACUCGGGUCGCGGGCGUUGGCAGCCGGGCGGGUGGGAGGGGCCGGAGCAAAAGUUCCGGGCGCCCGAGCCGGCUGCUCGUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.033986057 ubox
1 82 0.019835168 ubox
2 9 0.075912790 ubox
2 18 0.021072772 ubox
2 19 0.034627790 ubox
2 81 0.019622696 ubox
3 8 0.080783949 ubox
3 14 0.088295916 ubox
3 15 0.413963000 ubox
3 17 0.019209485 ubox
3 21 0.006108888 ubox
3 80 0.018297867 ubox
4 13 0.037248262 ubox
4 14 0.446989132 ubox
4 15 0.012711703 ubox
4 20 0.005036928 ubox
4 21 0.008011111 ubox
5 11 0.072679434 ubox
5 13 0.800969283 ubox
5 14 0.026142710 ubox
5 17 0.009163680 ubox
5 20 0.012515278 ubox
6 10 0.071105964 ubox
6 12 0.805192400 ubox
6 16 0.009361784 ubox
6 19 0.012881593 ubox
6 84 0.058868667 ubox
7 18 0.011395784 ubox
7 26 0.019238591 ubox
7 83 0.056380385 ubox
7 84 0.299483584 ubox
8 16 0.029416515 ubox
8 22 0.022336153 ubox
8 25 0.019557414 ubox
8 83 0.303403103 ubox
9 15 0.029402981 ubox
9 21 0.022350285 ubox
9 24 0.019471274 ubox
9 82 0.057267975 ubox
10 14 0.028602761 ubox
10 17 0.007923410 ubox
10 20 0.022318810 ubox
10 80 0.013874079 ubox
10 82 0.305374252 ubox
11 16 0.007990023 ubox
11 18 0.014839122 ubox
11 19 0.016523388 ubox
11 22 0.027172098 ubox
11 25 0.009408950 ubox
11 79 0.013749616 ubox
11 81 0.308041465 ubox
11 83 0.064850826 ubox
12 17 0.020160598 ubox
12 21 0.027177213 ubox
12 24 0.009452297 ubox
12 80 0.308390430 ubox
12 82 0.064866920 ubox
13 26 0.003203334 ubox
13 79 0.307406653 ubox
13 81 0.026930453 ubox
13 84 0.078873399 ubox
14 26 0.022205186 ubox
14 78 0.246288253 ubox
14 79 0.014892744 ubox
14 83 0.074898129 ubox
14 84 0.813186136 ubox
15 22 0.047135503 ubox
15 25 0.022364624 ubox
15 77 0.219603245 ubox
15 78 0.010538984 ubox
15 81 0.123504122 ubox
15 83 0.840287983 ubox
16 21 0.050517233 ubox
16 24 0.022407076 ubox
16 76 0.211341233 ubox
16 80 0.180844099 ubox
16 82 0.845693293 ubox
17 25 0.003323925 ubox
17 74 0.166480099 ubox
17 75 0.064137825 ubox
17 79 0.180903189 ubox
17 81 0.773423551 ubox
17 83 0.113276831 ubox
18 24 0.003303582 ubox
18 73 0.166524729 ubox
18 80 0.549057366 ubox
18 82 0.111774362 ubox
19 27 0.005729052 ubox
19 72 0.166249447 ubox
19 80 0.160353649 ubox
19 82 0.005046845 ubox
20 26 0.006902204 ubox
20 71 0.166826501 ubox
20 75 0.007985571 ubox
20 78 0.857078501 ubox
20 79 0.191988235 ubox
20 84 0.335692893 ubox
21 25 0.006797930 ubox
21 70 0.166794292 ubox
21 74 0.008733357 ubox
21 77 0.907723971 ubox
21 78 0.021416336 ubox
21 83 0.340009265 ubox
22 35 0.006935814 ubox
22 69 0.166539130 ubox
22 73 0.008580156 ubox
22 76 0.909978792 ubox
22 82 0.339956210 ubox
23 34 0.013302881 ubox
23 75 0.916614101 ubox
23 81 0.311527922 ubox
24 30 0.003818909 ubox
24 34 0.041096841 ubox
24 70 0.009075179 ubox
24 74 0.919133523 ubox
24 81 0.056519043 ubox
24 83 0.101972440 ubox
25 29 0.003818005 ubox
25 32 0.016116311 ubox
25 33 0.043442398 ubox
25 36 0.023942995 ubox
25 37 0.008483329 ubox
25 69 0.009629659 ubox
25 73 0.919141856 ubox
25 80 0.068316310 ubox
25 82 0.102239562 ubox
26 31 0.016143881 ubox
26 32 0.043444219 ubox
26 35 0.024029859 ubox
26 36 0.008448520 ubox
26 67 0.157976665 ubox
26 72 0.919109172 ubox
26 80 0.344116503 ubox
27 34 0.022258209 ubox
27 66 0.158345665 ubox
27 71 0.916694829 ubox
27 79 0.356160026 ubox
28 65 0.158345670 ubox
28 70 0.914139215 ubox
28 71 0.066226569 ubox
28 75 0.006736014 ubox
28 78 0.356343900 ubox
29 64 0.158341765 ubox
29 70 0.093492089 ubox
29 74 0.008001024 ubox
29 77 0.356619346 ubox
30 63 0.158305382 ubox
30 67 0.905932272 ubox
30 69 0.112814682 ubox
30 73 0.008010225 ubox
30 76 0.356613161 ubox
31 62 0.146730026 ubox
31 66 0.909309583 ubox
31 75 0.356145152 ubox
32 43 0.003602313 ubox
32 44 0.049960712 ubox
32 65 0.908860459 ubox
32 66 0.019700700 ubox
32 71 0.010706145 ubox
32 74 0.356194855 ubox
32 75 0.011987535 ubox
33 43 0.052147677 ubox
33 62 0.022203029 ubox
33 64 0.908351993 ubox
33 65 0.014135150 ubox
33 70 0.011261756 ubox
33 74 0.017058390 ubox
34 42 0.053446417 ubox
34 59 0.013107059 ubox
34 61 0.026080420 ubox
34 63 0.905762212 ubox
34 67 0.103192288 ubox
34 69 0.012024053 ubox
34 72 0.354407687 ubox
34 73 0.020520947 ubox
35 44 0.027758519 ubox
35 58 0.016374863 ubox
35 62 0.785438221 ubox
35 65 0.004145835 ubox
35 66 0.114989384 ubox
35 71 0.355976811 ubox
36 43 0.043887535 ubox
36 44 0.043041997 ubox
36 57 0.016369567 ubox
36 58 0.012796381 ubox
36 64 0.004743830 ubox
36 65 0.113820621 ubox
36 66 0.019050066 ubox
36 70 0.355773041 ubox
36 71 0.021245571 ubox
37 43 0.044838582 ubox
37 56 0.016310247 ubox
37 57 0.012817841 ubox
37 64 0.112506081 ubox
37 65 0.013921499 ubox
37 70 0.021719325 ubox
38 55 0.016180577 ubox
38 56 0.012801310 ubox
39 55 0.012488747 ubox
39 58 0.079798869 ubox
39 65 0.080665729 ubox
39 66 0.348640410 ubox
40 57 0.079810956 ubox
40 58 0.003712916 ubox
40 64 0.090116057 ubox
40 65 0.348713959 ubox
40 66 0.085317491 ubox
41 56 0.079539985 ubox
41 57 0.003621778 ubox
41 64 0.348404604 ubox
41 65 0.085340253 ubox
42 49 0.020885414 ubox
42 55 0.079518125 ubox
42 62 0.511376769 ubox
42 64 0.085056536 ubox
43 48 0.020829742 ubox
43 54 0.079461603 ubox
43 60 0.888282741 ubox
43 61 0.427513710 ubox
43 63 0.062575712 ubox
44 59 0.946569663 ubox
44 60 0.302833738 ubox
45 58 0.996205612 ubox
46 57 0.996576230 ubox
47 56 0.996007878 ubox
48 55 0.995342914 ubox
49 54 0.994595137 ubox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
14 84 0.9500000 lbox
15 83 0.9500000 lbox
16 82 0.9500000 lbox
17 81 0.9500000 lbox
20 78 0.9500000 lbox
21 77 0.9500000 lbox
22 76 0.9500000 lbox
23 75 0.9500000 lbox
24 74 0.9500000 lbox
25 73 0.9500000 lbox
26 72 0.9500000 lbox
27 71 0.9500000 lbox
28 70 0.9500000 lbox
30 67 0.9500000 lbox
31 66 0.9500000 lbox
32 65 0.9500000 lbox
33 64 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
43 60 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
