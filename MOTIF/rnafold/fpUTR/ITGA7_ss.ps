%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCCGGAGCUGCGGCUGCUGUAGUUGUCCUAGCCGGUGCUGGGGCGGCGGGGUGGCGGAGCGGCGGGCGGGCGGGAGGGCUGGCGGGGCGAACGUCUGGGAGACGUCUGAAAGACCAACGAGACUUUGGAGACCAGAGACGCGCCUGGGGGGACCUGGGGCUUGGGGCGUGCGAGAUUUCCCUUGCAUUCGCUGGGAGCUCGCGCAGGGAUCGUCCC\
) } def
/len { sequence length } bind def

/coor [
[-18.91637230 114.44305420]
[-21.55205727 118.85066986]
[-25.14740753 122.58470917]
[-29.53266335 125.43766785]
[-34.49357224 127.24434662]
[-39.78183365 127.89128876]
[-52.91202545 135.14373779]
[-66.04222107 142.39619446]
[-70.52007294 157.31552124]
[-83.93927002 164.48350525]
[-98.13497925 160.12260437]
[-111.26517487 167.37504578]
[-124.39537048 174.62750244]
[-132.73434448 188.07266235]
[-147.61605835 187.45343018]
[-160.74626160 194.70588684]
[-166.73957825 201.58923340]
[-174.11503601 201.96659851]
[-187.34700012 209.03166199]
[-200.57896423 216.09674072]
[-213.81091309 223.16181946]
[-227.04287720 230.22688293]
[-229.44729614 243.47508240]
[-238.90318298 252.78533936]
[-251.80323792 254.92021179]
[-263.40390015 249.32165527]
[-276.73495483 256.19790649]
[-290.06600952 263.07418823]
[-303.39706421 269.95046997]
[-316.72811890 276.82672119]
[-330.05917358 283.70300293]
[-343.39019775 290.57925415]
[-356.72125244 297.45553589]
[-370.05230713 304.33181763]
[-383.38336182 311.20806885]
[-396.71441650 318.08435059]
[-405.11740112 332.16702271]
[-421.50872803 331.66061401]
[-429.02639771 317.08609009]
[-419.93688965 303.43646240]
[-403.59069824 304.75329590]
[-390.25964355 297.87701416]
[-376.92858887 291.00076294]
[-363.59753418 284.12448120]
[-350.26647949 277.24822998]
[-336.93542480 270.37194824]
[-323.60437012 263.49566650]
[-310.27331543 256.61941528]
[-296.94229126 249.74313354]
[-283.61123657 242.86686707]
[-270.28018188 235.99060059]
[-265.84902954 219.76361084]
[-250.75389099 211.60466003]
[-234.10795593 216.99493408]
[-220.87599182 209.92985535]
[-207.64402771 202.86477661]
[-194.41207886 195.79971313]
[-181.18011475 188.73463440]
[-167.99870300 181.57569885]
[-154.86851501 174.32324219]
[-147.46870422 161.39683533]
[-131.64781189 161.49731445]
[-118.51762390 154.24485779]
[-105.38743591 146.99241638]
[-101.52005768 132.65438843]
[-88.30748749 125.11231995]
[-73.29467010 129.26600647]
[-60.16447449 122.01354980]
[-47.03428268 114.76110077]
[-45.86271286 99.80692291]
[-57.70326614 90.59815979]
[-73.34677124 88.23358917]
[-78.64324188 74.31250000]
[-90.48379517 65.10373688]
[-102.32434845 55.89497375]
[-117.97346497 58.10416412]
[-130.55078125 48.53407669]
[-132.59440613 32.86247253]
[-122.89187622 20.38703728]
[-107.19953918 18.50922585]
[-94.82738495 28.34310913]
[-93.11558533 44.05442047]
[-81.27503204 53.26318359]
[-69.43447876 62.47194290]
[-54.63788223 64.17784119]
[-48.49450302 78.75760651]
[-36.65394974 87.96636963]
[-21.85393715 90.40760803]
[-7.68315744 85.48937988]
[6.48762274 80.57115173]
[20.65840340 75.65291595]
[34.82918167 70.73468781]
[48.99996567 65.81645966]
[63.17074585 60.89822769]
[70.32968903 47.71681976]
[66.73995209 33.15269089]
[63.15021896 18.58856583]
[59.56048203 4.02443838]
[55.97074890 -10.53968906]
[52.38101196 -25.10381699]
[42.71981430 -39.03570938]
[53.43275833 -52.17607498]
[69.02523041 -45.51940918]
[66.94513702 -28.69355202]
[70.53487396 -14.12942410]
[74.12461090 0.43470329]
[77.71434784 14.99883080]
[81.30407715 29.56295776]
[84.89381409 44.12708664]
[91.96154785 46.63649750]
[95.79367065 32.13426208]
[94.00868988 17.24084854]
[105.72444153 7.87382698]
[119.85986328 12.89278030]
[123.04528809 27.55064774]
[112.26812744 37.98355103]
[106.09701538 51.65532303]
[113.16474152 54.16473770]
[125.13500214 45.12521744]
[137.10525513 36.08569717]
[149.07551575 27.04617882]
[134.75355530 31.50503159]
[120.61216736 26.50292969]
[112.27912903 14.03053856]
[113.07071686 -0.94855994]
[122.67189789 -12.47319889]
[137.26278687 -15.95687675]
[146.55548096 -27.73167801]
[155.84815979 -39.50648117]
[165.14085388 -51.28128433]
[174.43353271 -63.05608368]
[183.72622681 -74.83088684]
[188.79246521 -91.01017761]
[205.74194336 -90.62080383]
[210.05986023 -74.22592926]
[195.50102234 -65.53820038]
[186.20834351 -53.76339722]
[176.91564941 -41.98859406]
[167.62297058 -30.21379280]
[158.33027649 -18.43899155]
[149.03759766 -6.66418934]
[153.38539124 -0.55299616]
[162.08097839 11.66938972]
[166.42877197 17.78058243]
[180.59954834 12.86235332]
[187.67439270 7.09633303]
[195.00686646 7.97648764]
[209.24612427 3.26019049]
[223.48538208 -1.45610654]
[237.72463989 -6.17240381]
[251.96389771 -10.88870049]
[266.20315552 -15.60499763]
[276.69677734 -28.20723152]
[292.80923462 -25.15435600]
[297.96545410 -9.58690739]
[286.86114502 2.48065758]
[270.91946411 -1.36573756]
[256.68020630 3.35055971]
[242.44093323 8.06685638]
[228.20167542 12.78315353]
[213.96241760 17.49945068]
[199.72315979 22.21574783]
[185.51777649 27.03313255]
[171.34700012 31.95136261]
[158.11503601 39.01643753]
[146.14477539 48.05595779]
[134.17453003 57.09547806]
[122.20426178 66.13499451]
[130.46867371 77.59362030]
[133.79888916 90.36418152]
[132.37042236 102.55072021]
[127.02109528 112.55619812]
[138.59509277 122.09782410]
[150.16908264 131.63945007]
[161.74307251 141.18109131]
[173.31706238 150.72271729]
[184.89105225 160.26434326]
[196.46504211 169.80596924]
[202.90029907 171.26959229]
[207.01701355 175.17402649]
[208.22738647 179.78707886]
[219.52546692 189.65386963]
[230.82354736 199.52066040]
[242.12161255 209.38743591]
[253.41969299 219.25422668]
[266.31274414 219.16326904]
[275.51904297 227.60777283]
[276.47482300 239.66188049]
[287.63150024 249.68827820]
[303.77877808 252.55142212]
[309.11773682 268.05715942]
[298.15612793 280.25448608]
[282.17028809 276.59585571]
[277.60510254 260.84494019]
[266.44842529 250.81855774]
[249.10614014 248.11271667]
[243.55290222 230.55230713]
[232.25483704 220.68551636]
[220.95675659 210.81872559]
[209.65867615 200.95195007]
[198.36061096 191.08515930]
[186.92341614 181.37997437]
[175.34942627 171.83833313]
[163.77543640 162.29670715]
[152.20144653 152.75508118]
[140.62744141 143.21343994]
[129.05345154 133.67181396]
[117.47946167 124.13018799]
[104.72175598 131.22416687]
[89.29227448 131.59736633]
[74.70124054 124.39644623]
[64.61766052 110.57490540]
[61.95848083 92.82601166]
[68.08897400 75.06900787]
[53.91819382 79.98723602]
[39.74741364 84.90547180]
[25.57663345 89.82369995]
[11.40585327 94.74192810]
[-2.76492739 99.66015625]
[-16.93570709 104.57839203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 69]
[7 68]
[8 67]
[11 64]
[12 63]
[13 62]
[15 60]
[16 59]
[18 58]
[19 57]
[20 56]
[21 55]
[22 54]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[70 87]
[71 86]
[73 84]
[74 83]
[75 82]
[88 220]
[89 219]
[90 218]
[91 217]
[92 216]
[93 215]
[94 214]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[118 168]
[119 167]
[120 166]
[121 165]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[132 136]
[144 164]
[145 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
[172 208]
[173 207]
[174 206]
[175 205]
[176 204]
[177 203]
[178 202]
[181 201]
[182 200]
[183 199]
[184 198]
[185 197]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
