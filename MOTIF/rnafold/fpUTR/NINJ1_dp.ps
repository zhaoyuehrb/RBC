%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NINJ1)
} def

/sequence { (\
CGCAGCUGGAGCCUGCGGCUGAGGCUCGGGCGCGCUCAGGCCCGGAUCCUGGCGGCCUGGGCGGCCGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.036517893 ubox
1 17 0.030123150 ubox
1 28 0.755529918 ubox
1 32 0.015556644 ubox
1 34 0.074929318 ubox
1 63 0.009518748 ubox
1 67 0.044296575 ubox
2 7 0.025016471 ubox
2 12 0.104522763 ubox
2 16 0.036731994 ubox
2 19 0.003288546 ubox
2 25 0.009030050 ubox
2 27 0.766449893 ubox
2 31 0.014649415 ubox
2 33 0.235163530 ubox
2 35 0.028168487 ubox
2 65 0.138082602 ubox
2 66 0.037400357 ubox
2 68 0.327465849 ubox
3 11 0.104674252 ubox
3 15 0.037034573 ubox
3 18 0.003284412 ubox
3 21 0.101541054 ubox
3 24 0.008212000 ubox
3 30 0.014113984 ubox
3 32 0.242161857 ubox
3 34 0.028179959 ubox
3 51 0.014563486 ubox
3 64 0.140626649 ubox
3 67 0.327448192 ubox
4 14 0.038143136 ubox
4 20 0.102163522 ubox
4 26 0.783284704 ubox
4 50 0.014589068 ubox
5 12 0.092241272 ubox
5 13 0.030341155 ubox
5 16 0.003834047 ubox
5 19 0.102239366 ubox
5 25 0.788878353 ubox
5 31 0.494400981 ubox
5 49 0.014552869 ubox
5 65 0.015767717 ubox
5 68 0.147215070 ubox
6 11 0.095189957 ubox
6 15 0.003861610 ubox
6 18 0.102239580 ubox
6 23 0.012951251 ubox
6 24 0.788795653 ubox
6 29 0.019991960 ubox
6 30 0.495085992 ubox
6 45 0.015901756 ubox
6 64 0.014742763 ubox
6 67 0.147176974 ubox
7 17 0.102149473 ubox
7 22 0.017260921 ubox
7 23 0.782987798 ubox
7 28 0.031307990 ubox
7 29 0.494162533 ubox
7 44 0.015926707 ubox
7 63 0.009059355 ubox
7 69 0.017998313 ubox
8 14 0.005059968 ubox
8 16 0.102072294 ubox
8 27 0.027032985 ubox
8 43 0.015948890 ubox
8 62 0.003691400 ubox
8 66 0.005849297 ubox
8 68 0.020250540 ubox
8 71 0.042297447 ubox
9 13 0.006507716 ubox
9 26 0.011725060 ubox
9 27 0.576328321 ubox
9 42 0.015947042 ubox
9 65 0.005307912 ubox
9 70 0.042670215 ubox
10 20 0.783197113 ubox
10 26 0.577009233 ubox
11 19 0.788925461 ubox
11 25 0.577233942 ubox
11 31 0.007264505 ubox
11 41 0.015947082 ubox
11 62 0.007018321 ubox
11 65 0.003502842 ubox
12 18 0.788927425 ubox
12 24 0.577234923 ubox
12 30 0.007274142 ubox
12 40 0.015948714 ubox
12 61 0.007215196 ubox
12 64 0.003550116 ubox
13 17 0.783187828 ubox
13 23 0.577220828 ubox
13 29 0.007275379 ubox
13 39 0.015946616 ubox
13 60 0.007213872 ubox
13 63 0.003545786 ubox
14 21 0.018983006 ubox
14 22 0.574697775 ubox
14 28 0.007263556 ubox
14 34 0.006380031 ubox
14 38 0.014371882 ubox
14 59 0.007029803 ubox
14 69 0.159653153 ubox
15 20 0.030533060 ubox
15 27 0.007218063 ubox
15 33 0.013737350 ubox
15 35 0.005952814 ubox
15 37 0.007152422 ubox
15 56 0.003868520 ubox
15 58 0.005660605 ubox
15 68 0.179199146 ubox
16 32 0.014934657 ubox
16 34 0.006625226 ubox
16 55 0.003880519 ubox
16 67 0.179296452 ubox
17 26 0.008423867 ubox
17 31 0.014944631 ubox
17 33 0.006616890 ubox
17 57 0.006238009 ubox
17 66 0.180401823 ubox
18 25 0.013312005 ubox
18 31 0.006687971 ubox
18 53 0.004121134 ubox
18 56 0.006241295 ubox
18 65 0.180488026 ubox
18 68 0.010312100 ubox
19 24 0.013289037 ubox
19 29 0.015462252 ubox
19 30 0.006405063 ubox
19 52 0.004133423 ubox
19 55 0.006241334 ubox
19 64 0.180448011 ubox
19 67 0.010302796 ubox
20 28 0.016171436 ubox
20 29 0.006071705 ubox
20 51 0.003962522 ubox
20 54 0.006220406 ubox
20 63 0.178140020 ubox
21 27 0.016698327 ubox
21 53 0.006084865 ubox
21 62 0.050902298 ubox
22 26 0.014537948 ubox
22 50 0.027037277 ubox
23 48 0.003348595 ubox
23 49 0.027844494 ubox
23 66 0.003216768 ubox
23 71 0.075266977 ubox
24 47 0.003343520 ubox
24 48 0.027797478 ubox
24 62 0.173583834 ubox
24 68 0.044890740 ubox
24 70 0.075823955 ubox
25 45 0.005393701 ubox
25 60 0.003880888 ubox
25 61 0.180899616 ubox
25 67 0.044882742 ubox
26 45 0.022549025 ubox
26 46 0.013480160 ubox
26 60 0.180816658 ubox
27 44 0.026999466 ubox
27 45 0.010174213 ubox
27 59 0.180972820 ubox
27 67 0.064177063 ubox
28 43 0.028593732 ubox
28 58 0.180884613 ubox
28 66 0.058605876 ubox
28 71 0.079950656 ubox
29 42 0.028606611 ubox
29 43 0.004440446 ubox
29 57 0.181022309 ubox
29 65 0.044057190 ubox
29 66 0.839133490 ubox
29 70 0.084785530 ubox
29 71 0.005304425 ubox
30 41 0.028607089 ubox
30 42 0.004433611 ubox
30 56 0.181023555 ubox
30 65 0.840998401 ubox
30 68 0.106120116 ubox
30 70 0.004935455 ubox
31 40 0.028606424 ubox
31 55 0.180882492 ubox
31 63 0.017083632 ubox
31 64 0.841303634 ubox
31 67 0.106511021 ubox
32 41 0.004571255 ubox
32 62 0.015434322 ubox
32 65 0.253508388 ubox
32 66 0.103390258 ubox
32 68 0.037650676 ubox
33 40 0.004575933 ubox
33 54 0.180317479 ubox
33 61 0.015027920 ubox
33 63 0.930624834 ubox
33 64 0.182539816 ubox
33 67 0.034992214 ubox
34 41 0.003554734 ubox
34 53 0.181023966 ubox
34 62 0.978887369 ubox
34 65 0.005926892 ubox
34 66 0.014842755 ubox
34 68 0.003768320 ubox
35 40 0.003614078 ubox
35 52 0.179923162 ubox
35 60 0.013179618 ubox
35 61 0.979605306 ubox
35 64 0.007217217 ubox
35 67 0.003779259 ubox
36 51 0.028133642 ubox
36 52 0.020447576 ubox
36 60 0.979032429 ubox
36 63 0.006429192 ubox
37 51 0.194823377 ubox
37 59 0.979721240 ubox
38 50 0.196823086 ubox
38 58 0.979553647 ubox
39 48 0.004988987 ubox
39 49 0.196889339 ubox
39 57 0.979783020 ubox
40 47 0.004531483 ubox
40 48 0.195656045 ubox
40 56 0.979766686 ubox
40 62 0.006894424 ubox
41 52 0.003636416 ubox
41 55 0.885169907 ubox
41 61 0.006903283 ubox
42 51 0.004128316 ubox
42 52 0.432373150 ubox
42 54 0.649038358 ubox
42 55 0.418015415 ubox
42 60 0.006905163 ubox
43 51 0.611697271 ubox
43 54 0.591147643 ubox
43 59 0.006906586 ubox
44 50 0.618146152 ubox
44 53 0.723631124 ubox
44 58 0.006769283 ubox
45 49 0.605231380 ubox
45 57 0.006751794 ubox
48 55 0.006231697 ubox
49 54 0.006318020 ubox
52 68 0.084063609 ubox
53 67 0.084348121 ubox
54 66 0.084421183 ubox
55 65 0.084423249 ubox
56 64 0.084420243 ubox
57 63 0.084354091 ubox
61 68 0.007833413 ubox
62 67 0.008212719 ubox
63 71 0.092366052 ubox
64 70 0.093718543 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
29 66 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
showpage
end
%%EOF
