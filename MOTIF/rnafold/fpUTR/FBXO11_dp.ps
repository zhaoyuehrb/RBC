%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FBXO11)
} def

/sequence { (\
CUCCUGCCCCGAAGCUCGCUGUGCGUGUGCGUGUGUGUGUCCCUCCGCCAACGCCGCCACCUCAGCCCGGCAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.010949088 ubox
2 12 0.104461741 ubox
2 13 0.011284301 ubox
3 11 0.109824445 ubox
3 69 0.003725850 ubox
3 70 0.018659885 ubox
4 14 0.033523676 ubox
4 69 0.018852478 ubox
4 70 0.007836748 ubox
5 11 0.032481561 ubox
5 13 0.039194072 ubox
5 69 0.007832234 ubox
5 72 0.742950970 ubox
6 10 0.038910089 ubox
6 15 0.154806954 ubox
6 17 0.003639677 ubox
6 68 0.007243609 ubox
6 71 0.802711765 ubox
7 14 0.154776985 ubox
7 70 0.793532411 ubox
8 69 0.782216619 ubox
8 70 0.071319590 ubox
9 69 0.087535392 ubox
9 70 0.216990101 ubox
10 18 0.075634547 ubox
10 69 0.246371309 ubox
11 17 0.262762451 ubox
11 24 0.005031494 ubox
11 63 0.011190302 ubox
11 68 0.335554981 ubox
12 16 0.228874886 ubox
12 62 0.009678583 ubox
13 20 0.014265973 ubox
13 62 0.011765080 ubox
14 19 0.014590112 ubox
14 22 0.008980780 ubox
14 24 0.030442316 ubox
14 28 0.006908013 ubox
14 30 0.003340183 ubox
14 61 0.013132134 ubox
14 66 0.655375829 ubox
14 71 0.521886064 ubox
15 21 0.009375369 ubox
15 23 0.030473210 ubox
15 27 0.007264441 ubox
15 29 0.003341381 ubox
15 65 0.656090990 ubox
15 70 0.522337797 ubox
16 64 0.636062143 ubox
16 69 0.500544847 ubox
16 70 0.016938094 ubox
17 25 0.012583538 ubox
17 27 0.003570802 ubox
17 69 0.082943973 ubox
18 24 0.025228144 ubox
18 26 0.003734461 ubox
18 66 0.721308467 ubox
18 68 0.038216159 ubox
18 71 0.194048664 ubox
19 23 0.025075473 ubox
19 25 0.003754822 ubox
19 65 0.725482384 ubox
19 70 0.194306635 ubox
20 59 0.034852053 ubox
20 64 0.724620768 ubox
20 69 0.194114473 ubox
21 58 0.035986960 ubox
21 60 0.682210493 ubox
21 63 0.697832299 ubox
21 66 0.013547557 ubox
21 68 0.193416346 ubox
22 59 0.705841855 ubox
22 64 0.024449344 ubox
22 65 0.013157272 ubox
23 57 0.049325661 ubox
23 58 0.706025942 ubox
23 63 0.027174085 ubox
23 66 0.193654529 ubox
24 56 0.055977200 ubox
24 65 0.193758235 ubox
25 54 0.003357717 ubox
25 55 0.055256784 ubox
25 57 0.711659997 ubox
25 60 0.690387708 ubox
26 53 0.004431472 ubox
26 56 0.711487358 ubox
26 59 0.694285996 ubox
26 64 0.009333100 ubox
27 52 0.004447170 ubox
27 54 0.012314210 ubox
27 55 0.711192452 ubox
27 57 0.059510385 ubox
27 58 0.693168893 ubox
27 60 0.072441605 ubox
27 63 0.008294652 ubox
28 51 0.004146237 ubox
28 53 0.011920792 ubox
28 56 0.073371163 ubox
28 59 0.072642340 ubox
29 48 0.003654287 ubox
29 52 0.011502217 ubox
29 54 0.716004477 ubox
29 55 0.068355380 ubox
29 57 0.691798061 ubox
29 58 0.057696125 ubox
30 47 0.003701152 ubox
30 53 0.716608589 ubox
30 56 0.693248987 ubox
31 46 0.003630279 ubox
31 48 0.003214226 ubox
31 52 0.716418174 ubox
31 54 0.183125741 ubox
31 55 0.671438053 ubox
31 57 0.036630893 ubox
31 60 0.003205939 ubox
32 47 0.003237237 ubox
32 50 0.214439879 ubox
32 51 0.677443846 ubox
32 53 0.250556669 ubox
32 56 0.036601228 ubox
32 59 0.003218746 ubox
33 46 0.003280984 ubox
33 48 0.042282253 ubox
33 49 0.303371461 ubox
33 52 0.251794499 ubox
33 54 0.648392825 ubox
33 55 0.035571801 ubox
34 47 0.043396774 ubox
34 50 0.503099194 ubox
34 51 0.223450616 ubox
34 53 0.648221957 ubox
35 46 0.042915996 ubox
35 48 0.462829666 ubox
35 49 0.551645102 ubox
35 52 0.647926934 ubox
35 54 0.039344728 ubox
36 47 0.464513052 ubox
36 50 0.214363254 ubox
36 51 0.588149156 ubox
36 53 0.039374160 ubox
37 46 0.463306433 ubox
37 48 0.771606938 ubox
37 49 0.278297972 ubox
37 52 0.039463065 ubox
37 54 0.005030822 ubox
38 47 0.780368995 ubox
38 50 0.074061264 ubox
38 51 0.037980898 ubox
38 53 0.005238869 ubox
39 46 0.770636602 ubox
39 48 0.383142038 ubox
39 49 0.075148785 ubox
39 52 0.005295704 ubox
40 47 0.371076041 ubox
40 51 0.005092717 ubox
56 66 0.003624876 ubox
57 65 0.003630559 ubox
65 71 0.003425760 ubox
66 70 0.003408705 ubox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
showpage
end
%%EOF
