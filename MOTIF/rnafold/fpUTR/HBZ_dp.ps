%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HBZ)
} def

/sequence { (\
ACCAAGGCCAGUCCUGAGCAGGCCCAACUCCAGUGCAGCUGCCCACCCUGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.008219218 ubox
1 34 0.008475905 ubox
2 11 0.009441397 ubox
2 22 0.006390959 ubox
2 33 0.008948514 ubox
3 16 0.064473463 ubox
3 21 0.006408859 ubox
3 50 0.013546212 ubox
4 15 0.047449640 ubox
4 49 0.012767740 ubox
5 15 0.121358014 ubox
5 29 0.008939701 ubox
5 49 0.014157523 ubox
6 13 0.020078013 ubox
6 14 0.133865606 ubox
6 15 0.007314259 ubox
6 24 0.381494257 ubox
6 25 0.037320206 ubox
6 28 0.005334571 ubox
6 31 0.006721894 ubox
6 40 0.004207792 ubox
6 43 0.066984235 ubox
6 44 0.063889091 ubox
6 47 0.010518667 ubox
6 48 0.014871798 ubox
6 52 0.765222288 ubox
6 55 0.476408949 ubox
7 12 0.013739608 ubox
7 13 0.132914574 ubox
7 14 0.008231371 ubox
7 19 0.016248655 ubox
7 23 0.383319558 ubox
7 24 0.026592529 ubox
7 30 0.006640986 ubox
7 39 0.004585659 ubox
7 42 0.067300778 ubox
7 43 0.063718430 ubox
7 46 0.010548063 ubox
7 47 0.014751841 ubox
7 51 0.766125690 ubox
7 54 0.480507810 ubox
8 18 0.016275490 ubox
8 22 0.384218320 ubox
8 38 0.004597884 ubox
8 41 0.048985687 ubox
8 50 0.555946265 ubox
8 53 0.478441754 ubox
9 16 0.047562982 ubox
9 21 0.383598708 ubox
9 41 0.085432650 ubox
9 50 0.695743641 ubox
10 15 0.043165391 ubox
10 29 0.006546263 ubox
10 40 0.097261178 ubox
10 49 0.875166400 ubox
11 19 0.360183822 ubox
11 23 0.007414422 ubox
11 28 0.007042946 ubox
11 36 0.013056452 ubox
11 39 0.096667135 ubox
11 42 0.007792279 ubox
11 46 0.056676360 ubox
11 48 0.873428876 ubox
11 51 0.059372007 ubox
11 54 0.011935373 ubox
12 18 0.352517526 ubox
12 22 0.003612530 ubox
12 27 0.006967424 ubox
12 35 0.013178213 ubox
12 38 0.059916780 ubox
12 41 0.007795345 ubox
12 45 0.046903060 ubox
12 50 0.058483724 ubox
12 53 0.011139369 ubox
13 21 0.003575820 ubox
13 22 0.014080664 ubox
14 21 0.014282991 ubox
14 33 0.031136524 ubox
14 38 0.077224437 ubox
15 20 0.013702025 ubox
15 32 0.031237252 ubox
15 37 0.090495359 ubox
15 45 0.835675065 ubox
15 53 0.049758963 ubox
16 30 0.014159339 ubox
16 31 0.028509618 ubox
16 36 0.091075487 ubox
16 44 0.870941970 ubox
16 52 0.127756803 ubox
17 29 0.019029176 ubox
17 40 0.040717279 ubox
18 28 0.018940035 ubox
18 34 0.087621321 ubox
18 36 0.015457795 ubox
18 39 0.041051314 ubox
18 42 0.896482447 ubox
18 51 0.180729880 ubox
18 54 0.042195379 ubox
19 33 0.091740824 ubox
19 35 0.015730821 ubox
19 38 0.041033304 ubox
19 41 0.896981627 ubox
19 50 0.180943567 ubox
19 53 0.042155144 ubox
20 29 0.037858801 ubox
20 34 0.014749959 ubox
20 40 0.872866345 ubox
20 49 0.180915760 ubox
21 28 0.038570511 ubox
21 29 0.013232570 ubox
21 30 0.011849065 ubox
21 31 0.087087750 ubox
21 39 0.796014808 ubox
21 40 0.203441749 ubox
21 43 0.006286068 ubox
21 47 0.005704718 ubox
21 48 0.180834551 ubox
21 52 0.046666691 ubox
21 55 0.004052301 ubox
22 28 0.014891554 ubox
22 29 0.009531603 ubox
22 30 0.086740975 ubox
22 34 0.043555464 ubox
22 36 0.244222162 ubox
22 39 0.411613510 ubox
22 42 0.006521012 ubox
22 46 0.007968847 ubox
22 47 0.180354559 ubox
22 51 0.046697541 ubox
22 54 0.004087615 ubox
23 33 0.043785321 ubox
23 35 0.244629789 ubox
23 38 0.543363579 ubox
23 41 0.006477321 ubox
23 50 0.046625217 ubox
23 53 0.004081266 ubox
25 35 0.459150487 ubox
25 41 0.016265017 ubox
25 50 0.006623920 ubox
26 34 0.390036292 ubox
26 40 0.016051617 ubox
26 49 0.006513031 ubox
27 34 0.728828588 ubox
28 33 0.761368030 ubox
28 38 0.023289415 ubox
29 37 0.022739196 ubox
31 41 0.188342477 ubox
31 50 0.020493022 ubox
32 40 0.189343667 ubox
32 49 0.020388534 ubox
33 39 0.189398237 ubox
33 42 0.007552629 ubox
33 46 0.055915878 ubox
33 48 0.018538331 ubox
33 51 0.003527442 ubox
33 54 0.283779899 ubox
34 38 0.177184691 ubox
34 41 0.007426385 ubox
34 45 0.056115628 ubox
34 50 0.003293990 ubox
34 53 0.282886552 ubox
35 40 0.003925055 ubox
35 42 0.036237505 ubox
35 44 0.053095037 ubox
35 51 0.255161133 ubox
35 52 0.202646407 ubox
35 54 0.158079564 ubox
36 41 0.037509570 ubox
36 50 0.323267195 ubox
36 53 0.158465398 ubox
37 49 0.322895498 ubox
38 48 0.320216758 ubox
38 51 0.165189257 ubox
38 54 0.098639124 ubox
39 50 0.165247870 ubox
39 53 0.098808727 ubox
41 49 0.007678785 ubox
41 51 0.099352449 ubox
41 52 0.003821205 ubox
41 54 0.008953427 ubox
42 50 0.099275628 ubox
42 53 0.009236225 ubox
44 50 0.011692077 ubox
45 49 0.010417715 ubox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
showpage
end
%%EOF
