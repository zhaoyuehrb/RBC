%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (INA)
} def

/sequence { (\
CUUCUGUAGCUCGCGUUGAAGCCGCACGUCCGGCCCCGAUCCCGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.019792491 ubox
1 21 0.042041903 ubox
2 8 0.028807205 ubox
2 9 0.003377202 ubox
2 19 0.003171620 ubox
2 20 0.051314716 ubox
3 8 0.011359393 ubox
3 19 0.053219432 ubox
4 18 0.053026233 ubox
4 21 0.017635732 ubox
4 32 0.004939324 ubox
4 33 0.004079763 ubox
4 45 0.004968214 ubox
5 13 0.007866961 ubox
5 15 0.030402830 ubox
5 20 0.020680955 ubox
5 24 0.007451513 ubox
5 26 0.345469142 ubox
5 28 0.061368107 ubox
5 32 0.004690717 ubox
5 38 0.003515681 ubox
5 44 0.004995621 ubox
5 47 0.038027065 ubox
6 12 0.014089564 ubox
6 14 0.038777070 ubox
6 16 0.003837723 ubox
6 17 0.003264368 ubox
6 23 0.009804752 ubox
6 25 0.389774465 ubox
6 27 0.160263038 ubox
6 31 0.005455802 ubox
6 37 0.004894314 ubox
6 43 0.004958353 ubox
6 46 0.040815169 ubox
6 48 0.575434455 ubox
7 13 0.038066867 ubox
7 15 0.004232924 ubox
7 18 0.044037169 ubox
7 24 0.385264233 ubox
7 26 0.159553370 ubox
7 45 0.037106550 ubox
7 47 0.574959491 ubox
8 17 0.055387471 ubox
9 16 0.057114634 ubox
9 22 0.393357826 ubox
9 25 0.182734345 ubox
9 29 0.015724907 ubox
9 34 0.025799550 ubox
9 46 0.886278085 ubox
10 15 0.057223771 ubox
10 21 0.393577102 ubox
10 24 0.182541561 ubox
10 28 0.016274181 ubox
10 33 0.025846655 ubox
10 45 0.883767818 ubox
11 19 0.226661397 ubox
11 20 0.319849238 ubox
11 32 0.024125111 ubox
11 39 0.004333619 ubox
11 44 0.568991608 ubox
11 45 0.097918697 ubox
12 18 0.320435338 ubox
12 24 0.012571417 ubox
12 28 0.006056317 ubox
12 32 0.007860855 ubox
12 38 0.004779657 ubox
12 44 0.670414290 ubox
13 17 0.197834422 ubox
13 22 0.184562824 ubox
13 23 0.013846509 ubox
13 25 0.066761727 ubox
13 27 0.006963116 ubox
13 29 0.033820959 ubox
13 31 0.006454874 ubox
13 37 0.004669218 ubox
13 43 0.675603612 ubox
13 46 0.045340141 ubox
14 21 0.184975074 ubox
14 24 0.066834419 ubox
14 28 0.035402530 ubox
14 38 0.016721289 ubox
14 44 0.018667183 ubox
14 45 0.044820708 ubox
15 22 0.020023489 ubox
15 23 0.064060682 ubox
15 25 0.007417133 ubox
15 27 0.035654205 ubox
15 37 0.016571765 ubox
15 40 0.860978036 ubox
15 43 0.019695573 ubox
15 46 0.003547153 ubox
15 48 0.003985308 ubox
16 21 0.024669569 ubox
16 24 0.006463688 ubox
16 26 0.031785061 ubox
16 39 0.887939923 ubox
16 45 0.003297401 ubox
16 47 0.003544101 ubox
17 24 0.025723456 ubox
17 26 0.015698158 ubox
17 38 0.889718816 ubox
17 47 0.003415649 ubox
18 23 0.026367409 ubox
18 25 0.022056613 ubox
18 37 0.887652540 ubox
18 41 0.006754730 ubox
18 46 0.004115153 ubox
19 40 0.006647610 ubox
21 34 0.894792943 ubox
21 46 0.026696249 ubox
22 33 0.895279284 ubox
22 45 0.026874789 ubox
23 32 0.895268266 ubox
23 44 0.026876180 ubox
24 31 0.868189877 ubox
24 43 0.026636785 ubox
24 46 0.003975799 ubox
25 45 0.003627060 ubox
27 38 0.008395736 ubox
27 44 0.003366730 ubox
28 37 0.008409233 ubox
28 40 0.022994691 ubox
28 43 0.003324471 ubox
28 46 0.192737436 ubox
28 48 0.362466000 ubox
29 39 0.023977054 ubox
29 45 0.039203391 ubox
29 47 0.362444807 ubox
30 38 0.021196417 ubox
30 44 0.032965315 ubox
30 45 0.428612161 ubox
31 38 0.014326268 ubox
31 44 0.429660016 ubox
32 37 0.018004409 ubox
32 42 0.027631383 ubox
32 43 0.430037443 ubox
32 49 0.085671153 ubox
33 41 0.029648349 ubox
33 42 0.429168040 ubox
33 46 0.058854233 ubox
33 48 0.086235513 ubox
34 45 0.058846428 ubox
35 44 0.058675857 ubox
35 45 0.007728169 ubox
36 44 0.007197257 ubox
36 45 0.110417819 ubox
37 44 0.111115981 ubox
38 43 0.109942878 ubox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
showpage
end
%%EOF
