%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGGCGCUGCGAAGUGGAGGCGCUGCGAGCGGAGCCGCGCGGAGGGCGCGACCGGCUGGUCCGGGCAGCGUGGGUUUGCCGCCUUCGGGGCUCCAGUCCGCGCGCCAGGGCUCGAGCAGUACCGCGGGCCCCUCAGGUGGGCCUCGGCUCGGGACGCCGGGAGUCGGGACCGCCAGUCGGGGCGCCGGGACC\
) } def
/len { sequence length } bind def

/coor [
[84.85443878 326.58071899]
[87.20019531 311.12005615]
[98.96916199 300.82321167]
[98.48592377 285.83099365]
[98.00268555 270.83877563]
[97.51944733 255.84655762]
[97.03620911 240.85435486]
[96.55297089 225.86213684]
[96.06973267 210.86991882]
[95.58649445 195.87770081]
[87.44319153 183.40631104]
[94.73188782 169.36402893]
[94.24864960 154.37181091]
[93.76541138 139.37960815]
[84.31060791 136.65332031]
[75.81146240 131.69444275]
[68.78567505 124.80502319]
[63.66118622 116.40469360]
[60.75014114 107.00513458]
[60.22985458 97.17888641]
[62.13201141 87.52446747]
[49.02249146 80.23471832]
[35.91297150 72.94496918]
[22.80345154 65.65522003]
[9.69393063 58.36546707]
[0.65973681 56.92639923]
[-3.56669235 50.85121155]
[-16.55707359 43.35121155]
[-29.54745483 35.85121155]
[-45.36740494 35.65182495]
[-52.52089691 22.58748817]
[-65.51127625 15.08748913]
[-78.56165314 7.69237328]
[-91.67117310 0.40262207]
[-104.78069305 -6.88712931]
[-117.89021301 -14.17687988]
[-130.99972534 -21.46663094]
[-144.10925293 -28.75638199]
[-159.93035889 -28.70088387]
[-167.29339600 -41.64828110]
[-180.40290833 -48.93803024]
[-196.22401428 -48.88253403]
[-203.58705139 -61.82992935]
[-216.69656372 -69.11968231]
[-231.72113037 -65.00870514]
[-244.91221619 -72.58829498]
[-248.73880005 -86.93726349]
[-261.84832764 -94.22701263]
[-274.95785522 -101.51676178]
[-288.06738281 -108.80651855]
[-302.09243774 -102.43439484]
[-317.00601196 -105.50659180]
[-327.13113403 -116.63967133]
[-328.73989868 -131.42311096]
[-341.84942627 -138.71286011]
[-354.95895386 -146.00260925]
[-368.12677002 -153.18652344]
[-381.35202026 -160.26412964]
[-394.57727051 -167.34175110]
[-407.80255127 -174.41935730]
[-422.24884033 -168.43281555]
[-437.14779663 -173.18203735]
[-445.46456909 -186.42459106]
[-443.27224731 -201.90773010]
[-431.60598755 -212.32080078]
[-415.97421265 -212.74707031]
[-403.75778198 -202.98527527]
[-400.72491455 -187.64460754]
[-387.49966431 -180.56700134]
[-374.27441406 -173.48939514]
[-361.04916382 -166.41178894]
[-353.65844727 -166.02708435]
[-347.66918945 -159.11213684]
[-334.55966187 -151.82237244]
[-321.45016479 -144.53262329]
[-308.04324341 -150.96636963]
[-293.24362183 -148.23965454]
[-282.76489258 -137.19206238]
[-280.77761841 -121.91603851]
[-267.66809082 -114.62628174]
[-254.55857849 -107.33653259]
[-241.44905090 -100.04678345]
[-227.24101257 -104.36730194]
[-213.84223938 -97.16120911]
[-209.40681458 -82.22920227]
[-196.29730225 -74.93945312]
[-181.41386414 -75.51635742]
[-173.11315918 -62.04755402]
[-160.00364685 -54.75780106]
[-145.12020874 -55.33471298]
[-136.81950378 -41.86590195]
[-123.70998383 -34.57615280]
[-110.60046387 -27.28640175]
[-97.49094391 -19.99664879]
[-84.38141632 -12.70689869]
[-71.27189636 -5.41714716]
[-63.88834381 -4.91342926]
[-58.01127625 2.09710765]
[-45.02089691 9.59710789]
[-30.13010406 9.26004505]
[-22.04745483 22.86083031]
[-9.05707359 30.36083031]
[3.93330765 37.86082840]
[16.98368263 45.25594711]
[30.09320259 52.54569626]
[43.20272446 59.83544922]
[56.31224442 67.12519836]
[69.42176056 74.41494751]
[94.23921204 60.54830170]
[121.98553467 66.73951721]
[132.46321106 56.00553513]
[142.94087219 45.27154922]
[153.41854858 34.53756332]
[163.89620972 23.80358124]
[174.37388611 13.06959629]
[184.85156250 2.33561182]
[180.62022400 -12.42892075]
[184.35362244 -27.32715416]
[195.04748535 -38.35153580]
[209.82521057 -42.53656387]
[224.71165466 -38.75648499]
[235.70246887 -28.02812386]
[239.84115601 -13.23735523]
[236.01443481 1.63717926]
[225.25167847 12.59430408]
[210.44801331 16.68660927]
[195.58554077 12.81328201]
[185.10786438 23.54726601]
[174.63020325 34.28125000]
[164.15252686 45.01523590]
[153.67486572 55.74921799]
[143.19718933 66.48320770]
[132.71951294 77.21718597]
[135.81083679 82.47266388]
[138.06465149 88.13805389]
[139.42825317 94.08084869]
[139.86975098 100.16207886]
[139.37882996 106.23952484]
[153.48793030 111.33195496]
[167.59704590 116.42439270]
[181.70616150 121.51683044]
[195.81527710 126.60926819]
[207.80941772 121.84180450]
[219.46141052 126.38367462]
[224.71600342 137.28863525]
[238.74124146 142.60771179]
[252.76647949 147.92678833]
[266.79171753 153.24584961]
[280.81698608 158.56492615]
[294.84222412 163.88400269]
[308.86746216 169.20307922]
[322.89270020 174.52214050]
[337.00180054 179.61457825]
[351.19113159 184.47906494]
[367.17205811 180.79905701]
[378.14996338 192.98171997]
[372.83175659 208.49456787]
[356.68832397 211.37931824]
[346.32666016 198.66838074]
[332.13732910 193.80390930]
[327.51916504 195.06781006]
[322.05831909 193.43457031]
[317.57363892 188.54739380]
[303.54837036 183.22831726]
[289.52313232 177.90924072]
[275.49789429 172.59016418]
[261.47265625 167.27110291]
[247.44740295 161.95202637]
[233.42216492 156.63294983]
[219.39692688 151.31387329]
[202.25894165 155.06317139]
[190.72283936 140.71838379]
[176.61372375 135.62594604]
[162.50460815 130.53350830]
[148.39550781 125.44107056]
[134.28639221 120.34863281]
[127.58094788 128.79087830]
[118.85877228 135.12791443]
[108.75762939 138.89636230]
[109.24086761 153.88858032]
[109.72410583 168.88079834]
[117.90196991 182.42454529]
[110.57870483 195.39447021]
[111.06195068 210.38668823]
[111.54518890 225.37889099]
[112.02842712 240.37110901]
[112.51166534 255.36332703]
[112.99490356 270.35552979]
[113.47814178 285.34774780]
[113.96138000 300.33996582]
[126.36901855 309.85754395]
[129.70555115 325.13504028]
[122.39556122 338.95886230]
[107.89060211 344.80184937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[12 181]
[13 180]
[14 179]
[21 108]
[22 107]
[23 106]
[24 105]
[25 104]
[27 103]
[28 102]
[29 101]
[31 99]
[32 98]
[33 96]
[34 95]
[35 94]
[36 93]
[37 92]
[38 91]
[40 89]
[41 88]
[43 86]
[44 85]
[47 82]
[48 81]
[49 80]
[50 79]
[54 75]
[55 74]
[56 73]
[57 71]
[58 70]
[59 69]
[60 68]
[110 133]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[138 176]
[139 175]
[140 174]
[141 173]
[142 172]
[145 170]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[151 164]
[152 163]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
