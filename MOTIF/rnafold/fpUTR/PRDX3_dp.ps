%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRDX3)
} def

/sequence { (\
AGAGGGCCCGCUCACCACCCCGUAGGCCCCGCCCCUGCGUCUCUGCCCGCCCCGUGGCGCCCGAGUGCACUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.399281412 ubox
1 44 0.006104961 ubox
1 71 0.064915853 ubox
2 13 0.012695548 ubox
2 35 0.498850305 ubox
2 41 0.003728105 ubox
2 43 0.006586844 ubox
2 70 0.068263423 ubox
3 12 0.012708869 ubox
3 36 0.088704201 ubox
3 40 0.003525664 ubox
3 42 0.006409783 ubox
3 71 0.015908417 ubox
4 11 0.012694707 ubox
4 20 0.006638039 ubox
4 21 0.005156024 ubox
4 28 0.003249231 ubox
4 29 0.726974371 ubox
4 30 0.086904678 ubox
4 33 0.011593727 ubox
4 34 0.671807596 ubox
4 35 0.087639258 ubox
4 41 0.004229266 ubox
4 52 0.020541380 ubox
4 53 0.003266653 ubox
4 62 0.016680443 ubox
4 70 0.011995149 ubox
4 71 0.004693727 ubox
5 19 0.006668875 ubox
5 20 0.005156363 ubox
5 28 0.730194775 ubox
5 29 0.074109738 ubox
5 30 0.004326272 ubox
5 32 0.010487747 ubox
5 33 0.674151932 ubox
5 34 0.074531580 ubox
5 51 0.020623660 ubox
5 61 0.016701640 ubox
5 70 0.005054935 ubox
5 71 0.006409356 ubox
6 18 0.006656171 ubox
6 19 0.005112143 ubox
6 27 0.731655605 ubox
6 28 0.058389738 ubox
6 29 0.004325604 ubox
6 32 0.675723255 ubox
6 33 0.058459213 ubox
6 50 0.020657350 ubox
6 60 0.016698827 ubox
6 68 0.006615295 ubox
6 70 0.006729092 ubox
7 26 0.732766032 ubox
7 31 0.676116750 ubox
7 49 0.020649389 ubox
7 59 0.016473572 ubox
7 67 0.006417433 ubox
8 25 0.731726599 ubox
8 26 0.051299239 ubox
8 57 0.013633802 ubox
9 22 0.103644282 ubox
9 25 0.055684964 ubox
9 31 0.014890963 ubox
9 56 0.013631570 ubox
9 67 0.009403900 ubox
10 21 0.103232171 ubox
10 23 0.705499476 ubox
10 27 0.674387073 ubox
10 30 0.018017270 ubox
10 32 0.012854984 ubox
10 46 0.020325721 ubox
10 55 0.013391091 ubox
10 58 0.006298483 ubox
10 66 0.011278759 ubox
11 22 0.713402593 ubox
11 25 0.035582670 ubox
11 26 0.675142019 ubox
11 31 0.012854356 ubox
11 45 0.020302439 ubox
11 54 0.013357324 ubox
11 57 0.006175059 ubox
11 65 0.011428157 ubox
12 24 0.044204517 ubox
12 25 0.656608347 ubox
12 26 0.025597641 ubox
12 64 0.011423891 ubox
13 25 0.102139375 ubox
13 45 0.003826982 ubox
13 56 0.005928353 ubox
13 63 0.011400525 ubox
14 23 0.662503533 ubox
14 44 0.004079156 ubox
14 55 0.006002289 ubox
15 22 0.670093970 ubox
15 26 0.035562525 ubox
15 54 0.005984004 ubox
15 57 0.003986591 ubox
16 25 0.036308164 ubox
16 45 0.006032542 ubox
16 56 0.004351766 ubox
16 67 0.003751833 ubox
17 23 0.029812795 ubox
17 40 0.005796827 ubox
17 44 0.006061103 ubox
17 55 0.004406002 ubox
17 66 0.003778228 ubox
18 22 0.030250532 ubox
18 26 0.005640864 ubox
18 39 0.004749338 ubox
18 54 0.004401561 ubox
18 65 0.003758973 ubox
19 25 0.005870641 ubox
19 26 0.005298813 ubox
20 25 0.005545579 ubox
21 39 0.026037304 ubox
21 63 0.003746542 ubox
22 38 0.027183132 ubox
22 46 0.009452879 ubox
22 50 0.006479929 ubox
22 62 0.003732808 ubox
23 37 0.027178289 ubox
23 45 0.009484724 ubox
23 49 0.006417464 ubox
24 36 0.027081402 ubox
24 44 0.009490963 ubox
25 33 0.013909341 ubox
25 35 0.026581801 ubox
25 43 0.009475687 ubox
25 47 0.007180764 ubox
25 61 0.005556525 ubox
26 32 0.014250876 ubox
26 33 0.003361546 ubox
26 34 0.026240708 ubox
26 41 0.003542930 ubox
26 42 0.007929496 ubox
26 46 0.007193496 ubox
26 60 0.005584079 ubox
27 31 0.014423709 ubox
27 45 0.007187749 ubox
27 59 0.005586434 ubox
29 57 0.005598887 ubox
30 39 0.057394158 ubox
30 56 0.012215525 ubox
30 59 0.007602596 ubox
30 67 0.006592964 ubox
30 72 0.097883247 ubox
31 36 0.005830763 ubox
31 38 0.064261205 ubox
31 55 0.012282676 ubox
31 58 0.008317867 ubox
31 66 0.006755531 ubox
31 68 0.008363172 ubox
31 71 0.087595149 ubox
32 37 0.063991890 ubox
32 54 0.012271375 ubox
32 57 0.008314386 ubox
32 65 0.006740552 ubox
32 67 0.008334935 ubox
33 56 0.008297549 ubox
35 65 0.005220242 ubox
35 75 0.030495902 ubox
36 64 0.005188540 ubox
36 69 0.806027491 ubox
36 72 0.009370773 ubox
36 74 0.022315084 ubox
37 46 0.006398899 ubox
37 50 0.018821716 ubox
37 60 0.008341424 ubox
37 66 0.006230706 ubox
37 68 0.995830127 ubox
38 45 0.006414577 ubox
38 49 0.018862501 ubox
38 59 0.008356438 ubox
38 63 0.004929198 ubox
38 65 0.006274028 ubox
38 67 0.996132405 ubox
38 72 0.005220991 ubox
39 44 0.004541926 ubox
39 48 0.018767429 ubox
39 58 0.008306408 ubox
39 62 0.004936827 ubox
39 66 0.960679524 ubox
39 68 0.047999234 ubox
39 70 0.011786839 ubox
40 57 0.008110001 ubox
40 64 0.057878554 ubox
40 65 0.019455600 ubox
40 67 0.046866938 ubox
40 69 0.011773378 ubox
40 73 0.013299506 ubox
41 56 0.008068209 ubox
41 63 0.058025351 ubox
41 65 0.996109158 ubox
41 72 0.014198422 ubox
42 64 0.996279710 ubox
43 63 0.990947670 ubox
43 65 0.016234928 ubox
43 72 0.003194896 ubox
44 59 0.256721152 ubox
44 63 0.089414285 ubox
44 64 0.015424337 ubox
44 69 0.014796874 ubox
45 58 0.268308214 ubox
45 60 0.736946433 ubox
45 62 0.488018240 ubox
45 68 0.015118410 ubox
46 57 0.263230428 ubox
46 59 0.735793469 ubox
46 67 0.015092277 ubox
47 56 0.257948464 ubox
47 57 0.728032993 ubox
48 54 0.238050779 ubox
48 56 0.729974753 ubox
48 59 0.617631366 ubox
49 53 0.222842849 ubox
49 55 0.728817711 ubox
49 58 0.631671819 ubox
49 60 0.013451889 ubox
50 54 0.724623688 ubox
50 57 0.631528564 ubox
50 59 0.013468123 ubox
51 56 0.628447181 ubox
51 57 0.022266773 ubox
52 56 0.028323008 ubox
53 72 0.010560085 ubox
54 70 0.021721507 ubox
54 71 0.006916945 ubox
55 69 0.021436342 ubox
56 68 0.015429898 ubox
57 66 0.003528837 ubox
57 68 0.022753323 ubox
58 65 0.003766888 ubox
58 67 0.027243614 ubox
59 66 0.027274160 ubox
59 68 0.007850456 ubox
60 65 0.027241808 ubox
60 67 0.007863471 ubox
64 71 0.006286438 ubox
65 70 0.006499504 ubox
4 29 0.9500000 lbox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
38 67 0.9500000 lbox
39 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
showpage
end
%%EOF
