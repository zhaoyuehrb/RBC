%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCACCGCCCGGUGGCGGGUCACGUGACUGCGUCUCCCCGCCCUCUCACCCCGCUGCCUCUAGGUUCUGGGAAGAUGGCGAAGGUCUCAGAGCUUUACGAUGUCACUUGGGAAGUGCCCAGAUCAGGCCUGGCACAUAGGCAUUUAGGAAAUAUUAGUUGAGUGAUGAAGAACUCCAAUAUUUACUCCAAGAAGUAAAUAUUAGUGGAAUA\
) } def
/len { sequence length } bind def

/coor [
[32.47257233 242.98579407]
[32.40765381 227.18164062]
[43.59614182 216.01950073]
[43.37594604 201.02111816]
[43.15574646 186.02273560]
[42.93555069 171.02435303]
[42.71535110 156.02597046]
[57.08788681 115.29021454]
[89.06220245 99.01610565]
[77.21797943 89.81206512]
[65.37375641 80.60802460]
[48.05797195 83.10224152]
[34.56217575 72.50910950]
[32.93729019 55.76894379]
[20.95922852 46.73976517]
[8.98116875 37.71058655]
[-6.69621563 35.58216095]
[-12.20198631 21.74251556]
[-24.18004608 12.71333599]
[-36.15810776 3.68415689]
[-48.13616562 -5.34502220]
[-60.11422729 -14.37420177]
[-72.09228516 -23.40338135]
[-93.87484741 -17.75667572]
[-113.20832062 -31.99157524]
[-114.44143677 -57.47693634]
[-128.27847290 -63.26800919]
[-142.11549377 -69.05908203]
[-155.95252991 -74.85015869]
[-169.78956604 -80.64122772]
[-184.26560974 -74.88952637]
[-198.21582031 -80.95960999]
[-203.60998535 -94.79574585]
[-217.44702148 -100.58682251]
[-231.28404236 -106.37789154]
[-245.28512573 -111.76026917]
[-259.43817139 -116.72929382]
[-273.59121704 -121.69832611]
[-287.91705322 -126.14469910]
[-302.39639282 -130.06242371]
[-316.93170166 -133.76716614]
[-331.51980591 -137.25814819]
[-346.10794067 -140.74911499]
[-360.69604492 -144.24008179]
[-375.91799927 -139.92698669]
[-386.49508667 -150.41386414]
[-401.08319092 -153.90483093]
[-415.67129517 -157.39581299]
[-424.59445190 -151.18099976]
[-435.24548340 -150.90734863]
[-444.10308838 -156.42388916]
[-448.37133789 -165.70495605]
[-462.85067749 -169.62268066]
[-477.33001709 -173.54040527]
[-491.80935669 -177.45812988]
[-505.40151978 -169.84950256]
[-520.02984619 -174.02888489]
[-527.19970703 -187.03381348]
[-541.67907715 -190.95153809]
[-556.15844727 -194.86926270]
[-571.86169434 -190.14292908]
[-583.61950684 -201.57476807]
[-579.33630371 -217.40469360]
[-563.41839600 -221.34823608]
[-552.24072266 -209.34860229]
[-537.76135254 -205.43087769]
[-523.28198242 -201.51315308]
[-510.53280640 -209.12850952]
[-495.79287720 -205.36163330]
[-487.89166260 -191.93746948]
[-473.41229248 -188.01974487]
[-458.93295288 -184.10202026]
[-444.45361328 -180.18429565]
[-426.17489624 -186.49511719]
[-412.18032837 -171.98391724]
[-397.59222412 -168.49295044]
[-383.00408936 -165.00198364]
[-368.82559204 -169.56478882]
[-357.20507812 -158.82820129]
[-342.61697388 -155.33723450]
[-328.02883911 -151.84625244]
[-313.44073486 -148.35528564]
[-308.97579956 -150.04458618]
[-303.40237427 -148.94860840]
[-298.47866821 -144.54176331]
[-283.99932861 -140.62403870]
[-289.10208130 -154.72943115]
[-281.38442993 -167.59169006]
[-266.53713989 -169.72659302]
[-255.50814819 -159.55990601]
[-256.42990112 -144.58825684]
[-268.62219238 -135.85137939]
[-254.46914673 -130.88233948]
[-240.31608582 -125.91331482]
[-237.73522949 -127.00195312]
[-234.56809998 -127.13505554]
[-231.17607117 -126.08438873]
[-227.99632263 -123.75646973]
[-225.49298096 -120.21492767]
[-211.65594482 -114.42385101]
[-197.81890869 -108.63278198]
[-184.17758179 -114.50218964]
[-170.06237793 -108.82633209]
[-163.99848938 -94.47826385]
[-150.16145325 -88.68718719]
[-136.32443237 -82.89611816]
[-122.48739624 -77.10504150]
[-108.65036011 -71.31396484]
[-95.17704010 -77.90711975]
[-91.25931549 -92.38646698]
[-87.34159088 -106.86581421]
[-83.42386627 -121.34516144]
[-79.50614166 -135.82450867]
[-86.21452332 -150.39767456]
[-78.87493896 -164.66337585]
[-63.11770248 -167.67817688]
[-51.03041458 -157.12937927]
[-51.88540268 -141.10913086]
[-65.02680206 -131.90678406]
[-68.94452667 -117.42743683]
[-72.86225128 -102.94808960]
[-76.77997589 -88.46874237]
[-80.69770050 -73.98939514]
[-71.53202820 -69.25273895]
[-64.76049042 -61.95105362]
[-61.00983810 -53.11451340]
[-60.50410080 -43.88739014]
[-63.06310654 -35.38143921]
[-51.08504868 -26.35226250]
[-39.10698700 -17.32308197]
[-27.12892723 -8.29390335]
[-15.15086651 0.73527622]
[-3.17280674 9.76445580]
[11.64782619 11.24705410]
[18.01034737 25.73252487]
[29.98840714 34.76170349]
[41.96646881 43.79088211]
[54.34912491 40.23205948]
[66.70529938 44.51832199]
[74.45128632 55.29673767]
[74.57779694 68.76380157]
[86.42201996 77.96784210]
[98.26624298 87.17188263]
[88.32778931 75.93679810]
[82.24081421 62.22735977]
[80.57225037 47.32045364]
[83.47750854 32.60449219]
[90.68598938 19.45011139]
[101.52630615 9.08249569]
[114.98880768 2.46727586]
[129.81959534 0.22058752]
[144.63735962 2.55168533]
[158.06196594 9.24345303]
[168.84307861 19.67262459]
[175.97654724 32.86783981]
[178.79797363 47.60010147]
[177.04455566 62.49726868]
[170.87960815 76.17182922]
[160.87734985 87.35014343]
[147.96936035 94.99107361]
[133.35789490 98.38295746]
[118.40308380 97.20969391]
[132.88243103 101.12741852]
[147.36177063 105.04514313]
[161.84112549 108.96286774]
[173.83906555 99.12269592]
[189.33145142 98.24765015]
[202.36112976 106.67420959]
[207.91793823 121.16219330]
[203.86515808 136.14067078]
[191.76118469 145.85009766]
[176.26022339 146.55703735]
[163.32270813 137.98962402]
[157.92340088 123.44221497]
[143.44404602 119.52449036]
[128.96470642 115.60676575]
[114.48535919 111.68904114]
[110.33003235 117.93270111]
[97.86405182 136.66366577]
[107.06809235 148.50788879]
[116.27214050 160.35211182]
[125.47618103 172.19633484]
[134.68022156 184.04055786]
[143.88426208 195.88478088]
[153.08830261 207.72900391]
[162.29234314 219.57322693]
[171.49638367 231.41744995]
[180.70042419 243.26167297]
[196.41105652 244.97973633]
[206.24000549 257.35580444]
[204.35594177 273.04739380]
[191.87664795 282.74496460]
[176.20585632 280.69509888]
[166.64077759 268.11395264]
[168.85621643 252.46571350]
[159.65216064 240.62149048]
[150.44812012 228.77726746]
[141.24407959 216.93304443]
[132.04003906 205.08882141]
[122.83599854 193.24459839]
[113.63195801 181.40037537]
[104.42791748 169.55615234]
[95.22386932 157.71192932]
[86.01982880 145.86770630]
[78.94330597 148.35223389]
[57.71373749 155.80577087]
[57.93393326 170.80415344]
[58.15412903 185.80253601]
[58.37432861 200.80091858]
[58.59452438 215.79930115]
[70.10587311 226.62817383]
[70.50493622 242.42742920]
[59.55496216 253.82363892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 207]
[7 206]
[9 143]
[10 142]
[11 141]
[14 137]
[15 136]
[16 135]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[26 108]
[27 107]
[28 106]
[29 105]
[30 104]
[33 101]
[34 100]
[35 99]
[36 94]
[37 93]
[38 92]
[39 86]
[40 85]
[41 82]
[42 81]
[43 80]
[44 79]
[46 77]
[47 76]
[48 75]
[52 73]
[53 72]
[54 71]
[55 70]
[58 67]
[59 66]
[60 65]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[162 177]
[163 176]
[164 175]
[165 174]
[179 204]
[180 203]
[181 202]
[182 201]
[183 200]
[184 199]
[185 198]
[186 197]
[187 196]
[188 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
