%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUGCGCCGGGUUCCGUGUGUCUAUGUCAAUGUGUCUGUCCUUCACUCCUCCAUUGUCUGCCGCCACUGCUGCUGCUGCUGCUGCUGCCGCUGCUGCUGCACGAAUCGCCGCAGCCCCCAGCCUUGCGCGUCGUCGCUACCUCCUCGGACAGGUGAGAAGCAGCCCAGAAAUUUU\
) } def
/len { sequence length } bind def

/coor [
[296.75982666 236.28810120]
[284.13455200 228.18855286]
[271.50927734 220.08900452]
[258.88400269 211.98947144]
[246.25874329 203.88992310]
[233.63346863 195.79037476]
[221.00820923 187.69084167]
[208.38293457 179.59129333]
[195.75767517 171.49174500]
[180.86741638 171.13177490]
[173.42993164 157.16773987]
[160.80465698 149.06819153]
[148.17939758 140.96865845]
[140.83030701 140.00051880]
[135.40536499 132.61454773]
[122.92418671 124.29467773]
[110.44300842 115.97480774]
[89.36835480 120.17790985]
[73.47684479 100.58226013]
[58.47742081 100.71389008]
[43.47799683 100.84552002]
[34.89519119 104.05768585]
[28.21473885 100.84552002]
[13.21531677 100.71389008]
[7.22461891 114.65617371]
[-3.61838555 125.21421051]
[-17.63967133 130.80145264]
[-32.69108963 130.59539795]
[-46.47946167 124.65859985]
[-56.91597748 113.92433167]
[-62.43259430 100.05003357]
[-77.43201447 99.91840363]
[-92.43144226 99.78677368]
[-107.43086243 99.65514374]
[-122.43028259 99.52351379]
[-129.22880554 113.14487457]
[-141.21838379 122.42587280]
[-155.98818970 125.56802368]
[-170.59756470 122.00049591]
[-182.16151428 112.48291779]
[-188.42045593 98.94440460]
[-203.41987610 98.81278229]
[-215.82485962 108.98608398]
[-231.48226929 105.48966980]
[-238.38108826 91.00568390]
[-231.22914124 76.64500427]
[-215.51277161 73.42391205]
[-203.28825378 83.81335449]
[-188.28881836 83.94498444]
[-181.79325867 70.51840210]
[-170.06404114 61.20523834]
[-155.39431763 57.89465332]
[-140.68193054 61.29552841]
[-128.85707092 70.78551483]
[-122.29865265 84.52409363]
[-107.29923248 84.65572357]
[-92.29981232 84.78734589]
[-77.30039215 84.91897583]
[-62.30096817 85.05060577]
[-56.54170609 71.27526093]
[-45.91841125 60.72580338]
[-32.02796936 55.03190231]
[-16.97525597 55.09003448]
[-3.05418563 60.92248154]
[7.60185671 71.66919708]
[13.34694576 85.71446228]
[28.34636879 85.84609222]
[43.34636688 85.84609222]
[58.34579086 85.71446228]
[73.34521484 85.58283234]
[83.52481079 74.56576538]
[82.47262573 59.60271454]
[81.42044067 44.63966370]
[72.73417664 31.41621971]
[79.55966187 18.17756081]
[78.50747681 3.21450925]
[69.82121277 -10.00893307]
[76.64669800 -23.24759102]
[75.59451294 -38.21064377]
[66.90824890 -51.43408585]
[73.73372650 -64.67274475]
[72.68154907 -79.63579559]
[63.99528503 -92.85923767]
[70.82076263 -106.09790039]
[69.76858521 -121.06095123]
[60.14952850 -134.34272766]
[67.08847046 -149.20150757]
[83.44722748 -150.35183716]
[92.39730072 -136.61035156]
[84.73163605 -122.11312866]
[85.78381348 -107.15007782]
[94.39482117 -94.99689484]
[87.64459991 -80.68798065]
[88.69678497 -65.72492981]
[97.30778503 -53.57174301]
[90.55756378 -39.26282501]
[91.60974884 -24.29977417]
[100.22074890 -12.14659023]
[93.47052765 2.16232634]
[94.52271271 17.12537766]
[103.13371277 29.27856255]
[96.38349152 43.58747864]
[97.43567657 58.55052948]
[98.48786163 73.51358032]
[117.11865997 84.92912292]
[118.76287079 103.49362946]
[131.24404907 111.81349945]
[143.72523499 120.13336182]
[156.27893066 128.34338379]
[168.90420532 136.44293213]
[181.52947998 144.54246521]
[197.32276917 145.48178101]
[203.85720825 158.86648560]
[216.48248291 166.96603394]
[229.10775757 175.06556702]
[241.73301697 183.16511536]
[254.35829163 191.26464844]
[266.98355103 199.36419678]
[279.60882568 207.46374512]
[292.23410034 215.56327820]
[304.85937500 223.66282654]
[319.08038330 212.10762024]
[336.35708618 206.07125854]
[354.63418579 206.25543213]
[371.74288940 212.62274170]
[385.65832520 224.40307617]
[394.73925781 240.18659973]
[397.92144775 258.09259033]
[394.84259033 275.99340820]
[408.12911987 282.95529175]
[421.47622681 289.80032349]
[434.88290405 296.52795410]
[450.68746948 295.80203247]
[458.59259033 308.42575073]
[471.99926758 315.15338135]
[481.10214233 316.21179199]
[485.58062744 322.11853027]
[498.86715698 329.08041382]
[512.15368652 336.04229736]
[525.44024658 343.00418091]
[538.72680664 349.96603394]
[558.78906250 348.20507812]
[568.46936035 364.92413330]
[581.99206543 371.41543579]
[597.54382324 367.47576904]
[610.23272705 377.29266357]
[610.32489014 393.33544922]
[597.74963379 403.29748535]
[582.15356445 399.53671265]
[575.50073242 384.93811035]
[561.97808838 378.44680786]
[552.64678955 382.69744873]
[542.30181885 381.06048584]
[534.41412354 373.83975220]
[531.76489258 363.25259399]
[518.47839355 356.29071045]
[505.19183350 349.32882690]
[491.90530396 342.36694336]
[478.61874390 335.40505981]
[465.27163696 328.56005859]
[451.86495972 321.83242798]
[437.01934814 323.03955078]
[428.15527344 309.93463135]
[414.74859619 303.20700073]
[407.33847046 303.01669312]
[401.16723633 296.24185181]
[387.88070679 289.27996826]
[379.88632202 298.11779785]
[370.10348511 304.93936157]
[359.02981567 309.39266968]
[347.22970581 311.24624634]
[335.30557251 310.40124512]
[323.86709595 306.89672852]
[313.50009155 300.90786743]
[304.73648071 292.73709106]
[298.02694702 282.79901123]
[293.71786499 271.59915161]
[292.03329468 259.70840454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 121]
[2 120]
[3 119]
[4 118]
[5 117]
[6 116]
[7 115]
[8 114]
[9 113]
[11 111]
[12 110]
[13 109]
[15 108]
[16 107]
[17 106]
[19 70]
[20 69]
[21 68]
[23 67]
[24 66]
[31 59]
[32 58]
[33 57]
[34 56]
[35 55]
[41 49]
[42 48]
[71 104]
[72 103]
[73 102]
[75 100]
[76 99]
[78 97]
[79 96]
[81 94]
[82 93]
[84 91]
[85 90]
[129 167]
[130 166]
[131 164]
[132 163]
[134 161]
[135 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
