%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUCCCACAACUGGAGCAGCCGGGAACAGCUCUGACCACAGUGGUUCCGGGGAGAAGCCUUUCCAGGACCCAUGUGUAGGCACAACUGUUUUCCCUGAUCAGGAUACUUGCGGCACUCAACAGAGGAAAGAAAUUCCUAAGGGAACACUGCUCAGAAAGUACUGCAGCAUGUCUUCAA\
) } def
/len { sequence length } bind def

/coor [
[75.37824249 173.36291504]
[83.52607727 160.76875305]
[96.54035187 153.31028748]
[111.52567291 152.64685059]
[125.14827728 158.92616272]
[117.68589020 145.91413879]
[110.22349548 132.90211487]
[102.76110840 119.89009094]
[90.53565216 118.72254944]
[80.76770020 110.42626953]
[77.36106873 97.51787567]
[82.12787628 84.47662354]
[93.92986298 76.19117737]
[83.74546814 65.17855072]
[73.56106567 54.16592407]
[63.18706131 43.33171463]
[52.62658310 32.67918777]
[42.06610870 22.02666092]
[29.17772675 21.18560791]
[20.60007668 12.07301712]
[20.54411507 -0.04029659]
[10.17011261 -10.87450600]
[-0.20388901 -21.70871544]
[-29.26317024 -40.65051651]
[-42.46504593 -47.77164459]
[-55.66692352 -54.89277267]
[-68.86879730 -62.01390076]
[-82.07067871 -69.13502502]
[-95.27255249 -76.25615692]
[-108.47443390 -83.37728119]
[-121.67630768 -90.49840546]
[-135.61854553 -83.94705200]
[-150.57028198 -86.82785034]
[-160.83728027 -97.83024597]
[-162.63537598 -112.59184265]
[-175.83726501 -119.71296692]
[-184.90274048 -121.03956604]
[-189.20489502 -127.07398224]
[-202.28118896 -134.42317200]
[-215.42077637 -141.65859985]
[-228.62265015 -148.77972412]
[-241.82452393 -155.90084839]
[-255.08770752 -162.90713501]
[-268.41119385 -169.79806519]
[-281.73468018 -176.68898010]
[-295.05813599 -183.57991028]
[-310.87039185 -183.04711914]
[-318.62066650 -195.76647949]
[-331.94415283 -202.65740967]
[-345.26763916 -209.54832458]
[-358.65042114 -216.32336426]
[-372.09149170 -222.98200989]
[-385.53256226 -229.64065552]
[-398.97366333 -236.29930115]
[-412.41473389 -242.95793152]
[-425.85580444 -249.61657715]
[-442.17843628 -248.03419495]
[-451.48864746 -261.53427124]
[-444.20889282 -276.22906494]
[-427.82797241 -277.00186157]
[-419.19714355 -263.05764771]
[-405.75607300 -256.39901733]
[-392.31500244 -249.74037170]
[-378.87393188 -243.08172607]
[-365.43286133 -236.42308044]
[-351.99179077 -229.76443481]
[-344.58236694 -229.61219788]
[-338.37670898 -222.87181091]
[-325.05325317 -215.98088074]
[-311.72976685 -209.08996582]
[-296.87051392 -210.11564636]
[-288.16723633 -196.90339661]
[-274.84375000 -190.01246643]
[-261.52026367 -183.12155151]
[-248.19677734 -176.23062134]
[-240.79112244 -175.94981384]
[-234.70339966 -169.10272217]
[-221.50152588 -161.98159790]
[-208.29963684 -154.86047363]
[-200.89996338 -154.45117188]
[-194.93200684 -147.49946594]
[-181.85571289 -140.15026855]
[-168.71612549 -132.91484070]
[-155.51425171 -125.79371643]
[-142.19091797 -132.39877319]
[-127.35755920 -129.86196899]
[-116.73808289 -118.94958496]
[-114.55518341 -103.70028687]
[-101.35330200 -96.57915497]
[-88.15142822 -89.45803070]
[-74.94954681 -82.33690643]
[-61.74767303 -75.21577454]
[-48.54579544 -68.09465027]
[-35.34392166 -60.97352219]
[-22.14204407 -53.85239410]
[-8.12748051 -59.19954681]
[-3.02437139 -73.30480194]
[2.07873774 -87.41005707]
[-1.33120012 -103.45076752]
[11.03489113 -114.22164917]
[26.45583725 -108.64253998]
[29.06789017 -92.45275116]
[16.18399429 -82.30695343]
[11.08088589 -68.20169067]
[5.97777653 -54.09643555]
[13.77508736 -66.91056824]
[27.42522812 -73.12937927]
[42.21108627 -70.60382843]
[53.02307510 -60.20667648]
[56.12487411 -45.53088379]
[50.44458008 -31.64800644]
[37.94515228 -23.35558319]
[22.94604492 -23.51924706]
[10.63032055 -32.08271790]
[21.00432205 -21.24850655]
[31.37832451 -10.41429806]
[48.45856094 -6.43561888]
[52.71863174 11.46618366]
[63.27910995 22.11870956]
[73.83959198 32.77123642]
[78.55213928 33.68544388]
[82.73128510 37.58658218]
[84.57369232 43.98152161]
[94.75809479 54.99414825]
[104.94249725 66.00677490]
[118.95705414 71.35392761]
[133.88876343 69.92416382]
[148.82046509 68.49439240]
[163.75216675 67.06462860]
[178.68386841 65.63485718]
[189.96298218 54.22604370]
[205.89921570 56.07433319]
[214.26763916 69.76187897]
[208.64872742 84.78877258]
[193.35282898 89.62765503]
[180.11363220 80.56656647]
[165.18193054 81.99633026]
[150.25022888 83.42610168]
[135.31852722 84.85586548]
[120.38682556 86.28562927]
[122.73207855 96.04306030]
[120.91990662 105.28582764]
[115.77313232 112.42769623]
[123.23551941 125.43972015]
[130.69790649 138.45173645]
[138.16029358 151.46376038]
[146.82899475 163.70524597]
[156.62504578 175.06471252]
[166.42109680 186.42416382]
[174.41812134 190.89524841]
[176.28651428 198.06684875]
[185.88392639 209.59461975]
[195.48135376 221.12239075]
[205.07876587 232.65016174]
[214.77587891 244.09420776]
[224.57192993 255.45365906]
[234.36798096 266.81311035]
[250.14578247 267.72781372]
[260.59304810 279.58654785]
[259.51162720 295.35379028]
[247.54306030 305.67510986]
[231.78813171 304.42703247]
[221.59394836 292.35003662]
[223.00851440 276.60919189]
[213.21246338 265.24972534]
[203.41641235 253.89025879]
[196.64877319 250.87002563]
[193.55101013 242.24757385]
[183.95358276 230.71980286]
[174.35615540 219.19203186]
[164.75874329 207.66426086]
[155.06163025 196.22021484]
[145.26557922 184.86076355]
[135.46952820 173.50129700]
[136.86944580 188.43582153]
[131.26809692 202.35073853]
[119.91164398 212.15028381]
[105.32664490 215.65426636]
[90.75794983 212.08314514]
[79.44674683 202.23139954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 146]
[6 145]
[7 144]
[8 143]
[13 125]
[14 124]
[15 123]
[16 120]
[17 119]
[18 118]
[21 116]
[22 115]
[23 114]
[24 95]
[25 94]
[26 93]
[27 92]
[28 91]
[29 90]
[30 89]
[31 88]
[35 84]
[36 83]
[38 82]
[39 81]
[40 79]
[41 78]
[42 77]
[43 75]
[44 74]
[45 73]
[46 72]
[48 70]
[49 69]
[50 68]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[96 105]
[97 104]
[98 103]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
[147 174]
[148 173]
[149 172]
[151 171]
[152 170]
[153 169]
[154 168]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
