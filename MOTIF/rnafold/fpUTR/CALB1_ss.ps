%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGGAGAGAACUCUGGAGGAACGCUGAGCUGAGCAGCACCGAGGACAGCGCCCGGCAGCGCCCGCGCCCAGGUCUCCCUCCGCAGCCCUGACUCGCGCACACGCUGAGCUUUUGCUCACUCCCCCUCGCGCGGACACAGACACACGCAUAUUCACACACCCAGACACACACCCCGCUGUACA\
) } def
/len { sequence length } bind def

/coor [
[234.60807800 206.09068298]
[222.85795593 196.76681519]
[211.02908325 187.54304504]
[199.12232971 178.42005920]
[187.21557617 169.29705811]
[175.30880737 160.17405701]
[160.50027466 158.57507324]
[154.25175476 144.04006958]
[142.34500122 134.91706848]
[130.43823242 125.79406738]
[104.09001160 133.68376160]
[83.61218262 122.65975189]
[78.43022156 104.32061768]
[63.55171585 102.41535187]
[48.88054276 108.33712006]
[37.23913193 99.04589844]
[22.36062622 97.14062500]
[7.48211956 95.23535919]
[-7.39638710 93.33009338]
[-22.27489281 91.42482758]
[-37.15340042 89.51956177]
[-55.35651779 98.14547729]
[-70.24111176 85.82378387]
[-85.17573547 84.42483521]
[-94.03508759 86.74385834]
[-100.35134125 82.87322998]
[-115.26005554 81.22088623]
[-130.16877747 79.56854248]
[-144.73727417 85.73857880]
[-156.53477478 76.64637756]
[-171.44349670 74.99403381]
[-186.36569214 73.46833038]
[-201.30032349 72.06938934]
[-215.76194763 78.48591614]
[-227.71214294 69.59535980]
[-242.64675903 68.19641113]
[-251.50611877 70.51543427]
[-257.82235718 66.64480591]
[-272.73107910 64.99246216]
[-289.40554810 72.78062439]
[-303.13656616 61.86805725]
[-318.07119751 60.46911240]
[-333.00582886 59.07016754]
[-341.86517334 61.38919067]
[-348.18142700 57.51855850]
[-363.09014893 55.86621475]
[-375.27029419 65.93692017]
[-390.99594116 64.36215210]
[-400.93731689 52.07619095]
[-399.19638062 36.36808395]
[-386.80599976 26.55716705]
[-371.11715698 28.46408844]
[-361.43780518 40.95750046]
[-346.52908325 42.60984421]
[-331.60687256 44.13554382]
[-316.67224121 45.53448868]
[-301.73764038 46.93343353]
[-292.21295166 39.45322800]
[-279.74578857 40.51133728]
[-271.07873535 50.08374786]
[-256.17001343 51.73609161]
[-241.24781799 53.26179123]
[-226.31320190 54.66073608]
[-212.91979980 48.14414215]
[-199.90136719 57.13476562]
[-184.96675110 58.53371048]
[-177.99787903 56.02140045]
[-169.79115295 60.08531570]
[-154.88243103 61.73766327]
[-141.38029480 55.44943619]
[-128.51641846 64.65982819]
[-113.60771179 66.31217194]
[-98.69899750 67.96451569]
[-83.77679443 69.49021149]
[-68.84217072 70.88916016]
[-61.57020950 63.67092133]
[-51.30791473 61.61586380]
[-41.40979385 65.64273834]
[-35.24813461 74.64105225]
[-20.36962700 76.54631805]
[-5.49111986 78.45158386]
[9.38738632 80.35685730]
[24.26589394 82.26212311]
[39.14440155 84.16738892]
[52.75136185 78.10934448]
[65.45698547 87.53684998]
[80.33548737 89.44211578]
[68.19180298 80.63694763]
[54.74357224 73.99278259]
[47.44755936 60.88674164]
[48.88511658 45.95578766]
[58.54763794 34.48252487]
[73.01648712 30.52622604]
[87.17256165 35.48664093]
[96.00739288 47.60875702]
[96.39514923 62.60390472]
[99.29180908 77.32156372]
[103.80577087 63.01686859]
[108.31973267 48.71218109]
[104.24772644 32.82662582]
[116.15666199 21.55234718]
[131.79563904 26.48735428]
[135.07662964 42.55493546]
[122.62442780 53.22613907]
[118.11046600 67.53083038]
[113.59650421 81.83551788]
[126.69171143 89.15094757]
[136.50587463 77.80712128]
[146.32002258 66.46330261]
[156.13418579 55.11947632]
[165.94834900 43.77565384]
[168.50640869 27.57724953]
[183.90866089 21.94675446]
[196.31059265 32.67634201]
[192.95416260 48.72833252]
[177.29216003 53.58981323]
[167.47801208 64.93363190]
[157.66384888 76.27745819]
[147.84970093 87.62127686]
[138.03553772 98.96510315]
[139.56123352 113.88730621]
[151.46798706 123.01030731]
[163.37475586 132.13330078]
[179.03492737 134.38482666]
[184.43180847 148.26730347]
[196.33856201 157.39028931]
[208.24533081 166.51329041]
[220.15208435 175.63629150]
[228.88896179 178.38087463]
[232.18182373 185.01669312]
[243.93194580 194.34056091]
[256.21517944 202.94999695]
[268.98809814 210.81460571]
[281.76104736 218.67921448]
[294.53396606 226.54383850]
[304.27395630 215.09686279]
[315.64724731 205.27093506]
[328.38723755 197.29637146]
[342.19525146 191.36013794]
[356.74761963 187.60134888]
[371.70324707 186.10813904]
[386.71154785 186.91551208]
[401.42065430 190.00453186]
[415.48583984 195.30279541]
[428.57733154 202.68609619]
[440.38827515 211.98136902]
[450.64178467 222.97071838]
[459.09753418 235.39653015]
[465.55731201 248.96751404]
[469.86965942 263.36557007]
[471.93350220 278.25320435]
[471.70043945 293.28137207]
[469.17599487 308.09783936]
[464.41928101 322.35525513]
[457.54183960 335.71942139]
[448.70486450 347.87707520]
[438.11553955 358.54321289]
[426.02206421 367.46780396]
[412.70791626 374.44161987]
[398.48522949 379.30123901]
[383.68740845 381.93267822]
[368.66131592 382.27432251]
[353.75915527 380.31811523]
[339.33032227 376.10989380]
[325.71301270 369.74838257]
[313.22640991 361.38262939]
[302.16326904 351.20877075]
[292.78289795 339.46530151]
[285.30520630 326.42752075]
[279.90545654 312.40100098]
[276.71020508 297.71456909]
[275.79443359 282.71252441]
[277.17953491 267.74649048]
[280.83306885 253.16732788]
[286.66937256 239.31677246]
[273.89642334 231.45216370]
[261.12350464 223.58755493]
[248.35055542 215.72294617]
[251.73989868 230.33500671]
[245.07171631 243.77134705]
[231.38479614 249.90879822]
[216.91651917 245.95043945]
[208.26029968 233.70013428]
[209.36091614 218.74057007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 131]
[2 130]
[3 128]
[4 127]
[5 126]
[6 125]
[8 123]
[9 122]
[10 121]
[13 87]
[14 86]
[16 84]
[17 83]
[18 82]
[19 81]
[20 80]
[21 79]
[23 75]
[24 74]
[26 73]
[27 72]
[28 71]
[30 69]
[31 68]
[32 66]
[33 65]
[35 63]
[36 62]
[38 61]
[39 60]
[41 57]
[42 56]
[43 55]
[45 54]
[46 53]
[97 106]
[98 105]
[99 104]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[132 178]
[133 177]
[134 176]
[135 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
