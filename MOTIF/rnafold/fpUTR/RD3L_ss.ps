%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUGAGCAUUCUCUCCAAAUGAAGACAUCACAGCCUCAUUCCUAACACAGAAAGUUAUUUAUUUCAAAUACAGUUUCGGUGGGUAAAUAAGGUGGCGCAUUCCUUCUACAGAGGACACACCUAGGAGAGCAAGAUACGUCCCAGUGAAACACAGCUUCGUCACCAACUUCAGUCAACUCUUUGGCAACAUCACAUCAGCCCAUCAACUUAACAGGCUAAAA\
) } def
/len { sequence length } bind def

/coor [
[97.56048584 240.54325867]
[85.07346344 248.85435486]
[70.12816620 250.13427734]
[56.40981293 244.06742859]
[47.30105591 232.14976501]
[45.04781342 217.32116699]
[37.27740860 230.15162659]
[29.50700378 242.98210144]
[36.27313995 258.48947144]
[32.49672318 274.81121826]
[19.86017036 285.55526733]
[3.47534847 286.63555908]
[-4.11515808 299.57324219]
[-11.70566463 312.51095581]
[-4.64076996 326.22558594]
[-6.13483143 341.58041382]
[-15.71109962 353.67581177]
[-30.31382179 358.65216064]
[-45.28332138 354.92153931]
[-55.84288788 343.67434692]
[-58.62299728 328.49957275]
[-52.73653412 314.23937988]
[-40.06184006 305.44415283]
[-24.64336967 304.92044067]
[-17.05286217 291.98275757]
[-9.46235657 279.04504395]
[-15.91776371 267.36511230]
[-15.76017666 253.91268921]
[-8.92385674 242.20027161]
[2.89913988 235.33882141]
[16.67654037 235.21168518]
[24.44694519 222.38122559]
[32.21735001 209.55076599]
[32.27740860 198.77931213]
[41.76879501 191.28053284]
[47.86984253 177.57736206]
[53.97089386 163.87417603]
[60.07194138 150.17098999]
[66.17298889 136.46780396]
[62.46842957 129.94659424]
[50.54459763 139.04727173]
[38.62076950 148.14794922]
[26.69693756 157.24862671]
[17.62961578 169.19783020]
[2.75876331 171.16194153]
[-9.09997082 161.97660828]
[-10.91656494 147.08702087]
[-1.61411583 135.31993103]
[13.29142094 133.65065002]
[27.21404648 128.06848145]
[41.13667297 122.48632812]
[55.05929947 116.90417480]
[51.35473633 110.38296509]
[36.46025467 108.60690308]
[21.56577110 106.83084106]
[6.67128849 105.05478668]
[-3.77244830 116.53119659]
[-18.97406387 119.64415741]
[-33.08822632 113.19667053]
[-40.68775177 99.66793060]
[-38.85046768 84.26000977]
[-28.28284836 72.89756775]
[-13.04835796 69.94969940]
[0.99503040 76.54991150]
[8.44734764 90.16030121]
[23.34183121 91.93636322]
[38.23631287 93.71241760]
[53.13079453 95.48847961]
[57.76363373 82.12599945]
[65.99357605 71.08184814]
[76.87482452 63.25464630]
[89.26152039 59.19596100]
[101.92642975 59.07500076]
[113.68193054 62.68183517]
[123.49132538 69.46699524]
[134.77754211 59.58665466]
[146.06376648 49.70631027]
[157.34999084 39.82596970]
[159.83242798 33.71585464]
[164.34683228 30.28470421]
[169.09205627 29.83269501]
[180.64974976 20.27133560]
[192.20744324 10.70997620]
[203.76515198 1.14861608]
[215.32284546 -8.41274357]
[226.88053894 -17.97410393]
[238.43824768 -27.53546333]
[229.87762451 -48.44077682]
[229.24723816 -70.99918365]
[236.61201477 -92.30654144]
[251.00865173 -109.62547302]
[270.57156372 -120.73706055]
[292.77459717 -124.22512817]
[314.75732422 -119.65671539]
[321.98361206 -132.80131531]
[329.20993042 -145.94590759]
[336.43621826 -159.09051514]
[343.66253662 -172.23510742]
[350.88885498 -185.37971497]
[333.08676147 -225.65022278]
[334.75881958 -240.55674744]
[328.60803223 -255.13339233]
[337.71578979 -266.91888428]
[339.38781738 -281.82537842]
[341.05987549 -296.73190308]
[342.73190308 -311.63842773]
[344.40393066 -326.54495239]
[332.78375244 -317.05960083]
[317.78399658 -317.14492798]
[306.27249146 -326.76184082]
[303.51989746 -341.50711060]
[310.78652954 -354.62945557]
[324.74530029 -360.12066650]
[339.00497437 -355.46646118]
[347.03643799 -342.79864502]
[350.15512085 -357.47085571]
[353.27380371 -372.14306641]
[345.77719116 -386.32687378]
[352.32427979 -400.97320557]
[367.89273071 -404.84664917]
[380.53970337 -394.97583008]
[380.56359863 -378.93280029]
[367.94601440 -369.02438354]
[364.82733154 -354.35217285]
[361.70867920 -339.67996216]
[359.31045532 -324.87292480]
[357.63842773 -309.96640015]
[355.96636963 -295.05987549]
[354.29434204 -280.15335083]
[352.62231445 -265.24682617]
[358.89270020 -251.73641968]
[349.66531372 -238.88471985]
[347.99328613 -223.97819519]
[354.21109009 -219.78424072]
[362.59896851 -232.21981812]
[370.98684692 -244.65538025]
[379.37475586 -257.09094238]
[387.76263428 -269.52648926]
[391.89739990 -283.94537354]
[406.88827515 -284.46850586]
[412.01803589 -270.37292480]
[400.19821167 -261.13861084]
[391.81033325 -248.70304871]
[383.42242432 -236.26748657]
[375.03454590 -223.83192444]
[366.64663696 -211.39636230]
[372.86441040 -207.20240784]
[386.05914307 -214.33677673]
[399.25387573 -221.47113037]
[410.31097412 -234.32325745]
[425.72174072 -227.25611877]
[423.19689941 -210.49122620]
[406.38824463 -208.27641296]
[393.19351196 -201.14204407]
[379.99877930 -194.00767517]
[394.81961060 -191.69616699]
[404.26440430 -180.04301453]
[403.45678711 -165.06477356]
[392.81375122 -154.49473572]
[377.83029175 -153.79023743]
[366.24243164 -163.31501770]
[364.03344727 -178.15341187]
[356.80712891 -165.00880432]
[349.58084106 -151.86421204]
[342.35452271 -138.71960449]
[335.12823486 -125.57501221]
[327.90191650 -112.43041229]
[334.99340820 -106.49557495]
[341.13238525 -99.58005524]
[346.18469238 -91.83501434]
[350.03988647 -83.42971802]
[352.61370850 -74.54788971]
[353.84991455 -65.38365936]
[353.72146606 -56.13730621]
[352.23120117 -47.01094437]
[366.29043579 -41.78236389]
[380.34967041 -36.55378342]
[394.40887451 -31.32520103]
[408.46810913 -26.09662056]
[424.53857422 -29.36350441]
[435.19885254 -16.90193748]
[429.48254395 -1.53131211]
[413.27014160 0.93639070]
[403.23953247 -12.03739071]
[389.18029785 -17.26597023]
[375.12106323 -22.49455261]
[361.06185913 -27.72313309]
[347.00262451 -32.95171356]
[342.38824463 -25.31847763]
[336.73220825 -18.41517639]
[330.14837646 -12.38299751]
[322.76962280 -7.34557104]
[314.74508667 -3.40643311]
[306.23730469 -0.64689761]
[297.41873169 0.87562114]
[288.46835327 1.12880218]
[279.56805420 0.10610294]
[270.89886475 -2.17307925]
[262.63732910 -5.66377306]
[254.95195007 -10.29631996]
[247.99960327 -15.97776508]
[236.44190979 -6.41640472]
[224.88420105 3.14495492]
[213.32650757 12.70631504]
[201.76881409 22.26767540]
[190.21110535 31.82903481]
[178.65341187 41.39039612]
[167.23033142 51.11219406]
[155.94410706 60.99253464]
[144.65789795 70.87287903]
[133.37167358 80.75321960]
[140.23127747 99.35488892]
[136.99159241 119.78191376]
[123.65700531 136.69660950]
[102.97019958 145.27616882]
[79.87617493 142.56886292]
[73.77512360 156.27203369]
[67.67407227 169.97521973]
[61.57302475 183.67840576]
[55.47197723 197.38159180]
[68.93562317 190.76870728]
[83.92025757 191.44738770]
[96.73098755 199.25028992]
[104.20893097 212.25337219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 33]
[7 32]
[8 31]
[12 26]
[13 25]
[14 24]
[35 220]
[36 219]
[37 218]
[38 217]
[39 216]
[53 68]
[54 67]
[55 66]
[56 65]
[75 211]
[76 210]
[77 209]
[78 208]
[81 207]
[82 206]
[83 205]
[84 204]
[85 203]
[86 202]
[87 201]
[94 167]
[95 166]
[96 165]
[97 164]
[98 163]
[99 162]
[100 133]
[101 132]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[115 125]
[116 124]
[117 123]
[147 155]
[148 154]
[149 153]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
