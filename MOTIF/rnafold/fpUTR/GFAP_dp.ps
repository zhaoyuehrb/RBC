%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GFAP)
} def

/sequence { (\
AUCGCCAGUCUAGCCCACUCCUUCAUAAAGCCCUCGCAUCCCAGGAGCGAGCAGAGCCAGAGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.013384544 ubox
1 26 0.004444429 ubox
2 8 0.014880741 ubox
2 25 0.004483881 ubox
2 50 0.013460361 ubox
2 55 0.021742662 ubox
2 61 0.206103233 ubox
2 66 0.141375209 ubox
3 49 0.014387984 ubox
3 54 0.023206856 ubox
3 60 0.220077396 ubox
3 65 0.217590751 ubox
4 14 0.243781321 ubox
4 31 0.043227282 ubox
4 48 0.014304901 ubox
4 52 0.015293814 ubox
4 57 0.179062087 ubox
4 63 0.481939051 ubox
5 13 0.244280500 ubox
5 30 0.043229554 ubox
5 47 0.013023413 ubox
5 51 0.014425444 ubox
5 56 0.179529577 ubox
5 62 0.482209054 ubox
5 66 0.489126968 ubox
6 65 0.497437737 ubox
7 19 0.087512017 ubox
7 22 0.019279907 ubox
7 23 0.003301008 ubox
8 14 0.059123708 ubox
8 18 0.093554462 ubox
8 21 0.020642495 ubox
8 22 0.003240482 ubox
8 26 0.023761495 ubox
8 31 0.012694032 ubox
8 48 0.007296393 ubox
8 52 0.008083588 ubox
8 57 0.150297185 ubox
8 63 0.419361823 ubox
9 13 0.055486706 ubox
9 17 0.090311729 ubox
9 25 0.024289989 ubox
9 30 0.010181464 ubox
9 47 0.003866613 ubox
9 51 0.004558632 ubox
9 55 0.409897168 ubox
9 56 0.083104338 ubox
9 61 0.650133787 ubox
9 62 0.222845549 ubox
9 66 0.084340165 ubox
10 30 0.009885841 ubox
10 49 0.003196051 ubox
10 51 0.007919367 ubox
10 54 0.424713370 ubox
10 56 0.071400105 ubox
10 60 0.692172235 ubox
10 62 0.051962329 ubox
10 65 0.136708007 ubox
10 66 0.025892858 ubox
11 27 0.010938887 ubox
11 29 0.009774654 ubox
11 50 0.007483716 ubox
11 53 0.421890877 ubox
11 55 0.071587757 ubox
11 59 0.679057849 ubox
11 61 0.051838827 ubox
11 64 0.135962541 ubox
11 65 0.024448430 ubox
12 19 0.052480987 ubox
12 22 0.037848541 ubox
12 23 0.009886491 ubox
12 26 0.011465764 ubox
13 18 0.055898816 ubox
13 21 0.038801955 ubox
13 22 0.010827423 ubox
13 31 0.060888178 ubox
13 48 0.009408818 ubox
13 52 0.432326449 ubox
13 57 0.690446716 ubox
13 63 0.155866779 ubox
14 30 0.060913518 ubox
14 47 0.008477278 ubox
14 51 0.431079482 ubox
14 56 0.686721122 ubox
14 62 0.155014218 ubox
14 66 0.291538703 ubox
15 65 0.299531806 ubox
15 66 0.149525414 ubox
16 65 0.151631782 ubox
18 30 0.085191373 ubox
18 47 0.429058759 ubox
18 51 0.473844579 ubox
18 54 0.276561251 ubox
18 56 0.153518706 ubox
18 60 0.077386844 ubox
18 62 0.346010675 ubox
18 65 0.223470146 ubox
18 66 0.048240227 ubox
19 29 0.082265601 ubox
19 46 0.430661312 ubox
19 50 0.475643648 ubox
19 53 0.266662060 ubox
19 55 0.199394877 ubox
19 59 0.074996531 ubox
19 61 0.347567193 ubox
19 64 0.219523069 ubox
19 65 0.046837827 ubox
19 66 0.016077746 ubox
20 45 0.430782553 ubox
20 49 0.475647204 ubox
20 54 0.196524076 ubox
20 60 0.342422643 ubox
20 65 0.028370192 ubox
20 66 0.217588517 ubox
21 30 0.320870646 ubox
21 44 0.430696257 ubox
21 45 0.006893563 ubox
21 47 0.463041353 ubox
21 51 0.111657258 ubox
21 54 0.053417601 ubox
21 56 0.136053018 ubox
21 60 0.060832896 ubox
21 62 0.225514611 ubox
21 65 0.222426681 ubox
21 66 0.034094416 ubox
22 28 0.042193875 ubox
22 29 0.321535138 ubox
22 30 0.026940561 ubox
22 43 0.413401256 ubox
22 44 0.007955763 ubox
22 45 0.003456367 ubox
22 46 0.462677387 ubox
22 47 0.059715226 ubox
22 50 0.104848446 ubox
22 51 0.025999526 ubox
22 53 0.061469096 ubox
22 54 0.008640318 ubox
22 55 0.133267150 ubox
22 56 0.216318798 ubox
22 59 0.079055305 ubox
22 60 0.008269454 ubox
22 61 0.215267639 ubox
22 62 0.114723025 ubox
22 64 0.203454951 ubox
22 65 0.034332781 ubox
23 27 0.040016062 ubox
23 28 0.280908496 ubox
23 29 0.033668097 ubox
23 43 0.032807401 ubox
23 44 0.005995368 ubox
23 45 0.461245305 ubox
23 46 0.064315302 ubox
23 49 0.098607929 ubox
23 50 0.036842364 ubox
23 53 0.014593928 ubox
23 54 0.124442081 ubox
23 55 0.240133830 ubox
23 59 0.026417277 ubox
23 60 0.195165541 ubox
23 61 0.210468008 ubox
23 64 0.031504034 ubox
23 66 0.007007253 ubox
24 44 0.457205291 ubox
24 45 0.066209227 ubox
24 49 0.043473571 ubox
24 54 0.242212909 ubox
24 60 0.224324494 ubox
24 65 0.011288571 ubox
25 39 0.089016380 ubox
26 38 0.092344452 ubox
30 37 0.604095995 ubox
30 48 0.181444051 ubox
30 52 0.247314144 ubox
30 57 0.221952808 ubox
30 63 0.033522740 ubox
31 36 0.603292801 ubox
31 45 0.004605640 ubox
31 47 0.181487850 ubox
31 51 0.221264379 ubox
31 56 0.222089984 ubox
31 62 0.033508165 ubox
31 66 0.026269075 ubox
32 44 0.004513232 ubox
32 45 0.182233969 ubox
32 65 0.026779016 ubox
32 66 0.008308153 ubox
33 44 0.182315792 ubox
33 45 0.013143600 ubox
33 47 0.012449060 ubox
33 51 0.705868624 ubox
33 54 0.044721621 ubox
33 56 0.005758662 ubox
33 60 0.009068479 ubox
33 65 0.008194560 ubox
34 43 0.179827822 ubox
34 44 0.007593954 ubox
34 45 0.006700304 ubox
34 46 0.013511124 ubox
34 50 0.745175861 ubox
34 53 0.028400988 ubox
34 55 0.006143988 ubox
34 59 0.006115428 ubox
34 64 0.005824491 ubox
35 44 0.013613643 ubox
35 45 0.013573283 ubox
35 49 0.749776608 ubox
35 54 0.006105297 ubox
36 48 0.749979178 ubox
36 52 0.010551407 ubox
36 63 0.003530544 ubox
37 47 0.748975849 ubox
37 51 0.010544017 ubox
37 62 0.003526499 ubox
39 45 0.172087413 ubox
39 46 0.716463141 ubox
39 50 0.010190558 ubox
39 61 0.003360305 ubox
40 44 0.169912744 ubox
40 45 0.718796521 ubox
40 49 0.010227924 ubox
40 60 0.003369570 ubox
47 57 0.005079660 ubox
48 56 0.005600603 ubox
51 57 0.031234832 ubox
51 63 0.023723866 ubox
52 56 0.033572495 ubox
52 62 0.024400929 ubox
56 63 0.235177344 ubox
57 62 0.234688430 ubox
57 66 0.124390985 ubox
58 65 0.129785910 ubox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
23 45 0.9500000 lbox
24 44 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
showpage
end
%%EOF
