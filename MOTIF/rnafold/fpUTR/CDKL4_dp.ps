%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CDKL4)
} def

/sequence { (\
GUGCAGCAUUGUACUGCAAGUCAAUCGAUACAAUAAUUUAAGUCACUUCAGCUAUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.047481169 ubox
1 9 0.026877816 ubox
1 14 0.483111425 ubox
1 17 0.011603749 ubox
1 21 0.013541790 ubox
1 25 0.005852571 ubox
1 29 0.004939195 ubox
1 31 0.059077152 ubox
1 34 0.008169300 ubox
1 37 0.004788957 ubox
1 46 0.066434928 ubox
1 52 0.034524129 ubox
1 55 0.020325418 ubox
2 6 0.044446425 ubox
2 8 0.029840883 ubox
2 13 0.499871208 ubox
2 16 0.010440629 ubox
2 18 0.744223442 ubox
2 20 0.005938715 ubox
2 23 0.013212370 ubox
2 24 0.005055391 ubox
2 27 0.003835321 ubox
2 28 0.003971038 ubox
2 30 0.052230802 ubox
2 32 0.007655764 ubox
2 33 0.007486224 ubox
2 36 0.004681347 ubox
2 40 0.004521204 ubox
2 45 0.064179348 ubox
2 50 0.007306616 ubox
2 51 0.028171657 ubox
2 54 0.019948571 ubox
2 56 0.017422948 ubox
3 7 0.030298825 ubox
3 12 0.504644135 ubox
3 15 0.003811750 ubox
3 17 0.833302382 ubox
3 21 0.014529722 ubox
3 22 0.014323702 ubox
3 26 0.005472501 ubox
3 29 0.035603827 ubox
3 31 0.008248758 ubox
3 39 0.004251662 ubox
3 43 0.010349682 ubox
3 44 0.058794508 ubox
3 49 0.007822146 ubox
3 52 0.040796819 ubox
3 53 0.006600940 ubox
3 55 0.020847445 ubox
4 11 0.505024047 ubox
4 16 0.833510146 ubox
4 20 0.018491075 ubox
4 42 0.045310413 ubox
4 51 0.040873339 ubox
5 10 0.454976525 ubox
5 15 0.832904519 ubox
5 38 0.007609354 ubox
5 39 0.010546568 ubox
5 47 0.008765324 ubox
5 48 0.003255707 ubox
5 53 0.060698370 ubox
6 12 0.038936537 ubox
6 14 0.829622857 ubox
6 17 0.085049876 ubox
6 21 0.017428166 ubox
6 37 0.007283381 ubox
6 38 0.012393548 ubox
6 43 0.022184615 ubox
6 46 0.008813350 ubox
6 52 0.063651449 ubox
7 11 0.069436585 ubox
7 16 0.085141896 ubox
7 20 0.018084696 ubox
7 42 0.023109407 ubox
7 51 0.063370139 ubox
8 15 0.077818945 ubox
8 21 0.003944623 ubox
8 25 0.054902936 ubox
8 29 0.004515039 ubox
8 34 0.049051530 ubox
8 37 0.021935297 ubox
8 55 0.008247544 ubox
9 19 0.030010850 ubox
9 20 0.003871200 ubox
9 24 0.058433885 ubox
9 28 0.004819394 ubox
9 33 0.051273221 ubox
9 36 0.022880852 ubox
9 41 0.008902919 ubox
9 54 0.008177366 ubox
10 18 0.033142554 ubox
10 19 0.003895766 ubox
10 23 0.059642646 ubox
10 27 0.004844279 ubox
10 32 0.052112538 ubox
10 35 0.022959196 ubox
10 40 0.008957156 ubox
10 45 0.018735575 ubox
10 50 0.005271878 ubox
10 54 0.008113678 ubox
10 56 0.129051906 ubox
11 17 0.033709815 ubox
11 22 0.059830611 ubox
11 26 0.004870560 ubox
11 31 0.052275868 ubox
11 34 0.022907474 ubox
11 37 0.003783137 ubox
11 39 0.008703704 ubox
11 44 0.019455350 ubox
11 46 0.039545914 ubox
11 49 0.005586839 ubox
11 52 0.011144297 ubox
11 53 0.008318108 ubox
11 55 0.159172702 ubox
12 16 0.031536728 ubox
12 30 0.052141845 ubox
12 33 0.021831522 ubox
12 35 0.013104194 ubox
12 36 0.003448163 ubox
12 45 0.039327111 ubox
12 51 0.006131379 ubox
12 54 0.161244100 ubox
12 56 0.005675263 ubox
13 21 0.058754957 ubox
13 29 0.047449388 ubox
13 34 0.013165401 ubox
13 43 0.044298866 ubox
13 53 0.160896411 ubox
13 55 0.007026668 ubox
14 20 0.059687579 ubox
14 42 0.044707354 ubox
14 51 0.227670959 ubox
15 19 0.053898112 ubox
15 23 0.025396397 ubox
15 27 0.036050136 ubox
15 30 0.006120384 ubox
15 32 0.097766723 ubox
15 35 0.017361769 ubox
15 40 0.004031599 ubox
15 41 0.044277843 ubox
15 45 0.009084216 ubox
15 50 0.305630240 ubox
15 54 0.033245305 ubox
15 56 0.007662901 ubox
16 22 0.027226462 ubox
16 26 0.036837858 ubox
16 29 0.004440311 ubox
16 31 0.105356894 ubox
16 34 0.017518752 ubox
16 39 0.004448630 ubox
16 43 0.011789535 ubox
16 44 0.010008183 ubox
16 49 0.316709914 ubox
16 52 0.266687177 ubox
16 53 0.008519974 ubox
16 55 0.008068139 ubox
17 42 0.014685237 ubox
17 51 0.266581790 ubox
18 38 0.016182568 ubox
18 39 0.029714017 ubox
18 48 0.404674022 ubox
19 37 0.018161603 ubox
19 38 0.033956686 ubox
19 39 0.011205924 ubox
19 47 0.445819249 ubox
19 48 0.011311410 ubox
19 53 0.295215246 ubox
20 29 0.565778292 ubox
20 31 0.116433060 ubox
20 34 0.013162874 ubox
20 37 0.033056732 ubox
20 38 0.010325311 ubox
20 46 0.448621602 ubox
20 47 0.006793064 ubox
20 52 0.305963826 ubox
20 55 0.009033958 ubox
21 28 0.581717387 ubox
21 30 0.111246401 ubox
21 33 0.012771520 ubox
21 36 0.031613965 ubox
21 42 0.003256564 ubox
21 45 0.440232125 ubox
21 51 0.300125559 ubox
21 54 0.008905981 ubox
22 27 0.584497055 ubox
23 38 0.021031948 ubox
23 39 0.019832785 ubox
23 48 0.121359273 ubox
24 34 0.018886810 ubox
24 37 0.023129941 ubox
24 38 0.020498551 ubox
24 43 0.076196642 ubox
24 47 0.124193091 ubox
24 55 0.005965870 ubox
25 33 0.019072868 ubox
25 36 0.022490642 ubox
25 42 0.077148444 ubox
25 54 0.005881178 ubox
27 38 0.205101802 ubox
27 39 0.108278457 ubox
27 44 0.559830557 ubox
27 48 0.011384750 ubox
27 49 0.083273714 ubox
28 34 0.024029812 ubox
28 37 0.214254655 ubox
28 38 0.110207180 ubox
28 43 0.559294255 ubox
28 47 0.012018718 ubox
28 48 0.082167113 ubox
28 55 0.016773335 ubox
29 33 0.022019594 ubox
29 35 0.029608562 ubox
29 36 0.208206878 ubox
29 40 0.048587351 ubox
29 42 0.550418004 ubox
29 54 0.017308371 ubox
29 56 0.004111911 ubox
30 34 0.030893064 ubox
30 39 0.060008796 ubox
30 43 0.092317767 ubox
30 53 0.015938841 ubox
30 55 0.004698961 ubox
31 42 0.099816509 ubox
32 38 0.051194665 ubox
32 39 0.442582210 ubox
32 48 0.008810103 ubox
33 37 0.043094235 ubox
33 38 0.432192885 ubox
33 43 0.040481603 ubox
33 47 0.008894740 ubox
33 55 0.109169648 ubox
34 40 0.036602699 ubox
34 42 0.041596182 ubox
34 54 0.113558857 ubox
34 56 0.011831196 ubox
35 39 0.034199882 ubox
35 48 0.010450153 ubox
35 53 0.111564114 ubox
35 55 0.012573755 ubox
36 43 0.032854733 ubox
36 47 0.010728787 ubox
36 55 0.035722155 ubox
37 42 0.032403967 ubox
37 51 0.094834866 ubox
37 54 0.036475793 ubox
38 50 0.099527452 ubox
38 51 0.030202117 ubox
39 50 0.036554949 ubox
39 54 0.059574225 ubox
39 56 0.053441678 ubox
40 48 0.150095532 ubox
40 53 0.045871407 ubox
40 55 0.060424254 ubox
41 47 0.163949945 ubox
41 48 0.026229426 ubox
41 53 0.370670037 ubox
42 46 0.161632843 ubox
42 47 0.022800855 ubox
42 52 0.386266116 ubox
42 55 0.015652228 ubox
43 51 0.379010963 ubox
43 54 0.015411056 ubox
2 18 0.9500000 lbox
3 17 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
