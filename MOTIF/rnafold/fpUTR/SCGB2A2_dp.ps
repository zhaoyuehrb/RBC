%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCGB2A2)
} def

/sequence { (\
UCCACAGCGGCUUCCUUGAUCCUUGCCACCCGCGACUGAACACCGACAGCAGCAGCCUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003279074 ubox
1 35 0.006952713 ubox
1 39 0.025777551 ubox
2 9 0.009075908 ubox
2 10 0.022771100 ubox
2 34 0.007705246 ubox
2 38 0.027275473 ubox
3 9 0.024543715 ubox
3 18 0.005737673 ubox
3 25 0.005459396 ubox
3 38 0.026486079 ubox
4 17 0.005542808 ubox
4 24 0.005384049 ubox
4 37 0.025817744 ubox
5 18 0.029773253 ubox
5 25 0.045043731 ubox
5 38 0.019064980 ubox
6 16 0.004944315 ubox
6 17 0.029819032 ubox
6 23 0.005689735 ubox
6 24 0.045081895 ubox
6 37 0.019140107 ubox
6 58 0.052198431 ubox
7 15 0.005138734 ubox
7 16 0.029096531 ubox
7 22 0.006244630 ubox
7 23 0.043892899 ubox
7 26 0.067471681 ubox
7 33 0.056684567 ubox
7 36 0.018346449 ubox
7 50 0.015218208 ubox
7 53 0.786285310 ubox
7 56 0.262152185 ubox
7 57 0.042398475 ubox
8 18 0.006222114 ubox
8 25 0.067560091 ubox
8 32 0.056830827 ubox
8 34 0.009135393 ubox
8 45 0.018010218 ubox
8 49 0.015195687 ubox
8 52 0.784145065 ubox
8 55 0.264350907 ubox
9 15 0.035388557 ubox
9 16 0.005009370 ubox
9 17 0.005714227 ubox
9 21 0.010152378 ubox
9 22 0.060589085 ubox
9 23 0.034461049 ubox
9 24 0.049267504 ubox
9 27 0.484432802 ubox
9 30 0.009833940 ubox
9 31 0.052350528 ubox
9 33 0.006346629 ubox
9 44 0.018478008 ubox
9 57 0.320641709 ubox
9 59 0.003586361 ubox
9 62 0.004299882 ubox
10 14 0.034848091 ubox
10 15 0.005473198 ubox
10 16 0.004692636 ubox
10 20 0.008748877 ubox
10 21 0.060717448 ubox
10 22 0.048352743 ubox
10 23 0.029413853 ubox
10 26 0.485094951 ubox
10 29 0.010278955 ubox
10 30 0.050665437 ubox
10 33 0.014980954 ubox
10 43 0.018466150 ubox
10 50 0.787733110 ubox
10 53 0.147235338 ubox
10 56 0.321083954 ubox
10 61 0.004253931 ubox
11 25 0.485048441 ubox
11 32 0.015167839 ubox
11 49 0.790694786 ubox
11 52 0.147758922 ubox
11 55 0.321024371 ubox
12 19 0.043712666 ubox
12 40 0.006548529 ubox
12 46 0.011755324 ubox
12 48 0.778637753 ubox
12 49 0.005249366 ubox
12 51 0.145204939 ubox
12 52 0.006864327 ubox
12 54 0.310259452 ubox
13 18 0.040518418 ubox
13 19 0.098159955 ubox
13 39 0.007555337 ubox
13 45 0.016683360 ubox
13 46 0.781206473 ubox
13 48 0.009082030 ubox
13 51 0.016909516 ubox
13 54 0.018515935 ubox
14 18 0.100963541 ubox
14 38 0.007564180 ubox
14 45 0.787168931 ubox
15 49 0.049532335 ubox
15 52 0.066840484 ubox
16 35 0.003720320 ubox
16 39 0.003690253 ubox
16 40 0.007840944 ubox
16 46 0.043235272 ubox
16 48 0.048276197 ubox
16 49 0.040438717 ubox
16 51 0.059482396 ubox
16 52 0.091153835 ubox
17 25 0.015879199 ubox
17 28 0.130812217 ubox
17 34 0.003941201 ubox
17 38 0.003816636 ubox
17 39 0.008300973 ubox
17 42 0.778959005 ubox
17 45 0.043172651 ubox
17 48 0.046570599 ubox
17 51 0.098453363 ubox
17 54 0.006815326 ubox
17 60 0.013808758 ubox
18 24 0.027029507 ubox
18 27 0.147240284 ubox
18 31 0.025595660 ubox
18 33 0.003959301 ubox
18 41 0.791421141 ubox
18 44 0.042319944 ubox
18 47 0.047886400 ubox
18 50 0.101843711 ubox
18 53 0.009344138 ubox
18 59 0.015519238 ubox
19 23 0.023813726 ubox
19 58 0.015339108 ubox
20 35 0.009117766 ubox
20 39 0.781544325 ubox
20 46 0.047291362 ubox
21 34 0.009612596 ubox
21 38 0.788215182 ubox
21 45 0.047498620 ubox
22 49 0.004018535 ubox
22 52 0.004806037 ubox
22 55 0.013381123 ubox
23 35 0.787466721 ubox
23 39 0.003720147 ubox
23 46 0.008625432 ubox
23 48 0.003196108 ubox
23 51 0.003499431 ubox
23 52 0.010501166 ubox
23 54 0.012123744 ubox
23 55 0.007109325 ubox
24 32 0.004707078 ubox
24 34 0.817197316 ubox
24 38 0.003226150 ubox
24 42 0.026241097 ubox
24 45 0.008868219 ubox
24 51 0.012765435 ubox
24 54 0.013497234 ubox
24 60 0.007162085 ubox
25 31 0.031599245 ubox
25 33 0.826431306 ubox
25 41 0.026551261 ubox
25 44 0.008790191 ubox
25 50 0.013594086 ubox
25 53 0.017145677 ubox
25 56 0.013080312 ubox
25 59 0.008040618 ubox
26 32 0.825461332 ubox
26 49 0.013532948 ubox
26 52 0.017100186 ubox
26 55 0.013136562 ubox
27 38 0.023650727 ubox
28 37 0.023126910 ubox
31 38 0.009636379 ubox
31 45 0.007967733 ubox
32 37 0.006620508 ubox
32 44 0.007817302 ubox
32 50 0.022271189 ubox
32 53 0.536424512 ubox
32 56 0.147153426 ubox
33 45 0.017786494 ubox
33 49 0.022168466 ubox
33 52 0.536936812 ubox
33 55 0.147437549 ubox
34 44 0.017953888 ubox
34 59 0.009731158 ubox
35 58 0.009412024 ubox
36 49 0.555599511 ubox
36 52 0.151647216 ubox
36 55 0.013968486 ubox
37 45 0.020884783 ubox
37 48 0.555987943 ubox
37 51 0.151714069 ubox
37 54 0.014129707 ubox
37 60 0.004165279 ubox
38 44 0.026931298 ubox
38 47 0.555673341 ubox
38 50 0.151384728 ubox
38 53 0.014171271 ubox
38 59 0.004701021 ubox
39 58 0.004532181 ubox
45 59 0.031469570 ubox
46 58 0.030875424 ubox
48 58 0.006853211 ubox
49 56 0.048757736 ubox
49 57 0.005628319 ubox
50 55 0.049112699 ubox
51 58 0.009525108 ubox
52 57 0.010025758 ubox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
10 50 0.9500000 lbox
11 49 0.9500000 lbox
12 48 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
showpage
end
%%EOF
