%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TP53TG5)
} def

/sequence { (\
UGCUGGCUGAACUGAGAGGAACAGGGUUGGUGCCUGGCACUGGUGUUGCUCCAUUCAUCUCUGAGGUCUCACAGCCCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 79 0.124537686 ubox
2 75 0.057623693 ubox
2 78 0.137772119 ubox
2 81 0.952510292 ubox
3 74 0.057822277 ubox
3 80 0.963493762 ubox
4 73 0.057804047 ubox
4 79 0.919941151 ubox
5 59 0.008248961 ubox
5 60 0.013231311 ubox
5 68 0.004868468 ubox
5 72 0.057622562 ubox
5 76 0.797100521 ubox
5 77 0.167442445 ubox
5 78 0.573031775 ubox
6 58 0.008204022 ubox
6 59 0.014644410 ubox
6 67 0.008261822 ubox
6 75 0.900015267 ubox
6 76 0.166685073 ubox
6 77 0.395711681 ubox
6 81 0.014165115 ubox
7 16 0.005265623 ubox
7 65 0.005191407 ubox
7 66 0.009108765 ubox
7 74 0.985999568 ubox
7 80 0.014328306 ubox
8 15 0.005284611 ubox
8 57 0.038241930 ubox
8 63 0.004217702 ubox
8 64 0.005409396 ubox
8 65 0.008959855 ubox
8 71 0.027501430 ubox
8 73 0.986995630 ubox
8 79 0.014308671 ubox
9 56 0.042037922 ubox
9 59 0.019769605 ubox
9 61 0.053996002 ubox
9 68 0.064299791 ubox
9 70 0.035293076 ubox
9 72 0.984846305 ubox
9 78 0.014227006 ubox
10 55 0.042075666 ubox
10 58 0.019486023 ubox
10 60 0.054858912 ubox
10 67 0.056210310 ubox
10 69 0.037899674 ubox
11 54 0.041130055 ubox
11 67 0.057694642 ubox
12 65 0.102313852 ubox
12 66 0.058535430 ubox
12 74 0.067663988 ubox
13 53 0.045349945 ubox
13 57 0.092743668 ubox
13 63 0.003285163 ubox
13 64 0.102363377 ubox
13 65 0.054683025 ubox
13 71 0.969784277 ubox
13 73 0.067491064 ubox
14 52 0.046661886 ubox
14 56 0.101944791 ubox
14 59 0.005564676 ubox
14 61 0.064936351 ubox
14 68 0.009117768 ubox
14 70 0.983663574 ubox
14 72 0.067014170 ubox
15 55 0.101859269 ubox
15 58 0.005535061 ubox
15 60 0.065056176 ubox
15 62 0.100975089 ubox
15 67 0.008673757 ubox
15 69 0.983599463 ubox
16 51 0.049585057 ubox
16 54 0.099042509 ubox
16 55 0.003406216 ubox
16 56 0.006495850 ubox
16 59 0.065064826 ubox
16 61 0.101334775 ubox
16 68 0.983609916 ubox
16 70 0.068254503 ubox
17 50 0.050639429 ubox
17 54 0.009403399 ubox
17 55 0.006446691 ubox
17 58 0.063990035 ubox
17 60 0.101032843 ubox
17 67 0.974187634 ubox
17 69 0.068373273 ubox
18 40 0.004102654 ubox
18 49 0.051593694 ubox
18 50 0.003714135 ubox
18 52 0.318314040 ubox
18 56 0.006287935 ubox
18 59 0.087079595 ubox
18 60 0.007347656 ubox
18 62 0.023584606 ubox
18 68 0.067978616 ubox
18 69 0.006601837 ubox
19 49 0.004282753 ubox
19 51 0.319849401 ubox
19 55 0.006332003 ubox
19 56 0.071424245 ubox
19 58 0.044864590 ubox
19 59 0.011169871 ubox
19 61 0.023757754 ubox
19 67 0.061186176 ubox
19 68 0.011332694 ubox
20 47 0.051566025 ubox
20 50 0.314729048 ubox
20 54 0.006364561 ubox
20 55 0.073140414 ubox
20 58 0.013494957 ubox
20 60 0.023183275 ubox
20 67 0.014019733 ubox
21 46 0.052548381 ubox
21 54 0.071610555 ubox
22 36 0.022769299 ubox
22 45 0.052577567 ubox
22 48 0.319945823 ubox
22 63 0.937294143 ubox
22 66 0.003363242 ubox
23 35 0.022864575 ubox
23 44 0.051863912 ubox
23 47 0.320111072 ubox
23 55 0.003347751 ubox
23 60 0.012450327 ubox
23 62 0.940166242 ubox
24 34 0.022584918 ubox
24 35 0.009615068 ubox
24 41 0.003302032 ubox
24 46 0.317586757 ubox
24 47 0.003451961 ubox
24 51 0.069597041 ubox
24 52 0.026036587 ubox
24 56 0.029758781 ubox
24 59 0.013179256 ubox
24 60 0.037614729 ubox
24 61 0.940279686 ubox
24 62 0.007298914 ubox
25 33 0.022264023 ubox
25 34 0.011928634 ubox
25 40 0.003480775 ubox
25 41 0.003549859 ubox
25 46 0.004622832 ubox
25 50 0.069815302 ubox
25 51 0.026013379 ubox
25 52 0.015283411 ubox
25 55 0.030094159 ubox
25 56 0.048116302 ubox
25 58 0.012170494 ubox
25 59 0.199561236 ubox
25 60 0.918043515 ubox
25 61 0.007891495 ubox
26 33 0.012527929 ubox
26 38 0.004631822 ubox
26 40 0.003516431 ubox
26 44 0.303378939 ubox
26 49 0.072599057 ubox
26 50 0.015999692 ubox
26 51 0.015264691 ubox
26 54 0.029787025 ubox
26 55 0.047195074 ubox
26 58 0.199583188 ubox
26 59 0.915614058 ubox
26 60 0.006228386 ubox
26 61 0.003238111 ubox
27 32 0.012866433 ubox
27 37 0.004645654 ubox
27 43 0.293520459 ubox
27 48 0.069599203 ubox
27 53 0.023890485 ubox
27 57 0.239534957 ubox
28 36 0.004582663 ubox
28 42 0.317726935 ubox
28 45 0.006336662 ubox
28 48 0.014888658 ubox
28 53 0.215903642 ubox
28 57 0.851583183 ubox
29 35 0.004653547 ubox
29 38 0.003301101 ubox
29 41 0.334866235 ubox
29 47 0.018428595 ubox
29 50 0.008836888 ubox
29 51 0.003834765 ubox
29 52 0.228617181 ubox
29 55 0.252894646 ubox
29 56 0.861804095 ubox
29 59 0.026216028 ubox
30 34 0.004727403 ubox
30 38 0.006276693 ubox
30 40 0.369963964 ubox
30 46 0.023917399 ubox
30 49 0.011783567 ubox
30 50 0.003816695 ubox
30 51 0.229048409 ubox
30 54 0.600241039 ubox
30 55 0.649775056 ubox
30 58 0.047833595 ubox
31 37 0.006271432 ubox
31 39 0.370352477 ubox
31 45 0.038035434 ubox
31 48 0.011727530 ubox
31 53 0.805189698 ubox
31 57 0.048307960 ubox
32 38 0.370552391 ubox
32 44 0.054023512 ubox
32 46 0.003803695 ubox
32 49 0.226149124 ubox
32 52 0.812407965 ubox
32 56 0.048345854 ubox
33 37 0.367858963 ubox
33 43 0.055693782 ubox
33 45 0.004643734 ubox
33 48 0.225983488 ubox
34 42 0.055805994 ubox
34 43 0.014544948 ubox
35 42 0.014172916 ubox
35 45 0.004097592 ubox
35 48 0.040041647 ubox
35 53 0.045476913 ubox
36 41 0.009292216 ubox
36 44 0.004778086 ubox
36 47 0.145961011 ubox
36 50 0.875330726 ubox
36 51 0.098477406 ubox
36 52 0.045030289 ubox
37 44 0.141466162 ubox
37 46 0.186048202 ubox
37 49 0.895356976 ubox
37 50 0.011866720 ubox
37 51 0.037381674 ubox
38 43 0.141756499 ubox
38 45 0.186631905 ubox
38 48 0.895651503 ubox
38 63 0.004228928 ubox
39 44 0.155346583 ubox
39 46 0.581795587 ubox
39 47 0.667427111 ubox
39 62 0.004210329 ubox
40 45 0.823883603 ubox
41 53 0.131833691 ubox
41 57 0.007095422 ubox
42 47 0.005897345 ubox
42 50 0.029968957 ubox
42 51 0.008455933 ubox
42 52 0.151325546 ubox
42 55 0.038831028 ubox
42 56 0.013499021 ubox
42 59 0.017430005 ubox
43 49 0.031960704 ubox
43 50 0.005890783 ubox
43 51 0.151190267 ubox
43 54 0.052030842 ubox
43 55 0.010163624 ubox
43 58 0.023509258 ubox
44 48 0.030065333 ubox
44 53 0.053924947 ubox
44 57 0.024225037 ubox
45 52 0.054144062 ubox
45 54 0.003626302 ubox
45 56 0.024438218 ubox
46 53 0.003761616 ubox
47 53 0.014565819 ubox
47 57 0.003647950 ubox
48 52 0.014854016 ubox
48 56 0.004092624 ubox
49 65 0.004991367 ubox
50 64 0.005055970 ubox
51 63 0.004714397 ubox
51 66 0.011324242 ubox
52 63 0.005773004 ubox
52 65 0.011480338 ubox
53 62 0.006909462 ubox
53 67 0.015948569 ubox
54 64 0.009008330 ubox
54 65 0.200823816 ubox
54 66 0.015958489 ubox
55 63 0.006026746 ubox
55 64 0.264087970 ubox
55 65 0.008332212 ubox
55 66 0.031299055 ubox
56 63 0.269952252 ubox
56 65 0.042430425 ubox
57 62 0.234892512 ubox
57 67 0.044497441 ubox
58 64 0.032942876 ubox
58 66 0.058528816 ubox
59 63 0.034049226 ubox
59 65 0.068238192 ubox
59 66 0.027006925 ubox
59 74 0.012473752 ubox
60 64 0.061547992 ubox
60 65 0.025123952 ubox
60 66 0.011424691 ubox
60 73 0.012457237 ubox
61 65 0.014350415 ubox
61 74 0.014514988 ubox
61 80 0.020238221 ubox
62 71 0.066927488 ubox
62 73 0.015074973 ubox
62 79 0.020760084 ubox
63 70 0.075239073 ubox
63 72 0.015221469 ubox
63 78 0.020867630 ubox
64 69 0.070406619 ubox
65 76 0.071368102 ubox
65 77 0.006114950 ubox
66 72 0.004805347 ubox
66 75 0.071580438 ubox
66 76 0.006256339 ubox
67 71 0.004482975 ubox
67 74 0.066148866 ubox
68 74 0.022551771 ubox
69 73 0.020517893 ubox
2 81 0.9500000 lbox
3 80 0.9500000 lbox
4 79 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 72 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
15 69 0.9500000 lbox
16 68 0.9500000 lbox
17 67 0.9500000 lbox
22 63 0.9500000 lbox
23 62 0.9500000 lbox
24 61 0.9500000 lbox
25 60 0.9500000 lbox
26 59 0.9500000 lbox
28 57 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
