%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ICAM5)
} def

/sequence { (\
CCGUCCUCUAGCCCAGCUCCUCGGCUCGCGCUCUCCUCGCCUCCUGUGCUUUCCCCGCCGCGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.077920354 ubox
1 63 0.327145898 ubox
2 23 0.090646583 ubox
2 28 0.080419803 ubox
2 30 0.274512507 ubox
2 39 0.042756081 ubox
2 46 0.003352419 ubox
2 57 0.008137610 ubox
2 60 0.008000437 ubox
2 62 0.331699688 ubox
2 65 0.237786600 ubox
3 12 0.077882312 ubox
3 17 0.023672525 ubox
3 22 0.090725075 ubox
3 25 0.120483058 ubox
3 27 0.087472169 ubox
3 29 0.284640617 ubox
3 31 0.145835552 ubox
3 38 0.056879905 ubox
3 40 0.019091809 ubox
3 49 0.006995539 ubox
3 56 0.010347583 ubox
3 58 0.007618236 ubox
3 59 0.008076700 ubox
3 61 0.330881743 ubox
3 64 0.253784708 ubox
4 11 0.075660594 ubox
4 16 0.022854731 ubox
4 24 0.115580516 ubox
4 28 0.280066690 ubox
4 30 0.143320827 ubox
4 39 0.018756865 ubox
4 48 0.006599036 ubox
4 57 0.007896867 ubox
4 60 0.315613082 ubox
4 63 0.222355556 ubox
5 23 0.115768387 ubox
5 24 0.069049495 ubox
5 62 0.207251962 ubox
5 63 0.112454534 ubox
6 16 0.017454459 ubox
6 23 0.070282367 ubox
6 24 0.019325570 ubox
6 62 0.112197389 ubox
6 63 0.006628876 ubox
7 15 0.017265929 ubox
7 23 0.018425014 ubox
7 24 0.007014012 ubox
7 62 0.005144593 ubox
7 63 0.004973259 ubox
8 16 0.031237426 ubox
8 23 0.012924927 ubox
8 24 0.015150232 ubox
8 62 0.007486954 ubox
8 63 0.006422752 ubox
9 15 0.030818742 ubox
9 23 0.015232265 ubox
9 62 0.005394064 ubox
10 18 0.253257451 ubox
10 21 0.019686893 ubox
10 26 0.705318273 ubox
10 32 0.305720010 ubox
10 34 0.008527732 ubox
10 37 0.007184487 ubox
10 45 0.003319683 ubox
10 50 0.067974903 ubox
10 51 0.005154120 ubox
10 52 0.003559335 ubox
11 17 0.269438617 ubox
11 20 0.020202713 ubox
11 25 0.759089662 ubox
11 29 0.224797054 ubox
11 31 0.330027706 ubox
11 33 0.007713828 ubox
11 36 0.007457470 ubox
11 44 0.003265853 ubox
11 49 0.071501018 ubox
11 58 0.032588744 ubox
11 61 0.031025263 ubox
11 64 0.300814676 ubox
12 16 0.267549318 ubox
12 24 0.757732151 ubox
12 28 0.224811231 ubox
12 30 0.329588883 ubox
12 48 0.071438659 ubox
12 57 0.032556712 ubox
12 60 0.030965805 ubox
12 63 0.298680063 ubox
13 23 0.755470235 ubox
13 24 0.059750367 ubox
13 62 0.294409338 ubox
13 63 0.048844928 ubox
14 23 0.077926846 ubox
14 46 0.070057290 ubox
14 62 0.061685162 ubox
15 21 0.668079992 ubox
15 26 0.411792814 ubox
15 32 0.013620680 ubox
15 34 0.003260388 ubox
15 37 0.004298235 ubox
15 45 0.069093890 ubox
15 50 0.039063461 ubox
16 20 0.661057889 ubox
16 25 0.429837426 ubox
16 29 0.016395819 ubox
16 31 0.014402959 ubox
16 33 0.003437651 ubox
16 36 0.004554084 ubox
16 40 0.015741481 ubox
16 44 0.066529510 ubox
16 47 0.009681135 ubox
16 49 0.040983726 ubox
16 58 0.073749025 ubox
16 61 0.266087270 ubox
16 64 0.195347535 ubox
17 24 0.429736221 ubox
17 28 0.016395664 ubox
17 30 0.014358535 ubox
17 39 0.017239120 ubox
17 46 0.009797825 ubox
17 48 0.040938121 ubox
17 57 0.073377976 ubox
17 60 0.265999096 ubox
17 63 0.192320886 ubox
18 23 0.389918050 ubox
18 24 0.007402103 ubox
18 62 0.182144451 ubox
18 63 0.007093745 ubox
19 23 0.051998805 ubox
19 62 0.039795486 ubox
19 63 0.253316988 ubox
20 62 0.259454641 ubox
20 63 0.017698402 ubox
21 62 0.017885246 ubox
22 28 0.004983327 ubox
22 30 0.009242298 ubox
22 39 0.016243737 ubox
22 46 0.022179906 ubox
22 57 0.200152695 ubox
22 60 0.330121054 ubox
22 62 0.003712150 ubox
22 65 0.011186319 ubox
23 27 0.005282036 ubox
23 29 0.010053383 ubox
23 32 0.045375896 ubox
23 33 0.016104042 ubox
23 36 0.008697447 ubox
23 38 0.015605209 ubox
23 41 0.072161671 ubox
23 42 0.007622219 ubox
23 43 0.012231175 ubox
23 44 0.026405039 ubox
23 45 0.022741340 ubox
23 50 0.020940749 ubox
23 51 0.003580829 ubox
23 52 0.004268692 ubox
23 53 0.012348610 ubox
23 54 0.179500244 ubox
23 55 0.072063502 ubox
23 56 0.201339448 ubox
23 59 0.335481079 ubox
23 61 0.003350250 ubox
23 64 0.009237177 ubox
24 31 0.052505509 ubox
24 35 0.008410775 ubox
24 36 0.004463150 ubox
24 37 0.010203414 ubox
24 40 0.072265876 ubox
24 41 0.008104301 ubox
24 42 0.011736321 ubox
24 43 0.026649364 ubox
24 44 0.022761518 ubox
24 49 0.021891625 ubox
24 50 0.003483879 ubox
24 51 0.004802030 ubox
24 52 0.011263932 ubox
24 53 0.179708822 ubox
24 54 0.073948925 ubox
24 55 0.200183682 ubox
24 58 0.335464633 ubox
24 61 0.013398411 ubox
24 64 0.091904471 ubox
25 30 0.052658651 ubox
25 39 0.072139056 ubox
25 48 0.021881847 ubox
25 57 0.334915403 ubox
25 60 0.013526686 ubox
25 63 0.092553349 ubox
26 62 0.023745452 ubox
26 63 0.091423768 ubox
27 39 0.007198469 ubox
27 46 0.019739374 ubox
27 48 0.030961414 ubox
27 57 0.007214473 ubox
27 60 0.038642959 ubox
27 62 0.228932465 ubox
27 65 0.028595763 ubox
28 38 0.009687738 ubox
28 40 0.228776375 ubox
28 45 0.010477324 ubox
28 47 0.032152396 ubox
28 49 0.672690651 ubox
28 56 0.008915776 ubox
28 58 0.162548270 ubox
28 59 0.037174683 ubox
28 61 0.246258718 ubox
28 64 0.030952722 ubox
29 39 0.229247145 ubox
29 46 0.032229564 ubox
29 48 0.673587413 ubox
29 57 0.164430048 ubox
29 60 0.246248257 ubox
29 62 0.016011630 ubox
29 63 0.027245400 ubox
29 65 0.021874395 ubox
30 38 0.223475197 ubox
30 40 0.086316050 ubox
30 45 0.019054571 ubox
30 47 0.673114919 ubox
30 49 0.042693469 ubox
30 56 0.163189318 ubox
30 58 0.154985449 ubox
30 59 0.192608019 ubox
30 61 0.021651780 ubox
30 64 0.024295434 ubox
31 39 0.086605897 ubox
31 46 0.673193038 ubox
31 48 0.042826638 ubox
31 57 0.216027743 ubox
31 60 0.021628606 ubox
31 63 0.023879364 ubox
32 62 0.016396865 ubox
33 62 0.004264994 ubox
35 63 0.009554077 ubox
36 62 0.009836258 ubox
36 63 0.007838758 ubox
37 63 0.025835732 ubox
38 46 0.015155745 ubox
38 48 0.211519207 ubox
38 57 0.006469550 ubox
38 60 0.010185725 ubox
38 62 0.039963873 ubox
38 65 0.557763423 ubox
39 45 0.013872825 ubox
39 47 0.214677096 ubox
39 49 0.193764061 ubox
39 56 0.006384847 ubox
39 58 0.023646342 ubox
39 59 0.009457579 ubox
39 61 0.041970945 ubox
39 64 0.611428932 ubox
40 46 0.214566937 ubox
40 48 0.193757658 ubox
40 57 0.023938539 ubox
40 60 0.041798457 ubox
40 63 0.611174713 ubox
41 62 0.609450311 ubox
41 63 0.011416728 ubox
42 62 0.012276968 ubox
42 63 0.010570777 ubox
43 62 0.022761275 ubox
43 63 0.054532094 ubox
44 62 0.056302221 ubox
44 63 0.154407329 ubox
45 57 0.018347808 ubox
45 60 0.479377966 ubox
45 62 0.161202427 ubox
45 65 0.007436112 ubox
46 56 0.021535259 ubox
46 58 0.262575158 ubox
46 59 0.503075943 ubox
46 61 0.303146451 ubox
46 64 0.013369254 ubox
47 57 0.264438799 ubox
47 60 0.301880154 ubox
47 62 0.016020372 ubox
47 63 0.009829184 ubox
47 65 0.009332575 ubox
48 56 0.261203857 ubox
48 58 0.554135464 ubox
48 59 0.225457390 ubox
48 61 0.068193333 ubox
48 64 0.016010596 ubox
49 57 0.588893251 ubox
49 60 0.068202366 ubox
49 63 0.015948656 ubox
50 62 0.015057821 ubox
52 63 0.005613378 ubox
53 62 0.008427248 ubox
53 63 0.020602997 ubox
54 62 0.020931829 ubox
54 63 0.039936224 ubox
55 62 0.040103490 ubox
55 63 0.120545929 ubox
56 62 0.122432321 ubox
56 65 0.372127779 ubox
57 61 0.115621325 ubox
57 64 0.397907466 ubox
58 63 0.397714164 ubox
59 65 0.006756957 ubox
60 64 0.006769834 ubox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
