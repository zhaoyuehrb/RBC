%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LIAS)
} def

/sequence { (\
GCUUGUCAUAAAUGGAGCGACGUAAUUUCGACCUGUCCUUUCCCGGGAGUUAGCGAUCCCUCAACCCCUGCACUGCGCUAGUCCUAAAGAGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.883315593 ubox
1 23 0.084629514 ubox
1 36 0.121819192 ubox
1 50 0.003598421 ubox
1 54 0.004529907 ubox
1 71 0.008215491 ubox
1 76 0.077233910 ubox
1 78 0.019055456 ubox
1 82 0.004120096 ubox
2 15 0.016574124 ubox
2 17 0.884634720 ubox
2 22 0.087480438 ubox
2 35 0.194337816 ubox
2 49 0.004316428 ubox
2 53 0.004532300 ubox
2 70 0.008204720 ubox
2 75 0.077260714 ubox
2 77 0.019040175 ubox
2 81 0.006520466 ubox
2 89 0.005047085 ubox
2 91 0.005100257 ubox
2 92 0.005351141 ubox
3 11 0.023188897 ubox
3 12 0.033623740 ubox
3 14 0.016412777 ubox
3 15 0.044307322 ubox
3 16 0.876711194 ubox
3 17 0.009074317 ubox
3 20 0.097149785 ubox
3 25 0.008939949 ubox
3 31 0.041260595 ubox
3 48 0.004269356 ubox
3 52 0.004350091 ubox
3 80 0.006112723 ubox
3 88 0.005025587 ubox
3 90 0.005048034 ubox
3 91 0.005262988 ubox
3 93 0.015829321 ubox
4 10 0.026488341 ubox
4 11 0.044356121 ubox
4 14 0.093008792 ubox
4 15 0.817892665 ubox
4 16 0.040318283 ubox
4 19 0.100352716 ubox
4 22 0.102888932 ubox
4 24 0.007047813 ubox
4 30 0.045021411 ubox
4 35 0.007219777 ubox
4 47 0.004086141 ubox
4 72 0.062949461 ubox
4 75 0.005969686 ubox
4 87 0.004746088 ubox
4 89 0.004597544 ubox
4 90 0.004640892 ubox
4 92 0.016546862 ubox
4 93 0.003571698 ubox
5 9 0.023964152 ubox
5 13 0.126854785 ubox
5 18 0.101578936 ubox
5 21 0.150251938 ubox
5 29 0.046736007 ubox
5 32 0.263114694 ubox
5 71 0.063958976 ubox
5 73 0.040688356 ubox
5 76 0.003993186 ubox
5 78 0.005835366 ubox
6 12 0.149698554 ubox
6 15 0.264512833 ubox
6 16 0.067742112 ubox
6 17 0.080016208 ubox
6 20 0.150450794 ubox
6 31 0.263745601 ubox
6 48 0.003495786 ubox
6 70 0.045549037 ubox
6 72 0.040499507 ubox
6 75 0.003405063 ubox
6 77 0.005578378 ubox
6 90 0.016911644 ubox
6 93 0.003700338 ubox
7 14 0.436733170 ubox
7 15 0.079690708 ubox
7 19 0.150341874 ubox
7 30 0.263311380 ubox
7 35 0.018937127 ubox
7 47 0.003558975 ubox
7 70 0.060987599 ubox
7 75 0.003948315 ubox
7 89 0.016953187 ubox
7 92 0.003709041 ubox
8 13 0.365264708 ubox
8 26 0.043625458 ubox
8 34 0.018186650 ubox
8 36 0.009619526 ubox
8 69 0.059154950 ubox
8 74 0.003641719 ubox
9 24 0.008321413 ubox
9 25 0.042319856 ubox
9 35 0.012784816 ubox
10 23 0.006641411 ubox
10 27 0.174312020 ubox
10 28 0.097652836 ubox
10 34 0.011857654 ubox
10 41 0.006430736 ubox
11 26 0.159465738 ubox
11 27 0.104021501 ubox
11 28 0.017839651 ubox
11 40 0.007648997 ubox
11 41 0.007319410 ubox
12 23 0.231258945 ubox
12 26 0.100000912 ubox
12 27 0.014211493 ubox
12 36 0.142036710 ubox
12 39 0.007610341 ubox
12 40 0.007825184 ubox
13 19 0.003194586 ubox
13 22 0.241775870 ubox
13 24 0.056965811 ubox
13 25 0.095906009 ubox
13 30 0.029584344 ubox
13 35 0.184079876 ubox
13 63 0.011320633 ubox
14 18 0.005579646 ubox
14 21 0.244935702 ubox
14 23 0.060272609 ubox
14 28 0.004786007 ubox
14 29 0.055599443 ubox
14 33 0.131728446 ubox
14 34 0.254152619 ubox
14 38 0.024536821 ubox
14 41 0.016450898 ubox
14 42 0.013201511 ubox
14 43 0.032396794 ubox
14 44 0.010207303 ubox
14 59 0.003180117 ubox
14 62 0.009201926 ubox
14 79 0.003322390 ubox
15 27 0.006043916 ubox
15 28 0.055600969 ubox
15 29 0.020770951 ubox
15 32 0.131774549 ubox
15 33 0.261182734 ubox
15 37 0.024636394 ubox
15 40 0.023733888 ubox
15 41 0.013069610 ubox
15 42 0.032606577 ubox
15 43 0.009714353 ubox
15 58 0.003221559 ubox
15 61 0.004359458 ubox
15 62 0.075829381 ubox
15 78 0.003330260 ubox
16 26 0.006396539 ubox
16 27 0.055310031 ubox
16 28 0.020548195 ubox
16 34 0.031474634 ubox
16 36 0.023113277 ubox
16 39 0.027465399 ubox
16 40 0.014047090 ubox
16 41 0.031250166 ubox
16 61 0.076251328 ubox
16 79 0.005449831 ubox
17 23 0.030896057 ubox
17 26 0.051289066 ubox
17 27 0.016702688 ubox
17 33 0.032153486 ubox
17 36 0.018323348 ubox
17 38 0.029287711 ubox
17 39 0.014174501 ubox
17 40 0.026553349 ubox
17 60 0.076247001 ubox
17 76 0.003342115 ubox
17 78 0.005760482 ubox
18 22 0.031675386 ubox
18 30 0.302414276 ubox
18 35 0.026324881 ubox
18 75 0.003345584 ubox
18 77 0.005759618 ubox
19 27 0.024191258 ubox
19 28 0.034711550 ubox
19 29 0.337523299 ubox
19 34 0.035633755 ubox
19 37 0.102542255 ubox
19 58 0.076954713 ubox
19 76 0.005328918 ubox
20 26 0.024531008 ubox
20 27 0.041850210 ubox
20 28 0.322874407 ubox
20 36 0.110383219 ubox
20 57 0.076873237 ubox
21 30 0.530026907 ubox
21 35 0.117033762 ubox
21 55 0.076842795 ubox
22 29 0.536602961 ubox
22 32 0.121013080 ubox
22 34 0.090488932 ubox
22 54 0.076722451 ubox
23 31 0.119393998 ubox
23 35 0.014748388 ubox
23 52 0.051930829 ubox
23 53 0.056604933 ubox
24 34 0.016100771 ubox
24 51 0.073128428 ubox
25 36 0.021783143 ubox
25 50 0.073998885 ubox
26 35 0.028189553 ubox
26 48 0.012583045 ubox
26 49 0.073511135 ubox
26 94 0.004711457 ubox
27 47 0.013290305 ubox
27 48 0.071699960 ubox
27 49 0.011911324 ubox
27 52 0.004545217 ubox
27 93 0.003403198 ubox
27 94 0.005036678 ubox
28 46 0.016072265 ubox
28 47 0.052268487 ubox
28 48 0.012871582 ubox
28 56 0.016721086 ubox
28 93 0.004280413 ubox
29 35 0.051525201 ubox
29 45 0.018467623 ubox
29 46 0.049853607 ubox
29 47 0.009998631 ubox
29 55 0.017474814 ubox
29 92 0.003269173 ubox
30 34 0.032703326 ubox
30 37 0.010369892 ubox
30 42 0.007626558 ubox
30 44 0.020274665 ubox
30 51 0.005662672 ubox
30 54 0.017438205 ubox
31 36 0.010172242 ubox
31 40 0.003217188 ubox
31 41 0.007214501 ubox
31 50 0.006253586 ubox
32 46 0.009361559 ubox
32 47 0.055082810 ubox
32 49 0.006088293 ubox
32 92 0.044166053 ubox
33 45 0.009676021 ubox
33 46 0.056353330 ubox
33 49 0.005434058 ubox
33 53 0.004198395 ubox
33 91 0.044379049 ubox
33 92 0.008448036 ubox
34 45 0.056607432 ubox
34 48 0.005422595 ubox
34 52 0.004279795 ubox
34 90 0.043394977 ubox
34 91 0.008112929 ubox
35 44 0.056725826 ubox
35 51 0.003885286 ubox
35 71 0.003232530 ubox
36 47 0.007802461 ubox
36 48 0.022128665 ubox
36 90 0.007135339 ubox
36 92 0.013768528 ubox
36 93 0.906548385 ubox
37 46 0.010422780 ubox
37 47 0.022795765 ubox
37 89 0.006658129 ubox
37 91 0.018496242 ubox
37 92 0.987730544 ubox
38 45 0.010677256 ubox
38 46 0.022798284 ubox
38 89 0.057817193 ubox
38 91 0.988896084 ubox
38 92 0.071922554 ubox
39 45 0.021837218 ubox
39 87 0.004750314 ubox
39 88 0.058717886 ubox
39 89 0.036465990 ubox
39 90 0.985969554 ubox
39 91 0.071673678 ubox
39 92 0.022982777 ubox
39 93 0.003586282 ubox
39 94 0.005033929 ubox
40 86 0.006134018 ubox
40 87 0.060466681 ubox
40 88 0.058702275 ubox
40 89 0.974532833 ubox
40 90 0.081145787 ubox
40 91 0.029045986 ubox
40 93 0.006790705 ubox
40 94 0.034431406 ubox
41 86 0.062791754 ubox
41 87 0.075533074 ubox
41 88 0.850141056 ubox
41 89 0.086810811 ubox
41 90 0.042673726 ubox
41 92 0.006610006 ubox
41 93 0.047809339 ubox
42 89 0.049841998 ubox
42 91 0.006654575 ubox
42 92 0.049077314 ubox
43 91 0.048883864 ubox
43 92 0.018970945 ubox
44 70 0.009012014 ubox
44 91 0.019357011 ubox
45 60 0.038658653 ubox
45 68 0.022628005 ubox
45 69 0.009497641 ubox
45 84 0.093827484 ubox
45 85 0.953025625 ubox
46 59 0.038714226 ubox
46 67 0.022669861 ubox
46 68 0.009594863 ubox
46 83 0.091371724 ubox
46 84 0.990800895 ubox
46 85 0.016643979 ubox
47 58 0.038716744 ubox
47 66 0.022669202 ubox
47 67 0.009583426 ubox
47 82 0.079260936 ubox
47 83 0.991149540 ubox
47 84 0.016416614 ubox
48 57 0.038522854 ubox
48 82 0.986426653 ubox
49 65 0.024537672 ubox
49 82 0.052287175 ubox
50 56 0.004511246 ubox
50 64 0.024499408 ubox
50 81 0.878395169 ubox
51 55 0.004260211 ubox
51 63 0.023932665 ubox
51 80 0.990045593 ubox
52 61 0.021800844 ubox
52 79 0.994811246 ubox
53 60 0.021763758 ubox
53 76 0.011686879 ubox
53 78 0.995696553 ubox
54 75 0.011746662 ubox
54 77 0.995669525 ubox
55 62 0.039234818 ubox
55 74 0.010344858 ubox
55 76 0.989540986 ubox
56 61 0.036891314 ubox
57 93 0.005853266 ubox
58 92 0.006005534 ubox
59 91 0.005742248 ubox
59 92 0.017857786 ubox
60 89 0.005351380 ubox
60 91 0.017988929 ubox
61 88 0.005165835 ubox
61 90 0.018079380 ubox
62 70 0.811792836 ubox
62 75 0.084468392 ubox
62 89 0.018036483 ubox
63 69 0.775881672 ubox
63 74 0.079866374 ubox
64 82 0.005283755 ubox
65 81 0.005989441 ubox
65 92 0.007066402 ubox
66 91 0.007090727 ubox
66 92 0.008307763 ubox
67 91 0.008329386 ubox
67 92 0.004755062 ubox
68 81 0.025662935 ubox
68 89 0.011027858 ubox
68 91 0.004770813 ubox
69 75 0.009334057 ubox
69 77 0.011707899 ubox
69 80 0.025319056 ubox
69 88 0.010969426 ubox
69 90 0.004725008 ubox
70 74 0.005126125 ubox
70 76 0.046601034 ubox
70 78 0.032514025 ubox
70 79 0.007363678 ubox
71 75 0.047613356 ubox
71 77 0.032872031 ubox
72 82 0.009967555 ubox
73 81 0.011580856 ubox
74 80 0.011488156 ubox
75 79 0.009566707 ubox
75 82 0.011549037 ubox
76 81 0.012180178 ubox
82 93 0.083475222 ubox
83 92 0.089568525 ubox
84 91 0.089583907 ubox
85 90 0.085295364 ubox
1 18 0.9500000 lbox
2 17 0.9500000 lbox
3 16 0.9500000 lbox
4 15 0.9500000 lbox
36 93 0.9500000 lbox
37 92 0.9500000 lbox
38 91 0.9500000 lbox
39 90 0.9500000 lbox
40 89 0.9500000 lbox
41 88 0.9500000 lbox
45 85 0.9500000 lbox
46 84 0.9500000 lbox
47 83 0.9500000 lbox
48 82 0.9500000 lbox
50 81 0.9500000 lbox
51 80 0.9500000 lbox
52 79 0.9500000 lbox
53 78 0.9500000 lbox
54 77 0.9500000 lbox
55 76 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
showpage
end
%%EOF
