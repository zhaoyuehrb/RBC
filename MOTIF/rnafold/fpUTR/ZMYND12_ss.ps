%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUACGGGCCUUUCUGGACUUGGACUCCUUGGGAGUCGUUUCUCGGCCAUUUGACCCGUGGGACUUGUGGGUUUUGUGCUGCUUUUUCUUUCUUUCUUCCCCUUUUCCAACUUCAGCAAUACACCCAGAUGUUAGUCGAGUCACGUCCCGCCGCCCUCUGCCCUUGAAAUGCUGGCAAGUACGCAGCCCCGCGAUCGUCACGUGACGCCGGGGUUCAGCGUAUCCUUGCUGGGCAACCGUCUUAGAGACCAGC\
ACUGCUGGCUGCACC\
) } def
/len { sequence length } bind def

/coor [
[120.08399200 242.75697327]
[132.83979797 250.65115356]
[129.05558777 236.13635254]
[125.27136230 221.62153625]
[112.29143524 209.78834534]
[117.37317657 192.07200623]
[113.42095184 177.60203552]
[109.46872711 163.13208008]
[105.51650238 148.66210938]
[103.00858307 153.04206848]
[100.02512360 157.28085327]
[94.91297913 171.38284302]
[100.38205719 186.46490479]
[91.87781525 200.06848145]
[75.92398071 201.75807190]
[64.75897217 190.23756409]
[66.94762421 174.34451294]
[80.81098938 166.27069092]
[85.92313385 152.16870117]
[79.50910187 148.28152466]
[71.73473358 161.10958862]
[58.58804703 168.33209229]
[58.90666962 153.33520508]
[66.68104553 140.50715637]
[60.26701355 136.61996460]
[50.13137817 147.67749023]
[39.99574280 158.73501587]
[29.86011124 169.79255676]
[19.72447777 180.85008240]
[9.58884430 191.90760803]
[3.34337258 207.66928101]
[-13.53124905 206.03115845]
[-16.62849808 189.36251831]
[-1.46868432 181.77197266]
[8.66694927 170.71444702]
[18.80258369 159.65692139]
[28.93821716 148.59939575]
[39.07384872 137.54185486]
[49.20948410 126.48432922]
[46.85095215 117.93684387]
[45.88693237 109.30588531]
[46.28546143 100.81281281]
[47.98034668 92.66698456]
[50.87410355 85.06060791]
[54.84166718 78.16418457]
[59.73474121 72.12274170]
[48.85512161 61.79636765]
[37.97550583 51.47000122]
[27.09588623 41.14363098]
[7.28638744 37.28527832]
[2.68820477 18.48258400]
[-8.42788696 8.41121197]
[-23.84983253 4.87933779]
[-28.08665276 -9.39997005]
[-39.20274353 -19.47134018]
[-50.31883621 -29.54271126]
[-61.43492508 -39.61408234]
[-76.85687256 -43.14595795]
[-81.09369659 -57.42526627]
[-92.20978546 -67.49663544]
[-107.31410980 -64.46919250]
[-121.14324951 -70.84166718]
[-128.48150635 -83.97992706]
[-126.69766998 -98.74325562]
[-137.81376648 -108.81462860]
[-148.92985535 -118.88600159]
[-164.03417969 -115.85855103]
[-177.86331177 -122.23103333]
[-185.20158386 -135.36929321]
[-183.41773987 -150.13261414]
[-194.53382874 -160.20399475]
[-205.64991760 -170.27536011]
[-216.76602173 -180.34674072]
[-227.88211060 -190.41810608]
[-242.47447205 -185.83444214]
[-257.30398560 -189.14836121]
[-268.40985107 -199.37217712]
[-272.87725830 -213.68644714]
[-269.60198975 -228.21704102]
[-280.71807861 -238.28840637]
[-291.83416748 -248.35978699]
[-302.95025635 -258.43115234]
[-314.06634521 -268.50253296]
[-326.04135132 -259.39678955]
[-339.48571777 -252.64672852]
[-353.94155884 -248.48222351]
[-368.91653442 -247.04510498]
[-383.90054321 -248.38435364]
[-398.38330078 -252.45431519]
[-411.87149048 -259.11639404]
[-423.90573120 -268.14370728]
[-434.07611084 -279.22872925]
[-442.03625488 -291.99392700]
[-447.51504517 -306.00457764]
[-450.32586670 -320.78338623]
[-450.37298584 -335.82708740]
[-447.65478516 -350.62322998]
[-442.26388550 -364.66790771]
[-434.38385010 -377.48272705]
[-424.28308105 -388.63125610]
[-412.30563354 -397.73373413]
[-398.85946655 -404.48019409]
[-384.40249634 -408.64080811]
[-369.42715454 -410.07388306]
[-354.44348145 -408.73059082]
[-339.96182251 -404.65670776]
[-326.47543335 -397.99099731]
[-314.44363403 -388.96047974]
[-304.27624512 -377.87271118]
[-296.31951904 -365.10534668]
[-290.84451294 -351.09323120]
[-288.03768921 -336.31365967]
[-287.99462891 -321.26995850]
[-290.71679688 -306.47451782]
[-296.11151123 -292.43130493]
[-303.99499512 -279.61862183]
[-292.87887573 -269.54724121]
[-281.76278687 -259.47586060]
[-270.64669800 -249.40449524]
[-259.53060913 -239.33312988]
[-245.39271545 -244.02198792]
[-230.70838928 -240.98446655]
[-219.44160461 -230.93827820]
[-214.68486023 -216.50671387]
[-217.81072998 -201.53419495]
[-206.69464111 -191.46282959]
[-195.57855225 -181.39144897]
[-184.46246338 -171.32008362]
[-173.34637451 -161.24871826]
[-158.83013916 -164.47628784]
[-145.03369141 -158.46612549]
[-137.33164978 -145.33097839]
[-138.85848999 -130.00209045]
[-127.74239349 -119.93071747]
[-116.62629700 -109.85935211]
[-102.11007690 -113.08692169]
[-88.31362915 -107.07675934]
[-80.61157990 -93.94161987]
[-82.13841248 -78.61272430]
[-71.02232361 -68.54135895]
[-56.39547348 -65.72985077]
[-51.36355591 -50.73017502]
[-40.24746323 -40.65880203]
[-29.13137245 -30.58743286]
[-18.01528168 -20.51606178]
[-3.38843250 -17.70455742]
[1.64348447 -2.70487881]
[12.75957584 7.36649227]
[22.83439445 5.94741201]
[32.23324203 10.38407326]
[37.76964951 19.43797684]
[37.42225647 30.26401138]
[48.30187607 40.59038162]
[59.18149185 50.91675186]
[70.06111145 61.24312210]
[84.20642090 53.64273834]
[100.04969788 51.02622986]
[115.88763428 53.67488861]
[130.01748657 61.30396652]
[140.92016602 73.09325409]
[147.42350769 87.77528381]
[162.35073853 86.29962158]
[177.27798462 84.82395935]
[192.20521545 83.34828949]
[207.13246155 81.87262726]
[194.03210449 74.56640625]
[186.27392578 61.72854996]
[185.89703369 46.73328400]
[193.00048828 33.52189255]
[205.71726990 25.56678391]
[220.70494080 24.95884132]
[234.02423096 31.85785103]
[242.17437744 44.45051193]
[243.01322937 59.42704010]
[236.32031250 72.85107422]
[223.85659790 81.19368744]
[238.85432434 81.45450592]
[253.85206604 81.71532440]
[268.84979248 81.97615051]
[283.84753418 82.23696899]
[298.84524536 82.49778748]
[313.84500122 82.58473206]
[328.84475708 82.49778748]
[343.84451294 82.41084290]
[358.84423828 82.32389832]
[373.84399414 82.23695374]
[388.84173584 81.97613525]
[403.83541870 81.54147339]
[418.82913208 81.10681152]
[433.82284546 80.67214966]
[448.81652832 80.23748779]
[463.81024170 79.80282593]
[478.80392456 79.36817169]
[484.26687622 71.76159668]
[492.48498535 67.56450653]
[501.57556152 67.59739685]
[509.51956177 71.72740173]
[514.61004639 78.92555237]
[529.60980225 79.01249695]
[544.60955811 79.09944153]
[559.60931396 79.18638611]
[573.58306885 70.60353088]
[587.87213135 78.65061951]
[587.77703857 95.04949188]
[573.39569092 102.93039703]
[559.52233887 94.18613434]
[544.52258301 94.09918976]
[529.52282715 94.01224518]
[514.52307129 93.92530060]
[497.49697876 105.62330627]
[479.23858643 94.36186981]
[464.24490356 94.79653168]
[449.25119019 95.23119354]
[434.25750732 95.66585541]
[419.26379395 96.10051727]
[404.27008057 96.53517914]
[389.27639771 96.96984100]
[385.42648315 99.74053955]
[379.80322266 100.14609528]
[373.93093872 97.23670197]
[358.93118286 97.32364655]
[343.93145752 97.41059113]
[328.93170166 97.49753571]
[313.93194580 97.58448029]
[310.01885986 100.26518250]
[304.38769531 100.54026794]
[298.58444214 97.49552155]
[283.58670044 97.23470306]
[268.58898926 96.97387695]
[253.59124756 96.71305847]
[238.59350586 96.45223999]
[223.59577942 96.19142151]
[208.60812378 96.79986572]
[193.68087769 98.27552795]
[178.75364685 99.75119019]
[163.82641602 101.22686005]
[148.89916992 102.70252228]
[140.34182739 127.76634979]
[119.98646545 144.70988464]
[123.93869019 159.17985535]
[127.89092255 173.64981079]
[131.84313965 188.11978149]
[142.61975098 195.16394043]
[145.62721252 207.27024841]
[139.78617859 217.83732605]
[143.57038879 232.35212708]
[147.35461426 246.86694336]
[151.72447205 261.21630859]
[156.67280579 275.37661743]
[162.43760681 282.41461182]
[161.59538269 289.72982788]
[166.37921143 303.94653320]
[171.16305542 318.16323853]
[175.94689941 332.37997437]
[180.73074341 346.59667969]
[191.51280212 359.68038940]
[181.92518616 373.66302490]
[165.83488464 368.32086182]
[166.51402283 351.38052368]
[161.73019409 337.16381836]
[156.94635010 322.94708252]
[152.16250610 308.73037720]
[147.37866211 294.51367188]
[142.51249695 280.32492065]
[137.56417847 266.16461182]
[131.37428284 279.82791138]
[117.89264679 286.40405273]
[103.31465912 282.87103271]
[94.33950043 270.85244751]
[95.09164429 255.87130737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 247]
[3 246]
[4 245]
[6 242]
[7 241]
[8 240]
[9 239]
[11 19]
[12 18]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[46 155]
[47 154]
[48 153]
[49 152]
[51 148]
[52 147]
[54 145]
[55 144]
[56 143]
[57 142]
[59 140]
[60 139]
[64 135]
[65 134]
[66 133]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[161 237]
[162 236]
[163 235]
[164 234]
[165 233]
[176 232]
[177 231]
[178 230]
[179 229]
[180 228]
[181 227]
[182 224]
[183 223]
[184 222]
[185 221]
[186 220]
[187 217]
[188 216]
[189 215]
[190 214]
[191 213]
[192 212]
[193 211]
[198 209]
[199 208]
[200 207]
[201 206]
[248 265]
[249 264]
[251 263]
[252 262]
[253 261]
[254 260]
[255 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
