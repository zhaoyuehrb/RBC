%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP5PD)
} def

/sequence { (\
UGACCCACUUCCGUUACUUGCUGCGGAGGACCGUGGGCAGCCAGGGUCGGUGAAGGAUCCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.034004045 ubox
1 16 0.003869982 ubox
1 39 0.440342051 ubox
1 43 0.028217338 ubox
1 49 0.112959978 ubox
1 52 0.021050305 ubox
1 62 0.071472403 ubox
2 6 0.039280821 ubox
2 15 0.004446303 ubox
2 38 0.488684251 ubox
2 42 0.031019035 ubox
2 48 0.332415594 ubox
2 51 0.014084680 ubox
2 59 0.390360857 ubox
2 61 0.076125042 ubox
3 9 0.003946883 ubox
3 14 0.004505176 ubox
3 34 0.009860738 ubox
3 47 0.332621387 ubox
3 51 0.255223146 ubox
3 58 0.390080397 ubox
4 13 0.004510904 ubox
4 29 0.009361647 ubox
4 33 0.011034378 ubox
4 36 0.006036448 ubox
4 37 0.534153744 ubox
4 46 0.332634176 ubox
4 50 0.262184128 ubox
4 56 0.433580639 ubox
5 28 0.020053743 ubox
5 29 0.018080223 ubox
5 35 0.005800337 ubox
5 36 0.534589203 ubox
5 45 0.332379428 ubox
5 49 0.261204199 ubox
5 50 0.078812167 ubox
5 55 0.431986191 ubox
5 56 0.182112951 ubox
6 28 0.033472450 ubox
6 35 0.534585189 ubox
6 44 0.331895093 ubox
6 49 0.080990861 ubox
6 52 0.491119164 ubox
6 55 0.179957529 ubox
7 14 0.007241389 ubox
7 34 0.532159196 ubox
7 47 0.005015962 ubox
7 51 0.498027741 ubox
8 13 0.007723175 ubox
8 28 0.233135235 ubox
8 29 0.520645267 ubox
8 33 0.398426748 ubox
8 40 0.003906078 ubox
8 50 0.497589050 ubox
8 55 0.011738665 ubox
8 56 0.005686856 ubox
9 27 0.166401225 ubox
9 28 0.812834964 ubox
9 29 0.026912143 ubox
9 30 0.025468833 ubox
9 39 0.003596941 ubox
9 49 0.408365683 ubox
9 53 0.004551291 ubox
9 54 0.011025809 ubox
9 55 0.004965735 ubox
9 63 0.004488301 ubox
10 26 0.026396085 ubox
10 27 0.971634447 ubox
10 28 0.015855848 ubox
10 29 0.014847866 ubox
10 30 0.015513187 ubox
10 46 0.003813938 ubox
10 49 0.005865676 ubox
10 52 0.003340670 ubox
10 53 0.007424378 ubox
10 57 0.015006887 ubox
11 25 0.021234273 ubox
11 26 0.999075761 ubox
11 28 0.005141183 ubox
11 29 0.015267676 ubox
11 45 0.004396364 ubox
11 46 0.005819067 ubox
11 50 0.012926549 ubox
11 52 0.004893513 ubox
11 56 0.016032404 ubox
12 23 0.012488509 ubox
12 25 0.999276734 ubox
12 28 0.014954057 ubox
12 44 0.004411765 ubox
12 45 0.005816312 ubox
12 49 0.013021835 ubox
12 55 0.016012075 ubox
13 21 0.014734438 ubox
13 22 0.008216175 ubox
13 24 0.999309778 ubox
13 31 0.003576094 ubox
13 41 0.004112157 ubox
13 48 0.012536119 ubox
14 20 0.015650033 ubox
14 23 0.995562363 ubox
14 26 0.006550947 ubox
14 30 0.003581740 ubox
14 40 0.003919186 ubox
14 53 0.015138267 ubox
15 23 0.052885730 ubox
15 25 0.005861987 ubox
15 29 0.003245422 ubox
15 52 0.015894828 ubox
16 22 0.070154008 ubox
16 51 0.015980450 ubox
17 28 0.007511511 ubox
17 40 0.007485863 ubox
17 44 0.009412795 ubox
17 45 0.008004343 ubox
17 50 0.015958159 ubox
18 27 0.007652050 ubox
18 39 0.006781507 ubox
18 40 0.008970691 ubox
18 43 0.009343684 ubox
18 44 0.008002387 ubox
18 49 0.015305836 ubox
19 26 0.007597903 ubox
19 39 0.011786126 ubox
19 43 0.008010671 ubox
20 38 0.012549283 ubox
20 41 0.011623945 ubox
20 42 0.005769878 ubox
21 28 0.011293349 ubox
21 36 0.009525089 ubox
21 37 0.010769768 ubox
21 40 0.012901447 ubox
22 27 0.011228093 ubox
22 35 0.011568216 ubox
22 36 0.008150353 ubox
22 39 0.012890744 ubox
23 34 0.014025548 ubox
23 38 0.012754928 ubox
24 33 0.015304565 ubox
24 37 0.012376987 ubox
25 32 0.016810147 ubox
26 31 0.016709350 ubox
28 42 0.005095939 ubox
28 48 0.023793414 ubox
28 61 0.005936045 ubox
29 41 0.005112371 ubox
29 47 0.012600842 ubox
29 48 0.751422526 ubox
30 47 0.773204460 ubox
30 51 0.009045735 ubox
31 37 0.021117620 ubox
31 45 0.013904563 ubox
31 46 0.776059225 ubox
31 50 0.009269970 ubox
32 36 0.021056559 ubox
32 44 0.017137064 ubox
32 45 0.775989906 ubox
32 49 0.009262679 ubox
33 41 0.017526216 ubox
33 48 0.009236253 ubox
34 40 0.017428759 ubox
34 43 0.830456959 ubox
35 42 0.843827103 ubox
35 61 0.003557393 ubox
36 41 0.842943972 ubox
36 42 0.027861386 ubox
36 60 0.003542151 ubox
37 41 0.028489535 ubox
37 59 0.003526168 ubox
38 52 0.005623606 ubox
39 51 0.004577318 ubox
40 51 0.020171444 ubox
41 46 0.003203317 ubox
41 50 0.021678483 ubox
42 49 0.021669781 ubox
44 60 0.457361933 ubox
44 61 0.274806533 ubox
45 59 0.459502605 ubox
45 60 0.273288673 ubox
45 61 0.007983850 ubox
46 58 0.460310866 ubox
46 59 0.271338925 ubox
46 60 0.007868971 ubox
47 53 0.007725743 ubox
47 56 0.047683005 ubox
47 57 0.528388564 ubox
48 52 0.009571317 ubox
48 55 0.068550561 ubox
48 56 0.528700545 ubox
49 59 0.124494997 ubox
49 60 0.223267870 ubox
49 61 0.492441747 ubox
50 58 0.126815068 ubox
50 59 0.224124144 ubox
50 60 0.492863433 ubox
51 57 0.136034267 ubox
51 62 0.050959935 ubox
52 59 0.488119709 ubox
52 61 0.063013175 ubox
53 58 0.446217871 ubox
55 61 0.220974974 ubox
56 60 0.217642415 ubox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
9 49 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
