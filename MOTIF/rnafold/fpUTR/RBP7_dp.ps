%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RBP7)
} def

/sequence { (\
GGUUUAUAGGUCCCGGCCCGAGCCUCCGGCCGCCCGCCGGGUUUGUCCCGCGAUCCCCGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.005460092 ubox
1 24 0.006335432 ubox
1 34 0.006229173 ubox
1 38 0.017170923 ubox
1 48 0.019840947 ubox
1 49 0.068894681 ubox
1 55 0.008270972 ubox
1 56 0.015086575 ubox
1 57 0.044869563 ubox
1 58 0.064681145 ubox
1 62 0.969666724 ubox
2 12 0.005474017 ubox
2 23 0.006346526 ubox
2 33 0.006254401 ubox
2 37 0.017309224 ubox
2 47 0.019975396 ubox
2 48 0.068886242 ubox
2 51 0.013841101 ubox
2 54 0.008362851 ubox
2 55 0.014890400 ubox
2 56 0.045172242 ubox
2 57 0.064497326 ubox
2 61 0.981190845 ubox
3 22 0.006341463 ubox
3 32 0.005867109 ubox
3 36 0.017187366 ubox
3 50 0.013580497 ubox
3 53 0.008975784 ubox
3 60 0.975725319 ubox
4 21 0.006315211 ubox
4 52 0.008479636 ubox
4 53 0.010959352 ubox
4 59 0.938523052 ubox
4 60 0.081792399 ubox
5 20 0.006234140 ubox
5 45 0.004090557 ubox
5 52 0.010977578 ubox
5 59 0.110053115 ubox
6 44 0.003979582 ubox
6 46 0.074461774 ubox
7 45 0.075571244 ubox
8 44 0.075620086 ubox
9 18 0.006399175 ubox
9 31 0.010521944 ubox
9 34 0.024085354 ubox
9 35 0.023200691 ubox
9 38 0.024198162 ubox
9 43 0.075196895 ubox
9 44 0.005184965 ubox
9 48 0.008090640 ubox
9 49 0.007401437 ubox
9 55 0.950646226 ubox
9 56 0.250859348 ubox
9 57 0.044756369 ubox
9 58 0.041188021 ubox
9 62 0.062227312 ubox
10 17 0.006403267 ubox
10 30 0.010527732 ubox
10 33 0.024138615 ubox
10 34 0.023343974 ubox
10 37 0.024357990 ubox
10 42 0.071922522 ubox
10 43 0.004944111 ubox
10 47 0.008106978 ubox
10 48 0.007338047 ubox
10 51 0.003733682 ubox
10 54 0.958897138 ubox
10 55 0.249533031 ubox
10 56 0.043336994 ubox
10 57 0.040256324 ubox
10 61 0.062762488 ubox
11 16 0.006098785 ubox
11 29 0.009322016 ubox
11 32 0.014254491 ubox
11 36 0.023819743 ubox
11 45 0.004611749 ubox
11 50 0.003444094 ubox
11 53 0.991992331 ubox
11 60 0.062712030 ubox
12 28 0.009196422 ubox
12 29 0.005030518 ubox
12 41 0.078508995 ubox
12 52 0.990620976 ubox
12 59 0.062460723 ubox
13 28 0.005052237 ubox
13 40 0.078769044 ubox
14 32 0.075554522 ubox
14 39 0.078832643 ubox
14 50 0.992289831 ubox
15 24 0.011905611 ubox
15 31 0.078998740 ubox
15 34 0.009266650 ubox
15 38 0.079134737 ubox
15 48 0.018534981 ubox
15 49 0.993362032 ubox
16 23 0.011955352 ubox
16 30 0.079006553 ubox
16 33 0.009297492 ubox
16 37 0.079137385 ubox
16 47 0.024529981 ubox
16 48 0.992783735 ubox
17 22 0.011932266 ubox
17 29 0.076251309 ubox
17 32 0.009136411 ubox
17 36 0.079096617 ubox
17 45 0.006960243 ubox
18 28 0.073348201 ubox
18 29 0.022687746 ubox
19 28 0.030711906 ubox
19 32 0.078313502 ubox
19 45 0.989680178 ubox
20 26 0.067427745 ubox
20 27 0.036622399 ubox
20 31 0.078540063 ubox
20 43 0.004831908 ubox
20 44 0.991943059 ubox
20 47 0.020311624 ubox
21 25 0.058780393 ubox
21 42 0.005795143 ubox
21 43 0.991876839 ubox
21 44 0.012423237 ubox
21 46 0.019968340 ubox
22 30 0.079191292 ubox
22 42 0.988730317 ubox
22 43 0.012088111 ubox
22 46 0.005668200 ubox
23 29 0.079199709 ubox
23 40 0.007085665 ubox
23 41 0.962303246 ubox
23 45 0.007830930 ubox
24 28 0.078623584 ubox
24 39 0.009090160 ubox
24 40 0.740505561 ubox
24 41 0.185024973 ubox
25 39 0.351535330 ubox
25 40 0.032147484 ubox
25 41 0.147262800 ubox
26 39 0.183647868 ubox
26 40 0.658576022 ubox
27 36 0.149638419 ubox
27 39 0.900741310 ubox
27 59 0.005205678 ubox
28 34 0.008323862 ubox
28 35 0.150542944 ubox
28 38 0.981634412 ubox
28 58 0.005324707 ubox
29 33 0.009374266 ubox
29 34 0.148711310 ubox
29 37 0.982069555 ubox
29 57 0.005313191 ubox
30 36 0.980863332 ubox
35 52 0.068404329 ubox
36 51 0.071199200 ubox
37 50 0.050990960 ubox
38 50 0.050775963 ubox
38 59 0.016523638 ubox
39 48 0.011364682 ubox
39 49 0.071327552 ubox
39 56 0.004133830 ubox
39 57 0.028918854 ubox
39 58 0.021681188 ubox
40 47 0.011359685 ubox
40 48 0.071349425 ubox
40 55 0.004164301 ubox
40 56 0.029253968 ubox
40 57 0.021535065 ubox
41 46 0.007705640 ubox
41 47 0.071265916 ubox
41 54 0.004210086 ubox
41 55 0.029449033 ubox
41 56 0.021364148 ubox
42 53 0.004087948 ubox
43 52 0.003487664 ubox
43 53 0.035356060 ubox
44 52 0.036190007 ubox
45 51 0.036473720 ubox
45 54 0.011685930 ubox
45 61 0.004082465 ubox
46 50 0.034122622 ubox
46 53 0.012097795 ubox
46 60 0.004113349 ubox
47 52 0.012262834 ubox
47 59 0.004110538 ubox
49 59 0.007029507 ubox
50 58 0.007498388 ubox
51 59 0.040874156 ubox
52 58 0.041413520 ubox
54 60 0.006230745 ubox
55 59 0.006876554 ubox
1 62 0.9500000 lbox
2 61 0.9500000 lbox
3 60 0.9500000 lbox
4 59 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
24 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
