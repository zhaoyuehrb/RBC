%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGUUUACCUGGCACUCAGGUGAGUGGUGCGCUCUGGCUGUUUUCUGUCGGAGCCGCCCGCCUCUUCCUUCAGCGCGUCCCACAAAUCCCGACGGCACGGAGGGGCCCCAGGCCAAGGGCGAUGGGCCCCUGAGCCCUGACACCGCUUCGCCGCUGCUGCAGGUGCCCCUGGCCGGCAGCGCCGCCGUGGUCCCGGAGCGCGGCGAC\
) } def
/len { sequence length } bind def

/coor [
[168.11289978 219.29988098]
[172.48274231 200.72856140]
[160.48072815 191.73123169]
[148.47872925 182.73390198]
[136.47673035 173.73657227]
[124.47472382 164.73924255]
[109.85080719 168.07705688]
[102.94116974 181.39083862]
[96.03153229 194.70463562]
[89.12189484 208.01841736]
[82.21225739 221.33219910]
[75.30261993 234.64599609]
[68.39298248 247.95977783]
[71.84602356 263.62683105]
[61.63840103 276.00357056]
[45.60053253 275.59564209]
[36.03530121 262.71597290]
[40.28033066 247.24473572]
[55.07919693 241.05014038]
[61.98883438 227.73635864]
[68.89847565 214.42256165]
[75.80810547 201.10877991]
[82.71774292 187.79499817]
[89.62738037 174.48120117]
[96.53701782 161.16741943]
[91.86084747 155.30368042]
[82.50849915 143.57621765]
[77.83232117 137.71247864]
[63.31480408 141.48628235]
[48.79728317 145.26007080]
[34.27976227 149.03387451]
[26.76076698 154.22204590]
[19.51682281 152.75381470]
[4.94447184 156.31002808]
[-9.62787819 159.86622620]
[-24.20022964 163.42243958]
[-38.77257919 166.97863770]
[-53.34492874 170.53485107]
[-67.91728210 174.09104919]
[-82.48963165 177.64724731]
[-88.24927521 192.05580139]
[-101.39596558 200.29861450]
[-116.87454224 199.20617676]
[-128.73316956 189.19854736]
[-132.41195679 174.12387085]
[-126.49635315 159.77865601]
[-113.26100922 151.67893982]
[-97.79520416 152.93922424]
[-86.04583740 163.07490540]
[-71.47348785 159.51869202]
[-56.90113449 155.96249390]
[-42.32878494 152.40628052]
[-27.75643539 148.85008240]
[-13.18408394 145.29386902]
[1.38826632 141.73767090]
[15.96061707 138.18145752]
[30.50596046 134.51635742]
[45.02347946 130.74255371]
[59.54100037 126.96875763]
[74.05852509 123.19495392]
[69.42635345 100.69754791]
[79.56530762 83.34173584]
[71.11550903 70.94815826]
[62.66570663 58.55457306]
[55.24526215 53.22641754]
[54.18383026 45.91178894]
[45.92037582 33.39319229]
[37.65692139 20.87459183]
[29.39346504 8.35599327]
[21.13001060 -4.16260529]
[9.24079895 -4.23481083]
[-1.03197265 -9.97873783]
[-7.19243717 -19.86629868]
[-7.80815887 -31.37966347]
[-2.84167504 -41.65200043]
[-10.72693157 -54.41220093]
[-17.90085983 -60.06790924]
[-18.63305283 -67.42279053]
[-26.32654190 -80.29952240]
[-34.02003098 -93.17625427]
[-41.71352005 -106.05298615]
[-56.99203110 -105.14431763]
[-70.93798828 -111.45056915]
[-80.34671783 -123.52262115]
[-83.05615234 -138.58641052]
[-78.44368744 -153.18037415]
[-67.56924438 -163.95092773]
[-52.93167496 -168.42309570]
[-37.89459229 -165.56918335]
[-25.91341209 -156.04501343]
[-19.74131584 -142.03915405]
[-20.79660606 -126.77007294]
[-28.83678818 -113.74647522]
[-21.14329910 -100.86974335]
[-13.44981003 -87.99301147]
[-5.75632143 -75.11627960]
[2.03326941 -62.29745483]
[9.91852570 -49.53725433]
[27.95520401 -46.41099930]
[38.15447998 -30.82683754]
[33.64860916 -12.42605972]
[41.91206360 0.09253881]
[50.17551804 12.61113739]
[58.43897247 25.12973595]
[66.70243073 37.64833450]
[75.05928802 50.10477448]
[83.50909424 62.49835587]
[91.95889282 74.89193726]
[117.58446503 76.71878052]
[131.97004700 101.05284119]
[119.10116577 129.08799744]
[127.91794586 116.95274353]
[136.73472595 104.81748962]
[145.46047974 92.61662292]
[154.09474182 80.35083008]
[162.63700867 68.02080536]
[171.08680725 55.62722015]
[172.46786499 39.86640549]
[186.03024292 33.70921707]
[194.48005676 21.31563568]
[202.92985535 8.92205429]
[211.37965393 -3.47152734]
[209.82186890 -19.43877029]
[221.43418884 -30.50826073]
[237.30862427 -28.18843079]
[245.26768494 -14.25885773]
[239.20584106 0.59488362]
[223.77323914 4.97827339]
[215.32342529 17.37185478]
[206.87362671 29.76543617]
[198.42382812 42.15901947]
[197.64715576 57.03335953]
[183.48039246 64.07701874]
[175.03059387 76.47060394]
[173.85984802 83.76853180]
[166.36053467 88.98509216]
[157.72627258 101.25087738]
[156.44650269 108.53047943]
[148.86997986 113.63426971]
[140.05319214 125.76952362]
[131.23641968 137.90476990]
[133.47204590 152.73724365]
[145.47406006 161.73457336]
[157.47605896 170.73190308]
[169.47805786 179.72921753]
[181.48007202 188.72654724]
[192.29983521 181.49862671]
[204.77909851 177.90547180]
[217.73445129 178.27159119]
[229.94235229 182.54676819]
[240.25453186 190.31236267]
[247.70611572 200.82220459]
[251.60577393 213.07429504]
[251.59999084 225.90631104]
[265.79489136 230.75445557]
[279.98980713 235.60260010]
[294.18472290 240.45074463]
[308.37963867 245.29888916]
[322.57452393 250.14703369]
[336.76943970 254.99517822]
[350.96435547 259.84332275]
[365.23019409 264.47857666]
[379.56381226 268.89990234]
[393.89739990 273.32122803]
[408.23098755 277.74255371]
[424.08987427 273.56787109]
[435.44094849 285.40362549]
[430.60720825 301.07421875]
[414.56118774 304.45907593]
[403.80966187 292.07617188]
[389.47607422 287.65481567]
[375.14245605 283.23348999]
[360.80886841 278.81216431]
[356.24218750 280.21258545]
[350.74728394 278.75851440]
[346.11621094 274.03823853]
[331.92129517 269.19009399]
[317.72637939 264.34194946]
[303.53149414 259.49380493]
[289.33657837 254.64566040]
[275.14166260 249.79751587]
[260.94674683 244.94937134]
[246.75183105 240.10122681]
[241.13578796 247.88154602]
[233.89019775 254.17242432]
[239.99124146 267.87561035]
[246.09230042 281.57879639]
[252.19334412 295.28198242]
[258.29440308 308.98513794]
[264.39544678 322.68832397]
[270.49649048 336.39151001]
[283.17791748 345.85156250]
[281.28616333 360.62554932]
[287.38723755 374.32873535]
[299.35317993 386.33923340]
[291.12457275 401.16238403]
[274.60278320 397.35879517]
[273.68405151 380.42977905]
[267.58300781 366.72659302]
[255.33796692 358.24670410]
[256.79330444 342.49255371]
[250.69226074 328.78936768]
[244.59121704 315.08621216]
[238.49015808 301.38302612]
[232.38911438 287.67984009]
[226.28805542 273.97665405]
[220.18701172 260.27346802]
[201.35273743 260.60430908]
[184.23350525 252.60130310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[28 60]
[29 59]
[30 58]
[31 57]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[62 108]
[63 107]
[64 106]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[75 98]
[76 97]
[78 96]
[79 95]
[80 94]
[81 93]
[111 141]
[112 140]
[113 139]
[114 137]
[115 136]
[116 134]
[117 133]
[119 131]
[120 130]
[121 129]
[122 128]
[154 183]
[155 182]
[156 181]
[157 180]
[158 179]
[159 178]
[160 177]
[161 176]
[162 173]
[163 172]
[164 171]
[165 170]
[185 207]
[186 206]
[187 205]
[188 204]
[189 203]
[190 202]
[191 201]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
