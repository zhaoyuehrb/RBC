%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM201)
} def

/sequence { (\
CUACCCGCCUACCCGCCUACCCCCCUGCCGGCCUGCCGUCCUUCCACGCGGAGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 53 0.019317460 ubox
1 55 0.055828337 ubox
2 11 0.033672618 ubox
2 19 0.114345606 ubox
2 27 0.007426818 ubox
2 35 0.003626606 ubox
2 52 0.018396074 ubox
2 54 0.056701753 ubox
3 10 0.033995397 ubox
3 18 0.120629829 ubox
3 26 0.007613020 ubox
3 34 0.005888327 ubox
3 39 0.011144350 ubox
4 31 0.046474702 ubox
4 38 0.012132741 ubox
4 51 0.008350392 ubox
5 30 0.048930837 ubox
5 31 0.032442988 ubox
5 50 0.007520777 ubox
5 51 0.076850973 ubox
6 15 0.181296299 ubox
6 27 0.017862570 ubox
6 30 0.035792862 ubox
6 35 0.003685761 ubox
6 38 0.015955478 ubox
6 48 0.004400926 ubox
6 50 0.077039409 ubox
7 14 0.182070869 ubox
7 16 0.678592326 ubox
7 26 0.012040864 ubox
7 28 0.142612290 ubox
7 29 0.033753161 ubox
7 32 0.113779690 ubox
7 36 0.046542496 ubox
7 37 0.013577930 ubox
7 39 0.004735230 ubox
7 47 0.004091763 ubox
7 49 0.076843628 ubox
7 56 0.206216468 ubox
8 15 0.678784285 ubox
8 27 0.143803349 ubox
8 31 0.113919536 ubox
8 35 0.047714390 ubox
8 38 0.004985540 ubox
8 48 0.076031592 ubox
8 55 0.196274961 ubox
9 30 0.113697590 ubox
9 53 0.171038352 ubox
9 55 0.090855279 ubox
10 19 0.032412775 ubox
10 27 0.011819653 ubox
10 35 0.008920167 ubox
10 52 0.160949007 ubox
10 54 0.111435424 ubox
11 18 0.032607941 ubox
11 26 0.014062795 ubox
11 34 0.011776604 ubox
11 39 0.014505690 ubox
12 31 0.096837642 ubox
12 38 0.014970688 ubox
12 51 0.050798828 ubox
13 30 0.100149072 ubox
13 31 0.059168764 ubox
13 50 0.041544060 ubox
13 51 0.196102566 ubox
14 27 0.031497794 ubox
14 30 0.063362004 ubox
14 35 0.006872479 ubox
14 38 0.015833575 ubox
14 48 0.014864093 ubox
14 50 0.198676568 ubox
15 26 0.025429067 ubox
15 28 0.250233139 ubox
15 29 0.056164894 ubox
15 32 0.180139864 ubox
15 36 0.029626959 ubox
15 37 0.013084338 ubox
15 39 0.014210703 ubox
15 47 0.013773338 ubox
15 49 0.200502393 ubox
15 56 0.022589157 ubox
16 27 0.252910245 ubox
16 31 0.180544871 ubox
16 35 0.031045637 ubox
16 38 0.014511592 ubox
16 48 0.200080578 ubox
16 55 0.022495570 ubox
17 30 0.180434055 ubox
17 31 0.003277257 ubox
17 53 0.020004873 ubox
17 55 0.004417158 ubox
18 27 0.054786781 ubox
18 30 0.003586321 ubox
18 35 0.010783571 ubox
18 52 0.019462729 ubox
18 54 0.004937359 ubox
19 26 0.061933859 ubox
19 34 0.012268614 ubox
19 39 0.005117197 ubox
20 31 0.048785642 ubox
20 38 0.005105817 ubox
20 51 0.009183506 ubox
21 30 0.050022574 ubox
21 31 0.023277782 ubox
21 50 0.009135005 ubox
21 51 0.003348099 ubox
22 30 0.024395035 ubox
22 31 0.036721630 ubox
22 50 0.003360357 ubox
23 30 0.038604483 ubox
23 31 0.028146636 ubox
24 30 0.029629646 ubox
24 31 0.035411346 ubox
24 51 0.004926281 ubox
25 30 0.037720216 ubox
25 31 0.003671252 ubox
25 50 0.004875865 ubox
25 51 0.015805365 ubox
25 53 0.005746589 ubox
26 30 0.003619605 ubox
26 38 0.021152647 ubox
26 46 0.011770677 ubox
26 50 0.015875739 ubox
26 52 0.005721090 ubox
27 36 0.062874440 ubox
27 37 0.020688422 ubox
27 39 0.086278850 ubox
27 45 0.012128773 ubox
27 47 0.003776563 ubox
27 49 0.017463707 ubox
27 56 0.016524370 ubox
28 35 0.063467865 ubox
28 38 0.062404476 ubox
28 48 0.017274136 ubox
28 51 0.006590026 ubox
28 55 0.016547850 ubox
29 35 0.020103659 ubox
29 38 0.179206443 ubox
29 50 0.006593712 ubox
30 34 0.012895280 ubox
30 37 0.191973983 ubox
30 40 0.020327631 ubox
30 41 0.014520434 ubox
30 45 0.006148397 ubox
30 47 0.003975962 ubox
30 49 0.005772358 ubox
30 57 0.934336443 ubox
31 36 0.190811225 ubox
31 39 0.020753320 ubox
31 40 0.014502534 ubox
31 44 0.006101290 ubox
31 49 0.003514859 ubox
31 56 0.942240745 ubox
32 38 0.023994532 ubox
32 48 0.004665837 ubox
32 51 0.016451958 ubox
32 55 0.941594275 ubox
33 50 0.016409709 ubox
33 51 0.114211309 ubox
33 53 0.900986547 ubox
33 55 0.055393515 ubox
34 46 0.011077384 ubox
34 50 0.114719063 ubox
34 52 0.897777082 ubox
34 54 0.068832923 ubox
35 45 0.012224921 ubox
35 47 0.006298526 ubox
35 49 0.119271211 ubox
35 56 0.171626741 ubox
36 48 0.087681317 ubox
36 51 0.949513268 ubox
36 55 0.172159599 ubox
37 48 0.086171271 ubox
37 50 0.950445066 ubox
38 47 0.130188582 ubox
38 49 0.950148014 ubox
38 56 0.042016228 ubox
39 46 0.123460117 ubox
39 48 0.942007894 ubox
39 52 0.172873318 ubox
39 54 0.013295761 ubox
39 55 0.041263941 ubox
40 51 0.173209386 ubox
40 53 0.013465229 ubox
41 50 0.173166005 ubox
41 53 0.044933331 ubox
41 55 0.018007633 ubox
42 52 0.039024950 ubox
42 53 0.039775794 ubox
42 54 0.015254549 ubox
43 51 0.031696242 ubox
43 52 0.054248530 ubox
43 53 0.008450425 ubox
44 50 0.031461085 ubox
44 51 0.060272169 ubox
45 50 0.060233816 ubox
48 56 0.009160006 ubox
49 55 0.009188787 ubox
50 57 0.003638336 ubox
51 56 0.003711198 ubox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
showpage
end
%%EOF
