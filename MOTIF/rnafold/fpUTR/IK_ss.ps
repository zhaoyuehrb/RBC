%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCAAAGCAGUGUGGGUUGAUUCUGAGGUGCACUGUGGGAAAGAGCUUGUCGCUGCGGUGUUGCUGUUGGAGACUCGAUUGUUGGUGACAGCGAAAGAACGAUAACAAA\
) } def
/len { sequence length } bind def

/coor [
[118.04793549 134.51524353]
[129.87918091 125.29453278]
[143.86302185 119.86585999]
[129.40196228 115.88114929]
[114.94091034 111.89644623]
[102.29016876 118.96078491]
[88.32125092 115.11168671]
[81.07437897 102.56461334]
[66.61332703 98.57990265]
[52.15227127 94.59519958]
[37.69121552 90.61048889]
[23.23016167 86.62578583]
[8.76910591 82.64108276]
[-5.74688864 78.86141205]
[-20.31491470 75.28752899]
[-34.88294220 71.71365356]
[-49.45096588 68.13977051]
[-64.01899719 64.56589508]
[-78.58702087 60.99201584]
[-91.99525452 68.92025757]
[-106.71839142 65.08831024]
[-114.19412994 52.25675583]
[-128.76216125 48.68287659]
[-143.33018494 45.10899734]
[-157.89820862 41.53511810]
[-172.60888672 50.87083817]
[-189.21136475 46.82992172]
[-197.64776611 32.35803986]
[-212.31109619 29.19784927]
[-227.74765015 34.73364258]
[-240.08345032 23.92808533]
[-236.62849426 7.89701366]
[-220.93693542 3.13181663]
[-209.15090942 14.53452110]
[-194.48757935 17.69470978]
[-184.66790771 9.22137356]
[-171.56118774 7.97796202]
[-159.98449707 14.64869690]
[-154.32432556 26.96709251]
[-139.75630188 30.54096985]
[-125.18827820 34.11484909]
[-110.62025452 37.68872833]
[-98.05489349 29.77372169]
[-83.22992706 33.19061661]
[-75.01313782 46.42398834]
[-60.44511414 49.99786758]
[-45.87709045 53.57174683]
[-31.30906296 57.14562607]
[-16.74103546 60.71950531]
[-2.17300987 64.29338074]
[5.18030024 62.80892944]
[12.75381184 68.18002319]
[27.21486664 72.16473389]
[41.67592239 76.14943695]
[56.13697815 80.13414001]
[70.59803009 84.11885071]
[85.05908966 88.10355377]
[97.70983124 81.03921509]
[111.67874908 84.88831329]
[118.92562103 97.43538666]
[133.38667297 101.42009735]
[147.84773254 105.40480042]
[162.84773254 105.40480042]
[177.30877686 101.42009735]
[191.76983643 97.43538666]
[206.23089600 93.45068359]
[220.69195557 89.46598053]
[235.15299988 85.48126984]
[249.61405945 81.49656677]
[264.07510376 77.51185608]
[271.91412354 64.05126190]
[286.63644409 60.21620560]
[299.42077637 67.77245331]
[313.88183594 63.78775024]
[328.34286499 59.80304337]
[335.92907715 45.93851089]
[351.12026978 41.57929230]
[364.90383911 49.31163788]
[369.10220337 64.54808807]
[361.22454834 78.24911499]
[345.94454956 82.28615570]
[332.32757568 74.26409912]
[317.86651611 78.24880219]
[303.40548706 82.23351288]
[296.29583740 95.27148438]
[281.68704224 99.51854706]
[268.05981445 91.97291565]
[253.59877014 95.95761871]
[239.13771057 99.94232941]
[224.67665100 103.92703247]
[210.21560669 107.91173553]
[195.75454712 111.89644623]
[181.29348755 115.88114929]
[166.83242798 119.86585999]
[180.81573486 125.29423523]
[192.64709473 134.51480103]
[201.32682800 146.74845886]
[206.12150574 160.96151733]
[206.62602234 175.95303345]
[202.79774475 190.45628357]
[194.96014404 203.24580383]
[183.77545166 213.24093628]
[170.18875122 219.59713745]
[155.34803772 221.77734375]
[140.50729370 219.59732056]
[126.92050934 213.24127197]
[115.73571014 203.24627686]
[107.89794922 190.45683289]
[104.06949615 175.95362854]
[104.57383728 160.96211243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 62]
[4 61]
[5 60]
[8 57]
[9 56]
[10 55]
[11 54]
[12 53]
[13 52]
[14 50]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[22 42]
[23 41]
[24 40]
[25 39]
[28 35]
[29 34]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[73 84]
[74 83]
[75 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
