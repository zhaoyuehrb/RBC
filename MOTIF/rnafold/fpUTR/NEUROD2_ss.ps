%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGAGAUGCCACACUCGCUCCGCGGUUCGCAUGGCGCUCUGAAGACGCCGGCGCCCGCCGCCUUGAGGAGCCGCUGCCCCCGCUCCCUGAAGAUGGGGGAACAAUGAAAUAAGCGAGAAGAUCCCUCUUCUCCCCCCUCUCUCUCUUGCCCCCUCCCCCCCUCCCCUCCCCUCUCCCCUUGACUCCUCUCCGAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[207.42384338 216.23814392]
[196.85877991 205.59016418]
[186.29370117 194.94219971]
[175.64573669 184.37713623]
[164.91552734 173.89558411]
[154.18531799 163.41404724]
[143.45512390 152.93251038]
[133.25296021 159.87017822]
[121.97159576 164.86483765]
[109.97718048 167.75436401]
[97.65895844 168.44499207]
[85.41671753 166.91430664]
[73.64775848 163.21200562]
[62.73403931 157.45820618]
[53.02974319 149.83966064]
[44.84981918 140.60363770]
[38.45973969 130.04985046]
[34.06687927 118.52082825]
[19.26842690 120.97148895]
[4.46997166 123.42214966]
[-10.32848358 125.87281036]
[-25.12693787 128.32347107]
[-39.81836319 131.35035706]
[-54.38032913 134.94885254]
[-68.94229889 138.54733276]
[-83.50426483 142.14582825]
[-98.06623077 145.74432373]
[-111.94114685 160.36062622]
[-130.26841736 154.21102905]
[-144.71080017 158.26289368]
[-159.15318298 162.31475830]
[-166.57771301 167.65007019]
[-173.85301208 166.31518555]
[-188.35696411 170.14082336]
[-202.86090088 173.96646118]
[-217.36485291 177.79211426]
[-231.86880493 181.61775208]
[-246.34240723 185.55662537]
[-260.78479004 189.60847473]
[-271.85070801 201.71127319]
[-287.80453491 197.91554260]
[-292.23434448 182.12602234]
[-280.58312988 170.58561707]
[-264.83663940 175.16609192]
[-250.39427185 171.11424255]
[-244.79875183 166.27665710]
[-235.69444275 167.11380005]
[-221.19049072 163.28816223]
[-206.68655396 159.46252441]
[-192.18260193 155.63688660]
[-177.67864990 151.81123352]
[-163.20504761 147.87237549]
[-148.76266479 143.82051086]
[-134.32028198 139.76864624]
[-130.13153076 130.43754578]
[-121.31065369 124.83853149]
[-110.64482880 125.02701569]
[-101.66471863 131.18234253]
[-87.10275269 127.58386230]
[-72.54078674 123.98537445]
[-57.97882080 120.38687897]
[-43.41685104 116.78839111]
[-54.68233490 106.88440704]
[-54.12322998 91.89482880]
[-42.15124893 82.85759735]
[-27.58224487 86.42748260]
[-21.14444923 99.97572327]
[-27.57759857 113.52501678]
[-12.77914333 111.07435608]
[2.01931119 108.62369537]
[16.81776619 106.17303467]
[31.61622047 103.72237396]
[31.79607391 87.24462891]
[35.94031143 71.07364655]
[43.91010666 56.16132736]
[55.33865738 43.41004944]
[69.64711761 33.61823654]
[86.07344055 27.43079185]
[80.79654694 13.38962269]
[75.51965332 -0.65154487]
[70.24275970 -14.69271278]
[64.96586609 -28.73388100]
[59.68897629 -42.77504730]
[54.30251694 -56.77455139]
[48.80681610 -70.73152924]
[34.21600723 -76.80474091]
[28.27047920 -91.44803619]
[34.49761200 -105.97382355]
[49.20295334 -111.76419830]
[63.66208649 -105.38384247]
[69.29666901 -90.61810303]
[62.76379395 -76.22722626]
[68.25949097 -62.27025223]
[73.63961792 -57.19420624]
[73.73014832 -48.05194092]
[79.00703430 -34.01077271]
[84.28392792 -19.96960640]
[89.56082153 -5.92843819]
[94.83771515 8.11273003]
[100.11460876 22.15389824]
[107.47192383 23.60988808]
[109.57270813 8.75772762]
[111.67349243 -6.09443426]
[113.77428436 -20.94659615]
[115.87506866 -35.79875565]
[111.00951385 -49.98770905]
[118.30960846 -63.09147644]
[132.93519592 -66.42193604]
[145.18917847 -57.77090836]
[146.94683838 -42.87424469]
[137.04423523 -31.60944176]
[133.32980347 -17.07661438]
[129.61538696 -2.54378581]
[125.90097809 11.98904228]
[122.18655396 26.52187157]
[129.54386902 27.97786140]
[139.77099609 17.00489235]
[149.99810791 6.03192186]
[160.22521973 -4.94104815]
[170.45234680 -15.91401768]
[180.67945862 -26.88698769]
[190.90657043 -37.85995865]
[194.06216431 -53.95263672]
[209.66218567 -59.00945282]
[221.65867615 -47.82838440]
[217.71067810 -31.91155815]
[201.87954712 -27.63284111]
[191.65243530 -16.65987015]
[181.42530823 -5.68690062]
[171.19819641 5.28606939]
[160.97106934 16.25903893]
[150.74395752 27.23200989]
[140.51684570 38.20497894]
[149.77339172 46.11853409]
[157.53988647 55.38259506]
[163.62593079 65.72428131]
[167.89001465 76.84513855]
[170.24267578 88.42969513]
[170.64820862 100.15444183]
[169.12489319 111.69683838]
[165.74365234 122.74417114]
[160.62533569 133.00207520]
[153.93666077 142.20230103]
[164.66687012 152.68383789]
[175.39706421 163.16539001]
[186.12727356 173.64692688]
[194.46005249 177.40908813]
[196.94166565 184.37713623]
[207.50674438 195.02510071]
[218.07180786 205.67306519]
[213.50212097 191.38607788]
[212.01840210 176.45964050]
[213.68615723 161.55264282]
[218.43176270 147.32312012]
[226.04574585 134.39921570]
[236.19200134 123.35143280]
[248.42262268 114.66743469]
[262.19772339 108.73057556]
[276.90924072 105.80291748]
[291.90777588 106.01369476]
[306.53121948 109.35360718]
[320.13403320 115.67522430]
[332.11581421 124.69949341]
[341.94760132 136.02804565]
[349.19537354 149.16081238]
[353.53924561 163.51806641]
[354.78744507 178.46603394]
[352.88485718 193.34489441]
[347.91549683 207.49781799]
[340.09869385 220.30006409]
[329.77951050 231.18650818]
[317.41348267 239.67658997]
[303.54647827 245.39552307]
[288.79061890 248.09086609]
[273.79730225 247.64363098]
[259.22833252 244.07356262]
[245.72686768 237.53825378]
[233.89164734 228.32887268]
[240.24862671 241.91522217]
[246.60560608 255.50157166]
[252.96257019 269.08792114]
[259.31954956 282.67425537]
[274.62286377 284.62673950]
[286.42654419 294.56033325]
[290.96411133 309.30529785]
[286.78759766 324.15658569]
[275.22973633 334.37515259]
[259.97860718 336.70034790]
[245.90077209 330.39016724]
[237.48843384 317.45819092]
[237.42593384 302.03097534]
[245.73320007 289.03125000]
[239.37622070 275.44488525]
[233.01925659 261.85855103]
[226.66227722 248.27220154]
[220.30529785 234.68585205]
[213.70425415 248.15530396]
[199.30752563 252.36653137]
[186.48818970 244.57778931]
[183.59231567 229.85997009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 146]
[5 145]
[6 144]
[7 143]
[18 72]
[19 71]
[20 70]
[21 69]
[22 68]
[23 62]
[24 61]
[25 60]
[26 59]
[27 58]
[29 54]
[30 53]
[31 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 45]
[39 44]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 93]
[85 92]
[116 133]
[117 132]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
[178 196]
[179 195]
[180 194]
[181 193]
[182 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
