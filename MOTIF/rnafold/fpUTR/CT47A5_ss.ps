%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAGAAUCUUUCCCAACUUGUCUAAGUCCUCUCAGGCCAGCCUUGGUGGGAGGUUUCUAGGAUUCGCUCCCUGCCCUUCCCAUCUUAGGGUGUCGUCUGAGACAGACUCUUAUUCCCUCAAUAAAGAGAGAGACUCUUAUUCCCUCAGCGGCCAGCUCCUCGCCUCCCCUCGGCCGUAGCCACCUCAGUGGUCACCGUCUUCACCGUGGUCGCCUCAGCCCGCUCGCCACCCCAGUUGAGGCGCUGCUGGUGUC\
) } def
/len { sequence length } bind def

/coor [
[145.00267029 185.10011292]
[146.49737549 200.02545166]
[145.05114746 214.95556641]
[140.71957397 229.31654358]
[133.66914368 242.55630493]
[124.17090607 254.16593933]
[112.58996582 263.69912720]
[99.37151337 270.78945923]
[85.02367401 275.16430664]
[70.09798431 276.65554810]
[55.16820145 275.20584106]
[40.80824280 270.87091064]
[27.57011223 263.81741333]
[15.96269703 254.31646729]
[6.43219233 242.73332214]
[-0.65503961 229.51321411]
[-5.02656078 215.16435242]
[-6.51432610 200.23831177]
[-5.06114531 185.30886841]
[-0.72287899 170.94992065]
[6.33370590 157.71343994]
[15.83734894 146.10823059]
[27.42272186 136.58042908]
[40.64524841 129.49594116]
[54.37744904 123.46049500]
[68.10964966 117.42504120]
[53.16495895 116.13808441]
[38.22027206 114.85112000]
[23.27558136 113.56416321]
[6.76567268 121.74888611]
[-7.21047497 111.11592102]
[-22.16983223 110.01245117]
[-37.12918854 108.90898895]
[-52.08854675 107.80551910]
[-67.04790497 106.70204926]
[-82.00725555 105.59857941]
[-96.96661377 104.49510956]
[-111.92597198 103.39164734]
[-126.89774323 102.47183228]
[-141.87966919 101.73581696]
[-156.04287720 108.78665924]
[-168.37516785 100.43418121]
[-183.35710144 99.69816589]
[-198.33903503 98.96215057]
[-214.53649902 107.74901581]
[-228.89454651 97.63767242]
[-243.88438416 97.08556366]
[-258.87420654 96.53345490]
[-273.86404419 95.98134613]
[-288.85388184 95.42924500]
[-303.84371948 94.87713623]
[-318.83355713 94.32502747]
[-333.82339478 93.77291870]
[-348.81323242 93.22080994]
[-355.75915527 102.82709503]
[-366.36529541 107.84838867]
[-377.95913696 107.14695740]
[-387.68011475 101.01134491]
[-393.18539429 91.05656433]
[-408.15716553 90.13674927]
[-423.12893677 89.21694183]
[-438.10070801 88.29712677]
[-447.86978149 100.35302734]
[-462.86807251 104.33180237]
[-477.32846069 98.70353699]
[-485.69058228 85.63240814]
[-484.73907471 70.14453125]
[-474.83978271 58.19532013]
[-459.79919434 54.37947845]
[-445.40072632 60.16428375]
[-437.18090820 73.32535553]
[-422.20913696 74.24517059]
[-407.23736572 75.16497803]
[-392.26559448 76.08479309]
[-379.27825928 63.15431595]
[-360.64486694 63.86449051]
[-348.26110840 78.23097229]
[-333.27127075 78.78308105]
[-318.28146362 79.33518982]
[-303.29162598 79.88729858]
[-288.30178833 80.43940735]
[-273.31195068 80.99151611]
[-258.32211304 81.54362488]
[-243.33227539 82.09573364]
[-228.34243774 82.64784241]
[-219.28617859 74.65550995]
[-206.81123352 74.97525787]
[-197.60301208 83.98021698]
[-182.62107849 84.71623230]
[-167.63914490 85.45224762]
[-154.54756165 78.34876251]
[-141.14366150 86.75388336]
[-126.16172791 87.48989868]
[-122.10269165 85.02284241]
[-116.45564270 85.05998230]
[-110.82250214 88.43228912]
[-95.86314392 89.53575897]
[-80.90379333 90.63922119]
[-65.94443512 91.74269104]
[-50.98507690 92.84616089]
[-36.02571869 93.94963074]
[-21.06636238 95.05310059]
[-6.10700655 96.15656281]
[3.23729372 88.50299072]
[15.69200802 89.28168488]
[24.56254196 98.61947632]
[39.50722885 99.90643311]
[54.45191956 101.19338989]
[69.39660645 102.48035431]
[74.63442993 97.11237335]
[62.13623428 88.81809235]
[48.26427078 83.11119843]
[45.22979736 68.42134094]
[55.70510483 57.68504715]
[70.46517944 60.35717392]
[76.51157379 74.08552551]
[85.11007690 86.37641144]
[90.34789276 81.00843048]
[88.69456482 66.09982300]
[87.04122925 51.19121933]
[74.54717255 41.51268005]
[72.63921356 25.82398033]
[82.44931030 13.43295097]
[98.15730286 11.69096756]
[110.44391632 21.63151741]
[112.01972961 37.35705185]
[101.94983673 49.53788376]
[103.60316467 64.44648743]
[105.25650024 79.35509491]
[118.97026062 85.43397522]
[132.68280029 91.51233673]
[144.83964539 82.72536469]
[156.99650574 73.93840027]
[169.15336609 65.15142822]
[181.31022644 56.36446381]
[177.76445007 47.25830078]
[176.07426453 37.64158630]
[176.30216980 27.88815498]
[178.43618774 18.37653732]
[182.39038086 9.47525787]
[188.00842285 1.52856302]
[195.06965637 -5.15689468]
[203.29780579 -10.32388878]
[212.37181091 -13.77451420]
[221.93832397 -15.37776852]
[231.62550354 -15.07451916]
[241.05737305 -12.87968254]
[249.86857605 -8.88151932]
[257.71835327 -3.23809171]
[269.19586182 -12.89556503]
[280.67337036 -22.55303764]
[292.15087891 -32.21051025]
[303.62838745 -41.86798477]
[315.10589600 -51.52545929]
[309.40283203 -65.53724670]
[308.31082153 -80.62574768]
[311.93679810 -95.31272125]
[319.92556763 -108.15930939]
[331.49444580 -117.90692139]
[345.51007080 -123.60058594]
[360.59930420 -124.68250275]
[375.28384399 -121.04667664]
[388.12506104 -113.04930115]
[397.86492920 -101.47387695]
[403.54919434 -87.45445251]
[404.62100220 -72.36450958]
[400.97534180 -57.68240356]
[392.96936035 -44.84653473]
[381.38742065 -35.11443710]
[367.36419678 -29.43955612]
[352.27352905 -28.37786293]
[337.59387207 -32.03337097]
[324.76336670 -40.04794693]
[313.28585815 -30.39047623]
[301.80834961 -20.73300171]
[290.33084106 -11.07552910]
[278.85333252 -1.41805601]
[267.37582397 8.23941708]
[270.29898071 13.83221245]
[272.47988892 19.75402641]
[287.34344482 17.73531532]
[302.20697021 15.71660423]
[317.07052612 13.69789410]
[331.93405151 11.67918301]
[344.56521606 1.22042203]
[359.84207153 7.18282557]
[362.04907227 23.43278313]
[348.91586304 33.25373459]
[333.95275879 26.54272270]
[319.08923340 28.56143379]
[304.22567749 30.58014297]
[289.36215210 32.59885406]
[274.49859619 34.61756516]
[268.89111328 56.74372482]
[253.85154724 73.98448944]
[232.59313965 82.58338165]
[209.69094849 80.63814545]
[190.09719849 68.52131653]
[177.94033813 77.30828857]
[165.78347778 86.09525299]
[153.62661743 94.88222504]
[141.46975708 103.66918945]
[139.54229736 118.54483795]
[149.05818176 130.13999939]
[158.57408142 141.73515320]
[168.08998108 153.33030701]
[177.67684937 164.86685181]
[187.33432007 176.34436035]
[196.99180603 187.82186890]
[206.64927673 199.29939270]
[214.54505920 203.83378601]
[216.35379028 210.97750854]
[225.86968994 222.57266235]
[235.38558960 234.16781616]
[244.90148926 245.76298523]
[254.41738892 257.35812378]
[263.93328857 268.95330811]
[273.44918823 280.54846191]
[282.96508789 292.14361572]
[292.48098755 303.73876953]
[306.89035034 298.97073364]
[322.04891968 299.73385620]
[335.90661621 305.92489624]
[346.58926392 316.70663452]
[352.65213013 330.62084961]
[353.27529907 345.78582764]
[348.37448120 360.15057373]
[338.61242676 371.77239990]
[325.30941772 379.07955933]
[310.26458740 381.08380127]
[295.51257324 377.51409912]
[283.04852295 368.85317993]
[274.55804443 356.27236938]
[271.18945312 341.47314453]
[273.39828491 326.45697021]
[280.88583374 313.25466919]
[271.36993408 301.65951538]
[261.85403442 290.06436157]
[252.33813477 278.46917725]
[242.82223511 266.87402344]
[233.30633545 255.27888489]
[223.79043579 243.68371582]
[214.27453613 232.08856201]
[204.75863647 220.49340820]
[195.17176819 208.95686340]
[185.51429749 197.47935486]
[175.85681152 186.00184631]
[166.19934082 174.52433777]
[159.50738525 171.43858337]
[156.49482727 162.84620667]
[146.97892761 151.25105286]
[137.46302795 139.65589905]
[127.94713593 128.06072998]
[130.73910522 142.79861450]
[133.53108215 157.53648376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 109]
[27 108]
[28 107]
[29 106]
[31 103]
[32 102]
[33 101]
[34 100]
[35 99]
[36 98]
[37 97]
[38 96]
[39 93]
[40 92]
[42 90]
[43 89]
[44 88]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[59 74]
[60 73]
[61 72]
[62 71]
[118 129]
[119 128]
[120 127]
[131 202]
[132 201]
[133 200]
[134 199]
[135 198]
[149 178]
[150 177]
[151 176]
[152 175]
[153 174]
[154 173]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
[203 253]
[204 252]
[205 251]
[206 250]
[207 248]
[208 247]
[209 246]
[210 245]
[212 244]
[213 243]
[214 242]
[215 241]
[216 240]
[217 239]
[218 238]
[219 237]
[220 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
