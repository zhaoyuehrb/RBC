%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCGGCGCGGGGACGCGCGGUGACCGUUGGCGCCGAGGGGAGGAGGCAGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGUUGCGCAGAUCCGGGCCGCGGCUGUGGGGAGGGCGACGGAGCGGGUGACCUUCCGGAGGCGGGAGCGAGCGAGGAGGCCCGGGAGCGCCGAGCGUCGCCGCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[92.78090668 532.65136719]
[98.82723999 516.81219482]
[98.82723999 501.81222534]
[98.82723999 486.81222534]
[98.82723999 471.81222534]
[98.82723999 456.81222534]
[98.82723999 441.81222534]
[98.82723999 426.81222534]
[98.82723999 411.81222534]
[98.82723999 396.81222534]
[98.71286774 381.81265259]
[98.48411560 366.81439209]
[98.25537109 351.81616211]
[90.32488251 339.20834351]
[97.85083008 325.29177856]
[97.62208557 310.29351807]
[97.39333344 295.29528809]
[97.16458893 280.29702759]
[96.93583679 265.29876709]
[89.00534821 252.69096375]
[96.53129578 238.77439880]
[96.30255127 223.77615356]
[96.07380676 208.77789307]
[95.84505463 193.77963257]
[95.61631012 178.78138733]
[84.50443268 162.95971680]
[94.57528687 145.50013733]
[93.88925934 130.51583862]
[93.20323181 115.53153992]
[86.11022186 112.62143707]
[80.44300842 106.41362000]
[77.72466278 97.67933655]
[63.22595215 101.52478790]
[48.72724152 105.37023163]
[34.25827789 109.32611847]
[19.81989861 113.39222717]
[5.38151884 117.45832825]
[1.67301464 132.36277771]
[-9.00241184 143.40499878]
[-23.77312279 147.61471558]
[-38.66587448 143.85951233]
[-49.67458725 133.14952087]
[-53.83797455 118.36568451]
[-50.03610992 103.48477936]
[-39.29166794 92.50968933]
[-24.49485588 88.39266205]
[-9.62593937 92.24115753]
[1.31541669 103.01994324]
[15.75379658 98.95384216]
[30.19217682 94.88774109]
[35.78062057 90.04676056]
[44.88179779 90.87152100]
[59.38050461 87.02607727]
[73.87921143 83.18063354]
[84.80434418 72.90242767]
[89.52653503 58.66511917]
[94.24872589 44.42781067]
[91.24931335 28.89352417]
[102.59990692 19.24918747]
[107.32209778 5.01188040]
[102.24425507 -6.84750080]
[106.47337341 -18.61021996]
[117.22812653 -24.15292931]
[122.16688538 -38.31656647]
[127.10565186 -52.48020554]
[131.93626404 -66.68109131]
[136.65846252 -80.91839600]
[141.38064575 -95.15570831]
[134.54489136 -109.15249634]
[139.53668213 -123.52388000]
[152.92260742 -129.95446777]
[157.64480591 -144.19177246]
[162.36700439 -158.42909241]
[167.08918762 -172.66639709]
[171.81138611 -186.90370178]
[161.57969666 -202.91915894]
[164.92285156 -221.35644531]
[179.69937134 -232.43952942]
[179.92811584 -247.43778992]
[180.15686035 -262.43603516]
[180.38560486 -277.43429565]
[171.05137634 -293.30523682]
[180.63270569 -308.00576782]
[180.63270569 -323.00576782]
[177.50230408 -331.59133911]
[180.74882507 -338.23406982]
[180.97756958 -353.23233032]
[181.20632935 -368.23059082]
[181.43507385 -383.22885132]
[173.90911865 -397.14541626]
[181.83961487 -409.75320435]
[182.06835938 -424.75146484]
[182.29710388 -439.74972534]
[182.52586365 -454.74798584]
[182.75460815 -469.74624634]
[175.22865295 -483.66278076]
[183.15914917 -496.27059937]
[183.38789368 -511.26885986]
[170.16436768 -519.08123779]
[162.63264465 -532.46667480]
[162.81872559 -547.82440186]
[170.67256165 -561.02337646]
[184.08149719 -568.51312256]
[199.43859863 -568.27893066]
[212.61288452 -560.38372803]
[220.06054688 -546.95141602]
[219.77819824 -531.59509277]
[211.84176636 -518.44561768]
[198.38615417 -511.04010010]
[198.15739441 -496.04183960]
[205.69970703 -483.19805908]
[197.75285339 -469.51748657]
[197.52410889 -454.51922607]
[197.29536438 -439.52096558]
[197.06661987 -424.52270508]
[196.83787537 -409.52447510]
[204.38017273 -396.68066406]
[196.43333435 -383.00009155]
[196.20457458 -368.00183105]
[195.97583008 -353.00360107]
[195.74708557 -338.00534058]
[195.63270569 -323.00576782]
[195.63270569 -308.00576782]
[203.96286011 -299.23110962]
[204.08329773 -286.73181152]
[195.38386536 -277.20553589]
[195.15512085 -262.20730591]
[194.92637634 -247.20903015]
[194.69761658 -232.21078491]
[200.42010498 -229.47984314]
[205.27581787 -225.40222168]
[218.83259583 -231.82200623]
[232.38937378 -238.24180603]
[245.94616699 -244.66159058]
[259.50292969 -251.08137512]
[265.92269897 -257.58508301]
[273.31576538 -257.49392700]
[286.96887207 -263.70623779]
[296.05432129 -277.35858154]
[312.40090942 -276.04666138]
[319.19265747 -261.12002563]
[309.44281006 -247.93395996]
[293.18118286 -250.05313110]
[279.52807617 -243.84082031]
[265.92272949 -237.52459717]
[252.36595154 -231.10481262]
[238.80917358 -224.68501282]
[225.25238037 -218.26522827]
[211.69560242 -211.84544373]
[209.86599731 -197.49880981]
[200.33520508 -186.34428406]
[186.04869080 -182.18150330]
[181.32649231 -167.94419861]
[176.60430908 -153.70689392]
[171.88211060 -139.46958923]
[167.15992737 -125.23227692]
[174.04957581 -112.07673645]
[169.46340942 -97.57081604]
[155.61795044 -90.43350983]
[150.89576721 -76.19620514]
[146.17356873 -61.95890045]
[147.05195618 -54.61763000]
[141.26928711 -47.54144669]
[136.33052063 -33.37780762]
[131.39176941 -19.21417046]
[135.59870911 -2.17862797]
[121.55941010 9.73407269]
[116.83721161 23.97138023]
[120.17439270 38.48731995]
[108.48603821 49.15000153]
[103.76383972 63.38731003]
[99.04164886 77.62461853]
[118.94396973 94.68758392]
[108.18753052 114.84550476]
[108.87356567 129.82980347]
[109.55959320 144.81411743]
[118.00838470 151.67230225]
[121.21976471 161.83952332]
[118.36306763 171.88388062]
[110.61456299 178.55262756]
[110.84331512 193.55088806]
[111.07205963 208.54914856]
[111.30080414 223.54740906]
[111.52955627 238.54565430]
[119.47640991 252.22622681]
[111.93409729 265.07000732]
[112.16284180 280.06826782]
[112.39159393 295.06652832]
[112.62033844 310.06478882]
[112.84908295 325.06304932]
[120.79593658 338.74362183]
[113.25362396 351.58740234]
[113.48237610 366.58566284]
[113.71112061 381.58392334]
[116.97209167 390.12075806]
[113.82723999 396.81222534]
[113.82723999 411.81222534]
[113.82723999 426.81222534]
[113.82723999 441.81222534]
[113.82723999 456.81222534]
[113.82723999 471.81222534]
[113.82723999 486.81222534]
[113.82723999 501.81222534]
[113.82723999 516.81219482]
[119.87358093 532.65136719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 194]
[12 193]
[13 192]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[21 184]
[22 183]
[23 182]
[24 181]
[25 180]
[27 176]
[28 175]
[29 174]
[32 54]
[33 53]
[34 52]
[35 50]
[36 49]
[37 48]
[55 172]
[56 171]
[57 170]
[59 168]
[60 167]
[63 165]
[64 164]
[65 163]
[66 161]
[67 160]
[68 159]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[78 129]
[79 128]
[80 127]
[81 126]
[83 123]
[84 122]
[86 121]
[87 120]
[88 119]
[89 118]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[97 110]
[98 109]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
