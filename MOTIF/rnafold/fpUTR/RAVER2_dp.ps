%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAVER2)
} def

/sequence { (\
CCCGGGCCUCCUCCCGCUUUCUCUCUCCGCUUCCCCUGGAGCCUCCGAGGAGUCCGCAGCCGCUGGGCGCCCGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 74 0.005232315 ubox
1 75 0.995438723 ubox
2 73 0.003723167 ubox
2 74 0.999926326 ubox
2 75 0.006166699 ubox
3 16 0.004996673 ubox
3 73 0.999947219 ubox
3 74 0.004388687 ubox
4 15 0.005261259 ubox
4 72 0.999958365 ubox
5 14 0.005269155 ubox
5 55 0.007937864 ubox
5 71 0.999941884 ubox
6 13 0.005223487 ubox
6 17 0.003620586 ubox
6 53 0.003345495 ubox
6 54 0.009283852 ubox
6 57 0.003202643 ubox
6 68 0.005313587 ubox
6 70 0.999872170 ubox
7 16 0.003855480 ubox
7 56 0.003633520 ubox
7 67 0.006966463 ubox
7 69 0.998972335 ubox
8 41 0.008265935 ubox
8 49 0.004583109 ubox
8 52 0.302784491 ubox
8 66 0.008446497 ubox
8 67 0.322746358 ubox
9 40 0.008450239 ubox
9 48 0.004593462 ubox
9 51 0.338099795 ubox
9 58 0.003610061 ubox
9 65 0.007974359 ubox
9 66 0.201050342 ubox
9 67 0.722901050 ubox
10 39 0.008468127 ubox
10 47 0.004582428 ubox
10 50 0.341576020 ubox
10 65 0.197837887 ubox
10 66 0.790443194 ubox
10 67 0.221815177 ubox
11 38 0.008464098 ubox
11 41 0.003644570 ubox
11 49 0.341560304 ubox
11 52 0.059402121 ubox
11 59 0.028197258 ubox
11 65 0.790228256 ubox
11 66 0.222197705 ubox
11 67 0.051383523 ubox
12 40 0.003712005 ubox
12 48 0.341050112 ubox
12 51 0.065749681 ubox
12 58 0.029534862 ubox
12 65 0.216704254 ubox
12 66 0.045693218 ubox
12 67 0.019921511 ubox
13 39 0.003700218 ubox
13 47 0.338475201 ubox
13 50 0.066324004 ubox
13 65 0.051192742 ubox
13 66 0.033654320 ubox
13 67 0.071074820 ubox
14 38 0.003669892 ubox
14 39 0.006571664 ubox
14 49 0.065888059 ubox
14 50 0.007941794 ubox
14 65 0.033932588 ubox
14 66 0.071441562 ubox
15 29 0.008819618 ubox
15 38 0.006588162 ubox
15 47 0.072443823 ubox
15 49 0.008239920 ubox
15 56 0.059291455 ubox
15 62 0.291565881 ubox
15 65 0.071412998 ubox
16 28 0.020856262 ubox
16 30 0.051485655 ubox
16 37 0.004682838 ubox
16 42 0.215930643 ubox
16 46 0.087722525 ubox
16 53 0.077316102 ubox
16 55 0.061577998 ubox
16 57 0.407418697 ubox
16 60 0.791938789 ubox
16 61 0.211462366 ubox
16 63 0.050103376 ubox
16 64 0.023087174 ubox
16 68 0.005521964 ubox
17 29 0.051528872 ubox
17 41 0.212290487 ubox
17 49 0.008371400 ubox
17 50 0.007695539 ubox
17 52 0.081689275 ubox
17 56 0.407807702 ubox
17 59 0.817864280 ubox
17 62 0.050535999 ubox
17 67 0.005505474 ubox
18 39 0.003899329 ubox
18 40 0.183960680 ubox
18 41 0.021130294 ubox
18 48 0.011480565 ubox
18 49 0.007473692 ubox
18 50 0.003770269 ubox
18 51 0.068334711 ubox
18 52 0.111243839 ubox
18 58 0.790689509 ubox
18 59 0.032995035 ubox
18 66 0.003838236 ubox
19 38 0.007886185 ubox
19 39 0.154297648 ubox
19 40 0.071524489 ubox
19 41 0.027794898 ubox
19 47 0.011545910 ubox
19 48 0.008326488 ubox
19 49 0.005746795 ubox
19 50 0.048750389 ubox
19 51 0.211427200 ubox
19 52 0.212316404 ubox
19 58 0.045033645 ubox
19 59 0.010764788 ubox
20 38 0.109759103 ubox
20 39 0.098546552 ubox
20 40 0.035927299 ubox
20 47 0.008149815 ubox
20 48 0.011142590 ubox
20 49 0.007579880 ubox
20 50 0.219399264 ubox
20 51 0.224236668 ubox
20 58 0.013492402 ubox
21 38 0.120024579 ubox
21 39 0.039204177 ubox
21 41 0.070917645 ubox
21 47 0.011751234 ubox
21 49 0.225781055 ubox
21 50 0.224056077 ubox
21 52 0.756835859 ubox
21 59 0.015713595 ubox
22 38 0.031512207 ubox
22 39 0.019004846 ubox
22 40 0.071510601 ubox
22 48 0.226299791 ubox
22 49 0.037338537 ubox
22 50 0.083016533 ubox
22 51 0.755716315 ubox
22 58 0.015372911 ubox
23 38 0.037084399 ubox
23 39 0.071584904 ubox
23 41 0.023725729 ubox
23 47 0.225911809 ubox
23 49 0.266865764 ubox
23 50 0.743070338 ubox
23 52 0.217580154 ubox
23 59 0.005185951 ubox
24 38 0.055400700 ubox
24 39 0.012105842 ubox
24 40 0.023945437 ubox
24 48 0.293783948 ubox
24 49 0.147925422 ubox
24 50 0.087406968 ubox
24 51 0.213507685 ubox
24 58 0.005163558 ubox
25 38 0.044335004 ubox
25 39 0.023999033 ubox
25 41 0.219330944 ubox
25 47 0.299019297 ubox
25 49 0.728555919 ubox
25 50 0.194382168 ubox
25 52 0.381768223 ubox
25 59 0.003225916 ubox
26 38 0.021929301 ubox
26 40 0.232998637 ubox
26 48 0.738218759 ubox
26 49 0.165903923 ubox
26 50 0.003690990 ubox
26 51 0.382394972 ubox
26 58 0.003333416 ubox
27 38 0.007562471 ubox
27 39 0.240613003 ubox
27 47 0.736214060 ubox
27 49 0.032866553 ubox
27 50 0.382496976 ubox
28 38 0.240904989 ubox
28 47 0.156794226 ubox
28 49 0.382211583 ubox
28 56 0.006955842 ubox
29 37 0.200531366 ubox
29 42 0.937151272 ubox
29 46 0.086429951 ubox
29 53 0.011000732 ubox
29 55 0.006746011 ubox
29 57 0.013109792 ubox
30 39 0.015014775 ubox
30 41 0.939812986 ubox
30 49 0.003186806 ubox
30 52 0.011536739 ubox
30 56 0.013097597 ubox
31 38 0.015635228 ubox
31 39 0.003628634 ubox
31 40 0.904688773 ubox
31 41 0.096747404 ubox
31 48 0.005626604 ubox
31 51 0.010625361 ubox
31 52 0.011290634 ubox
32 38 0.006583143 ubox
32 39 0.866369360 ubox
32 40 0.275741003 ubox
32 47 0.004724814 ubox
32 48 0.014035435 ubox
32 50 0.008325362 ubox
32 51 0.015119852 ubox
33 38 0.847540465 ubox
33 39 0.375014027 ubox
33 47 0.013920102 ubox
33 49 0.008262248 ubox
33 50 0.015722740 ubox
34 38 0.373091650 ubox
34 49 0.015442012 ubox
34 50 0.012608056 ubox
35 49 0.013110031 ubox
35 50 0.016366865 ubox
36 49 0.016631633 ubox
37 47 0.028034101 ubox
37 48 0.014713709 ubox
37 56 0.005054458 ubox
38 46 0.055988993 ubox
38 55 0.007372290 ubox
39 45 0.056034422 ubox
39 54 0.007378232 ubox
40 44 0.048751922 ubox
40 53 0.007165609 ubox
41 57 0.006093923 ubox
42 50 0.016971831 ubox
42 56 0.006241911 ubox
43 49 0.018560812 ubox
43 50 0.004042865 ubox
43 52 0.034773915 ubox
44 48 0.017851443 ubox
44 49 0.003807275 ubox
44 51 0.035695508 ubox
44 75 0.003253433 ubox
45 50 0.035773911 ubox
45 74 0.004344485 ubox
46 73 0.004391359 ubox
47 72 0.004422508 ubox
48 53 0.003168079 ubox
49 55 0.004600654 ubox
49 71 0.004976237 ubox
50 54 0.004711291 ubox
50 70 0.004985122 ubox
51 64 0.007857435 ubox
52 60 0.008116912 ubox
52 63 0.008634018 ubox
52 68 0.201655815 ubox
53 59 0.008010807 ubox
53 62 0.008476912 ubox
53 66 0.009633942 ubox
53 67 0.209520499 ubox
54 65 0.014154324 ubox
54 66 0.216805295 ubox
54 67 0.034858970 ubox
55 62 0.010915462 ubox
55 65 0.216738985 ubox
55 66 0.035229499 ubox
56 61 0.011739917 ubox
56 63 0.223542483 ubox
56 64 0.055050700 ubox
56 68 0.008732465 ubox
56 70 0.012570101 ubox
57 62 0.227756585 ubox
57 65 0.035795459 ubox
57 67 0.008526578 ubox
57 69 0.013531481 ubox
58 64 0.039796722 ubox
59 63 0.039454697 ubox
59 68 0.476636693 ubox
60 66 0.009202370 ubox
60 67 0.477222783 ubox
61 65 0.009933680 ubox
61 66 0.477061682 ubox
62 68 0.006870393 ubox
63 67 0.006828016 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
4 72 0.9500000 lbox
5 71 0.9500000 lbox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
16 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
showpage
end
%%EOF
