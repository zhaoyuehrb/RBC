%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACUGGAGAGGAGUGAGUGGCGGGCUGGGCGGCGGCGGCCGUAGCCGCGGGUGCCUCCCCGCCUCACCGCUUCGCAGGCAGCACCGCCUCCCGGGCCGCGGCCGCCCGGCCGGGUCCUCUGCGCGUUCCCGGGCCCGGAACCGGCACACGAUGCACCCGGCUGCGUUCUGAUCGCCGCCGCGCCUCAGCCUCUGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[99.88545227 451.90869141]
[99.18585205 436.92501831]
[85.89081573 430.20880127]
[77.68802643 417.65609741]
[76.86429596 402.58337402]
[83.74082947 389.03308105]
[96.56015015 380.68969727]
[95.86054993 365.70602417]
[85.60355377 351.47039795]
[94.18303680 335.18078613]
[93.25048828 320.20980835]
[92.31794739 305.23883057]
[91.38539886 290.26785278]
[82.87181854 278.04620361]
[89.73619843 263.79171753]
[88.80365753 248.82072449]
[87.87110901 233.84974670]
[84.31507874 227.36459351]
[87.04232025 218.63902283]
[86.34271240 203.65534973]
[85.64310455 188.67167664]
[84.94350433 173.68798828]
[84.24389648 158.70431519]
[83.54428864 143.72064209]
[83.22464752 97.12638092]
[70.64035797 88.96331787]
[58.05606461 80.80025482]
[45.47177124 72.63719177]
[32.88747787 64.47412872]
[20.30318832 56.31106567]
[7.71889544 48.14800262]
[-4.86539650 39.98494339]
[-17.44968796 31.82187843]
[-30.03398132 23.65881538]
[-42.61827087 15.49575329]
[-58.40663910 14.47687149]
[-64.87354279 1.05940723]
[-77.45783997 -7.10365534]
[-90.04212952 -15.26671791]
[-102.62641907 -23.42978096]
[-115.21071625 -31.59284401]
[-127.79500580 -39.75590515]
[-140.33384705 -31.20879173]
[-155.14982605 -28.12176704]
[-169.97888184 -30.93476105]
[-182.56709290 -39.18852234]
[-191.01329041 -51.59926987]
[-194.05615234 -66.25827026]
[-191.26248169 -80.92539978]
[-203.84677124 -89.08846283]
[-216.43106079 -97.25152588]
[-229.01535034 -105.41458893]
[-241.66275024 -113.47954559]
[-254.37246704 -121.44591522]
[-267.14373779 -129.31320190]
[-279.97583008 -137.08094788]
[-292.80789185 -144.84869385]
[-305.63998413 -152.61643982]
[-320.04119873 -144.49961853]
[-336.47656250 -144.74937439]
[-350.46383667 -153.20292664]
[-358.23614502 -167.47311401]
[-357.75628662 -183.62162781]
[-370.70761108 -191.18887329]
[-385.92886353 -186.93568420]
[-399.65814209 -194.76396179]
[-403.75015259 -210.02931213]
[-395.77716064 -223.67507935]
[-380.46942139 -227.60546875]
[-366.90869141 -219.48866272]
[-363.14038086 -204.14019775]
[-350.18905640 -196.57295227]
[-338.79467773 -204.10891724]
[-325.19946289 -206.00790405]
[-312.05004883 -201.84263611]
[-301.93106079 -192.37202454]
[-296.85717773 -179.40354919]
[-297.87222290 -165.44851685]
[-285.04016113 -157.68077087]
[-272.20806885 -149.91302490]
[-259.37600708 -142.14527893]
[-252.02059937 -141.37025452]
[-246.40609741 -134.15563965]
[-233.69638062 -126.18927002]
[-226.35392761 -125.29994202]
[-220.85229492 -117.99887848]
[-208.26800537 -109.83582306]
[-195.68370056 -101.67276001]
[-183.09941101 -93.50969696]
[-170.84545898 -102.04020691]
[-156.21945190 -105.23793030]
[-141.44352722 -102.58517456]
[-128.77482605 -94.45550537]
[-120.16065216 -82.06156921]
[-116.93925476 -67.27422333]
[-119.63194275 -52.34019852]
[-107.04765320 -44.17713547]
[-94.46336365 -36.01407242]
[-81.87906647 -27.85100937]
[-69.29477692 -19.68794823]
[-56.71048355 -11.52488518]
[-41.82223129 -11.08987999]
[-34.45521164 2.91146135]
[-21.87091827 11.07452393]
[-9.28662586 19.23758698]
[3.29766607 27.40065002]
[15.88195801 35.56371307]
[28.46624947 43.72677612]
[41.05054092 51.88983917]
[53.63483429 60.05290222]
[66.21912384 68.21596527]
[78.80342102 76.37902832]
[91.38771057 84.54209137]
[106.29890442 82.91230774]
[116.82270813 72.22354889]
[127.34651184 61.53478622]
[137.87031555 50.84602737]
[148.39411926 40.15726852]
[158.91792297 29.46850967]
[153.31071472 15.30944347]
[153.95378113 0.09411000]
[160.73568726 -13.54134178]
[172.48144531 -23.23448753]
[187.15602112 -27.30593109]
[202.21696472 -25.05027008]
[215.05487061 -16.85831261]
[223.44549561 -4.14936352]
[225.93510437 10.87467480]
[222.09236145 25.61079597]
[212.58305359 37.50587845]
[199.05473328 44.49902725]
[183.85124207 45.37863922]
[169.60667419 39.99231339]
[159.08287048 50.68107224]
[148.55908203 61.36983109]
[138.03527832 72.05859375]
[127.51146698 82.74735260]
[116.98767090 93.43611145]
[122.02041626 107.56661987]
[136.93161011 109.19640350]
[151.84281921 110.82618713]
[166.75401306 112.45597076]
[181.66520691 114.08575439]
[196.58862305 115.59953308]
[211.52336121 116.99722290]
[226.45811462 118.39491272]
[241.39285278 119.79260254]
[246.14900208 117.60692596]
[250.80171204 117.48162842]
[254.58195496 119.03104401]
[256.98596191 121.61972809]
[271.83926392 123.71245575]
[283.34207153 113.11908722]
[298.96530151 112.44960022]
[311.33218384 122.02011108]
[314.60342407 137.31170654]
[307.23443604 151.10418701]
[292.70465088 156.88513184]
[277.87457275 151.92497253]
[269.74652100 138.56575012]
[254.89323425 136.47302246]
[239.99516296 134.72734070]
[225.06042480 133.32965088]
[210.12567139 131.93196106]
[195.19093323 130.53427124]
[188.23323059 133.04284668]
[180.03543091 128.99694824]
[165.12422180 127.36716461]
[150.21302795 125.73738861]
[135.30183411 124.10760498]
[120.39063263 122.47782135]
[114.92496490 127.61362457]
[118.35480499 142.21623230]
[103.99362946 137.88523865]
[98.52796936 143.02104187]
[99.22756958 158.00471497]
[99.92717743 172.98838806]
[100.62678528 187.97206116]
[101.32638550 202.95573425]
[102.02599335 217.93942261]
[102.84209442 232.91720581]
[103.77464294 247.88818359]
[104.70718384 262.85916138]
[113.28746796 276.15161133]
[106.35638428 289.33529663]
[107.28893280 304.30627441]
[108.22147369 319.27725220]
[109.15402222 334.24826050]
[118.29225159 343.35745239]
[118.75697327 355.85079956]
[110.84422302 365.00640869]
[111.54383087 379.99008179]
[125.08480835 387.10269165]
[133.19403076 399.95324707]
[133.77835083 415.03720093]
[126.78090668 428.29959106]
[114.16952515 436.22543335]
[114.86913300 451.20910645]
[124.17282104 464.71368408]
[116.88596344 479.40496826]
[100.50466156 480.16983032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[7 192]
[8 191]
[10 188]
[11 187]
[12 186]
[13 185]
[15 183]
[16 182]
[17 181]
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[24 175]
[25 113]
[26 112]
[27 111]
[28 110]
[29 109]
[30 108]
[31 107]
[32 106]
[33 105]
[34 104]
[35 103]
[37 101]
[38 100]
[39 99]
[40 98]
[41 97]
[42 96]
[49 89]
[50 88]
[51 87]
[52 86]
[53 84]
[54 83]
[55 81]
[56 80]
[57 79]
[58 78]
[63 72]
[64 71]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[139 171]
[140 170]
[141 169]
[142 168]
[143 167]
[144 165]
[145 164]
[146 163]
[147 162]
[151 161]
[152 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
