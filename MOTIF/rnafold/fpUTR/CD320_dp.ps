%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CD320)
} def

/sequence { (\
GUGCGCGUGCGCAGGGAUAAGAGAGCGGUCUGGACAGCGCGUGGCCGGCGCCGCUGUGGGGACAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.009798385 ubox
1 12 0.908285322 ubox
1 18 0.010840830 ubox
1 26 0.005022420 ubox
1 40 0.003756831 ubox
1 42 0.017405148 ubox
1 45 0.007992974 ubox
1 49 0.009646543 ubox
1 51 0.036445226 ubox
2 9 0.009611852 ubox
2 11 0.908509463 ubox
2 13 0.351685788 ubox
2 17 0.007805094 ubox
2 25 0.004144745 ubox
2 27 0.005517399 ubox
2 39 0.003739235 ubox
2 41 0.046768300 ubox
2 43 0.005905804 ubox
2 44 0.007370604 ubox
2 48 0.009147247 ubox
2 50 0.036530574 ubox
3 8 0.004774372 ubox
3 10 0.909418126 ubox
3 12 0.390445554 ubox
3 26 0.007244105 ubox
3 38 0.003745761 ubox
3 40 0.066798343 ubox
3 42 0.098346810 ubox
3 45 0.009702952 ubox
3 46 0.003401589 ubox
3 49 0.036589892 ubox
3 51 0.011225164 ubox
3 66 0.006129661 ubox
4 9 0.908130536 ubox
4 11 0.390502911 ubox
4 25 0.007245855 ubox
4 27 0.028821015 ubox
4 37 0.003743614 ubox
4 39 0.066835402 ubox
4 41 0.101464531 ubox
4 43 0.017456683 ubox
4 44 0.007497032 ubox
4 47 0.006613269 ubox
4 48 0.035548913 ubox
4 50 0.011301689 ubox
4 65 0.006181667 ubox
5 10 0.380396616 ubox
5 12 0.033077016 ubox
5 26 0.029183090 ubox
5 38 0.066844162 ubox
5 40 0.101614929 ubox
5 42 0.035239172 ubox
5 45 0.024795711 ubox
5 46 0.007674935 ubox
5 49 0.011274440 ubox
5 54 0.005688430 ubox
5 66 0.006789124 ubox
6 11 0.033067692 ubox
6 25 0.029177096 ubox
6 27 0.005044630 ubox
6 37 0.066760719 ubox
6 39 0.101614549 ubox
6 41 0.035961581 ubox
6 43 0.008093312 ubox
6 44 0.024723864 ubox
6 47 0.014120662 ubox
6 48 0.010344332 ubox
6 53 0.005962433 ubox
6 65 0.006830092 ubox
7 18 0.004424767 ubox
7 26 0.005080360 ubox
7 35 0.012404631 ubox
7 38 0.101392925 ubox
7 40 0.036050994 ubox
7 42 0.009874395 ubox
7 45 0.012956212 ubox
7 46 0.014545786 ubox
7 52 0.006544228 ubox
8 17 0.004516585 ubox
8 25 0.005023758 ubox
8 27 0.006679069 ubox
8 34 0.012314794 ubox
8 36 0.084175386 ubox
8 37 0.083331763 ubox
8 39 0.036036936 ubox
8 41 0.026724164 ubox
8 43 0.009905110 ubox
8 44 0.011306686 ubox
9 26 0.008844120 ubox
9 35 0.095640186 ubox
9 38 0.036090773 ubox
9 40 0.029673291 ubox
9 42 0.015064437 ubox
9 45 0.005299699 ubox
9 51 0.006975741 ubox
10 25 0.008853759 ubox
10 27 0.022922871 ubox
10 32 0.010588986 ubox
10 37 0.036080124 ubox
10 39 0.029685544 ubox
10 41 0.015735108 ubox
10 43 0.003407816 ubox
10 44 0.004894553 ubox
10 50 0.006988775 ubox
11 26 0.024200249 ubox
11 31 0.005304796 ubox
11 38 0.029696064 ubox
11 40 0.015893142 ubox
11 42 0.003821532 ubox
11 49 0.006989183 ubox
12 25 0.024189568 ubox
12 32 0.117954711 ubox
12 37 0.029644285 ubox
12 39 0.015866028 ubox
12 41 0.003871826 ubox
12 48 0.006973571 ubox
13 31 0.117615162 ubox
14 30 0.117235671 ubox
14 31 0.007379657 ubox
14 46 0.005005664 ubox
15 29 0.109447757 ubox
15 30 0.007907269 ubox
15 31 0.049355451 ubox
15 45 0.005012232 ubox
15 46 0.003784920 ubox
16 29 0.006722007 ubox
16 30 0.050782146 ubox
16 45 0.003793698 ubox
17 29 0.051171434 ubox
18 28 0.050632651 ubox
18 32 0.007022298 ubox
19 31 0.004981920 ubox
20 31 0.028542365 ubox
21 30 0.029377278 ubox
22 29 0.028951732 ubox
22 31 0.012990879 ubox
23 30 0.013387030 ubox
24 29 0.013099587 ubox
24 55 0.043526579 ubox
25 38 0.003941735 ubox
25 40 0.005287495 ubox
25 42 0.004272010 ubox
25 49 0.003880141 ubox
25 51 0.006464272 ubox
25 54 0.046511049 ubox
25 66 0.952057945 ubox
26 37 0.003933040 ubox
26 39 0.005291437 ubox
26 41 0.004338040 ubox
26 47 0.006829708 ubox
26 50 0.006478752 ubox
26 53 0.047190101 ubox
26 65 0.956655312 ubox
27 38 0.005224504 ubox
27 40 0.004332237 ubox
27 46 0.007469097 ubox
27 49 0.005947017 ubox
27 52 0.048928042 ubox
28 35 0.003947418 ubox
28 45 0.007478726 ubox
28 51 0.048929805 ubox
28 63 0.981457580 ubox
29 34 0.003680871 ubox
29 44 0.007464414 ubox
29 50 0.048509109 ubox
29 60 0.009363508 ubox
29 61 0.029710805 ubox
29 62 0.989020090 ubox
30 37 0.004181703 ubox
30 43 0.007450497 ubox
30 48 0.049210439 ubox
30 59 0.010418539 ubox
30 60 0.049822482 ubox
30 61 0.988297926 ubox
31 36 0.003927030 ubox
31 41 0.005669768 ubox
31 47 0.049267780 ubox
31 58 0.010781916 ubox
31 59 0.062166009 ubox
31 60 0.936905195 ubox
32 40 0.006061736 ubox
32 46 0.049360069 ubox
32 57 0.004339708 ubox
33 45 0.048439508 ubox
34 42 0.007322320 ubox
34 57 0.946652432 ubox
35 41 0.007797544 ubox
35 43 0.047644684 ubox
35 56 0.989595497 ubox
35 58 0.005045400 ubox
36 42 0.047278439 ubox
36 55 0.989649463 ubox
36 57 0.004172299 ubox
37 51 0.008767755 ubox
37 54 0.989876827 ubox
37 57 0.012893684 ubox
38 50 0.009165080 ubox
38 53 0.989708846 ubox
38 56 0.013373618 ubox
39 49 0.010793970 ubox
39 51 0.571727565 ubox
39 52 0.807145633 ubox
39 55 0.013121401 ubox
39 57 0.003234817 ubox
40 47 0.006024832 ubox
40 48 0.010972619 ubox
40 50 0.808532381 ubox
40 56 0.003249089 ubox
41 46 0.006194144 ubox
41 49 0.808615127 ubox
41 51 0.569795165 ubox
41 54 0.022232069 ubox
42 48 0.804368298 ubox
42 50 0.569629600 ubox
42 53 0.023958752 ubox
43 49 0.569060532 ubox
43 52 0.127657098 ubox
44 51 0.128833476 ubox
45 50 0.128482723 ubox
45 60 0.006073881 ubox
46 59 0.006104982 ubox
48 57 0.006105250 ubox
49 56 0.006119457 ubox
50 55 0.004148532 ubox
53 66 0.130278801 ubox
54 65 0.131728793 ubox
55 64 0.133028500 ubox
56 63 0.135173285 ubox
56 66 0.006417383 ubox
57 62 0.133826793 ubox
57 64 0.019084207 ubox
57 65 0.005010879 ubox
58 63 0.021620521 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
25 66 0.9500000 lbox
26 65 0.9500000 lbox
28 63 0.9500000 lbox
29 62 0.9500000 lbox
30 61 0.9500000 lbox
31 60 0.9500000 lbox
34 57 0.9500000 lbox
35 56 0.9500000 lbox
36 55 0.9500000 lbox
37 54 0.9500000 lbox
38 53 0.9500000 lbox
39 52 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
showpage
end
%%EOF
