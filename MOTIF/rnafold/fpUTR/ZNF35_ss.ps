%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUGUUCUCGUGCCGGUAGAAGCUGAAGUACCGGUCAGCCAGCCUCCUGCUGCAGAGCCAGUGAACUCAGGUCGGGCUUCUCAGCUGCGCACAUAGGCAGUACUCAUCUUGGCCCUGGGAAGAAACUCAAGAAGAAGCUUUUGAAACAUAAAGCUUGGAUGGGGUUUGACCUCUGCAGGGCAGCGCCCAGCUAUAGGAGUUCCCCUGCUGAGCAGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[98.65237427 372.07806396]
[83.68627930 376.61126709]
[69.32809448 370.41638184]
[62.35732651 356.41845703]
[66.06535339 341.22683716]
[78.70135498 332.01461792]
[79.54998016 317.03863525]
[80.39860535 302.06265259]
[81.24723053 287.08666992]
[82.09585571 272.11071777]
[79.33824921 265.26031494]
[83.06393433 256.92926025]
[84.12439728 241.96679688]
[85.18486023 227.00433350]
[86.13942719 212.03474426]
[86.98805237 197.05876160]
[87.83667755 182.08279419]
[88.68530273 167.10681152]
[89.53393555 152.13084412]
[90.38256073 137.15486145]
[85.60512543 137.70091248]
[80.59564972 137.62239075]
[75.43627930 136.87559509]
[63.76574326 146.29888916]
[52.09520721 155.72218323]
[40.42467117 165.14549255]
[28.75413513 174.56878662]
[29.67876816 190.05828857]
[21.29396248 203.11488342]
[6.82384777 208.71804810]
[-8.16752148 204.71324158]
[-17.91565895 192.64039612]
[-18.67220497 177.14178467]
[-10.14625454 164.17691040]
[4.38379288 158.73106384]
[19.33083534 162.89825439]
[31.00137329 153.47496033]
[42.67190933 144.05165100]
[54.34244537 134.62835693]
[66.01297760 125.20505524]
[59.35486221 111.76371765]
[44.78683853 115.33760071]
[30.21881104 118.91147614]
[15.65078545 122.48535919]
[6.13993645 135.40524292]
[-9.89606762 135.88076782]
[-20.15577698 123.54715729]
[-16.76882172 107.86569977]
[-2.33338213 100.86586761]
[12.07690620 107.91732788]
[26.64493179 104.34345245]
[41.21295929 100.76956940]
[55.78098679 97.19569397]
[57.48963928 89.57955170]
[60.48222733 82.47360992]
[64.63341522 76.08919525]
[69.78404999 70.60966492]
[75.74704742 66.18514252]
[82.31406403 62.92852783]
[89.26271057 60.91274261]
[96.36399841 60.16935730]
[103.38990784 60.68857956]
[110.12067413 62.42060852]
[116.35169220 65.27822876]
[125.27119446 53.21827316]
[134.19068909 41.15831757]
[143.11018372 29.09836006]
[152.02967834 17.03840256]
[160.94918823 4.97844601]
[162.08421326 -16.42587662]
[181.35786438 -23.81946564]
[189.75749207 -36.24711227]
[198.15710449 -48.67475510]
[199.47442627 -64.44102478]
[213.01181030 -70.65299988]
[221.41143799 -83.08064270]
[229.81105042 -95.50828552]
[238.21067810 -107.93593597]
[231.72396851 -115.12120819]
[227.34288025 -124.10239410]
[225.56312561 -134.25308228]
[226.69192505 -144.81129456]
[230.81143188 -154.93672180]
[237.75975037 -163.77740479]
[247.13169861 -170.54084778]
[240.00231934 -183.73826599]
[232.87292480 -196.93568420]
[225.74354553 -210.13310242]
[218.61416626 -223.33052063]
[203.21688843 -225.25500488]
[191.91445923 -235.88677979]
[189.05288696 -251.13772583]
[195.73249817 -265.14352417]
[209.38485718 -272.51864624]
[224.76034546 -270.42724609]
[235.94677734 -259.67349243]
[238.64274597 -244.39242554]
[231.81158447 -230.45989990]
[238.94096375 -217.26248169]
[246.07034302 -204.06506348]
[253.19973755 -190.86764526]
[260.32910156 -177.67022705]
[267.55963135 -175.67787170]
[267.63018799 -190.67770386]
[262.36383057 -204.72282410]
[267.84466553 -218.68563843]
[281.25900269 -225.39801025]
[295.72021484 -221.41394043]
[303.80432129 -208.77877808]
[301.36111450 -193.97908020]
[289.64309692 -184.61212158]
[282.02069092 -171.69316101]
[289.25122070 -169.70082092]
[302.13418579 -177.38389587]
[315.01712036 -185.06695557]
[327.90008545 -192.75003052]
[340.78302002 -200.43310547]
[353.66598511 -208.11618042]
[366.49423218 -215.89022827]
[379.26718140 -223.75483704]
[392.04010010 -231.61944580]
[395.72366333 -250.20928955]
[411.55834961 -260.02764893]
[429.23049927 -255.22941589]
[441.77575684 -263.45233154]
[454.32101440 -271.67526245]
[466.86627197 -279.89816284]
[479.41152954 -288.12109375]
[491.95681763 -296.34399414]
[489.57141113 -310.27011108]
[492.66314697 -324.01223755]
[500.73324585 -335.50396729]
[512.53698730 -343.03021240]
[526.27545166 -345.48309326]
[539.86968994 -342.52496338]
[551.27551270 -334.63449097]
[563.93585205 -342.67904663]
[576.59625244 -350.72360229]
[589.25659180 -358.76818848]
[601.91693115 -366.81274414]
[614.57733154 -374.85733032]
[627.23767090 -382.90188599]
[628.06878662 -398.39669800]
[637.87493896 -410.42248535]
[652.88537598 -414.35510254]
[667.32836914 -408.68237305]
[675.65026855 -395.58560181]
[674.65112305 -380.10070801]
[664.71508789 -368.18200684]
[649.66284180 -364.41244507]
[635.28228760 -370.24151611]
[622.62188721 -362.19696045]
[609.96154785 -354.15237427]
[597.30114746 -346.10781860]
[584.64080811 -338.06326294]
[571.98040771 -330.01867676]
[559.32006836 -321.97412109]
[561.49243164 -306.13903809]
[556.52185059 -290.88696289]
[545.35565186 -279.28869629]
[530.19390869 -273.70272827]
[514.05609131 -275.29559326]
[500.17971802 -283.79873657]
[487.63446045 -275.57583618]
[475.08920288 -267.35290527]
[462.54394531 -259.12997437]
[449.99868774 -250.90707397]
[437.45339966 -242.68414307]
[437.60610962 -231.28553772]
[432.18447876 -221.12168884]
[422.43179321 -214.76890564]
[410.70483398 -213.90025330]
[399.90472412 -218.84649658]
[387.13177490 -210.98188782]
[374.35885620 -203.11727905]
[370.31445312 -196.93869019]
[361.34906006 -195.23323059]
[348.46609497 -187.55015564]
[335.58316040 -179.86708069]
[322.70019531 -172.18402100]
[309.81726074 -164.50094604]
[296.93429565 -156.81787109]
[303.40747070 -131.32205200]
[293.60623169 -108.28112030]
[272.94421387 -96.52261353]
[250.63832092 -99.53630829]
[242.23869324 -87.10866547]
[233.83908081 -74.68102264]
[225.43945312 -62.25337601]
[224.72293091 -47.37601471]
[210.58476257 -40.27513504]
[202.18513489 -27.84748840]
[193.78550720 -15.41984367]
[196.86476135 -7.10703611]
[195.76127625 1.82734835]
[190.59671021 9.36806297]
[182.42279053 13.75602818]
[173.00914001 13.89794350]
[164.08964539 25.95790100]
[155.17015076 38.01785660]
[146.25064087 50.07781601]
[137.33114624 62.13777161]
[128.41165161 74.19773102]
[138.37530518 99.43853760]
[129.15434265 124.96002960]
[105.35853577 138.00349426]
[104.50991058 152.97946167]
[103.66128540 167.95544434]
[102.81265259 182.93141174]
[101.96402740 197.90739441]
[101.11540222 212.88336182]
[103.75272369 221.62017822]
[100.14733124 228.06480408]
[99.08686066 243.02726746]
[98.02639771 257.98974609]
[97.07183075 272.95932007]
[96.22320557 287.93530273]
[95.37458038 302.91128540]
[94.52595520 317.88726807]
[93.67733002 332.86322021]
[105.19174957 343.44396973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 220]
[7 219]
[8 218]
[9 217]
[10 216]
[12 215]
[13 214]
[14 213]
[15 211]
[16 210]
[17 209]
[18 208]
[19 207]
[20 206]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[41 53]
[42 52]
[43 51]
[44 50]
[64 203]
[65 202]
[66 201]
[67 200]
[68 199]
[69 198]
[71 193]
[72 192]
[73 191]
[75 189]
[76 188]
[77 187]
[78 186]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[113 182]
[114 181]
[115 180]
[116 179]
[117 178]
[118 177]
[119 175]
[120 174]
[121 173]
[124 168]
[125 167]
[126 166]
[127 165]
[128 164]
[129 163]
[136 157]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
