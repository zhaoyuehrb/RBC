%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCUUCCUUCUGGCUGGCCGGCCGCAGGGUAGGGGGUCCGUGGACCUCCCGGCCUGUAGGGGGCGUCGGGCGCAGCGGAAGGGCCUGCUCCGGAGCCUGGCCAGGGCUGCGCAGUC\
) } def
/len { sequence length } bind def

/coor [
[97.68057251 182.83697510]
[82.86154175 185.15994263]
[68.17723083 182.09872437]
[55.52080154 174.04795837]
[46.52395630 162.04559326]
[42.34659576 147.63900757]
[43.52727890 132.68554688]
[49.91379166 119.11306000]
[60.68276215 108.67134857]
[74.44581604 102.70659637]
[89.42935181 101.98789978]
[76.92964935 93.69589996]
[64.42993927 85.40390015]
[51.93022919 77.11190033]
[39.43051910 68.81990051]
[32.65930939 68.00485992]
[28.08046913 64.37093353]
[26.50246811 59.73905182]
[14.46179390 50.79354095]
[2.42111945 41.84803391]
[-10.51435852 42.94428253]
[-20.37984276 35.13975525]
[-22.17053223 23.09539413]
[-33.96880722 13.83252430]
[-45.88933563 4.72752762]
[-57.93001175 -4.21798277]
[-69.97068787 -13.16349316]
[-82.01136017 -22.10900307]
[-94.05203247 -31.05451393]
[-108.79143524 -26.57609367]
[-123.17353058 -31.57696915]
[-131.75170898 -43.94138336]
[-131.40846252 -58.80813217]
[-143.44912720 -67.75363922]
[-155.48980713 -76.69915009]
[-167.53048706 -85.64466095]
[-179.57115173 -94.59017181]
[-191.61183167 -103.53568268]
[-203.65251160 -112.48119354]
[-219.99604797 -113.83044434]
[-226.75372314 -128.77252197]
[-216.97381592 -141.93630981]
[-200.71704102 -139.78002930]
[-194.70700073 -124.52186584]
[-182.66632080 -115.57635498]
[-170.62564087 -106.63084412]
[-158.58497620 -97.68534088]
[-146.54429626 -88.73983002]
[-134.50361633 -79.79431915]
[-122.46294403 -70.84880829]
[-108.32829285 -75.46936035]
[-94.01387787 -70.82592010]
[-85.07392883 -58.49990082]
[-85.10652161 -43.09518814]
[-73.06584930 -34.14967728]
[-61.02517319 -25.20416832]
[-48.98450089 -16.25865746]
[-36.94382477 -7.31314707]
[-29.60427475 -5.83106756]
[-24.70593643 2.03425074]
[-12.90766239 11.29712009]
[4.52379131 12.77603817]
[11.36662960 29.80735779]
[23.40730476 38.75286865]
[35.44797897 47.69837952]
[47.72251892 56.32019043]
[60.22222900 64.61219025]
[72.72193909 72.90419006]
[85.22164917 81.19618988]
[97.72135925 89.48818970]
[111.61744690 95.13607788]
[126.35771179 97.91541290]
[141.09797668 100.69474030]
[155.83822632 103.47407532]
[170.57849121 106.25340271]
[185.31875610 109.03273010]
[200.05902100 111.81206512]
[214.89849854 114.00067902]
[229.81352234 115.59507751]
[242.04159546 105.94562531]
[257.14483643 107.77504730]
[266.26873779 119.49211121]
[281.18377686 121.08650970]
[296.09878540 122.68091583]
[311.01382446 124.27531433]
[325.94873047 125.67103577]
[340.90090942 126.86782837]
[355.85308838 128.06462097]
[372.12414551 123.30130005]
[381.20559692 137.61785889]
[369.96252441 150.30760193]
[354.65631104 143.01679993]
[339.70413208 141.82000732]
[324.75195312 140.62321472]
[317.74383545 143.25985718]
[309.41940308 139.19033813]
[294.50439453 137.59593201]
[279.58938599 136.00154114]
[264.67434692 134.40713501]
[253.27981567 143.93078613]
[238.13114929 142.52630615]
[228.21911621 130.51010132]
[213.30409241 128.91569519]
[210.27452087 130.94775391]
[206.07315063 131.53823853]
[201.42481995 130.13609314]
[197.27969360 126.55233002]
[182.53942871 123.77299500]
[167.79916382 120.99366760]
[153.05889893 118.21433258]
[138.31863403 115.43500519]
[123.57837677 112.65567017]
[108.83811951 109.87634277]
[119.07137299 120.84358978]
[124.77106476 134.71850586]
[125.20237732 149.71231079]
[120.30970764 163.89193726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 70]
[12 69]
[13 68]
[14 67]
[15 66]
[18 65]
[19 64]
[20 63]
[23 61]
[24 60]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[71 113]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 103]
[79 102]
[82 99]
[83 98]
[84 97]
[85 96]
[86 94]
[87 93]
[88 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
