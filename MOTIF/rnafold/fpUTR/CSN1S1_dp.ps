%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CSN1S1)
} def

/sequence { (\
UCAACACAACUUGCUUCUCUCCAGACUUGGGCUUAAGGCUCUGAUAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.021776404 ubox
1 30 0.003909144 ubox
1 44 0.160837278 ubox
2 13 0.182459207 ubox
2 24 0.024120712 ubox
2 29 0.009252108 ubox
2 43 0.175912284 ubox
3 12 0.186210350 ubox
3 16 0.027573722 ubox
3 28 0.009967114 ubox
3 42 0.167501604 ubox
4 11 0.162937079 ubox
4 15 0.030977163 ubox
4 27 0.009045604 ubox
5 13 0.114025066 ubox
5 29 0.010103080 ubox
5 43 0.088493252 ubox
6 12 0.106452662 ubox
6 28 0.010613068 ubox
6 42 0.085450491 ubox
7 13 0.091645837 ubox
7 29 0.030809093 ubox
7 43 0.242350416 ubox
8 12 0.074979833 ubox
8 16 0.017478531 ubox
8 28 0.033513533 ubox
8 34 0.003654054 ubox
8 42 0.235936676 ubox
9 15 0.018063109 ubox
9 27 0.031586045 ubox
9 33 0.003911052 ubox
10 24 0.044491790 ubox
10 30 0.011080376 ubox
10 31 0.009512788 ubox
10 37 0.101955282 ubox
10 38 0.047957719 ubox
11 23 0.035847179 ubox
11 24 0.099847495 ubox
11 25 0.020913911 ubox
11 29 0.011141066 ubox
11 30 0.009662632 ubox
11 36 0.101624420 ubox
11 37 0.047158388 ubox
11 38 0.004940709 ubox
11 44 0.046568949 ubox
11 47 0.017947613 ubox
12 23 0.119731513 ubox
12 24 0.020158833 ubox
12 29 0.009775495 ubox
12 35 0.093736821 ubox
12 36 0.045650938 ubox
12 37 0.004776291 ubox
12 43 0.049425637 ubox
12 46 0.020728319 ubox
13 22 0.124915452 ubox
13 28 0.021866207 ubox
13 32 0.103555024 ubox
13 34 0.065551886 ubox
13 39 0.708509638 ubox
13 42 0.007595941 ubox
13 45 0.015170622 ubox
14 24 0.052782518 ubox
14 30 0.010325092 ubox
14 31 0.103814167 ubox
14 37 0.140795201 ubox
14 38 0.706408231 ubox
15 23 0.051014221 ubox
15 24 0.014808354 ubox
15 25 0.015713809 ubox
15 29 0.011171628 ubox
15 30 0.095065964 ubox
15 31 0.008954838 ubox
15 36 0.156046652 ubox
15 37 0.697291141 ubox
15 44 0.006815573 ubox
15 47 0.017900477 ubox
16 23 0.015344533 ubox
16 24 0.012839665 ubox
16 25 0.225545186 ubox
16 29 0.068929732 ubox
16 30 0.022289220 ubox
16 31 0.011579736 ubox
16 35 0.154444117 ubox
16 36 0.625847409 ubox
16 37 0.009748189 ubox
16 38 0.017273401 ubox
16 43 0.004868682 ubox
16 44 0.020859298 ubox
16 46 0.019647415 ubox
17 24 0.243338587 ubox
17 29 0.030466699 ubox
17 30 0.012845940 ubox
17 31 0.089423722 ubox
17 37 0.029125776 ubox
17 38 0.004909705 ubox
17 43 0.021604654 ubox
18 23 0.222486783 ubox
18 25 0.098476744 ubox
18 29 0.009926609 ubox
18 30 0.087952147 ubox
18 31 0.016635193 ubox
18 36 0.029383218 ubox
18 37 0.004285837 ubox
18 38 0.009752033 ubox
18 44 0.031644153 ubox
19 24 0.103208554 ubox
19 29 0.088550175 ubox
19 30 0.018668350 ubox
19 31 0.158611154 ubox
19 37 0.013807338 ubox
19 43 0.031637361 ubox
20 29 0.018030363 ubox
20 30 0.047817990 ubox
20 31 0.640637444 ubox
20 36 0.012384268 ubox
20 44 0.085842530 ubox
21 29 0.045835226 ubox
21 30 0.716875036 ubox
21 31 0.116374898 ubox
21 38 0.004462730 ubox
21 43 0.067133307 ubox
22 29 0.717652021 ubox
22 30 0.114596883 ubox
22 37 0.004456349 ubox
22 43 0.481277406 ubox
23 28 0.646965954 ubox
23 33 0.006848127 ubox
23 40 0.029141249 ubox
23 42 0.486469953 ubox
24 32 0.006957780 ubox
24 39 0.030290646 ubox
24 41 0.482713974 ubox
25 40 0.466368523 ubox
26 37 0.205702503 ubox
26 38 0.400929865 ubox
27 36 0.210107592 ubox
27 37 0.398681379 ubox
27 38 0.048545542 ubox
27 44 0.127933895 ubox
27 47 0.015832749 ubox
28 35 0.209155298 ubox
28 36 0.393446517 ubox
28 37 0.050848023 ubox
28 43 0.132991936 ubox
28 46 0.018170955 ubox
29 34 0.193122844 ubox
29 40 0.015886432 ubox
29 41 0.446637308 ubox
29 42 0.106637279 ubox
29 45 0.007667293 ubox
29 49 0.007440260 ubox
30 39 0.022706291 ubox
30 40 0.462694118 ubox
30 41 0.107599134 ubox
30 48 0.007517991 ubox
30 49 0.003912655 ubox
31 39 0.499374833 ubox
31 40 0.015058786 ubox
31 48 0.004418669 ubox
32 38 0.499588529 ubox
33 37 0.450072911 ubox
33 44 0.013891268 ubox
33 47 0.005348458 ubox
34 43 0.014886833 ubox
34 46 0.006003133 ubox
35 42 0.014044588 ubox
35 45 0.005791035 ubox
36 42 0.010806067 ubox
37 41 0.011132138 ubox
37 49 0.018387813 ubox
38 48 0.018927175 ubox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
showpage
end
%%EOF
