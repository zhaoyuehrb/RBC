%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGCGCCCUGCGCGCCCUGCGCACCCGCGGCCCGAGCCCAGCCAGAGCCGGGCGGAGCGGAGCGCGCCGAGCCUCGUCCCGCGGCCGGGCCGGGGCCGGGCCGUAGCGGCGGCGCCUGGAUGCGGACCCGGCCGCGGGGAGACGGGCGCCCGCCCCGAAACGACUUUCAGUCCCCGACGCGCCCCGCCCAACCCCUACG\
) } def
/len { sequence length } bind def

/coor [
[153.36756897 146.41737366]
[138.68612671 149.47659302]
[135.86869812 134.74356079]
[131.27784729 149.02375793]
[126.68698120 163.30395508]
[122.09612274 177.58415222]
[117.50526428 191.86434937]
[112.91440582 206.14454651]
[113.82291412 223.07414246]
[97.80644989 228.63371277]
[88.03033447 214.78222656]
[98.63420868 201.55369568]
[103.22506714 187.27349854]
[107.81592560 172.99330139]
[112.40678406 158.71310425]
[116.99764252 144.43290710]
[121.58850098 130.15270996]
[115.20285797 126.21906281]
[96.04593658 114.41812134]
[85.35717773 124.94192505]
[74.66841888 135.46572876]
[63.97965622 145.98953247]
[53.29089737 156.51333618]
[49.44735718 172.45570374]
[33.64462662 176.83815002]
[22.13920212 165.15237427]
[26.76687431 149.41970825]
[42.76709366 145.82456970]
[53.45585251 135.30076599]
[64.14461517 124.77696228]
[74.83337402 114.25315857]
[85.52213287 103.72936249]
[82.25299835 96.97933960]
[71.43411255 107.36932373]
[58.20944595 100.29061890]
[60.85507584 85.52577209]
[75.71472931 83.47930145]
[72.44560242 76.72927856]
[57.56155014 78.59075928]
[42.67750168 80.45223999]
[27.79345512 82.31372070]
[15.06014919 91.70379639]
[1.47107100 85.60574341]
[-13.41297722 87.46723175]
[-26.15399361 97.79188538]
[-41.36695099 91.66832733]
[-43.40206528 75.39595032]
[-30.16578293 65.71437836]
[-15.27445793 72.58318329]
[-0.39041024 70.72169495]
[11.27828884 61.46477127]
[25.93197441 67.42967224]
[40.81602097 65.56819153]
[55.70006943 63.70671463]
[70.58411407 61.84523392]
[83.76451874 54.68443298]
[93.42617798 43.21044540]
[96.56317902 34.62367630]
[103.32840729 31.63466263]
[113.16733551 20.31231880]
[123.00626373 8.98997402]
[132.84519958 -2.33236980]
[136.05682373 -17.82417297]
[150.24530029 -22.35589409]
[160.08422852 -33.67823792]
[169.92315674 -45.00057983]
[179.76208496 -56.32292557]
[189.60101318 -67.64527130]
[192.81265259 -83.13706970]
[207.00112915 -87.66879272]
[216.84005737 -98.99113464]
[210.13667297 -114.31334686]
[210.90338135 -130.95005798]
[218.91990662 -145.46813965]
[232.47634888 -154.89918518]
[248.73750305 -157.34628296]
[252.88201904 -171.76234436]
[249.25894165 -187.16311646]
[260.21160889 -197.25709534]
[264.35614014 -211.67317200]
[268.50064087 -226.08923340]
[272.64517212 -240.50529480]
[276.78970337 -254.92135620]
[280.93423462 -269.33743286]
[285.07876587 -283.75347900]
[289.22329712 -298.16955566]
[293.36779785 -312.58560181]
[297.51232910 -327.00167847]
[301.65686035 -341.41775513]
[305.80139160 -355.83380127]
[309.94592285 -370.24987793]
[313.97821045 -384.69772339]
[317.89804077 -399.17651367]
[321.81787109 -413.65527344]
[312.25714111 -425.73413086]
[311.64916992 -440.94873047]
[320.01770020 -453.45599365]
[333.97921753 -458.57595825]
[337.89904785 -473.05471802]
[341.70617676 -487.56353760]
[345.40036011 -502.10153198]
[348.98138428 -516.66778564]
[352.44900513 -531.26147461]
[355.91665649 -545.85516357]
[359.38430786 -560.44885254]
[362.85195923 -575.04254150]
[357.64178467 -590.59197998]
[368.70419312 -602.69799805]
[384.65911865 -598.90692139]
[389.09350586 -583.11865234]
[377.44561768 -571.57489014]
[373.97799683 -556.98120117]
[370.51034546 -542.38751221]
[367.04269409 -527.79382324]
[363.57504272 -513.20013428]
[365.08837891 -505.96051025]
[359.93832397 -498.40734863]
[356.24414062 -483.86935425]
[357.64471436 -476.60705566]
[352.37780762 -469.13491821]
[348.45797729 -454.65612793]
[357.92971802 -443.19207764]
[358.84558105 -428.17126465]
[350.64517212 -415.34136963]
[336.29666138 -409.73544312]
[332.37683105 -395.25668335]
[328.45700073 -380.77789307]
[329.74444580 -373.49468994]
[324.36196899 -366.10534668]
[320.21743774 -351.68927002]
[316.07293701 -337.27322388]
[311.92840576 -322.85714722]
[307.78387451 -308.44110107]
[303.63934326 -294.02502441]
[299.49481201 -279.60894775]
[295.35031128 -265.19290161]
[291.20578003 -250.77682495]
[287.06124878 -236.36076355]
[282.91671753 -221.94470215]
[278.77218628 -207.52864075]
[274.62765503 -193.11257935]
[278.54718018 -178.74293518]
[267.29809570 -167.61781311]
[263.15356445 -153.20175171]
[276.53280640 -149.41740417]
[288.88214111 -139.98463440]
[303.88214111 -139.98463440]
[318.88214111 -139.98463440]
[333.88214111 -139.98463440]
[347.80593872 -148.64834595]
[362.14135742 -140.68420410]
[362.14135742 -124.28506470]
[347.80593872 -116.32093048]
[333.88214111 -124.98463440]
[318.88214111 -124.98463440]
[303.88214111 -124.98463440]
[288.88214111 -124.98463440]
[286.86596680 -117.76071167]
[301.31384277 -113.72840881]
[315.76162720 -109.69586945]
[311.72885132 -95.24814606]
[297.28152466 -99.28055573]
[282.83367920 -103.31285095]
[280.81753540 -96.08892059]
[293.64959717 -88.32118225]
[306.48168945 -80.55343628]
[319.31375122 -72.78569031]
[335.99478149 -69.75587463]
[337.70114136 -52.88801193]
[321.96484375 -46.57885361]
[311.54602051 -59.95361328]
[298.71392822 -67.72135925]
[285.88186646 -75.48910522]
[273.04977417 -83.25685120]
[256.46902466 -79.20848846]
[240.76350403 -81.57784271]
[228.16239929 -89.15220642]
[218.32347107 -77.82986450]
[215.81558228 -63.14791107]
[200.92337036 -57.80633926]
[191.08442688 -46.48399734]
[181.24549866 -35.16165161]
[171.40657043 -23.83930779]
[161.56764221 -12.51696396]
[159.05975342 2.16498923]
[144.16754150 7.50655937]
[134.32861328 18.82890320]
[124.48967743 30.15124702]
[114.65074921 41.47359085]
[104.90016174 52.87210083]
[95.23851013 64.34609222]
[109.21833038 58.90876389]
[122.89218140 52.74225235]
[137.78747559 50.97307587]
[152.52536011 53.76501465]
[165.74151611 60.85961533]
[176.21249390 71.60011292]
[182.96900940 84.99226379]
[185.38558960 99.79631805]
[183.23852539 114.64186096]
[176.72657776 128.15461731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[38 55]
[39 54]
[40 53]
[41 52]
[43 50]
[44 49]
[56 191]
[57 190]
[59 189]
[60 188]
[61 187]
[62 186]
[64 184]
[65 183]
[66 182]
[67 181]
[68 180]
[70 178]
[71 177]
[76 144]
[77 143]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 127]
[93 126]
[94 125]
[98 121]
[99 120]
[100 118]
[101 117]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[146 157]
[147 156]
[148 155]
[149 154]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
