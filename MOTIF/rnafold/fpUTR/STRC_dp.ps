%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (STRC)
} def

/sequence { (\
GCCCUGCCCUCACCUGGCUAUCCCACACAGGUGAGAAUAACCAGAACUCACCUCCGGUACCAGUGUUCACUUGGAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.308078069 ubox
1 18 0.029200966 ubox
1 58 0.059080717 ubox
1 64 0.016941694 ubox
1 66 0.088016372 ubox
2 6 0.306845833 ubox
2 17 0.029093550 ubox
2 57 0.061172767 ubox
2 63 0.017319998 ubox
2 65 0.099775503 ubox
2 74 0.220196285 ubox
3 16 0.028888560 ubox
3 17 0.004176715 ubox
3 56 0.060999322 ubox
3 57 0.014759082 ubox
3 73 0.220074095 ubox
3 74 0.322885368 ubox
4 16 0.005181435 ubox
4 35 0.004891957 ubox
4 44 0.152735518 ubox
4 56 0.015038973 ubox
4 57 0.009437785 ubox
4 63 0.124576126 ubox
4 73 0.323546908 ubox
4 74 0.065053685 ubox
5 12 0.020572039 ubox
5 20 0.007928215 ubox
5 39 0.152058138 ubox
5 43 0.153286195 ubox
5 50 0.003870122 ubox
5 56 0.009481812 ubox
5 59 0.103300654 ubox
5 62 0.125038759 ubox
5 65 0.011311773 ubox
5 69 0.092190724 ubox
5 73 0.063535590 ubox
6 11 0.021110291 ubox
6 18 0.047315689 ubox
6 19 0.005973857 ubox
6 38 0.156906608 ubox
6 42 0.152751633 ubox
6 49 0.004282610 ubox
6 55 0.010151690 ubox
6 58 0.114564691 ubox
6 61 0.123989161 ubox
6 64 0.017809922 ubox
6 66 0.011271037 ubox
6 68 0.093710186 ubox
6 72 0.047668613 ubox
7 17 0.046413085 ubox
7 57 0.115520748 ubox
7 63 0.018166906 ubox
7 65 0.011943767 ubox
7 74 0.087740672 ubox
8 16 0.045308325 ubox
8 17 0.014933948 ubox
8 56 0.115251847 ubox
8 57 0.004523291 ubox
8 73 0.087690239 ubox
8 74 0.067431861 ubox
9 16 0.017918801 ubox
9 35 0.912278023 ubox
9 56 0.004313645 ubox
9 63 0.003448086 ubox
9 73 0.066955410 ubox
9 74 0.011556851 ubox
10 34 0.916278045 ubox
10 62 0.003287300 ubox
10 73 0.010760651 ubox
10 74 0.008089075 ubox
10 75 0.010206623 ubox
11 33 0.916820799 ubox
11 65 0.321736995 ubox
11 73 0.010364355 ubox
11 74 0.010653467 ubox
12 32 0.916648825 ubox
12 58 0.012662578 ubox
12 64 0.321517562 ubox
12 66 0.194388656 ubox
12 72 0.007669786 ubox
13 31 0.916831558 ubox
13 57 0.013115602 ubox
13 63 0.228136906 ubox
13 65 0.202767718 ubox
14 30 0.916828470 ubox
14 44 0.007701362 ubox
14 56 0.012981761 ubox
14 57 0.013757724 ubox
14 63 0.321346069 ubox
15 25 0.044506024 ubox
15 27 0.013776078 ubox
15 29 0.915478710 ubox
15 43 0.007742991 ubox
15 56 0.013938721 ubox
15 62 0.393340912 ubox
16 22 0.003890170 ubox
16 23 0.028885851 ubox
16 24 0.062010313 ubox
16 26 0.020030592 ubox
16 28 0.913877615 ubox
16 42 0.007750796 ubox
16 55 0.017897139 ubox
16 61 0.394238770 ubox
17 21 0.004723799 ubox
17 22 0.032641282 ubox
17 23 0.066057587 ubox
17 41 0.007742491 ubox
17 54 0.017892362 ubox
17 60 0.394081596 ubox
17 64 0.003947307 ubox
18 57 0.006059205 ubox
18 63 0.004021065 ubox
19 39 0.007188167 ubox
19 56 0.005861122 ubox
19 59 0.367597615 ubox
19 62 0.003894736 ubox
20 38 0.007284394 ubox
20 58 0.364912085 ubox
21 36 0.006011789 ubox
21 37 0.005208685 ubox
21 57 0.287892797 ubox
21 75 0.010042764 ubox
22 35 0.007891054 ubox
22 56 0.283522616 ubox
22 57 0.239076889 ubox
22 74 0.010650202 ubox
23 56 0.239313119 ubox
23 57 0.124308473 ubox
23 73 0.010402875 ubox
23 74 0.010201758 ubox
24 33 0.008111304 ubox
24 56 0.127435962 ubox
24 65 0.004700497 ubox
24 73 0.010270154 ubox
25 32 0.008116523 ubox
25 58 0.021905053 ubox
25 64 0.004714675 ubox
25 66 0.013970768 ubox
25 72 0.007741102 ubox
26 31 0.008099723 ubox
26 57 0.023468475 ubox
26 63 0.004709627 ubox
26 65 0.015784487 ubox
27 58 0.009960530 ubox
27 64 0.015787034 ubox
28 57 0.010442150 ubox
28 63 0.015773871 ubox
28 73 0.017432301 ubox
29 53 0.385254583 ubox
29 72 0.017795312 ubox
30 52 0.398682313 ubox
30 71 0.018164584 ubox
31 51 0.398732133 ubox
31 70 0.018190716 ubox
32 50 0.398656149 ubox
32 69 0.018179965 ubox
33 49 0.398734244 ubox
33 68 0.018117338 ubox
34 48 0.398525658 ubox
34 67 0.017986639 ubox
35 47 0.396795911 ubox
35 49 0.006410013 ubox
35 66 0.016062035 ubox
35 68 0.047153939 ubox
36 48 0.007139234 ubox
36 53 0.003419914 ubox
36 67 0.053512712 ubox
36 72 0.005356891 ubox
37 58 0.007990264 ubox
37 64 0.013037006 ubox
37 66 0.055030389 ubox
37 71 0.005169177 ubox
38 57 0.005505594 ubox
38 59 0.094909506 ubox
38 63 0.012621725 ubox
38 65 0.055130904 ubox
38 73 0.015355055 ubox
39 58 0.072413056 ubox
39 64 0.054168544 ubox
39 67 0.015315486 ubox
39 72 0.018194838 ubox
40 58 0.719806103 ubox
40 64 0.008682624 ubox
40 66 0.017742102 ubox
40 71 0.017117641 ubox
41 57 0.749400575 ubox
41 63 0.010341174 ubox
41 65 0.017614275 ubox
41 74 0.394013944 ubox
42 56 0.748933431 ubox
42 65 0.016624111 ubox
42 73 0.395773546 ubox
43 53 0.139816350 ubox
43 64 0.016539679 ubox
43 67 0.017695159 ubox
43 71 0.071213529 ubox
43 72 0.384333043 ubox
44 52 0.150745067 ubox
44 54 0.718356190 ubox
44 66 0.023685456 ubox
44 67 0.035400359 ubox
44 68 0.372220867 ubox
44 70 0.095262095 ubox
44 71 0.148424035 ubox
44 72 0.006933593 ubox
45 53 0.700491487 ubox
45 66 0.038837349 ubox
45 67 0.376049302 ubox
45 71 0.010749812 ubox
46 58 0.057015522 ubox
46 64 0.135181242 ubox
46 66 0.365076041 ubox
47 57 0.058969485 ubox
47 63 0.145913716 ubox
47 65 0.358416087 ubox
48 56 0.048974906 ubox
48 57 0.034776812 ubox
48 62 0.151282835 ubox
48 74 0.003819796 ubox
48 75 0.005077122 ubox
49 56 0.049331651 ubox
49 65 0.178046696 ubox
49 73 0.004757569 ubox
49 74 0.004933946 ubox
50 58 0.345962018 ubox
50 64 0.186960238 ubox
50 66 0.038747903 ubox
50 72 0.004364881 ubox
51 57 0.356870382 ubox
51 63 0.180325164 ubox
51 65 0.040119226 ubox
51 74 0.021439338 ubox
52 56 0.354381134 ubox
52 63 0.078040357 ubox
52 73 0.021529210 ubox
52 74 0.006216484 ubox
53 62 0.092652619 ubox
53 73 0.004690817 ubox
53 74 0.008819865 ubox
53 75 0.173885882 ubox
54 73 0.011422166 ubox
54 74 0.183049359 ubox
55 65 0.004395288 ubox
55 73 0.183027347 ubox
56 64 0.005467402 ubox
56 68 0.013598925 ubox
56 71 0.105469161 ubox
56 72 0.146306941 ubox
57 67 0.013330537 ubox
57 70 0.149124226 ubox
57 71 0.068553536 ubox
57 78 0.024987546 ubox
58 63 0.003291225 ubox
58 65 0.007530259 ubox
58 69 0.143958355 ubox
58 77 0.025880752 ubox
59 64 0.009387164 ubox
59 66 0.105213204 ubox
59 72 0.006905024 ubox
60 65 0.109462422 ubox
60 74 0.744893372 ubox
61 73 0.748234897 ubox
62 71 0.468408587 ubox
62 72 0.590621082 ubox
63 70 0.654496780 ubox
63 71 0.338277320 ubox
63 78 0.072704532 ubox
64 69 0.615949548 ubox
64 73 0.004258832 ubox
64 77 0.071996199 ubox
65 72 0.010433176 ubox
65 78 0.037624138 ubox
66 74 0.003876648 ubox
66 75 0.089826307 ubox
66 76 0.093234128 ubox
66 77 0.034201001 ubox
67 73 0.004241756 ubox
67 74 0.097679074 ubox
67 75 0.113322711 ubox
67 76 0.029233549 ubox
68 73 0.100205782 ubox
68 74 0.116051902 ubox
71 77 0.005490469 ubox
72 76 0.005409103 ubox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
60 74 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
63 70 0.9500000 lbox
64 69 0.9500000 lbox
showpage
end
%%EOF
