%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCUAGAGCUGUCGGAGAAGCGGGACCGCGAGGCCGGCGCGCGGCGCUCUGCGCGGUCAGAGGGAGCGCCUGGCAGCAGCAGGAGCAGCAGCAGCAGCCCGCGGCGGGGCCGCCGCCAGCCGCCGCGACCGCCGCGGCUGCAGCCUCCGAAGGGAGGCCGGGUGAGCCGGCGUACGCACUUUCCCGCGGACUUUCGGAGUGUUUGUGGAUAUACAUGCCAAGCCGCCACG\
) } def
/len { sequence length } bind def

/coor [
[185.05160522 755.49096680]
[184.24987793 740.51245117]
[183.44815063 725.53387451]
[182.64642334 710.55529785]
[181.54452515 695.59582520]
[180.14288330 680.66149902]
[178.74124146 665.72711182]
[182.62748718 652.21215820]
[190.94862366 643.75830078]
[200.42782593 641.27172852]
[197.04814148 626.65747070]
[193.66844177 612.04315186]
[190.28875732 597.42889404]
[177.55781555 589.78302002]
[173.92213440 575.01019287]
[182.02812195 561.70867920]
[178.64842224 547.09436035]
[168.24246216 536.43768311]
[172.67144775 521.24902344]
[169.29176331 506.63473511]
[165.91206360 492.02044678]
[162.53237915 477.40612793]
[147.20306396 463.57376099]
[153.86166382 443.19415283]
[149.89872742 428.72711182]
[145.93579102 414.26007080]
[141.97286987 399.79302979]
[138.00993347 385.32598877]
[134.04699707 370.85897827]
[117.62016296 362.75265503]
[112.25942230 344.90225220]
[121.82489777 328.53445435]
[117.47662354 314.17855835]
[113.12834930 299.82263184]
[97.96962738 292.52169800]
[92.68508911 276.19219971]
[101.01370239 260.79965210]
[96.47390747 246.50312805]
[91.93410492 232.20661926]
[87.39431000 217.91011047]
[82.85451508 203.61360168]
[78.31472015 189.31707764]
[67.08834839 179.52842712]
[70.28610992 164.03375244]
[65.74631500 149.73724365]
[61.20651627 135.44073486]
[49.31130600 126.30268097]
[34.32772064 125.60109711]
[19.34413910 124.89950562]
[4.36055517 124.19791412]
[-10.62302780 123.49632263]
[-25.60661125 122.79473877]
[-40.59019470 122.09314728]
[-55.57378006 121.39155579]
[-62.78678513 134.84277344]
[-75.12680054 143.82536316]
[-90.14370728 146.55581665]
[-104.85588074 142.49198914]
[-116.34221649 132.44078064]
[-122.32209015 118.39785004]
[-121.60819244 103.15143585]
[-114.34226990 89.72872925]
[-101.96697998 80.79480743]
[-86.93943787 78.12351990]
[-72.24337769 82.24523926]
[-60.79671478 92.34160614]
[-54.87218857 106.40797424]
[-39.88860703 107.10956573]
[-24.90502167 107.81115723]
[-9.92143917 108.51274109]
[5.06214428 109.21433258]
[20.04572868 109.91592407]
[35.02931213 110.61750793]
[50.01289368 111.31909943]
[52.89459610 104.39480591]
[58.65799713 90.54622650]
[61.53969574 83.62193298]
[50.48241806 73.48603058]
[35.08129120 69.86444855]
[30.92766380 55.56071854]
[19.87038612 45.42481232]
[4.46925879 41.80322647]
[0.31562975 27.49949837]
[-10.74164867 17.36359215]
[-26.85990524 14.34136581]
[-32.04571915 -1.21624804]
[-20.96437073 -13.30491066]
[-5.01540136 -9.48884201]
[-0.60574222 6.30631399]
[10.45153618 16.44222069]
[25.06177139 19.33881760]
[30.00629234 34.36753464]
[41.06356812 44.50344086]
[55.67380524 47.40003586]
[60.61832428 62.42875290]
[71.67560577 72.56465912]
[84.46809387 70.94004822]
[95.25229645 73.96183777]
[96.85345459 59.04753494]
[98.45461273 44.13323975]
[100.05577850 29.21894073]
[101.65693665 14.30464268]
[103.25810242 -0.60965538]
[101.06500244 -9.45939827]
[104.98165131 -15.71215057]
[106.78204346 -30.60371017]
[108.58244324 -45.49527359]
[110.38283539 -60.38683319]
[112.18322754 -75.27839661]
[113.98361969 -90.16995239]
[115.78401184 -105.06151581]
[108.60073090 -113.20118713]
[107.10443878 -123.73210907]
[111.54924774 -133.15359497]
[120.25390625 -138.46655273]
[122.45176697 -153.30465698]
[124.64962769 -168.14276123]
[119.01788330 -182.92768860]
[128.53652954 -194.38391113]
[130.73439026 -209.22201538]
[122.36805725 -222.91084290]
[127.98928070 -237.93687439]
[143.28593445 -242.77340698]
[156.52372742 -233.71028137]
[157.54776001 -217.69993591]
[145.57249451 -207.02415466]
[143.37463379 -192.18605042]
[149.16357422 -178.46243286]
[139.48773193 -165.94491577]
[137.28987122 -151.10679626]
[135.09201050 -136.26869202]
[143.48657227 -118.83918762]
[130.67556763 -103.26112366]
[128.87518311 -88.36956024]
[127.07479095 -73.47799683]
[125.27439117 -58.58643723]
[123.47399902 -43.69487762]
[121.67360687 -28.80331802]
[119.87321472 -13.91175652]
[118.17240143 0.99150574]
[116.57123566 15.90580368]
[114.97007751 30.82010078]
[113.36891174 45.73439789]
[111.76775360 60.64869690]
[110.16659546 75.56299591]
[113.79148102 77.40969849]
[117.09054565 79.79010010]
[129.62490845 71.55056763]
[142.15925598 63.31103897]
[154.69361877 55.07150650]
[167.22798157 46.83197403]
[179.76232910 38.59244156]
[186.63839722 23.70446968]
[202.99214172 22.48500252]
[212.00022888 36.18851852]
[204.39591980 50.71802139]
[188.00186157 51.12680054]
[175.46751404 59.36632919]
[162.93315125 67.60586548]
[150.39878845 75.84539795]
[137.86444092 84.08492279]
[125.33007812 92.32445526]
[128.01206970 109.89652252]
[118.53317261 127.24413300]
[98.68014526 136.16761780]
[75.50302887 130.90093994]
[80.04282379 145.19744873]
[84.58261871 159.49395752]
[96.13371277 170.30519104]
[92.61123657 184.77728271]
[97.15103149 199.07380676]
[101.69082642 213.37031555]
[106.23062134 227.66682434]
[110.77041626 241.96333313]
[115.31021118 256.25985718]
[127.89504242 261.03149414]
[135.32980347 272.01663208]
[135.08901978 285.08450317]
[127.48427582 295.47433472]
[131.83255005 309.83026123]
[136.18081665 324.18618774]
[147.53601074 327.63952637]
[155.73587036 336.05380249]
[158.83126831 347.26342773]
[156.16644287 358.46011353]
[148.51403809 366.89602661]
[152.47697449 381.36306763]
[156.43989563 395.83010864]
[160.40283203 410.29714966]
[164.36576843 424.76419067]
[168.32868958 439.23123169]
[177.04194641 442.75686646]
[183.07411194 449.78536987]
[185.17393494 458.66519165]
[182.99516296 467.38442993]
[177.14666748 474.02645874]
[180.52636719 488.64074707]
[183.90605164 503.25503540]
[187.28575134 517.86932373]
[197.93345642 529.57135010]
[193.26272583 543.71466064]
[196.64241028 558.32897949]
[209.76527405 566.72113037]
[212.98457336 581.59027100]
[204.90304565 594.04919434]
[208.28274536 608.66345215]
[211.66242981 623.27777100]
[215.04212952 637.89208984]
[220.71282959 651.77886963]
[228.52893066 664.58154297]
[236.34501648 677.38421631]
[251.76344299 680.85528564]
[260.14077759 694.25659180]
[256.50692749 709.63745117]
[243.01777649 717.87261963]
[227.67619324 714.07635498]
[219.58409119 700.50091553]
[223.54234314 685.20031738]
[215.72624207 672.39764404]
[207.91015625 659.59497070]
[193.67559814 664.32543945]
[195.07725525 679.25982666]
[196.47889709 694.19421387]
[199.48075867 698.42413330]
[200.47216797 702.93182373]
[199.68186951 706.90899658]
[197.62498474 709.75360107]
[198.42671204 724.73211670]
[199.22843933 739.71069336]
[200.03016663 754.68927002]
[210.95547485 766.43731689]
[208.43986511 782.28192139]
[194.41310120 790.06842041]
[179.63531494 783.82373047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 230]
[2 229]
[3 228]
[4 227]
[5 223]
[6 222]
[7 221]
[10 208]
[11 207]
[12 206]
[13 205]
[16 202]
[17 201]
[19 199]
[20 198]
[21 197]
[22 196]
[24 191]
[25 190]
[26 189]
[27 188]
[28 187]
[29 186]
[32 181]
[33 180]
[34 179]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[44 168]
[45 167]
[46 166]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[77 96]
[78 95]
[80 93]
[81 92]
[83 90]
[84 89]
[98 145]
[99 144]
[100 143]
[101 142]
[102 141]
[103 140]
[105 139]
[106 138]
[107 137]
[108 136]
[109 135]
[110 134]
[111 133]
[115 131]
[116 130]
[117 129]
[119 127]
[120 126]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
[209 220]
[210 219]
[211 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
