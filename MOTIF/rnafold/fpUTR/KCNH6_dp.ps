%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KCNH6)
} def

/sequence { (\
ACGCUGCUGAGCCCGAGGACAGACGGAGACGCCGGGAGCCAGUGGCGCCUGUGGCUCCGGGCAGGGGCCGCGGCCGAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.008377766 ubox
2 25 0.006690947 ubox
2 42 0.008900470 ubox
2 44 0.025094782 ubox
2 47 0.644588607 ubox
2 72 0.009471495 ubox
2 76 0.071462554 ubox
3 12 0.010182980 ubox
3 24 0.006760476 ubox
3 39 0.033623935 ubox
3 43 0.025172549 ubox
3 46 0.984771164 ubox
3 71 0.009502978 ubox
3 74 0.150167151 ubox
3 75 0.047269854 ubox
4 11 0.010238178 ubox
4 22 0.007477907 ubox
4 26 0.004210136 ubox
4 38 0.033761496 ubox
4 42 0.025192330 ubox
4 45 0.986367888 ubox
4 70 0.009494993 ubox
4 73 0.157557967 ubox
5 10 0.010137126 ubox
5 21 0.007485812 ubox
5 25 0.004228356 ubox
5 37 0.033817150 ubox
5 41 0.025116769 ubox
5 44 0.982551430 ubox
5 72 0.157445530 ubox
6 20 0.007484570 ubox
6 24 0.004249174 ubox
6 39 0.015919654 ubox
6 40 0.019519337 ubox
6 43 0.984374364 ubox
6 68 0.009368740 ubox
6 71 0.157554072 ubox
6 74 0.005874140 ubox
7 18 0.007335852 ubox
7 22 0.004640046 ubox
7 35 0.034411729 ubox
7 38 0.022406951 ubox
7 42 0.986414507 ubox
7 67 0.009193694 ubox
7 70 0.155163666 ubox
7 73 0.005924509 ubox
8 17 0.007284697 ubox
8 21 0.004909363 ubox
8 34 0.034406463 ubox
8 37 0.022083556 ubox
8 41 0.986152860 ubox
8 66 0.008852765 ubox
8 70 0.026960610 ubox
8 72 0.005899878 ubox
9 20 0.004945214 ubox
9 33 0.034448633 ubox
9 40 0.985735332 ubox
9 69 0.128590761 ubox
9 71 0.005799665 ubox
11 32 0.034962215 ubox
11 39 0.974043106 ubox
11 62 0.009267046 ubox
11 68 0.156819248 ubox
12 18 0.008231399 ubox
12 31 0.034947426 ubox
12 35 0.004803349 ubox
12 36 0.175709042 ubox
12 38 0.970295012 ubox
12 61 0.009301935 ubox
12 66 0.014859178 ubox
12 67 0.156775432 ubox
13 17 0.008708273 ubox
13 26 0.048885367 ubox
13 34 0.004884869 ubox
13 35 0.198727179 ubox
13 36 0.962078688 ubox
13 60 0.009300696 ubox
13 65 0.015615917 ubox
13 66 0.156530266 ubox
14 25 0.049503467 ubox
14 34 0.200515677 ubox
14 35 0.960725528 ubox
14 59 0.009027630 ubox
14 64 0.016315061 ubox
14 65 0.156209487 ubox
15 24 0.058724103 ubox
15 30 0.008716494 ubox
15 33 0.185292552 ubox
15 58 0.005755699 ubox
17 33 0.890858703 ubox
17 40 0.004231025 ubox
17 56 0.003393890 ubox
17 58 0.003728377 ubox
18 32 0.891398913 ubox
18 39 0.004458145 ubox
18 55 0.003533266 ubox
18 57 0.003922423 ubox
19 56 0.003746815 ubox
23 52 0.005230712 ubox
24 31 0.799887777 ubox
24 34 0.348979895 ubox
24 51 0.005361461 ubox
24 53 0.003540136 ubox
24 59 0.117005270 ubox
25 30 0.802358572 ubox
25 33 0.350562751 ubox
25 50 0.005286033 ubox
25 52 0.003597483 ubox
25 58 0.117308066 ubox
26 32 0.349968869 ubox
26 49 0.005275865 ubox
26 57 0.117331285 ubox
27 50 0.004531477 ubox
27 56 0.117297975 ubox
28 49 0.004609776 ubox
28 55 0.113434507 ubox
30 47 0.009258449 ubox
30 53 0.111289122 ubox
31 39 0.007767526 ubox
31 46 0.011033642 ubox
31 52 0.114508932 ubox
31 55 0.006059425 ubox
31 62 0.103956731 ubox
31 74 0.004785071 ubox
32 38 0.007776321 ubox
32 45 0.011043670 ubox
32 51 0.083356895 ubox
32 54 0.006808984 ubox
32 60 0.004364084 ubox
32 61 0.105357681 ubox
32 73 0.005020806 ubox
33 44 0.011042914 ubox
33 51 0.082290504 ubox
33 53 0.006574103 ubox
33 59 0.004462384 ubox
33 60 0.105317559 ubox
33 72 0.005014198 ubox
34 43 0.010707429 ubox
34 49 0.023445116 ubox
34 50 0.113995720 ubox
34 58 0.003785782 ubox
35 48 0.023229920 ubox
35 49 0.115172527 ubox
35 58 0.105502066 ubox
36 48 0.115024655 ubox
36 57 0.105587178 ubox
37 56 0.105602264 ubox
38 46 0.117358738 ubox
38 55 0.105623203 ubox
38 74 0.006575208 ubox
39 45 0.117586620 ubox
39 54 0.105621942 ubox
39 73 0.007135298 ubox
40 44 0.116736199 ubox
40 51 0.006511846 ubox
40 53 0.105413104 ubox
40 72 0.007664538 ubox
41 50 0.013193247 ubox
41 52 0.102602834 ubox
42 48 0.019870839 ubox
42 49 0.017858970 ubox
42 52 0.003872710 ubox
42 71 0.011294736 ubox
43 47 0.018693727 ubox
43 51 0.046899645 ubox
43 70 0.011302961 ubox
43 76 0.014024946 ubox
44 50 0.067804764 ubox
44 69 0.011356750 ubox
44 75 0.019040153 ubox
45 49 0.067018419 ubox
45 52 0.010379426 ubox
45 68 0.011357315 ubox
45 74 0.018743550 ubox
46 51 0.012853181 ubox
46 67 0.011356131 ubox
46 73 0.016557921 ubox
46 76 0.053650521 ubox
47 74 0.718069127 ubox
47 75 0.164474985 ubox
48 65 0.011712197 ubox
48 73 0.746756374 ubox
49 64 0.011716123 ubox
49 72 0.736407207 ubox
49 73 0.634856796 ubox
49 80 0.003531783 ubox
50 63 0.011713240 ubox
50 72 0.653213264 ubox
50 79 0.003345027 ubox
51 62 0.011708969 ubox
51 71 0.986879674 ubox
52 61 0.011676013 ubox
52 70 0.986865390 ubox
52 76 0.003960742 ubox
53 69 0.987315433 ubox
53 75 0.004941227 ubox
54 68 0.987347007 ubox
54 74 0.004942340 ubox
55 67 0.987322678 ubox
55 73 0.004832812 ubox
56 66 0.985476256 ubox
56 67 0.005486780 ubox
56 72 0.004200830 ubox
57 65 0.986073165 ubox
57 66 0.049318469 ubox
58 64 0.985931256 ubox
58 65 0.049474242 ubox
58 70 0.004050385 ubox
59 69 0.003740104 ubox
60 68 0.003391999 ubox
60 69 0.005947195 ubox
61 68 0.006157531 ubox
62 67 0.006344760 ubox
66 75 0.007639388 ubox
67 74 0.007653447 ubox
68 73 0.007655532 ubox
3 46 0.9500000 lbox
4 45 0.9500000 lbox
5 44 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
47 74 0.9500000 lbox
48 73 0.9500000 lbox
49 72 0.9500000 lbox
51 71 0.9500000 lbox
52 70 0.9500000 lbox
53 69 0.9500000 lbox
54 68 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
58 64 0.9500000 lbox
showpage
end
%%EOF
