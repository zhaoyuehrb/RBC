%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCUUCCGGGUUGGCUGUGGCUGUGGCUGCGGCGGCGGCGCAGGAGCAGAAACCGGUGCGGCGCAGAAGCCCCAGAGGCGGGCGGGGCGGAGCGGAGGGCCAGCGGGCCCCGGCGUGGGUCUCCCGCCAGGCCGCCGGAUUUAACCCUUAGUGGCUUCUGAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[-21.09537506 177.39686584]
[-13.00782490 164.76327515]
[-27.30774498 169.29232788]
[-41.60766602 173.82138062]
[-55.90758514 178.35041809]
[-70.20750427 182.87947083]
[-83.07353210 198.36364746]
[-101.76100922 193.48948669]
[-115.88270569 198.54693604]
[-130.00439453 203.60438538]
[-144.12608337 208.66183472]
[-146.03323364 221.06289673]
[-153.00511169 231.40728760]
[-163.65977478 237.75491333]
[-175.93185425 238.94708252]
[-187.47283936 234.81761169]
[-196.10047913 226.21281433]
[-210.40040588 230.74186707]
[-224.70033264 235.27091980]
[-239.00024414 239.79997253]
[-246.32429504 253.54754639]
[-260.89096069 257.93695068]
[-273.95205688 250.86985779]
[-288.25198364 255.39891052]
[-302.55187988 259.92794800]
[-316.85180664 264.45700073]
[-331.15173340 268.98605347]
[-338.42337036 274.58239746]
[-345.75970459 273.46371460]
[-360.14135742 277.72616577]
[-374.52297974 281.98864746]
[-388.90463257 286.25109863]
[-399.79251099 298.51428223]
[-415.80010986 294.95208740]
[-420.46014404 279.22897339]
[-408.97879028 267.51956177]
[-393.16708374 271.86944580]
[-378.78546143 267.60699463]
[-364.40380859 263.34454346]
[-350.02218628 259.08209229]
[-335.68078613 254.68614197]
[-321.38085938 250.15708923]
[-307.08093262 245.62803650]
[-292.78100586 241.09898376]
[-278.48110962 236.56993103]
[-271.86990356 223.27227783]
[-257.43228149 218.47546387]
[-243.52929688 225.50004578]
[-229.22937012 220.97099304]
[-214.92945862 216.44194031]
[-200.62953186 211.91288757]
[-195.86022949 194.94233704]
[-181.75318909 184.11239624]
[-163.81317139 183.88566589]
[-149.18353271 194.54014587]
[-135.06184387 189.48269653]
[-120.94015503 184.42524719]
[-106.81845856 179.36779785]
[-103.27750397 169.73005676]
[-94.82624817 163.51972961]
[-84.13120270 162.99751282]
[-74.73655701 168.57955933]
[-60.43663406 164.05050659]
[-46.13671494 159.52145386]
[-31.83679581 154.99240112]
[-17.53687668 150.46334839]
[-3.66538215 144.75532532]
[9.68067551 137.90821838]
[23.02673340 131.06112671]
[36.37279129 124.21402740]
[49.71884537 117.36692810]
[63.06490326 110.51982880]
[76.41096497 103.67272949]
[78.72789001 89.16352844]
[89.10250854 78.75908661]
[103.60498810 76.40051270]
[116.74194336 82.98121643]
[130.08799744 76.13411713]
[143.43405151 69.28701782]
[156.78010559 62.43991852]
[161.68603516 39.91749573]
[181.33883667 28.38688850]
[202.88591003 34.93754196]
[215.23066711 26.41657066]
[227.57543945 17.89559937]
[239.92019653 9.37462902]
[252.26495361 0.85365772]
[264.36734009 -8.00817680]
[276.21795654 -17.20398521]
[288.06857300 -26.39979553]
[299.91918945 -35.59560394]
[311.76980591 -44.79141235]
[313.29019165 -48.95687103]
[315.81866455 -52.08646393]
[318.89758301 -53.98863983]
[322.05438232 -54.64316559]
[324.85980225 -54.19077682]
[337.36083984 -62.48080826]
[349.86184692 -70.77084351]
[362.36285400 -79.06087494]
[369.58776855 -93.13607025]
[384.47085571 -93.72176361]
[396.97186279 -102.01179504]
[409.47290039 -110.30182648]
[421.89630127 -118.70769501]
[434.24105835 -127.22866058]
[434.48138428 -142.74388123]
[443.82232666 -155.13446045]
[458.67208862 -159.63598633]
[473.32067871 -154.51751709]
[482.13537598 -141.74720764]
[481.72677612 -126.23551178]
[472.25198364 -113.94699097]
[457.35424805 -109.60682678]
[442.76205444 -114.88390350]
[430.41729736 -106.36293030]
[426.68365479 -99.94938660]
[417.76290894 -97.80081177]
[405.26190186 -89.51078033]
[392.76089478 -81.22074890]
[386.43014526 -67.73851013]
[370.65289307 -66.55986023]
[358.15188599 -58.26982498]
[345.65084839 -49.97979355]
[333.14984131 -41.68976212]
[320.96560669 -32.94079590]
[309.11499023 -23.74498749]
[297.26437378 -14.54917908]
[285.41375732 -5.35337019]
[273.56314087 3.84243870]
[272.76989746 7.31718111]
[270.23007202 10.57157612]
[266.07003784 12.77789593]
[260.78591919 13.19841576]
[248.44116211 21.71938705]
[236.09640503 30.24035835]
[223.75164795 38.76132965]
[211.40689087 47.28229904]
[212.98204041 54.74483871]
[212.47935486 62.38230133]
[209.92172241 69.62497711]
[205.48579407 75.92864990]
[199.48999023 80.81549072]
[192.37156677 83.91027069]
[184.65476990 84.96913147]
[176.91230774 83.89874268]
[169.72270203 80.76435089]
[163.62721252 75.78597260]
[150.28115845 82.63307190]
[136.93508911 89.48017120]
[123.58903503 96.32727051]
[121.27210999 110.83647156]
[110.89749146 121.24091339]
[96.39501190 123.59948730]
[83.25805664 117.01878357]
[69.91200256 123.86588287]
[56.56594467 130.71298218]
[43.21988678 137.56007385]
[29.87383080 144.40718079]
[16.52777290 151.25427246]
[3.18171597 158.10137939]
[17.81818962 161.38369751]
[28.45059395 171.96443176]
[31.80418396 186.58474731]
[26.84606171 200.74162292]
[15.10331535 210.07478333]
[0.19267391 211.70964050]
[-13.29342842 205.14266968]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 66]
[3 65]
[4 64]
[5 63]
[6 62]
[8 58]
[9 57]
[10 56]
[11 55]
[17 51]
[18 50]
[19 49]
[20 48]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[29 40]
[30 39]
[31 38]
[32 37]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[77 151]
[78 150]
[79 149]
[80 148]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[97 125]
[98 124]
[99 123]
[100 122]
[102 120]
[103 119]
[104 118]
[105 116]
[106 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
