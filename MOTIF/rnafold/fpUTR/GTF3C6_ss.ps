%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCACGUGGGUACCGGCGCUCUCGGCGCCCGUAGCCACCCGCCCGCCGGAAGCCGACAUCUCGAGUUCUGGCAGAAGCAAUUUGCGCGGCGAGGAGCGGAGCGGCAGGAACCCAAUAAGCUGCUUCGCCUCGGAGCUGAAGCCCGUACUCAAGAUGGCGGCUCCGGGCGGGCGUGGCCAGUGACUAGAAGGCGAGGCGCCGCGGGACC\
) } def
/len { sequence length } bind def

/coor [
[62.80826950 224.48756409]
[59.44938660 208.80006409]
[69.73115540 196.48484802]
[69.73115540 181.48484802]
[69.73115540 166.48484802]
[66.58765411 159.79603577]
[69.84449005 151.26193237]
[70.06781769 136.26359558]
[70.29114532 121.26525879]
[56.27811813 115.91407013]
[46.44754028 127.24366760]
[43.24732208 142.73782349]
[29.06219292 147.28001404]
[19.23161125 158.60960388]
[9.40103149 169.93919373]
[6.20081472 185.43336487]
[-7.98431444 189.97554016]
[-17.81489563 201.30513000]
[-27.64547729 212.63471985]
[-37.47605896 223.96430969]
[-47.30663681 235.29391479]
[-57.13721848 246.62350464]
[-62.95090485 262.54949951]
[-79.86389923 261.37176514]
[-83.41417694 244.79371643]
[-68.46681213 236.79292297]
[-58.63623047 225.46333313]
[-48.80564880 214.13374329]
[-38.97507095 202.80413818]
[-29.14448929 191.47454834]
[-19.31390762 180.14495850]
[-16.81684113 165.46115112]
[-1.92856205 160.10861206]
[7.90201855 148.77902222]
[17.73259926 137.44943237]
[20.22966766 122.76563263]
[35.11794662 117.41308594]
[44.94852448 106.08348846]
[70.85865021 82.78422546]
[95.28091431 88.63385010]
[96.84143829 73.71524811]
[98.29085541 58.78543854]
[99.62908936 43.84525299]
[100.96732330 28.90506935]
[102.30555725 13.96488380]
[103.64379120 -0.97530162]
[104.98202515 -15.91548634]
[106.32025909 -30.85567093]
[107.65849304 -45.79585648]
[108.88547516 -60.74559021]
[110.00112152 -75.70404053]
[111.11676788 -90.66249847]
[108.63430023 -99.45312500]
[112.36201477 -105.83481598]
[113.70024872 -120.77500153]
[115.03848267 -135.71517944]
[116.37671661 -150.65536499]
[109.90145874 -165.09080505]
[118.74337769 -177.07702637]
[120.08161163 -192.01721191]
[121.41984558 -206.95739746]
[122.75807953 -221.89758301]
[124.09631348 -236.83776855]
[117.62105560 -251.27320862]
[126.46297455 -263.25942993]
[127.80120850 -278.19961548]
[129.13945007 -293.13980103]
[130.47767639 -308.07998657]
[118.95936584 -318.30911255]
[115.71084595 -333.18527222]
[121.77315521 -346.95889282]
[134.62957764 -354.43218994]
[135.96780396 -369.37237549]
[137.30604553 -384.31256104]
[124.65594482 -390.30386353]
[115.16347504 -401.16366577]
[110.65760803 -415.31381226]
[112.20767975 -430.51181030]
[119.89372253 -444.20581055]
[110.57884216 -455.96307373]
[101.26395416 -467.72033691]
[86.68875885 -476.38058472]
[90.97573853 -492.78356934]
[107.92445374 -493.20492554]
[113.02120972 -477.03521729]
[122.33609009 -465.27795410]
[131.65097046 -453.52069092]
[146.27842712 -456.84295654]
[149.60069275 -471.47042847]
[141.44252014 -484.74002075]
[145.02014160 -499.52700806]
[157.72094727 -507.22280884]
[161.04321289 -521.85028076]
[164.36546326 -536.47772217]
[167.68772888 -551.10516357]
[166.10023499 -557.52325439]
[167.74533081 -562.96295166]
[171.33279419 -566.11560059]
[175.08909607 -580.63763428]
[178.84539795 -595.15972900]
[182.60169983 -609.68176270]
[186.35800171 -624.20385742]
[190.11430359 -638.72589111]
[193.87060547 -653.24792480]
[197.62690735 -667.77001953]
[201.38320923 -682.29205322]
[205.13951111 -696.81414795]
[193.19538879 -706.26177979]
[186.13237000 -719.75378418]
[185.17413330 -734.95251465]
[190.48670959 -749.22473145]
[201.14967346 -760.09771729]
[215.31558228 -765.68756104]
[230.53012085 -765.02593994]
[244.15727234 -758.22735596]
[253.83604431 -746.46972656]
[257.88955688 -731.79022217]
[255.61547852 -716.73205566]
[247.40783691 -703.90417480]
[234.68862915 -695.52905273]
[219.66156006 -693.05786133]
[215.90525818 -678.53576660]
[212.14895630 -664.01373291]
[208.39265442 -649.49163818]
[204.63636780 -634.96960449]
[200.88006592 -620.44750977]
[197.12376404 -605.92547607]
[193.36746216 -591.40344238]
[189.61116028 -576.88134766]
[185.85485840 -562.35931396]
[182.31518555 -547.78289795]
[178.99291992 -533.15545654]
[175.67066956 -518.52801514]
[172.34840393 -503.90054321]
[180.47880554 -491.47348022]
[177.31793213 -476.59182739]
[164.22814941 -468.14816284]
[160.90589905 -453.52069092]
[177.02925110 -441.02603149]
[184.33555603 -422.57736206]
[181.31150818 -403.52838135]
[169.35818481 -389.10552979]
[152.24623108 -382.97433472]
[150.90798950 -368.03414917]
[149.56976318 -353.09396362]
[160.89337158 -343.45477295]
[164.41133118 -328.82302856]
[158.57072449 -314.76098633]
[145.41786194 -306.74176025]
[144.07963562 -291.80157471]
[142.74139404 -276.86138916]
[141.40316772 -261.92120361]
[147.97413635 -248.55439758]
[139.03649902 -235.49954224]
[137.69825745 -220.55935669]
[136.36003113 -205.61917114]
[135.02178955 -190.67898560]
[133.68356323 -175.73880005]
[140.25453186 -162.37199402]
[131.31689453 -149.31713867]
[129.97866821 -134.37695312]
[128.64042664 -119.43676758]
[127.30220032 -104.49658203]
[126.07522583 -89.54685211]
[124.95957184 -74.58839417]
[123.84392548 -59.62994003]
[126.48122406 -52.72585297]
[122.59867859 -44.45762253]
[121.26044464 -29.51743698]
[119.92221069 -14.57725239]
[118.58397675 0.36293253]
[117.24574280 15.30311775]
[115.90750885 30.24330330]
[114.56927490 45.18348694]
[113.23104095 60.12367249]
[115.76525879 67.06626129]
[111.76004028 75.27577209]
[110.19951630 90.19437408]
[115.38008881 76.11738586]
[125.68831635 65.22057343]
[139.45625305 59.26710129]
[154.45617676 59.22028351]
[168.26101685 65.08769226]
[178.63705444 75.91995239]
[183.90539551 89.96433258]
[183.21359253 104.94837189]
[176.67358398 118.44756317]
[165.34356689 128.27766418]
[151.05682373 132.84809875]
[136.12501526 131.41934204]
[122.96421814 124.22257996]
[113.70275116 112.41997528]
[119.77658081 126.13524628]
[125.85041809 139.85050964]
[131.92425537 153.56578064]
[143.86634827 165.60000610]
[135.60832214 180.40681458]
[119.09412384 176.57043457]
[118.20898438 159.63961792]
[112.13515472 145.92434692]
[106.06131744 132.20907593]
[99.98748016 118.49381256]
[85.28948212 121.48858643]
[85.06615448 136.48692322]
[84.84282684 151.48526001]
[84.73115540 166.48484802]
[84.73115540 181.48484802]
[84.73115540 196.48484802]
[95.01292419 208.80006409]
[91.65404510 224.48756409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[7 205]
[8 204]
[9 203]
[10 38]
[11 37]
[13 35]
[14 34]
[15 33]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[40 178]
[41 177]
[42 175]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 166]
[51 165]
[52 164]
[54 163]
[55 162]
[56 161]
[57 160]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[65 152]
[66 151]
[67 150]
[68 149]
[72 145]
[73 144]
[74 143]
[79 87]
[80 86]
[81 85]
[88 138]
[89 137]
[92 134]
[93 133]
[94 132]
[95 131]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[107 121]
[192 202]
[193 201]
[194 200]
[195 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
