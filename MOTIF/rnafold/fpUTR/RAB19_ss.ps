%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCACUUUCCUUUCACUUUCUCAGGACGCCAAACCCGACACCUGGGGCCAGAACUACACUUCCCACCAAGCAGCGAGGCAGGAGGAAGAAGGGGGCACUGGGGGGCUGAAAAGCAAACCCAGAAGAAAGCGAAAACAUUACCUGCUGACCAGCAGAGGUGAGAGAGCGAGACAGUUCUGUUCUAGGUGGCAAGAACC\
) } def
/len { sequence length } bind def

/coor [
[258.95227051 389.16439819]
[257.76947021 374.21112061]
[256.58670044 359.25781250]
[255.40390015 344.30453491]
[254.10311890 329.36102295]
[252.68443298 314.42828369]
[251.26573181 299.49551392]
[249.84703064 284.56277466]
[231.74348450 276.28887939]
[220.23039246 260.86853027]
[217.62986755 242.46762085]
[223.95591736 225.69764709]
[212.97932434 215.47441101]
[202.00274658 205.25117493]
[191.02615356 195.02793884]
[176.43934631 192.01560974]
[171.61410522 176.94818115]
[160.63752747 166.72494507]
[149.66094971 156.50169373]
[138.68435669 146.27845764]
[127.70777130 136.05522156]
[116.73119354 125.83198547]
[108.30556488 136.38516235]
[94.49168396 143.51789856]
[76.89058685 144.80000305]
[65.29073334 154.31018066]
[56.87541580 169.02815247]
[40.40303421 165.01605225]
[39.69833755 148.07675171]
[55.78055954 142.71034241]
[67.38040924 133.20016479]
[63.90708923 126.55290222]
[48.92036438 125.92192078]
[56.96044540 113.25838470]
[53.48712540 106.61112976]
[39.05593491 110.70267487]
[24.62474442 114.79421997]
[10.19355297 118.88576508]
[1.14988399 132.13685608]
[-14.85893154 133.18441772]
[-25.55229950 121.22484589]
[-22.72718430 105.43249512]
[-8.55077076 97.92191315]
[6.10200787 104.45457458]
[20.53319931 100.36302948]
[34.96438980 96.27148438]
[49.39558029 92.17993927]
[52.68390274 77.54480743]
[41.39005661 67.67317963]
[30.09621048 57.80155182]
[18.60486794 60.89409637]
[7.16569567 58.07982254]
[-1.40287685 50.17140198]
[-5.04748297 39.22161102]
[-2.97119641 27.99145317]
[-13.94778061 17.76821518]
[-24.78979492 18.78224564]
[-34.20370483 13.76035595]
[-39.18988037 4.57671690]
[-38.31156158 -5.61575651]
[-48.95994186 -16.18041420]
[-59.60832214 -26.74507332]
[-70.25670624 -37.30973053]
[-80.90508270 -47.87438965]
[-93.78893280 -48.60568237]
[-102.44097137 -57.63246918]
[-102.61315155 -69.73394775]
[-113.09342957 -80.46538544]
[-125.96412659 -81.39997101]
[-134.47259521 -90.56221771]
[-134.45370483 -102.66490173]
[-144.76327515 -113.56044769]
[-160.56646729 -113.74642944]
[-171.54957581 -125.11070251]
[-171.19653320 -140.91104126]
[-159.71678162 -151.77340698]
[-143.92105103 -151.25332642]
[-133.18066406 -139.65936279]
[-133.86772156 -123.87001038]
[-123.55815887 -112.97446442]
[-106.49660492 -108.88499451]
[-102.36198425 -90.94566345]
[-91.88170624 -80.21421814]
[-74.75772095 -76.39459991]
[-70.34042358 -58.52276993]
[-59.69204330 -47.95811081]
[-49.04366302 -37.39345169]
[-38.39528275 -26.82879448]
[-27.74690437 -16.26413727]
[-8.74305820 -12.72551537]
[-3.72454190 6.79163027]
[7.25204182 17.01486969]
[25.46667480 15.25880051]
[39.42644882 27.57804108]
[39.96783829 46.50770569]
[51.26168442 56.37933350]
[62.55553055 66.25096130]
[85.69388580 62.01139069]
[103.59060669 69.43315887]
[108.91819763 55.41114807]
[114.24578094 41.38913727]
[119.57337189 27.36712646]
[124.90096283 13.34511471]
[117.43964386 -2.47209525]
[123.60043335 -18.47844887]
[139.11804199 -24.95102882]
[144.22360229 -39.05539703]
[149.32917786 -53.15976334]
[145.92202759 -69.20106506]
[158.29000854 -79.96978760]
[173.70997620 -74.38798523]
[176.31921387 -58.19774628]
[163.43354797 -48.05419159]
[158.32797241 -33.94982529]
[153.22239685 -19.84545898]
[160.26919556 -9.05106640]
[159.80212402 4.02618456]
[151.76779175 14.60040569]
[138.92297363 18.67270279]
[133.59538269 32.69471359]
[128.26779175 46.71672440]
[122.94020844 60.73873901]
[117.61261749 74.76074982]
[129.97416687 93.01620483]
[126.95442963 114.85540009]
[137.93101501 125.07863617]
[148.90759277 135.30187988]
[159.88418579 145.52511597]
[170.86076355 155.74835205]
[181.83734131 165.97158813]
[197.20928955 169.71514893]
[201.24938965 184.05134583]
[212.22598267 194.27459717]
[223.20256042 204.49783325]
[234.17915344 214.72106934]
[250.68917847 208.74618530]
[267.94378662 211.40930176]
[281.72686768 221.96362305]
[288.71673584 237.74592590]
[303.70504761 238.33778381]
[318.69338989 238.92962646]
[333.68170166 239.52148438]
[348.67001343 240.11334229]
[363.65832520 240.70520020]
[372.36663818 237.91474915]
[378.87805176 241.42655945]
[393.85516357 242.25494385]
[408.83227539 243.08332825]
[421.69653320 233.49737549]
[437.17459106 237.71749878]
[443.39300537 252.50636292]
[435.58154297 266.51925659]
[419.73248291 269.00665283]
[408.00387573 258.06045532]
[393.02676392 257.23205566]
[378.04965210 256.40365601]
[363.06646729 255.69351196]
[348.07815552 255.10166931]
[333.08984375 254.50981140]
[318.10153198 253.91795349]
[303.11322021 253.32609558]
[288.12487793 252.73423767]
[289.13986206 259.15264893]
[288.90270996 266.07901001]
[299.55108643 276.64367676]
[310.19946289 287.20831299]
[320.84783936 297.77297974]
[331.49621582 308.33764648]
[339.80102539 312.16537476]
[342.22766113 319.15411377]
[352.70794678 329.88555908]
[363.18823242 340.61700439]
[379.11483765 344.52529907]
[383.43301392 360.34570312]
[371.70059204 371.80355835]
[355.98687744 367.11196899]
[352.45678711 351.09729004]
[341.97650146 340.36584473]
[331.49621582 329.63439941]
[320.93157959 318.98602295]
[310.28320312 308.42135620]
[299.63479614 297.85671997]
[288.98641968 287.29205322]
[278.33804321 276.72738647]
[264.77978516 283.14407349]
[266.19848633 298.07681274]
[267.61718750 313.00958252]
[269.03588867 327.94235229]
[272.96630859 336.19903564]
[270.35720825 343.12173462]
[271.53997803 358.07504272]
[272.72277832 373.02832031]
[273.90557861 387.98162842]
[286.08847046 398.04901123]
[287.50119019 413.79003906]
[277.30557251 425.86581421]
[261.55047607 427.11203003]
[249.58316040 416.78930664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 188]
[6 187]
[7 186]
[8 185]
[12 135]
[13 134]
[14 133]
[15 132]
[17 130]
[18 129]
[19 128]
[20 127]
[21 126]
[22 125]
[25 31]
[26 30]
[35 47]
[36 46]
[37 45]
[38 44]
[48 97]
[49 96]
[50 95]
[55 92]
[56 91]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[67 83]
[68 82]
[71 80]
[72 79]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[106 115]
[107 114]
[108 113]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[146 156]
[147 155]
[148 154]
[164 184]
[165 183]
[166 182]
[167 181]
[168 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
