%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLPPR3)
} def

/sequence { (\
GAGGAGACGCGCUUUGUGCUGGGCGCCGGCCGCGCCAGCCACGGCCUGCGGCGCCCGCGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.431636793 ubox
1 15 0.368703775 ubox
2 13 0.496987192 ubox
2 14 0.388600501 ubox
2 15 0.066573056 ubox
3 12 0.505343052 ubox
3 13 0.394649091 ubox
3 14 0.061145024 ubox
3 15 0.365165867 ubox
3 55 0.003341394 ubox
3 64 0.142132101 ubox
4 12 0.395147692 ubox
4 13 0.049319671 ubox
4 14 0.466277356 ubox
4 15 0.073272343 ubox
4 54 0.003354483 ubox
4 63 0.142910609 ubox
5 13 0.478874259 ubox
5 14 0.075319371 ubox
5 15 0.055656556 ubox
5 20 0.027722688 ubox
6 12 0.479654211 ubox
6 13 0.065466177 ubox
6 14 0.059513804 ubox
6 15 0.024938303 ubox
6 19 0.029238171 ubox
7 13 0.056811275 ubox
7 14 0.025002273 ubox
7 17 0.017418645 ubox
8 16 0.018913071 ubox
8 18 0.032598249 ubox
8 28 0.013181611 ubox
8 50 0.007050012 ubox
8 59 0.155251879 ubox
9 15 0.017304242 ubox
9 17 0.035853567 ubox
9 19 0.085730183 ubox
9 26 0.021609418 ubox
9 27 0.009403022 ubox
9 49 0.008274188 ubox
9 58 0.155219039 ubox
9 61 0.026645253 ubox
10 16 0.036534178 ubox
10 18 0.085898629 ubox
10 25 0.023614391 ubox
10 48 0.008244510 ubox
10 57 0.154825518 ubox
10 59 0.012974542 ubox
10 60 0.025687838 ubox
11 15 0.023289501 ubox
11 17 0.085983890 ubox
11 19 0.154533217 ubox
11 24 0.023627280 ubox
11 45 0.018045907 ubox
11 56 0.011077269 ubox
11 58 0.014777581 ubox
11 61 0.073303397 ubox
12 16 0.085533833 ubox
12 18 0.154698230 ubox
12 23 0.023623484 ubox
12 44 0.018122134 ubox
12 57 0.014649077 ubox
12 60 0.073363433 ubox
13 22 0.023558423 ubox
13 43 0.017609095 ubox
13 59 0.063218480 ubox
14 21 0.022267347 ubox
14 59 0.004262162 ubox
14 60 0.003494895 ubox
15 41 0.018375069 ubox
15 43 0.010699798 ubox
15 59 0.008131431 ubox
15 62 0.109466489 ubox
16 40 0.018701878 ubox
16 42 0.014284261 ubox
16 54 0.005123423 ubox
16 58 0.013614740 ubox
16 61 0.128679741 ubox
16 63 0.963499608 ubox
17 41 0.014260602 ubox
17 53 0.005133501 ubox
17 57 0.012606852 ubox
17 59 0.093388272 ubox
17 60 0.105335770 ubox
17 62 0.967716281 ubox
18 39 0.021425445 ubox
18 40 0.010185846 ubox
18 52 0.005138030 ubox
18 56 0.003879211 ubox
18 58 0.140068915 ubox
18 61 0.969471263 ubox
19 38 0.023643798 ubox
19 51 0.005137951 ubox
19 57 0.137161465 ubox
19 60 0.968805865 ubox
20 37 0.023349722 ubox
20 50 0.005005361 ubox
20 57 0.444306526 ubox
20 59 0.809740847 ubox
21 36 0.019708246 ubox
21 49 0.004838048 ubox
21 56 0.959568040 ubox
21 58 0.270347865 ubox
22 35 0.015202091 ubox
22 36 0.013312520 ubox
22 47 0.003604713 ubox
22 55 0.992594898 ubox
22 56 0.113311554 ubox
22 64 0.005771980 ubox
23 33 0.008537729 ubox
23 35 0.018284749 ubox
23 46 0.003977983 ubox
23 54 0.995583437 ubox
23 55 0.086922018 ubox
23 58 0.005178937 ubox
23 63 0.005843369 ubox
24 32 0.008543807 ubox
24 34 0.022166038 ubox
24 50 0.003902372 ubox
24 53 0.998230979 ubox
24 57 0.005381369 ubox
25 31 0.008354710 ubox
25 33 0.022188514 ubox
25 45 0.004845812 ubox
25 49 0.006720642 ubox
25 52 0.997968458 ubox
25 54 0.047162866 ubox
25 56 0.005347704 ubox
25 61 0.006181863 ubox
26 32 0.022161589 ubox
26 44 0.004850288 ubox
26 48 0.007130592 ubox
26 51 0.997925126 ubox
26 53 0.046067133 ubox
26 60 0.006185933 ubox
27 43 0.004857068 ubox
27 48 0.025920337 ubox
27 50 0.996799832 ubox
27 53 0.009713125 ubox
27 59 0.006186778 ubox
28 36 0.008517712 ubox
28 42 0.004787933 ubox
28 46 0.820886502 ubox
28 47 0.020224002 ubox
28 49 0.534179185 ubox
28 52 0.009557593 ubox
28 58 0.005996552 ubox
29 35 0.009400652 ubox
29 45 0.911734821 ubox
29 46 0.031161518 ubox
29 49 0.179201599 ubox
29 52 0.052197300 ubox
29 61 0.022605511 ubox
30 34 0.009337156 ubox
30 44 0.912328951 ubox
30 48 0.233592898 ubox
30 51 0.054161467 ubox
30 60 0.022644966 ubox
31 43 0.911977656 ubox
31 48 0.226874753 ubox
31 50 0.055219374 ubox
31 59 0.022644948 ubox
32 39 0.563913397 ubox
32 42 0.708041528 ubox
32 45 0.049161135 ubox
32 47 0.248388176 ubox
32 49 0.059555619 ubox
32 54 0.005302718 ubox
32 58 0.022631516 ubox
33 38 0.617116972 ubox
33 43 0.015263415 ubox
33 44 0.048264495 ubox
33 48 0.060128365 ubox
33 53 0.005321402 ubox
33 57 0.022628163 ubox
34 42 0.021805584 ubox
34 45 0.403890452 ubox
34 47 0.014635631 ubox
34 49 0.004327857 ubox
34 52 0.005378080 ubox
34 56 0.022442412 ubox
35 44 0.404474781 ubox
35 48 0.004476966 ubox
35 51 0.005388976 ubox
36 43 0.404159578 ubox
36 48 0.007649820 ubox
36 50 0.005347036 ubox
37 47 0.008010258 ubox
38 45 0.016844387 ubox
38 46 0.005877383 ubox
38 49 0.006620502 ubox
38 52 0.022470769 ubox
39 44 0.017722083 ubox
39 48 0.006557158 ubox
39 51 0.022476337 ubox
40 50 0.022443062 ubox
42 48 0.021281386 ubox
43 47 0.013138366 ubox
43 49 0.003489415 ubox
44 61 0.014584478 ubox
45 60 0.014422995 ubox
46 59 0.014235783 ubox
46 60 0.015403757 ubox
47 59 0.015913626 ubox
47 62 0.004635902 ubox
48 58 0.021516061 ubox
48 61 0.005294017 ubox
49 57 0.021521149 ubox
49 60 0.005294381 ubox
50 56 0.021518737 ubox
50 64 0.005166234 ubox
51 55 0.021171363 ubox
51 58 0.005376837 ubox
51 63 0.006530776 ubox
52 57 0.005371518 ubox
53 61 0.010200886 ubox
54 60 0.010208845 ubox
55 59 0.010134742 ubox
16 63 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
showpage
end
%%EOF
