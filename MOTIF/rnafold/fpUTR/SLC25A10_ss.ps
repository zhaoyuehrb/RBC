%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGCAGGGGGCGUGGCCUAGCGGUCCCGCCCCCGGGGCGCGCGCGCGCAUUGGCUGUGCGGGGUGCGGGCGCGCGGGCGGCGCUUUGAACCGGGCGCGGGGCGCGGGGCGCGGGGCGCUGCGGCCGGUACACGCCGGGGUAGGGCCGGGGUCGGGUUGUGGUCGGGCCGGGAUUGGGCUCUCCUGGGCC\
) } def
/len { sequence length } bind def

/coor [
[168.84721375 170.66772461]
[168.41665649 153.76651001]
[155.94461060 145.43295288]
[143.47256470 137.09941101]
[130.93276978 128.86816406]
[118.32604218 120.73979187]
[103.22164917 133.13142395]
[80.34122467 133.56581116]
[70.63687897 145.00372314]
[60.93253708 156.44163513]
[51.22819519 167.87954712]
[41.52385330 179.31744385]
[31.81951141 190.75535583]
[22.11516953 202.19326782]
[19.08696556 217.72196960]
[4.95307589 222.42115784]
[-4.75126648 233.85906982]
[-14.45560837 245.29698181]
[-24.15995026 256.73489380]
[-26.56173134 272.95721436]
[-41.90899658 278.73593140]
[-54.41379166 268.12640381]
[-51.21225739 252.04278564]
[-35.59785843 247.03054810]
[-25.89351654 235.59263611]
[-16.18917465 224.15472412]
[-6.48483229 212.71682739]
[-4.15074730 198.00624084]
[10.67726135 192.48892212]
[20.38160324 181.05101013]
[30.08594513 169.61311340]
[39.79028702 158.17520142]
[49.49462891 146.73728943]
[59.19897079 135.29937744]
[68.90331268 123.86147308]
[66.96217346 116.61702728]
[52.47322083 120.49907684]
[48.59141541 106.01006317]
[63.07988739 102.12814331]
[61.13874435 94.88369751]
[47.01558304 89.83035278]
[32.89242172 84.77700043]
[18.76926041 79.72365570]
[4.64609957 74.67031097]
[-9.47706127 69.61695862]
[-23.60022163 64.56361389]
[-39.20030975 67.19948578]
[-48.57698059 55.62678528]
[-62.70014191 50.57343674]
[-76.82330322 45.52009201]
[-90.94646454 40.46674347]
[-105.06962585 35.41339493]
[-119.19278717 30.36004639]
[-137.21943665 34.08129120]
[-148.05230713 20.28362846]
[-162.25625610 15.46203613]
[-179.19834900 16.09617424]
[-184.49774170 -0.00825879]
[-170.48968506 -9.55869961]
[-157.43466187 1.25808394]
[-143.23071289 6.07967615]
[-132.23626709 1.01087558]
[-120.35647583 4.92393780]
[-114.13943481 16.23688507]
[-100.01627350 21.29023361]
[-85.89311218 26.34358215]
[-71.76995087 31.39692879]
[-57.64679337 36.45027542]
[-43.52363205 41.50362396]
[-28.93372726 38.50630569]
[-18.54687500 50.44045258]
[-4.42371368 55.49380112]
[9.69944763 60.54714584]
[23.82260895 65.60049438]
[37.94577026 70.65384674]
[52.06893158 75.70719147]
[66.19209290 80.76053619]
[81.69888306 72.19461823]
[96.93984222 72.49330902]
[99.38327789 57.69365692]
[101.82670593 42.89400864]
[104.27014160 28.09435654]
[106.71356964 13.29470730]
[109.15700531 -1.50494313]
[111.60043335 -16.30459213]
[114.04386902 -31.10424232]
[116.48729706 -45.90389252]
[118.93073273 -60.70354462]
[121.37416077 -75.50319672]
[109.75894165 -90.45399475]
[112.69333649 -108.83475494]
[127.85752869 -119.06889343]
[129.81541443 -133.94056702]
[131.77331543 -148.81224060]
[125.90348816 -163.50427246]
[135.23583984 -175.11273193]
[137.19374084 -189.98440552]
[128.60739136 -203.53631592]
[133.98516846 -218.65118408]
[149.20169067 -223.73417664]
[162.58415222 -214.88604736]
[163.86666870 -198.89434814]
[152.06539917 -188.02651978]
[150.10751343 -173.15484619]
[156.11737061 -159.52653503]
[146.64498901 -146.85433960]
[144.68708801 -131.98266602]
[142.72920227 -117.11100006]
[151.48405457 -109.76611328]
[155.64234924 -98.99299622]
[154.06030273 -87.43299866]
[147.01707458 -77.98082733]
[136.17381287 -73.05976105]
[133.73037720 -58.26011276]
[131.28694153 -43.46046066]
[128.84352112 -28.66081047]
[126.40008545 -13.86116123]
[123.95664978 0.93848902]
[121.51322174 15.73813915]
[119.06978607 30.53778839]
[116.62635803 45.33744049]
[114.18292236 60.13708878]
[111.73949432 74.93673706]
[125.30202484 88.78438568]
[126.45441437 108.13306427]
[139.06114197 116.26144409]
[147.98506165 118.28694916]
[151.80612183 124.62736511]
[164.27816772 132.96092224]
[176.75021362 141.29446411]
[189.30010986 135.57240295]
[202.93006897 136.79315186]
[214.08540344 144.53086853]
[219.90998840 156.67414856]
[218.97718811 170.00117493]
[231.31121826 178.53767395]
[243.64523315 187.07417297]
[259.39596558 188.56571960]
[265.45791626 202.17095947]
[277.79193115 210.70745850]
[290.12594604 219.24395752]
[298.97882080 221.56036377]
[302.59039307 228.02239990]
[314.78308105 236.75956726]
[326.97579956 245.49673462]
[339.16848755 254.23390198]
[351.36120605 262.97106934]
[363.55389404 271.70822144]
[379.27813721 273.45727539]
[385.11663818 287.15988159]
[397.30935669 295.89703369]
[415.66488647 297.26873779]
[422.29269409 313.51065063]
[434.62670898 322.04714966]
[446.96072388 330.58364868]
[459.29476929 339.12014771]
[475.04550171 340.61169434]
[481.10742188 354.21691895]
[493.44146729 362.75341797]
[505.77548218 371.28991699]
[522.15509033 372.09005737]
[529.41027832 386.79702759]
[520.07751465 400.28152466]
[503.75756836 398.67187500]
[497.23898315 383.62393188]
[484.90493774 375.08743286]
[472.57092285 366.55093384]
[457.70239258 365.66998291]
[450.75827026 351.45416260]
[438.42422485 342.91766357]
[426.09020996 334.38116455]
[413.75619507 325.84466553]
[401.79251099 327.69967651]
[391.44384766 320.67495728]
[388.57217407 308.08975220]
[376.37948608 299.35256958]
[361.52734375 298.22845459]
[354.81674194 283.90093994]
[342.62402344 275.16375732]
[330.43133545 266.42660522]
[318.23861694 257.68942261]
[306.04592896 248.95227051]
[293.85324097 240.21510315]
[281.58944702 231.57797241]
[269.25543213 223.04147339]
[256.92141724 214.50497437]
[242.05288696 213.62402344]
[235.10873413 199.40820312]
[222.77471924 190.87170410]
[210.44068909 182.33520508]
[195.13861084 188.25822449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 130]
[3 129]
[4 128]
[5 126]
[6 125]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[13 30]
[14 29]
[16 27]
[17 26]
[18 25]
[19 24]
[40 77]
[41 76]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[55 61]
[56 60]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[92 108]
[93 107]
[94 106]
[96 104]
[97 103]
[135 190]
[136 189]
[137 188]
[139 186]
[140 185]
[141 184]
[143 183]
[144 182]
[145 181]
[146 180]
[147 179]
[148 178]
[150 176]
[151 175]
[153 172]
[154 171]
[155 170]
[156 169]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
