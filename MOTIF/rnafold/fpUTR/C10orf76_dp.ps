%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C10orf76)
} def

/sequence { (\
CCGUGAGCCCGGAGCAGCGGCAGCGUCGGUGGCGUCGAGAGCGAGCGGGCCCGGGAACGGCGCGGGUGGUAGAGGAGGAGCCGCGGGCUCGAUUCUCUAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.387841589 ubox
1 54 0.009982140 ubox
1 55 0.005792512 ubox
1 60 0.078112142 ubox
1 65 0.911583727 ubox
1 66 0.033717080 ubox
2 47 0.389103501 ubox
2 53 0.010021691 ubox
2 54 0.005798257 ubox
2 59 0.079544874 ubox
2 62 0.031715994 ubox
2 64 0.916540748 ubox
2 65 0.024334298 ubox
3 46 0.389140111 ubox
3 52 0.009979103 ubox
3 58 0.079517206 ubox
3 61 0.034159740 ubox
3 63 0.916889416 ubox
4 45 0.388738924 ubox
4 53 0.005218370 ubox
4 57 0.076718415 ubox
4 59 0.036476345 ubox
4 60 0.031591376 ubox
4 62 0.915723807 ubox
5 52 0.007077277 ubox
5 58 0.090908930 ubox
5 61 0.909136254 ubox
7 21 0.003610986 ubox
7 42 0.389048217 ubox
7 50 0.306769107 ubox
7 61 0.009341622 ubox
7 67 0.006652007 ubox
8 41 0.388891915 ubox
8 49 0.307505257 ubox
8 55 0.867853682 ubox
8 60 0.008163738 ubox
8 66 0.006995698 ubox
9 20 0.008857461 ubox
9 29 0.007401221 ubox
9 48 0.307513883 ubox
9 54 0.868225988 ubox
9 59 0.005797879 ubox
9 65 0.006997984 ubox
10 19 0.009162872 ubox
10 28 0.007740441 ubox
10 37 0.385690111 ubox
10 47 0.307498001 ubox
10 53 0.868235874 ubox
10 64 0.006966226 ubox
11 18 0.009382638 ubox
11 27 0.007989124 ubox
11 36 0.386422921 ubox
11 46 0.304406929 ubox
11 51 0.005928931 ubox
11 52 0.868216995 ubox
11 63 0.004314209 ubox
12 26 0.007726174 ubox
12 27 0.004596244 ubox
12 35 0.375861767 ubox
12 36 0.043774422 ubox
12 50 0.008321317 ubox
12 51 0.868032370 ubox
13 26 0.004267339 ubox
13 35 0.043350198 ubox
14 21 0.022483408 ubox
14 24 0.014412600 ubox
14 26 0.005487139 ubox
14 30 0.005471285 ubox
14 33 0.387616416 ubox
14 35 0.006169281 ubox
14 42 0.290950755 ubox
14 46 0.026067681 ubox
14 50 0.859484510 ubox
15 20 0.022469375 ubox
15 23 0.014418373 ubox
15 25 0.006230975 ubox
15 29 0.005784442 ubox
15 31 0.286202796 ubox
15 32 0.287850209 ubox
15 34 0.007286092 ubox
15 41 0.289342732 ubox
15 45 0.026930780 ubox
15 49 0.857894802 ubox
16 30 0.390740950 ubox
17 24 0.052900490 ubox
17 26 0.042039610 ubox
17 30 0.064816750 ubox
17 33 0.025053871 ubox
17 35 0.049574425 ubox
17 42 0.067242220 ubox
17 46 0.659536534 ubox
17 50 0.030860295 ubox
18 23 0.053012033 ubox
18 25 0.044232729 ubox
18 28 0.410515056 ubox
18 29 0.049857182 ubox
18 32 0.025410818 ubox
18 34 0.052177315 ubox
18 37 0.289419946 ubox
18 41 0.067074051 ubox
18 43 0.073531755 ubox
18 45 0.659133661 ubox
18 47 0.443284201 ubox
18 49 0.030906684 ubox
19 24 0.044315997 ubox
19 27 0.413485719 ubox
19 33 0.053661853 ubox
19 36 0.292643608 ubox
19 42 0.084256148 ubox
19 46 0.426751143 ubox
20 26 0.412179227 ubox
20 30 0.025448026 ubox
20 33 0.056608890 ubox
20 35 0.290066959 ubox
20 42 0.547022527 ubox
20 46 0.320398889 ubox
21 25 0.409764784 ubox
21 29 0.025491579 ubox
21 31 0.052895472 ubox
21 32 0.056927556 ubox
21 34 0.288733334 ubox
21 41 0.545053446 ubox
21 45 0.342286375 ubox
22 30 0.046393740 ubox
23 30 0.078617185 ubox
23 33 0.275674011 ubox
23 35 0.230803400 ubox
23 42 0.630852879 ubox
23 46 0.006715784 ubox
23 50 0.009998340 ubox
24 29 0.087723977 ubox
24 31 0.072050832 ubox
24 32 0.275454683 ubox
24 34 0.237011363 ubox
24 37 0.491184681 ubox
24 41 0.630189451 ubox
24 43 0.041192391 ubox
24 45 0.006770969 ubox
24 49 0.010008570 ubox
25 30 0.047448298 ubox
25 33 0.238780577 ubox
25 35 0.006856324 ubox
25 36 0.497009948 ubox
25 42 0.041288157 ubox
25 46 0.003220881 ubox
25 50 0.036581590 ubox
26 32 0.238345841 ubox
26 38 0.630629412 ubox
26 40 0.093189536 ubox
26 41 0.032905933 ubox
26 44 0.008695214 ubox
26 48 0.025462076 ubox
26 49 0.036604197 ubox
27 31 0.230125932 ubox
27 34 0.500942147 ubox
27 37 0.642454860 ubox
27 39 0.095581225 ubox
27 43 0.008950940 ubox
27 47 0.037798120 ubox
27 48 0.044355764 ubox
28 33 0.499460779 ubox
28 36 0.641478087 ubox
28 42 0.008581277 ubox
28 46 0.037803064 ubox
28 51 0.006881405 ubox
29 35 0.524985175 ubox
29 46 0.046610521 ubox
29 50 0.010012944 ubox
30 34 0.145278186 ubox
30 37 0.063289274 ubox
30 45 0.046461397 ubox
30 47 0.004851359 ubox
30 49 0.009948400 ubox
31 36 0.068029863 ubox
31 46 0.006233142 ubox
31 51 0.003746671 ubox
32 42 0.060881270 ubox
32 46 0.120060915 ubox
32 50 0.027711567 ubox
33 41 0.060948467 ubox
33 43 0.036761292 ubox
33 45 0.120447252 ubox
33 47 0.054585074 ubox
33 49 0.027614870 ubox
34 42 0.038257194 ubox
34 46 0.057636464 ubox
34 50 0.011868034 ubox
35 41 0.037415319 ubox
35 44 0.145298000 ubox
35 45 0.030582006 ubox
35 48 0.026794007 ubox
35 49 0.011392209 ubox
36 43 0.158899617 ubox
36 47 0.034629971 ubox
36 48 0.011226636 ubox
37 42 0.156184356 ubox
37 46 0.034845084 ubox
41 50 0.023427098 ubox
42 49 0.023486687 ubox
46 64 0.003425292 ubox
47 63 0.005080724 ubox
49 61 0.032426914 ubox
49 63 0.246364800 ubox
49 67 0.289971623 ubox
50 60 0.027537750 ubox
50 62 0.246562141 ubox
50 65 0.006151362 ubox
50 66 0.299036228 ubox
51 59 0.021481359 ubox
51 60 0.392369077 ubox
51 64 0.006175834 ubox
51 65 0.299121003 ubox
52 59 0.394814475 ubox
52 62 0.006803983 ubox
52 64 0.299094499 ubox
53 58 0.394178819 ubox
53 61 0.009167707 ubox
53 63 0.298307339 ubox
57 70 0.007014735 ubox
58 69 0.008953528 ubox
60 67 0.012656272 ubox
61 66 0.017035456 ubox
62 70 0.003542200 ubox
63 69 0.004499906 ubox
64 102 0.033142104 ubox
65 101 0.032034417 ubox
65 102 0.167537529 ubox
66 101 0.199830891 ubox
67 99 0.022717156 ubox
67 100 0.191390991 ubox
68 98 0.030308904 ubox
68 102 0.942368234 ubox
69 97 0.030468108 ubox
69 101 0.953156893 ubox
70 99 0.726039780 ubox
70 100 0.674244340 ubox
71 96 0.032016407 ubox
71 98 0.995194362 ubox
72 95 0.032517018 ubox
72 97 0.999378130 ubox
73 94 0.032430568 ubox
73 96 0.999204080 ubox
73 98 0.005608330 ubox
74 93 0.031080920 ubox
74 94 0.004392833 ubox
74 95 0.998991905 ubox
74 96 0.011371500 ubox
74 97 0.005556160 ubox
74 98 0.007077710 ubox
75 93 0.030056764 ubox
75 94 0.990690769 ubox
75 95 0.025209774 ubox
75 97 0.007226827 ubox
76 93 0.972675768 ubox
76 94 0.032775978 ubox
76 96 0.007266793 ubox
77 90 0.018290728 ubox
77 93 0.027065887 ubox
77 95 0.007270419 ubox
78 89 0.008058293 ubox
78 90 0.997745924 ubox
79 89 0.999670660 ubox
80 88 0.999988615 ubox
81 87 0.999973565 ubox
82 86 0.992698508 ubox
1 65 0.9500000 lbox
2 64 0.9500000 lbox
3 63 0.9500000 lbox
4 62 0.9500000 lbox
5 61 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
68 102 0.9500000 lbox
69 101 0.9500000 lbox
70 100 0.9500000 lbox
71 98 0.9500000 lbox
72 97 0.9500000 lbox
73 96 0.9500000 lbox
74 95 0.9500000 lbox
75 94 0.9500000 lbox
76 93 0.9500000 lbox
78 90 0.9500000 lbox
79 89 0.9500000 lbox
80 88 0.9500000 lbox
81 87 0.9500000 lbox
82 86 0.9500000 lbox
showpage
end
%%EOF
