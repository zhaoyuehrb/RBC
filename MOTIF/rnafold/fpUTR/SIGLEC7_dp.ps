%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIGLEC7)
} def

/sequence { (\
GCAGUUCCUGAGAGAAGAACCCUGAGGAACAGACGUUCCCUCGCGGCCCUGGCACCUCCAACCCCAGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.022710371 ubox
1 44 0.123427944 ubox
1 47 0.227944810 ubox
1 53 0.179268161 ubox
2 10 0.295465928 ubox
2 24 0.023777846 ubox
2 35 0.024794329 ubox
2 43 0.123070688 ubox
2 46 0.227934310 ubox
2 51 0.154281217 ubox
2 52 0.145688917 ubox
3 9 0.295929860 ubox
3 23 0.025504687 ubox
3 41 0.018145697 ubox
3 50 0.186592589 ubox
3 57 0.007239862 ubox
4 8 0.289575212 ubox
4 20 0.486443931 ubox
4 22 0.022289681 ubox
4 30 0.629016890 ubox
4 34 0.005173925 ubox
4 40 0.013228370 ubox
4 44 0.024557460 ubox
4 47 0.021293274 ubox
4 49 0.188520752 ubox
4 53 0.011747618 ubox
4 55 0.028615480 ubox
4 56 0.006803745 ubox
4 62 0.156906531 ubox
4 69 0.012978261 ubox
5 11 0.009275963 ubox
5 12 0.008691450 ubox
5 13 0.012159620 ubox
5 14 0.094806691 ubox
5 15 0.011904700 ubox
5 16 0.139488429 ubox
5 17 0.014079678 ubox
5 18 0.010773698 ubox
5 19 0.493558775 ubox
5 29 0.629901762 ubox
5 33 0.004729204 ubox
5 43 0.022448797 ubox
5 46 0.014890290 ubox
5 52 0.011336133 ubox
5 54 0.028336643 ubox
5 61 0.157037639 ubox
5 68 0.013248798 ubox
6 10 0.009043197 ubox
6 11 0.008745372 ubox
6 12 0.012379568 ubox
6 13 0.117197295 ubox
6 14 0.010505763 ubox
6 15 0.161752993 ubox
6 16 0.015219577 ubox
6 17 0.008757255 ubox
6 18 0.495520268 ubox
6 28 0.630507947 ubox
6 45 0.010410166 ubox
6 46 0.014584959 ubox
6 51 0.009970627 ubox
6 52 0.003689675 ubox
6 60 0.150582550 ubox
6 67 0.007467190 ubox
6 68 0.021586399 ubox
7 12 0.118988201 ubox
7 14 0.163185301 ubox
7 17 0.420918139 ubox
7 27 0.630788840 ubox
7 45 0.018454036 ubox
7 46 0.171737583 ubox
7 51 0.004580427 ubox
7 52 0.030033351 ubox
7 67 0.019021758 ubox
8 14 0.138611075 ubox
8 17 0.336074746 ubox
8 26 0.630790470 ubox
8 45 0.171280314 ubox
8 46 0.138012359 ubox
8 51 0.030053550 ubox
8 52 0.004057438 ubox
8 67 0.097171592 ubox
9 13 0.126778776 ubox
9 16 0.423368407 ubox
9 25 0.628994361 ubox
9 43 0.130856913 ubox
9 45 0.139821399 ubox
9 51 0.004087374 ubox
9 54 0.017632246 ubox
9 60 0.090625184 ubox
9 66 0.098155847 ubox
10 42 0.134065746 ubox
10 44 0.162402738 ubox
10 53 0.019748284 ubox
10 58 0.190641325 ubox
10 59 0.095207674 ubox
10 65 0.096236489 ubox
11 23 0.627100704 ubox
11 41 0.134026991 ubox
11 50 0.004806752 ubox
11 57 0.193477373 ubox
12 22 0.627248772 ubox
12 40 0.133692010 ubox
12 42 0.178016449 ubox
12 49 0.005124838 ubox
12 56 0.192861600 ubox
12 58 0.106982533 ubox
13 23 0.053877393 ubox
13 41 0.178753113 ubox
13 50 0.015675643 ubox
13 57 0.106991400 ubox
14 22 0.056707450 ubox
14 38 0.070684571 ubox
14 40 0.178276420 ubox
14 42 0.003934984 ubox
14 49 0.016079813 ubox
14 56 0.105650154 ubox
14 58 0.009315014 ubox
15 37 0.070280233 ubox
15 41 0.003742037 ubox
15 57 0.009181361 ubox
16 23 0.082067626 ubox
16 36 0.067654907 ubox
16 37 0.004483602 ubox
16 50 0.232345055 ubox
17 22 0.084662159 ubox
17 36 0.005849647 ubox
17 37 0.011303003 ubox
17 38 0.158448241 ubox
17 49 0.238548200 ubox
17 56 0.003352289 ubox
17 58 0.006326549 ubox
18 36 0.012031315 ubox
18 37 0.158824730 ubox
18 57 0.006129135 ubox
19 36 0.159348778 ubox
20 27 0.006327879 ubox
20 35 0.159158208 ubox
20 46 0.504410986 ubox
20 52 0.006693838 ubox
21 26 0.006506447 ubox
21 27 0.007879072 ubox
21 45 0.514965069 ubox
21 46 0.493670123 ubox
21 51 0.005727517 ubox
21 52 0.004505388 ubox
22 26 0.007864047 ubox
22 32 0.172815454 ubox
22 45 0.498786870 ubox
22 46 0.024122526 ubox
22 51 0.004534175 ubox
22 67 0.017135620 ubox
23 31 0.173328254 ubox
23 43 0.712604037 ubox
23 45 0.021581303 ubox
23 60 0.004797409 ubox
23 66 0.016907491 ubox
24 30 0.172939510 ubox
24 42 0.740887397 ubox
24 44 0.014337197 ubox
24 58 0.017986001 ubox
24 59 0.003720073 ubox
24 65 0.015317300 ubox
25 41 0.740061999 ubox
25 57 0.018572831 ubox
26 39 0.451705485 ubox
26 40 0.605855781 ubox
26 56 0.018587841 ubox
26 64 0.003254442 ubox
27 38 0.620434009 ubox
27 39 0.431589546 ubox
27 55 0.018556647 ubox
27 63 0.003174387 ubox
28 37 0.751877144 ubox
29 36 0.753226651 ubox
30 35 0.752193462 ubox
30 51 0.024956098 ubox
31 37 0.009619875 ubox
31 41 0.046458628 ubox
31 50 0.031488435 ubox
31 57 0.013997855 ubox
32 36 0.007565249 ubox
32 38 0.055624417 ubox
32 40 0.050111696 ubox
32 42 0.060862748 ubox
32 49 0.032717788 ubox
32 56 0.014986062 ubox
32 58 0.033994445 ubox
33 37 0.048546187 ubox
33 41 0.058443823 ubox
33 57 0.033749139 ubox
34 43 0.168975182 ubox
34 45 0.503700747 ubox
34 51 0.014170121 ubox
35 42 0.173904836 ubox
35 44 0.509424439 ubox
35 47 0.053653183 ubox
35 50 0.012973837 ubox
35 53 0.018222196 ubox
35 55 0.035949785 ubox
35 62 0.017416617 ubox
35 69 0.005100791 ubox
36 43 0.491453699 ubox
36 46 0.046914437 ubox
36 52 0.017808765 ubox
36 54 0.035319578 ubox
36 61 0.017350826 ubox
36 68 0.005124000 ubox
37 45 0.039041081 ubox
37 46 0.025369738 ubox
37 51 0.015749385 ubox
37 52 0.007068311 ubox
37 60 0.015896437 ubox
37 67 0.003301199 ubox
37 68 0.008804938 ubox
38 45 0.034820446 ubox
38 46 0.089958755 ubox
38 51 0.007731986 ubox
38 52 0.028541782 ubox
38 67 0.009195975 ubox
39 45 0.091100394 ubox
39 46 0.146324547 ubox
39 51 0.027992819 ubox
39 52 0.022204051 ubox
40 45 0.147861102 ubox
40 46 0.017532965 ubox
40 51 0.022631751 ubox
40 67 0.046461091 ubox
41 45 0.016005804 ubox
41 52 0.003900991 ubox
41 66 0.045585379 ubox
41 68 0.128967213 ubox
42 51 0.006290004 ubox
42 67 0.138009329 ubox
43 50 0.005357123 ubox
43 53 0.057849766 ubox
44 51 0.008949409 ubox
44 52 0.057852177 ubox
45 50 0.007431401 ubox
45 56 0.030014101 ubox
45 59 0.008663649 ubox
45 63 0.106668143 ubox
45 64 0.099105002 ubox
45 65 0.183312231 ubox
46 53 0.058219095 ubox
46 55 0.030015388 ubox
46 58 0.008552862 ubox
46 62 0.107325454 ubox
46 63 0.099366640 ubox
46 64 0.183532958 ubox
47 52 0.058603991 ubox
49 67 0.889705920 ubox
50 60 0.269710896 ubox
50 66 0.892465263 ubox
51 57 0.011639262 ubox
51 58 0.019969224 ubox
51 59 0.287207334 ubox
51 63 0.048775346 ubox
51 64 0.052878851 ubox
51 65 0.892132270 ubox
52 56 0.013027445 ubox
52 57 0.014558717 ubox
52 58 0.285183148 ubox
52 62 0.050067468 ubox
52 63 0.068534976 ubox
52 64 0.885470482 ubox
56 67 0.055182522 ubox
57 66 0.054602297 ubox
57 68 0.054880402 ubox
58 67 0.058668966 ubox
4 30 0.9500000 lbox
5 29 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
49 67 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
showpage
end
%%EOF
