%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUUGCAAACUAUAGUAUAAUAUCACUCUAAUGAUAUUGACUCUUCUGUGUUCUGUUUUUAUAUAUUUCCCUAGUUUUGCUUGUAUUUACUUGUUGCAUGUGUGUAAGCCCUGAGUUUUAUAGGUUUGAUUUGUGGAUCUGUUGUGCGGUUGAGCCCUCAUUCAUUCACCUGCUUCUCUGCAGUUGGACACACAAGCAAUUGCCUUUGCACGAACAGGGACAAUCUUAAUUUCUGUUUAAGAUGAGAAAAU\
) } def
/len { sequence length } bind def

/coor [
[-134.90245056 579.17687988]
[-127.33220673 566.22875977]
[-123.73595428 551.66625977]
[-120.13970184 537.10375977]
[-116.54344940 522.54119873]
[-112.94719696 507.97869873]
[-120.37789154 506.96145630]
[-130.51553345 518.01715088]
[-140.65319824 529.07281494]
[-134.30467224 542.85583496]
[-133.71836853 557.97863770]
[-138.95248413 572.13555908]
[-149.18023682 583.18005371]
[-162.82020569 589.45025635]
[-177.78088379 590.01910400]
[-191.78131104 584.83087158]
[-201.91896057 595.88653564]
[-212.05661011 606.94226074]
[-215.53649902 615.35736084]
[-222.38867188 618.07098389]
[-232.66229248 629.00042725]
[-242.93589783 639.92987061]
[-253.20951843 650.85931396]
[-263.48312378 661.78875732]
[-273.75674438 672.71820068]
[-284.03036499 683.64764404]
[-294.30398560 694.57708740]
[-293.56491089 710.36413574]
[-304.26702881 721.99340820]
[-320.06097412 722.56549072]
[-331.57644653 711.74102783]
[-331.98153687 695.94189453]
[-321.03591919 684.54150391]
[-305.23342896 684.30346680]
[-294.95980835 673.37402344]
[-284.68618774 662.44458008]
[-274.41256714 651.51513672]
[-264.13897705 640.58569336]
[-253.86535645 629.65625000]
[-243.59173584 618.72680664]
[-233.31811523 607.79736328]
[-223.11228943 596.80456543]
[-212.97463989 585.74890137]
[-202.83699036 574.69323730]
[-209.21638489 561.19390869]
[-209.94338989 546.24005127]
[-204.87608337 532.10894775]
[-194.75737000 520.96453857]
[-181.10610962 514.52581787]
[-165.98924255 513.80224609]
[-151.70887756 518.93518066]
[-141.57121277 507.87948608]
[-131.43356323 496.82379150]
[-144.30809021 504.52099609]
[-159.01091003 507.49200439]
[-173.86399841 505.39782715]
[-187.17218018 498.47738647]
[-197.41658020 487.52053833]
[-203.42802429 473.77783203]
[-204.52041626 458.81765747]
[-200.56907654 444.34744263]
[-192.02497864 432.01867676]
[-179.86326599 423.23843384]
[-165.47193909 419.00881958]
[-150.49348450 419.81253052]
[-136.63739014 425.55783081]
[-125.48505402 435.58905029]
[-118.30928802 448.76132202]
[-115.92906189 463.57125854]
[-118.61689758 478.33102417]
[-111.82357788 464.95751953]
[-105.03025055 451.58398438]
[-98.23693085 438.21047974]
[-91.44361115 424.83697510]
[-91.21698761 417.47052002]
[-84.48267365 411.34085083]
[-77.52445984 398.05236816]
[-70.56625366 384.76391602]
[-63.60804749 371.47543335]
[-56.73215103 358.14419556]
[-49.93882751 344.77069092]
[-43.14550781 331.39718628]
[-49.85100174 314.34210205]
[-41.79704285 297.52505493]
[-23.69428062 291.86712646]
[-17.23382378 278.32965088]
[-10.77336693 264.79220581]
[-24.81323051 270.07257080]
[-38.99688721 265.19158936]
[-46.81414032 252.38963318]
[-44.67692947 237.54266357]
[-33.56621552 227.46536255]
[-18.58173943 226.78312683]
[-6.60126305 235.80909729]
[-3.12376356 250.40063477]
[4.48309422 237.47253418]
[12.08995247 224.54443359]
[19.69680977 211.61634827]
[27.30366898 198.68824768]
[27.08939934 183.79518127]
[40.75636673 175.82495117]
[48.36322784 162.89685059]
[55.97008514 149.96875000]
[63.57694244 137.04066467]
[71.18379974 124.11255646]
[78.79065704 111.18446350]
[86.39751434 98.25636292]
[88.79898834 83.44984436]
[85.66822052 68.78021240]
[82.53744507 54.11057281]
[79.40666962 39.44093323]
[76.27590179 24.77129745]
[61.43286514 21.21502113]
[49.60819244 11.56412125]
[43.14967728 -2.26520753]
[43.33966446 -17.52714348]
[50.14042664 -31.19141579]
[62.20167542 -40.54497528]
[77.12863159 -43.73066330]
[91.95755005 -40.11596298]
[103.74412537 -30.41857338]
[110.14813232 -16.56391907]
[109.89804840 -1.30285072]
[103.04352570 12.33453465]
[90.94553375 21.64052582]
[94.07630920 36.31016159]
[97.20708466 50.97980118]
[100.33785248 65.64943695]
[103.46862793 80.31907654]
[110.79362488 81.92979431]
[109.33031464 67.00133514]
[123.07594299 60.99652481]
[133.03446960 72.21382141]
[125.44361877 85.15122223]
[132.76861572 86.76194000]
[141.76452637 74.75888062]
[150.76045227 62.75581360]
[159.75636292 50.75275040]
[168.75227356 38.74968719]
[177.74818420 26.74662590]
[173.66661072 16.94142532]
[174.00581360 6.40669823]
[178.63833618 -2.97107840]
[186.67385864 -9.54021358]
[196.62957764 -12.17462730]
[206.70356750 -10.46648788]
[216.13856506 -22.12756920]
[225.57356262 -33.78865051]
[228.23884583 -49.38373947]
[242.25932312 -54.41122437]
[251.69432068 -66.07230377]
[249.78680420 -81.76105499]
[259.59722900 -94.15180969]
[275.30529785 -95.89334869]
[287.59161377 -85.95245361]
[289.16699219 -70.22687531]
[279.09674072 -58.04632950]
[263.35540771 -56.63730621]
[253.92039490 -44.97622681]
[251.92996216 -30.21521568]
[237.23463440 -24.35364914]
[227.79963684 -12.69256973]
[218.36463928 -1.03148937]
[221.79893494 18.16778183]
[209.78556824 33.92010498]
[189.75125122 35.74253845]
[180.75534058 47.74560165]
[171.75942993 59.74866486]
[162.76350403 71.75173187]
[153.76759338 83.75479126]
[144.77168274 95.75785828]
[153.39221191 108.03330231]
[167.73617554 103.64575195]
[182.08013916 99.25820923]
[196.42411804 94.87065887]
[203.61961365 80.79940033]
[218.68296814 76.01707458]
[232.67736816 83.36093903]
[237.30017090 98.47402191]
[229.80876160 112.38999176]
[214.64764404 116.85275269]
[200.81166077 109.21463013]
[186.46769714 113.60217285]
[172.12371826 117.98972321]
[157.77975464 122.37726593]
[140.92742920 130.00790405]
[124.70616913 130.86805725]
[111.33790588 125.95768738]
[102.53455353 116.92510223]
[99.32561493 105.86322021]
[91.71875763 118.79132080]
[84.11190033 131.71942139]
[76.50504303 144.64752197]
[68.89818573 157.57560730]
[61.29132462 170.50370789]
[53.68446732 183.43180847]
[53.35464096 199.24957275]
[40.23176575 206.29510498]
[32.62490845 219.22320557]
[25.01804924 232.15129089]
[17.41119194 245.07939148]
[9.80433369 258.00750732]
[2.76408100 271.25268555]
[-3.69637632 284.79013062]
[-10.15683365 298.32757568]
[-4.09907913 308.51876831]
[-3.70404196 320.24807739]
[-8.95423126 330.61019897]
[-18.44806862 337.09390259]
[-29.77199745 338.19049072]
[-36.56531906 351.56402588]
[-43.35863876 364.93753052]
[-44.44883728 373.97830200]
[-50.31958008 378.43365479]
[-57.27779007 391.72210693]
[-64.23599243 405.01058960]
[-71.19420624 418.29904175]
[-78.07009888 431.63031006]
[-84.86341858 445.00381470]
[-91.65674591 458.37731934]
[-98.45006561 471.75082397]
[-105.24338531 485.12432861]
[-95.05153656 486.59463501]
[-85.05909729 493.02124023]
[-77.28160858 504.23715210]
[-70.48828888 517.61065674]
[-63.69496536 530.98419189]
[-56.90164185 544.35766602]
[-50.10832214 557.73120117]
[-43.31499863 571.10467529]
[-36.52167892 584.47821045]
[-21.24934769 587.83825684]
[-11.75087929 600.26055908]
[-12.51115894 615.87963867]
[-23.17120552 627.32067871]
[-38.69766998 629.18157959]
[-51.75943375 620.58361816]
[-56.18912888 605.58654785]
[-49.89518738 591.27154541]
[-56.68851089 577.89801025]
[-63.48183060 564.52453613]
[-70.27515411 551.15100098]
[-77.06847382 537.77746582]
[-83.86179352 524.40399170]
[-90.65512085 511.03045654]
[-98.08580780 510.01321411]
[-98.53571320 525.00646973]
[-98.98561096 539.99969482]
[-99.43551636 554.99298096]
[-99.88541412 569.98620605]
[-96.07382965 584.49389648]
[-103.63871002 597.44659424]
[-118.14730835 601.25451660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 53]
[8 52]
[9 51]
[16 44]
[17 43]
[18 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[70 222]
[71 221]
[72 220]
[73 219]
[74 218]
[76 217]
[77 216]
[78 215]
[79 214]
[80 212]
[81 211]
[82 210]
[85 205]
[86 204]
[87 203]
[95 202]
[96 201]
[97 200]
[98 199]
[99 198]
[101 196]
[102 195]
[103 194]
[104 193]
[105 192]
[106 191]
[107 190]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[135 171]
[136 170]
[137 169]
[138 168]
[139 167]
[140 166]
[146 163]
[147 162]
[148 161]
[150 159]
[151 158]
[172 185]
[173 184]
[174 183]
[175 182]
[225 245]
[226 244]
[227 243]
[228 242]
[229 241]
[230 240]
[231 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
