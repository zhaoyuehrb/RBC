%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FNDC11)
} def

/sequence { (\
GGAAGAGGCCCCAGCACUGACCUCCGUGGGGGUGGAGAUGAGGAGGAUGGAAAGGGUGUCUUCCUCCAGCAUCUUCCUGAAGCUCCCGGAUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.061002559 ubox
1 11 0.043356895 ubox
1 12 0.128094334 ubox
1 18 0.005173887 ubox
1 22 0.575670289 ubox
1 23 0.032498429 ubox
1 24 0.010667408 ubox
1 25 0.394086776 ubox
1 64 0.102429759 ubox
1 77 0.020381920 ubox
1 86 0.041910409 ubox
1 87 0.107627131 ubox
2 9 0.061177005 ubox
2 10 0.043539052 ubox
2 11 0.128079756 ubox
2 17 0.005384258 ubox
2 21 0.575384345 ubox
2 22 0.056390760 ubox
2 23 0.009033042 ubox
2 24 0.392917429 ubox
2 63 0.102606955 ubox
2 76 0.020478336 ubox
2 85 0.042160012 ubox
2 86 0.100446739 ubox
3 23 0.374415339 ubox
3 62 0.102572990 ubox
3 75 0.020374300 ubox
3 84 0.037602770 ubox
4 18 0.408093360 ubox
4 23 0.084803542 ubox
4 61 0.102551055 ubox
4 74 0.020248251 ubox
4 78 0.005594936 ubox
4 84 0.040990373 ubox
5 17 0.410179755 ubox
5 22 0.119686179 ubox
5 24 0.259306207 ubox
5 60 0.102606746 ubox
5 73 0.020196405 ubox
5 77 0.005619878 ubox
5 83 0.044438247 ubox
5 85 0.083169242 ubox
6 18 0.534703613 ubox
6 23 0.266180146 ubox
6 59 0.102458091 ubox
6 72 0.018907374 ubox
6 78 0.012845328 ubox
6 84 0.083659105 ubox
7 17 0.540056253 ubox
7 18 0.070135815 ubox
7 22 0.274904200 ubox
7 25 0.006247988 ubox
7 77 0.012889066 ubox
7 83 0.083182275 ubox
7 84 0.007472742 ubox
7 87 0.030025598 ubox
8 15 0.708013243 ubox
8 17 0.069711394 ubox
8 21 0.274323567 ubox
8 22 0.003905484 ubox
8 24 0.006232032 ubox
8 33 0.582097632 ubox
8 57 0.102353437 ubox
8 70 0.014078455 ubox
8 76 0.004403255 ubox
8 83 0.011010765 ubox
8 86 0.006000641 ubox
9 14 0.706185230 ubox
9 31 0.093910626 ubox
9 32 0.600609508 ubox
9 56 0.102309378 ubox
9 69 0.013756633 ubox
9 82 0.012674288 ubox
9 89 0.007641709 ubox
10 30 0.095183896 ubox
10 31 0.600609607 ubox
10 32 0.036037917 ubox
10 34 0.003338230 ubox
10 55 0.102022204 ubox
10 56 0.007869770 ubox
10 88 0.007559687 ubox
10 89 0.008262976 ubox
11 29 0.096114922 ubox
11 30 0.600409629 ubox
11 31 0.037063423 ubox
11 32 0.009219679 ubox
11 35 0.005689717 ubox
11 50 0.014193763 ubox
11 54 0.100579775 ubox
11 55 0.010922512 ubox
11 88 0.008275967 ubox
11 89 0.012832723 ubox
12 19 0.226267820 ubox
12 28 0.096570965 ubox
12 29 0.597118709 ubox
12 30 0.037662095 ubox
12 31 0.009281010 ubox
12 34 0.005707572 ubox
12 40 0.004434268 ubox
12 49 0.020029724 ubox
12 54 0.013271350 ubox
12 79 0.012148119 ubox
12 88 0.012854759 ubox
13 18 0.204115762 ubox
13 23 0.010580621 ubox
13 27 0.090077723 ubox
13 33 0.005229909 ubox
13 39 0.004421479 ubox
13 48 0.019883847 ubox
13 78 0.012107735 ubox
13 84 0.004263801 ubox
14 22 0.012203290 ubox
14 27 0.218243728 ubox
14 33 0.004040661 ubox
14 77 0.011849898 ubox
14 83 0.004394960 ubox
15 26 0.231797751 ubox
15 28 0.547556997 ubox
15 32 0.004912068 ubox
15 34 0.006602022 ubox
15 40 0.003883374 ubox
15 49 0.049964846 ubox
15 82 0.004389457 ubox
16 27 0.554072724 ubox
16 33 0.007711811 ubox
16 39 0.003881586 ubox
16 48 0.048654979 ubox
17 26 0.553452904 ubox
17 30 0.007140025 ubox
17 32 0.007821974 ubox
17 35 0.005370506 ubox
17 37 0.005354145 ubox
17 42 0.018274009 ubox
17 43 0.010030183 ubox
17 45 0.009161595 ubox
17 46 0.031664940 ubox
17 50 0.079587556 ubox
17 89 0.020724084 ubox
18 26 0.047057457 ubox
18 29 0.007321242 ubox
18 31 0.007270369 ubox
18 34 0.005213977 ubox
18 36 0.005260257 ubox
18 41 0.018201702 ubox
18 42 0.009972296 ubox
18 44 0.009028790 ubox
18 45 0.031562751 ubox
18 49 0.078926269 ubox
18 88 0.020816530 ubox
18 92 0.006895429 ubox
19 25 0.167777590 ubox
19 48 0.054009322 ubox
19 87 0.020773361 ubox
19 91 0.009877467 ubox
20 27 0.013421933 ubox
20 33 0.051052568 ubox
21 26 0.014576421 ubox
21 29 0.009485621 ubox
21 30 0.003982953 ubox
21 31 0.010183755 ubox
21 32 0.052469369 ubox
21 35 0.005234551 ubox
21 43 0.030998504 ubox
21 46 0.094309518 ubox
21 89 0.012713735 ubox
22 28 0.010602845 ubox
22 29 0.004017147 ubox
22 30 0.010289895 ubox
22 31 0.052446209 ubox
22 32 0.005847586 ubox
22 34 0.005263841 ubox
22 37 0.025083572 ubox
22 42 0.030598623 ubox
22 45 0.094434346 ubox
22 88 0.012634627 ubox
22 89 0.007119335 ubox
23 28 0.003638727 ubox
23 29 0.010310720 ubox
23 30 0.050499483 ubox
23 31 0.006059255 ubox
23 32 0.008797052 ubox
23 36 0.026700996 ubox
23 41 0.029090331 ubox
23 44 0.094420040 ubox
23 88 0.006126640 ubox
23 89 0.009854595 ubox
23 90 0.572398460 ubox
24 28 0.010087773 ubox
24 29 0.049692964 ubox
24 30 0.015003057 ubox
24 31 0.011784562 ubox
24 32 0.006527505 ubox
24 35 0.027621295 ubox
24 40 0.022768839 ubox
24 43 0.094421377 ubox
24 88 0.011063809 ubox
24 89 0.613477299 ubox
25 29 0.014952774 ubox
25 30 0.012268162 ubox
25 31 0.007285287 ubox
25 34 0.028078909 ubox
25 40 0.016180160 ubox
25 42 0.094303420 ubox
25 88 0.611468850 ubox
26 33 0.022030600 ubox
26 39 0.025791817 ubox
26 83 0.003796203 ubox
26 87 0.505495213 ubox
26 91 0.032525157 ubox
27 32 0.012967562 ubox
27 38 0.026401971 ubox
27 40 0.044530739 ubox
27 82 0.003903634 ubox
27 88 0.373280078 ubox
27 90 0.026672046 ubox
28 33 0.003396072 ubox
28 39 0.040816590 ubox
28 85 0.051757736 ubox
28 86 0.474595215 ubox
28 87 0.597850743 ubox
29 83 0.004005921 ubox
29 84 0.051935583 ubox
29 85 0.472112469 ubox
29 86 0.621315587 ubox
29 87 0.016593434 ubox
30 78 0.008786386 ubox
30 83 0.059509786 ubox
30 84 0.468119356 ubox
30 85 0.623446680 ubox
30 86 0.017155994 ubox
30 87 0.004860652 ubox
31 77 0.011170368 ubox
31 78 0.058510761 ubox
31 83 0.463541740 ubox
31 84 0.624833347 ubox
31 85 0.017103679 ubox
31 86 0.004849109 ubox
31 87 0.003195305 ubox
32 39 0.027489136 ubox
32 76 0.011133627 ubox
32 77 0.115584444 ubox
32 83 0.627351296 ubox
32 84 0.003593244 ubox
32 85 0.004726291 ubox
32 91 0.012086051 ubox
33 38 0.027691570 ubox
33 68 0.003541054 ubox
33 79 0.044887325 ubox
33 82 0.626440177 ubox
33 88 0.028838742 ubox
33 90 0.012836435 ubox
34 67 0.004570229 ubox
34 70 0.003569964 ubox
34 74 0.007475423 ubox
34 75 0.003794019 ubox
34 76 0.504706524 ubox
34 77 0.592284125 ubox
34 78 0.034453248 ubox
34 84 0.006106413 ubox
34 85 0.003600888 ubox
34 86 0.593736322 ubox
34 87 0.073405786 ubox
35 66 0.004254780 ubox
35 73 0.007661644 ubox
35 75 0.507729626 ubox
35 76 0.591288156 ubox
35 77 0.032064137 ubox
35 83 0.006944651 ubox
35 85 0.599485950 ubox
35 86 0.053313842 ubox
36 65 0.003560702 ubox
36 72 0.007638250 ubox
36 74 0.657309494 ubox
36 75 0.419051790 ubox
36 78 0.009577794 ubox
36 84 0.601537506 ubox
37 73 0.778769293 ubox
37 74 0.051667024 ubox
37 76 0.003653903 ubox
37 77 0.008449047 ubox
37 83 0.601113660 ubox
37 85 0.015387387 ubox
38 72 0.780284628 ubox
38 75 0.003668689 ubox
38 84 0.015084130 ubox
39 68 0.019790856 ubox
39 71 0.779386090 ubox
39 79 0.025504059 ubox
40 66 0.138209762 ubox
40 67 0.016578402 ubox
40 70 0.766299593 ubox
40 73 0.005057763 ubox
40 76 0.010440508 ubox
40 78 0.012502930 ubox
41 65 0.174360873 ubox
41 72 0.005043579 ubox
41 75 0.010489018 ubox
41 78 0.611994980 ubox
42 64 0.175053733 ubox
42 67 0.759473769 ubox
42 74 0.010503806 ubox
42 77 0.615991665 ubox
42 78 0.003730777 ubox
43 63 0.175071039 ubox
43 66 0.760269155 ubox
43 73 0.010516909 ubox
43 76 0.616016339 ubox
44 62 0.174972725 ubox
44 65 0.760178128 ubox
44 72 0.010476233 ubox
44 75 0.615669218 ubox
45 61 0.174921482 ubox
45 64 0.760256023 ubox
45 67 0.034223278 ubox
45 74 0.615450188 ubox
46 60 0.175134933 ubox
46 63 0.760206080 ubox
46 66 0.034273015 ubox
46 73 0.616001898 ubox
47 57 0.004271537 ubox
47 59 0.175069864 ubox
47 61 0.011838875 ubox
47 62 0.733819833 ubox
47 65 0.033798659 ubox
47 72 0.615787367 ubox
48 56 0.007597828 ubox
48 58 0.173897510 ubox
48 68 0.083011551 ubox
48 71 0.610075328 ubox
49 57 0.157348301 ubox
49 60 0.477501616 ubox
49 61 0.517727294 ubox
49 62 0.004098529 ubox
49 64 0.036158414 ubox
49 67 0.100049556 ubox
49 70 0.607372809 ubox
50 59 0.454465527 ubox
50 60 0.556018629 ubox
50 61 0.006888540 ubox
50 62 0.003962901 ubox
50 63 0.036746887 ubox
50 64 0.004484920 ubox
50 66 0.104621015 ubox
51 59 0.537207355 ubox
51 61 0.006140251 ubox
51 62 0.033577751 ubox
51 65 0.082624789 ubox
52 61 0.029845305 ubox
52 62 0.040838970 ubox
53 61 0.083307980 ubox
53 62 0.021121949 ubox
53 65 0.454910591 ubox
54 60 0.085055682 ubox
54 61 0.048039844 ubox
54 62 0.012432440 ubox
54 63 0.010150577 ubox
54 64 0.474471131 ubox
54 65 0.363469516 ubox
54 66 0.069542209 ubox
54 67 0.066439010 ubox
55 59 0.055195760 ubox
55 60 0.048464155 ubox
55 61 0.018376716 ubox
55 62 0.009605915 ubox
55 63 0.474315238 ubox
55 64 0.382261288 ubox
55 65 0.041332343 ubox
55 66 0.066242208 ubox
55 67 0.027040075 ubox
56 60 0.019775940 ubox
56 61 0.014659718 ubox
56 62 0.447724669 ubox
56 63 0.381939242 ubox
56 64 0.043302240 ubox
56 65 0.060857916 ubox
56 66 0.027032461 ubox
65 89 0.006486214 ubox
65 90 0.094305617 ubox
66 88 0.007785582 ubox
66 89 0.100807788 ubox
67 88 0.100769482 ubox
68 84 0.100945995 ubox
69 83 0.102521740 ubox
70 82 0.102462636 ubox
72 80 0.100496678 ubox
73 79 0.101873280 ubox
73 82 0.003565446 ubox
74 81 0.003691776 ubox
75 80 0.003237465 ubox
75 90 0.004344001 ubox
76 89 0.005516506 ubox
77 88 0.005617930 ubox
77 89 0.024750871 ubox
78 88 0.024988160 ubox
79 85 0.007653800 ubox
79 87 0.025114814 ubox
80 84 0.006713634 ubox
83 89 0.004449183 ubox
84 88 0.004027166 ubox
84 90 0.003522383 ubox
85 89 0.003802735 ubox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
34 86 0.9500000 lbox
35 85 0.9500000 lbox
36 84 0.9500000 lbox
37 83 0.9500000 lbox
41 78 0.9500000 lbox
42 77 0.9500000 lbox
43 76 0.9500000 lbox
44 75 0.9500000 lbox
45 74 0.9500000 lbox
46 73 0.9500000 lbox
47 72 0.9500000 lbox
48 71 0.9500000 lbox
49 70 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
55 63 0.9500000 lbox
56 62 0.9500000 lbox
showpage
end
%%EOF
