%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GLP1R)
} def

/sequence { (\
AUCAGUCUCCGCACGCGGUUCCGCAGGUGGCAGCGAUGGCCCAGUCCUGAACUCCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.004235244 ubox
1 37 0.244972764 ubox
2 18 0.004678662 ubox
2 36 0.263003951 ubox
2 39 0.026749122 ubox
2 50 0.088311552 ubox
3 17 0.005030134 ubox
3 26 0.003232086 ubox
3 35 0.265455669 ubox
3 38 0.039263141 ubox
3 49 0.094391234 ubox
4 37 0.038982645 ubox
4 48 0.094105751 ubox
4 53 0.036477020 ubox
5 12 0.267727079 ubox
5 14 0.226315125 ubox
5 16 0.008822392 ubox
5 19 0.003318094 ubox
5 24 0.038375477 ubox
5 31 0.032258866 ubox
5 34 0.272161750 ubox
5 37 0.020274665 ubox
5 40 0.008880242 ubox
5 47 0.092432036 ubox
5 52 0.038964857 ubox
5 59 0.016209595 ubox
6 11 0.253063329 ubox
6 13 0.214081461 ubox
6 15 0.008785371 ubox
6 23 0.037798050 ubox
6 30 0.026732348 ubox
6 33 0.213637224 ubox
6 36 0.022508957 ubox
6 39 0.009079572 ubox
6 50 0.004980364 ubox
6 51 0.036662380 ubox
6 58 0.015435423 ubox
7 29 0.025888262 ubox
7 33 0.208492869 ubox
7 35 0.021541151 ubox
7 38 0.008486286 ubox
7 44 0.060487102 ubox
7 49 0.005921108 ubox
8 32 0.212594631 ubox
8 43 0.058266269 ubox
8 50 0.004834825 ubox
9 18 0.066444120 ubox
9 27 0.025082137 ubox
9 30 0.369722483 ubox
9 39 0.015111327 ubox
10 17 0.066890299 ubox
10 26 0.025089665 ubox
10 29 0.371339375 ubox
10 35 0.007500539 ubox
10 38 0.015106252 ubox
10 58 0.005359112 ubox
11 16 0.065207321 ubox
11 19 0.003368477 ubox
11 24 0.013189674 ubox
11 28 0.371339395 ubox
11 31 0.006760242 ubox
11 34 0.007575267 ubox
11 37 0.013745686 ubox
11 40 0.042611698 ubox
11 57 0.005467374 ubox
11 59 0.046090341 ubox
12 18 0.003499786 ubox
12 23 0.013175772 ubox
12 27 0.371388007 ubox
12 29 0.008589765 ubox
12 30 0.005786753 ubox
12 33 0.007460315 ubox
12 38 0.020155762 ubox
12 39 0.040654368 ubox
12 58 0.044989897 ubox
13 28 0.009725120 ubox
13 37 0.023794594 ubox
14 23 0.007725129 ubox
14 27 0.009717016 ubox
14 29 0.006098552 ubox
14 35 0.040259425 ubox
14 38 0.022105570 ubox
14 44 0.003227564 ubox
14 58 0.097773996 ubox
15 22 0.007773316 ubox
15 24 0.389644040 ubox
15 28 0.006004424 ubox
15 31 0.005072526 ubox
15 34 0.040510987 ubox
15 37 0.021535544 ubox
15 57 0.101997170 ubox
15 59 0.908084099 ubox
16 23 0.389959359 ubox
16 27 0.006003052 ubox
16 30 0.005059015 ubox
16 33 0.040388460 ubox
16 35 0.015816202 ubox
16 58 0.909889968 ubox
17 22 0.384597335 ubox
17 34 0.014795231 ubox
17 41 0.003805428 ubox
17 53 0.037480874 ubox
17 54 0.007567963 ubox
17 55 0.081869755 ubox
17 56 0.101683045 ubox
17 57 0.906557754 ubox
17 60 0.004540683 ubox
18 24 0.004669140 ubox
18 28 0.003211691 ubox
18 31 0.035947317 ubox
18 34 0.020896882 ubox
18 40 0.003824850 ubox
18 52 0.046921255 ubox
18 54 0.082971770 ubox
18 55 0.124831611 ubox
18 56 0.901673502 ubox
18 59 0.004581638 ubox
19 23 0.004740207 ubox
19 30 0.035222404 ubox
19 33 0.021616547 ubox
19 39 0.003785840 ubox
19 50 0.006400840 ubox
19 51 0.062472857 ubox
19 58 0.004443346 ubox
20 29 0.028963590 ubox
20 32 0.021393625 ubox
20 38 0.003301974 ubox
20 50 0.062483994 ubox
21 26 0.003785299 ubox
21 27 0.034275123 ubox
21 30 0.031921808 ubox
21 49 0.050853971 ubox
22 26 0.034052746 ubox
22 29 0.032048601 ubox
22 35 0.006505620 ubox
22 49 0.006233445 ubox
22 58 0.004097515 ubox
23 28 0.020771788 ubox
23 31 0.004542996 ubox
23 34 0.006742086 ubox
23 45 0.008444848 ubox
23 48 0.005071734 ubox
23 57 0.004242751 ubox
23 59 0.033747618 ubox
24 30 0.004571390 ubox
24 33 0.006741575 ubox
24 44 0.008491455 ubox
24 49 0.913489203 ubox
24 58 0.033748530 ubox
25 48 0.915391917 ubox
25 53 0.004863084 ubox
26 42 0.005467781 ubox
26 46 0.020455483 ubox
26 47 0.915422780 ubox
26 48 0.036387495 ubox
26 52 0.004974238 ubox
26 53 0.012176086 ubox
26 54 0.004367518 ubox
26 55 0.027149958 ubox
26 56 0.025034108 ubox
26 57 0.031035098 ubox
26 60 0.124642199 ubox
27 41 0.004709062 ubox
27 45 0.025744030 ubox
27 46 0.911982558 ubox
27 47 0.038173989 ubox
27 52 0.013190298 ubox
27 54 0.027191837 ubox
27 55 0.025012074 ubox
27 56 0.031046307 ubox
27 59 0.125759063 ubox
28 43 0.740152641 ubox
28 44 0.189030688 ubox
28 51 0.013258873 ubox
28 58 0.125699604 ubox
29 41 0.342053290 ubox
29 42 0.796481428 ubox
29 46 0.051799036 ubox
29 53 0.020957530 ubox
29 54 0.012931367 ubox
29 55 0.030787880 ubox
29 56 0.008759550 ubox
29 57 0.125341025 ubox
30 40 0.363370372 ubox
30 41 0.783824874 ubox
30 45 0.113041946 ubox
30 52 0.021978577 ubox
30 53 0.011644832 ubox
30 54 0.030851287 ubox
30 55 0.012208544 ubox
30 56 0.124959615 ubox
31 38 0.147569048 ubox
31 39 0.366386677 ubox
31 44 0.117057203 ubox
31 49 0.217915527 ubox
32 37 0.177025629 ubox
32 48 0.218512193 ubox
32 53 0.017958815 ubox
33 40 0.823703370 ubox
33 45 0.009494799 ubox
33 47 0.218560477 ubox
33 52 0.018362430 ubox
33 59 0.108845254 ubox
34 39 0.826795266 ubox
34 44 0.010194873 ubox
34 49 0.006616086 ubox
34 58 0.109757949 ubox
35 46 0.225590768 ubox
35 48 0.005414696 ubox
35 54 0.004341516 ubox
35 57 0.108269856 ubox
36 45 0.225455118 ubox
36 53 0.004063507 ubox
37 43 0.024803631 ubox
37 44 0.221823423 ubox
37 49 0.003316608 ubox
37 58 0.044282449 ubox
38 42 0.029118015 ubox
38 46 0.044050591 ubox
38 47 0.052696848 ubox
38 48 0.006503608 ubox
38 53 0.029486415 ubox
38 54 0.027822567 ubox
38 55 0.076260732 ubox
38 56 0.094414709 ubox
38 57 0.093472069 ubox
38 60 0.252759029 ubox
39 45 0.044820248 ubox
39 46 0.052326624 ubox
39 47 0.006755150 ubox
39 52 0.036200315 ubox
39 53 0.016733214 ubox
39 54 0.076339040 ubox
39 55 0.094882031 ubox
39 56 0.093248481 ubox
39 59 0.256083500 ubox
40 44 0.050123074 ubox
40 58 0.255761383 ubox
42 49 0.056035501 ubox
43 48 0.050600155 ubox
43 53 0.269461844 ubox
44 52 0.277412084 ubox
44 59 0.005900331 ubox
45 51 0.267667728 ubox
45 58 0.005711854 ubox
48 58 0.009305206 ubox
49 57 0.014974500 ubox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
showpage
end
%%EOF
