%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACCUCGCGCACGCGCAGUGAAAACCCAGGGCCCGCGAAGCGUCCGAAGUCCCUUCCCACCGCCCGGCUUCGCCUCCAGUUCUCGGGGAACUGUACGGCCCAGUCACUCCCGCCUCGUCACCCCCGCCAGGUUUCCCCCGCCCUCUCCGGCCGGGGCUGGUCGCGACUGCGCGCGCAGGGCCUGAGCGGGCGCCGGAGGGAAGGGGAAGCGGCGGGGUAGUAACAGAUUAUGGGCAACAGUCCUUUUAAUUAA\
UCUACCGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[60.52913284 195.90487671]
[48.23455048 187.31166077]
[39.95346832 174.80471802]
[36.84248734 160.13087463]
[39.33612061 145.33959961]
[47.08608627 132.49676514]
[59.00994873 123.39614105]
[73.43873596 119.30909729]
[86.15861511 111.35895538]
[71.18437195 112.23762512]
[56.21012878 113.11630249]
[48.49368668 124.13052368]
[36.02844238 128.63427734]
[23.42913055 125.19791412]
[15.22467232 115.28837585]
[0.24115880 115.99146271]
[-14.74235439 116.69454956]
[-30.02696228 126.99257660]
[-45.28672791 118.29651642]
[-60.26097107 119.17518616]
[-75.23521423 120.05386353]
[-90.20945740 120.93253326]
[-105.18370056 121.81121063]
[-108.63002777 129.93527222]
[-114.48368073 136.48123169]
[-122.09812164 140.76802063]
[-130.64572144 142.36170959]
[-139.20765686 141.11944580]
[-146.87271118 137.20161438]
[-152.83424377 131.05192566]
[-156.47506714 123.34717560]
[-171.47506714 123.34717560]
[-186.47506714 123.34717560]
[-201.47506714 123.34717560]
[-216.47506714 123.34717560]
[-230.48959351 144.14089966]
[-261.73083496 142.47813416]
[-276.23477173 146.30377197]
[-290.73873901 150.12940979]
[-305.24267578 153.95506287]
[-319.74661255 157.78070068]
[-334.25057983 161.60633850]
[-348.75451660 165.43197632]
[-363.11499023 169.76521301]
[-377.31420898 174.60067749]
[-384.34100342 188.50254822]
[-398.80993652 193.20413208]
[-412.01992798 186.41950989]
[-426.21917725 191.25497437]
[-440.41839600 196.09043884]
[-454.61764526 200.92590332]
[-467.66207886 211.75543213]
[-481.67947388 202.21867371]
[-476.39581299 186.10906982]
[-459.45309448 186.72666931]
[-445.25387573 181.89120483]
[-431.05462646 177.05572510]
[-416.85540771 172.22026062]
[-410.53164673 158.78353882]
[-396.20050049 153.67741394]
[-382.14968872 160.40144348]
[-367.95043945 155.56597900]
[-381.01159668 148.18988037]
[-385.13626099 133.76812744]
[-377.95053101 120.60131073]
[-363.59014893 116.26773071]
[-350.32043457 123.26162720]
[-345.77886963 137.55758667]
[-352.58016968 150.92803955]
[-338.07620239 147.10238647]
[-323.57226562 143.27674866]
[-309.06832886 139.45111084]
[-294.56436157 135.62547302]
[-280.06042480 131.79981995]
[-265.55648804 127.97418213]
[-264.76669312 120.51588440]
[-276.89523315 111.68988037]
[-263.18710327 105.59928894]
[-262.39730835 98.14099121]
[-275.77835083 91.36248016]
[-289.15936279 84.58397675]
[-302.54040527 77.80547333]
[-315.92141724 71.02696991]
[-329.30242920 64.24846649]
[-342.68347168 57.46995926]
[-359.54541016 55.70600128]
[-362.51821899 39.01472473]
[-347.30221558 31.53747559]
[-335.90496826 44.08893204]
[-322.52392578 50.86743927]
[-309.14291382 57.64594269]
[-295.76187134 64.42444611]
[-282.38085938 71.20294952]
[-268.99984741 77.98145294]
[-255.61880493 84.75996399]
[-240.42387390 83.41868591]
[-227.54983521 88.46309662]
[-219.26879883 97.70464325]
[-216.47506714 108.34717560]
[-201.47506714 108.34717560]
[-186.47506714 108.34717560]
[-171.47506714 108.34717560]
[-156.47506714 108.34717560]
[-142.84451294 92.02190399]
[-121.30589294 91.19448090]
[-106.06237030 106.83696747]
[-91.08812714 105.95829010]
[-76.11388397 105.07962036]
[-61.13964462 104.20094299]
[-46.16540146 103.32227325]
[-37.91521454 94.50543976]
[-25.47065926 93.63177490]
[-15.44543839 101.71103668]
[-0.46192515 101.00794983]
[14.52158833 100.30486298]
[25.31927109 87.39084625]
[42.45471573 86.27672577]
[55.33145523 98.14205933]
[70.30569458 97.26338196]
[85.27993774 96.38471222]
[86.71891785 91.61598969]
[89.71074677 87.41667175]
[94.03089142 84.29298401]
[99.29037476 82.66304016]
[104.97005463 82.80385590]
[110.47179413 84.81161499]
[122.02500916 75.24483490]
[133.57821655 65.67805481]
[145.13143921 56.11127853]
[156.68464661 46.54449844]
[159.31816101 40.54094315]
[163.89086914 37.24002838]
[168.62268066 36.89271164]
[180.39698792 27.59939957]
[192.17129517 18.30608749]
[203.94560242 9.01277637]
[215.71990967 -0.28053597]
[227.49421692 -9.57384777]
[239.26853943 -18.86716080]
[251.04284668 -28.16047096]
[253.03205872 -43.60976791]
[265.10528564 -52.86677933]
[279.82156372 -50.87514877]
[291.59585571 -60.16846085]
[303.37017822 -69.46176910]
[315.14450073 -78.75508118]
[326.91879272 -88.04839325]
[338.69311523 -97.34170532]
[350.24630737 -106.90848541]
[361.57208252 -116.74346924]
[366.91885376 -131.63383484]
[381.60165405 -134.13661194]
[392.92742920 -143.97158813]
[404.19537354 -153.87278748]
[415.40505981 -163.83985901]
[426.61477661 -173.80693054]
[437.82449341 -183.77400208]
[443.23587036 -201.39176941]
[460.56976318 -204.22340393]
[471.66186523 -214.32118225]
[482.75396729 -224.41897583]
[483.65255737 -239.96987915]
[495.04534912 -250.05245972]
[509.86520386 -249.09994507]
[520.95733643 -259.19775391]
[532.04943848 -269.29553223]
[543.14154053 -279.39331055]
[547.60552979 -295.17318726]
[563.56750488 -298.93435669]
[574.60717773 -286.80761719]
[569.36785889 -271.26794434]
[553.23931885 -268.30120850]
[542.14721680 -258.20343018]
[531.05511475 -248.10563660]
[519.96301270 -238.00785828]
[519.52355957 -223.16390991]
[508.41845703 -212.76530457]
[492.85174561 -213.32687378]
[481.75964355 -203.22909546]
[470.66754150 -193.13130188]
[469.79513550 -181.08799744]
[460.66708374 -172.58454895]
[447.79156494 -172.56430054]
[436.58184814 -162.59722900]
[425.37213135 -152.63015747]
[414.16244507 -142.66308594]
[411.26211548 -135.89361572]
[402.76242065 -132.64582825]
[391.43664551 -122.81083679]
[386.89999390 -108.62394714]
[371.40707397 -105.41770172]
[360.08129883 -95.58271790]
[359.73501587 -92.83390808]
[358.29794312 -90.05393219]
[355.75195312 -87.65209961]
[352.22488403 -86.03714752]
[347.98641968 -85.56739807]
[336.21209717 -76.27408600]
[324.43780518 -66.98077393]
[312.66348267 -57.68746185]
[300.88919067 -48.39414978]
[289.11486816 -39.10083771]
[287.63333130 -24.32448387]
[275.82492065 -14.73201370]
[260.33615112 -16.38616371]
[248.56184387 -7.09285069]
[236.78753662 2.20046115]
[225.01322937 11.49377346]
[213.23892212 20.78708458]
[201.46461487 30.08039665]
[189.69029236 39.37371063]
[177.91598511 48.66702271]
[166.25143433 58.09771347]
[154.69821167 67.66448975]
[143.14500427 77.23126984]
[131.59178162 86.79804993]
[120.03856659 96.36483002]
[118.45898438 111.28142548]
[127.75229645 123.05573273]
[137.04560852 134.83004761]
[146.33892822 146.60435486]
[155.63223267 158.37866211]
[167.90867615 156.24101257]
[179.86325073 159.49339294]
[189.25473022 167.46272278]
[194.34930420 178.59762573]
[194.24055481 190.77011108]
[189.01014709 201.68226624]
[198.02488708 213.67118835]
[207.03962708 225.66012573]
[216.05435181 237.64906311]
[225.06909180 249.63798523]
[243.96305847 256.72915649]
[245.38003540 276.03317261]
[254.67333984 287.80749512]
[263.96664429 299.58178711]
[273.25997925 311.35610962]
[288.68713379 316.91799927]
[291.31723022 333.10488892]
[278.44464111 343.26504517]
[263.31161499 336.94659424]
[261.48565674 320.64941406]
[252.19235229 308.87509155]
[242.89903259 297.10079956]
[233.60572815 285.32647705]
[223.43331909 285.05603027]
[214.89883423 279.12124634]
[210.94047546 269.27270508]
[213.08016968 258.65274048]
[204.06542969 246.66380310]
[195.05068970 234.67486572]
[186.03594971 222.68592834]
[177.02120972 210.69700623]
[159.36820984 211.79225159]
[144.47477722 201.96279907]
[138.43545532 185.00364685]
[143.85792542 167.67196655]
[134.56460571 155.89765930]
[125.27130127 144.12335205]
[115.97798920 132.34904480]
[106.68467712 120.57473755]
[109.19541931 135.36311340]
[115.72956848 148.86514282]
[116.85027313 163.82322693]
[112.40100098 178.14816284]
[103.00317383 189.83923340]
[89.96938324 197.26353455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 120]
[10 119]
[11 118]
[15 115]
[16 114]
[17 113]
[19 110]
[20 109]
[21 108]
[22 107]
[23 106]
[31 103]
[32 102]
[33 101]
[34 100]
[35 99]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 62]
[45 61]
[48 58]
[49 57]
[50 56]
[51 55]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[126 217]
[127 216]
[128 215]
[129 214]
[130 213]
[133 212]
[134 211]
[135 210]
[136 209]
[137 208]
[138 207]
[139 206]
[140 205]
[143 202]
[144 201]
[145 200]
[146 199]
[147 198]
[148 197]
[149 192]
[150 191]
[152 189]
[153 188]
[154 186]
[155 185]
[156 184]
[157 183]
[159 180]
[160 179]
[161 178]
[164 175]
[165 174]
[166 173]
[167 172]
[218 261]
[219 260]
[220 259]
[221 258]
[222 257]
[228 253]
[229 252]
[230 251]
[231 250]
[232 249]
[234 245]
[235 244]
[236 243]
[237 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
