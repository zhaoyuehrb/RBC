%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUGCCGGCGUUCGGGAGGCGCAACGUCGGCGGUCGCUGAGUAUCCAGCCCGCAGCAGUGACGGCCGGCAGGAGCGUGCUCUUCCCCGCGGCUCGUGCUCUCCAGGAGUCCGGAGCAUGGUCCUGGGUCACCGUUGGUGUAGCGUGUUGGUGGAACGUGGACGCCUAGAGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[28.81644630 399.94464111]
[16.35276604 391.59857178]
[7.67492533 379.36358643]
[3.91900682 364.84143066]
[5.57623720 349.93493652]
[-3.58156419 361.81494141]
[-12.73936558 373.69494629]
[-21.89716721 385.57495117]
[-31.05496788 397.45495605]
[-40.21276855 409.33499146]
[-49.37057114 421.21499634]
[-58.52837372 433.09500122]
[-67.68617249 444.97500610]
[-76.73818970 456.93582153]
[-85.68370056 468.97650146]
[-84.77480316 484.99380493]
[-96.82652283 495.58319092]
[-112.59381866 492.62142944]
[-119.98136139 478.38052368]
[-113.32206726 463.78485107]
[-97.72437286 460.03100586]
[-88.77886200 447.99032593]
[-87.30921173 440.72320557]
[-79.56618500 435.81719971]
[-70.40838623 423.93719482]
[-61.25058365 412.05718994]
[-52.09278107 400.17718506]
[-42.93497849 388.29718018]
[-33.77717972 376.41714478]
[-24.61937714 364.53713989]
[-15.46157551 352.65713501]
[-6.30377436 340.77713013]
[1.19622564 327.78674316]
[6.90571690 313.91583252]
[6.54296589 306.51049805]
[12.84159756 299.85089111]
[18.79637146 286.08349609]
[24.62873459 272.26382446]
[30.33822632 258.39294434]
[36.04771805 244.52203369]
[33.73724747 229.80772400]
[46.14493179 219.99140930]
[51.85441971 206.12051392]
[43.79806137 189.70761108]
[50.38010406 172.30889893]
[67.87156677 165.09500122]
[73.08517456 151.03021240]
[78.29878235 136.96542358]
[83.51238251 122.90063477]
[88.72599030 108.83583832]
[86.56911469 95.02136993]
[97.20922089 85.95055389]
[102.42282867 71.88576508]
[107.63642883 57.82097244]
[105.17810822 42.19192123]
[116.85667419 32.94744492]
[122.07028198 18.88265419]
[127.28388214 4.81786442]
[124.82556152 -10.81118584]
[136.50411987 -20.05566406]
[141.71772766 -34.12045288]
[146.93133545 -48.18524551]
[152.14494324 -62.25003433]
[157.35855103 -76.31482697]
[162.57215881 -90.37961578]
[151.89416504 -102.98449707]
[149.03718567 -119.16010284]
[154.68632507 -134.48419189]
[167.21423340 -144.81555176]
[183.14851379 -147.41308594]
[188.11166382 -161.56819153]
[193.07482910 -175.72329712]
[198.03799438 -189.87840271]
[203.00114441 -204.03350830]
[200.26582336 -219.61647034]
[211.77847290 -229.06675720]
[216.74163818 -243.22186279]
[221.70480347 -257.37698364]
[226.66795349 -271.53207397]
[231.63111877 -285.68719482]
[236.59426880 -299.84228516]
[222.10321045 -295.96813965]
[209.93185425 -304.73498535]
[209.01538086 -319.70697021]
[220.02662659 -329.89288330]
[234.88201904 -327.81509399]
[242.67602539 -314.99832153]
[248.87420654 -328.65786743]
[255.07240295 -342.31738281]
[255.77441406 -351.45687866]
[261.50372314 -356.16281128]
[267.94335938 -369.71017456]
[274.38299561 -383.25753784]
[280.82263184 -396.80490112]
[287.26226807 -410.35226440]
[286.19879150 -426.13769531]
[298.65075684 -434.31072998]
[305.09039307 -447.85809326]
[301.09136963 -463.39474487]
[310.85974121 -476.12100220]
[326.90206909 -476.27441406]
[336.91201782 -463.73727417]
[333.21084595 -448.12698364]
[318.63775635 -441.41845703]
[312.19812012 -427.87109375]
[313.72216797 -413.05465698]
[300.80963135 -403.91262817]
[294.36999512 -390.36526489]
[287.93035889 -376.81790161]
[281.49072266 -363.27053833]
[275.05108643 -349.72317505]
[268.73190308 -336.11920166]
[262.53372192 -322.45965576]
[256.33554077 -308.80014038]
[250.74937439 -294.87911987]
[245.78622437 -280.72402954]
[240.82305908 -266.56890869]
[235.85990906 -252.41381836]
[230.89674377 -238.25871277]
[225.93357849 -224.10359192]
[229.02391052 -209.53311157]
[217.15625000 -199.07034302]
[212.19309998 -184.91523743]
[207.22993469 -170.76013184]
[202.26676941 -156.60502625]
[197.30361938 -142.44992065]
[206.87831116 -132.68785095]
[211.32788086 -119.68826294]
[209.72807312 -105.97501373]
[202.33503723 -94.23667908]
[190.54629517 -86.79940033]
[176.63694763 -85.16600800]
[171.42333984 -71.10121918]
[166.20973206 -57.03643036]
[160.99612427 -42.97163773]
[155.78251648 -28.90684891]
[150.56890869 -14.84205914]
[153.40014648 -0.21901640]
[141.34867859 10.03147030]
[136.13507080 24.09626007]
[130.92146301 38.16104889]
[133.75270081 52.78409195]
[121.70121765 63.03458023]
[116.48761749 77.09936523]
[111.27400970 91.16416168]
[113.43088531 104.97863007]
[102.79077911 114.04944611]
[97.57717133 128.11424255]
[92.36357117 142.17903137]
[87.14996338 156.24382019]
[81.93635559 170.30860901]
[88.92372894 179.97297668]
[90.34902191 191.69229126]
[85.97172546 202.52708435]
[76.99222565 209.81613159]
[65.72531891 211.83001709]
[60.01582336 225.70089722]
[61.91791153 241.40736389]
[49.91860962 250.23153687]
[44.20912170 264.10241699]
[38.49962997 277.97332764]
[38.12242508 287.13198853]
[32.56374741 292.03826904]
[26.60897446 305.80566406]
[20.77661133 319.62533569]
[15.06711960 333.49624634]
[27.14943314 324.60705566]
[41.60411453 320.59927368]
[56.53879166 321.99761963]
[69.99826050 328.61898804]
[80.22043610 339.59658813]
[85.86705780 353.49319458]
[86.19888306 368.48950195]
[81.17247772 382.62228394]
[71.44587708 394.04125977]
[58.29246521 401.25152588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 32]
[6 31]
[7 30]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[14 22]
[15 21]
[33 166]
[34 165]
[36 164]
[37 163]
[38 161]
[39 160]
[40 159]
[42 157]
[43 156]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[52 145]
[53 144]
[54 143]
[56 141]
[57 140]
[58 139]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[65 132]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[87 114]
[88 113]
[89 112]
[91 111]
[92 110]
[93 109]
[94 108]
[95 107]
[97 105]
[98 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
