%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCGAAUUCCAGGGAGGCGGGGCGGAGACGGCGGCGAGGAGGAGGCCGCGGCGCGGGACGCAUAGAGCUGCGGCUCGGGCGGCGCCUCCCUGCGGCGGCCCGGCCCGGCUCCGGCCCCCGCUGGGGCAAUGCUCCCCGGGGCCGCGGGAUGAGCCAGUGACUCGGCCGGUCCGGGC\
) } def
/len { sequence length } bind def

/coor [
[90.90547943 156.61785889]
[80.90144348 167.79458618]
[67.64987183 174.82279968]
[52.78551483 176.83549500]
[38.14207840 173.58438110]
[25.52601433 165.47050476]
[16.49367332 153.49482727]
[12.15930462 139.13470459]
[13.05761051 124.16162872]
[19.07777214 110.42272186]
[29.47712708 99.61284637]
[42.97278595 93.06553650]
[57.89988708 91.58849335]
[72.41538239 95.36318207]
[87.13613892 98.24401855]
[75.59860229 88.65834045]
[64.06106567 79.07265472]
[52.52353287 69.48697662]
[36.96438217 66.61933136]
[32.11944199 52.53473663]
[20.58190727 42.94905853]
[9.04437160 33.36337662]
[-2.49316454 23.77769661]
[-18.05231667 20.91005325]
[-22.89725304 6.82545662]
[-34.43479156 -2.76022339]
[-45.97232437 -12.34590340]
[-47.37976074 2.58792138]
[-59.83359146 10.94866657]
[-74.18837738 6.59663630]
[-79.90270233 -7.27226543]
[-72.78027344 -20.47343826]
[-58.05258179 -23.31292534]
[-68.70561981 -33.87288666]
[-83.95357513 -38.09312439]
[-87.54547882 -52.54813766]
[-98.19851685 -63.10810089]
[-115.67333221 -62.70317841]
[-127.80593109 -74.81315613]
[-127.44770050 -91.61404419]
[-138.28442383 -101.98542023]
[-146.67399597 -105.67292023]
[-149.21830750 -112.63516998]
[-159.87133789 -123.19513702]
[-170.52438354 -133.75509644]
[-181.17741394 -144.31506348]
[-191.83045959 -154.87501526]
[-202.48348999 -165.43498230]
[-210.80705261 -169.26914978]
[-213.22879028 -176.27497864]
[-223.69485474 -187.02027893]
[-238.86640930 -191.50746155]
[-242.20407104 -206.02328491]
[-252.67013550 -216.76858521]
[-267.84167480 -221.25576782]
[-271.17935181 -235.77160645]
[-281.64541626 -246.51689148]
[-292.11148071 -257.26217651]
[-302.57757568 -268.00747681]
[-317.74911499 -272.49465942]
[-321.08676147 -287.01049805]
[-331.55282593 -297.75579834]
[-342.01892090 -308.50109863]
[-352.48498535 -319.24636841]
[-368.28921509 -319.20376587]
[-379.43554688 -330.40798950]
[-379.31106567 -346.21179199]
[-367.98962402 -357.23904419]
[-352.18801880 -356.94747925]
[-341.28106689 -345.51007080]
[-341.73968506 -329.71246338]
[-331.27362061 -318.96716309]
[-320.80755615 -308.22186279]
[-310.34146118 -297.47656250]
[-295.91854858 -293.75796509]
[-291.83227539 -278.47354126]
[-281.36618042 -267.72827148]
[-270.90011597 -256.98297119]
[-260.43405151 -246.23767090]
[-246.01110840 -242.51905823]
[-241.92485046 -227.23466492]
[-231.45877075 -216.48936462]
[-217.03582764 -212.77075195]
[-212.94956970 -197.48634338]
[-202.48348999 -186.74105835]
[-191.92353821 -176.08801270]
[-181.27049255 -165.52806091]
[-170.61746216 -154.96809387]
[-159.96441650 -144.40812683]
[-149.31138611 -133.84817505]
[-138.65834045 -123.28820801]
[-127.91304779 -112.82214355]
[-117.07632446 -102.45076752]
[-104.34313965 -104.53179169]
[-92.56447601 -98.80540466]
[-86.14821625 -87.16497040]
[-87.63855743 -73.76113892]
[-76.98551941 -63.20117569]
[-62.49953842 -59.73625946]
[-58.14566040 -44.52592468]
[-47.49262238 -33.96596527]
[-36.38664627 -23.88344002]
[-24.84910965 -14.29775906]
[-13.31157398 -4.71207905]
[1.42233586 -2.53006721]
[7.09251547 12.24016094]
[18.63005066 21.82584190]
[30.16758728 31.41152191]
[41.70512390 40.99720001]
[56.43903351 43.17921448]
[62.10921097 57.94944000]
[73.64675140 67.53511810]
[85.18428802 77.12080383]
[96.72181702 86.70648193]
[111.17020416 90.73690033]
[126.00360107 88.50746155]
[140.83699036 86.27803040]
[155.67039490 84.04859161]
[170.50378418 81.81915283]
[185.33717346 79.58972168]
[190.42233276 68.80532837]
[199.99217224 61.89652634]
[211.59063721 60.49322510]
[222.30941772 64.83036804]
[229.51715088 73.71797180]
[244.41964722 72.01047516]
[259.32214355 70.30298615]
[274.22463989 68.59548950]
[289.12713623 66.88800049]
[304.17504883 59.07794571]
[315.84555054 71.37573242]
[307.25909424 85.99452209]
[290.83465576 81.79049683]
[275.93215942 83.49799347]
[261.02963257 85.20548248]
[246.12715149 86.91297913]
[231.22465515 88.62046814]
[220.74952698 103.60772705]
[202.33486938 106.25335693]
[187.56661987 94.42311859]
[172.73321533 96.65254974]
[157.89982605 98.88198853]
[143.06642151 101.11141968]
[128.23303223 103.34085846]
[113.39963531 105.57029724]
[107.38689423 119.31245422]
[115.81597137 131.72013855]
[132.56770325 139.33369446]
[133.19863892 156.85894775]
[141.84416199 169.11680603]
[150.48970032 181.37464905]
[159.13522339 193.63249207]
[174.45492554 196.45109558]
[183.04811096 209.00546265]
[180.26658630 223.59307861]
[188.91212463 235.85092163]
[197.55764771 248.10877991]
[213.07449341 248.19197083]
[225.55902100 257.40698242]
[230.21067810 272.21041870]
[225.24078369 286.91006470]
[212.56039429 295.85363770]
[197.04536438 295.60211182]
[184.66152954 286.25219727]
[180.17074585 271.39916992]
[185.29980469 256.75430298]
[176.65426636 244.49645996]
[168.00874329 232.23860168]
[153.33364868 229.96322632]
[144.39123535 217.65518188]
[146.87738037 202.27803040]
[138.23184204 190.02017212]
[129.58631897 177.76232910]
[120.94078827 165.50448608]
[109.06145477 163.12773132]
[101.76165009 152.96101379]
[103.40827942 140.14921570]
[94.97920990 127.74152374]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 114]
[16 113]
[17 112]
[18 111]
[20 109]
[21 108]
[22 107]
[23 106]
[25 104]
[26 103]
[27 102]
[33 101]
[34 100]
[36 98]
[37 97]
[40 93]
[41 92]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[50 85]
[51 84]
[53 82]
[54 81]
[56 79]
[57 78]
[58 77]
[59 76]
[61 74]
[62 73]
[63 72]
[64 71]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[120 140]
[125 137]
[126 136]
[127 135]
[128 134]
[129 133]
[146 178]
[147 177]
[149 174]
[150 173]
[151 172]
[152 171]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
